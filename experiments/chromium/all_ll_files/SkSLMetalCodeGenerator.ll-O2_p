; ModuleID = '../../third_party/skia/src/sksl/codegen/SkSLMetalCodeGenerator.cpp'
source_filename = "../../third_party/skia/src/sksl/codegen/SkSLMetalCodeGenerator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.SkSL::Operator" = type { i32 }
%"class.SkSL::MetalCodeGenerator" = type <{ %"class.SkSL::CodeGenerator", %"class.std::__1::unordered_set.109", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.158", i32, i32, i8*, %"class.SkSL::Context"*, %"class.SkSL::String", %"class.SkSL::StringStream", i32, i32, i8, [7 x i8], %"class.std::__1::set", i8, [7 x i8], %"class.std::__1::unordered_map.193", i8, i8, [6 x i8], %"class.std::__1::unordered_set.109", i32, [4 x i8], %"class.SkSL::String", %"class.SkSL::FunctionDeclaration"*, i32, i8, [3 x i8] }>
%"class.SkSL::CodeGenerator" = type { i32 (...)**, %"struct.SkSL::Program"*, %"class.SkSL::ErrorReporter"*, %"class.SkSL::OutputStream"* }
%"struct.SkSL::Program" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.49", %"class.std::__1::unique_ptr.50", %"struct.SkSL::Program::Inputs", %"class.std::__1::vector.62", %"class.std::__1::vector.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::String"* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.SkSL::ProgramConfig"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector"* }
%"class.std::__1::vector" = type opaque
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.49" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.49", %"class.std::__1::vector.269", i8, %"class.std::__1::vector.277", %"class.std::__1::forward_list", %class.SkTHashMap.290, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"class.std::__1::unique_ptr.271"*, %"class.std::__1::unique_ptr.271"*, %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.SkSL::Symbol"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector.13", i32, i32, %"class.std::__1::vector.19", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.21" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.SkSL::Type::Field"* }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.std::__1::unique_ptr.271"* }
%"class.std::__1::vector.277" = type { %"class.std::__1::__vector_base.278" }
%"class.std::__1::__vector_base.278" = type { %"class.std::__1::unique_ptr.279"*, %"class.std::__1::unique_ptr.279"*, %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.std::__1::unique_ptr.279"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.290 = type { %class.SkTHashTable.291 }
%class.SkTHashTable.291 = type { i32, i32, %class.SkAutoTArray.292 }
%class.SkAutoTArray.292 = type { %"class.std::__1::unique_ptr.293" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.362" }
%"struct.std::__1::pair.362" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.SkSL::Pool"* }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr.53" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrMemoryPool* }
%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::unique_ptr.64"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.SkSL::ProgramElement"** }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.SkSL::ModifiersPool"* }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.30", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.46", [4 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64 }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { float }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.SkSL::ProgramUsage"* }
%"class.SkSL::ProgramUsage" = type { %class.SkTHashMap, %class.SkTHashMap.97 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.364", [4 x i8] }
%"struct.std::__1::pair.base.364" = type <{ %"class.SkSL::Variable"*, %"struct.SkSL::ProgramUsage::VariableCounts" }>
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.258" }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"struct.SkSL::ProgramUsage::VariableCounts" = type { i32, i32, i32 }
%class.SkTHashMap.97 = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.366", [4 x i8] }
%"struct.std::__1::pair.base.366" = type <{ %"class.SkSL::FunctionDeclaration"*, i32 }>
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.SkSL::OutputStream" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.134" }
%"class.std::__1::__hash_table.134" = type <{ %"class.std::__1::unique_ptr.135", %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.153", [4 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137", %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::__hash_node_base.138"** }
%"struct.std::__1::__hash_node_base.138" = type { %"struct.std::__1::__hash_node_base.138"* }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.std::__1::__bucket_list_deallocator.140" }
%"class.std::__1::__bucket_list_deallocator.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.std::__1::__hash_node_base.138" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::unordered_map.158" = type { %"class.std::__1::__hash_table.159" }
%"class.std::__1::__hash_table.159" = type <{ %"class.std::__1::unique_ptr.160", %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.180", [4 x i8] }>
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162", %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.std::__1::__hash_node_base.163"** }
%"struct.std::__1::__hash_node_base.163" = type { %"struct.std::__1::__hash_node_base.163"* }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.std::__1::__bucket_list_deallocator.165" }
%"class.std::__1::__bucket_list_deallocator.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::__hash_node_base.163" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.SkSL::Type"* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::StringStream" = type { %"class.SkSL::OutputStream", %class.SkDynamicMemoryWStream, %"class.SkSL::String" }
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%class.SkWStream = type { i32 (...)** }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::unordered_map.193" = type { %"class.std::__1::__hash_table.194" }
%"class.std::__1::__hash_table.194" = type <{ %"class.std::__1::unique_ptr.195", %"class.std::__1::__compressed_pair.205", %"class.std::__1::__compressed_pair.210", %"class.std::__1::__compressed_pair.215", [4 x i8] }>
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197", %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.std::__1::__hash_node_base.198"** }
%"struct.std::__1::__hash_node_base.198" = type { %"struct.std::__1::__hash_node_base.198"* }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.std::__1::__bucket_list_deallocator.200" }
%"class.std::__1::__bucket_list_deallocator.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.std::__1::__hash_node_base.198" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::unordered_set.109" = type { %"class.std::__1::__hash_table.110" }
%"class.std::__1::__hash_table.110" = type <{ %"class.std::__1::unique_ptr.111", %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.129", [4 x i8] }>
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base.114"** }
%"struct.std::__1::__hash_node_base.114" = type { %"struct.std::__1::__hash_node_base.114"* }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.std::__1::__bucket_list_deallocator.116" }
%"class.std::__1::__bucket_list_deallocator.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.std::__1::__hash_node_base.114" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector.256", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.SkSL::FunctionDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, %"class.std::__1::unique_ptr.221", %"class.std::__1::unordered_set.227", %"struct.SkSL::ASTNode"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.SkSL::Statement"* }
%"class.std::__1::unordered_set.227" = type { %"class.std::__1::__hash_table.228" }
%"class.std::__1::__hash_table.228" = type <{ %"class.std::__1::unique_ptr.229", %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.246", [4 x i8] }>
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231", %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::__hash_node_base.232"** }
%"struct.std::__1::__hash_node_base.232" = type { %"struct.std::__1::__hash_node_base.232"* }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.std::__1::__bucket_list_deallocator.234" }
%"class.std::__1::__bucket_list_deallocator.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.std::__1::__hash_node_base.232" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.249"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"class.std::__1::vector.249" = type { %"class.std::__1::__vector_base.250" }
%"class.std::__1::__vector_base.250" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.SkSL::ASTNode"* }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.std::__1::vector.256" = type { %"class.std::__1::__vector_base.257" }
%"class.std::__1::__vector_base.257" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.SkSL::Variable"** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.SkSL::Extension" = type { %"class.SkSL::ProgramElement", %"class.SkSL::String" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.SkSL::StructDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::Type"* }
%"class.SkSL::InterfaceBlock" = type { %"class.SkSL::ProgramElement", %"class.SkSL::Variable"*, %"class.SkSL::String", %"class.SkSL::String", i32, %"class.std::__1::shared_ptr.49" }
%"class.std::__1::tuple.434" = type { %"struct.std::__1::__tuple_impl.435" }
%"struct.std::__1::__tuple_impl.435" = type { %"class.std::__1::__tuple_leaf.436" }
%"class.std::__1::__tuple_leaf.436" = type { %"struct.SkSL::Type::Field"** }
%"class.std::__1::tuple.407" = type { i8 }
%"class.SkSL::MemoryLayout" = type { i32 }
%"class.SkSL::BinaryExpression" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.258", %"class.SkSL::Operator", %"class.std::__1::unique_ptr.258" }
%"class.SkSL::AnyConstructor" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.258" }
%"class.SkSL::ConstructorCompound" = type { %"class.SkSL::MultiArgumentConstructor" }
%"class.SkSL::MultiArgumentConstructor" = type { %"class.SkSL::AnyConstructor", %class.SkSTArray }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.258"*, i64 }
%"class.SkSL::ConstructorMatrixResize" = type { %"class.SkSL::SingleArgumentConstructor", %"class.SkSL::Literal.299", %"class.SkSL::Literal.299" }
%"class.SkSL::SingleArgumentConstructor" = type { %"class.SkSL::AnyConstructor", %"class.std::__1::unique_ptr.258" }
%"class.SkSL::Literal.299" = type <{ %"class.SkSL::Expression", float, [4 x i8] }>
%"class.SkSL::Literal.300" = type { %"class.SkSL::Expression", i64 }
%"class.SkSL::FieldAccess" = type { %"class.SkSL::Expression", i32, i8, %"class.std::__1::unique_ptr.258" }
%"class.SkSL::FunctionCall" = type { %"class.SkSL::Expression", %"class.SkSL::FunctionDeclaration"*, %class.SkSTArray }
%"class.SkSL::PrefixExpression" = type { %"class.SkSL::Expression", %"class.SkSL::Operator", %"class.std::__1::unique_ptr.258" }
%"class.SkSL::PostfixExpression" = type <{ %"class.SkSL::Expression", %"class.std::__1::unique_ptr.258", %"class.SkSL::Operator", [4 x i8] }>
%"class.SkSL::Setting" = type { %"class.SkSL::Expression", %"class.SkSL::String" }
%"struct.SkSL::Swizzle" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.258", %class.SkSTArray.301 }
%class.SkSTArray.301 = type { %class.SkAlignedSTStorage.302, %class.SkTArray.303 }
%class.SkAlignedSTStorage.302 = type { [4 x i8] }
%class.SkTArray.303 = type { i8*, i64 }
%"class.SkSL::VariableReference" = type <{ %"class.SkSL::Expression", %"class.SkSL::Variable"*, i8, [7 x i8] }>
%"class.SkSL::TernaryExpression" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258" }
%"struct.SkSL::IndexExpression" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258" }
%"class.SkSL::Literal" = type <{ %"class.SkSL::Expression", i8, [7 x i8] }>
%"class.std::__1::tuple.419" = type { %"struct.std::__1::__tuple_impl.420" }
%"struct.std::__1::__tuple_impl.420" = type { %"class.std::__1::__tuple_leaf.421" }
%"class.std::__1::__tuple_leaf.421" = type { %"class.SkSL::InterfaceBlock"** }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"struct.SkSL::Type::Field"** }
%class.SkSTArray.331 = type { %class.SkAlignedSTStorage.332, %class.SkTArray.304 }
%class.SkAlignedSTStorage.332 = type { [128 x i8] }
%class.SkTArray.304 = type { %"class.SkSL::VariableReference"**, i64 }
%"struct.SkSL::Analysis::AssignmentInfo" = type { %"class.SkSL::VariableReference"* }
%"class.std::__1::unordered_set.305" = type { %"class.std::__1::__hash_table.306" }
%"class.std::__1::__hash_table.306" = type <{ %"class.std::__1::unique_ptr.307", %"class.std::__1::__compressed_pair.317", %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.326", [4 x i8] }>
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309", %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"struct.std::__1::__hash_node_base.310"** }
%"struct.std::__1::__hash_node_base.310" = type { %"struct.std::__1::__hash_node_base.310"* }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.std::__1::__bucket_list_deallocator.312" }
%"class.std::__1::__bucket_list_deallocator.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.std::__1::__hash_node_base.310" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::tuple.430" = type { %"struct.std::__1::__tuple_impl.431" }
%"struct.std::__1::__tuple_impl.431" = type { %"class.std::__1::__tuple_leaf.432" }
%"class.std::__1::__tuple_leaf.432" = type { %"class.SkSL::InterfaceBlock"** }
%"class.std::__1::tuple.441" = type { %"struct.std::__1::__tuple_impl.442" }
%"struct.std::__1::__tuple_impl.442" = type { %"class.std::__1::__tuple_leaf.443" }
%"class.std::__1::__tuple_leaf.443" = type { %"class.SkSL::FunctionDeclaration"** }
%"class.SkSL::FunctionPrototype" = type <{ %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, [7 x i8] }>
%class.SkScopeExit = type { %"class.std::__1::function" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.SkSL::Block" = type <{ %"class.SkSL::Statement", %class.SkSTArray.341, %"class.std::__1::shared_ptr.49", i8, [7 x i8] }>
%class.SkSTArray.341 = type { %class.SkAlignedSTStorage.342, %class.SkTArray.343 }
%class.SkAlignedSTStorage.342 = type { [16 x i8] }
%class.SkTArray.343 = type { %"class.std::__1::unique_ptr.221"*, i64 }
%class.anon.346 = type <{ %"class.SkSL::MetalCodeGenerator::GlobalStructVisitor", %"class.SkSL::MetalCodeGenerator"*, i8, [7 x i8] }>
%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor" = type { i32 (...)** }
%"class.SkSL::ReturnStatement" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.258" }
%"class.SkSL::IfStatement" = type <{ %"class.SkSL::Statement", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221", i8, [7 x i8] }>
%"class.SkSL::ForStatement" = type { %"class.SkSL::Statement", %"class.std::__1::shared_ptr.49", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.221" }
%"class.SkSL::DoStatement" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.258" }
%"class.SkSL::SwitchStatement" = type { %"class.SkSL::Statement", i8, %"class.std::__1::unique_ptr.258", %class.SkSTArray.341, %"class.std::__1::shared_ptr.49" }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.SkSL::SwitchCase" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.221" }
%"struct.std::__1::__hash_node.371" = type { %"struct.std::__1::__hash_node_base.163", i64, %"struct.std::__1::__hash_value_type.372" }
%"struct.std::__1::__hash_value_type.372" = type { %"struct.std::__1::pair.344" }
%"struct.std::__1::pair.344" = type { %"class.SkSL::InterfaceBlock"*, %"class.SkSL::String" }
%class.anon.345 = type <{ %"class.SkSL::MetalCodeGenerator::GlobalStructVisitor", %"class.SkSL::MetalCodeGenerator"*, i8, [7 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.SkSL::String" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }

$_ZN4SkSL12StringStream9writeTextEPKc = comdat any

$_ZNK4SkSL4Type9slotCountEv = comdat any

$_ZN4SkSL13ErrorReporter5errorEiPKc = comdat any

$_ZNK4SkSL12StringStream3strEv = comdat any

$_ZN4SkSL12StringStreamD2Ev = comdat any

$_ZN4SkSL12MemoryLayout17LayoutIsSupportedERKNS_4TypeE = comdat any

$_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE = comdat any

$_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE = comdat any

$_ZN4SkSL18MetalCodeGenerator19GlobalStructVisitorD2Ev = comdat any

$_ZN4SkSL18MetalCodeGeneratorD2Ev = comdat any

$_ZN4SkSL18MetalCodeGeneratorD0Ev = comdat any

$_ZNK4SkSL12OutputStream7isValidEv = comdat any

$_ZN4SkSL12StringStream6write8Eh = comdat any

$_ZN4SkSL12StringStream5writeEPKvm = comdat any

$_ZN4SkSL12StringStreamD0Ev = comdat any

$_ZNK4SkSL12MemoryLayout6strideERKNS_4TypeE = comdat any

$_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL8VariableENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL8VariableENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL8VariableENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZN8SkTArrayIPN4SkSL17VariableReferenceELb0EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZTVN4SkSL12StringStreamE = comdat any

@.str = private unnamed_addr constant [3 x i8] c"!=\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"#extension \00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c" : enable\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"array<%s, %d>\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"texture2d<float>\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"struct \00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c" {\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"};\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"_skOutParamHelper\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str.17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.18 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c" _var\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c") {\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c" _skResult = \00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"_var\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c");\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c" = _var\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c"return _skResult;\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"as_type<\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"_inverse\00", align 1
@_ZN4SkSLL11kInverse2x2E = internal constant [124 x i8] c"\0Afloat2x2 float2x2_inverse(float2x2 m) {\0A    return float2x2(m[1][1], -m[0][1], -m[1][0], m[0][0]) * (1/determinant(m));\0A}\0A\00", align 16
@_ZN4SkSLL11kInverse3x3E = internal constant [580 x i8] c"\0Afloat3x3 float3x3_inverse(float3x3 m) {\0A    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\0A    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\0A    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\0A    float b01 =  a22*a11 - a12*a21;\0A    float b11 = -a22*a10 + a12*a20;\0A    float b21 =  a21*a10 - a11*a20;\0A    float det = a00*b01 + a01*b11 + a02*b21;\0A    return float3x3(b01, (-a22*a01 + a02*a21), ( a12*a01 - a02*a11),\0A                    b11, ( a22*a00 - a02*a20), (-a12*a00 + a02*a10),\0A                    b21, (-a21*a00 + a01*a20), ( a11*a00 - a01*a10)) * (1/det);\0A}\0A\00", align 16
@_ZN4SkSLL11kInverse4x4E = internal constant [1614 x i8] c"\0Afloat4x4 float4x4_inverse(float4x4 m) {\0A    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3];\0A    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3];\0A    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3];\0A    float a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3];\0A    float b00 = a00*a11 - a01*a10;\0A    float b01 = a00*a12 - a02*a10;\0A    float b02 = a00*a13 - a03*a10;\0A    float b03 = a01*a12 - a02*a11;\0A    float b04 = a01*a13 - a03*a11;\0A    float b05 = a02*a13 - a03*a12;\0A    float b06 = a20*a31 - a21*a30;\0A    float b07 = a20*a32 - a22*a30;\0A    float b08 = a20*a33 - a23*a30;\0A    float b09 = a21*a32 - a22*a31;\0A    float b10 = a21*a33 - a23*a31;\0A    float b11 = a22*a33 - a23*a32;\0A    float det = b00*b11 - b01*b10 + b02*b09 + b03*b08 - b04*b07 + b05*b06;\0A    return float4x4(a11*b11 - a12*b10 + a13*b09,\0A                    a02*b10 - a01*b11 - a03*b09,\0A                    a31*b05 - a32*b04 + a33*b03,\0A                    a22*b04 - a21*b05 - a23*b03,\0A                    a12*b08 - a10*b11 - a13*b07,\0A                    a00*b11 - a02*b08 + a03*b07,\0A                    a32*b02 - a30*b05 - a33*b01,\0A                    a20*b05 - a22*b02 + a23*b01,\0A                    a10*b10 - a11*b08 + a13*b06,\0A                    a01*b08 - a00*b10 - a03*b06,\0A                    a30*b04 - a31*b02 + a33*b00,\0A                    a21*b02 - a20*b04 - a23*b00,\0A                    a11*b07 - a10*b09 - a12*b06,\0A                    a00*b09 - a01*b07 + a02*b06,\0A                    a31*b01 - a30*b03 - a32*b00,\0A                    a20*b03 - a21*b01 + a22*b00) * (1/det);\0A}\0A\00", align 16
@.str.34 = private unnamed_addr constant [8 x i8] c"inverse\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"matrixCompMult\00", align 1
@_ZN4SkSLL15kMatrixCompMultE = internal constant [235 x i8] c"\0Atemplate <int C, int R>\0Amatrix<float, C, R> matrixCompMult(matrix<float, C, R> a, matrix<float, C, R> b) {\0A    matrix<float, C, R> result;\0A    for (int c = 0; c < C; ++c) {\0A        result[c] = a[c] * b[c];\0A    }\0A    return result;\0A}\0A\00", align 16
@.str.36 = private unnamed_addr constant [8 x i8] c"_skTemp\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c";\0A\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c".sample(\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"Smplr\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c".xy / \00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c".z))\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c" - \00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c" * floor(\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c" / \00", align 1
@.str.45 = private unnamed_addr constant [3 x i8] c"))\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"abs(\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c" * \00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"((((\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c") * (\00", align 1
@.str.50 = private unnamed_addr constant [21 x i8] c") < 0) ? 1 : -1) * (\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"length(\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"sign(\00", align 1
@.str.53 = private unnamed_addr constant [11 x i8] c"normalize(\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c"((\00", align 1
@.str.55 = private unnamed_addr constant [16 x i8] c") * 57.2957795)\00", align 1
@.str.56 = private unnamed_addr constant [18 x i8] c") * 0.0174532925)\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"dfdx\00", align 1
@.str.58 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"dfdy\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"rsqrt\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"atan2\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"atan\00", align 1
@.str.63 = private unnamed_addr constant [8 x i8] c" - 2 * \00", align 1
@.str.64 = private unnamed_addr constant [17 x i8] c"(refract(float2(\00", align 1
@.str.65 = private unnamed_addr constant [14 x i8] c", 0), float2(\00", align 1
@.str.66 = private unnamed_addr constant [7 x i8] c", 0), \00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c").x)\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"rint\00", align 1
@.str.69 = private unnamed_addr constant [10 x i8] c"popcount(\00", align 1
@.str.70 = private unnamed_addr constant [5 x i8] c" = (\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"), select(ctz(\00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"), \00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"(-1), \00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c" == \00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"(0)))\00", align 1
@.str.76 = private unnamed_addr constant [12 x i8] c" = (select(\00", align 1
@.str.77 = private unnamed_addr constant [4 x i8] c", ~\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c" < 0)), \00", align 1
@.str.79 = private unnamed_addr constant [8 x i8] c"select(\00", align 1
@.str.80 = private unnamed_addr constant [6 x i8] c"(clz(\00", align 1
@.str.81 = private unnamed_addr constant [5 x i8] c")), \00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c" != \00", align 1
@.str.83 = private unnamed_addr constant [4 x i8] c" < \00", align 1
@.str.84 = private unnamed_addr constant [5 x i8] c" <= \00", align 1
@.str.85 = private unnamed_addr constant [4 x i8] c" > \00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c" >= \00", align 1
@.str.87 = private unnamed_addr constant [67 x i8] c"../../third_party/skia/src/sksl/codegen/SkSLMetalCodeGenerator.cpp\00", align 1
@.str.88 = private unnamed_addr constant [38 x i8] c"unsupported comparison intrinsic kind\00", align 1
@.str.89 = private unnamed_addr constant [11 x i8] c"%sfloat%d(\00", align 1
@.str.90 = private unnamed_addr constant [9 x i8] c"x0[%d].x\00", align 1
@.str.91 = private unnamed_addr constant [10 x i8] c"x0[%d].xy\00", align 1
@.str.92 = private unnamed_addr constant [11 x i8] c"x0[%d].xyz\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"x0[%d].xyzw\00", align 1
@.str.94 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.95 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1
@.str.96 = private unnamed_addr constant [4 x i8] c"0.0\00", align 1
@.str.97 = private unnamed_addr constant [5 x i8] c"x%zu\00", align 1
@.str.98 = private unnamed_addr constant [9 x i8] c"x%zu[%d]\00", align 1
@.str.99 = private unnamed_addr constant [13 x i8] c"x%zu[%d][%d]\00", align 1
@.str.100 = private unnamed_addr constant [8 x i8] c"<error>\00", align 1
@.str.101 = private unnamed_addr constant [10 x i8] c", <error>\00", align 1
@.str.102 = private unnamed_addr constant [16 x i8] c"float%dx%d_from\00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"_%s\00", align 1
@.str.104 = private unnamed_addr constant [15 x i8] c"float%dx%d %s(\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"%s%s x%zu\00", align 1
@.str.106 = private unnamed_addr constant [27 x i8] c") {\0A    return float%dx%d(\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c");\0A}\0A\00", align 1
@.str.108 = private unnamed_addr constant [22 x i8] c"float4(_fragCoord.x, \00", align 1
@.str.109 = private unnamed_addr constant [36 x i8] c" - _fragCoord.y, 0.0, _fragCoord.w)\00", align 1
@.str.110 = private unnamed_addr constant [54 x i8] c"float4(_fragCoord.x, _fragCoord.y, 0.0, _fragCoord.w)\00", align 1
@.str.111 = private unnamed_addr constant [18 x i8] c"_out.sk_FragColor\00", align 1
@.str.112 = private unnamed_addr constant [12 x i8] c"sk_VertexID\00", align 1
@.str.113 = private unnamed_addr constant [14 x i8] c"sk_InstanceID\00", align 1
@.str.114 = private unnamed_addr constant [13 x i8] c"_frontFacing\00", align 1
@.str.115 = private unnamed_addr constant [16 x i8] c"(!_frontFacing)\00", align 1
@.str.116 = private unnamed_addr constant [5 x i8] c"_in.\00", align 1
@.str.117 = private unnamed_addr constant [6 x i8] c"_out.\00", align 1
@.str.118 = private unnamed_addr constant [11 x i8] c"_uniforms.\00", align 1
@.str.119 = private unnamed_addr constant [10 x i8] c"_globals.\00", align 1
@.str.120 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.121 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.122 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.123 = private unnamed_addr constant [17 x i8] c"_out.sk_Position\00", align 1
@.str.124 = private unnamed_addr constant [13 x i8] c"sk_PointSize\00", align 1
@.str.125 = private unnamed_addr constant [18 x i8] c"_out.sk_PointSize\00", align 1
@.str.126 = private unnamed_addr constant [3 x i8] c"->\00", align 1
@.str.127 = private unnamed_addr constant [9 x i8] c"x\00y\00z\00w\00\00", align 1
@.str.128 = private unnamed_addr constant [11 x i8] c"Matrix *= \00", align 1
@.str.129 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.130 = private unnamed_addr constant [110 x i8] c"thread %s& operator*=(thread %s& left, thread const %s& right) {\0A    left = left * right;\0A    return left;\0A}\0A\00", align 1
@.str.131 = private unnamed_addr constant [11 x i8] c"Matrix == \00", align 1
@.str.132 = private unnamed_addr constant [68 x i8] c"thread bool operator==(const %s left, const %s right) {\0A    return \00", align 1
@.str.133 = private unnamed_addr constant [29 x i8] c"%sall(left[%d] == right[%d])\00", align 1
@.str.134 = private unnamed_addr constant [16 x i8] c" &&\0A           \00", align 1
@.str.135 = private unnamed_addr constant [92 x i8] c";\0A}\0Athread bool operator!=(const %s left, const %s right) {\0A    return !(left == right);\0A}\0A\00", align 1
@.str.136 = private unnamed_addr constant [10 x i8] c"Matrix / \00", align 1
@.str.137 = private unnamed_addr constant [68 x i8] c"thread %s operator/(const %s left, const %s right) {\0A    return %s(\00", align 1
@.str.138 = private unnamed_addr constant [23 x i8] c"%sleft[%d] / right[%d]\00", align 1
@.str.139 = private unnamed_addr constant [115 x i8] c");\0A}\0Athread %s& operator/=(thread %s& left, thread const %s& right) {\0A    left = left / right;\0A    return left;\0A}\0A\00", align 1
@.str.140 = private unnamed_addr constant [17 x i8] c"ArrayEquality []\00", align 1
@.str.141 = private unnamed_addr constant [420 x i8] c"\0Atemplate <typename T, size_t N>\0Abool operator==(thread const array<T, N>& left, thread const array<T, N>& right) {\0A    for (size_t index = 0; index < N; ++index) {\0A        if (!(left[index] == right[index])) {\0A            return false;\0A        }\0A    }\0A    return true;\0A}\0A\0Atemplate <typename T, size_t N>\0Abool operator!=(thread const array<T, N>& left, thread const array<T, N>& right) {\0A    return !(left == right);\0A}\0A\00", align 1
@.str.142 = private unnamed_addr constant [16 x i8] c"StructEquality \00", align 1
@.str.143 = private unnamed_addr constant [84 x i8] c"thread bool operator==(thread const %s& left, thread const %s& right) {\0A    return \00", align 1
@.str.144 = private unnamed_addr constant [28 x i8] c"%s(left.%.*s == right.%.*s)\00", align 1
@.str.145 = private unnamed_addr constant [108 x i8] c";\0A}\0Athread bool operator!=(thread const %s& left, thread const %s& right) {\0A    return !(left == right);\0A}\0A\00", align 1
@.str.146 = private unnamed_addr constant [5 x i8] c") * \00", align 1
@.str.147 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.148 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.149 = private unnamed_addr constant [4 x i8] c" ? \00", align 1
@.str.150 = private unnamed_addr constant [4 x i8] c" : \00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.152 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.153 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.154 = private unnamed_addr constant [73 x i8] c"internal error; setting was not folded to a constant during compilation\0A\00", align 1
@.str.155 = private unnamed_addr constant [4 x i8] c"_in\00", align 1
@.str.156 = private unnamed_addr constant [5 x i8] c"_out\00", align 1
@.str.157 = private unnamed_addr constant [10 x i8] c"_uniforms\00", align 1
@.str.158 = private unnamed_addr constant [9 x i8] c"_globals\00", align 1
@.str.159 = private unnamed_addr constant [11 x i8] c"_fragCoord\00", align 1
@.str.160 = private unnamed_addr constant [11 x i8] c"Inputs _in\00", align 1
@.str.161 = private unnamed_addr constant [21 x i8] c"thread Outputs& _out\00", align 1
@.str.162 = private unnamed_addr constant [19 x i8] c"Uniforms _uniforms\00", align 1
@.str.163 = private unnamed_addr constant [25 x i8] c"thread Globals& _globals\00", align 1
@.str.164 = private unnamed_addr constant [18 x i8] c"float4 _fragCoord\00", align 1
@.str.165 = private unnamed_addr constant [39 x i8] c"_globals._anonInterface0->u_skRTHeight\00", align 1
@.str.166 = private unnamed_addr constant [30 x i8] c"fragment Outputs fragmentMain\00", align 1
@.str.167 = private unnamed_addr constant [26 x i8] c"vertex Outputs vertexMain\00", align 1
@.str.168 = private unnamed_addr constant [28 x i8] c"unsupported kind of program\00", align 1
@.str.169 = private unnamed_addr constant [25 x i8] c"(Inputs _in [[stage_in]]\00", align 1
@.str.170 = private unnamed_addr constant [41 x i8] c", constant Uniforms& _uniforms [[buffer(\00", align 1
@.str.171 = private unnamed_addr constant [4 x i8] c")]]\00", align 1
@.str.172 = private unnamed_addr constant [47 x i8] c"Metal samplers must have 'layout(binding=...)'\00", align 1
@.str.173 = private unnamed_addr constant [31 x i8] c"Unsupported texture dimensions\00", align 1
@.str.174 = private unnamed_addr constant [20 x i8] c", texture2d<float> \00", align 1
@.str.175 = private unnamed_addr constant [11 x i8] c"[[texture(\00", align 1
@.str.176 = private unnamed_addr constant [11 x i8] c", sampler \00", align 1
@.str.177 = private unnamed_addr constant [11 x i8] c"[[sampler(\00", align 1
@.str.178 = private unnamed_addr constant [13 x i8] c"sk_PerVertex\00", align 1
@.str.179 = private unnamed_addr constant [12 x i8] c", constant \00", align 1
@.str.180 = private unnamed_addr constant [3 x i8] c"& \00", align 1
@.str.181 = private unnamed_addr constant [11 x i8] c" [[buffer(\00", align 1
@.str.182 = private unnamed_addr constant [66 x i8] c", constant sksl_synthetic_uniforms& _anonInterface0 [[buffer(1)]]\00", align 1
@.str.183 = private unnamed_addr constant [29 x i8] c"_anonInterface0.u_skRTHeight\00", align 1
@.str.184 = private unnamed_addr constant [37 x i8] c", bool _frontFacing [[front_facing]]\00", align 1
@.str.185 = private unnamed_addr constant [33 x i8] c", float4 _fragCoord [[position]]\00", align 1
@.str.186 = private unnamed_addr constant [69 x i8] c", uint sk_VertexID [[vertex_id]], uint sk_InstanceID [[instance_id]]\00", align 1
@.str.187 = private unnamed_addr constant [18 x i8] c"    Outputs _out;\00", align 1
@.str.188 = private unnamed_addr constant [16 x i8] c"    (void)_out;\00", align 1
@.str.189 = private unnamed_addr constant [8 x i8] c"thread \00", align 1
@.str.190 = private unnamed_addr constant [7 x i8] c"const \00", align 1
@.str.191 = private unnamed_addr constant [20 x i8] c"float u_skRTHeight;\00", align 1
@.str.192 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@.str.193 = private unnamed_addr constant [15 x i8] c"_anonInterface\00", align 1
@.str.194 = private unnamed_addr constant [7 x i8] c"type '\00", align 1
@.str.195 = private unnamed_addr constant [24 x i8] c"' is not permitted here\00", align 1
@.str.196 = private unnamed_addr constant [18 x i8] c"offset of field '\00", align 1
@.str.197 = private unnamed_addr constant [20 x i8] c"' must be at least \00", align 1
@.str.198 = private unnamed_addr constant [9 x i8] c"char pad\00", align 1
@.str.199 = private unnamed_addr constant [3 x i8] c"];\00", align 1
@.str.200 = private unnamed_addr constant [25 x i8] c"' must be a multiple of \00", align 1
@.str.201 = private unnamed_addr constant [22 x i8] c"field offset overflow\00", align 1
@.str.202 = private unnamed_addr constant [7 x i8] c"break;\00", align 1
@.str.203 = private unnamed_addr constant [10 x i8] c"continue;\00", align 1
@.str.204 = private unnamed_addr constant [20 x i8] c"discard_fragment();\00", align 1
@.str.205 = private unnamed_addr constant [5 x i8] c"if (\00", align 1
@.str.206 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.207 = private unnamed_addr constant [7 x i8] c" else \00", align 1
@.str.208 = private unnamed_addr constant [8 x i8] c"while (\00", align 1
@.str.209 = private unnamed_addr constant [6 x i8] c"for (\00", align 1
@.str.210 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@.str.211 = private unnamed_addr constant [4 x i8] c"do \00", align 1
@.str.212 = private unnamed_addr constant [9 x i8] c" while (\00", align 1
@.str.213 = private unnamed_addr constant [9 x i8] c"switch (\00", align 1
@.str.214 = private unnamed_addr constant [6 x i8] c"case \00", align 1
@.str.215 = private unnamed_addr constant [9 x i8] c"default:\00", align 1
@.str.216 = private unnamed_addr constant [13 x i8] c"return _out;\00", align 1
@.str.217 = private unnamed_addr constant [57 x i8] c"return (_out.sk_Position.y = -_out.sk_Position.y, _out);\00", align 1
@.str.218 = private unnamed_addr constant [21 x i8] c"_out.sk_FragColor = \00", align 1
@.str.219 = private unnamed_addr constant [35 x i8] c"Metal does not support returning '\00", align 1
@.str.220 = private unnamed_addr constant [14 x i8] c"' from main()\00", align 1
@.str.221 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.222 = private unnamed_addr constant [25 x i8] c"#include <metal_stdlib>\0A\00", align 1
@.str.223 = private unnamed_addr constant [24 x i8] c"#include <simd/simd.h>\0A\00", align 1
@.str.224 = private unnamed_addr constant [24 x i8] c"using namespace metal;\0A\00", align 1
@.str.225 = private unnamed_addr constant [19 x i8] c"struct Uniforms {\0A\00", align 1
@.str.226 = private unnamed_addr constant [71 x i8] c"Metal backend requires all uniforms to have the same 'layout(set=...)'\00", align 1
@.str.227 = private unnamed_addr constant [4 x i8] c"};\0A\00", align 1
@.str.228 = private unnamed_addr constant [17 x i8] c"struct Inputs {\0A\00", align 1
@.str.229 = private unnamed_addr constant [15 x i8] c"  [[attribute(\00", align 1
@.str.230 = private unnamed_addr constant [14 x i8] c"  [[user(locn\00", align 1
@.str.231 = private unnamed_addr constant [18 x i8] c"struct Outputs {\0A\00", align 1
@.str.232 = private unnamed_addr constant [38 x i8] c"    float4 sk_Position [[position]];\0A\00", align 1
@.str.233 = private unnamed_addr constant [39 x i8] c"    float4 sk_FragColor [[color(0)]];\0A\00", align 1
@.str.234 = private unnamed_addr constant [53 x i8] c"Metal out variables must have 'layout(location=...)'\00", align 1
@.str.235 = private unnamed_addr constant [13 x i8] c" [[user(locn\00", align 1
@.str.236 = private unnamed_addr constant [10 x i8] c" [[color(\00", align 1
@.str.237 = private unnamed_addr constant [9 x i8] c", index(\00", align 1
@.str.238 = private unnamed_addr constant [3 x i8] c"]]\00", align 1
@.str.239 = private unnamed_addr constant [40 x i8] c"    float sk_PointSize [[point_size]];\0A\00", align 1
@.str.240 = private unnamed_addr constant [33 x i8] c"struct sksl_synthetic_uniforms {\00", align 1
@.str.241 = private unnamed_addr constant [24 x i8] c"    float u_skRTHeight;\00", align 1
@_ZTVN4SkSL18MetalCodeGeneratorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::MetalCodeGenerator"*)* @_ZN4SkSL18MetalCodeGeneratorD2Ev to i8*), i8* bitcast (void (%"class.SkSL::MetalCodeGenerator"*)* @_ZN4SkSL18MetalCodeGeneratorD0Ev to i8*), i8* bitcast (i1 (%"class.SkSL::MetalCodeGenerator"*)* @_ZN4SkSL18MetalCodeGenerator12generateCodeEv to i8*)] }, align 8
@_ZTVN4SkSL12StringStreamE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.SkSL::OutputStream"*)* @_ZNK4SkSL12OutputStream7isValidEv to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8)* @_ZN4SkSL12StringStream6write8Eh to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8*)* @_ZN4SkSL12StringStream9writeTextEPKc to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8*, i64)* @_ZN4SkSL12StringStream5writeEPKvm to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*)* @_ZN4SkSL12StringStreamD2Ev to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*)* @_ZN4SkSL12StringStreamD0Ev to i8*)] }, comdat, align 8
@_ZTV22SkDynamicMemoryWStream = external unnamed_addr constant { [7 x i8*] }, align 8
@.str.243 = private unnamed_addr constant [51 x i8] c"../../third_party/skia/src/sksl/SkSLMemoryLayout.h\00", align 1
@.str.244 = private unnamed_addr constant [33 x i8] c"cannot determine size of type %s\00", align 1
@.str.245 = private unnamed_addr constant [28 x i8] c"type does not have a stride\00", align 1
@"_ZTVZN4SkSL18MetalCodeGenerator17writeGlobalStructEvE3$_0" = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*)* @_ZN4SkSL18MetalCodeGenerator19GlobalStructVisitorD2Ev to i8*), i8* bitcast (void (%class.anon.345*)* @"_ZZN4SkSL18MetalCodeGenerator17writeGlobalStructEvEN3$_0D0Ev" to i8*), i8* bitcast (void (%class.anon.345*, %"class.SkSL::InterfaceBlock"*, %"class.SkSL::String"*)* @"_ZZN4SkSL18MetalCodeGenerator17writeGlobalStructEvEN3$_019visitInterfaceBlockERKNS_14InterfaceBlockERKNS_6StringE" to i8*), i8* bitcast (void (%class.anon.345*, %"class.SkSL::Type"*, %"class.SkSL::String"*)* @"_ZZN4SkSL18MetalCodeGenerator17writeGlobalStructEvEN3$_012visitTextureERKNS_4TypeERKNS_6StringE" to i8*), i8* bitcast (void (%class.anon.345*, %"class.SkSL::Type"*, %"class.SkSL::String"*)* @"_ZZN4SkSL18MetalCodeGenerator17writeGlobalStructEvEN3$_012visitSamplerERKNS_4TypeERKNS_6StringE" to i8*), i8* bitcast (void (%class.anon.345*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)* @"_ZZN4SkSL18MetalCodeGenerator17writeGlobalStructEvEN3$_013visitVariableERKNS_8VariableEPKNS_10ExpressionE" to i8*)] }, align 8
@.str.246 = private unnamed_addr constant [14 x i8] c"    constant \00", align 1
@.str.247 = private unnamed_addr constant [3 x i8] c"* \00", align 1
@.str.248 = private unnamed_addr constant [18 x i8] c"struct Globals {\0A\00", align 1
@.str.249 = private unnamed_addr constant [13 x i8] c"    sampler \00", align 1
@"_ZTVZN4SkSL18MetalCodeGenerator15writeGlobalInitEvE3$_1" = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*)* @_ZN4SkSL18MetalCodeGenerator19GlobalStructVisitorD2Ev to i8*), i8* bitcast (void (%class.anon.346*)* @"_ZZN4SkSL18MetalCodeGenerator15writeGlobalInitEvEN3$_1D0Ev" to i8*), i8* bitcast (void (%class.anon.346*, %"class.SkSL::InterfaceBlock"*, %"class.SkSL::String"*)* @"_ZZN4SkSL18MetalCodeGenerator15writeGlobalInitEvEN3$_119visitInterfaceBlockERKNS_14InterfaceBlockERKNS_6StringE" to i8*), i8* bitcast (void (%class.anon.346*, %"class.SkSL::Type"*, %"class.SkSL::String"*)* @"_ZZN4SkSL18MetalCodeGenerator15writeGlobalInitEvEN3$_112visitTextureERKNS_4TypeERKNS_6StringE" to i8*), i8* bitcast (void (%class.anon.346*, %"class.SkSL::Type"*, %"class.SkSL::String"*)* @"_ZZN4SkSL18MetalCodeGenerator15writeGlobalInitEvEN3$_112visitSamplerERKNS_4TypeERKNS_6StringE" to i8*), i8* bitcast (void (%class.anon.346*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)* @"_ZZN4SkSL18MetalCodeGenerator15writeGlobalInitEvEN3$_113visitVariableERKNS_8VariableEPKNS_10ExpressionE" to i8*)] }, align 8
@.str.250 = private unnamed_addr constant [22 x i8] c"    Globals _globals{\00", align 1
@.str.251 = private unnamed_addr constant [3 x i8] c"{}\00", align 1
@.str.252 = private unnamed_addr constant [20 x i8] c"    (void)_globals;\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4SkSL18MetalCodeGenerator13writeFunctionERKNS4_18FunctionDefinitionEE3$_2FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4SkSL18MetalCodeGenerator12OperatorNameENS_8OperatorE(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::Operator", align 4
  %3 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %2, i64 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = icmp eq i32 %0, 58
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %2) #17
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i8* [ %6, %5 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %1 ]
  ret i8* %8
}

declare i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator5writeEPKc(%"class.SkSL::MetalCodeGenerator"* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %32, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %15

15:                                               ; preds = %13, %15
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  %17 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %14, align 8
  %18 = bitcast %"class.SkSL::OutputStream"* %17 to void (%"class.SkSL::OutputStream"*, i8*)***
  %19 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, i64 2
  %21 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %20, align 8
  tail call void %21(%"class.SkSL::OutputStream"* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %22 = add nuw nsw i32 %16, 1
  %23 = load i32, i32* %10, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %15, label %25

25:                                               ; preds = %15, %9, %5
  %26 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %27 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %28 = bitcast %"class.SkSL::OutputStream"* %27 to void (%"class.SkSL::OutputStream"*, i8*)***
  %29 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, i64 2
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, align 8
  tail call void %31(%"class.SkSL::OutputStream"* %27, i8* %1) #17
  store i8 0, i8* %6, align 8
  br label %32

32:                                               ; preds = %2, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator9writeLineEPKc(%"class.SkSL::MetalCodeGenerator"* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %32, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  %17 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %14, align 8
  %18 = bitcast %"class.SkSL::OutputStream"* %17 to void (%"class.SkSL::OutputStream"*, i8*)***
  %19 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, i64 2
  %21 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %20, align 8
  tail call void %21(%"class.SkSL::OutputStream"* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %22 = add nuw nsw i32 %16, 1
  %23 = load i32, i32* %10, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %15, label %25

25:                                               ; preds = %15, %9, %5
  %26 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %27 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %28 = bitcast %"class.SkSL::OutputStream"* %27 to void (%"class.SkSL::OutputStream"*, i8*)***
  %29 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, i64 2
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, align 8
  tail call void %31(%"class.SkSL::OutputStream"* %27, i8* %1) #17
  store i8 0, i8* %6, align 8
  br label %32

32:                                               ; preds = %2, %25
  %33 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %34 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %35 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.SkSL::OutputStream"* %34 to void (%"class.SkSL::OutputStream"*, i8*)***
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %38, i64 2
  %40 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %39, align 8
  tail call void %40(%"class.SkSL::OutputStream"* %34, i8* %36) #17
  %41 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  store i8 1, i8* %41, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator9writeLineEv(%"class.SkSL::MetalCodeGenerator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %3 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2, align 8
  %4 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*)***
  %7 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %7, i64 2
  %9 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %8, align 8
  tail call void %9(%"class.SkSL::OutputStream"* %3, i8* %5) #17
  %10 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  store i8 1, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator5writeERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* nocapture, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.SkSL::String"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %40, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i32 [ 0, %21 ], [ %30, %23 ]
  %25 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %22, align 8
  %26 = bitcast %"class.SkSL::OutputStream"* %25 to void (%"class.SkSL::OutputStream"*, i8*)***
  %27 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, i64 2
  %29 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, align 8
  tail call void %29(%"class.SkSL::OutputStream"* %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %30 = add nuw nsw i32 %24, 1
  %31 = load i32, i32* %18, align 4
  %32 = icmp slt i32 %30, %31
  br i1 %32, label %23, label %33

33:                                               ; preds = %23, %17, %13
  %34 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %35 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %34, align 8
  %36 = bitcast %"class.SkSL::OutputStream"* %35 to void (%"class.SkSL::OutputStream"*, i8*)***
  %37 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %37, i64 2
  %39 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %38, align 8
  tail call void %39(%"class.SkSL::OutputStream"* %35, i8* %10) #17
  store i8 0, i8* %14, align 8
  br label %40

40:                                               ; preds = %2, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator9writeLineERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* nocapture, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.SkSL::String"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %40, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i32 [ 0, %21 ], [ %30, %23 ]
  %25 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %22, align 8
  %26 = bitcast %"class.SkSL::OutputStream"* %25 to void (%"class.SkSL::OutputStream"*, i8*)***
  %27 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, i64 2
  %29 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, align 8
  tail call void %29(%"class.SkSL::OutputStream"* %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %30 = add nuw nsw i32 %24, 1
  %31 = load i32, i32* %18, align 4
  %32 = icmp slt i32 %30, %31
  br i1 %32, label %23, label %33

33:                                               ; preds = %23, %17, %13
  %34 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %35 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %34, align 8
  %36 = bitcast %"class.SkSL::OutputStream"* %35 to void (%"class.SkSL::OutputStream"*, i8*)***
  %37 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %37, i64 2
  %39 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %38, align 8
  tail call void %39(%"class.SkSL::OutputStream"* %35, i8* %10) #17
  store i8 0, i8* %14, align 8
  br label %40

40:                                               ; preds = %2, %33
  %41 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %42 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %43 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"class.SkSL::OutputStream"* %42 to void (%"class.SkSL::OutputStream"*, i8*)***
  %46 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %46, i64 2
  %48 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %47, align 8
  tail call void %48(%"class.SkSL::OutputStream"* %42, i8* %44) #17
  %49 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  store i8 1, i8* %49, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator10finishLineEv(%"class.SkSL::MetalCodeGenerator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %7 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*)***
  %11 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %11, i64 2
  %13 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %12, align 8
  tail call void %13(%"class.SkSL::OutputStream"* %7, i8* %9) #17
  store i8 1, i8* %2, align 8
  br label %14

14:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator14writeExtensionERKNS_9ExtensionE(%"class.SkSL::MetalCodeGenerator"* nocapture, %"class.SkSL::Extension"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.SkSL::Extension", %"class.SkSL::Extension"* %1, i64 0, i32 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %7) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)) #17
  %8 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = select i1 %11, i8* %13, i8* %5
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %44, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %37, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i32 [ 0, %25 ], [ %34, %27 ]
  %29 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %30 = bitcast %"class.SkSL::OutputStream"* %29 to void (%"class.SkSL::OutputStream"*, i8*)***
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, i64 2
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %32, align 8
  call void %33(%"class.SkSL::OutputStream"* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %34 = add nuw nsw i32 %28, 1
  %35 = load i32, i32* %22, align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %27, label %37

37:                                               ; preds = %27, %21, %17
  %38 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %39 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %38, align 8
  %40 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*)***
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %41, i64 2
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %42, align 8
  call void %43(%"class.SkSL::OutputStream"* %39, i8* %14) #17
  store i8 0, i8* %18, align 8
  br label %44

44:                                               ; preds = %2, %37
  %45 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %46 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %45, align 8
  %47 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %"class.SkSL::OutputStream"* %46 to void (%"class.SkSL::OutputStream"*, i8*)***
  %50 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %50, i64 2
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %51, align 8
  call void %52(%"class.SkSL::OutputStream"* %46, i8* %48) #17
  %53 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  store i8 1, i8* %53, align 8
  %54 = load i8, i8* %9, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %44
  %57 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %57) #18
  br label %58

58:                                               ; preds = %44, %56
  %59 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %58, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* noalias sret, %"class.SkSL::MetalCodeGenerator"* readonly, %"class.SkSL::Type"* readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %125 [
    i32 0, label %15
    i32 11, label %35
    i32 4, label %60
    i32 6, label %114
    i32 1, label %120
  ]

15:                                               ; preds = %3
  %16 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %18 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %17, align 8
  %19 = icmp eq %"class.SkSL::Type"* %18, null
  %20 = select i1 %19, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %18
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %20)
  %21 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* %16
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  %29 = load i32, i32* %28, align 8
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8* %27, i32 %29) #17
  %30 = load i8, i8* %22, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %15
  %33 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %33) #18
  br label %34

34:                                               ; preds = %15, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #17
  br label %200

35:                                               ; preds = %3
  %36 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #17
  %37 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %38 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %37, align 8
  %39 = icmp eq %"class.SkSL::Type"* %38, null
  %40 = select i1 %39, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %38
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %40)
  %41 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  %43 = load i32, i32* %42, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %7, i32 %43) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %6, %"class.SkSL::String"* nonnull dereferenceable(24) %7) #17
  %44 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %35
  %49 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #18
  br label %51

51:                                               ; preds = %35, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #17
  %52 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #18
  br label %59

59:                                               ; preds = %51, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #17
  br label %200

60:                                               ; preds = %3
  %61 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #17
  %62 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #17
  %63 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #17
  %64 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %65 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %64, align 8
  %66 = icmp eq %"class.SkSL::Type"* %65, null
  %67 = select i1 %66, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %65
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %67)
  %68 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #17
  %69 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  %70 = load i32, i32* %69, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %11, i32 %70) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::String"* nonnull %10, %"class.SkSL::String"* nonnull dereferenceable(24) %11) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #17
  %71 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #17
  %72 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 9
  %73 = load i32, i32* %72, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %12, i32 %73) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %8, %"class.SkSL::String"* nonnull dereferenceable(24) %12) #17
  %74 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %60
  %79 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #18
  br label %81

81:                                               ; preds = %60, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #17
  %82 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %88) #18
  br label %89

89:                                               ; preds = %81, %86
  %90 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #18
  br label %97

97:                                               ; preds = %89, %94
  %98 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %104) #18
  br label %105

105:                                              ; preds = %97, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #17
  %106 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %112) #18
  br label %113

113:                                              ; preds = %105, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #17
  br label %200

114:                                              ; preds = %3
  %115 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  store i8 16, i8* %116, align 1
  %117 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i64 16, i1 false) #17
  %118 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %119 = bitcast i64* %118 to i8*
  store i8 0, i8* %119, align 8
  br label %200

120:                                              ; preds = %3
  %121 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  store i8 3, i8* %122, align 1
  %123 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3, i1 false) #17
  %124 = getelementptr inbounds i8, i8* %123, i64 3
  store i8 0, i8* %124, align 1
  br label %200

125:                                              ; preds = %3
  %126 = bitcast <2 x i64>* %4 to %"struct.SkSL::StringFragment"*
  %127 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 7
  %128 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %127, align 8
  %129 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %128, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %130 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %129, align 8
  %131 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #17
  %132 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 0
  %133 = bitcast i8** %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8
  store <2 x i64> %134, <2 x i64>* %4, align 16
  %135 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %130, i64 0, i32 0, i32 1, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %130, i64 0, i32 0, i32 1, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %126, i8* %136, i64 %138) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #17
  br i1 %139, label %140, label %172

140:                                              ; preds = %125
  %141 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %127, align 8
  %142 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %142, align 8
  %144 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %143, i64 0, i32 0, i32 1, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %143, i64 0, i32 0, i32 1, i32 1
  %147 = load i64, i64* %146, align 8
  %148 = icmp ugt i64 %147, -17
  br i1 %148, label %149, label %151

149:                                              ; preds = %140
  %150 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %150) #19
  unreachable

151:                                              ; preds = %140
  %152 = icmp ult i64 %147, 23
  br i1 %152, label %161, label %153

153:                                              ; preds = %151
  %154 = add nuw i64 %147, 16
  %155 = and i64 %154, -16
  %156 = call i8* @_Znwm(i64 %155) #18
  %157 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %156, i8** %157, align 8
  %158 = or i64 %155, -9223372036854775808
  %159 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %147, i64* %160, align 8
  br label %167

161:                                              ; preds = %151
  %162 = trunc i64 %147 to i8
  %163 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  store i8 %162, i8* %164, align 1
  %165 = bitcast %"class.SkSL::String"* %0 to i8*
  %166 = icmp eq i64 %147, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %161, %153
  %168 = phi i8* [ %156, %153 ], [ %165, %161 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %168, i8* align 1 %145, i64 %147, i1 false) #17
  br label %169

169:                                              ; preds = %161, %167
  %170 = phi i8* [ %165, %161 ], [ %168, %167 ]
  %171 = getelementptr inbounds i8, i8* %170, i64 %147
  store i8 0, i8* %171, align 1
  br label %200

172:                                              ; preds = %125
  %173 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 1
  %174 = load i8*, i8** %132, align 8
  %175 = load i64, i64* %173, align 8
  %176 = icmp ugt i64 %175, -17
  br i1 %176, label %177, label %179

177:                                              ; preds = %172
  %178 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %178) #19
  unreachable

179:                                              ; preds = %172
  %180 = icmp ult i64 %175, 23
  br i1 %180, label %189, label %181

181:                                              ; preds = %179
  %182 = add nuw i64 %175, 16
  %183 = and i64 %182, -16
  %184 = call i8* @_Znwm(i64 %183) #18
  %185 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %184, i8** %185, align 8
  %186 = or i64 %183, -9223372036854775808
  %187 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %186, i64* %187, align 8
  %188 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %175, i64* %188, align 8
  br label %195

189:                                              ; preds = %179
  %190 = trunc i64 %175 to i8
  %191 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  store i8 %190, i8* %192, align 1
  %193 = bitcast %"class.SkSL::String"* %0 to i8*
  %194 = icmp eq i64 %175, 0
  br i1 %194, label %197, label %195

195:                                              ; preds = %189, %181
  %196 = phi i8* [ %184, %181 ], [ %193, %189 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %196, i8* align 1 %174, i64 %175, i1 false) #17
  br label %197

197:                                              ; preds = %189, %195
  %198 = phi i8* [ %193, %189 ], [ %196, %195 ]
  %199 = getelementptr inbounds i8, i8* %198, i64 %175
  store i8 0, i8* %199, align 1
  br label %200

200:                                              ; preds = %197, %169, %120, %114, %113, %59, %34
  ret void
}

declare void @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret, i8*, ...) local_unnamed_addr #1

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator21writeStructDefinitionERKNS_16StructDefinitionE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::StructDefinition"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"class.SkSL::StructDefinition", %"class.SkSL::StructDefinition"* %1, i64 0, i32 1
  %7 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %6, align 8
  %8 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #17
  %9 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #17
  %10 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 0, i32 1, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 0, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #19
  unreachable

18:                                               ; preds = %2
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %28, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #18
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  br label %33

28:                                               ; preds = %18
  %29 = trunc i64 %14 to i8
  %30 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1
  %32 = icmp eq i64 %14, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %28, %20
  %34 = phi i8* [ %23, %20 ], [ %10, %28 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 %12, i64 %14, i1 false) #17
  br label %35

35:                                               ; preds = %28, %33
  %36 = phi i8* [ %10, %28 ], [ %34, %33 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %14
  store i8 0, i8* %37, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %5) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #17
  %38 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = select i1 %41, i8* %43, i8* %8
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %67, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i32 [ 0, %55 ], [ %64, %57 ]
  %59 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %56, align 8
  %60 = bitcast %"class.SkSL::OutputStream"* %59 to void (%"class.SkSL::OutputStream"*, i8*)***
  %61 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %61, i64 2
  %63 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %62, align 8
  call void %63(%"class.SkSL::OutputStream"* %59, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %64 = add nuw nsw i32 %58, 1
  %65 = load i32, i32* %52, align 4
  %66 = icmp slt i32 %64, %65
  br i1 %66, label %57, label %67

67:                                               ; preds = %57, %51, %47
  %68 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %69 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %68, align 8
  %70 = bitcast %"class.SkSL::OutputStream"* %69 to void (%"class.SkSL::OutputStream"*, i8*)***
  %71 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %71, i64 2
  %73 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %72, align 8
  call void %73(%"class.SkSL::OutputStream"* %69, i8* %44) #17
  store i8 0, i8* %48, align 8
  br label %74

74:                                               ; preds = %35, %67
  %75 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %76 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %75, align 8
  %77 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast %"class.SkSL::OutputStream"* %76 to void (%"class.SkSL::OutputStream"*, i8*)***
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %80, i64 2
  %82 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %81, align 8
  call void %82(%"class.SkSL::OutputStream"* %76, i8* %78) #17
  %83 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  store i8 1, i8* %83, align 8
  %84 = load i8, i8* %39, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %74
  %87 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %87) #18
  br label %88

88:                                               ; preds = %74, %86
  %89 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #18
  br label %96

96:                                               ; preds = %88, %93
  %97 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #18
  br label %104

104:                                              ; preds = %96, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #17
  %105 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %106 = load i32, i32* %105, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 10
  %109 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 0, i32 0, i32 1
  %110 = load i32, i32* %109, align 8
  call void @_ZN4SkSL18MetalCodeGenerator11writeFieldsERKNSt3__16vectorINS_4Type5FieldENS1_9allocatorIS4_EEEEiPKNS_14InterfaceBlockE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.std::__1::vector.19"* dereferenceable(24) %108, i32 %110, %"class.SkSL::InterfaceBlock"* null)
  %111 = load i32, i32* %105, align 4
  %112 = add nsw i32 %111, -1
  store i32 %112, i32* %105, align 4
  %113 = load i8, i8* %83, align 8, !range !2
  %114 = icmp ne i8 %113, 0
  %115 = icmp sgt i32 %112, 0
  %116 = and i1 %115, %114
  br i1 %116, label %117, label %127

117:                                              ; preds = %104, %117
  %118 = phi i32 [ %124, %117 ], [ 0, %104 ]
  %119 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %75, align 8
  %120 = bitcast %"class.SkSL::OutputStream"* %119 to void (%"class.SkSL::OutputStream"*, i8*)***
  %121 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %121, i64 2
  %123 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %122, align 8
  call void %123(%"class.SkSL::OutputStream"* %119, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %124 = add nuw nsw i32 %118, 1
  %125 = load i32, i32* %105, align 4
  %126 = icmp slt i32 %124, %125
  br i1 %126, label %117, label %127

127:                                              ; preds = %117, %104
  %128 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %75, align 8
  %129 = bitcast %"class.SkSL::OutputStream"* %128 to void (%"class.SkSL::OutputStream"*, i8*)***
  %130 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %130, i64 2
  %132 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %131, align 8
  call void %132(%"class.SkSL::OutputStream"* %128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #17
  store i8 0, i8* %83, align 8
  %133 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %75, align 8
  %134 = load i8*, i8** %77, align 8
  %135 = bitcast %"class.SkSL::OutputStream"* %133 to void (%"class.SkSL::OutputStream"*, i8*)***
  %136 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %136, i64 2
  %138 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %137, align 8
  call void %138(%"class.SkSL::OutputStream"* %133, i8* %134) #17
  store i8 1, i8* %83, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator11writeFieldsERKNSt3__16vectorINS_4Type5FieldENS1_9allocatorIS4_EEEEiPKNS_14InterfaceBlockE(%"class.SkSL::MetalCodeGenerator"*, %"class.std::__1::vector.19"* nocapture readonly dereferenceable(24), i32, %"class.SkSL::InterfaceBlock"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.std::__1::tuple.434", align 8
  %7 = alloca %"class.std::__1::tuple.407", align 1
  %8 = alloca %"class.SkSL::MemoryLayout", align 4
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"struct.SkSL::Type::Field"*, align 8
  %26 = bitcast %"class.SkSL::MemoryLayout"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #17
  %27 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %8, i64 0, i32 0
  store i32 2, i32* %27, align 4
  %28 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %1, i64 0, i32 0, i32 0
  %29 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %1, i64 0, i32 0, i32 1
  %31 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %30, align 8
  %32 = icmp eq %"struct.SkSL::Type::Field"* %29, %31
  br i1 %32, label %575, label %33

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %35 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %36 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %37 = bitcast %"class.SkSL::String"* %17 to i8*
  %38 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 5
  %39 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.SkSL::String"* %18 to i8*
  %43 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %47 = bitcast %"class.SkSL::String"* %5 to i8*
  %48 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.SkSL::String"* %24 to i8*
  %52 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = icmp eq %"class.SkSL::InterfaceBlock"* %3, null
  %58 = bitcast %"struct.SkSL::Type::Field"** %25 to i8*
  %59 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 2, i32 0
  %60 = bitcast %"class.std::__1::tuple.434"* %6 to i8*
  %61 = getelementptr inbounds %"class.std::__1::tuple.434", %"class.std::__1::tuple.434"* %6, i64 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::tuple.407", %"class.std::__1::tuple.407"* %7, i64 0, i32 0
  br label %63

63:                                               ; preds = %33, %572
  %64 = phi i32 [ 0, %33 ], [ %456, %572 ]
  %65 = phi %"struct.SkSL::Type::Field"* [ %29, %33 ], [ %573, %572 ]
  %66 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %65, i64 0, i32 0
  %67 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %65, i64 0, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %65, i64 0, i32 2
  %70 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %69, align 8
  %71 = call i64 @_ZN4SkSL12MemoryLayout17LayoutIsSupportedERKNS_4TypeE(%"class.SkSL::Type"* dereferenceable(184) %70)
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %133

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 2
  %75 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %74, align 8
  %76 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #17
  %77 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #17
  %78 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %70, i64 0, i32 0, i32 1, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %70, i64 0, i32 0, i32 1, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ugt i64 %81, -17
  br i1 %82, label %83, label %85

83:                                               ; preds = %73
  %84 = bitcast %"class.SkSL::String"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %84) #19
  unreachable

85:                                               ; preds = %73
  %86 = icmp ult i64 %81, 23
  br i1 %86, label %95, label %87

87:                                               ; preds = %85
  %88 = add nuw i64 %81, 16
  %89 = and i64 %88, -16
  %90 = call i8* @_Znwm(i64 %89) #18
  %91 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %90, i8** %91, align 8
  %92 = or i64 %89, -9223372036854775808
  %93 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %81, i64* %94, align 8
  br label %100

95:                                               ; preds = %85
  %96 = trunc i64 %81 to i8
  %97 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  store i8 %96, i8* %98, align 1
  %99 = icmp eq i64 %81, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %95, %87
  %101 = phi i8* [ %90, %87 ], [ %77, %95 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %101, i8* align 1 %79, i64 %81, i1 false) #17
  br label %102

102:                                              ; preds = %95, %100
  %103 = phi i8* [ %77, %95 ], [ %101, %100 ]
  %104 = getelementptr inbounds i8, i8* %103, i64 %81
  store i8 0, i8* %104, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.194, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %11) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::String"* nonnull %10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.195, i64 0, i64 0)) #17
  %105 = bitcast %"class.SkSL::ErrorReporter"* %75 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %106 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %106, i64 2
  %108 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %107, align 8
  call void %108(%"class.SkSL::ErrorReporter"* %75, i32 %2, %"class.SkSL::String"* nonnull %9) #17
  %109 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %102
  %114 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %115) #18
  br label %116

116:                                              ; preds = %102, %113
  %117 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #18
  br label %124

124:                                              ; preds = %116, %121
  %125 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %131) #18
  br label %132

132:                                              ; preds = %124, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #17
  br label %575

133:                                              ; preds = %63
  %134 = icmp eq i32 %68, -1
  br i1 %134, label %445, label %135

135:                                              ; preds = %133
  %136 = icmp slt i32 %68, %64
  br i1 %136, label %137, label %215

137:                                              ; preds = %135
  %138 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 2
  %139 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %138, align 8
  %140 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #17
  %141 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #17
  %142 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #17
  %143 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %65, i64 0, i32 1, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %65, i64 0, i32 1, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = icmp ugt i64 %146, -17
  br i1 %147, label %148, label %150

148:                                              ; preds = %137
  %149 = bitcast %"class.SkSL::String"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %149) #19
  unreachable

150:                                              ; preds = %137
  %151 = icmp ult i64 %146, 23
  br i1 %151, label %160, label %152

152:                                              ; preds = %150
  %153 = add nuw i64 %146, 16
  %154 = and i64 %153, -16
  %155 = call i8* @_Znwm(i64 %154) #18
  %156 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %155, i8** %156, align 8
  %157 = or i64 %154, -9223372036854775808
  %158 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %146, i64* %159, align 8
  br label %165

160:                                              ; preds = %150
  %161 = trunc i64 %146 to i8
  %162 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  store i8 %161, i8* %163, align 1
  %164 = icmp eq i64 %146, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %160, %152
  %166 = phi i8* [ %155, %152 ], [ %142, %160 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %166, i8* align 1 %144, i64 %146, i1 false) #17
  br label %167

167:                                              ; preds = %160, %165
  %168 = phi i8* [ %142, %160 ], [ %166, %165 ]
  %169 = getelementptr inbounds i8, i8* %168, i64 %146
  store i8 0, i8* %169, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %14, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.196, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %15) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %13, %"class.SkSL::String"* nonnull %14, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.197, i64 0, i64 0)) #17
  %170 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #17
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %16, i32 %64) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, %"class.SkSL::String"* nonnull dereferenceable(24) %16) #17
  %171 = bitcast %"class.SkSL::ErrorReporter"* %139 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %172 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %172, i64 2
  %174 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %173, align 8
  call void %174(%"class.SkSL::ErrorReporter"* %139, i32 %2, %"class.SkSL::String"* nonnull %12) #17
  %175 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %167
  %180 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load i8*, i8** %180, align 8
  call void @_ZdlPv(i8* %181) #18
  br label %182

182:                                              ; preds = %167, %179
  %183 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  call void @_ZdlPv(i8* %189) #18
  br label %190

190:                                              ; preds = %182, %187
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #17
  %191 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %198

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  call void @_ZdlPv(i8* %197) #18
  br label %198

198:                                              ; preds = %190, %195
  %199 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  %201 = load i8, i8* %200, align 1
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load i8*, i8** %204, align 8
  call void @_ZdlPv(i8* %205) #18
  br label %206

206:                                              ; preds = %198, %203
  %207 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  %209 = load i8, i8* %208, align 1
  %210 = icmp slt i8 %209, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %206, %211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #17
  br label %575

215:                                              ; preds = %135
  %216 = icmp sgt i32 %68, %64
  br i1 %216, label %217, label %360

217:                                              ; preds = %215
  %218 = load i8, i8* %34, align 8, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %233, label %220

220:                                              ; preds = %217
  %221 = load i32, i32* %35, align 4
  %222 = icmp sgt i32 %221, 0
  br i1 %222, label %223, label %233

223:                                              ; preds = %220, %223
  %224 = phi i32 [ %230, %223 ], [ 0, %220 ]
  %225 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %226 = bitcast %"class.SkSL::OutputStream"* %225 to void (%"class.SkSL::OutputStream"*, i8*)***
  %227 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %226, align 8
  %228 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %227, i64 2
  %229 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %228, align 8
  call void %229(%"class.SkSL::OutputStream"* %225, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %230 = add nuw nsw i32 %224, 1
  %231 = load i32, i32* %35, align 4
  %232 = icmp slt i32 %230, %231
  br i1 %232, label %223, label %233

233:                                              ; preds = %223, %217, %220
  %234 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %235 = bitcast %"class.SkSL::OutputStream"* %234 to void (%"class.SkSL::OutputStream"*, i8*)***
  %236 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %235, align 8
  %237 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %236, i64 2
  %238 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %237, align 8
  call void %238(%"class.SkSL::OutputStream"* %234, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.198, i64 0, i64 0)) #17
  store i8 0, i8* %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #17
  %239 = load i32, i32* %38, align 4
  %240 = add nsw i32 %239, 1
  store i32 %240, i32* %38, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %17, i32 %239) #17
  %241 = load i8, i8* %40, align 1
  %242 = icmp slt i8 %241, 0
  %243 = load i8*, i8** %41, align 8
  %244 = select i1 %242, i8* %243, i8* %37
  %245 = load i8, i8* %244, align 1
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %270, label %247

247:                                              ; preds = %233
  %248 = load i8, i8* %34, align 8, !range !2
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %263, label %250

250:                                              ; preds = %247
  %251 = load i32, i32* %35, align 4
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %253, label %263

253:                                              ; preds = %250, %253
  %254 = phi i32 [ %260, %253 ], [ 0, %250 ]
  %255 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %256 = bitcast %"class.SkSL::OutputStream"* %255 to void (%"class.SkSL::OutputStream"*, i8*)***
  %257 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %256, align 8
  %258 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %257, i64 2
  %259 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %258, align 8
  call void %259(%"class.SkSL::OutputStream"* %255, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %260 = add nuw nsw i32 %254, 1
  %261 = load i32, i32* %35, align 4
  %262 = icmp slt i32 %260, %261
  br i1 %262, label %253, label %263

263:                                              ; preds = %253, %250, %247
  %264 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %265 = bitcast %"class.SkSL::OutputStream"* %264 to void (%"class.SkSL::OutputStream"*, i8*)***
  %266 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %265, align 8
  %267 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %266, i64 2
  %268 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %267, align 8
  call void %268(%"class.SkSL::OutputStream"* %264, i8* %244) #17
  store i8 0, i8* %34, align 8
  %269 = load i8, i8* %40, align 1
  br label %270

270:                                              ; preds = %233, %263
  %271 = phi i8 [ %241, %233 ], [ %269, %263 ]
  %272 = icmp slt i8 %271, 0
  br i1 %272, label %273, label %275

273:                                              ; preds = %270
  %274 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %274) #18
  br label %275

275:                                              ; preds = %270, %273
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #17
  %276 = load i8, i8* %34, align 8, !range !2
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %291, label %278

278:                                              ; preds = %275
  %279 = load i32, i32* %35, align 4
  %280 = icmp sgt i32 %279, 0
  br i1 %280, label %281, label %291

281:                                              ; preds = %278, %281
  %282 = phi i32 [ %288, %281 ], [ 0, %278 ]
  %283 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %284 = bitcast %"class.SkSL::OutputStream"* %283 to void (%"class.SkSL::OutputStream"*, i8*)***
  %285 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %284, align 8
  %286 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %285, i64 2
  %287 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %286, align 8
  call void %287(%"class.SkSL::OutputStream"* %283, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %288 = add nuw nsw i32 %282, 1
  %289 = load i32, i32* %35, align 4
  %290 = icmp slt i32 %288, %289
  br i1 %290, label %281, label %291

291:                                              ; preds = %281, %275, %278
  %292 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %293 = bitcast %"class.SkSL::OutputStream"* %292 to void (%"class.SkSL::OutputStream"*, i8*)***
  %294 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %293, align 8
  %295 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %294, i64 2
  %296 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %295, align 8
  call void %296(%"class.SkSL::OutputStream"* %292, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.120, i64 0, i64 0)) #17
  store i8 0, i8* %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #17
  %297 = sub nsw i32 %68, %64
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %18, i32 %297) #17
  %298 = load i8, i8* %44, align 1
  %299 = icmp slt i8 %298, 0
  %300 = load i8*, i8** %45, align 8
  %301 = select i1 %299, i8* %300, i8* %42
  %302 = load i8, i8* %301, align 1
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %327, label %304

304:                                              ; preds = %291
  %305 = load i8, i8* %34, align 8, !range !2
  %306 = icmp eq i8 %305, 0
  br i1 %306, label %320, label %307

307:                                              ; preds = %304
  %308 = load i32, i32* %35, align 4
  %309 = icmp sgt i32 %308, 0
  br i1 %309, label %310, label %320

310:                                              ; preds = %307, %310
  %311 = phi i32 [ %317, %310 ], [ 0, %307 ]
  %312 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %313 = bitcast %"class.SkSL::OutputStream"* %312 to void (%"class.SkSL::OutputStream"*, i8*)***
  %314 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %313, align 8
  %315 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %314, i64 2
  %316 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %315, align 8
  call void %316(%"class.SkSL::OutputStream"* %312, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %317 = add nuw nsw i32 %311, 1
  %318 = load i32, i32* %35, align 4
  %319 = icmp slt i32 %317, %318
  br i1 %319, label %310, label %320

320:                                              ; preds = %310, %307, %304
  %321 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %322 = bitcast %"class.SkSL::OutputStream"* %321 to void (%"class.SkSL::OutputStream"*, i8*)***
  %323 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %322, align 8
  %324 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %323, i64 2
  %325 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %324, align 8
  call void %325(%"class.SkSL::OutputStream"* %321, i8* %301) #17
  store i8 0, i8* %34, align 8
  %326 = load i8, i8* %44, align 1
  br label %327

327:                                              ; preds = %291, %320
  %328 = phi i8 [ %298, %291 ], [ %326, %320 ]
  %329 = icmp slt i8 %328, 0
  br i1 %329, label %330, label %332

330:                                              ; preds = %327
  %331 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %331) #18
  br label %332

332:                                              ; preds = %327, %330
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #17
  %333 = load i8, i8* %34, align 8, !range !2
  %334 = icmp eq i8 %333, 0
  br i1 %334, label %348, label %335

335:                                              ; preds = %332
  %336 = load i32, i32* %35, align 4
  %337 = icmp sgt i32 %336, 0
  br i1 %337, label %338, label %348

338:                                              ; preds = %335, %338
  %339 = phi i32 [ %345, %338 ], [ 0, %335 ]
  %340 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %341 = bitcast %"class.SkSL::OutputStream"* %340 to void (%"class.SkSL::OutputStream"*, i8*)***
  %342 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %341, align 8
  %343 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %342, i64 2
  %344 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %343, align 8
  call void %344(%"class.SkSL::OutputStream"* %340, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %345 = add nuw nsw i32 %339, 1
  %346 = load i32, i32* %35, align 4
  %347 = icmp slt i32 %345, %346
  br i1 %347, label %338, label %348

348:                                              ; preds = %338, %332, %335
  %349 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %350 = bitcast %"class.SkSL::OutputStream"* %349 to void (%"class.SkSL::OutputStream"*, i8*)***
  %351 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %350, align 8
  %352 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %351, i64 2
  %353 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %352, align 8
  call void %353(%"class.SkSL::OutputStream"* %349, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.199, i64 0, i64 0)) #17
  store i8 0, i8* %34, align 8
  %354 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %355 = load i8*, i8** %46, align 8
  %356 = bitcast %"class.SkSL::OutputStream"* %354 to void (%"class.SkSL::OutputStream"*, i8*)***
  %357 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %356, align 8
  %358 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %357, i64 2
  %359 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %358, align 8
  call void %359(%"class.SkSL::OutputStream"* %354, i8* %355) #17
  store i8 1, i8* %34, align 8
  br label %360

360:                                              ; preds = %215, %348
  %361 = phi i32 [ %68, %348 ], [ %64, %215 ]
  %362 = call i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"* nonnull %8, %"class.SkSL::Type"* dereferenceable(184) %70)
  %363 = trunc i64 %362 to i32
  %364 = srem i32 %68, %363
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %445, label %366

366:                                              ; preds = %360
  %367 = trunc i64 %362 to i32
  %368 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 2
  %369 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %368, align 8
  %370 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %370) #17
  %371 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %371) #17
  %372 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %372) #17
  %373 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %65, i64 0, i32 1, i32 0
  %374 = load i8*, i8** %373, align 8
  %375 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %65, i64 0, i32 1, i32 1
  %376 = load i64, i64* %375, align 8
  %377 = icmp ugt i64 %376, -17
  br i1 %377, label %378, label %380

378:                                              ; preds = %366
  %379 = bitcast %"class.SkSL::String"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %379) #19
  unreachable

380:                                              ; preds = %366
  %381 = icmp ult i64 %376, 23
  br i1 %381, label %390, label %382

382:                                              ; preds = %380
  %383 = add nuw i64 %376, 16
  %384 = and i64 %383, -16
  %385 = call i8* @_Znwm(i64 %384) #18
  %386 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %385, i8** %386, align 8
  %387 = or i64 %384, -9223372036854775808
  %388 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %387, i64* %388, align 8
  %389 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %376, i64* %389, align 8
  br label %395

390:                                              ; preds = %380
  %391 = trunc i64 %376 to i8
  %392 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %393 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %392, i64 0, i32 1, i32 0
  store i8 %391, i8* %393, align 1
  %394 = icmp eq i64 %376, 0
  br i1 %394, label %397, label %395

395:                                              ; preds = %390, %382
  %396 = phi i8* [ %385, %382 ], [ %372, %390 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %396, i8* align 1 %374, i64 %376, i1 false) #17
  br label %397

397:                                              ; preds = %390, %395
  %398 = phi i8* [ %372, %390 ], [ %396, %395 ]
  %399 = getelementptr inbounds i8, i8* %398, i64 %376
  store i8 0, i8* %399, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %21, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.196, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %22) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::String"* nonnull %21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.200, i64 0, i64 0)) #17
  %400 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %400) #17
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %23, i32 %367) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* nonnull %20, %"class.SkSL::String"* nonnull dereferenceable(24) %23) #17
  %401 = bitcast %"class.SkSL::ErrorReporter"* %369 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %402 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %401, align 8
  %403 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %402, i64 2
  %404 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %403, align 8
  call void %404(%"class.SkSL::ErrorReporter"* %369, i32 %2, %"class.SkSL::String"* nonnull %19) #17
  %405 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %406 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %405, i64 0, i32 1, i32 0
  %407 = load i8, i8* %406, align 1
  %408 = icmp slt i8 %407, 0
  br i1 %408, label %409, label %412

409:                                              ; preds = %397
  %410 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %411 = load i8*, i8** %410, align 8
  call void @_ZdlPv(i8* %411) #18
  br label %412

412:                                              ; preds = %397, %409
  %413 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %414 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %413, i64 0, i32 1, i32 0
  %415 = load i8, i8* %414, align 1
  %416 = icmp slt i8 %415, 0
  br i1 %416, label %417, label %420

417:                                              ; preds = %412
  %418 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load i8*, i8** %418, align 8
  call void @_ZdlPv(i8* %419) #18
  br label %420

420:                                              ; preds = %412, %417
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %400) #17
  %421 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %422 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %421, i64 0, i32 1, i32 0
  %423 = load i8, i8* %422, align 1
  %424 = icmp slt i8 %423, 0
  br i1 %424, label %425, label %428

425:                                              ; preds = %420
  %426 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %427 = load i8*, i8** %426, align 8
  call void @_ZdlPv(i8* %427) #18
  br label %428

428:                                              ; preds = %420, %425
  %429 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %430 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %429, i64 0, i32 1, i32 0
  %431 = load i8, i8* %430, align 1
  %432 = icmp slt i8 %431, 0
  br i1 %432, label %433, label %436

433:                                              ; preds = %428
  %434 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load i8*, i8** %434, align 8
  call void @_ZdlPv(i8* %435) #18
  br label %436

436:                                              ; preds = %428, %433
  %437 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %438 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %437, i64 0, i32 1, i32 0
  %439 = load i8, i8* %438, align 1
  %440 = icmp slt i8 %439, 0
  br i1 %440, label %441, label %444

441:                                              ; preds = %436
  %442 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %443 = load i8*, i8** %442, align 8
  call void @_ZdlPv(i8* %443) #18
  br label %444

444:                                              ; preds = %441, %436
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %372) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %371) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %370) #17
  br label %575

445:                                              ; preds = %360, %133
  %446 = phi i32 [ %64, %133 ], [ %361, %360 ]
  %447 = call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* nonnull %8, %"class.SkSL::Type"* dereferenceable(184) %70)
  %448 = sub nsw i32 2147483647, %446
  %449 = sext i32 %448 to i64
  %450 = icmp ugt i64 %447, %449
  br i1 %450, label %451, label %454

451:                                              ; preds = %445
  %452 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 2
  %453 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %452, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %453, i32 %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.201, i64 0, i64 0))
  br label %575

454:                                              ; preds = %445
  %455 = trunc i64 %447 to i32
  %456 = add i32 %446, %455
  call void @_ZN4SkSL18MetalCodeGenerator14writeModifiersERKNS_9ModifiersE(%"class.SkSL::MetalCodeGenerator"* %0, %"struct.SkSL::Modifiers"* dereferenceable(80) %66)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %70) #17
  %457 = load i8, i8* %49, align 1
  %458 = icmp slt i8 %457, 0
  %459 = load i8*, i8** %50, align 8
  %460 = select i1 %458, i8* %459, i8* %47
  %461 = load i8, i8* %460, align 1
  %462 = icmp eq i8 %461, 0
  br i1 %462, label %486, label %463

463:                                              ; preds = %454
  %464 = load i8, i8* %34, align 8, !range !2
  %465 = icmp eq i8 %464, 0
  br i1 %465, label %479, label %466

466:                                              ; preds = %463
  %467 = load i32, i32* %35, align 4
  %468 = icmp sgt i32 %467, 0
  br i1 %468, label %469, label %479

469:                                              ; preds = %466, %469
  %470 = phi i32 [ %476, %469 ], [ 0, %466 ]
  %471 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %472 = bitcast %"class.SkSL::OutputStream"* %471 to void (%"class.SkSL::OutputStream"*, i8*)***
  %473 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %472, align 8
  %474 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %473, i64 2
  %475 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %474, align 8
  call void %475(%"class.SkSL::OutputStream"* %471, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %476 = add nuw nsw i32 %470, 1
  %477 = load i32, i32* %35, align 4
  %478 = icmp slt i32 %476, %477
  br i1 %478, label %469, label %479

479:                                              ; preds = %469, %466, %463
  %480 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %481 = bitcast %"class.SkSL::OutputStream"* %480 to void (%"class.SkSL::OutputStream"*, i8*)***
  %482 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %481, align 8
  %483 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %482, i64 2
  %484 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %483, align 8
  call void %484(%"class.SkSL::OutputStream"* %480, i8* %460) #17
  store i8 0, i8* %34, align 8
  %485 = load i8, i8* %49, align 1
  br label %486

486:                                              ; preds = %479, %454
  %487 = phi i8 [ %457, %454 ], [ %485, %479 ]
  %488 = icmp slt i8 %487, 0
  br i1 %488, label %489, label %491

489:                                              ; preds = %486
  %490 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %490) #18
  br label %491

491:                                              ; preds = %486, %489
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #17
  %492 = load i8, i8* %34, align 8, !range !2
  %493 = icmp eq i8 %492, 0
  br i1 %493, label %507, label %494

494:                                              ; preds = %491
  %495 = load i32, i32* %35, align 4
  %496 = icmp sgt i32 %495, 0
  br i1 %496, label %497, label %507

497:                                              ; preds = %494, %497
  %498 = phi i32 [ %504, %497 ], [ 0, %494 ]
  %499 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %500 = bitcast %"class.SkSL::OutputStream"* %499 to void (%"class.SkSL::OutputStream"*, i8*)***
  %501 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %500, align 8
  %502 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %501, i64 2
  %503 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %502, align 8
  call void %503(%"class.SkSL::OutputStream"* %499, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %504 = add nuw nsw i32 %498, 1
  %505 = load i32, i32* %35, align 4
  %506 = icmp slt i32 %504, %505
  br i1 %506, label %497, label %507

507:                                              ; preds = %497, %491, %494
  %508 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %509 = bitcast %"class.SkSL::OutputStream"* %508 to void (%"class.SkSL::OutputStream"*, i8*)***
  %510 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %509, align 8
  %511 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %510, i64 2
  %512 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %511, align 8
  call void %512(%"class.SkSL::OutputStream"* %508, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #17
  %513 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %65, i64 0, i32 1, i32 0
  %514 = load i8*, i8** %513, align 8
  %515 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %65, i64 0, i32 1, i32 1
  %516 = load i64, i64* %515, align 8
  %517 = icmp ugt i64 %516, -17
  br i1 %517, label %518, label %520

518:                                              ; preds = %507
  %519 = bitcast %"class.SkSL::String"* %24 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %519) #19
  unreachable

520:                                              ; preds = %507
  %521 = icmp ult i64 %516, 23
  br i1 %521, label %527, label %522

522:                                              ; preds = %520
  %523 = add nuw i64 %516, 16
  %524 = and i64 %523, -16
  %525 = call i8* @_Znwm(i64 %524) #18
  store i8* %525, i8** %52, align 8
  %526 = or i64 %524, -9223372036854775808
  store i64 %526, i64* %53, align 8
  store i64 %516, i64* %54, align 8
  br label %530

527:                                              ; preds = %520
  %528 = trunc i64 %516 to i8
  store i8 %528, i8* %56, align 1
  %529 = icmp eq i64 %516, 0
  br i1 %529, label %532, label %530

530:                                              ; preds = %527, %522
  %531 = phi i8* [ %525, %522 ], [ %51, %527 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %531, i8* align 1 %514, i64 %516, i1 false) #17
  br label %532

532:                                              ; preds = %527, %530
  %533 = phi i8* [ %51, %527 ], [ %531, %530 ]
  %534 = getelementptr inbounds i8, i8* %533, i64 %516
  store i8 0, i8* %534, align 1
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %24)
  %535 = load i8, i8* %56, align 1
  %536 = icmp slt i8 %535, 0
  br i1 %536, label %537, label %539

537:                                              ; preds = %532
  %538 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %538) #18
  br label %539

539:                                              ; preds = %532, %537
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #17
  %540 = load i8, i8* %34, align 8, !range !2
  %541 = icmp eq i8 %540, 0
  br i1 %541, label %555, label %542

542:                                              ; preds = %539
  %543 = load i32, i32* %35, align 4
  %544 = icmp sgt i32 %543, 0
  br i1 %544, label %545, label %555

545:                                              ; preds = %542, %545
  %546 = phi i32 [ %552, %545 ], [ 0, %542 ]
  %547 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %548 = bitcast %"class.SkSL::OutputStream"* %547 to void (%"class.SkSL::OutputStream"*, i8*)***
  %549 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %548, align 8
  %550 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %549, i64 2
  %551 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %550, align 8
  call void %551(%"class.SkSL::OutputStream"* %547, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %552 = add nuw nsw i32 %546, 1
  %553 = load i32, i32* %35, align 4
  %554 = icmp slt i32 %552, %553
  br i1 %554, label %545, label %555

555:                                              ; preds = %545, %539, %542
  %556 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %557 = bitcast %"class.SkSL::OutputStream"* %556 to void (%"class.SkSL::OutputStream"*, i8*)***
  %558 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %557, align 8
  %559 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %558, i64 2
  %560 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %559, align 8
  call void %560(%"class.SkSL::OutputStream"* %556, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #17
  store i8 0, i8* %34, align 8
  %561 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %562 = load i8*, i8** %46, align 8
  %563 = bitcast %"class.SkSL::OutputStream"* %561 to void (%"class.SkSL::OutputStream"*, i8*)***
  %564 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %563, align 8
  %565 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %564, i64 2
  %566 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %565, align 8
  call void %566(%"class.SkSL::OutputStream"* %561, i8* %562) #17
  store i8 1, i8* %34, align 8
  br i1 %57, label %572, label %567

567:                                              ; preds = %555
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #17
  store %"struct.SkSL::Type::Field"* %65, %"struct.SkSL::Type::Field"** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #17
  store %"struct.SkSL::Type::Field"** %25, %"struct.SkSL::Type::Field"*** %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %62) #17
  %568 = call { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"* %59, %"struct.SkSL::Type::Field"** nonnull dereferenceable(8) %25, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.434"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.407"* nonnull dereferenceable(1) %7) #17
  %569 = extractvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %568, 0
  %570 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %569, i64 3
  %571 = bitcast %"struct.std::__1::__hash_node_base.138"* %570 to %"class.SkSL::InterfaceBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %62) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #17
  store %"class.SkSL::InterfaceBlock"* %3, %"class.SkSL::InterfaceBlock"** %571, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #17
  br label %572

572:                                              ; preds = %567, %555
  %573 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %65, i64 1
  %574 = icmp eq %"struct.SkSL::Type::Field"* %573, %31
  br i1 %574, label %575, label %63

575:                                              ; preds = %572, %4, %451, %132, %444, %214
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator9writeTypeERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Type"* readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %5 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = select i1 %8, i8* %10, i8* %4
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %42, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i32 [ 0, %22 ], [ %31, %24 ]
  %26 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %27 = bitcast %"class.SkSL::OutputStream"* %26 to void (%"class.SkSL::OutputStream"*, i8*)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, i64 2
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, align 8
  call void %30(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %31 = add nuw nsw i32 %25, 1
  %32 = load i32, i32* %19, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %24, label %34

34:                                               ; preds = %24, %18, %14
  %35 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %36 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %37 = bitcast %"class.SkSL::OutputStream"* %36 to void (%"class.SkSL::OutputStream"*, i8*)***
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %38, i64 2
  %40 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %39, align 8
  call void %40(%"class.SkSL::OutputStream"* %36, i8* %11) #17
  store i8 0, i8* %15, align 8
  %41 = load i8, i8* %6, align 1
  br label %42

42:                                               ; preds = %2, %34
  %43 = phi i8 [ %7, %2 ], [ %41, %34 ]
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %42, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %130 [
    i32 30, label %7
    i32 31, label %9
    i32 33, label %44
    i32 40, label %44
    i32 34, label %46
    i32 36, label %56
    i32 39, label %56
    i32 37, label %58
    i32 38, label %60
    i32 35, label %60
    i32 43, label %62
    i32 44, label %64
    i32 45, label %66
    i32 47, label %115
    i32 49, label %117
    i32 50, label %119
    i32 51, label %121
    i32 52, label %122
    i32 55, label %124
    i32 53, label %126
    i32 48, label %128
  ]

7:                                                ; preds = %3
  %8 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::BinaryExpression"*
  tail call void @_ZN4SkSL18MetalCodeGenerator21writeBinaryExpressionERKNS_16BinaryExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::BinaryExpression"* dereferenceable(48) %8, i32 %2)
  br label %130

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %11 = bitcast %"class.SkSL::Expression"* %10 to i8*
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = select i1 %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i64 0, i64 0)
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %130, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %37, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i32 [ 0, %25 ], [ %34, %27 ]
  %29 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %30 = bitcast %"class.SkSL::OutputStream"* %29 to void (%"class.SkSL::OutputStream"*, i8*)***
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, i64 2
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %32, align 8
  tail call void %33(%"class.SkSL::OutputStream"* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %34 = add nuw nsw i32 %28, 1
  %35 = load i32, i32* %22, align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %27, label %37

37:                                               ; preds = %27, %21, %17
  %38 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %39 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %38, align 8
  %40 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*)***
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %41, i64 2
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %42, align 8
  tail call void %43(%"class.SkSL::OutputStream"* %39, i8* %14) #17
  store i8 0, i8* %18, align 8
  br label %130

44:                                               ; preds = %3, %3
  %45 = tail call dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"* %1) #17
  tail call void @_ZN4SkSL18MetalCodeGenerator19writeAnyConstructorERKNS_14AnyConstructorEPKcS5_NS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i32 undef)
  br label %130

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 1
  %48 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %47, align 8
  %49 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 4
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::ConstructorCompound"*
  tail call void @_ZN4SkSL18MetalCodeGenerator30writeConstructorCompoundMatrixERKNS_19ConstructorCompoundENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::ConstructorCompound"* dereferenceable(64) %53, i32 undef) #17
  br label %130

54:                                               ; preds = %46
  %55 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::AnyConstructor"*
  tail call void @_ZN4SkSL18MetalCodeGenerator19writeAnyConstructorERKNS_14AnyConstructorEPKcS5_NS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i32 undef) #17
  br label %130

56:                                               ; preds = %3, %3
  %57 = tail call dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"* %1) #17
  tail call void @_ZN4SkSL18MetalCodeGenerator19writeAnyConstructorERKNS_14AnyConstructorEPKcS5_NS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %57, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i32 undef)
  br label %130

58:                                               ; preds = %3
  %59 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::ConstructorMatrixResize"*
  tail call void @_ZN4SkSL18MetalCodeGenerator28writeConstructorMatrixResizeERKNS_23ConstructorMatrixResizeENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::ConstructorMatrixResize"* dereferenceable(104) %59, i32 undef)
  br label %130

60:                                               ; preds = %3, %3
  %61 = tail call dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"* %1) #17
  tail call void @_ZN4SkSL18MetalCodeGenerator20writeCastConstructorERKNS_14AnyConstructorEPKcS5_NS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %61, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i32 %2)
  br label %130

62:                                               ; preds = %3
  %63 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Literal.300"*
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Literal.300"* dereferenceable(32) %63)
  br label %130

64:                                               ; preds = %3
  %65 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::FieldAccess"*
  tail call void @_ZN4SkSL18MetalCodeGenerator16writeFieldAccessERKNS_11FieldAccessE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FieldAccess"* dereferenceable(40) %65)
  br label %130

66:                                               ; preds = %3
  %67 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #17
  %68 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %69 = bitcast %"class.SkSL::Expression"* %68 to float*
  %70 = load float, float* %69, align 8
  %71 = fpext float %70 to double
  call void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* nonnull sret %4, double %71) #17
  %72 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  %76 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = select i1 %75, i8* %77, i8* %67
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %109, label %81

81:                                               ; preds = %66
  %82 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %83 = load i8, i8* %82, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %101, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %101

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i32 [ 0, %89 ], [ %98, %91 ]
  %93 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %90, align 8
  %94 = bitcast %"class.SkSL::OutputStream"* %93 to void (%"class.SkSL::OutputStream"*, i8*)***
  %95 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %95, i64 2
  %97 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %96, align 8
  call void %97(%"class.SkSL::OutputStream"* %93, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %98 = add nuw nsw i32 %92, 1
  %99 = load i32, i32* %86, align 4
  %100 = icmp slt i32 %98, %99
  br i1 %100, label %91, label %101

101:                                              ; preds = %91, %85, %81
  %102 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %103 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %102, align 8
  %104 = bitcast %"class.SkSL::OutputStream"* %103 to void (%"class.SkSL::OutputStream"*, i8*)***
  %105 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %105, i64 2
  %107 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %106, align 8
  call void %107(%"class.SkSL::OutputStream"* %103, i8* %78) #17
  store i8 0, i8* %82, align 8
  %108 = load i8, i8* %73, align 1
  br label %109

109:                                              ; preds = %101, %66
  %110 = phi i8 [ %74, %66 ], [ %108, %101 ]
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %113) #18
  br label %114

114:                                              ; preds = %109, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #17
  br label %130

115:                                              ; preds = %3
  %116 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::FunctionCall"*
  tail call void @_ZN4SkSL18MetalCodeGenerator17writeFunctionCallERKNS_12FunctionCallE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %116)
  br label %130

117:                                              ; preds = %3
  %118 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::PrefixExpression"*
  tail call void @_ZN4SkSL18MetalCodeGenerator21writePrefixExpressionERKNS_16PrefixExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::PrefixExpression"* dereferenceable(40) %118, i32 %2)
  br label %130

119:                                              ; preds = %3
  %120 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::PostfixExpression"*
  tail call void @_ZN4SkSL18MetalCodeGenerator22writePostfixExpressionERKNS_17PostfixExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::PostfixExpression"* dereferenceable(40) %120, i32 %2)
  br label %130

121:                                              ; preds = %3
  tail call void @_ZN4SkSL18MetalCodeGenerator12writeSettingERKNS_7SettingE(%"class.SkSL::MetalCodeGenerator"* undef, %"class.SkSL::Setting"* dereferenceable(48) undef)
  unreachable

122:                                              ; preds = %3
  %123 = bitcast %"class.SkSL::Expression"* %1 to %"struct.SkSL::Swizzle"*
  tail call void @_ZN4SkSL18MetalCodeGenerator12writeSwizzleERKNS_7SwizzleE(%"class.SkSL::MetalCodeGenerator"* %0, %"struct.SkSL::Swizzle"* dereferenceable(56) %123)
  br label %130

124:                                              ; preds = %3
  %125 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::VariableReference"*
  tail call void @_ZN4SkSL18MetalCodeGenerator22writeVariableReferenceERKNS_17VariableReferenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::VariableReference"* dereferenceable(40) %125)
  br label %130

126:                                              ; preds = %3
  %127 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::TernaryExpression"*
  tail call void @_ZN4SkSL18MetalCodeGenerator22writeTernaryExpressionERKNS_17TernaryExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::TernaryExpression"* dereferenceable(48) %127, i32 %2)
  br label %130

128:                                              ; preds = %3
  %129 = bitcast %"class.SkSL::Expression"* %1 to %"struct.SkSL::IndexExpression"*
  tail call void @_ZN4SkSL18MetalCodeGenerator20writeIndexExpressionERKNS_15IndexExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"struct.SkSL::IndexExpression"* dereferenceable(40) %129)
  br label %130

130:                                              ; preds = %54, %52, %37, %9, %3, %128, %126, %124, %122, %119, %117, %115, %114, %64, %62, %60, %58, %56, %44, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator21writeBinaryExpressionERKNS_16BinaryExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::BinaryExpression"* nocapture readonly dereferenceable(48), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = alloca %"class.SkSL::Operator", align 4
  %6 = alloca %"class.SkSL::Operator", align 4
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %12, align 8
  %14 = bitcast %"class.SkSL::Expression"* %11 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %15 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %15, i64 3
  %17 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %16, align 8
  %18 = tail call dereferenceable(184) %"class.SkSL::Type"* %17(%"class.SkSL::Expression"* %11) #17
  %19 = bitcast %"class.SkSL::Expression"* %13 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %20 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %20, i64 3
  %22 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %21, align 8
  %23 = tail call dereferenceable(184) %"class.SkSL::Type"* %22(%"class.SkSL::Expression"* %13) #17
  %24 = bitcast %"class.SkSL::Operator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #17
  %25 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %6, i64 0, i32 0
  %26 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 2, i32 0
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %25, align 4
  %28 = call i32 @_ZNK4SkSL8Operator19getBinaryPrecedenceEv(%"class.SkSL::Operator"* nonnull %6) #17
  %29 = icmp sge i32 %28, %2
  %30 = load i32, i32* %25, align 4
  switch i32 %30, label %131 [
    i32 65, label %31
    i32 66, label %81
  ]

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %18, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  switch i32 %33, label %51 [
    i32 0, label %34
    i32 9, label %39
    i32 4, label %44
  ]

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %131

38:                                               ; preds = %34
  call void @_ZN4SkSL18MetalCodeGenerator25writeArrayEqualityHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %18) #17
  br label %49

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 9
  br i1 %42, label %43, label %131

43:                                               ; preds = %39
  call void @_ZN4SkSL18MetalCodeGenerator26writeStructEqualityHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %18) #17
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 4
  br i1 %47, label %48, label %131

48:                                               ; preds = %44
  call void @_ZN4SkSL18MetalCodeGenerator26writeMatrixEqualityHelpersERKNS_4TypeES3_(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %18, %"class.SkSL::Type"* dereferenceable(184) %23) #17
  br label %49

49:                                               ; preds = %48, %43, %38
  %50 = load i32, i32* %32, align 8
  br label %51

51:                                               ; preds = %49, %31
  %52 = phi i32 [ %50, %49 ], [ %33, %31 ]
  %53 = icmp eq i32 %52, 11
  br i1 %53, label %54, label %131

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i32 [ 0, %62 ], [ %71, %64 ]
  %66 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %63, align 8
  %67 = bitcast %"class.SkSL::OutputStream"* %66 to void (%"class.SkSL::OutputStream"*, i8*)***
  %68 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %68, i64 2
  %70 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %69, align 8
  call void %70(%"class.SkSL::OutputStream"* %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %71 = add nuw nsw i32 %65, 1
  %72 = load i32, i32* %59, align 4
  %73 = icmp slt i32 %71, %72
  br i1 %73, label %64, label %74

74:                                               ; preds = %64, %54, %58
  %75 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %76 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %75, align 8
  %77 = bitcast %"class.SkSL::OutputStream"* %76 to void (%"class.SkSL::OutputStream"*, i8*)***
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %78, i64 2
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, align 8
  call void %80(%"class.SkSL::OutputStream"* %76, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i64 0, i64 0)) #17
  store i8 0, i8* %55, align 8
  br label %131

81:                                               ; preds = %3
  %82 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %18, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  switch i32 %83, label %101 [
    i32 0, label %84
    i32 9, label %89
    i32 4, label %94
  ]

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %131

88:                                               ; preds = %84
  call void @_ZN4SkSL18MetalCodeGenerator25writeArrayEqualityHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %18) #17
  br label %99

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 9
  br i1 %92, label %93, label %131

93:                                               ; preds = %89
  call void @_ZN4SkSL18MetalCodeGenerator26writeStructEqualityHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %18) #17
  br label %99

94:                                               ; preds = %81
  %95 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 4
  br i1 %97, label %98, label %131

98:                                               ; preds = %94
  call void @_ZN4SkSL18MetalCodeGenerator26writeMatrixEqualityHelpersERKNS_4TypeES3_(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %18, %"class.SkSL::Type"* dereferenceable(184) %23) #17
  br label %99

99:                                               ; preds = %98, %93, %88
  %100 = load i32, i32* %82, align 8
  br label %101

101:                                              ; preds = %99, %81
  %102 = phi i32 [ %100, %99 ], [ %83, %81 ]
  %103 = icmp eq i32 %102, 11
  br i1 %103, label %104, label %131

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %124, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %110 = load i32, i32* %109, align 4
  %111 = icmp sgt i32 %110, 0
  br i1 %111, label %112, label %124

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %114

114:                                              ; preds = %114, %112
  %115 = phi i32 [ 0, %112 ], [ %121, %114 ]
  %116 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %113, align 8
  %117 = bitcast %"class.SkSL::OutputStream"* %116 to void (%"class.SkSL::OutputStream"*, i8*)***
  %118 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %118, i64 2
  %120 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %119, align 8
  call void %120(%"class.SkSL::OutputStream"* %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %121 = add nuw nsw i32 %115, 1
  %122 = load i32, i32* %109, align 4
  %123 = icmp slt i32 %121, %122
  br i1 %123, label %114, label %124

124:                                              ; preds = %114, %104, %108
  %125 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %126 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %127 = bitcast %"class.SkSL::OutputStream"* %126 to void (%"class.SkSL::OutputStream"*, i8*)***
  %128 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %128, i64 2
  %130 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %129, align 8
  call void %130(%"class.SkSL::OutputStream"* %126, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.148, i64 0, i64 0)) #17
  store i8 0, i8* %105, align 8
  br label %131

131:                                              ; preds = %94, %89, %84, %44, %39, %34, %3, %101, %124, %51, %74
  %132 = phi i1 [ %29, %3 ], [ true, %124 ], [ %29, %101 ], [ true, %74 ], [ %29, %51 ], [ %29, %34 ], [ %29, %39 ], [ %29, %44 ], [ %29, %84 ], [ %29, %89 ], [ %29, %94 ]
  %133 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %18, i64 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 4
  br i1 %135, label %136, label %146

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 3
  %138 = load i32, i32* %137, align 8
  %139 = icmp eq i32 %138, 4
  %140 = load i32, i32* %25, align 4
  %141 = icmp eq i32 %140, 73
  %142 = and i1 %139, %141
  br i1 %142, label %143, label %146

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 0, i32 1
  %145 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %144, align 8
  call void @_ZN4SkSL18MetalCodeGenerator27writeMatrixTimesEqualHelperERKNS_4TypeES3_S3_(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %18, %"class.SkSL::Type"* dereferenceable(184) %23, %"class.SkSL::Type"* dereferenceable(184) %145)
  br label %146

146:                                              ; preds = %143, %136, %131
  %147 = call i32 @_ZNK4SkSL8Operator16removeAssignmentEv(%"class.SkSL::Operator"* nonnull %6) #17
  %148 = icmp eq i32 %147, 49
  br i1 %148, label %149, label %163

149:                                              ; preds = %146
  %150 = load i32, i32* %133, align 8
  %151 = icmp eq i32 %150, 4
  br i1 %151, label %152, label %155

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 3
  %154 = load i32, i32* %153, align 8
  switch i32 %154, label %163 [
    i32 4, label %161
    i32 8, label %161
  ]

155:                                              ; preds = %149
  %156 = icmp eq i32 %150, 8
  br i1 %156, label %157, label %163

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 3
  %159 = load i32, i32* %158, align 8
  %160 = icmp eq i32 %159, 4
  br i1 %160, label %161, label %163

161:                                              ; preds = %152, %152, %157
  %162 = select i1 %151, %"class.SkSL::Type"* %18, %"class.SkSL::Type"* %23
  call void @_ZN4SkSL18MetalCodeGenerator26writeMatrixDivisionHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %162)
  br label %163

163:                                              ; preds = %152, %155, %157, %146, %161
  br i1 %132, label %164, label %191

164:                                              ; preds = %163
  %165 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %166 = load i8, i8* %165, align 8, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %184, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %170 = load i32, i32* %169, align 4
  %171 = icmp sgt i32 %170, 0
  br i1 %171, label %172, label %184

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %174

174:                                              ; preds = %174, %172
  %175 = phi i32 [ 0, %172 ], [ %181, %174 ]
  %176 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %173, align 8
  %177 = bitcast %"class.SkSL::OutputStream"* %176 to void (%"class.SkSL::OutputStream"*, i8*)***
  %178 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %178, i64 2
  %180 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %179, align 8
  call void %180(%"class.SkSL::OutputStream"* %176, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %181 = add nuw nsw i32 %175, 1
  %182 = load i32, i32* %169, align 4
  %183 = icmp slt i32 %181, %182
  br i1 %183, label %174, label %184

184:                                              ; preds = %174, %164, %168
  %185 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %186 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %185, align 8
  %187 = bitcast %"class.SkSL::OutputStream"* %186 to void (%"class.SkSL::OutputStream"*, i8*)***
  %188 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %187, align 8
  %189 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %188, i64 2
  %190 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %189, align 8
  call void %190(%"class.SkSL::OutputStream"* %186, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %165, align 8
  br label %191

191:                                              ; preds = %184, %163
  %192 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 3
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %193, 4
  br i1 %194, label %195, label %205

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %18, i64 0, i32 4
  %197 = load i32, i32* %196, align 4
  %198 = icmp ult i32 %197, 3
  br i1 %198, label %199, label %205

199:                                              ; preds = %195
  %200 = call zeroext i1 @_ZNK4SkSL8Operator24isValidForMatrixOrVectorEv(%"class.SkSL::Operator"* nonnull %6) #17
  br i1 %200, label %201, label %205

201:                                              ; preds = %199
  %202 = call i32 @_ZNK4SkSL8Operator16removeAssignmentEv(%"class.SkSL::Operator"* nonnull %6) #17
  %203 = icmp eq i32 %202, 48
  br i1 %203, label %205, label %204

204:                                              ; preds = %201
  call void @_ZN4SkSL18MetalCodeGenerator19writeNumberAsMatrixERKNS_10ExpressionERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %11, %"class.SkSL::Type"* dereferenceable(184) %23)
  br label %206

205:                                              ; preds = %201, %195, %191, %199
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %11, i32 %28)
  br label %206

206:                                              ; preds = %205, %204
  %207 = load i32, i32* %25, align 4
  %208 = icmp eq i32 %207, 64
  br i1 %208, label %324, label %209

209:                                              ; preds = %206
  %210 = call zeroext i1 @_ZNK4SkSL8Operator12isAssignmentEv(%"class.SkSL::Operator"* nonnull %6) #17
  br i1 %210, label %211, label %324

211:                                              ; preds = %209
  %212 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %11, i64 0, i32 0, i32 2
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, 52
  br i1 %214, label %215, label %324

215:                                              ; preds = %211
  %216 = bitcast %"class.SkSL::Expression"* %11 to i1 (%"class.SkSL::Expression"*, i32)***
  %217 = load i1 (%"class.SkSL::Expression"*, i32)**, i1 (%"class.SkSL::Expression"*, i32)*** %216, align 8
  %218 = getelementptr inbounds i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %217, i64 7
  %219 = load i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %218, align 8
  %220 = call zeroext i1 %219(%"class.SkSL::Expression"* %11, i32 0) #17
  br i1 %220, label %324, label %221

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %223 = load i8, i8* %222, align 8, !range !2
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %227 = load i32, i32* %226, align 4
  %228 = icmp sgt i32 %227, 0
  br i1 %228, label %229, label %241

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %231

231:                                              ; preds = %231, %229
  %232 = phi i32 [ 0, %229 ], [ %238, %231 ]
  %233 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %230, align 8
  %234 = bitcast %"class.SkSL::OutputStream"* %233 to void (%"class.SkSL::OutputStream"*, i8*)***
  %235 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %234, align 8
  %236 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %235, i64 2
  %237 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %236, align 8
  call void %237(%"class.SkSL::OutputStream"* %233, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %238 = add nuw nsw i32 %232, 1
  %239 = load i32, i32* %226, align 4
  %240 = icmp slt i32 %238, %239
  br i1 %240, label %231, label %241

241:                                              ; preds = %231, %221, %225
  %242 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %243 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %242, align 8
  %244 = bitcast %"class.SkSL::OutputStream"* %243 to void (%"class.SkSL::OutputStream"*, i8*)***
  %245 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %244, align 8
  %246 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %245, i64 2
  %247 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %246, align 8
  call void %247(%"class.SkSL::OutputStream"* %243, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0)) #17
  store i8 0, i8* %222, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %11, i32 16)
  %248 = load i8, i8* %222, align 8, !range !2
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %264, label %250

250:                                              ; preds = %241
  %251 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %252 = load i32, i32* %251, align 4
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %254, label %264

254:                                              ; preds = %250, %254
  %255 = phi i32 [ %261, %254 ], [ 0, %250 ]
  %256 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %242, align 8
  %257 = bitcast %"class.SkSL::OutputStream"* %256 to void (%"class.SkSL::OutputStream"*, i8*)***
  %258 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %257, align 8
  %259 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %258, i64 2
  %260 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %259, align 8
  call void %260(%"class.SkSL::OutputStream"* %256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %261 = add nuw nsw i32 %255, 1
  %262 = load i32, i32* %251, align 4
  %263 = icmp slt i32 %261, %262
  br i1 %263, label %254, label %264

264:                                              ; preds = %254, %241, %250
  %265 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %242, align 8
  %266 = bitcast %"class.SkSL::OutputStream"* %265 to void (%"class.SkSL::OutputStream"*, i8*)***
  %267 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %266, align 8
  %268 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %267, i64 2
  %269 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %268, align 8
  call void %269(%"class.SkSL::OutputStream"* %265, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %222, align 8
  %270 = call i32 @_ZNK4SkSL8Operator16removeAssignmentEv(%"class.SkSL::Operator"* nonnull %6) #17
  %271 = bitcast %"class.SkSL::Operator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %271)
  %272 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  store i32 %270, i32* %272, align 4
  %273 = icmp eq i32 %270, 58
  br i1 %273, label %276, label %274

274:                                              ; preds = %264
  %275 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #17
  br label %276

276:                                              ; preds = %264, %274
  %277 = phi i8* [ %275, %274 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %264 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %271)
  %278 = load i8, i8* %277, align 1
  %279 = icmp eq i8 %278, 0
  %280 = load i8, i8* %222, align 8
  %281 = icmp eq i8 %280, 0
  br i1 %279, label %303, label %282

282:                                              ; preds = %276
  br i1 %281, label %297, label %283

283:                                              ; preds = %282
  %284 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %285 = load i32, i32* %284, align 4
  %286 = icmp sgt i32 %285, 0
  br i1 %286, label %287, label %297

287:                                              ; preds = %283, %287
  %288 = phi i32 [ %294, %287 ], [ 0, %283 ]
  %289 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %242, align 8
  %290 = bitcast %"class.SkSL::OutputStream"* %289 to void (%"class.SkSL::OutputStream"*, i8*)***
  %291 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %290, align 8
  %292 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %291, i64 2
  %293 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %292, align 8
  call void %293(%"class.SkSL::OutputStream"* %289, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %294 = add nuw nsw i32 %288, 1
  %295 = load i32, i32* %284, align 4
  %296 = icmp slt i32 %294, %295
  br i1 %296, label %287, label %297

297:                                              ; preds = %287, %282, %283
  %298 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %242, align 8
  %299 = bitcast %"class.SkSL::OutputStream"* %298 to void (%"class.SkSL::OutputStream"*, i8*)***
  %300 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %299, align 8
  %301 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %300, i64 2
  %302 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %301, align 8
  call void %302(%"class.SkSL::OutputStream"* %298, i8* %277) #17
  store i8 0, i8* %222, align 8
  br label %318

303:                                              ; preds = %276
  br i1 %281, label %318, label %304

304:                                              ; preds = %303
  %305 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %306 = load i32, i32* %305, align 4
  %307 = icmp sgt i32 %306, 0
  br i1 %307, label %308, label %318

308:                                              ; preds = %304, %308
  %309 = phi i32 [ %315, %308 ], [ 0, %304 ]
  %310 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %242, align 8
  %311 = bitcast %"class.SkSL::OutputStream"* %310 to void (%"class.SkSL::OutputStream"*, i8*)***
  %312 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %311, align 8
  %313 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %312, i64 2
  %314 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %313, align 8
  call void %314(%"class.SkSL::OutputStream"* %310, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %315 = add nuw nsw i32 %309, 1
  %316 = load i32, i32* %305, align 4
  %317 = icmp slt i32 %315, %316
  br i1 %317, label %308, label %318

318:                                              ; preds = %308, %297, %303, %304
  %319 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %242, align 8
  %320 = bitcast %"class.SkSL::OutputStream"* %319 to void (%"class.SkSL::OutputStream"*, i8*)***
  %321 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %320, align 8
  %322 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %321, i64 2
  %323 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %322, align 8
  call void %323(%"class.SkSL::OutputStream"* %319, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %222, align 8
  br label %396

324:                                              ; preds = %206, %215, %211, %209
  %325 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %325) #17
  %326 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %326) #17
  %327 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %327) #17
  %328 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %329 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %328, i64 0, i32 1, i32 0
  store i8 1, i8* %329, align 1
  store i8 32, i8* %327, align 8
  %330 = getelementptr inbounds i8, i8* %327, i64 1
  store i8 0, i8* %330, align 1
  %331 = load i32, i32* %25, align 4
  %332 = bitcast %"class.SkSL::Operator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %332)
  %333 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %5, i64 0, i32 0
  store i32 %331, i32* %333, align 4
  %334 = icmp eq i32 %331, 58
  br i1 %334, label %337, label %335

335:                                              ; preds = %324
  %336 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %5) #17
  br label %337

337:                                              ; preds = %324, %335
  %338 = phi i8* [ %336, %335 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %324 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %332)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* %338) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  %339 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %339, i64 0, i32 1, i32 0
  %341 = load i8, i8* %340, align 1
  %342 = icmp slt i8 %341, 0
  %343 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load i8*, i8** %343, align 8
  %345 = select i1 %342, i8* %344, i8* %325
  %346 = load i8, i8* %345, align 1
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %376, label %348

348:                                              ; preds = %337
  %349 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %350 = load i8, i8* %349, align 8, !range !2
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %368, label %352

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %354 = load i32, i32* %353, align 4
  %355 = icmp sgt i32 %354, 0
  br i1 %355, label %356, label %368

356:                                              ; preds = %352
  %357 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %358

358:                                              ; preds = %358, %356
  %359 = phi i32 [ 0, %356 ], [ %365, %358 ]
  %360 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %357, align 8
  %361 = bitcast %"class.SkSL::OutputStream"* %360 to void (%"class.SkSL::OutputStream"*, i8*)***
  %362 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %361, align 8
  %363 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %362, i64 2
  %364 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %363, align 8
  call void %364(%"class.SkSL::OutputStream"* %360, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %365 = add nuw nsw i32 %359, 1
  %366 = load i32, i32* %353, align 4
  %367 = icmp slt i32 %365, %366
  br i1 %367, label %358, label %368

368:                                              ; preds = %358, %352, %348
  %369 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %370 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %369, align 8
  %371 = bitcast %"class.SkSL::OutputStream"* %370 to void (%"class.SkSL::OutputStream"*, i8*)***
  %372 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %371, align 8
  %373 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %372, i64 2
  %374 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %373, align 8
  call void %374(%"class.SkSL::OutputStream"* %370, i8* %345) #17
  store i8 0, i8* %349, align 8
  %375 = load i8, i8* %340, align 1
  br label %376

376:                                              ; preds = %337, %368
  %377 = phi i8 [ %341, %337 ], [ %375, %368 ]
  %378 = icmp slt i8 %377, 0
  br i1 %378, label %379, label %381

379:                                              ; preds = %376
  %380 = load i8*, i8** %343, align 8
  call void @_ZdlPv(i8* %380) #18
  br label %381

381:                                              ; preds = %376, %379
  %382 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %383 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %382, i64 0, i32 1, i32 0
  %384 = load i8, i8* %383, align 1
  %385 = icmp slt i8 %384, 0
  br i1 %385, label %386, label %389

386:                                              ; preds = %381
  %387 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load i8*, i8** %387, align 8
  call void @_ZdlPv(i8* %388) #18
  br label %389

389:                                              ; preds = %381, %386
  %390 = load i8, i8* %329, align 1
  %391 = icmp slt i8 %390, 0
  br i1 %391, label %392, label %395

392:                                              ; preds = %389
  %393 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = load i8*, i8** %393, align 8
  call void @_ZdlPv(i8* %394) #18
  br label %395

395:                                              ; preds = %389, %392
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %327) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %326) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %325) #17
  br label %396

396:                                              ; preds = %395, %318
  %397 = load i32, i32* %133, align 8
  %398 = icmp eq i32 %397, 4
  br i1 %398, label %399, label %409

399:                                              ; preds = %396
  %400 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 4
  %401 = load i32, i32* %400, align 4
  %402 = icmp ult i32 %401, 3
  br i1 %402, label %403, label %409

403:                                              ; preds = %399
  %404 = call zeroext i1 @_ZNK4SkSL8Operator24isValidForMatrixOrVectorEv(%"class.SkSL::Operator"* nonnull %6) #17
  br i1 %404, label %405, label %409

405:                                              ; preds = %403
  %406 = call i32 @_ZNK4SkSL8Operator16removeAssignmentEv(%"class.SkSL::Operator"* nonnull %6) #17
  %407 = icmp eq i32 %406, 48
  br i1 %407, label %409, label %408

408:                                              ; preds = %405
  call void @_ZN4SkSL18MetalCodeGenerator19writeNumberAsMatrixERKNS_10ExpressionERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %13, %"class.SkSL::Type"* dereferenceable(184) %18)
  br label %410

409:                                              ; preds = %405, %399, %396, %403
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %13, i32 %28)
  br label %410

410:                                              ; preds = %409, %408
  br i1 %132, label %411, label %438

411:                                              ; preds = %410
  %412 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %413 = load i8, i8* %412, align 8, !range !2
  %414 = icmp eq i8 %413, 0
  br i1 %414, label %431, label %415

415:                                              ; preds = %411
  %416 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %417 = load i32, i32* %416, align 4
  %418 = icmp sgt i32 %417, 0
  br i1 %418, label %419, label %431

419:                                              ; preds = %415
  %420 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %421

421:                                              ; preds = %421, %419
  %422 = phi i32 [ 0, %419 ], [ %428, %421 ]
  %423 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %420, align 8
  %424 = bitcast %"class.SkSL::OutputStream"* %423 to void (%"class.SkSL::OutputStream"*, i8*)***
  %425 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %424, align 8
  %426 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %425, i64 2
  %427 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %426, align 8
  call void %427(%"class.SkSL::OutputStream"* %423, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %428 = add nuw nsw i32 %422, 1
  %429 = load i32, i32* %416, align 4
  %430 = icmp slt i32 %428, %429
  br i1 %430, label %421, label %431

431:                                              ; preds = %421, %411, %415
  %432 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %433 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %432, align 8
  %434 = bitcast %"class.SkSL::OutputStream"* %433 to void (%"class.SkSL::OutputStream"*, i8*)***
  %435 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %434, align 8
  %436 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %435, i64 2
  %437 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %436, align 8
  call void %437(%"class.SkSL::OutputStream"* %433, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %412, align 8
  br label %438

438:                                              ; preds = %431, %410
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator16writeBoolLiteralERKNS_7LiteralIbEE(%"class.SkSL::MetalCodeGenerator"* nocapture, %"class.SkSL::Literal"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i64 0, i64 0)
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %36, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i32 [ 0, %17 ], [ %26, %19 ]
  %21 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %18, align 8
  %22 = bitcast %"class.SkSL::OutputStream"* %21 to void (%"class.SkSL::OutputStream"*, i8*)***
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %23, i64 2
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, align 8
  tail call void %25(%"class.SkSL::OutputStream"* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %26 = add nuw nsw i32 %20, 1
  %27 = load i32, i32* %14, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %19, label %29

29:                                               ; preds = %19, %13, %9
  %30 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %31 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %32 = bitcast %"class.SkSL::OutputStream"* %31 to void (%"class.SkSL::OutputStream"*, i8*)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::OutputStream"* %31, i8* %6) #17
  store i8 0, i8* %10, align 8
  br label %36

36:                                               ; preds = %2, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator19writeAnyConstructorERKNS_14AnyConstructorEPKcS5_NS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::AnyConstructor"* dereferenceable(32), i8*, i8*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.SkSL::String", align 8
  %7 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %8 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %9 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %9, i64 3
  %11 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.SkSL::Type"* %11(%"class.SkSL::Expression"* %7) #17
  %13 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %12) #17
  %14 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = select i1 %17, i8* %19, i8* %13
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %51, label %23

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %43, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i32 [ 0, %31 ], [ %40, %33 ]
  %35 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %32, align 8
  %36 = bitcast %"class.SkSL::OutputStream"* %35 to void (%"class.SkSL::OutputStream"*, i8*)***
  %37 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %37, i64 2
  %39 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %38, align 8
  call void %39(%"class.SkSL::OutputStream"* %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %40 = add nuw nsw i32 %34, 1
  %41 = load i32, i32* %28, align 4
  %42 = icmp slt i32 %40, %41
  br i1 %42, label %33, label %43

43:                                               ; preds = %33, %27, %23
  %44 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %45 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %44, align 8
  %46 = bitcast %"class.SkSL::OutputStream"* %45 to void (%"class.SkSL::OutputStream"*, i8*)***
  %47 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %47, i64 2
  %49 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %48, align 8
  call void %49(%"class.SkSL::OutputStream"* %45, i8* %20) #17
  store i8 0, i8* %24, align 8
  %50 = load i8, i8* %15, align 1
  br label %51

51:                                               ; preds = %43, %5
  %52 = phi i8 [ %16, %5 ], [ %50, %43 ]
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %51
  %55 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %55) #18
  br label %56

56:                                               ; preds = %51, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #17
  %57 = load i8, i8* %2, align 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %86, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %79, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %79

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i32 [ 0, %67 ], [ %76, %69 ]
  %71 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %68, align 8
  %72 = bitcast %"class.SkSL::OutputStream"* %71 to void (%"class.SkSL::OutputStream"*, i8*)***
  %73 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %73, i64 2
  %75 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %74, align 8
  call void %75(%"class.SkSL::OutputStream"* %71, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %76 = add nuw nsw i32 %70, 1
  %77 = load i32, i32* %64, align 4
  %78 = icmp slt i32 %76, %77
  br i1 %78, label %69, label %79

79:                                               ; preds = %69, %63, %59
  %80 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %81 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %80, align 8
  %82 = bitcast %"class.SkSL::OutputStream"* %81 to void (%"class.SkSL::OutputStream"*, i8*)***
  %83 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %83, i64 2
  %85 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %84, align 8
  call void %85(%"class.SkSL::OutputStream"* %81, i8* %2) #17
  store i8 0, i8* %60, align 8
  br label %86

86:                                               ; preds = %56, %79
  %87 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %88 = load { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %87, align 8
  %89 = getelementptr inbounds { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)** %88, i64 12
  %90 = load { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)** %89, align 8
  %91 = call { %"class.std::__1::unique_ptr.258"*, i64 } %90(%"class.SkSL::AnyConstructor"* %1) #17
  %92 = extractvalue { %"class.std::__1::unique_ptr.258"*, i64 } %91, 0
  %93 = extractvalue { %"class.std::__1::unique_ptr.258"*, i64 } %91, 1
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %92, i64 %93
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %98 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %99 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %131

100:                                              ; preds = %158, %86
  %101 = load i8, i8* %3, align 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %130, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %123, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %109 = load i32, i32* %108, align 4
  %110 = icmp sgt i32 %109, 0
  br i1 %110, label %111, label %123

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %113

113:                                              ; preds = %113, %111
  %114 = phi i32 [ 0, %111 ], [ %120, %113 ]
  %115 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %112, align 8
  %116 = bitcast %"class.SkSL::OutputStream"* %115 to void (%"class.SkSL::OutputStream"*, i8*)***
  %117 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %117, i64 2
  %119 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %118, align 8
  call void %119(%"class.SkSL::OutputStream"* %115, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %120 = add nuw nsw i32 %114, 1
  %121 = load i32, i32* %108, align 4
  %122 = icmp slt i32 %120, %121
  br i1 %122, label %113, label %123

123:                                              ; preds = %113, %107, %103
  %124 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %125 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %124, align 8
  %126 = bitcast %"class.SkSL::OutputStream"* %125 to void (%"class.SkSL::OutputStream"*, i8*)***
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %127, i64 2
  %129 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %128, align 8
  call void %129(%"class.SkSL::OutputStream"* %125, i8* %3) #17
  store i8 0, i8* %104, align 8
  br label %130

130:                                              ; preds = %100, %123
  ret void

131:                                              ; preds = %96, %158
  %132 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), %96 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %158 ]
  %133 = phi %"class.std::__1::unique_ptr.258"* [ %92, %96 ], [ %161, %158 ]
  %134 = load i8, i8* %132, align 1
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %158, label %136

136:                                              ; preds = %131
  %137 = load i8, i8* %97, align 8, !range !2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %152, label %139

139:                                              ; preds = %136
  %140 = load i32, i32* %98, align 4
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %142, label %152

142:                                              ; preds = %139, %142
  %143 = phi i32 [ %149, %142 ], [ 0, %139 ]
  %144 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %99, align 8
  %145 = bitcast %"class.SkSL::OutputStream"* %144 to void (%"class.SkSL::OutputStream"*, i8*)***
  %146 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %146, i64 2
  %148 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %147, align 8
  call void %148(%"class.SkSL::OutputStream"* %144, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %149 = add nuw nsw i32 %143, 1
  %150 = load i32, i32* %98, align 4
  %151 = icmp slt i32 %149, %150
  br i1 %151, label %142, label %152

152:                                              ; preds = %142, %139, %136
  %153 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %99, align 8
  %154 = bitcast %"class.SkSL::OutputStream"* %153 to void (%"class.SkSL::OutputStream"*, i8*)***
  %155 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %155, i64 2
  %157 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %156, align 8
  call void %157(%"class.SkSL::OutputStream"* %153, i8* %132) #17
  store i8 0, i8* %97, align 8
  br label %158

158:                                              ; preds = %131, %152
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %133, i64 0, i32 0, i32 0, i32 0
  %160 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %159, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %160, i32 17)
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %133, i64 1
  %162 = icmp eq %"class.std::__1::unique_ptr.258"* %161, %94
  br i1 %162, label %100, label %131
}

declare dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator24writeConstructorCompoundERKNS_19ConstructorCompoundENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::ConstructorCompound"* dereferenceable(64), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %5, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN4SkSL18MetalCodeGenerator30writeConstructorCompoundMatrixERKNS_19ConstructorCompoundENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::ConstructorCompound"* dereferenceable(64) %1, i32 undef)
  br label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4SkSL18MetalCodeGenerator19writeAnyConstructorERKNS_14AnyConstructorEPKcS5_NS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i32 undef)
  br label %12

12:                                               ; preds = %10, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator28writeConstructorMatrixResizeERKNS_23ConstructorMatrixResizeENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::ConstructorMatrixResize"* dereferenceable(104), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.SkSL::ConstructorMatrixResize", %"class.SkSL::ConstructorMatrixResize"* %1, i64 0, i32 0, i32 0
  call void @_ZN4SkSL18MetalCodeGenerator24getMatrixConstructHelperERKNS_14AnyConstructorE(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %6)
  %7 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = select i1 %10, i8* %12, i8* %5
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %44, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %36, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 0, %24 ], [ %33, %26 ]
  %28 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %29 = bitcast %"class.SkSL::OutputStream"* %28 to void (%"class.SkSL::OutputStream"*, i8*)***
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, i64 2
  %32 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, align 8
  call void %32(%"class.SkSL::OutputStream"* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %33 = add nuw nsw i32 %27, 1
  %34 = load i32, i32* %21, align 4
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %26, label %36

36:                                               ; preds = %26, %20, %16
  %37 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %38 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %37, align 8
  %39 = bitcast %"class.SkSL::OutputStream"* %38 to void (%"class.SkSL::OutputStream"*, i8*)***
  %40 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %40, i64 2
  %42 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %41, align 8
  call void %42(%"class.SkSL::OutputStream"* %38, i8* %13) #17
  store i8 0, i8* %17, align 8
  %43 = load i8, i8* %8, align 1
  br label %44

44:                                               ; preds = %3, %36
  %45 = phi i8 [ %9, %3 ], [ %43, %36 ]
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  %48 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %48) #18
  br label %49

49:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  %50 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %69, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %59

59:                                               ; preds = %59, %57
  %60 = phi i32 [ 0, %57 ], [ %66, %59 ]
  %61 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %58, align 8
  %62 = bitcast %"class.SkSL::OutputStream"* %61 to void (%"class.SkSL::OutputStream"*, i8*)***
  %63 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, i64 2
  %65 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %64, align 8
  call void %65(%"class.SkSL::OutputStream"* %61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %66 = add nuw nsw i32 %60, 1
  %67 = load i32, i32* %54, align 4
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %59, label %69

69:                                               ; preds = %59, %49, %53
  %70 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %71 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %70, align 8
  %72 = bitcast %"class.SkSL::OutputStream"* %71 to void (%"class.SkSL::OutputStream"*, i8*)***
  %73 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %73, i64 2
  %75 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %74, align 8
  call void %75(%"class.SkSL::OutputStream"* %71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %50, align 8
  %76 = getelementptr inbounds %"class.SkSL::ConstructorMatrixResize", %"class.SkSL::ConstructorMatrixResize"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %76, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %77, i32 17)
  %78 = load i8, i8* %50, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %94, label %80

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %84, label %94

84:                                               ; preds = %80, %84
  %85 = phi i32 [ %91, %84 ], [ 0, %80 ]
  %86 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %70, align 8
  %87 = bitcast %"class.SkSL::OutputStream"* %86 to void (%"class.SkSL::OutputStream"*, i8*)***
  %88 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %88, i64 2
  %90 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %89, align 8
  call void %90(%"class.SkSL::OutputStream"* %86, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %91 = add nuw nsw i32 %85, 1
  %92 = load i32, i32* %81, align 4
  %93 = icmp slt i32 %91, %92
  br i1 %93, label %84, label %94

94:                                               ; preds = %84, %69, %80
  %95 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %70, align 8
  %96 = bitcast %"class.SkSL::OutputStream"* %95 to void (%"class.SkSL::OutputStream"*, i8*)***
  %97 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %97, i64 2
  %99 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %98, align 8
  call void %99(%"class.SkSL::OutputStream"* %95, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %50, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator20writeCastConstructorERKNS_14AnyConstructorEPKcS5_NS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::AnyConstructor"* dereferenceable(32), i8*, i8*, i32) local_unnamed_addr #0 align 2 {
  %6 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %7 = load { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %6, align 8
  %8 = getelementptr inbounds { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)** %7, i64 12
  %9 = load { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)** %8, align 8
  %10 = tail call { %"class.std::__1::unique_ptr.258"*, i64 } %9(%"class.SkSL::AnyConstructor"* %1) #17
  %11 = extractvalue { %"class.std::__1::unique_ptr.258"*, i64 } %10, 1
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %68

13:                                               ; preds = %5
  %14 = extractvalue { %"class.std::__1::unique_ptr.258"*, i64 } %10, 0
  %15 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %16 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %17 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %17, i64 3
  %19 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %18, align 8
  %20 = tail call dereferenceable(184) %"class.SkSL::Type"* %19(%"class.SkSL::Expression"* %15) #17
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %14, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %21, align 8
  %23 = bitcast %"class.SkSL::Expression"* %22 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %24 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %24, i64 3
  %26 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %25, align 8
  %27 = tail call dereferenceable(184) %"class.SkSL::Type"* %26(%"class.SkSL::Expression"* %22) #17
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %20, i64 0, i32 8
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %27, i64 0, i32 8
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %33, label %68

33:                                               ; preds = %13, %44
  %34 = phi i32 [ %54, %44 ], [ %29, %13 ]
  %35 = phi %"class.SkSL::Type"* [ %52, %44 ], [ %27, %13 ]
  %36 = phi %"class.SkSL::Type"* [ %48, %44 ], [ %20, %13 ]
  %37 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %36, i64 0, i32 9
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %35, i64 0, i32 9
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %68

42:                                               ; preds = %33
  %43 = icmp sgt i32 %34, 1
  br i1 %43, label %44, label %58

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %36, i64 0, i32 6
  %46 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %45, align 8
  %47 = icmp eq %"class.SkSL::Type"* %46, null
  %48 = select i1 %47, %"class.SkSL::Type"* %36, %"class.SkSL::Type"* %46
  %49 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %35, i64 0, i32 6
  %50 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %49, align 8
  %51 = icmp eq %"class.SkSL::Type"* %50, null
  %52 = select i1 %51, %"class.SkSL::Type"* %35, %"class.SkSL::Type"* %50
  %53 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 8
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %52, i64 0, i32 8
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %54, %56
  br i1 %57, label %33, label %68

58:                                               ; preds = %42
  %59 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %36, i64 0, i32 4
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %35, i64 0, i32 4
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %21, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %67, i32 %4)
  br label %69

68:                                               ; preds = %33, %44, %13, %58, %62, %5
  tail call void @_ZN4SkSL18MetalCodeGenerator19writeAnyConstructorERKNS_14AnyConstructorEPKcS5_NS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %1, i8* %2, i8* %3, i32 undef)
  br label %69

69:                                               ; preds = %68, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::MetalCodeGenerator"* nocapture, %"class.SkSL::Literal.300"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.SkSL::StringFragment"*
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = getelementptr inbounds %"class.SkSL::Literal.300", %"class.SkSL::Literal.300"* %1, i64 0, i32 0, i32 1
  %12 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 7
  %14 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %14, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %15, align 8
  %17 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 0, i32 1, i32 0
  %19 = bitcast i8** %18 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  store <2 x i64> %20, <2 x i64>* %4, align 16
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 0, i32 1, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 0, i32 1, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %5, i8* %22, i64 %24) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #17
  br i1 %25, label %26, label %83

26:                                               ; preds = %2
  %27 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #17
  %28 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #17
  %29 = getelementptr inbounds %"class.SkSL::Literal.300", %"class.SkSL::Literal.300"* %1, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 4294967295
  call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* nonnull sret %7, i64 %31) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.153, i64 0, i64 0)) #17
  %32 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = select i1 %35, i8* %37, i8* %27
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %69, label %41

41:                                               ; preds = %26
  %42 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i32 [ 0, %49 ], [ %58, %51 ]
  %53 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %50, align 8
  %54 = bitcast %"class.SkSL::OutputStream"* %53 to void (%"class.SkSL::OutputStream"*, i8*)***
  %55 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %55, i64 2
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %56, align 8
  call void %57(%"class.SkSL::OutputStream"* %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %58 = add nuw nsw i32 %52, 1
  %59 = load i32, i32* %46, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %51, label %61

61:                                               ; preds = %51, %45, %41
  %62 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %63 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %62, align 8
  %64 = bitcast %"class.SkSL::OutputStream"* %63 to void (%"class.SkSL::OutputStream"*, i8*)***
  %65 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %65, i64 2
  %67 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %66, align 8
  call void %67(%"class.SkSL::OutputStream"* %63, i8* %38) #17
  store i8 0, i8* %42, align 8
  %68 = load i8, i8* %33, align 1
  br label %69

69:                                               ; preds = %26, %61
  %70 = phi i8 [ %34, %26 ], [ %68, %61 ]
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %73) #18
  br label %74

74:                                               ; preds = %69, %72
  %75 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #18
  br label %82

82:                                               ; preds = %74, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #17
  br label %199

83:                                               ; preds = %2
  %84 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %85 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %13, align 8
  %86 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %85, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %87 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %86, align 8
  %88 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #17
  %89 = bitcast i8** %18 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 8
  store <2 x i64> %90, <2 x i64>* %3, align 16
  %91 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %87, i64 0, i32 0, i32 1, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %87, i64 0, i32 0, i32 1, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %84, i8* %92, i64 %94) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #17
  br i1 %95, label %96, label %153

96:                                               ; preds = %83
  %97 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #17
  %98 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #17
  %99 = getelementptr inbounds %"class.SkSL::Literal.300", %"class.SkSL::Literal.300"* %1, i64 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, 65535
  call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* nonnull sret %9, i64 %101) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.153, i64 0, i64 0)) #17
  %102 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = select i1 %105, i8* %107, i8* %97
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %139, label %111

111:                                              ; preds = %96
  %112 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %113 = load i8, i8* %112, align 8, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %121

121:                                              ; preds = %121, %119
  %122 = phi i32 [ 0, %119 ], [ %128, %121 ]
  %123 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %120, align 8
  %124 = bitcast %"class.SkSL::OutputStream"* %123 to void (%"class.SkSL::OutputStream"*, i8*)***
  %125 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %125, i64 2
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %126, align 8
  call void %127(%"class.SkSL::OutputStream"* %123, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %128 = add nuw nsw i32 %122, 1
  %129 = load i32, i32* %116, align 4
  %130 = icmp slt i32 %128, %129
  br i1 %130, label %121, label %131

131:                                              ; preds = %121, %115, %111
  %132 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %133 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %132, align 8
  %134 = bitcast %"class.SkSL::OutputStream"* %133 to void (%"class.SkSL::OutputStream"*, i8*)***
  %135 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %135, i64 2
  %137 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %136, align 8
  call void %137(%"class.SkSL::OutputStream"* %133, i8* %108) #17
  store i8 0, i8* %112, align 8
  %138 = load i8, i8* %103, align 1
  br label %139

139:                                              ; preds = %96, %131
  %140 = phi i8 [ %104, %96 ], [ %138, %131 ]
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %139
  %143 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %143) #18
  br label %144

144:                                              ; preds = %139, %142
  %145 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  call void @_ZdlPv(i8* %151) #18
  br label %152

152:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #17
  br label %199

153:                                              ; preds = %83
  %154 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #17
  %155 = getelementptr inbounds %"class.SkSL::Literal.300", %"class.SkSL::Literal.300"* %1, i64 0, i32 1
  %156 = load i64, i64* %155, align 8
  call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* nonnull sret %10, i64 %156) #17
  %157 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  %161 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = select i1 %160, i8* %162, i8* %154
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %194, label %166

166:                                              ; preds = %153
  %167 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %168 = load i8, i8* %167, align 8, !range !2
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %186, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %172 = load i32, i32* %171, align 4
  %173 = icmp sgt i32 %172, 0
  br i1 %173, label %174, label %186

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %176

176:                                              ; preds = %176, %174
  %177 = phi i32 [ 0, %174 ], [ %183, %176 ]
  %178 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %175, align 8
  %179 = bitcast %"class.SkSL::OutputStream"* %178 to void (%"class.SkSL::OutputStream"*, i8*)***
  %180 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %180, i64 2
  %182 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %181, align 8
  call void %182(%"class.SkSL::OutputStream"* %178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %183 = add nuw nsw i32 %177, 1
  %184 = load i32, i32* %171, align 4
  %185 = icmp slt i32 %183, %184
  br i1 %185, label %176, label %186

186:                                              ; preds = %176, %170, %166
  %187 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %188 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %187, align 8
  %189 = bitcast %"class.SkSL::OutputStream"* %188 to void (%"class.SkSL::OutputStream"*, i8*)***
  %190 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %190, i64 2
  %192 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %191, align 8
  call void %192(%"class.SkSL::OutputStream"* %188, i8* %163) #17
  store i8 0, i8* %167, align 8
  %193 = load i8, i8* %158, align 1
  br label %194

194:                                              ; preds = %153, %186
  %195 = phi i8 [ %159, %153 ], [ %193, %186 ]
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %194
  %198 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %198) #18
  br label %199

199:                                              ; preds = %197, %194, %152, %82
  %200 = phi i8* [ %97, %152 ], [ %27, %82 ], [ %154, %194 ], [ %154, %197 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator16writeFieldAccessERKNS_11FieldAccessE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::FieldAccess"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.419", align 8
  %4 = alloca %"class.std::__1::tuple.407", align 1
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.407", align 1
  %7 = alloca %"struct.SkSL::Type::Field"*, align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = bitcast %"struct.SkSL::Type::Field"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  store %"struct.SkSL::Type::Field"* inttoptr (i64 -6148914691236517206 to %"struct.SkSL::Type::Field"*), %"struct.SkSL::Type::Field"** %7, align 8
  %10 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %10, align 8
  %12 = bitcast %"class.SkSL::Expression"* %11 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %13 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %13, i64 3
  %15 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %14, align 8
  %16 = tail call dereferenceable(184) %"class.SkSL::Type"* %15(%"class.SkSL::Expression"* %11) #17
  %17 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 10, i32 0, i32 0
  %21 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %20, align 8
  %22 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %21, i64 %19
  store %"struct.SkSL::Type::Field"* %22, %"struct.SkSL::Type::Field"** %7, align 8
  %23 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %1, i64 0, i32 2
  %24 = load i8, i8* %23, align 4
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %54

26:                                               ; preds = %2
  %27 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %10, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %27, i32 2)
  %28 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %47, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  %39 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %40 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*)***
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %41, i64 2
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %42, align 8
  tail call void %43(%"class.SkSL::OutputStream"* %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %44 = add nuw nsw i32 %38, 1
  %45 = load i32, i32* %32, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %37, label %47

47:                                               ; preds = %37, %26, %31
  %48 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %49 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %48, align 8
  %50 = bitcast %"class.SkSL::OutputStream"* %49 to void (%"class.SkSL::OutputStream"*, i8*)***
  %51 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %51, i64 2
  %53 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %52, align 8
  tail call void %53(%"class.SkSL::OutputStream"* %49, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122, i64 0, i64 0)) #17
  store i8 0, i8* %28, align 8
  br label %54

54:                                               ; preds = %47, %2
  %55 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %21, i64 %19, i32 0, i32 0, i32 6
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %85

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %78, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i32 [ 0, %66 ], [ %75, %68 ]
  %70 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %67, align 8
  %71 = bitcast %"class.SkSL::OutputStream"* %70 to void (%"class.SkSL::OutputStream"*, i8*)***
  %72 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %72, i64 2
  %74 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %73, align 8
  tail call void %74(%"class.SkSL::OutputStream"* %70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %75 = add nuw nsw i32 %69, 1
  %76 = load i32, i32* %63, align 4
  %77 = icmp slt i32 %75, %76
  br i1 %77, label %68, label %78

78:                                               ; preds = %68, %58, %62
  %79 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %80 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %79, align 8
  %81 = bitcast %"class.SkSL::OutputStream"* %80 to void (%"class.SkSL::OutputStream"*, i8*)***
  %82 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %82, i64 2
  %84 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %83, align 8
  tail call void %84(%"class.SkSL::OutputStream"* %80, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.123, i64 0, i64 0)) #17
  store i8 0, i8* %59, align 8
  br label %255

85:                                               ; preds = %54
  %86 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %21, i64 %19, i32 1
  %87 = tail call zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"* %86, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.124, i64 0, i64 0)) #17
  br i1 %87, label %88, label %115

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %108, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i32 [ 0, %96 ], [ %105, %98 ]
  %100 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %97, align 8
  %101 = bitcast %"class.SkSL::OutputStream"* %100 to void (%"class.SkSL::OutputStream"*, i8*)***
  %102 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %102, i64 2
  %104 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %103, align 8
  tail call void %104(%"class.SkSL::OutputStream"* %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %105 = add nuw nsw i32 %99, 1
  %106 = load i32, i32* %93, align 4
  %107 = icmp slt i32 %105, %106
  br i1 %107, label %98, label %108

108:                                              ; preds = %98, %88, %92
  %109 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %110 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %109, align 8
  %111 = bitcast %"class.SkSL::OutputStream"* %110 to void (%"class.SkSL::OutputStream"*, i8*)***
  %112 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %112, i64 2
  %114 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %113, align 8
  tail call void %114(%"class.SkSL::OutputStream"* %110, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.125, i64 0, i64 0)) #17
  store i8 0, i8* %89, align 8
  br label %255

115:                                              ; preds = %85
  %116 = load i8, i8* %23, align 4
  %117 = icmp eq i8 %116, 1
  br i1 %117, label %118, label %215

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %120 = load i8, i8* %119, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %124 = load i32, i32* %123, align 4
  %125 = icmp sgt i32 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi i32 [ 0, %126 ], [ %135, %128 ]
  %130 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %127, align 8
  %131 = bitcast %"class.SkSL::OutputStream"* %130 to void (%"class.SkSL::OutputStream"*, i8*)***
  %132 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %132, i64 2
  %134 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %133, align 8
  tail call void %134(%"class.SkSL::OutputStream"* %130, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %135 = add nuw nsw i32 %129, 1
  %136 = load i32, i32* %123, align 4
  %137 = icmp slt i32 %135, %136
  br i1 %137, label %128, label %138

138:                                              ; preds = %128, %118, %122
  %139 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %140 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %139, align 8
  %141 = bitcast %"class.SkSL::OutputStream"* %140 to void (%"class.SkSL::OutputStream"*, i8*)***
  %142 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %142, i64 2
  %144 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %143, align 8
  tail call void %144(%"class.SkSL::OutputStream"* %140, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.119, i64 0, i64 0)) #17
  store i8 0, i8* %119, align 8
  %145 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 2, i32 0
  %146 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #17
  %147 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"struct.SkSL::Type::Field"** %7, %"struct.SkSL::Type::Field"*** %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::tuple.407", %"class.std::__1::tuple.407"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %148) #17
  %149 = call { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"* %145, %"struct.SkSL::Type::Field"** nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.407"* nonnull dereferenceable(1) %6) #17
  %150 = extractvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %149, 0
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %150, i64 3
  %152 = bitcast %"struct.std::__1::__hash_node_base.138"* %151 to %"class.SkSL::InterfaceBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %148) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #17
  %153 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 3, i32 0
  %154 = bitcast %"class.std::__1::tuple.419"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #17
  %155 = bitcast %"class.std::__1::tuple.419"* %3 to %"struct.std::__1::__hash_node_base.138"**
  store %"struct.std::__1::__hash_node_base.138"* %151, %"struct.std::__1::__hash_node_base.138"** %155, align 8
  %156 = getelementptr inbounds %"class.std::__1::tuple.407", %"class.std::__1::tuple.407"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %156) #17
  %157 = call { %"struct.std::__1::__hash_node_base.163"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.159"* %153, %"class.SkSL::InterfaceBlock"** dereferenceable(8) %152, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.419"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.407"* nonnull dereferenceable(1) %4) #17
  %158 = extractvalue { %"struct.std::__1::__hash_node_base.163"*, i8 } %157, 0
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %158, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %156) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #17
  %160 = bitcast %"struct.std::__1::__hash_node_base.163"* %159 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  %164 = bitcast %"struct.std::__1::__hash_node_base.163"* %159 to i8**
  %165 = load i8*, i8** %164, align 8
  %166 = bitcast %"struct.std::__1::__hash_node_base.163"* %159 to i8*
  %167 = select i1 %163, i8* %165, i8* %166
  %168 = load i8, i8* %167, align 1
  %169 = icmp eq i8 %168, 0
  %170 = load i8, i8* %119, align 8
  %171 = icmp eq i8 %170, 0
  br i1 %169, label %193, label %172

172:                                              ; preds = %138
  br i1 %171, label %187, label %173

173:                                              ; preds = %172
  %174 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %175 = load i32, i32* %174, align 4
  %176 = icmp sgt i32 %175, 0
  br i1 %176, label %177, label %187

177:                                              ; preds = %173, %177
  %178 = phi i32 [ %184, %177 ], [ 0, %173 ]
  %179 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %139, align 8
  %180 = bitcast %"class.SkSL::OutputStream"* %179 to void (%"class.SkSL::OutputStream"*, i8*)***
  %181 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %181, i64 2
  %183 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %182, align 8
  call void %183(%"class.SkSL::OutputStream"* %179, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %184 = add nuw nsw i32 %178, 1
  %185 = load i32, i32* %174, align 4
  %186 = icmp slt i32 %184, %185
  br i1 %186, label %177, label %187

187:                                              ; preds = %177, %172, %173
  %188 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %139, align 8
  %189 = bitcast %"class.SkSL::OutputStream"* %188 to void (%"class.SkSL::OutputStream"*, i8*)***
  %190 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %190, i64 2
  %192 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %191, align 8
  call void %192(%"class.SkSL::OutputStream"* %188, i8* %167) #17
  store i8 0, i8* %119, align 8
  br label %208

193:                                              ; preds = %138
  br i1 %171, label %208, label %194

194:                                              ; preds = %193
  %195 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %196 = load i32, i32* %195, align 4
  %197 = icmp sgt i32 %196, 0
  br i1 %197, label %198, label %208

198:                                              ; preds = %194, %198
  %199 = phi i32 [ %205, %198 ], [ 0, %194 ]
  %200 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %139, align 8
  %201 = bitcast %"class.SkSL::OutputStream"* %200 to void (%"class.SkSL::OutputStream"*, i8*)***
  %202 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %202, i64 2
  %204 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %203, align 8
  call void %204(%"class.SkSL::OutputStream"* %200, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %205 = add nuw nsw i32 %199, 1
  %206 = load i32, i32* %195, align 4
  %207 = icmp slt i32 %205, %206
  br i1 %207, label %198, label %208

208:                                              ; preds = %198, %187, %193, %194
  %209 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %139, align 8
  %210 = bitcast %"class.SkSL::OutputStream"* %209 to void (%"class.SkSL::OutputStream"*, i8*)***
  %211 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %211, i64 2
  %213 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %212, align 8
  call void %213(%"class.SkSL::OutputStream"* %209, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.126, i64 0, i64 0)) #17
  store i8 0, i8* %119, align 8
  %214 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %7, align 8
  br label %215

215:                                              ; preds = %208, %115
  %216 = phi %"struct.SkSL::Type::Field"* [ %214, %208 ], [ %22, %115 ]
  %217 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #17
  %218 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %216, i64 0, i32 1, i32 0
  %219 = load i8*, i8** %218, align 8
  %220 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %216, i64 0, i32 1, i32 1
  %221 = load i64, i64* %220, align 8
  %222 = icmp ugt i64 %221, -17
  br i1 %222, label %223, label %225

223:                                              ; preds = %215
  %224 = bitcast %"class.SkSL::String"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %224) #19
  unreachable

225:                                              ; preds = %215
  %226 = icmp ult i64 %221, 23
  br i1 %226, label %236, label %227

227:                                              ; preds = %225
  %228 = add nuw i64 %221, 16
  %229 = and i64 %228, -16
  %230 = call i8* @_Znwm(i64 %229) #18
  %231 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %230, i8** %231, align 8
  %232 = or i64 %229, -9223372036854775808
  %233 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %221, i64* %234, align 8
  %235 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %241

236:                                              ; preds = %225
  %237 = trunc i64 %221 to i8
  %238 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  store i8 %237, i8* %239, align 1
  %240 = icmp eq i64 %221, 0
  br i1 %240, label %244, label %241

241:                                              ; preds = %236, %227
  %242 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %238, %236 ], [ %235, %227 ]
  %243 = phi i8* [ %217, %236 ], [ %230, %227 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %243, i8* align 1 %219, i64 %221, i1 false) #17
  br label %244

244:                                              ; preds = %236, %241
  %245 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %238, %236 ], [ %242, %241 ]
  %246 = phi i8* [ %217, %236 ], [ %243, %241 ]
  %247 = getelementptr inbounds i8, i8* %246, i64 %221
  store i8 0, i8* %247, align 1
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %8)
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %245, i64 0, i32 1, i32 0
  %249 = load i8, i8* %248, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %254

251:                                              ; preds = %244
  %252 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load i8*, i8** %252, align 8
  call void @_ZdlPv(i8* %253) #18
  br label %254

254:                                              ; preds = %244, %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #17
  br label %255

255:                                              ; preds = %108, %254, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE(%"class.SkSL::MetalCodeGenerator"* nocapture, %"class.SkSL::Literal.299"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"class.SkSL::Literal.299", %"class.SkSL::Literal.299"* %1, i64 0, i32 1
  %6 = load float, float* %5, align 8
  %7 = fpext float %6 to double
  call void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* nonnull sret %3, double %7) #17
  %8 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = select i1 %11, i8* %13, i8* %4
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %37, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i32 [ 0, %25 ], [ %34, %27 ]
  %29 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %30 = bitcast %"class.SkSL::OutputStream"* %29 to void (%"class.SkSL::OutputStream"*, i8*)***
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, i64 2
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %32, align 8
  call void %33(%"class.SkSL::OutputStream"* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %34 = add nuw nsw i32 %28, 1
  %35 = load i32, i32* %22, align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %27, label %37

37:                                               ; preds = %27, %21, %17
  %38 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %39 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %38, align 8
  %40 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*)***
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %41, i64 2
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %42, align 8
  call void %43(%"class.SkSL::OutputStream"* %39, i8* %14) #17
  store i8 0, i8* %18, align 8
  %44 = load i8, i8* %9, align 1
  br label %45

45:                                               ; preds = %2, %37
  %46 = phi i8 [ %10, %2 ], [ %44, %37 ]
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %45
  %49 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %49) #18
  br label %50

50:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator17writeFunctionCallERKNS_12FunctionCallE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::FunctionCall"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkSTArray.331, align 8
  %4 = alloca %"struct.SkSL::Analysis::AssignmentInfo", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca i8*, align 8
  %8 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 1
  %9 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %9, i64 0, i32 7
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call zeroext i1 @_ZN4SkSL18MetalCodeGenerator18writeIntrinsicCallERKNS_12FunctionCallENS_13IntrinsicKindE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %1, i32 %11)
  br i1 %14, label %288, label %15

15:                                               ; preds = %2, %13
  %16 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.SkSTArray.331, %class.SkSTArray.331* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %17) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 128, i1 false)
  %18 = getelementptr inbounds %class.SkSTArray.331, %class.SkSTArray.331* %3, i64 0, i32 0, i32 0, i64 128
  %19 = getelementptr inbounds %class.SkSTArray.331, %class.SkSTArray.331* %3, i64 0, i32 0, i32 0, i64 136
  %20 = bitcast i8* %19 to i64*
  %21 = bitcast i8* %18 to i8**
  store i8* %17, i8** %21, align 8
  store i64 137438953472, i64* %20, align 8
  %22 = bitcast i8* %18 to %class.SkTArray.304*
  %23 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %24 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = lshr i64 %26, 1
  %28 = trunc i64 %27 to i32
  %29 = and i32 %28, 2147483647
  call void @_ZN8SkTArrayIPN4SkSL17VariableReferenceELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.304* %22, i32 %29, i32 1) #17
  %30 = bitcast i8* %18 to %"class.SkSL::VariableReference"***
  %31 = load %"class.SkSL::VariableReference"**, %"class.SkSL::VariableReference"*** %30, align 8
  %32 = load i64, i64* %20, align 8
  %33 = lshr i64 %32, 1
  %34 = add nuw i64 %33, %27
  %35 = shl i64 %34, 1
  %36 = and i64 %35, 4294967294
  %37 = and i64 %32, -4294967295
  %38 = or i64 %36, %37
  store i64 %38, i64* %20, align 8
  %39 = icmp eq i32 %29, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %15
  %41 = and i64 %33, 2147483647
  %42 = getelementptr inbounds %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %31, i64 %41
  %43 = bitcast %"class.SkSL::VariableReference"** %42 to i8*
  %44 = zext i32 %29 to i64
  %45 = shl nuw nsw i64 %44, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 %45, i1 false)
  br label %46

46:                                               ; preds = %40, %15
  %47 = load i64, i64* %25, align 8
  %48 = and i64 %47, 4294967294
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %133, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %9, i64 0, i32 3, i32 0, i32 0
  %52 = bitcast %"struct.SkSL::Analysis::AssignmentInfo"* %4 to i8*
  %53 = getelementptr inbounds %"struct.SkSL::Analysis::AssignmentInfo", %"struct.SkSL::Analysis::AssignmentInfo"* %4, i64 0, i32 0
  %54 = bitcast i8* %23 to %"class.std::__1::unique_ptr.258"**
  %55 = bitcast %"struct.SkSL::Analysis::AssignmentInfo"* %4 to i64*
  br label %59

56:                                               ; preds = %82
  %57 = and i8 %84, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %133, label %89

59:                                               ; preds = %50, %82
  %60 = phi i64 [ %47, %50 ], [ %83, %82 ]
  %61 = phi i64 [ 0, %50 ], [ %85, %82 ]
  %62 = phi i8 [ 0, %50 ], [ %84, %82 ]
  %63 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %51, align 8
  %64 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %63, i64 %61
  %65 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %64, align 8
  %66 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %65, i64 0, i32 2
  %67 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %66, align 8
  %68 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %67, i64 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #17
  store %"class.SkSL::VariableReference"* null, %"class.SkSL::VariableReference"** %53, align 8
  %73 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %54, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %73, i64 %61, i32 0, i32 0, i32 0
  %75 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %74, align 8
  %76 = call zeroext i1 @_ZN4SkSL8Analysis12IsAssignableERNS_10ExpressionEPNS0_14AssignmentInfoEPNS_13ErrorReporterE(%"class.SkSL::Expression"* dereferenceable(24) %75, %"struct.SkSL::Analysis::AssignmentInfo"* nonnull %4, %"class.SkSL::ErrorReporter"* null) #17
  %77 = load i64, i64* %55, align 8
  %78 = load %"class.SkSL::VariableReference"**, %"class.SkSL::VariableReference"*** %30, align 8
  %79 = getelementptr inbounds %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %78, i64 %61
  %80 = bitcast %"class.SkSL::VariableReference"** %79 to i64*
  store i64 %77, i64* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #17
  %81 = load i64, i64* %25, align 8
  br label %82

82:                                               ; preds = %59, %72
  %83 = phi i64 [ %81, %72 ], [ %60, %59 ]
  %84 = phi i8 [ 1, %72 ], [ %62, %59 ]
  %85 = add nuw nsw i64 %61, 1
  %86 = lshr i64 %83, 1
  %87 = and i64 %86, 2147483647
  %88 = icmp ult i64 %85, %87
  br i1 %88, label %59, label %56

89:                                               ; preds = %56
  %90 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #17
  call void @_ZN4SkSL18MetalCodeGenerator17getOutParamHelperERKNS_12FunctionCallERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EERK8SkTArrayIPNS_17VariableReferenceELb0EE(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %1, %class.SkSTArray* dereferenceable(32) %16, %class.SkTArray.304* dereferenceable(16) %22)
  %91 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  %95 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = select i1 %94, i8* %96, i8* %90
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %128, label %100

100:                                              ; preds = %89
  %101 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %102 = load i8, i8* %101, align 8, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %120

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %110

110:                                              ; preds = %110, %108
  %111 = phi i32 [ 0, %108 ], [ %117, %110 ]
  %112 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %109, align 8
  %113 = bitcast %"class.SkSL::OutputStream"* %112 to void (%"class.SkSL::OutputStream"*, i8*)***
  %114 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %114, i64 2
  %116 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %115, align 8
  call void %116(%"class.SkSL::OutputStream"* %112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %117 = add nuw nsw i32 %111, 1
  %118 = load i32, i32* %105, align 4
  %119 = icmp slt i32 %117, %118
  br i1 %119, label %110, label %120

120:                                              ; preds = %110, %104, %100
  %121 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %122 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %121, align 8
  %123 = bitcast %"class.SkSL::OutputStream"* %122 to void (%"class.SkSL::OutputStream"*, i8*)***
  %124 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %124, i64 2
  %126 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %125, align 8
  call void %126(%"class.SkSL::OutputStream"* %122, i8* %97) #17
  store i8 0, i8* %101, align 8
  %127 = load i8, i8* %92, align 1
  br label %128

128:                                              ; preds = %89, %120
  %129 = phi i8 [ %93, %89 ], [ %127, %120 ]
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %177

131:                                              ; preds = %128
  %132 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %132) #18
  br label %177

133:                                              ; preds = %46, %56
  %134 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #17
  call void @_ZNK4SkSL19FunctionDeclaration11mangledNameEv(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::FunctionDeclaration"* %9) #17
  %135 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  %139 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = select i1 %138, i8* %140, i8* %134
  %142 = load i8, i8* %141, align 1
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %172, label %144

144:                                              ; preds = %133
  %145 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %146 = load i8, i8* %145, align 8, !range !2
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %150 = load i32, i32* %149, align 4
  %151 = icmp sgt i32 %150, 0
  br i1 %151, label %152, label %164

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %154

154:                                              ; preds = %154, %152
  %155 = phi i32 [ 0, %152 ], [ %161, %154 ]
  %156 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %153, align 8
  %157 = bitcast %"class.SkSL::OutputStream"* %156 to void (%"class.SkSL::OutputStream"*, i8*)***
  %158 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %158, i64 2
  %160 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %159, align 8
  call void %160(%"class.SkSL::OutputStream"* %156, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %161 = add nuw nsw i32 %155, 1
  %162 = load i32, i32* %149, align 4
  %163 = icmp slt i32 %161, %162
  br i1 %163, label %154, label %164

164:                                              ; preds = %154, %148, %144
  %165 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %166 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %165, align 8
  %167 = bitcast %"class.SkSL::OutputStream"* %166 to void (%"class.SkSL::OutputStream"*, i8*)***
  %168 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %168, i64 2
  %170 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %169, align 8
  call void %170(%"class.SkSL::OutputStream"* %166, i8* %141) #17
  store i8 0, i8* %145, align 8
  %171 = load i8, i8* %136, align 1
  br label %172

172:                                              ; preds = %133, %164
  %173 = phi i8 [ %137, %133 ], [ %171, %164 ]
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %172
  %176 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %176) #18
  br label %177

177:                                              ; preds = %175, %172, %131, %128
  %178 = phi i8* [ %90, %128 ], [ %90, %131 ], [ %134, %172 ], [ %134, %175 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #17
  %179 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %180 = load i8, i8* %179, align 8, !range !2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %198, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %184 = load i32, i32* %183, align 4
  %185 = icmp sgt i32 %184, 0
  br i1 %185, label %186, label %198

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %188

188:                                              ; preds = %188, %186
  %189 = phi i32 [ 0, %186 ], [ %195, %188 ]
  %190 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %187, align 8
  %191 = bitcast %"class.SkSL::OutputStream"* %190 to void (%"class.SkSL::OutputStream"*, i8*)***
  %192 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %192, i64 2
  %194 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %193, align 8
  call void %194(%"class.SkSL::OutputStream"* %190, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %195 = add nuw nsw i32 %189, 1
  %196 = load i32, i32* %183, align 4
  %197 = icmp slt i32 %195, %196
  br i1 %197, label %188, label %198

198:                                              ; preds = %188, %177, %182
  %199 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %200 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %199, align 8
  %201 = bitcast %"class.SkSL::OutputStream"* %200 to void (%"class.SkSL::OutputStream"*, i8*)***
  %202 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %202, i64 2
  %204 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %203, align 8
  call void %204(%"class.SkSL::OutputStream"* %200, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %179, align 8
  %205 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #17
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i8** %7, align 8
  call void @_ZN4SkSL18MetalCodeGenerator28writeFunctionRequirementArgsERKNS_19FunctionDeclarationERPKc(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %9, i8** nonnull dereferenceable(8) %7)
  %206 = load i64, i64* %25, align 8
  %207 = and i64 %206, 4294967294
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %214, label %209

209:                                              ; preds = %198
  %210 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %211 = bitcast i8* %23 to %"class.std::__1::unique_ptr.258"**
  %212 = load i8*, i8** %7, align 8
  br label %243

213:                                              ; preds = %281
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %7, align 8
  br label %214

214:                                              ; preds = %198, %213
  %215 = load i8, i8* %179, align 8, !range !2
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %231, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %219 = load i32, i32* %218, align 4
  %220 = icmp sgt i32 %219, 0
  br i1 %220, label %221, label %231

221:                                              ; preds = %217, %221
  %222 = phi i32 [ %228, %221 ], [ 0, %217 ]
  %223 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %199, align 8
  %224 = bitcast %"class.SkSL::OutputStream"* %223 to void (%"class.SkSL::OutputStream"*, i8*)***
  %225 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %224, align 8
  %226 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %225, i64 2
  %227 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %226, align 8
  call void %227(%"class.SkSL::OutputStream"* %223, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %228 = add nuw nsw i32 %222, 1
  %229 = load i32, i32* %218, align 4
  %230 = icmp slt i32 %228, %229
  br i1 %230, label %221, label %231

231:                                              ; preds = %221, %214, %217
  %232 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %199, align 8
  %233 = bitcast %"class.SkSL::OutputStream"* %232 to void (%"class.SkSL::OutputStream"*, i8*)***
  %234 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %233, align 8
  %235 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %234, i64 2
  %236 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %235, align 8
  call void %236(%"class.SkSL::OutputStream"* %232, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %179, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #17
  %237 = load i64, i64* %20, align 8
  %238 = and i64 %237, 1
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %242, label %240

240:                                              ; preds = %231
  %241 = load i8*, i8** %21, align 8
  call void @_Z7sk_freePv(i8* %241) #17
  br label %242

242:                                              ; preds = %231, %240
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %17) #17
  br label %288

243:                                              ; preds = %209, %281
  %244 = phi i64 [ 0, %209 ], [ %283, %281 ]
  %245 = phi i8* [ %212, %209 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %281 ]
  %246 = load i8, i8* %245, align 1
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %270, label %248

248:                                              ; preds = %243
  %249 = load i8, i8* %179, align 8, !range !2
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %264, label %251

251:                                              ; preds = %248
  %252 = load i32, i32* %210, align 4
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %254, label %264

254:                                              ; preds = %251, %254
  %255 = phi i32 [ %261, %254 ], [ 0, %251 ]
  %256 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %199, align 8
  %257 = bitcast %"class.SkSL::OutputStream"* %256 to void (%"class.SkSL::OutputStream"*, i8*)***
  %258 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %257, align 8
  %259 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %258, i64 2
  %260 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %259, align 8
  call void %260(%"class.SkSL::OutputStream"* %256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %261 = add nuw nsw i32 %255, 1
  %262 = load i32, i32* %210, align 4
  %263 = icmp slt i32 %261, %262
  br i1 %263, label %254, label %264

264:                                              ; preds = %254, %251, %248
  %265 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %199, align 8
  %266 = bitcast %"class.SkSL::OutputStream"* %265 to void (%"class.SkSL::OutputStream"*, i8*)***
  %267 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %266, align 8
  %268 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %267, i64 2
  %269 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %268, align 8
  call void %269(%"class.SkSL::OutputStream"* %265, i8* %245) #17
  store i8 0, i8* %179, align 8
  br label %270

270:                                              ; preds = %243, %264
  %271 = load %"class.SkSL::VariableReference"**, %"class.SkSL::VariableReference"*** %30, align 8
  %272 = getelementptr inbounds %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %271, i64 %244
  %273 = load %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %272, align 8
  %274 = icmp eq %"class.SkSL::VariableReference"* %273, null
  br i1 %274, label %277, label %275

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.SkSL::VariableReference", %"class.SkSL::VariableReference"* %273, i64 0, i32 0
  br label %281

277:                                              ; preds = %270
  %278 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %211, align 8
  %279 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %278, i64 %244, i32 0, i32 0, i32 0
  %280 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %279, align 8
  br label %281

281:                                              ; preds = %275, %277
  %282 = phi %"class.SkSL::Expression"* [ %276, %275 ], [ %280, %277 ]
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %282, i32 17)
  %283 = add nuw nsw i64 %244, 1
  %284 = load i64, i64* %25, align 8
  %285 = lshr i64 %284, 1
  %286 = and i64 %285, 2147483647
  %287 = icmp ult i64 %283, %286
  br i1 %287, label %243, label %213

288:                                              ; preds = %13, %242
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator21writePrefixExpressionERKNS_16PrefixExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::PrefixExpression"* nocapture readonly dereferenceable(40), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = alloca %"class.SkSL::Operator", align 4
  %6 = icmp slt i32 %2, 4
  br i1 %6, label %7, label %93

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i32 [ 0, %15 ], [ %24, %17 ]
  %19 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %16, align 8
  %20 = bitcast %"class.SkSL::OutputStream"* %19 to void (%"class.SkSL::OutputStream"*, i8*)***
  %21 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %21, i64 2
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %22, align 8
  tail call void %23(%"class.SkSL::OutputStream"* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %24 = add nuw nsw i32 %18, 1
  %25 = load i32, i32* %12, align 4
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %17, label %27

27:                                               ; preds = %17, %7, %11
  %28 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %29 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %30 = bitcast %"class.SkSL::OutputStream"* %29 to void (%"class.SkSL::OutputStream"*, i8*)***
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, i64 2
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %32, align 8
  tail call void %33(%"class.SkSL::OutputStream"* %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %8, align 8
  %34 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 1, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = bitcast %"class.SkSL::Operator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36)
  %37 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %5, i64 0, i32 0
  store i32 %35, i32* %37, align 4
  %38 = icmp eq i32 %35, 58
  br i1 %38, label %41, label %39

39:                                               ; preds = %27
  %40 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %5) #17
  br label %41

41:                                               ; preds = %27, %39
  %42 = phi i8* [ %40, %39 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %27 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36)
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %68, label %45

45:                                               ; preds = %41
  %46 = load i8, i8* %8, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %62

52:                                               ; preds = %48, %52
  %53 = phi i32 [ %59, %52 ], [ 0, %48 ]
  %54 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %55 = bitcast %"class.SkSL::OutputStream"* %54 to void (%"class.SkSL::OutputStream"*, i8*)***
  %56 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %56, i64 2
  %58 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %57, align 8
  call void %58(%"class.SkSL::OutputStream"* %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %59 = add nuw nsw i32 %53, 1
  %60 = load i32, i32* %49, align 4
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %52, label %62

62:                                               ; preds = %52, %48, %45
  %63 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %64 = bitcast %"class.SkSL::OutputStream"* %63 to void (%"class.SkSL::OutputStream"*, i8*)***
  %65 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %65, i64 2
  %67 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %66, align 8
  call void %67(%"class.SkSL::OutputStream"* %63, i8* %42) #17
  store i8 0, i8* %8, align 8
  br label %68

68:                                               ; preds = %41, %62
  %69 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %70 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %69, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %70, i32 3)
  %71 = load i8, i8* %8, align 8, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %87, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %75 = load i32, i32* %74, align 4
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %87

77:                                               ; preds = %73, %77
  %78 = phi i32 [ %84, %77 ], [ 0, %73 ]
  %79 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %80 = bitcast %"class.SkSL::OutputStream"* %79 to void (%"class.SkSL::OutputStream"*, i8*)***
  %81 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %81, i64 2
  %83 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %82, align 8
  call void %83(%"class.SkSL::OutputStream"* %79, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %84 = add nuw nsw i32 %78, 1
  %85 = load i32, i32* %74, align 4
  %86 = icmp slt i32 %84, %85
  br i1 %86, label %77, label %87

87:                                               ; preds = %77, %68, %73
  %88 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %89 = bitcast %"class.SkSL::OutputStream"* %88 to void (%"class.SkSL::OutputStream"*, i8*)***
  %90 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %90, i64 2
  %92 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %91, align 8
  call void %92(%"class.SkSL::OutputStream"* %88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %8, align 8
  br label %135

93:                                               ; preds = %3
  %94 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 1, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = bitcast %"class.SkSL::Operator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  %97 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  store i32 %95, i32* %97, align 4
  %98 = icmp eq i32 %95, 58
  br i1 %98, label %101, label %99

99:                                               ; preds = %93
  %100 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #17
  br label %101

101:                                              ; preds = %93, %99
  %102 = phi i8* [ %100, %99 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %93 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96)
  %103 = load i8, i8* %102, align 1
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %132, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %107 = load i8, i8* %106, align 8, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %125, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %111 = load i32, i32* %110, align 4
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %115

115:                                              ; preds = %115, %113
  %116 = phi i32 [ 0, %113 ], [ %122, %115 ]
  %117 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %114, align 8
  %118 = bitcast %"class.SkSL::OutputStream"* %117 to void (%"class.SkSL::OutputStream"*, i8*)***
  %119 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %119, i64 2
  %121 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %120, align 8
  call void %121(%"class.SkSL::OutputStream"* %117, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %122 = add nuw nsw i32 %116, 1
  %123 = load i32, i32* %110, align 4
  %124 = icmp slt i32 %122, %123
  br i1 %124, label %115, label %125

125:                                              ; preds = %115, %109, %105
  %126 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %127 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %126, align 8
  %128 = bitcast %"class.SkSL::OutputStream"* %127 to void (%"class.SkSL::OutputStream"*, i8*)***
  %129 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %129, i64 2
  %131 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %130, align 8
  call void %131(%"class.SkSL::OutputStream"* %127, i8* %102) #17
  store i8 0, i8* %106, align 8
  br label %132

132:                                              ; preds = %101, %125
  %133 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %134 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %133, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %134, i32 3)
  br label %135

135:                                              ; preds = %132, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator22writePostfixExpressionERKNS_17PostfixExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::PostfixExpression"* nocapture readonly dereferenceable(40), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = alloca %"class.SkSL::Operator", align 4
  %6 = icmp slt i32 %2, 3
  br i1 %6, label %7, label %91

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i32 [ 0, %15 ], [ %24, %17 ]
  %19 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %16, align 8
  %20 = bitcast %"class.SkSL::OutputStream"* %19 to void (%"class.SkSL::OutputStream"*, i8*)***
  %21 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %21, i64 2
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %22, align 8
  tail call void %23(%"class.SkSL::OutputStream"* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %24 = add nuw nsw i32 %18, 1
  %25 = load i32, i32* %12, align 4
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %17, label %27

27:                                               ; preds = %17, %7, %11
  %28 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %29 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %30 = bitcast %"class.SkSL::OutputStream"* %29 to void (%"class.SkSL::OutputStream"*, i8*)***
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, i64 2
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %32, align 8
  tail call void %33(%"class.SkSL::OutputStream"* %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %8, align 8
  %34 = getelementptr inbounds %"class.SkSL::PostfixExpression", %"class.SkSL::PostfixExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %34, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %35, i32 2)
  %36 = getelementptr inbounds %"class.SkSL::PostfixExpression", %"class.SkSL::PostfixExpression"* %1, i64 0, i32 2, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = bitcast %"class.SkSL::Operator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)
  %39 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %5, i64 0, i32 0
  store i32 %37, i32* %39, align 4
  %40 = icmp eq i32 %37, 58
  br i1 %40, label %43, label %41

41:                                               ; preds = %27
  %42 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %5) #17
  br label %43

43:                                               ; preds = %27, %41
  %44 = phi i8* [ %42, %41 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %27 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  %47 = load i8, i8* %8, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %46, label %70, label %49

49:                                               ; preds = %43
  br i1 %48, label %64, label %50

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %64

54:                                               ; preds = %50, %54
  %55 = phi i32 [ %61, %54 ], [ 0, %50 ]
  %56 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %57 = bitcast %"class.SkSL::OutputStream"* %56 to void (%"class.SkSL::OutputStream"*, i8*)***
  %58 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, i64 2
  %60 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %59, align 8
  call void %60(%"class.SkSL::OutputStream"* %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %61 = add nuw nsw i32 %55, 1
  %62 = load i32, i32* %51, align 4
  %63 = icmp slt i32 %61, %62
  br i1 %63, label %54, label %64

64:                                               ; preds = %54, %49, %50
  %65 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %66 = bitcast %"class.SkSL::OutputStream"* %65 to void (%"class.SkSL::OutputStream"*, i8*)***
  %67 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %67, i64 2
  %69 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %68, align 8
  call void %69(%"class.SkSL::OutputStream"* %65, i8* %44) #17
  store i8 0, i8* %8, align 8
  br label %85

70:                                               ; preds = %43
  br i1 %48, label %85, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %75, label %85

75:                                               ; preds = %71, %75
  %76 = phi i32 [ %82, %75 ], [ 0, %71 ]
  %77 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %78 = bitcast %"class.SkSL::OutputStream"* %77 to void (%"class.SkSL::OutputStream"*, i8*)***
  %79 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, i64 2
  %81 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %80, align 8
  call void %81(%"class.SkSL::OutputStream"* %77, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %82 = add nuw nsw i32 %76, 1
  %83 = load i32, i32* %72, align 4
  %84 = icmp slt i32 %82, %83
  br i1 %84, label %75, label %85

85:                                               ; preds = %75, %64, %70, %71
  %86 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %87 = bitcast %"class.SkSL::OutputStream"* %86 to void (%"class.SkSL::OutputStream"*, i8*)***
  %88 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %88, i64 2
  %90 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %89, align 8
  call void %90(%"class.SkSL::OutputStream"* %86, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  br label %132

91:                                               ; preds = %3
  %92 = getelementptr inbounds %"class.SkSL::PostfixExpression", %"class.SkSL::PostfixExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %93 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %92, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %93, i32 2)
  %94 = getelementptr inbounds %"class.SkSL::PostfixExpression", %"class.SkSL::PostfixExpression"* %1, i64 0, i32 2, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = bitcast %"class.SkSL::Operator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  %97 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  store i32 %95, i32* %97, align 4
  %98 = icmp eq i32 %95, 58
  br i1 %98, label %101, label %99

99:                                               ; preds = %91
  %100 = call i8* @_ZNK4SkSL8Operator12operatorNameEv(%"class.SkSL::Operator"* nonnull %4) #17
  br label %101

101:                                              ; preds = %91, %99
  %102 = phi i8* [ %100, %99 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %91 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96)
  %103 = load i8, i8* %102, align 1
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %134, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %107 = load i8, i8* %106, align 8, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %125, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %111 = load i32, i32* %110, align 4
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %115

115:                                              ; preds = %115, %113
  %116 = phi i32 [ 0, %113 ], [ %122, %115 ]
  %117 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %114, align 8
  %118 = bitcast %"class.SkSL::OutputStream"* %117 to void (%"class.SkSL::OutputStream"*, i8*)***
  %119 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %119, i64 2
  %121 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %120, align 8
  call void %121(%"class.SkSL::OutputStream"* %117, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %122 = add nuw nsw i32 %116, 1
  %123 = load i32, i32* %110, align 4
  %124 = icmp slt i32 %122, %123
  br i1 %124, label %115, label %125

125:                                              ; preds = %115, %109, %105
  %126 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %127 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %126, align 8
  %128 = bitcast %"class.SkSL::OutputStream"* %127 to void (%"class.SkSL::OutputStream"*, i8*)***
  %129 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %129, i64 2
  %131 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %130, align 8
  call void %131(%"class.SkSL::OutputStream"* %127, i8* %102) #17
  br label %132

132:                                              ; preds = %85, %125
  %133 = phi i8* [ %106, %125 ], [ %8, %85 ]
  store i8 0, i8* %133, align 8
  br label %134

134:                                              ; preds = %132, %101
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator12writeSettingERKNS_7SettingE(%"class.SkSL::MetalCodeGenerator"* nocapture readnone, %"class.SkSL::Setting"* nocapture readnone dereferenceable(48)) local_unnamed_addr #3 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.87, i64 0, i64 0), i32 1537, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.154, i64 0, i64 0)) #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator12writeSwizzleERKNS_7SwizzleE(%"class.SkSL::MetalCodeGenerator"*, %"struct.SkSL::Swizzle"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %4, i32 2)
  %5 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i32 [ 0, %12 ], [ %21, %14 ]
  %16 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %13, align 8
  %17 = bitcast %"class.SkSL::OutputStream"* %16 to void (%"class.SkSL::OutputStream"*, i8*)***
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %18, i64 2
  %20 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, align 8
  tail call void %20(%"class.SkSL::OutputStream"* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %21 = add nuw nsw i32 %15, 1
  %22 = load i32, i32* %9, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %14, label %24

24:                                               ; preds = %14, %2, %8
  %25 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %26 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %27 = bitcast %"class.SkSL::OutputStream"* %26 to void (%"class.SkSL::OutputStream"*, i8*)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, i64 2
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, align 8
  tail call void %30(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122, i64 0, i64 0)) #17
  store i8 0, i8* %5, align 8
  %31 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 2, i32 0, i32 0, i64 8
  %32 = bitcast i8* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = lshr i64 %38, 1
  %40 = and i64 %39, 2147483647
  %41 = getelementptr inbounds i8, i8* %33, i64 %40
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %60, %24, %35
  ret void

44:                                               ; preds = %35, %60
  %45 = phi i8* [ %61, %60 ], [ %33, %35 ]
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = shl nsw i32 %47, 1
  %49 = sext i32 %48 to i64
  %50 = lshr i64 426, %49
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %44
  %54 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.127, i64 0, i64 %49
  %55 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %56 = bitcast %"class.SkSL::OutputStream"* %55 to void (%"class.SkSL::OutputStream"*, i8*)***
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %57, i64 2
  %59 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, align 8
  tail call void %59(%"class.SkSL::OutputStream"* %55, i8* %54) #17
  store i8 0, i8* %5, align 8
  br label %60

60:                                               ; preds = %44, %53
  %61 = getelementptr inbounds i8, i8* %45, i64 1
  %62 = icmp eq i8* %61, %41
  br i1 %62, label %43, label %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator22writeVariableReferenceERKNS_17VariableReferenceE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::VariableReference"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 27
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %49, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.SkSL::VariableReference", %"class.SkSL::VariableReference"* %1, i64 0, i32 1
  %11 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %11, i64 0, i32 0, i32 1, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %11, i64 0, i32 0, i32 1, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, -17
  br i1 %16, label %17, label %19

17:                                               ; preds = %8
  %18 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %18) #19
  unreachable

19:                                               ; preds = %8
  %20 = icmp ult i64 %15, 23
  br i1 %20, label %30, label %21

21:                                               ; preds = %19
  %22 = add nuw i64 %15, 16
  %23 = and i64 %22, -16
  %24 = tail call i8* @_Znwm(i64 %23) #18
  %25 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = or i64 %23, -9223372036854775808
  %27 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %28, align 8
  %29 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %35

30:                                               ; preds = %19
  %31 = trunc i64 %15 to i8
  %32 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 %31, i8* %33, align 1
  %34 = icmp eq i64 %15, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30, %21
  %36 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %32, %30 ], [ %29, %21 ]
  %37 = phi i8* [ %9, %30 ], [ %24, %21 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %37, i8* align 1 %13, i64 %15, i1 false) #17
  br label %38

38:                                               ; preds = %30, %35
  %39 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %32, %30 ], [ %36, %35 ]
  %40 = phi i8* [ %9, %30 ], [ %37, %35 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %15
  store i8 0, i8* %41, align 1
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3)
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #18
  br label %48

48:                                               ; preds = %38, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #17
  br label %346

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.SkSL::VariableReference", %"class.SkSL::VariableReference"* %1, i64 0, i32 1
  %51 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %50, align 8
  %52 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %51, i64 0, i32 2
  %53 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %52, align 8
  %54 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %53, i64 0, i32 0, i32 6
  %55 = load i32, i32* %54, align 8
  switch i32 %55, label %176 [
    i32 10001, label %56
    i32 15, label %83
    i32 42, label %84
    i32 43, label %111
    i32 17, label %138
  ]

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %76, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %76

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i32 [ 0, %64 ], [ %73, %66 ]
  %68 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %65, align 8
  %69 = bitcast %"class.SkSL::OutputStream"* %68 to void (%"class.SkSL::OutputStream"*, i8*)***
  %70 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %70, i64 2
  %72 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %71, align 8
  tail call void %72(%"class.SkSL::OutputStream"* %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %73 = add nuw nsw i32 %67, 1
  %74 = load i32, i32* %61, align 4
  %75 = icmp slt i32 %73, %74
  br i1 %75, label %66, label %76

76:                                               ; preds = %66, %56, %60
  %77 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %78 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %79 = bitcast %"class.SkSL::OutputStream"* %78 to void (%"class.SkSL::OutputStream"*, i8*)***
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %80, i64 2
  %82 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %81, align 8
  tail call void %82(%"class.SkSL::OutputStream"* %78, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.111, i64 0, i64 0)) #17
  store i8 0, i8* %57, align 8
  br label %346

83:                                               ; preds = %49
  tail call void @_ZN4SkSL18MetalCodeGenerator14writeFragCoordEv(%"class.SkSL::MetalCodeGenerator"* %0)
  br label %346

84:                                               ; preds = %49
  %85 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %104, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 4
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %104

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi i32 [ 0, %92 ], [ %101, %94 ]
  %96 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %93, align 8
  %97 = bitcast %"class.SkSL::OutputStream"* %96 to void (%"class.SkSL::OutputStream"*, i8*)***
  %98 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %98, i64 2
  %100 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %99, align 8
  tail call void %100(%"class.SkSL::OutputStream"* %96, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %101 = add nuw nsw i32 %95, 1
  %102 = load i32, i32* %89, align 4
  %103 = icmp slt i32 %101, %102
  br i1 %103, label %94, label %104

104:                                              ; preds = %94, %84, %88
  %105 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %106 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %105, align 8
  %107 = bitcast %"class.SkSL::OutputStream"* %106 to void (%"class.SkSL::OutputStream"*, i8*)***
  %108 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %108, i64 2
  %110 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %109, align 8
  tail call void %110(%"class.SkSL::OutputStream"* %106, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.112, i64 0, i64 0)) #17
  store i8 0, i8* %85, align 8
  br label %346

111:                                              ; preds = %49
  %112 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %113 = load i8, i8* %112, align 8, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %121

121:                                              ; preds = %121, %119
  %122 = phi i32 [ 0, %119 ], [ %128, %121 ]
  %123 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %120, align 8
  %124 = bitcast %"class.SkSL::OutputStream"* %123 to void (%"class.SkSL::OutputStream"*, i8*)***
  %125 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %125, i64 2
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %126, align 8
  tail call void %127(%"class.SkSL::OutputStream"* %123, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %128 = add nuw nsw i32 %122, 1
  %129 = load i32, i32* %116, align 4
  %130 = icmp slt i32 %128, %129
  br i1 %130, label %121, label %131

131:                                              ; preds = %121, %111, %115
  %132 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %133 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %132, align 8
  %134 = bitcast %"class.SkSL::OutputStream"* %133 to void (%"class.SkSL::OutputStream"*, i8*)***
  %135 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %135, i64 2
  %137 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %136, align 8
  tail call void %137(%"class.SkSL::OutputStream"* %133, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.113, i64 0, i64 0)) #17
  store i8 0, i8* %112, align 8
  br label %346

138:                                              ; preds = %49
  %139 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %140 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %139, align 8
  %141 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %140, i64 0, i32 1, i32 0, i32 0, i32 0
  %142 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %141, align 8
  %143 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %142, i64 0, i32 1, i32 0
  %144 = load i8, i8* %143, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  %146 = select i1 %145, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.114, i64 0, i64 0)
  %147 = load i8, i8* %146, align 1
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %346, label %149

149:                                              ; preds = %138
  %150 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %151 = load i8, i8* %150, align 8, !range !2
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %169, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %155 = load i32, i32* %154, align 4
  %156 = icmp sgt i32 %155, 0
  br i1 %156, label %157, label %169

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %159

159:                                              ; preds = %159, %157
  %160 = phi i32 [ 0, %157 ], [ %166, %159 ]
  %161 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %158, align 8
  %162 = bitcast %"class.SkSL::OutputStream"* %161 to void (%"class.SkSL::OutputStream"*, i8*)***
  %163 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %162, align 8
  %164 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %163, i64 2
  %165 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %164, align 8
  tail call void %165(%"class.SkSL::OutputStream"* %161, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %166 = add nuw nsw i32 %160, 1
  %167 = load i32, i32* %154, align 4
  %168 = icmp slt i32 %166, %167
  br i1 %168, label %159, label %169

169:                                              ; preds = %159, %153, %149
  %170 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %171 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %170, align 8
  %172 = bitcast %"class.SkSL::OutputStream"* %171 to void (%"class.SkSL::OutputStream"*, i8*)***
  %173 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %172, align 8
  %174 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %173, i64 2
  %175 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %174, align 8
  tail call void %175(%"class.SkSL::OutputStream"* %171, i8* %146) #17
  store i8 0, i8* %150, align 8
  br label %346

176:                                              ; preds = %49
  %177 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %51, i64 0, i32 3
  %178 = load i8, i8* %177, align 8
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %180, label %307

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %53, i64 0, i32 1
  %182 = load i32, i32* %181, align 8
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %212, label %185

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %187 = load i8, i8* %186, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %205, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %191 = load i32, i32* %190, align 4
  %192 = icmp sgt i32 %191, 0
  br i1 %192, label %193, label %205

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %195

195:                                              ; preds = %195, %193
  %196 = phi i32 [ 0, %193 ], [ %202, %195 ]
  %197 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %194, align 8
  %198 = bitcast %"class.SkSL::OutputStream"* %197 to void (%"class.SkSL::OutputStream"*, i8*)***
  %199 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %198, align 8
  %200 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %199, i64 2
  %201 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %200, align 8
  tail call void %201(%"class.SkSL::OutputStream"* %197, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %202 = add nuw nsw i32 %196, 1
  %203 = load i32, i32* %190, align 4
  %204 = icmp slt i32 %202, %203
  br i1 %204, label %195, label %205

205:                                              ; preds = %195, %185, %189
  %206 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %207 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %206, align 8
  %208 = bitcast %"class.SkSL::OutputStream"* %207 to void (%"class.SkSL::OutputStream"*, i8*)***
  %209 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %209, i64 2
  %211 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %210, align 8
  tail call void %211(%"class.SkSL::OutputStream"* %207, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.116, i64 0, i64 0)) #17
  br label %305

212:                                              ; preds = %180
  %213 = and i32 %182, 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %242, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %217 = load i8, i8* %216, align 8, !range !2
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %235, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %221 = load i32, i32* %220, align 4
  %222 = icmp sgt i32 %221, 0
  br i1 %222, label %223, label %235

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %225

225:                                              ; preds = %225, %223
  %226 = phi i32 [ 0, %223 ], [ %232, %225 ]
  %227 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %224, align 8
  %228 = bitcast %"class.SkSL::OutputStream"* %227 to void (%"class.SkSL::OutputStream"*, i8*)***
  %229 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %229, i64 2
  %231 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %230, align 8
  tail call void %231(%"class.SkSL::OutputStream"* %227, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %232 = add nuw nsw i32 %226, 1
  %233 = load i32, i32* %220, align 4
  %234 = icmp slt i32 %232, %233
  br i1 %234, label %225, label %235

235:                                              ; preds = %225, %215, %219
  %236 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %237 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %236, align 8
  %238 = bitcast %"class.SkSL::OutputStream"* %237 to void (%"class.SkSL::OutputStream"*, i8*)***
  %239 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %238, align 8
  %240 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %239, i64 2
  %241 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %240, align 8
  tail call void %241(%"class.SkSL::OutputStream"* %237, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.117, i64 0, i64 0)) #17
  br label %305

242:                                              ; preds = %212
  %243 = and i32 %182, 8
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %278, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %51, i64 0, i32 0, i32 2
  %247 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %246, align 8
  %248 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %247, i64 0, i32 3
  %249 = load i32, i32* %248, align 8
  %250 = icmp eq i32 %249, 6
  br i1 %250, label %278, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %253 = load i8, i8* %252, align 8, !range !2
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %271, label %255

255:                                              ; preds = %251
  %256 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %257 = load i32, i32* %256, align 4
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %259, label %271

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %261

261:                                              ; preds = %261, %259
  %262 = phi i32 [ 0, %259 ], [ %268, %261 ]
  %263 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %260, align 8
  %264 = bitcast %"class.SkSL::OutputStream"* %263 to void (%"class.SkSL::OutputStream"*, i8*)***
  %265 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %264, align 8
  %266 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %265, i64 2
  %267 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %266, align 8
  tail call void %267(%"class.SkSL::OutputStream"* %263, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %268 = add nuw nsw i32 %262, 1
  %269 = load i32, i32* %256, align 4
  %270 = icmp slt i32 %268, %269
  br i1 %270, label %261, label %271

271:                                              ; preds = %261, %251, %255
  %272 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %273 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %272, align 8
  %274 = bitcast %"class.SkSL::OutputStream"* %273 to void (%"class.SkSL::OutputStream"*, i8*)***
  %275 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %274, align 8
  %276 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %275, i64 2
  %277 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %276, align 8
  tail call void %277(%"class.SkSL::OutputStream"* %273, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.118, i64 0, i64 0)) #17
  br label %305

278:                                              ; preds = %245, %242
  %279 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %280 = load i8, i8* %279, align 8, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %298, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %284 = load i32, i32* %283, align 4
  %285 = icmp sgt i32 %284, 0
  br i1 %285, label %286, label %298

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %288

288:                                              ; preds = %288, %286
  %289 = phi i32 [ 0, %286 ], [ %295, %288 ]
  %290 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %287, align 8
  %291 = bitcast %"class.SkSL::OutputStream"* %290 to void (%"class.SkSL::OutputStream"*, i8*)***
  %292 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %291, align 8
  %293 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %292, i64 2
  %294 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %293, align 8
  tail call void %294(%"class.SkSL::OutputStream"* %290, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %295 = add nuw nsw i32 %289, 1
  %296 = load i32, i32* %283, align 4
  %297 = icmp slt i32 %295, %296
  br i1 %297, label %288, label %298

298:                                              ; preds = %288, %278, %282
  %299 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %300 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %299, align 8
  %301 = bitcast %"class.SkSL::OutputStream"* %300 to void (%"class.SkSL::OutputStream"*, i8*)***
  %302 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %302, i64 2
  %304 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %303, align 8
  tail call void %304(%"class.SkSL::OutputStream"* %300, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.119, i64 0, i64 0)) #17
  br label %305

305:                                              ; preds = %235, %298, %271, %205
  %306 = phi i8* [ %186, %205 ], [ %252, %271 ], [ %279, %298 ], [ %216, %235 ]
  store i8 0, i8* %306, align 8
  br label %307

307:                                              ; preds = %305, %176
  %308 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %308) #17
  %309 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %51, i64 0, i32 0, i32 1, i32 0
  %310 = load i8*, i8** %309, align 8
  %311 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %51, i64 0, i32 0, i32 1, i32 1
  %312 = load i64, i64* %311, align 8
  %313 = icmp ugt i64 %312, -17
  br i1 %313, label %314, label %316

314:                                              ; preds = %307
  %315 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %315) #19
  unreachable

316:                                              ; preds = %307
  %317 = icmp ult i64 %312, 23
  br i1 %317, label %327, label %318

318:                                              ; preds = %316
  %319 = add nuw i64 %312, 16
  %320 = and i64 %319, -16
  %321 = tail call i8* @_Znwm(i64 %320) #18
  %322 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %321, i8** %322, align 8
  %323 = or i64 %320, -9223372036854775808
  %324 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %323, i64* %324, align 8
  %325 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %312, i64* %325, align 8
  %326 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %332

327:                                              ; preds = %316
  %328 = trunc i64 %312 to i8
  %329 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %330 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %329, i64 0, i32 1, i32 0
  store i8 %328, i8* %330, align 1
  %331 = icmp eq i64 %312, 0
  br i1 %331, label %335, label %332

332:                                              ; preds = %327, %318
  %333 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %329, %327 ], [ %326, %318 ]
  %334 = phi i8* [ %308, %327 ], [ %321, %318 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %334, i8* align 1 %310, i64 %312, i1 false) #17
  br label %335

335:                                              ; preds = %327, %332
  %336 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %329, %327 ], [ %333, %332 ]
  %337 = phi i8* [ %308, %327 ], [ %334, %332 ]
  %338 = getelementptr inbounds i8, i8* %337, i64 %312
  store i8 0, i8* %338, align 1
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4)
  %339 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %336, i64 0, i32 1, i32 0
  %340 = load i8, i8* %339, align 1
  %341 = icmp slt i8 %340, 0
  br i1 %341, label %342, label %345

342:                                              ; preds = %335
  %343 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load i8*, i8** %343, align 8
  call void @_ZdlPv(i8* %344) #18
  br label %345

345:                                              ; preds = %335, %342
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %308) #17
  br label %346

346:                                              ; preds = %169, %138, %48, %345, %131, %104, %83, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator22writeTernaryExpressionERKNS_17TernaryExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::TernaryExpression"* nocapture readonly dereferenceable(48), i32) local_unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %2, 16
  br i1 %4, label %5, label %32

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  %17 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %14, align 8
  %18 = bitcast %"class.SkSL::OutputStream"* %17 to void (%"class.SkSL::OutputStream"*, i8*)***
  %19 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, i64 2
  %21 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %20, align 8
  tail call void %21(%"class.SkSL::OutputStream"* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %22 = add nuw nsw i32 %16, 1
  %23 = load i32, i32* %10, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %15, label %25

25:                                               ; preds = %15, %5, %9
  %26 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %27 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %28 = bitcast %"class.SkSL::OutputStream"* %27 to void (%"class.SkSL::OutputStream"*, i8*)***
  %29 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, i64 2
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, align 8
  tail call void %31(%"class.SkSL::OutputStream"* %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %6, align 8
  br label %32

32:                                               ; preds = %25, %3
  %33 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %33, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %34, i32 15)
  %35 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %54, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i32 [ 0, %42 ], [ %51, %44 ]
  %46 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %43, align 8
  %47 = bitcast %"class.SkSL::OutputStream"* %46 to void (%"class.SkSL::OutputStream"*, i8*)***
  %48 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %48, i64 2
  %50 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %49, align 8
  tail call void %50(%"class.SkSL::OutputStream"* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %51 = add nuw nsw i32 %45, 1
  %52 = load i32, i32* %39, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %44, label %54

54:                                               ; preds = %44, %32, %38
  %55 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %56 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %57 = bitcast %"class.SkSL::OutputStream"* %56 to void (%"class.SkSL::OutputStream"*, i8*)***
  %58 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, i64 2
  %60 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %59, align 8
  tail call void %60(%"class.SkSL::OutputStream"* %56, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.149, i64 0, i64 0)) #17
  store i8 0, i8* %35, align 8
  %61 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %62, i32 15)
  %63 = load i8, i8* %35, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %79, label %65

65:                                               ; preds = %54
  %66 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %79

69:                                               ; preds = %65, %69
  %70 = phi i32 [ %76, %69 ], [ 0, %65 ]
  %71 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %72 = bitcast %"class.SkSL::OutputStream"* %71 to void (%"class.SkSL::OutputStream"*, i8*)***
  %73 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %73, i64 2
  %75 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %74, align 8
  tail call void %75(%"class.SkSL::OutputStream"* %71, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %76 = add nuw nsw i32 %70, 1
  %77 = load i32, i32* %66, align 4
  %78 = icmp slt i32 %76, %77
  br i1 %78, label %69, label %79

79:                                               ; preds = %69, %54, %65
  %80 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %81 = bitcast %"class.SkSL::OutputStream"* %80 to void (%"class.SkSL::OutputStream"*, i8*)***
  %82 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %82, i64 2
  %84 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %83, align 8
  tail call void %84(%"class.SkSL::OutputStream"* %80, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.150, i64 0, i64 0)) #17
  store i8 0, i8* %35, align 8
  %85 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %85, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %86, i32 15)
  br i1 %4, label %87, label %110

87:                                               ; preds = %79
  %88 = load i8, i8* %35, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %104, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %94, label %104

94:                                               ; preds = %90, %94
  %95 = phi i32 [ %101, %94 ], [ 0, %90 ]
  %96 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %97 = bitcast %"class.SkSL::OutputStream"* %96 to void (%"class.SkSL::OutputStream"*, i8*)***
  %98 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %98, i64 2
  %100 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %99, align 8
  tail call void %100(%"class.SkSL::OutputStream"* %96, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %101 = add nuw nsw i32 %95, 1
  %102 = load i32, i32* %91, align 4
  %103 = icmp slt i32 %101, %102
  br i1 %103, label %94, label %104

104:                                              ; preds = %94, %87, %90
  %105 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %106 = bitcast %"class.SkSL::OutputStream"* %105 to void (%"class.SkSL::OutputStream"*, i8*)***
  %107 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %107, i64 2
  %109 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %108, align 8
  tail call void %109(%"class.SkSL::OutputStream"* %105, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %35, align 8
  br label %110

110:                                              ; preds = %104, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator20writeIndexExpressionERKNS_15IndexExpressionE(%"class.SkSL::MetalCodeGenerator"*, %"struct.SkSL::IndexExpression"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::IndexExpression", %"struct.SkSL::IndexExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %4, i32 2)
  %5 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i32 [ 0, %12 ], [ %21, %14 ]
  %16 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %13, align 8
  %17 = bitcast %"class.SkSL::OutputStream"* %16 to void (%"class.SkSL::OutputStream"*, i8*)***
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %18, i64 2
  %20 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, align 8
  tail call void %20(%"class.SkSL::OutputStream"* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %21 = add nuw nsw i32 %15, 1
  %22 = load i32, i32* %9, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %14, label %24

24:                                               ; preds = %14, %2, %8
  %25 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %26 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %27 = bitcast %"class.SkSL::OutputStream"* %26 to void (%"class.SkSL::OutputStream"*, i8*)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, i64 2
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, align 8
  tail call void %30(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.120, i64 0, i64 0)) #17
  store i8 0, i8* %5, align 8
  %31 = getelementptr inbounds %"struct.SkSL::IndexExpression", %"struct.SkSL::IndexExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %32 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %31, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %32, i32 17)
  %33 = load i8, i8* %5, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %49

39:                                               ; preds = %35, %39
  %40 = phi i32 [ %46, %39 ], [ 0, %35 ]
  %41 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %42 = bitcast %"class.SkSL::OutputStream"* %41 to void (%"class.SkSL::OutputStream"*, i8*)***
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %43, i64 2
  %45 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %44, align 8
  tail call void %45(%"class.SkSL::OutputStream"* %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %46 = add nuw nsw i32 %40, 1
  %47 = load i32, i32* %36, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %39, label %49

49:                                               ; preds = %39, %24, %35
  %50 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %51 = bitcast %"class.SkSL::OutputStream"* %50 to void (%"class.SkSL::OutputStream"*, i8*)***
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %52, i64 2
  %54 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, align 8
  tail call void %54(%"class.SkSL::OutputStream"* %50, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121, i64 0, i64 0)) #17
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator17getOutParamHelperERKNS_12FunctionCallERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EERK8SkTArrayIPNS_17VariableReferenceELb0EE(%"class.SkSL::String"* noalias sret, %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::FunctionCall"* nocapture readonly dereferenceable(64), %class.SkSTArray* nocapture readonly dereferenceable(32), %class.SkTArray.304* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca i8*, align 8
  %15 = alloca %"class.std::__1::unordered_set.305", align 8
  %16 = alloca %"class.SkSL::Variable"*, align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca <2 x i64>, align 16
  %20 = bitcast <2 x i64>* %19 to %"struct.SkSL::StringFragment"*
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 9, i32 0
  %25 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 11
  %26 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 0, i32 3
  %27 = bitcast %"class.SkSL::OutputStream"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i32* %25, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %5
  %31 = load i32, i32* %25, align 4
  br label %32

32:                                               ; preds = %5, %30
  %33 = phi i32 [ %31, %30 ], [ 0, %5 ]
  store %"class.SkSL::OutputStream"* %24, %"class.SkSL::OutputStream"** %26, align 8
  store i32 0, i32* %25, align 4
  %34 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %2, i64 0, i32 1
  %35 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.SkSL::String"* %10 to i8*
  %38 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #17
  %39 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #17
  %40 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #17
  %41 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 26
  %42 = load i32, i32* %41, align 8
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %41, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %12, i32 %42) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %12) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::String"* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #17
  %44 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #17
  call void @_ZNK4SkSL19FunctionDeclaration11mangledNameEv(%"class.SkSL::String"* nonnull sret %13, %"class.SkSL::FunctionDeclaration"* %35) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %10, %"class.SkSL::String"* nonnull dereferenceable(24) %13) #17
  %45 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %32
  %50 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %32, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #17
  %53 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #18
  br label %60

60:                                               ; preds = %52, %57
  %61 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #18
  br label %68

68:                                               ; preds = %60, %65
  %69 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #18
  br label %76

76:                                               ; preds = %68, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #17
  %77 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #17
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i8** %14, align 8
  %78 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %35, i64 0, i32 5
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %112

81:                                               ; preds = %76
  %82 = call zeroext i1 @_ZN4SkSL18MetalCodeGenerator24writeFunctionDeclarationERKNS_19FunctionDeclarationE(%"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %35)
  %83 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 12
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %99, label %86

86:                                               ; preds = %81
  %87 = load i32, i32* %25, align 4
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %99

89:                                               ; preds = %86, %89
  %90 = phi i32 [ %96, %89 ], [ 0, %86 ]
  %91 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %92 = bitcast %"class.SkSL::OutputStream"* %91 to void (%"class.SkSL::OutputStream"*, i8*)***
  %93 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %93, i64 2
  %95 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %94, align 8
  call void %95(%"class.SkSL::OutputStream"* %91, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %96 = add nuw nsw i32 %90, 1
  %97 = load i32, i32* %25, align 4
  %98 = icmp slt i32 %96, %97
  br i1 %98, label %89, label %99

99:                                               ; preds = %89, %81, %86
  %100 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %101 = bitcast %"class.SkSL::OutputStream"* %100 to void (%"class.SkSL::OutputStream"*, i8*)***
  %102 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %102, i64 2
  %104 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %103, align 8
  call void %104(%"class.SkSL::OutputStream"* %100, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #17
  store i8 0, i8* %83, align 8
  %105 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %106 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 6
  %107 = load i8*, i8** %106, align 8
  %108 = bitcast %"class.SkSL::OutputStream"* %105 to void (%"class.SkSL::OutputStream"*, i8*)***
  %109 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %109, i64 2
  %111 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %110, align 8
  call void %111(%"class.SkSL::OutputStream"* %105, i8* %107) #17
  store i8 1, i8* %83, align 8
  br label %112

112:                                              ; preds = %76, %99
  %113 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %2, i64 0, i32 0, i32 1
  %114 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %113, align 8
  %115 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %114) #17
  %116 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  %120 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = select i1 %119, i8* %121, i8* %115
  %123 = load i8, i8* %122, align 1
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %149, label %125

125:                                              ; preds = %112
  %126 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 12
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %142, label %129

129:                                              ; preds = %125
  %130 = load i32, i32* %25, align 4
  %131 = icmp sgt i32 %130, 0
  br i1 %131, label %132, label %142

132:                                              ; preds = %129, %132
  %133 = phi i32 [ %139, %132 ], [ 0, %129 ]
  %134 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %135 = bitcast %"class.SkSL::OutputStream"* %134 to void (%"class.SkSL::OutputStream"*, i8*)***
  %136 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %136, i64 2
  %138 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %137, align 8
  call void %138(%"class.SkSL::OutputStream"* %134, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %139 = add nuw nsw i32 %133, 1
  %140 = load i32, i32* %25, align 4
  %141 = icmp slt i32 %139, %140
  br i1 %141, label %132, label %142

142:                                              ; preds = %132, %129, %125
  %143 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %144 = bitcast %"class.SkSL::OutputStream"* %143 to void (%"class.SkSL::OutputStream"*, i8*)***
  %145 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %145, i64 2
  %147 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %146, align 8
  call void %147(%"class.SkSL::OutputStream"* %143, i8* %122) #17
  store i8 0, i8* %126, align 8
  %148 = load i8, i8* %117, align 1
  br label %149

149:                                              ; preds = %142, %112
  %150 = phi i8 [ %118, %112 ], [ %148, %142 ]
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %149
  %153 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %153) #18
  br label %154

154:                                              ; preds = %149, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #17
  %155 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 12
  %156 = load i8, i8* %155, align 8, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %171, label %158

158:                                              ; preds = %154
  %159 = load i32, i32* %25, align 4
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %161, label %171

161:                                              ; preds = %158, %161
  %162 = phi i32 [ %168, %161 ], [ 0, %158 ]
  %163 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %164 = bitcast %"class.SkSL::OutputStream"* %163 to void (%"class.SkSL::OutputStream"*, i8*)***
  %165 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %165, i64 2
  %167 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %166, align 8
  call void %167(%"class.SkSL::OutputStream"* %163, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %168 = add nuw nsw i32 %162, 1
  %169 = load i32, i32* %25, align 4
  %170 = icmp slt i32 %168, %169
  br i1 %170, label %161, label %171

171:                                              ; preds = %161, %154, %158
  %172 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %173 = bitcast %"class.SkSL::OutputStream"* %172 to void (%"class.SkSL::OutputStream"*, i8*)***
  %174 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %174, i64 2
  %176 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %175, align 8
  call void %176(%"class.SkSL::OutputStream"* %172, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  %177 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  %181 = load i8*, i8** %36, align 8
  %182 = bitcast %"class.SkSL::String"* %0 to i8*
  %183 = select i1 %180, i8* %181, i8* %182
  %184 = load i8, i8* %183, align 1
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %192, label %186

186:                                              ; preds = %171
  %187 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %188 = bitcast %"class.SkSL::OutputStream"* %187 to void (%"class.SkSL::OutputStream"*, i8*)***
  %189 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %188, align 8
  %190 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %189, i64 2
  %191 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %190, align 8
  call void %191(%"class.SkSL::OutputStream"* %187, i8* %183) #17
  store i8 0, i8* %155, align 8
  br label %192

192:                                              ; preds = %171, %186
  %193 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %194 = bitcast %"class.SkSL::OutputStream"* %193 to void (%"class.SkSL::OutputStream"*, i8*)***
  %195 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %195, i64 2
  %197 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %196, align 8
  call void %197(%"class.SkSL::OutputStream"* %193, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  call void @_ZN4SkSL18MetalCodeGenerator30writeFunctionRequirementParamsERKNS_19FunctionDeclarationERPKc(%"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %35, i8** nonnull dereferenceable(8) %14)
  %198 = bitcast %"class.std::__1::unordered_set.305"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %198) #17
  %199 = getelementptr inbounds %"class.std::__1::unordered_set.305", %"class.std::__1::unordered_set.305"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = getelementptr inbounds %"class.std::__1::unordered_set.305", %"class.std::__1::unordered_set.305"* %15, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %201 = getelementptr inbounds %"class.std::__1::unordered_set.305", %"class.std::__1::unordered_set.305"* %15, i64 0, i32 0, i32 4, i64 0
  %202 = getelementptr inbounds %"class.std::__1::unordered_set.305", %"class.std::__1::unordered_set.305"* %15, i64 0, i32 0, i32 3
  %203 = bitcast %"class.std::__1::__compressed_pair.326"* %202 to i32*
  %204 = bitcast i8* %201 to i32*
  store i32 -1431655766, i32* %204, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %198, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %203, align 8
  %205 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %206 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %207 = bitcast i8* %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = and i64 %208, 4294967294
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %229, label %211

211:                                              ; preds = %192
  %212 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %35, i64 0, i32 3, i32 0, i32 0
  %213 = getelementptr inbounds %class.SkTArray.304, %class.SkTArray.304* %4, i64 0, i32 0
  %214 = bitcast i8* %205 to %"class.std::__1::unique_ptr.258"**
  %215 = bitcast %"class.SkSL::String"* %8 to i8*
  %216 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %216, i64 0, i32 1, i32 0
  %218 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = bitcast %"class.SkSL::Variable"** %16 to i8*
  %220 = bitcast %"class.SkSL::Variable"** %16 to i64*
  %221 = getelementptr inbounds %"class.std::__1::unordered_set.305", %"class.std::__1::unordered_set.305"* %15, i64 0, i32 0
  %222 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 27
  %223 = bitcast %"class.SkSL::String"* %17 to i8*
  %224 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %225 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %224, i64 0, i32 1, i32 0
  %226 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load i8*, i8** %14, align 8
  br label %277

228:                                              ; preds = %485
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %14, align 8
  br label %229

229:                                              ; preds = %192, %228
  %230 = load i8, i8* %155, align 8, !range !2
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %245, label %232

232:                                              ; preds = %229
  %233 = load i32, i32* %25, align 4
  %234 = icmp sgt i32 %233, 0
  br i1 %234, label %235, label %245

235:                                              ; preds = %232, %235
  %236 = phi i32 [ %242, %235 ], [ 0, %232 ]
  %237 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %238 = bitcast %"class.SkSL::OutputStream"* %237 to void (%"class.SkSL::OutputStream"*, i8*)***
  %239 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %238, align 8
  %240 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %239, i64 2
  %241 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %240, align 8
  call void %241(%"class.SkSL::OutputStream"* %237, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %242 = add nuw nsw i32 %236, 1
  %243 = load i32, i32* %25, align 4
  %244 = icmp slt i32 %242, %243
  br i1 %244, label %235, label %245

245:                                              ; preds = %235, %229, %232
  %246 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %247 = bitcast %"class.SkSL::OutputStream"* %246 to void (%"class.SkSL::OutputStream"*, i8*)***
  %248 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %247, align 8
  %249 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %248, i64 2
  %250 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %249, align 8
  call void %250(%"class.SkSL::OutputStream"* %246, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  %251 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %252 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 6
  %253 = load i8*, i8** %252, align 8
  %254 = bitcast %"class.SkSL::OutputStream"* %251 to void (%"class.SkSL::OutputStream"*, i8*)***
  %255 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %254, align 8
  %256 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %255, i64 2
  %257 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %256, align 8
  call void %257(%"class.SkSL::OutputStream"* %251, i8* %253) #17
  store i8 1, i8* %155, align 8
  %258 = load i32, i32* %25, align 4
  %259 = add nsw i32 %258, 1
  store i32 %259, i32* %25, align 4
  %260 = getelementptr inbounds %class.SkTArray.304, %class.SkTArray.304* %4, i64 0, i32 1
  %261 = load i64, i64* %260, align 8
  %262 = and i64 %261, 4294967294
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %491, label %264

264:                                              ; preds = %245
  %265 = getelementptr inbounds %class.SkTArray.304, %class.SkTArray.304* %4, i64 0, i32 0
  %266 = bitcast i8* %205 to %"class.std::__1::unique_ptr.258"**
  %267 = bitcast %"class.SkSL::String"* %7 to i8*
  %268 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %269 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %268, i64 0, i32 1, i32 0
  %270 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = bitcast %"class.SkSL::String"* %18 to i8*
  %272 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %273 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %272, i64 0, i32 1, i32 0
  %274 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %35, i64 0, i32 3, i32 0, i32 0
  %276 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 27
  br label %498

277:                                              ; preds = %211, %485
  %278 = phi i64 [ 0, %211 ], [ %486, %485 ]
  %279 = phi i8* [ %227, %211 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %485 ]
  %280 = load i8, i8* %279, align 1
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %304, label %282

282:                                              ; preds = %277
  %283 = load i8, i8* %155, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %298, label %285

285:                                              ; preds = %282
  %286 = load i32, i32* %25, align 4
  %287 = icmp sgt i32 %286, 0
  br i1 %287, label %288, label %298

288:                                              ; preds = %285, %288
  %289 = phi i32 [ %295, %288 ], [ 0, %285 ]
  %290 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %291 = bitcast %"class.SkSL::OutputStream"* %290 to void (%"class.SkSL::OutputStream"*, i8*)***
  %292 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %291, align 8
  %293 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %292, i64 2
  %294 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %293, align 8
  call void %294(%"class.SkSL::OutputStream"* %290, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %295 = add nuw nsw i32 %289, 1
  %296 = load i32, i32* %25, align 4
  %297 = icmp slt i32 %295, %296
  br i1 %297, label %288, label %298

298:                                              ; preds = %288, %285, %282
  %299 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %300 = bitcast %"class.SkSL::OutputStream"* %299 to void (%"class.SkSL::OutputStream"*, i8*)***
  %301 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %300, align 8
  %302 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %301, i64 2
  %303 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %302, align 8
  call void %303(%"class.SkSL::OutputStream"* %299, i8* %279) #17
  store i8 0, i8* %155, align 8
  br label %304

304:                                              ; preds = %277, %298
  %305 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %212, align 8
  %306 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %305, i64 %278
  %307 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %306, align 8
  %308 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %307, i64 0, i32 2
  %309 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %308, align 8
  call void @_ZN4SkSL18MetalCodeGenerator14writeModifiersERKNS_9ModifiersE(%"class.SkSL::MetalCodeGenerator"* %1, %"struct.SkSL::Modifiers"* dereferenceable(80) %309)
  %310 = load %"class.SkSL::VariableReference"**, %"class.SkSL::VariableReference"*** %213, align 8
  %311 = getelementptr inbounds %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %310, i64 %278
  %312 = load %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %311, align 8
  %313 = icmp eq %"class.SkSL::VariableReference"* %312, null
  br i1 %313, label %317, label %314

314:                                              ; preds = %304
  %315 = getelementptr inbounds %"class.SkSL::VariableReference", %"class.SkSL::VariableReference"* %312, i64 0, i32 0, i32 1
  %316 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %315, align 8
  br label %326

317:                                              ; preds = %304
  %318 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %214, align 8
  %319 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %318, i64 %278, i32 0, i32 0, i32 0
  %320 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %319, align 8
  %321 = bitcast %"class.SkSL::Expression"* %320 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %322 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %321, align 8
  %323 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %322, i64 3
  %324 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %323, align 8
  %325 = call dereferenceable(184) %"class.SkSL::Type"* %324(%"class.SkSL::Expression"* %320) #17
  br label %326

326:                                              ; preds = %317, %314
  %327 = phi %"class.SkSL::Type"* [ %316, %314 ], [ %325, %317 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %327) #17
  %328 = load i8, i8* %217, align 1
  %329 = icmp slt i8 %328, 0
  %330 = load i8*, i8** %218, align 8
  %331 = select i1 %329, i8* %330, i8* %215
  %332 = load i8, i8* %331, align 1
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %357, label %334

334:                                              ; preds = %326
  %335 = load i8, i8* %155, align 8, !range !2
  %336 = icmp eq i8 %335, 0
  br i1 %336, label %350, label %337

337:                                              ; preds = %334
  %338 = load i32, i32* %25, align 4
  %339 = icmp sgt i32 %338, 0
  br i1 %339, label %340, label %350

340:                                              ; preds = %337, %340
  %341 = phi i32 [ %347, %340 ], [ 0, %337 ]
  %342 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %343 = bitcast %"class.SkSL::OutputStream"* %342 to void (%"class.SkSL::OutputStream"*, i8*)***
  %344 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %343, align 8
  %345 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %344, i64 2
  %346 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %345, align 8
  call void %346(%"class.SkSL::OutputStream"* %342, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %347 = add nuw nsw i32 %341, 1
  %348 = load i32, i32* %25, align 4
  %349 = icmp slt i32 %347, %348
  br i1 %349, label %340, label %350

350:                                              ; preds = %340, %337, %334
  %351 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %352 = bitcast %"class.SkSL::OutputStream"* %351 to void (%"class.SkSL::OutputStream"*, i8*)***
  %353 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %352, align 8
  %354 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %353, i64 2
  %355 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %354, align 8
  call void %355(%"class.SkSL::OutputStream"* %351, i8* %331) #17
  store i8 0, i8* %155, align 8
  %356 = load i8, i8* %217, align 1
  br label %357

357:                                              ; preds = %350, %326
  %358 = phi i8 [ %328, %326 ], [ %356, %350 ]
  %359 = icmp slt i8 %358, 0
  br i1 %359, label %360, label %362

360:                                              ; preds = %357
  %361 = load i8*, i8** %218, align 8
  call void @_ZdlPv(i8* %361) #18
  br label %362

362:                                              ; preds = %357, %360
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #17
  %363 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %308, align 8
  %364 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %363, i64 0, i32 1
  %365 = load i32, i32* %364, align 8
  %366 = and i32 %365, 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %390, label %368

368:                                              ; preds = %362
  %369 = load i8, i8* %155, align 8, !range !2
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %384, label %371

371:                                              ; preds = %368
  %372 = load i32, i32* %25, align 4
  %373 = icmp sgt i32 %372, 0
  br i1 %373, label %374, label %384

374:                                              ; preds = %371, %374
  %375 = phi i32 [ %381, %374 ], [ 0, %371 ]
  %376 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %377 = bitcast %"class.SkSL::OutputStream"* %376 to void (%"class.SkSL::OutputStream"*, i8*)***
  %378 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %377, align 8
  %379 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %378, i64 2
  %380 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %379, align 8
  call void %380(%"class.SkSL::OutputStream"* %376, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %381 = add nuw nsw i32 %375, 1
  %382 = load i32, i32* %25, align 4
  %383 = icmp slt i32 %381, %382
  br i1 %383, label %374, label %384

384:                                              ; preds = %374, %368, %371
  %385 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %386 = bitcast %"class.SkSL::OutputStream"* %385 to void (%"class.SkSL::OutputStream"*, i8*)***
  %387 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %386, align 8
  %388 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %387, i64 2
  %389 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %388, align 8
  call void %389(%"class.SkSL::OutputStream"* %385, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  br label %390

390:                                              ; preds = %362, %384
  %391 = load %"class.SkSL::VariableReference"**, %"class.SkSL::VariableReference"*** %213, align 8
  %392 = getelementptr inbounds %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %391, i64 %278
  %393 = load %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %392, align 8
  %394 = icmp eq %"class.SkSL::VariableReference"* %393, null
  br i1 %394, label %427, label %395

395:                                              ; preds = %390
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %219) #17
  %396 = getelementptr inbounds %"class.SkSL::VariableReference", %"class.SkSL::VariableReference"* %393, i64 0, i32 1
  %397 = bitcast %"class.SkSL::Variable"** %396 to i64*
  %398 = load i64, i64* %397, align 8
  store i64 %398, i64* %220, align 8
  %399 = call { %"struct.std::__1::__hash_node_base.310"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL8VariableENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.306"* nonnull %221, %"class.SkSL::Variable"** nonnull dereferenceable(8) %16, %"class.SkSL::Variable"** nonnull dereferenceable(8) %16) #17
  %400 = extractvalue { %"struct.std::__1::__hash_node_base.310"*, i8 } %399, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %219) #17
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %485, label %402

402:                                              ; preds = %395
  %403 = load i8, i8* %155, align 8, !range !2
  %404 = icmp eq i8 %403, 0
  br i1 %404, label %418, label %405

405:                                              ; preds = %402
  %406 = load i32, i32* %25, align 4
  %407 = icmp sgt i32 %406, 0
  br i1 %407, label %408, label %418

408:                                              ; preds = %405, %408
  %409 = phi i32 [ %415, %408 ], [ 0, %405 ]
  %410 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %411 = bitcast %"class.SkSL::OutputStream"* %410 to void (%"class.SkSL::OutputStream"*, i8*)***
  %412 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %411, align 8
  %413 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %412, i64 2
  %414 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %413, align 8
  call void %414(%"class.SkSL::OutputStream"* %410, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %415 = add nuw nsw i32 %409, 1
  %416 = load i32, i32* %25, align 4
  %417 = icmp slt i32 %415, %416
  br i1 %417, label %408, label %418

418:                                              ; preds = %408, %402, %405
  %419 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %420 = bitcast %"class.SkSL::OutputStream"* %419 to void (%"class.SkSL::OutputStream"*, i8*)***
  %421 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %420, align 8
  %422 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %421, i64 2
  %423 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %422, align 8
  call void %423(%"class.SkSL::OutputStream"* %419, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  store i8 1, i8* %222, align 4
  %424 = load %"class.SkSL::VariableReference"**, %"class.SkSL::VariableReference"*** %213, align 8
  %425 = getelementptr inbounds %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %424, i64 %278
  %426 = load %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %425, align 8
  call void @_ZN4SkSL18MetalCodeGenerator22writeVariableReferenceERKNS_17VariableReferenceE(%"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::VariableReference"* dereferenceable(40) %426)
  store i8 0, i8* %222, align 4
  br label %485

427:                                              ; preds = %390
  %428 = load i8, i8* %155, align 8, !range !2
  %429 = icmp eq i8 %428, 0
  br i1 %429, label %443, label %430

430:                                              ; preds = %427
  %431 = load i32, i32* %25, align 4
  %432 = icmp sgt i32 %431, 0
  br i1 %432, label %433, label %443

433:                                              ; preds = %430, %433
  %434 = phi i32 [ %440, %433 ], [ 0, %430 ]
  %435 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %436 = bitcast %"class.SkSL::OutputStream"* %435 to void (%"class.SkSL::OutputStream"*, i8*)***
  %437 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %436, align 8
  %438 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %437, i64 2
  %439 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %438, align 8
  call void %439(%"class.SkSL::OutputStream"* %435, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %440 = add nuw nsw i32 %434, 1
  %441 = load i32, i32* %25, align 4
  %442 = icmp slt i32 %440, %441
  br i1 %442, label %433, label %443

443:                                              ; preds = %433, %427, %430
  %444 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %445 = bitcast %"class.SkSL::OutputStream"* %444 to void (%"class.SkSL::OutputStream"*, i8*)***
  %446 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %445, align 8
  %447 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %446, i64 2
  %448 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %447, align 8
  call void %448(%"class.SkSL::OutputStream"* %444, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #17
  %449 = trunc i64 %278 to i32
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %17, i32 %449) #17
  %450 = load i8, i8* %225, align 1
  %451 = icmp slt i8 %450, 0
  %452 = load i8*, i8** %226, align 8
  %453 = select i1 %451, i8* %452, i8* %223
  %454 = load i8, i8* %453, align 1
  %455 = icmp eq i8 %454, 0
  br i1 %455, label %479, label %456

456:                                              ; preds = %443
  %457 = load i8, i8* %155, align 8, !range !2
  %458 = icmp eq i8 %457, 0
  br i1 %458, label %472, label %459

459:                                              ; preds = %456
  %460 = load i32, i32* %25, align 4
  %461 = icmp sgt i32 %460, 0
  br i1 %461, label %462, label %472

462:                                              ; preds = %459, %462
  %463 = phi i32 [ %469, %462 ], [ 0, %459 ]
  %464 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %465 = bitcast %"class.SkSL::OutputStream"* %464 to void (%"class.SkSL::OutputStream"*, i8*)***
  %466 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %465, align 8
  %467 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %466, i64 2
  %468 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %467, align 8
  call void %468(%"class.SkSL::OutputStream"* %464, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %469 = add nuw nsw i32 %463, 1
  %470 = load i32, i32* %25, align 4
  %471 = icmp slt i32 %469, %470
  br i1 %471, label %462, label %472

472:                                              ; preds = %462, %459, %456
  %473 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %474 = bitcast %"class.SkSL::OutputStream"* %473 to void (%"class.SkSL::OutputStream"*, i8*)***
  %475 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %474, align 8
  %476 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %475, i64 2
  %477 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %476, align 8
  call void %477(%"class.SkSL::OutputStream"* %473, i8* %453) #17
  store i8 0, i8* %155, align 8
  %478 = load i8, i8* %225, align 1
  br label %479

479:                                              ; preds = %443, %472
  %480 = phi i8 [ %450, %443 ], [ %478, %472 ]
  %481 = icmp slt i8 %480, 0
  br i1 %481, label %482, label %484

482:                                              ; preds = %479
  %483 = load i8*, i8** %226, align 8
  call void @_ZdlPv(i8* %483) #18
  br label %484

484:                                              ; preds = %479, %482
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #17
  br label %485

485:                                              ; preds = %418, %395, %484
  %486 = add nuw nsw i64 %278, 1
  %487 = load i64, i64* %207, align 8
  %488 = lshr i64 %487, 1
  %489 = and i64 %488, 2147483647
  %490 = icmp ult i64 %486, %489
  br i1 %490, label %277, label %228

491:                                              ; preds = %669, %245
  %492 = bitcast <2 x i64>* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %492) #17
  %493 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %113, align 8
  %494 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %493, i64 0, i32 0, i32 1, i32 0
  %495 = bitcast i8** %494 to <2 x i64>*
  %496 = load <2 x i64>, <2 x i64>* %495, align 8
  store <2 x i64> %496, <2 x i64>* %19, align 16
  %497 = call zeroext i1 @_ZNK4SkSL14StringFragmentneEPKc(%"struct.SkSL::StringFragment"* nonnull %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0)) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %492) #17
  br i1 %497, label %675, label %737

498:                                              ; preds = %264, %669
  %499 = phi i64 [ %261, %264 ], [ %670, %669 ]
  %500 = phi i64 [ 0, %264 ], [ %671, %669 ]
  %501 = load %"class.SkSL::VariableReference"**, %"class.SkSL::VariableReference"*** %265, align 8
  %502 = getelementptr inbounds %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %501, i64 %500
  %503 = load %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %502, align 8
  %504 = icmp eq %"class.SkSL::VariableReference"* %503, null
  br i1 %504, label %669, label %505

505:                                              ; preds = %498
  %506 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %266, align 8
  %507 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %506, i64 %500, i32 0, i32 0, i32 0
  %508 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %507, align 8
  %509 = bitcast %"class.SkSL::Expression"* %508 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %510 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %509, align 8
  %511 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %510, i64 3
  %512 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %511, align 8
  %513 = call dereferenceable(184) %"class.SkSL::Type"* %512(%"class.SkSL::Expression"* %508) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %513) #17
  %514 = load i8, i8* %269, align 1
  %515 = icmp slt i8 %514, 0
  %516 = load i8*, i8** %270, align 8
  %517 = select i1 %515, i8* %516, i8* %267
  %518 = load i8, i8* %517, align 1
  %519 = icmp eq i8 %518, 0
  br i1 %519, label %543, label %520

520:                                              ; preds = %505
  %521 = load i8, i8* %155, align 8, !range !2
  %522 = icmp eq i8 %521, 0
  br i1 %522, label %536, label %523

523:                                              ; preds = %520
  %524 = load i32, i32* %25, align 4
  %525 = icmp sgt i32 %524, 0
  br i1 %525, label %526, label %536

526:                                              ; preds = %523, %526
  %527 = phi i32 [ %533, %526 ], [ 0, %523 ]
  %528 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %529 = bitcast %"class.SkSL::OutputStream"* %528 to void (%"class.SkSL::OutputStream"*, i8*)***
  %530 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %529, align 8
  %531 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %530, i64 2
  %532 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %531, align 8
  call void %532(%"class.SkSL::OutputStream"* %528, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %533 = add nuw nsw i32 %527, 1
  %534 = load i32, i32* %25, align 4
  %535 = icmp slt i32 %533, %534
  br i1 %535, label %526, label %536

536:                                              ; preds = %526, %523, %520
  %537 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %538 = bitcast %"class.SkSL::OutputStream"* %537 to void (%"class.SkSL::OutputStream"*, i8*)***
  %539 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %538, align 8
  %540 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %539, i64 2
  %541 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %540, align 8
  call void %541(%"class.SkSL::OutputStream"* %537, i8* %517) #17
  store i8 0, i8* %155, align 8
  %542 = load i8, i8* %269, align 1
  br label %543

543:                                              ; preds = %536, %505
  %544 = phi i8 [ %514, %505 ], [ %542, %536 ]
  %545 = icmp slt i8 %544, 0
  br i1 %545, label %546, label %548

546:                                              ; preds = %543
  %547 = load i8*, i8** %270, align 8
  call void @_ZdlPv(i8* %547) #18
  br label %548

548:                                              ; preds = %543, %546
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #17
  %549 = load i8, i8* %155, align 8, !range !2
  %550 = icmp eq i8 %549, 0
  br i1 %550, label %564, label %551

551:                                              ; preds = %548
  %552 = load i32, i32* %25, align 4
  %553 = icmp sgt i32 %552, 0
  br i1 %553, label %554, label %564

554:                                              ; preds = %551, %554
  %555 = phi i32 [ %561, %554 ], [ 0, %551 ]
  %556 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %557 = bitcast %"class.SkSL::OutputStream"* %556 to void (%"class.SkSL::OutputStream"*, i8*)***
  %558 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %557, align 8
  %559 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %558, i64 2
  %560 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %559, align 8
  call void %560(%"class.SkSL::OutputStream"* %556, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %561 = add nuw nsw i32 %555, 1
  %562 = load i32, i32* %25, align 4
  %563 = icmp slt i32 %561, %562
  br i1 %563, label %554, label %564

564:                                              ; preds = %554, %548, %551
  %565 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %566 = bitcast %"class.SkSL::OutputStream"* %565 to void (%"class.SkSL::OutputStream"*, i8*)***
  %567 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %566, align 8
  %568 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %567, i64 2
  %569 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %568, align 8
  call void %569(%"class.SkSL::OutputStream"* %565, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %271) #17
  %570 = trunc i64 %500 to i32
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %18, i32 %570) #17
  %571 = load i8, i8* %273, align 1
  %572 = icmp slt i8 %571, 0
  %573 = load i8*, i8** %274, align 8
  %574 = select i1 %572, i8* %573, i8* %271
  %575 = load i8, i8* %574, align 1
  %576 = icmp eq i8 %575, 0
  br i1 %576, label %600, label %577

577:                                              ; preds = %564
  %578 = load i8, i8* %155, align 8, !range !2
  %579 = icmp eq i8 %578, 0
  br i1 %579, label %593, label %580

580:                                              ; preds = %577
  %581 = load i32, i32* %25, align 4
  %582 = icmp sgt i32 %581, 0
  br i1 %582, label %583, label %593

583:                                              ; preds = %580, %583
  %584 = phi i32 [ %590, %583 ], [ 0, %580 ]
  %585 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %586 = bitcast %"class.SkSL::OutputStream"* %585 to void (%"class.SkSL::OutputStream"*, i8*)***
  %587 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %586, align 8
  %588 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %587, i64 2
  %589 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %588, align 8
  call void %589(%"class.SkSL::OutputStream"* %585, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %590 = add nuw nsw i32 %584, 1
  %591 = load i32, i32* %25, align 4
  %592 = icmp slt i32 %590, %591
  br i1 %592, label %583, label %593

593:                                              ; preds = %583, %580, %577
  %594 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %595 = bitcast %"class.SkSL::OutputStream"* %594 to void (%"class.SkSL::OutputStream"*, i8*)***
  %596 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %595, align 8
  %597 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %596, i64 2
  %598 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %597, align 8
  call void %598(%"class.SkSL::OutputStream"* %594, i8* %574) #17
  store i8 0, i8* %155, align 8
  %599 = load i8, i8* %273, align 1
  br label %600

600:                                              ; preds = %564, %593
  %601 = phi i8 [ %571, %564 ], [ %599, %593 ]
  %602 = icmp slt i8 %601, 0
  br i1 %602, label %603, label %605

603:                                              ; preds = %600
  %604 = load i8*, i8** %274, align 8
  call void @_ZdlPv(i8* %604) #18
  br label %605

605:                                              ; preds = %600, %603
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %271) #17
  %606 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %275, align 8
  %607 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %606, i64 %500
  %608 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %607, align 8
  %609 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %608, i64 0, i32 2
  %610 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %609, align 8
  %611 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %610, i64 0, i32 1
  %612 = load i32, i32* %611, align 8
  %613 = and i32 %612, 2
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %640, label %615

615:                                              ; preds = %605
  %616 = load i8, i8* %155, align 8, !range !2
  %617 = icmp eq i8 %616, 0
  br i1 %617, label %631, label %618

618:                                              ; preds = %615
  %619 = load i32, i32* %25, align 4
  %620 = icmp sgt i32 %619, 0
  br i1 %620, label %621, label %631

621:                                              ; preds = %618, %621
  %622 = phi i32 [ %628, %621 ], [ 0, %618 ]
  %623 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %624 = bitcast %"class.SkSL::OutputStream"* %623 to void (%"class.SkSL::OutputStream"*, i8*)***
  %625 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %624, align 8
  %626 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %625, i64 2
  %627 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %626, align 8
  call void %627(%"class.SkSL::OutputStream"* %623, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %628 = add nuw nsw i32 %622, 1
  %629 = load i32, i32* %25, align 4
  %630 = icmp slt i32 %628, %629
  br i1 %630, label %621, label %631

631:                                              ; preds = %621, %615, %618
  %632 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %633 = bitcast %"class.SkSL::OutputStream"* %632 to void (%"class.SkSL::OutputStream"*, i8*)***
  %634 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %633, align 8
  %635 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %634, i64 2
  %636 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %635, align 8
  call void %636(%"class.SkSL::OutputStream"* %632, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  store i8 1, i8* %276, align 4
  %637 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %266, align 8
  %638 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %637, i64 %500, i32 0, i32 0, i32 0
  %639 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %638, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Expression"* dereferenceable(24) %639, i32 16)
  store i8 0, i8* %276, align 4
  br label %640

640:                                              ; preds = %605, %631
  %641 = load i8, i8* %155, align 8, !range !2
  %642 = icmp eq i8 %641, 0
  br i1 %642, label %656, label %643

643:                                              ; preds = %640
  %644 = load i32, i32* %25, align 4
  %645 = icmp sgt i32 %644, 0
  br i1 %645, label %646, label %656

646:                                              ; preds = %643, %646
  %647 = phi i32 [ %653, %646 ], [ 0, %643 ]
  %648 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %649 = bitcast %"class.SkSL::OutputStream"* %648 to void (%"class.SkSL::OutputStream"*, i8*)***
  %650 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %649, align 8
  %651 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %650, i64 2
  %652 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %651, align 8
  call void %652(%"class.SkSL::OutputStream"* %648, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %653 = add nuw nsw i32 %647, 1
  %654 = load i32, i32* %25, align 4
  %655 = icmp slt i32 %653, %654
  br i1 %655, label %646, label %656

656:                                              ; preds = %646, %640, %643
  %657 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %658 = bitcast %"class.SkSL::OutputStream"* %657 to void (%"class.SkSL::OutputStream"*, i8*)***
  %659 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %658, align 8
  %660 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %659, i64 2
  %661 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %660, align 8
  call void %661(%"class.SkSL::OutputStream"* %657, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  %662 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %663 = load i8*, i8** %252, align 8
  %664 = bitcast %"class.SkSL::OutputStream"* %662 to void (%"class.SkSL::OutputStream"*, i8*)***
  %665 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %664, align 8
  %666 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %665, i64 2
  %667 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %666, align 8
  call void %667(%"class.SkSL::OutputStream"* %662, i8* %663) #17
  store i8 1, i8* %155, align 8
  %668 = load i64, i64* %260, align 8
  br label %669

669:                                              ; preds = %498, %656
  %670 = phi i64 [ %499, %498 ], [ %668, %656 ]
  %671 = add nuw nsw i64 %500, 1
  %672 = lshr i64 %670, 1
  %673 = and i64 %672, 2147483647
  %674 = icmp ult i64 %671, %673
  br i1 %674, label %498, label %491

675:                                              ; preds = %491
  %676 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %113, align 8
  %677 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %677) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %676) #17
  %678 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %679 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %678, i64 0, i32 1, i32 0
  %680 = load i8, i8* %679, align 1
  %681 = icmp slt i8 %680, 0
  %682 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %683 = load i8*, i8** %682, align 8
  %684 = select i1 %681, i8* %683, i8* %677
  %685 = load i8, i8* %684, align 1
  %686 = icmp eq i8 %685, 0
  br i1 %686, label %710, label %687

687:                                              ; preds = %675
  %688 = load i8, i8* %155, align 8, !range !2
  %689 = icmp eq i8 %688, 0
  br i1 %689, label %703, label %690

690:                                              ; preds = %687
  %691 = load i32, i32* %25, align 4
  %692 = icmp sgt i32 %691, 0
  br i1 %692, label %693, label %703

693:                                              ; preds = %690, %693
  %694 = phi i32 [ %700, %693 ], [ 0, %690 ]
  %695 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %696 = bitcast %"class.SkSL::OutputStream"* %695 to void (%"class.SkSL::OutputStream"*, i8*)***
  %697 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %696, align 8
  %698 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %697, i64 2
  %699 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %698, align 8
  call void %699(%"class.SkSL::OutputStream"* %695, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %700 = add nuw nsw i32 %694, 1
  %701 = load i32, i32* %25, align 4
  %702 = icmp slt i32 %700, %701
  br i1 %702, label %693, label %703

703:                                              ; preds = %693, %690, %687
  %704 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %705 = bitcast %"class.SkSL::OutputStream"* %704 to void (%"class.SkSL::OutputStream"*, i8*)***
  %706 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %705, align 8
  %707 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %706, i64 2
  %708 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %707, align 8
  call void %708(%"class.SkSL::OutputStream"* %704, i8* %684) #17
  store i8 0, i8* %155, align 8
  %709 = load i8, i8* %679, align 1
  br label %710

710:                                              ; preds = %703, %675
  %711 = phi i8 [ %680, %675 ], [ %709, %703 ]
  %712 = icmp slt i8 %711, 0
  br i1 %712, label %713, label %715

713:                                              ; preds = %710
  %714 = load i8*, i8** %682, align 8
  call void @_ZdlPv(i8* %714) #18
  br label %715

715:                                              ; preds = %710, %713
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %677) #17
  %716 = load i8, i8* %155, align 8, !range !2
  %717 = icmp eq i8 %716, 0
  br i1 %717, label %731, label %718

718:                                              ; preds = %715
  %719 = load i32, i32* %25, align 4
  %720 = icmp sgt i32 %719, 0
  br i1 %720, label %721, label %731

721:                                              ; preds = %718, %721
  %722 = phi i32 [ %728, %721 ], [ 0, %718 ]
  %723 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %724 = bitcast %"class.SkSL::OutputStream"* %723 to void (%"class.SkSL::OutputStream"*, i8*)***
  %725 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %724, align 8
  %726 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %725, i64 2
  %727 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %726, align 8
  call void %727(%"class.SkSL::OutputStream"* %723, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %728 = add nuw nsw i32 %722, 1
  %729 = load i32, i32* %25, align 4
  %730 = icmp slt i32 %728, %729
  br i1 %730, label %721, label %731

731:                                              ; preds = %721, %715, %718
  %732 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %733 = bitcast %"class.SkSL::OutputStream"* %732 to void (%"class.SkSL::OutputStream"*, i8*)***
  %734 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %733, align 8
  %735 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %734, i64 2
  %736 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %735, align 8
  call void %736(%"class.SkSL::OutputStream"* %732, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  br label %737

737:                                              ; preds = %731, %491
  %738 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %738) #17
  call void @_ZNK4SkSL19FunctionDeclaration11mangledNameEv(%"class.SkSL::String"* nonnull sret %21, %"class.SkSL::FunctionDeclaration"* %35) #17
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::String"* nonnull dereferenceable(24) %21)
  %739 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %740 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %739, i64 0, i32 1, i32 0
  %741 = load i8, i8* %740, align 1
  %742 = icmp slt i8 %741, 0
  br i1 %742, label %743, label %746

743:                                              ; preds = %737
  %744 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %745 = load i8*, i8** %744, align 8
  call void @_ZdlPv(i8* %745) #18
  br label %746

746:                                              ; preds = %737, %743
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %738) #17
  %747 = load i8, i8* %155, align 8, !range !2
  %748 = icmp eq i8 %747, 0
  br i1 %748, label %762, label %749

749:                                              ; preds = %746
  %750 = load i32, i32* %25, align 4
  %751 = icmp sgt i32 %750, 0
  br i1 %751, label %752, label %762

752:                                              ; preds = %749, %752
  %753 = phi i32 [ %759, %752 ], [ 0, %749 ]
  %754 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %755 = bitcast %"class.SkSL::OutputStream"* %754 to void (%"class.SkSL::OutputStream"*, i8*)***
  %756 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %755, align 8
  %757 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %756, i64 2
  %758 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %757, align 8
  call void %758(%"class.SkSL::OutputStream"* %754, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %759 = add nuw nsw i32 %753, 1
  %760 = load i32, i32* %25, align 4
  %761 = icmp slt i32 %759, %760
  br i1 %761, label %752, label %762

762:                                              ; preds = %752, %746, %749
  %763 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %764 = bitcast %"class.SkSL::OutputStream"* %763 to void (%"class.SkSL::OutputStream"*, i8*)***
  %765 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %764, align 8
  %766 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %765, i64 2
  %767 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %766, align 8
  call void %767(%"class.SkSL::OutputStream"* %763, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i8** %14, align 8
  call void @_ZN4SkSL18MetalCodeGenerator28writeFunctionRequirementArgsERKNS_19FunctionDeclarationERPKc(%"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %35, i8** nonnull dereferenceable(8) %14)
  %768 = load i64, i64* %207, align 8
  %769 = and i64 %768, 4294967294
  %770 = icmp eq i64 %769, 0
  br i1 %770, label %778, label %771

771:                                              ; preds = %762
  %772 = bitcast %"class.SkSL::String"* %22 to i8*
  %773 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %774 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %773, i64 0, i32 1, i32 0
  %775 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %776 = load i8*, i8** %14, align 8
  br label %817

777:                                              ; preds = %898
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %14, align 8
  br label %778

778:                                              ; preds = %762, %777
  %779 = load i8, i8* %155, align 8, !range !2
  %780 = icmp eq i8 %779, 0
  br i1 %780, label %794, label %781

781:                                              ; preds = %778
  %782 = load i32, i32* %25, align 4
  %783 = icmp sgt i32 %782, 0
  br i1 %783, label %784, label %794

784:                                              ; preds = %781, %784
  %785 = phi i32 [ %791, %784 ], [ 0, %781 ]
  %786 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %787 = bitcast %"class.SkSL::OutputStream"* %786 to void (%"class.SkSL::OutputStream"*, i8*)***
  %788 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %787, align 8
  %789 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %788, i64 2
  %790 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %789, align 8
  call void %790(%"class.SkSL::OutputStream"* %786, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %791 = add nuw nsw i32 %785, 1
  %792 = load i32, i32* %25, align 4
  %793 = icmp slt i32 %791, %792
  br i1 %793, label %784, label %794

794:                                              ; preds = %784, %778, %781
  %795 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %796 = bitcast %"class.SkSL::OutputStream"* %795 to void (%"class.SkSL::OutputStream"*, i8*)***
  %797 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %796, align 8
  %798 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %797, i64 2
  %799 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %798, align 8
  call void %799(%"class.SkSL::OutputStream"* %795, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  %800 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %801 = load i8*, i8** %252, align 8
  %802 = bitcast %"class.SkSL::OutputStream"* %800 to void (%"class.SkSL::OutputStream"*, i8*)***
  %803 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %802, align 8
  %804 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %803, i64 2
  %805 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %804, align 8
  call void %805(%"class.SkSL::OutputStream"* %800, i8* %801) #17
  store i8 1, i8* %155, align 8
  %806 = load i64, i64* %260, align 8
  %807 = and i64 %806, 4294967294
  %808 = icmp eq i64 %807, 0
  br i1 %808, label %905, label %809

809:                                              ; preds = %794
  %810 = getelementptr inbounds %class.SkTArray.304, %class.SkTArray.304* %4, i64 0, i32 0
  %811 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 27
  %812 = bitcast i8* %205 to %"class.std::__1::unique_ptr.258"**
  %813 = bitcast %"class.SkSL::String"* %23 to i8*
  %814 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %815 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %814, i64 0, i32 1, i32 0
  %816 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %907

817:                                              ; preds = %771, %898
  %818 = phi i8* [ %776, %771 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %898 ]
  %819 = phi i32 [ 0, %771 ], [ %899, %898 ]
  %820 = load i8, i8* %818, align 1
  %821 = icmp eq i8 %820, 0
  %822 = load i8, i8* %155, align 8
  %823 = icmp eq i8 %822, 0
  br i1 %821, label %844, label %824

824:                                              ; preds = %817
  br i1 %823, label %838, label %825

825:                                              ; preds = %824
  %826 = load i32, i32* %25, align 4
  %827 = icmp sgt i32 %826, 0
  br i1 %827, label %828, label %838

828:                                              ; preds = %825, %828
  %829 = phi i32 [ %835, %828 ], [ 0, %825 ]
  %830 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %831 = bitcast %"class.SkSL::OutputStream"* %830 to void (%"class.SkSL::OutputStream"*, i8*)***
  %832 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %831, align 8
  %833 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %832, i64 2
  %834 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %833, align 8
  call void %834(%"class.SkSL::OutputStream"* %830, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %835 = add nuw nsw i32 %829, 1
  %836 = load i32, i32* %25, align 4
  %837 = icmp slt i32 %835, %836
  br i1 %837, label %828, label %838

838:                                              ; preds = %828, %824, %825
  %839 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %840 = bitcast %"class.SkSL::OutputStream"* %839 to void (%"class.SkSL::OutputStream"*, i8*)***
  %841 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %840, align 8
  %842 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %841, i64 2
  %843 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %842, align 8
  call void %843(%"class.SkSL::OutputStream"* %839, i8* %818) #17
  store i8 0, i8* %155, align 8
  br label %858

844:                                              ; preds = %817
  br i1 %823, label %858, label %845

845:                                              ; preds = %844
  %846 = load i32, i32* %25, align 4
  %847 = icmp sgt i32 %846, 0
  br i1 %847, label %848, label %858

848:                                              ; preds = %845, %848
  %849 = phi i32 [ %855, %848 ], [ 0, %845 ]
  %850 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %851 = bitcast %"class.SkSL::OutputStream"* %850 to void (%"class.SkSL::OutputStream"*, i8*)***
  %852 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %851, align 8
  %853 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %852, i64 2
  %854 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %853, align 8
  call void %854(%"class.SkSL::OutputStream"* %850, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %855 = add nuw nsw i32 %849, 1
  %856 = load i32, i32* %25, align 4
  %857 = icmp slt i32 %855, %856
  br i1 %857, label %848, label %858

858:                                              ; preds = %848, %838, %844, %845
  %859 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %860 = bitcast %"class.SkSL::OutputStream"* %859 to void (%"class.SkSL::OutputStream"*, i8*)***
  %861 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %860, align 8
  %862 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %861, i64 2
  %863 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %862, align 8
  call void %863(%"class.SkSL::OutputStream"* %859, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %772) #17
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %22, i32 %819) #17
  %864 = load i8, i8* %774, align 1
  %865 = icmp slt i8 %864, 0
  %866 = load i8*, i8** %775, align 8
  %867 = select i1 %865, i8* %866, i8* %772
  %868 = load i8, i8* %867, align 1
  %869 = icmp eq i8 %868, 0
  br i1 %869, label %893, label %870

870:                                              ; preds = %858
  %871 = load i8, i8* %155, align 8, !range !2
  %872 = icmp eq i8 %871, 0
  br i1 %872, label %886, label %873

873:                                              ; preds = %870
  %874 = load i32, i32* %25, align 4
  %875 = icmp sgt i32 %874, 0
  br i1 %875, label %876, label %886

876:                                              ; preds = %873, %876
  %877 = phi i32 [ %883, %876 ], [ 0, %873 ]
  %878 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %879 = bitcast %"class.SkSL::OutputStream"* %878 to void (%"class.SkSL::OutputStream"*, i8*)***
  %880 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %879, align 8
  %881 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %880, i64 2
  %882 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %881, align 8
  call void %882(%"class.SkSL::OutputStream"* %878, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %883 = add nuw nsw i32 %877, 1
  %884 = load i32, i32* %25, align 4
  %885 = icmp slt i32 %883, %884
  br i1 %885, label %876, label %886

886:                                              ; preds = %876, %873, %870
  %887 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %888 = bitcast %"class.SkSL::OutputStream"* %887 to void (%"class.SkSL::OutputStream"*, i8*)***
  %889 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %888, align 8
  %890 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %889, i64 2
  %891 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %890, align 8
  call void %891(%"class.SkSL::OutputStream"* %887, i8* %867) #17
  store i8 0, i8* %155, align 8
  %892 = load i8, i8* %774, align 1
  br label %893

893:                                              ; preds = %858, %886
  %894 = phi i8 [ %864, %858 ], [ %892, %886 ]
  %895 = icmp slt i8 %894, 0
  br i1 %895, label %896, label %898

896:                                              ; preds = %893
  %897 = load i8*, i8** %775, align 8
  call void @_ZdlPv(i8* %897) #18
  br label %898

898:                                              ; preds = %893, %896
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %772) #17
  %899 = add nuw nsw i32 %819, 1
  %900 = load i64, i64* %207, align 8
  %901 = lshr i64 %900, 1
  %902 = trunc i64 %901 to i32
  %903 = and i32 %902, 2147483647
  %904 = icmp ult i32 %899, %903
  br i1 %904, label %817, label %777

905:                                              ; preds = %1003, %794
  %906 = load i32, i32* %25, align 4
  br i1 %497, label %1009, label %1034

907:                                              ; preds = %809, %1003
  %908 = phi i64 [ %806, %809 ], [ %1004, %1003 ]
  %909 = phi i64 [ 0, %809 ], [ %1005, %1003 ]
  %910 = load %"class.SkSL::VariableReference"**, %"class.SkSL::VariableReference"*** %810, align 8
  %911 = getelementptr inbounds %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %910, i64 %909
  %912 = load %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %911, align 8
  %913 = icmp eq %"class.SkSL::VariableReference"* %912, null
  br i1 %913, label %1003, label %914

914:                                              ; preds = %907
  store i8 1, i8* %811, align 4
  %915 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %812, align 8
  %916 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %915, i64 %909, i32 0, i32 0, i32 0
  %917 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %916, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Expression"* dereferenceable(24) %917, i32 16)
  store i8 0, i8* %811, align 4
  %918 = load i8, i8* %155, align 8, !range !2
  %919 = icmp eq i8 %918, 0
  br i1 %919, label %933, label %920

920:                                              ; preds = %914
  %921 = load i32, i32* %25, align 4
  %922 = icmp sgt i32 %921, 0
  br i1 %922, label %923, label %933

923:                                              ; preds = %920, %923
  %924 = phi i32 [ %930, %923 ], [ 0, %920 ]
  %925 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %926 = bitcast %"class.SkSL::OutputStream"* %925 to void (%"class.SkSL::OutputStream"*, i8*)***
  %927 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %926, align 8
  %928 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %927, i64 2
  %929 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %928, align 8
  call void %929(%"class.SkSL::OutputStream"* %925, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %930 = add nuw nsw i32 %924, 1
  %931 = load i32, i32* %25, align 4
  %932 = icmp slt i32 %930, %931
  br i1 %932, label %923, label %933

933:                                              ; preds = %923, %914, %920
  %934 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %935 = bitcast %"class.SkSL::OutputStream"* %934 to void (%"class.SkSL::OutputStream"*, i8*)***
  %936 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %935, align 8
  %937 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %936, i64 2
  %938 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %937, align 8
  call void %938(%"class.SkSL::OutputStream"* %934, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %813) #17
  %939 = trunc i64 %909 to i32
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %23, i32 %939) #17
  %940 = load i8, i8* %815, align 1
  %941 = icmp slt i8 %940, 0
  %942 = load i8*, i8** %816, align 8
  %943 = select i1 %941, i8* %942, i8* %813
  %944 = load i8, i8* %943, align 1
  %945 = icmp eq i8 %944, 0
  br i1 %945, label %969, label %946

946:                                              ; preds = %933
  %947 = load i8, i8* %155, align 8, !range !2
  %948 = icmp eq i8 %947, 0
  br i1 %948, label %962, label %949

949:                                              ; preds = %946
  %950 = load i32, i32* %25, align 4
  %951 = icmp sgt i32 %950, 0
  br i1 %951, label %952, label %962

952:                                              ; preds = %949, %952
  %953 = phi i32 [ %959, %952 ], [ 0, %949 ]
  %954 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %955 = bitcast %"class.SkSL::OutputStream"* %954 to void (%"class.SkSL::OutputStream"*, i8*)***
  %956 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %955, align 8
  %957 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %956, i64 2
  %958 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %957, align 8
  call void %958(%"class.SkSL::OutputStream"* %954, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %959 = add nuw nsw i32 %953, 1
  %960 = load i32, i32* %25, align 4
  %961 = icmp slt i32 %959, %960
  br i1 %961, label %952, label %962

962:                                              ; preds = %952, %949, %946
  %963 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %964 = bitcast %"class.SkSL::OutputStream"* %963 to void (%"class.SkSL::OutputStream"*, i8*)***
  %965 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %964, align 8
  %966 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %965, i64 2
  %967 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %966, align 8
  call void %967(%"class.SkSL::OutputStream"* %963, i8* %943) #17
  store i8 0, i8* %155, align 8
  %968 = load i8, i8* %815, align 1
  br label %969

969:                                              ; preds = %933, %962
  %970 = phi i8 [ %940, %933 ], [ %968, %962 ]
  %971 = icmp slt i8 %970, 0
  br i1 %971, label %972, label %974

972:                                              ; preds = %969
  %973 = load i8*, i8** %816, align 8
  call void @_ZdlPv(i8* %973) #18
  br label %974

974:                                              ; preds = %969, %972
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %813) #17
  %975 = load i8, i8* %155, align 8, !range !2
  %976 = icmp eq i8 %975, 0
  br i1 %976, label %990, label %977

977:                                              ; preds = %974
  %978 = load i32, i32* %25, align 4
  %979 = icmp sgt i32 %978, 0
  br i1 %979, label %980, label %990

980:                                              ; preds = %977, %980
  %981 = phi i32 [ %987, %980 ], [ 0, %977 ]
  %982 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %983 = bitcast %"class.SkSL::OutputStream"* %982 to void (%"class.SkSL::OutputStream"*, i8*)***
  %984 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %983, align 8
  %985 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %984, i64 2
  %986 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %985, align 8
  call void %986(%"class.SkSL::OutputStream"* %982, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %987 = add nuw nsw i32 %981, 1
  %988 = load i32, i32* %25, align 4
  %989 = icmp slt i32 %987, %988
  br i1 %989, label %980, label %990

990:                                              ; preds = %980, %974, %977
  %991 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %992 = bitcast %"class.SkSL::OutputStream"* %991 to void (%"class.SkSL::OutputStream"*, i8*)***
  %993 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %992, align 8
  %994 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %993, i64 2
  %995 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %994, align 8
  call void %995(%"class.SkSL::OutputStream"* %991, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  %996 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %997 = load i8*, i8** %252, align 8
  %998 = bitcast %"class.SkSL::OutputStream"* %996 to void (%"class.SkSL::OutputStream"*, i8*)***
  %999 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %998, align 8
  %1000 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %999, i64 2
  %1001 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1000, align 8
  call void %1001(%"class.SkSL::OutputStream"* %996, i8* %997) #17
  store i8 1, i8* %155, align 8
  %1002 = load i64, i64* %260, align 8
  br label %1003

1003:                                             ; preds = %907, %990
  %1004 = phi i64 [ %908, %907 ], [ %1002, %990 ]
  %1005 = add nuw nsw i64 %909, 1
  %1006 = lshr i64 %1004, 1
  %1007 = and i64 %1006, 2147483647
  %1008 = icmp ult i64 %1005, %1007
  br i1 %1008, label %907, label %905

1009:                                             ; preds = %905
  %1010 = icmp sgt i32 %906, 0
  br i1 %1010, label %1011, label %1021

1011:                                             ; preds = %1009, %1011
  %1012 = phi i32 [ %1018, %1011 ], [ 0, %1009 ]
  %1013 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %1014 = bitcast %"class.SkSL::OutputStream"* %1013 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1015 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1014, align 8
  %1016 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1015, i64 2
  %1017 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1016, align 8
  call void %1017(%"class.SkSL::OutputStream"* %1013, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1018 = add nuw nsw i32 %1012, 1
  %1019 = load i32, i32* %25, align 4
  %1020 = icmp slt i32 %1018, %1019
  br i1 %1020, label %1011, label %1021

1021:                                             ; preds = %1011, %1009
  %1022 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %1023 = bitcast %"class.SkSL::OutputStream"* %1022 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1024 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1023, align 8
  %1025 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1024, i64 2
  %1026 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1025, align 8
  call void %1026(%"class.SkSL::OutputStream"* %1022, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  %1027 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %1028 = load i8*, i8** %252, align 8
  %1029 = bitcast %"class.SkSL::OutputStream"* %1027 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1030 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1029, align 8
  %1031 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1030, i64 2
  %1032 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1031, align 8
  call void %1032(%"class.SkSL::OutputStream"* %1027, i8* %1028) #17
  store i8 1, i8* %155, align 8
  %1033 = load i32, i32* %25, align 4
  br label %1034

1034:                                             ; preds = %905, %1021
  %1035 = phi i32 [ %1033, %1021 ], [ %906, %905 ]
  %1036 = add nsw i32 %1035, -1
  store i32 %1036, i32* %25, align 4
  %1037 = icmp sgt i32 %1036, 0
  br i1 %1037, label %1038, label %1048

1038:                                             ; preds = %1034, %1038
  %1039 = phi i32 [ %1045, %1038 ], [ 0, %1034 ]
  %1040 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %1041 = bitcast %"class.SkSL::OutputStream"* %1040 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1042 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1041, align 8
  %1043 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1042, i64 2
  %1044 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1043, align 8
  call void %1044(%"class.SkSL::OutputStream"* %1040, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1045 = add nuw nsw i32 %1039, 1
  %1046 = load i32, i32* %25, align 4
  %1047 = icmp slt i32 %1045, %1046
  br i1 %1047, label %1038, label %1048

1048:                                             ; preds = %1038, %1034
  %1049 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %1050 = bitcast %"class.SkSL::OutputStream"* %1049 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1051 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1050, align 8
  %1052 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1051, i64 2
  %1053 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1052, align 8
  call void %1053(%"class.SkSL::OutputStream"* %1049, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #17
  store i8 0, i8* %155, align 8
  %1054 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %1055 = load i8*, i8** %252, align 8
  %1056 = bitcast %"class.SkSL::OutputStream"* %1054 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1057 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1056, align 8
  %1058 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1057, i64 2
  %1059 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1058, align 8
  call void %1059(%"class.SkSL::OutputStream"* %1054, i8* %1055) #17
  store i8 1, i8* %155, align 8
  %1060 = load %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %200, align 8
  %1061 = icmp eq %"struct.std::__1::__hash_node_base.310"* %1060, null
  br i1 %1061, label %1068, label %1062

1062:                                             ; preds = %1048, %1062
  %1063 = phi %"struct.std::__1::__hash_node_base.310"* [ %1065, %1062 ], [ %1060, %1048 ]
  %1064 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %1063, i64 0, i32 0
  %1065 = load %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %1064, align 8
  %1066 = bitcast %"struct.std::__1::__hash_node_base.310"* %1063 to i8*
  call void @_ZdlPv(i8* %1066) #18
  %1067 = icmp eq %"struct.std::__1::__hash_node_base.310"* %1065, null
  br i1 %1067, label %1068, label %1062

1068:                                             ; preds = %1062, %1048
  %1069 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %199, align 8
  store %"struct.std::__1::__hash_node_base.310"** null, %"struct.std::__1::__hash_node_base.310"*** %199, align 8
  %1070 = icmp eq %"struct.std::__1::__hash_node_base.310"** %1069, null
  br i1 %1070, label %1073, label %1071

1071:                                             ; preds = %1068
  %1072 = bitcast %"struct.std::__1::__hash_node_base.310"** %1069 to i8*
  call void @_ZdlPv(i8* %1072) #18
  br label %1073

1073:                                             ; preds = %1068, %1071
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %198) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #17
  store i64 %28, i64* %27, align 8
  br i1 %29, label %1075, label %1074

1074:                                             ; preds = %1073
  store i32 %33, i32* %25, align 4
  br label %1075

1075:                                             ; preds = %1073, %1074
  ret void
}

declare void @_ZNK4SkSL19FunctionDeclaration11mangledNameEv(%"class.SkSL::String"* sret, %"class.SkSL::FunctionDeclaration"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL18MetalCodeGenerator24writeFunctionDeclarationERKNS_19FunctionDeclarationE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.std::__1::tuple.430", align 8
  %5 = alloca %"class.std::__1::tuple.407", align 1
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::InterfaceBlock"*, align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #17
  %23 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %24 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %23, align 8
  %25 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %24, i64 0, i32 5, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  %28 = select i1 %27, i64 0, i64 38
  br i1 %27, label %37, label %29

29:                                               ; preds = %2
  %30 = and i64 %28, 32
  %31 = or i64 %30, 16
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = or i64 %30, -9223372036854775792
  %35 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %28, i64* %36, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.165, i64 0, i64 0), i64 %28, i1 false) #17
  br label %41

37:                                               ; preds = %2
  %38 = trunc i64 %28 to i8
  %39 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1
  br label %41

41:                                               ; preds = %37, %29
  %42 = phi i8* [ %22, %37 ], [ %32, %29 ]
  %43 = getelementptr inbounds i8, i8* %42, i64 %28
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 24
  %45 = bitcast %"class.SkSL::String"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  tail call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %41, %49
  %53 = bitcast %"class.SkSL::String"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %22, i64 24, i1 false) #17
  %54 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 6
  %55 = load i8, i8* %54, align 1, !range !2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #17
  %56 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i8** %9, align 8
  %57 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 6
  %58 = icmp eq i8 %55, 0
  br i1 %58, label %863, label %59

59:                                               ; preds = %52
  %60 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %23, align 8
  %61 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %60, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %61, align 8
  %63 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %62, i64 0, i32 0
  %64 = load i8, i8* %63, align 8
  switch i8 %64, label %119 [
    i8 0, label %65
    i8 1, label %92
  ]

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %85, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i32 [ 0, %73 ], [ %82, %75 ]
  %77 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %74, align 8
  %78 = bitcast %"class.SkSL::OutputStream"* %77 to void (%"class.SkSL::OutputStream"*, i8*)***
  %79 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, i64 2
  %81 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %80, align 8
  tail call void %81(%"class.SkSL::OutputStream"* %77, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %82 = add nuw nsw i32 %76, 1
  %83 = load i32, i32* %70, align 4
  %84 = icmp slt i32 %82, %83
  br i1 %84, label %75, label %85

85:                                               ; preds = %75, %65, %69
  %86 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %87 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %88 = bitcast %"class.SkSL::OutputStream"* %87 to void (%"class.SkSL::OutputStream"*, i8*)***
  %89 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %89, i64 2
  %91 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %90, align 8
  tail call void %91(%"class.SkSL::OutputStream"* %87, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.166, i64 0, i64 0)) #17
  br label %122

92:                                               ; preds = %59
  %93 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %94 = load i8, i8* %93, align 8, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %112, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %98 = load i32, i32* %97, align 4
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %102

102:                                              ; preds = %102, %100
  %103 = phi i32 [ 0, %100 ], [ %109, %102 ]
  %104 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %101, align 8
  %105 = bitcast %"class.SkSL::OutputStream"* %104 to void (%"class.SkSL::OutputStream"*, i8*)***
  %106 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %106, i64 2
  %108 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %107, align 8
  tail call void %108(%"class.SkSL::OutputStream"* %104, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %109 = add nuw nsw i32 %103, 1
  %110 = load i32, i32* %97, align 4
  %111 = icmp slt i32 %109, %110
  br i1 %111, label %102, label %112

112:                                              ; preds = %102, %92, %96
  %113 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %114 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %113, align 8
  %115 = bitcast %"class.SkSL::OutputStream"* %114 to void (%"class.SkSL::OutputStream"*, i8*)***
  %116 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %116, i64 2
  %118 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %117, align 8
  tail call void %118(%"class.SkSL::OutputStream"* %114, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.167, i64 0, i64 0)) #17
  br label %122

119:                                              ; preds = %59
  %120 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 2
  %121 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %120, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %121, i32 -1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.168, i64 0, i64 0))
  br label %1174

122:                                              ; preds = %112, %85
  %123 = phi i8* [ %93, %112 ], [ %66, %85 ]
  store i8 0, i8* %123, align 8
  %124 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %125 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %126 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %127 = bitcast %"class.SkSL::OutputStream"* %126 to void (%"class.SkSL::OutputStream"*, i8*)***
  %128 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %128, i64 2
  %130 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %129, align 8
  tail call void %130(%"class.SkSL::OutputStream"* %126, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.169, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  %131 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 22
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, -1
  br i1 %133, label %193, label %134

134:                                              ; preds = %122
  %135 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #17
  %136 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #17
  %137 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #17
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %12, i32 %132) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %11, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.170, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %12) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::String"* nonnull %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i64 0, i64 0)) #17
  %138 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  %142 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = select i1 %141, i8* %143, i8* %135
  %145 = load i8, i8* %144, align 1
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %171, label %147

147:                                              ; preds = %134
  %148 = load i8, i8* %124, align 8, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %164, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %152 = load i32, i32* %151, align 4
  %153 = icmp sgt i32 %152, 0
  br i1 %153, label %154, label %164

154:                                              ; preds = %150, %154
  %155 = phi i32 [ %161, %154 ], [ 0, %150 ]
  %156 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %157 = bitcast %"class.SkSL::OutputStream"* %156 to void (%"class.SkSL::OutputStream"*, i8*)***
  %158 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %158, i64 2
  %160 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %159, align 8
  call void %160(%"class.SkSL::OutputStream"* %156, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %161 = add nuw nsw i32 %155, 1
  %162 = load i32, i32* %151, align 4
  %163 = icmp slt i32 %161, %162
  br i1 %163, label %154, label %164

164:                                              ; preds = %154, %150, %147
  %165 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %166 = bitcast %"class.SkSL::OutputStream"* %165 to void (%"class.SkSL::OutputStream"*, i8*)***
  %167 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %167, i64 2
  %169 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %168, align 8
  call void %169(%"class.SkSL::OutputStream"* %165, i8* %144) #17
  store i8 0, i8* %124, align 8
  %170 = load i8, i8* %139, align 1
  br label %171

171:                                              ; preds = %134, %164
  %172 = phi i8 [ %140, %134 ], [ %170, %164 ]
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %171
  %175 = load i8*, i8** %142, align 8
  call void @_ZdlPv(i8* %175) #18
  br label %176

176:                                              ; preds = %171, %174
  %177 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %181, label %184

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  call void @_ZdlPv(i8* %183) #18
  br label %184

184:                                              ; preds = %176, %181
  %185 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %185, i64 0, i32 1, i32 0
  %187 = load i8, i8* %186, align 1
  %188 = icmp slt i8 %187, 0
  br i1 %188, label %189, label %192

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load i8*, i8** %190, align 8
  call void @_ZdlPv(i8* %191) #18
  br label %192

192:                                              ; preds = %184, %189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #17
  br label %193

193:                                              ; preds = %122, %192
  %194 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %23, align 8
  %195 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %194, i64 0, i32 6
  %196 = bitcast %"class.std::__1::vector.62"* %195 to i64*
  %197 = load i64, i64* %196, align 8, !noalias !3
  %198 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %194, i64 0, i32 6, i32 0, i32 1
  %199 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %194, i64 0, i32 7
  %200 = bitcast %"class.std::__1::vector.75"* %199 to i64*
  %201 = load i64, i64* %200, align 8, !noalias !3
  %202 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %194, i64 0, i32 7, i32 0, i32 1
  %203 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %202, align 8, !noalias !3
  %204 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %198, align 8, !noalias !6
  %205 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %206 = bitcast %"class.SkSL::String"* %6 to i8*
  %207 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  %209 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = bitcast %"class.SkSL::InterfaceBlock"** %17 to i8*
  %211 = bitcast %"class.SkSL::InterfaceBlock"** %17 to %"class.SkSL::ProgramElement"**
  %212 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 3, i32 0
  %213 = bitcast %"class.std::__1::tuple.430"* %4 to i8*
  %214 = getelementptr inbounds %"class.std::__1::tuple.430", %"class.std::__1::tuple.430"* %4, i64 0, i32 0, i32 0, i32 0
  %215 = getelementptr inbounds %"class.std::__1::tuple.407", %"class.std::__1::tuple.407"* %5, i64 0, i32 0
  %216 = bitcast %"class.SkSL::String"* %18 to i8*
  %217 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %218 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %217, i64 0, i32 1, i32 0
  %219 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = bitcast %"class.SkSL::String"* %13 to i8*
  %221 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %223 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %224 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %225 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %224, i64 0, i32 1, i32 0
  %226 = bitcast %"class.SkSL::String"* %14 to i8*
  %227 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %229 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = bitcast %"class.SkSL::String"* %15 to i8*
  %231 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %233 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %234 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = bitcast %"class.SkSL::String"* %16 to i8*
  %237 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %237, i64 0, i32 1, i32 0
  %239 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = inttoptr i64 %197 to %"class.std::__1::unique_ptr.64"*
  %241 = icmp eq %"class.std::__1::unique_ptr.64"* %204, %240
  %242 = inttoptr i64 %201 to %"class.SkSL::ProgramElement"**
  %243 = icmp eq %"class.SkSL::ProgramElement"** %203, %242
  %244 = and i1 %241, %243
  br i1 %244, label %764, label %245

245:                                              ; preds = %193, %752
  %246 = phi i1 [ %762, %752 ], [ %243, %193 ]
  %247 = phi %"class.SkSL::ProgramElement"** [ %761, %752 ], [ %242, %193 ]
  %248 = phi %"class.std::__1::unique_ptr.64"* [ %759, %752 ], [ %240, %193 ]
  %249 = phi i64 [ %758, %752 ], [ %201, %193 ]
  %250 = phi i64 [ %757, %752 ], [ %197, %193 ]
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %248, i64 0, i32 0, i32 0, i32 0
  %252 = select i1 %246, %"class.SkSL::ProgramElement"** %251, %"class.SkSL::ProgramElement"** %247
  %253 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %252, align 8
  %254 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %253, i64 0, i32 0, i32 2
  %255 = load i32, i32* %254, align 4
  switch i32 %255, label %752 [
    i32 4, label %256
    i32 5, label %539
  ]

256:                                              ; preds = %245
  %257 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %253, i64 1
  %258 = bitcast %"class.SkSL::ProgramElement"* %257 to %"class.SkSL::VarDeclaration"**
  %259 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %258, align 8
  %260 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %259, i64 0, i32 1
  %261 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %260, align 8
  %262 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %261, i64 0, i32 0, i32 2
  %263 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %262, align 8
  %264 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %263, i64 0, i32 3
  %265 = load i32, i32* %264, align 8
  %266 = icmp eq i32 %265, 6
  br i1 %266, label %267, label %752

267:                                              ; preds = %256
  %268 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %261, i64 0, i32 2
  %269 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %268, align 8
  %270 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %269, i64 0, i32 0, i32 3
  %271 = load i32, i32* %270, align 4
  %272 = icmp slt i32 %271, 0
  br i1 %272, label %273, label %278

273:                                              ; preds = %267
  %274 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 2
  %275 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %274, align 8
  %276 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %253, i64 0, i32 0, i32 1
  %277 = load i32, i32* %276, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %275, i32 %277, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.172, i64 0, i64 0))
  br label %1174

278:                                              ; preds = %267
  %279 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %263, i64 0, i32 11
  %280 = load i32, i32* %279, align 8
  %281 = icmp eq i32 %280, 1
  br i1 %281, label %287, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 2
  %284 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %283, align 8
  %285 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %253, i64 0, i32 0, i32 1
  %286 = load i32, i32* %285, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %284, i32 %286, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.173, i64 0, i64 0))
  br label %1174

287:                                              ; preds = %278
  %288 = load i8, i8* %124, align 8, !range !2
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %303, label %290

290:                                              ; preds = %287
  %291 = load i32, i32* %205, align 4
  %292 = icmp sgt i32 %291, 0
  br i1 %292, label %293, label %303

293:                                              ; preds = %290, %293
  %294 = phi i32 [ %300, %293 ], [ 0, %290 ]
  %295 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %296 = bitcast %"class.SkSL::OutputStream"* %295 to void (%"class.SkSL::OutputStream"*, i8*)***
  %297 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %296, align 8
  %298 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %297, i64 2
  %299 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %298, align 8
  call void %299(%"class.SkSL::OutputStream"* %295, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %300 = add nuw nsw i32 %294, 1
  %301 = load i32, i32* %205, align 4
  %302 = icmp slt i32 %300, %301
  br i1 %302, label %293, label %303

303:                                              ; preds = %293, %287, %290
  %304 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %305 = bitcast %"class.SkSL::OutputStream"* %304 to void (%"class.SkSL::OutputStream"*, i8*)***
  %306 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %305, align 8
  %307 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %306, i64 2
  %308 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %307, align 8
  call void %308(%"class.SkSL::OutputStream"* %304, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.174, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %220) #17
  %309 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %260, align 8
  %310 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %309, i64 0, i32 0, i32 1, i32 0
  %311 = load i8*, i8** %310, align 8
  %312 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %309, i64 0, i32 0, i32 1, i32 1
  %313 = load i64, i64* %312, align 8
  %314 = icmp ugt i64 %313, -17
  br i1 %314, label %315, label %317

315:                                              ; preds = %303
  %316 = bitcast %"class.SkSL::String"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %316) #19
  unreachable

317:                                              ; preds = %303
  %318 = icmp ult i64 %313, 23
  br i1 %318, label %324, label %319

319:                                              ; preds = %317
  %320 = add nuw i64 %313, 16
  %321 = and i64 %320, -16
  %322 = call i8* @_Znwm(i64 %321) #18
  store i8* %322, i8** %221, align 8
  %323 = or i64 %321, -9223372036854775808
  store i64 %323, i64* %222, align 8
  store i64 %313, i64* %223, align 8
  br label %327

324:                                              ; preds = %317
  %325 = trunc i64 %313 to i8
  store i8 %325, i8* %225, align 1
  %326 = icmp eq i64 %313, 0
  br i1 %326, label %329, label %327

327:                                              ; preds = %324, %319
  %328 = phi i8* [ %322, %319 ], [ %220, %324 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %328, i8* align 1 %311, i64 %313, i1 false) #17
  br label %329

329:                                              ; preds = %324, %327
  %330 = phi i8* [ %220, %324 ], [ %328, %327 ]
  %331 = getelementptr inbounds i8, i8* %330, i64 %313
  store i8 0, i8* %331, align 1
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %13)
  %332 = load i8, i8* %225, align 1
  %333 = icmp slt i8 %332, 0
  br i1 %333, label %334, label %336

334:                                              ; preds = %329
  %335 = load i8*, i8** %221, align 8
  call void @_ZdlPv(i8* %335) #18
  br label %336

336:                                              ; preds = %329, %334
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %220) #17
  %337 = load i8, i8* %124, align 8, !range !2
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %352, label %339

339:                                              ; preds = %336
  %340 = load i32, i32* %205, align 4
  %341 = icmp sgt i32 %340, 0
  br i1 %341, label %342, label %352

342:                                              ; preds = %339, %342
  %343 = phi i32 [ %349, %342 ], [ 0, %339 ]
  %344 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %345 = bitcast %"class.SkSL::OutputStream"* %344 to void (%"class.SkSL::OutputStream"*, i8*)***
  %346 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %345, align 8
  %347 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %346, i64 2
  %348 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %347, align 8
  call void %348(%"class.SkSL::OutputStream"* %344, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %349 = add nuw nsw i32 %343, 1
  %350 = load i32, i32* %205, align 4
  %351 = icmp slt i32 %349, %350
  br i1 %351, label %342, label %352

352:                                              ; preds = %342, %336, %339
  %353 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %354 = bitcast %"class.SkSL::OutputStream"* %353 to void (%"class.SkSL::OutputStream"*, i8*)***
  %355 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %354, align 8
  %356 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %355, i64 2
  %357 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %356, align 8
  call void %357(%"class.SkSL::OutputStream"* %353, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.175, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #17
  %358 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %260, align 8
  %359 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %358, i64 0, i32 2
  %360 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %359, align 8
  %361 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %360, i64 0, i32 0, i32 3
  %362 = load i32, i32* %361, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %14, i32 %362) #17
  %363 = load i8, i8* %228, align 1
  %364 = icmp slt i8 %363, 0
  %365 = load i8*, i8** %229, align 8
  %366 = select i1 %364, i8* %365, i8* %226
  %367 = load i8, i8* %366, align 1
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %392, label %369

369:                                              ; preds = %352
  %370 = load i8, i8* %124, align 8, !range !2
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %385, label %372

372:                                              ; preds = %369
  %373 = load i32, i32* %205, align 4
  %374 = icmp sgt i32 %373, 0
  br i1 %374, label %375, label %385

375:                                              ; preds = %372, %375
  %376 = phi i32 [ %382, %375 ], [ 0, %372 ]
  %377 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %378 = bitcast %"class.SkSL::OutputStream"* %377 to void (%"class.SkSL::OutputStream"*, i8*)***
  %379 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %378, align 8
  %380 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %379, i64 2
  %381 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %380, align 8
  call void %381(%"class.SkSL::OutputStream"* %377, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %382 = add nuw nsw i32 %376, 1
  %383 = load i32, i32* %205, align 4
  %384 = icmp slt i32 %382, %383
  br i1 %384, label %375, label %385

385:                                              ; preds = %375, %372, %369
  %386 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %387 = bitcast %"class.SkSL::OutputStream"* %386 to void (%"class.SkSL::OutputStream"*, i8*)***
  %388 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %387, align 8
  %389 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %388, i64 2
  %390 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %389, align 8
  call void %390(%"class.SkSL::OutputStream"* %386, i8* %366) #17
  store i8 0, i8* %124, align 8
  %391 = load i8, i8* %228, align 1
  br label %392

392:                                              ; preds = %352, %385
  %393 = phi i8 [ %363, %352 ], [ %391, %385 ]
  %394 = icmp slt i8 %393, 0
  br i1 %394, label %395, label %397

395:                                              ; preds = %392
  %396 = load i8*, i8** %229, align 8
  call void @_ZdlPv(i8* %396) #18
  br label %397

397:                                              ; preds = %392, %395
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #17
  %398 = load i8, i8* %124, align 8, !range !2
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %413, label %400

400:                                              ; preds = %397
  %401 = load i32, i32* %205, align 4
  %402 = icmp sgt i32 %401, 0
  br i1 %402, label %403, label %413

403:                                              ; preds = %400, %403
  %404 = phi i32 [ %410, %403 ], [ 0, %400 ]
  %405 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %406 = bitcast %"class.SkSL::OutputStream"* %405 to void (%"class.SkSL::OutputStream"*, i8*)***
  %407 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %406, align 8
  %408 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %407, i64 2
  %409 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %408, align 8
  call void %409(%"class.SkSL::OutputStream"* %405, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %410 = add nuw nsw i32 %404, 1
  %411 = load i32, i32* %205, align 4
  %412 = icmp slt i32 %410, %411
  br i1 %412, label %403, label %413

413:                                              ; preds = %403, %400, %397
  %414 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %415 = bitcast %"class.SkSL::OutputStream"* %414 to void (%"class.SkSL::OutputStream"*, i8*)***
  %416 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %415, align 8
  %417 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %416, i64 2
  %418 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %417, align 8
  call void %418(%"class.SkSL::OutputStream"* %414, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  %419 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %420 = bitcast %"class.SkSL::OutputStream"* %419 to void (%"class.SkSL::OutputStream"*, i8*)***
  %421 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %420, align 8
  %422 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %421, i64 2
  %423 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %422, align 8
  call void %423(%"class.SkSL::OutputStream"* %419, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %230) #17
  %424 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %260, align 8
  %425 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %424, i64 0, i32 0, i32 1, i32 0
  %426 = load i8*, i8** %425, align 8
  %427 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %424, i64 0, i32 0, i32 1, i32 1
  %428 = load i64, i64* %427, align 8
  %429 = icmp ugt i64 %428, -17
  br i1 %429, label %430, label %432

430:                                              ; preds = %413
  %431 = bitcast %"class.SkSL::String"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %431) #19
  unreachable

432:                                              ; preds = %413
  %433 = icmp ult i64 %428, 23
  br i1 %433, label %439, label %434

434:                                              ; preds = %432
  %435 = add nuw i64 %428, 16
  %436 = and i64 %435, -16
  %437 = call i8* @_Znwm(i64 %436) #18
  store i8* %437, i8** %231, align 8
  %438 = or i64 %436, -9223372036854775808
  store i64 %438, i64* %232, align 8
  store i64 %428, i64* %233, align 8
  br label %442

439:                                              ; preds = %432
  %440 = trunc i64 %428 to i8
  store i8 %440, i8* %235, align 1
  %441 = icmp eq i64 %428, 0
  br i1 %441, label %444, label %442

442:                                              ; preds = %439, %434
  %443 = phi i8* [ %437, %434 ], [ %230, %439 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %443, i8* align 1 %426, i64 %428, i1 false) #17
  br label %444

444:                                              ; preds = %439, %442
  %445 = phi i8* [ %230, %439 ], [ %443, %442 ]
  %446 = getelementptr inbounds i8, i8* %445, i64 %428
  store i8 0, i8* %446, align 1
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %15)
  %447 = load i8, i8* %235, align 1
  %448 = icmp slt i8 %447, 0
  br i1 %448, label %449, label %451

449:                                              ; preds = %444
  %450 = load i8*, i8** %231, align 8
  call void @_ZdlPv(i8* %450) #18
  br label %451

451:                                              ; preds = %444, %449
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %230) #17
  %452 = load i8, i8* %124, align 8, !range !2
  %453 = icmp eq i8 %452, 0
  br i1 %453, label %467, label %454

454:                                              ; preds = %451
  %455 = load i32, i32* %205, align 4
  %456 = icmp sgt i32 %455, 0
  br i1 %456, label %457, label %467

457:                                              ; preds = %454, %457
  %458 = phi i32 [ %464, %457 ], [ 0, %454 ]
  %459 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %460 = bitcast %"class.SkSL::OutputStream"* %459 to void (%"class.SkSL::OutputStream"*, i8*)***
  %461 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %460, align 8
  %462 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %461, i64 2
  %463 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %462, align 8
  call void %463(%"class.SkSL::OutputStream"* %459, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %464 = add nuw nsw i32 %458, 1
  %465 = load i32, i32* %205, align 4
  %466 = icmp slt i32 %464, %465
  br i1 %466, label %457, label %467

467:                                              ; preds = %457, %454, %451
  %468 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %469 = bitcast %"class.SkSL::OutputStream"* %468 to void (%"class.SkSL::OutputStream"*, i8*)***
  %470 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %469, align 8
  %471 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %470, i64 2
  %472 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %471, align 8
  call void %472(%"class.SkSL::OutputStream"* %468, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  %473 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %474 = bitcast %"class.SkSL::OutputStream"* %473 to void (%"class.SkSL::OutputStream"*, i8*)***
  %475 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %474, align 8
  %476 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %475, i64 2
  %477 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %476, align 8
  call void %477(%"class.SkSL::OutputStream"* %473, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.177, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #17
  %478 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %260, align 8
  %479 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %478, i64 0, i32 2
  %480 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %479, align 8
  %481 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %480, i64 0, i32 0, i32 3
  %482 = load i32, i32* %481, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %16, i32 %482) #17
  %483 = load i8, i8* %238, align 1
  %484 = icmp slt i8 %483, 0
  %485 = load i8*, i8** %239, align 8
  %486 = select i1 %484, i8* %485, i8* %236
  %487 = load i8, i8* %486, align 1
  %488 = icmp eq i8 %487, 0
  br i1 %488, label %512, label %489

489:                                              ; preds = %467
  %490 = load i8, i8* %124, align 8, !range !2
  %491 = icmp eq i8 %490, 0
  br i1 %491, label %505, label %492

492:                                              ; preds = %489
  %493 = load i32, i32* %205, align 4
  %494 = icmp sgt i32 %493, 0
  br i1 %494, label %495, label %505

495:                                              ; preds = %492, %495
  %496 = phi i32 [ %502, %495 ], [ 0, %492 ]
  %497 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %498 = bitcast %"class.SkSL::OutputStream"* %497 to void (%"class.SkSL::OutputStream"*, i8*)***
  %499 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %498, align 8
  %500 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %499, i64 2
  %501 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %500, align 8
  call void %501(%"class.SkSL::OutputStream"* %497, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %502 = add nuw nsw i32 %496, 1
  %503 = load i32, i32* %205, align 4
  %504 = icmp slt i32 %502, %503
  br i1 %504, label %495, label %505

505:                                              ; preds = %495, %492, %489
  %506 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %507 = bitcast %"class.SkSL::OutputStream"* %506 to void (%"class.SkSL::OutputStream"*, i8*)***
  %508 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %507, align 8
  %509 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %508, i64 2
  %510 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %509, align 8
  call void %510(%"class.SkSL::OutputStream"* %506, i8* %486) #17
  store i8 0, i8* %124, align 8
  %511 = load i8, i8* %238, align 1
  br label %512

512:                                              ; preds = %467, %505
  %513 = phi i8 [ %483, %467 ], [ %511, %505 ]
  %514 = icmp slt i8 %513, 0
  br i1 %514, label %515, label %517

515:                                              ; preds = %512
  %516 = load i8*, i8** %239, align 8
  call void @_ZdlPv(i8* %516) #18
  br label %517

517:                                              ; preds = %512, %515
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #17
  %518 = load i8, i8* %124, align 8, !range !2
  %519 = icmp eq i8 %518, 0
  br i1 %519, label %533, label %520

520:                                              ; preds = %517
  %521 = load i32, i32* %205, align 4
  %522 = icmp sgt i32 %521, 0
  br i1 %522, label %523, label %533

523:                                              ; preds = %520, %523
  %524 = phi i32 [ %530, %523 ], [ 0, %520 ]
  %525 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %526 = bitcast %"class.SkSL::OutputStream"* %525 to void (%"class.SkSL::OutputStream"*, i8*)***
  %527 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %526, align 8
  %528 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %527, i64 2
  %529 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %528, align 8
  call void %529(%"class.SkSL::OutputStream"* %525, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %530 = add nuw nsw i32 %524, 1
  %531 = load i32, i32* %205, align 4
  %532 = icmp slt i32 %530, %531
  br i1 %532, label %523, label %533

533:                                              ; preds = %523, %517, %520
  %534 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %535 = bitcast %"class.SkSL::OutputStream"* %534 to void (%"class.SkSL::OutputStream"*, i8*)***
  %536 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %535, align 8
  %537 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %536, i64 2
  %538 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %537, align 8
  call void %538(%"class.SkSL::OutputStream"* %534, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  br label %752

539:                                              ; preds = %245
  %540 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %253, i64 1, i32 0, i32 1
  %541 = bitcast i32* %540 to %"class.SkSL::String"*
  %542 = call zeroext i1 @_ZNK4SkSL6StringeqEPKc(%"class.SkSL::String"* %541, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.178, i64 0, i64 0)) #17
  br i1 %542, label %752, label %543

543:                                              ; preds = %539
  %544 = load i8, i8* %124, align 8, !range !2
  %545 = icmp eq i8 %544, 0
  br i1 %545, label %559, label %546

546:                                              ; preds = %543
  %547 = load i32, i32* %205, align 4
  %548 = icmp sgt i32 %547, 0
  br i1 %548, label %549, label %559

549:                                              ; preds = %546, %549
  %550 = phi i32 [ %556, %549 ], [ 0, %546 ]
  %551 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %552 = bitcast %"class.SkSL::OutputStream"* %551 to void (%"class.SkSL::OutputStream"*, i8*)***
  %553 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %552, align 8
  %554 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %553, i64 2
  %555 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %554, align 8
  call void %555(%"class.SkSL::OutputStream"* %551, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %556 = add nuw nsw i32 %550, 1
  %557 = load i32, i32* %205, align 4
  %558 = icmp slt i32 %556, %557
  br i1 %558, label %549, label %559

559:                                              ; preds = %549, %543, %546
  %560 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %561 = bitcast %"class.SkSL::OutputStream"* %560 to void (%"class.SkSL::OutputStream"*, i8*)***
  %562 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %561, align 8
  %563 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %562, i64 2
  %564 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %563, align 8
  call void %564(%"class.SkSL::OutputStream"* %560, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.179, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  %565 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %253, i64 1
  %566 = bitcast %"class.SkSL::ProgramElement"* %565 to %"class.SkSL::Variable"**
  %567 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %566, align 8
  %568 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %567, i64 0, i32 0, i32 2
  %569 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %568, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %206) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %569) #17
  %570 = load i8, i8* %208, align 1
  %571 = icmp slt i8 %570, 0
  %572 = load i8*, i8** %209, align 8
  %573 = select i1 %571, i8* %572, i8* %206
  %574 = load i8, i8* %573, align 1
  %575 = icmp eq i8 %574, 0
  br i1 %575, label %599, label %576

576:                                              ; preds = %559
  %577 = load i8, i8* %124, align 8, !range !2
  %578 = icmp eq i8 %577, 0
  br i1 %578, label %592, label %579

579:                                              ; preds = %576
  %580 = load i32, i32* %205, align 4
  %581 = icmp sgt i32 %580, 0
  br i1 %581, label %582, label %592

582:                                              ; preds = %579, %582
  %583 = phi i32 [ %589, %582 ], [ 0, %579 ]
  %584 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %585 = bitcast %"class.SkSL::OutputStream"* %584 to void (%"class.SkSL::OutputStream"*, i8*)***
  %586 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %585, align 8
  %587 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %586, i64 2
  %588 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %587, align 8
  call void %588(%"class.SkSL::OutputStream"* %584, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %589 = add nuw nsw i32 %583, 1
  %590 = load i32, i32* %205, align 4
  %591 = icmp slt i32 %589, %590
  br i1 %591, label %582, label %592

592:                                              ; preds = %582, %579, %576
  %593 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %594 = bitcast %"class.SkSL::OutputStream"* %593 to void (%"class.SkSL::OutputStream"*, i8*)***
  %595 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %594, align 8
  %596 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %595, i64 2
  %597 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %596, align 8
  call void %597(%"class.SkSL::OutputStream"* %593, i8* %573) #17
  store i8 0, i8* %124, align 8
  %598 = load i8, i8* %208, align 1
  br label %599

599:                                              ; preds = %592, %559
  %600 = phi i8 [ %570, %559 ], [ %598, %592 ]
  %601 = icmp slt i8 %600, 0
  br i1 %601, label %602, label %604

602:                                              ; preds = %599
  %603 = load i8*, i8** %209, align 8
  call void @_ZdlPv(i8* %603) #18
  br label %604

604:                                              ; preds = %599, %602
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %206) #17
  %605 = load i8, i8* %124, align 8, !range !2
  %606 = icmp eq i8 %605, 0
  br i1 %606, label %620, label %607

607:                                              ; preds = %604
  %608 = load i32, i32* %205, align 4
  %609 = icmp sgt i32 %608, 0
  br i1 %609, label %610, label %620

610:                                              ; preds = %607, %610
  %611 = phi i32 [ %617, %610 ], [ 0, %607 ]
  %612 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %613 = bitcast %"class.SkSL::OutputStream"* %612 to void (%"class.SkSL::OutputStream"*, i8*)***
  %614 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %613, align 8
  %615 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %614, i64 2
  %616 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %615, align 8
  call void %616(%"class.SkSL::OutputStream"* %612, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %617 = add nuw nsw i32 %611, 1
  %618 = load i32, i32* %205, align 4
  %619 = icmp slt i32 %617, %618
  br i1 %619, label %610, label %620

620:                                              ; preds = %610, %604, %607
  %621 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %622 = bitcast %"class.SkSL::OutputStream"* %621 to void (%"class.SkSL::OutputStream"*, i8*)***
  %623 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %622, align 8
  %624 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %623, i64 2
  %625 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %624, align 8
  call void %625(%"class.SkSL::OutputStream"* %621, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #17
  store %"class.SkSL::ProgramElement"* %253, %"class.SkSL::ProgramElement"** %211, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #17
  store %"class.SkSL::InterfaceBlock"** %17, %"class.SkSL::InterfaceBlock"*** %214, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %215) #17
  %626 = call { %"struct.std::__1::__hash_node_base.163"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.159"* %212, %"class.SkSL::InterfaceBlock"** nonnull dereferenceable(8) %17, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.430"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.407"* nonnull dereferenceable(1) %5) #17
  %627 = extractvalue { %"struct.std::__1::__hash_node_base.163"*, i8 } %626, 0
  %628 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %627, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %215) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #17
  %629 = bitcast %"struct.std::__1::__hash_node_base.163"* %628 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %630 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %629, i64 0, i32 1, i32 0
  %631 = load i8, i8* %630, align 1
  %632 = icmp slt i8 %631, 0
  %633 = bitcast %"struct.std::__1::__hash_node_base.163"* %628 to i8**
  %634 = load i8*, i8** %633, align 8
  %635 = bitcast %"struct.std::__1::__hash_node_base.163"* %628 to i8*
  %636 = select i1 %632, i8* %634, i8* %635
  %637 = load i8, i8* %636, align 1
  %638 = icmp eq i8 %637, 0
  %639 = load i8, i8* %124, align 8
  br i1 %638, label %661, label %640

640:                                              ; preds = %620
  %641 = icmp eq i8 %639, 0
  br i1 %641, label %655, label %642

642:                                              ; preds = %640
  %643 = load i32, i32* %205, align 4
  %644 = icmp sgt i32 %643, 0
  br i1 %644, label %645, label %655

645:                                              ; preds = %642, %645
  %646 = phi i32 [ %652, %645 ], [ 0, %642 ]
  %647 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %648 = bitcast %"class.SkSL::OutputStream"* %647 to void (%"class.SkSL::OutputStream"*, i8*)***
  %649 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %648, align 8
  %650 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %649, i64 2
  %651 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %650, align 8
  call void %651(%"class.SkSL::OutputStream"* %647, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %652 = add nuw nsw i32 %646, 1
  %653 = load i32, i32* %205, align 4
  %654 = icmp slt i32 %652, %653
  br i1 %654, label %645, label %655

655:                                              ; preds = %645, %640, %642
  %656 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %657 = bitcast %"class.SkSL::OutputStream"* %656 to void (%"class.SkSL::OutputStream"*, i8*)***
  %658 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %657, align 8
  %659 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %658, i64 2
  %660 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %659, align 8
  call void %660(%"class.SkSL::OutputStream"* %656, i8* %636) #17
  store i8 0, i8* %124, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #17
  br label %676

661:                                              ; preds = %620
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #17
  %662 = icmp eq i8 %639, 0
  br i1 %662, label %676, label %663

663:                                              ; preds = %661
  %664 = load i32, i32* %205, align 4
  %665 = icmp sgt i32 %664, 0
  br i1 %665, label %666, label %676

666:                                              ; preds = %663, %666
  %667 = phi i32 [ %673, %666 ], [ 0, %663 ]
  %668 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %669 = bitcast %"class.SkSL::OutputStream"* %668 to void (%"class.SkSL::OutputStream"*, i8*)***
  %670 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %669, align 8
  %671 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %670, i64 2
  %672 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %671, align 8
  call void %672(%"class.SkSL::OutputStream"* %668, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %673 = add nuw nsw i32 %667, 1
  %674 = load i32, i32* %205, align 4
  %675 = icmp slt i32 %673, %674
  br i1 %675, label %666, label %676

676:                                              ; preds = %666, %655, %661, %663
  %677 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %678 = bitcast %"class.SkSL::OutputStream"* %677 to void (%"class.SkSL::OutputStream"*, i8*)***
  %679 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %678, align 8
  %680 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %679, i64 2
  %681 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %680, align 8
  call void %681(%"class.SkSL::OutputStream"* %677, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.181, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %216) #17
  %682 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %566, align 8
  %683 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %682, i64 0, i32 2
  %684 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %683, align 8
  %685 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %684, i64 0, i32 0, i32 3
  %686 = load i32, i32* %685, align 4
  %687 = icmp sgt i32 %686, -1
  br i1 %687, label %694, label %688

688:                                              ; preds = %676
  %689 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %23, align 8
  %690 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %689, i64 0, i32 1, i32 0, i32 0, i32 0
  %691 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %690, align 8
  %692 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %691, i64 0, i32 1, i32 9
  %693 = load i32, i32* %692, align 8
  br label %694

694:                                              ; preds = %676, %688
  %695 = phi i32 [ %693, %688 ], [ %686, %676 ]
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %18, i32 %695) #17
  %696 = load i8, i8* %218, align 1
  %697 = icmp slt i8 %696, 0
  %698 = load i8*, i8** %219, align 8
  %699 = select i1 %697, i8* %698, i8* %216
  %700 = load i8, i8* %699, align 1
  %701 = icmp eq i8 %700, 0
  br i1 %701, label %725, label %702

702:                                              ; preds = %694
  %703 = load i8, i8* %124, align 8, !range !2
  %704 = icmp eq i8 %703, 0
  br i1 %704, label %718, label %705

705:                                              ; preds = %702
  %706 = load i32, i32* %205, align 4
  %707 = icmp sgt i32 %706, 0
  br i1 %707, label %708, label %718

708:                                              ; preds = %705, %708
  %709 = phi i32 [ %715, %708 ], [ 0, %705 ]
  %710 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %711 = bitcast %"class.SkSL::OutputStream"* %710 to void (%"class.SkSL::OutputStream"*, i8*)***
  %712 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %711, align 8
  %713 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %712, i64 2
  %714 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %713, align 8
  call void %714(%"class.SkSL::OutputStream"* %710, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %715 = add nuw nsw i32 %709, 1
  %716 = load i32, i32* %205, align 4
  %717 = icmp slt i32 %715, %716
  br i1 %717, label %708, label %718

718:                                              ; preds = %708, %705, %702
  %719 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %720 = bitcast %"class.SkSL::OutputStream"* %719 to void (%"class.SkSL::OutputStream"*, i8*)***
  %721 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %720, align 8
  %722 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %721, i64 2
  %723 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %722, align 8
  call void %723(%"class.SkSL::OutputStream"* %719, i8* %699) #17
  store i8 0, i8* %124, align 8
  %724 = load i8, i8* %218, align 1
  br label %725

725:                                              ; preds = %694, %718
  %726 = phi i8 [ %696, %694 ], [ %724, %718 ]
  %727 = icmp slt i8 %726, 0
  br i1 %727, label %728, label %730

728:                                              ; preds = %725
  %729 = load i8*, i8** %219, align 8
  call void @_ZdlPv(i8* %729) #18
  br label %730

730:                                              ; preds = %725, %728
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %216) #17
  %731 = load i8, i8* %124, align 8, !range !2
  %732 = icmp eq i8 %731, 0
  br i1 %732, label %746, label %733

733:                                              ; preds = %730
  %734 = load i32, i32* %205, align 4
  %735 = icmp sgt i32 %734, 0
  br i1 %735, label %736, label %746

736:                                              ; preds = %733, %736
  %737 = phi i32 [ %743, %736 ], [ 0, %733 ]
  %738 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %739 = bitcast %"class.SkSL::OutputStream"* %738 to void (%"class.SkSL::OutputStream"*, i8*)***
  %740 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %739, align 8
  %741 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %740, i64 2
  %742 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %741, align 8
  call void %742(%"class.SkSL::OutputStream"* %738, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %743 = add nuw nsw i32 %737, 1
  %744 = load i32, i32* %205, align 4
  %745 = icmp slt i32 %743, %744
  br i1 %745, label %736, label %746

746:                                              ; preds = %736, %733, %730
  %747 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %748 = bitcast %"class.SkSL::OutputStream"* %747 to void (%"class.SkSL::OutputStream"*, i8*)***
  %749 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %748, align 8
  %750 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %749, i64 2
  %751 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %750, align 8
  call void %751(%"class.SkSL::OutputStream"* %747, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  br label %752

752:                                              ; preds = %245, %256, %533, %539, %746
  %753 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %248, i64 1
  %754 = ptrtoint %"class.std::__1::unique_ptr.64"* %753 to i64
  %755 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %247, i64 1
  %756 = ptrtoint %"class.SkSL::ProgramElement"** %755 to i64
  %757 = select i1 %246, i64 %754, i64 %250
  %758 = select i1 %246, i64 %249, i64 %756
  %759 = inttoptr i64 %757 to %"class.std::__1::unique_ptr.64"*
  %760 = icmp eq %"class.std::__1::unique_ptr.64"* %204, %759
  %761 = inttoptr i64 %758 to %"class.SkSL::ProgramElement"**
  %762 = icmp eq %"class.SkSL::ProgramElement"** %203, %761
  %763 = and i1 %760, %762
  br i1 %763, label %764, label %245

764:                                              ; preds = %752, %193
  %765 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %23, align 8
  %766 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %765, i64 0, i32 1, i32 0, i32 0, i32 0
  %767 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %766, align 8
  %768 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %767, i64 0, i32 0
  %769 = load i8, i8* %768, align 8
  switch i8 %769, label %862 [
    i8 0, label %770
    i8 1, label %839
  ]

770:                                              ; preds = %764
  %771 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %765, i64 0, i32 5, i32 0
  %772 = load i8, i8* %771, align 8, !range !2
  %773 = icmp eq i8 %772, 0
  br i1 %773, label %812, label %774

774:                                              ; preds = %770
  %775 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %776 = load i64, i64* %775, align 8
  %777 = icmp eq i64 %776, 0
  br i1 %777, label %778, label %812

778:                                              ; preds = %774
  %779 = load i8, i8* %124, align 8, !range !2
  %780 = icmp eq i8 %779, 0
  br i1 %780, label %794, label %781

781:                                              ; preds = %778
  %782 = load i32, i32* %205, align 4
  %783 = icmp sgt i32 %782, 0
  br i1 %783, label %784, label %794

784:                                              ; preds = %781, %784
  %785 = phi i32 [ %791, %784 ], [ 0, %781 ]
  %786 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %787 = bitcast %"class.SkSL::OutputStream"* %786 to void (%"class.SkSL::OutputStream"*, i8*)***
  %788 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %787, align 8
  %789 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %788, i64 2
  %790 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %789, align 8
  call void %790(%"class.SkSL::OutputStream"* %786, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %791 = add nuw nsw i32 %785, 1
  %792 = load i32, i32* %205, align 4
  %793 = icmp slt i32 %791, %792
  br i1 %793, label %784, label %794

794:                                              ; preds = %784, %778, %781
  %795 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %796 = bitcast %"class.SkSL::OutputStream"* %795 to void (%"class.SkSL::OutputStream"*, i8*)***
  %797 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %796, align 8
  %798 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %797, i64 2
  %799 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %798, align 8
  call void %799(%"class.SkSL::OutputStream"* %795, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.182, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  %800 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %800) #17
  %801 = call i8* @_Znwm(i64 32) #18
  %802 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %801, i8** %802, align 8
  %803 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %804 = bitcast i64* %803 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %804, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %801, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i64 0, i64 0), i64 28, i1 false) #17
  %805 = getelementptr inbounds i8, i8* %801, i64 28
  store i8 0, i8* %805, align 1
  %806 = load i8, i8* %46, align 1
  %807 = icmp slt i8 %806, 0
  br i1 %807, label %808, label %811

808:                                              ; preds = %794
  %809 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %810 = load i8*, i8** %809, align 8
  call void @_ZdlPv(i8* %810) #18
  br label %811

811:                                              ; preds = %808, %794
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %800, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %800) #17
  br label %812

812:                                              ; preds = %770, %811, %774
  %813 = load i8, i8* %124, align 8, !range !2
  %814 = icmp eq i8 %813, 0
  br i1 %814, label %828, label %815

815:                                              ; preds = %812
  %816 = load i32, i32* %205, align 4
  %817 = icmp sgt i32 %816, 0
  br i1 %817, label %818, label %828

818:                                              ; preds = %815, %818
  %819 = phi i32 [ %825, %818 ], [ 0, %815 ]
  %820 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %821 = bitcast %"class.SkSL::OutputStream"* %820 to void (%"class.SkSL::OutputStream"*, i8*)***
  %822 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %821, align 8
  %823 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %822, i64 2
  %824 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %823, align 8
  call void %824(%"class.SkSL::OutputStream"* %820, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %825 = add nuw nsw i32 %819, 1
  %826 = load i32, i32* %205, align 4
  %827 = icmp slt i32 %825, %826
  br i1 %827, label %818, label %828

828:                                              ; preds = %818, %815, %812
  %829 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %830 = bitcast %"class.SkSL::OutputStream"* %829 to void (%"class.SkSL::OutputStream"*, i8*)***
  %831 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %830, align 8
  %832 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %831, i64 2
  %833 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %832, align 8
  call void %833(%"class.SkSL::OutputStream"* %829, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.184, i64 0, i64 0)) #17
  store i8 0, i8* %124, align 8
  %834 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %835 = bitcast %"class.SkSL::OutputStream"* %834 to void (%"class.SkSL::OutputStream"*, i8*)***
  %836 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %835, align 8
  %837 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %836, i64 2
  %838 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %837, align 8
  call void %838(%"class.SkSL::OutputStream"* %834, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.185, i64 0, i64 0)) #17
  br label %861

839:                                              ; preds = %764
  %840 = load i8, i8* %124, align 8, !range !2
  %841 = icmp eq i8 %840, 0
  br i1 %841, label %855, label %842

842:                                              ; preds = %839
  %843 = load i32, i32* %205, align 4
  %844 = icmp sgt i32 %843, 0
  br i1 %844, label %845, label %855

845:                                              ; preds = %842, %845
  %846 = phi i32 [ %852, %845 ], [ 0, %842 ]
  %847 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %848 = bitcast %"class.SkSL::OutputStream"* %847 to void (%"class.SkSL::OutputStream"*, i8*)***
  %849 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %848, align 8
  %850 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %849, i64 2
  %851 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %850, align 8
  call void %851(%"class.SkSL::OutputStream"* %847, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %852 = add nuw nsw i32 %846, 1
  %853 = load i32, i32* %205, align 4
  %854 = icmp slt i32 %852, %853
  br i1 %854, label %845, label %855

855:                                              ; preds = %845, %839, %842
  %856 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %125, align 8
  %857 = bitcast %"class.SkSL::OutputStream"* %856 to void (%"class.SkSL::OutputStream"*, i8*)***
  %858 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %857, align 8
  %859 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %858, i64 2
  %860 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %859, align 8
  call void %860(%"class.SkSL::OutputStream"* %856, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.186, i64 0, i64 0)) #17
  br label %861

861:                                              ; preds = %828, %855
  store i8 0, i8* %124, align 8
  br label %862

862:                                              ; preds = %861, %764
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %9, align 8
  br label %967

863:                                              ; preds = %52
  %864 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 4
  %865 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %864, align 8
  %866 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %866) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %865) #17
  %867 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %868 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %867, i64 0, i32 1, i32 0
  %869 = load i8, i8* %868, align 1
  %870 = icmp slt i8 %869, 0
  %871 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %872 = load i8*, i8** %871, align 8
  %873 = select i1 %870, i8* %872, i8* %866
  %874 = load i8, i8* %873, align 1
  %875 = icmp eq i8 %874, 0
  br i1 %875, label %904, label %876

876:                                              ; preds = %863
  %877 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %878 = load i8, i8* %877, align 8, !range !2
  %879 = icmp eq i8 %878, 0
  br i1 %879, label %896, label %880

880:                                              ; preds = %876
  %881 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %882 = load i32, i32* %881, align 4
  %883 = icmp sgt i32 %882, 0
  br i1 %883, label %884, label %896

884:                                              ; preds = %880
  %885 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %886

886:                                              ; preds = %886, %884
  %887 = phi i32 [ 0, %884 ], [ %893, %886 ]
  %888 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %885, align 8
  %889 = bitcast %"class.SkSL::OutputStream"* %888 to void (%"class.SkSL::OutputStream"*, i8*)***
  %890 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %889, align 8
  %891 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %890, i64 2
  %892 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %891, align 8
  call void %892(%"class.SkSL::OutputStream"* %888, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %893 = add nuw nsw i32 %887, 1
  %894 = load i32, i32* %881, align 4
  %895 = icmp slt i32 %893, %894
  br i1 %895, label %886, label %896

896:                                              ; preds = %886, %880, %876
  %897 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %898 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %897, align 8
  %899 = bitcast %"class.SkSL::OutputStream"* %898 to void (%"class.SkSL::OutputStream"*, i8*)***
  %900 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %899, align 8
  %901 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %900, i64 2
  %902 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %901, align 8
  call void %902(%"class.SkSL::OutputStream"* %898, i8* %873) #17
  store i8 0, i8* %877, align 8
  %903 = load i8, i8* %868, align 1
  br label %904

904:                                              ; preds = %896, %863
  %905 = phi i8 [ %869, %863 ], [ %903, %896 ]
  %906 = icmp slt i8 %905, 0
  br i1 %906, label %907, label %909

907:                                              ; preds = %904
  %908 = load i8*, i8** %871, align 8
  call void @_ZdlPv(i8* %908) #18
  br label %909

909:                                              ; preds = %904, %907
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %866) #17
  %910 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %911 = load i8, i8* %910, align 8, !range !2
  %912 = icmp eq i8 %911, 0
  br i1 %912, label %929, label %913

913:                                              ; preds = %909
  %914 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %915 = load i32, i32* %914, align 4
  %916 = icmp sgt i32 %915, 0
  br i1 %916, label %917, label %929

917:                                              ; preds = %913
  %918 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %919

919:                                              ; preds = %919, %917
  %920 = phi i32 [ 0, %917 ], [ %926, %919 ]
  %921 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %918, align 8
  %922 = bitcast %"class.SkSL::OutputStream"* %921 to void (%"class.SkSL::OutputStream"*, i8*)***
  %923 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %922, align 8
  %924 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %923, i64 2
  %925 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %924, align 8
  call void %925(%"class.SkSL::OutputStream"* %921, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %926 = add nuw nsw i32 %920, 1
  %927 = load i32, i32* %914, align 4
  %928 = icmp slt i32 %926, %927
  br i1 %928, label %919, label %929

929:                                              ; preds = %919, %909, %913
  %930 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %931 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %930, align 8
  %932 = bitcast %"class.SkSL::OutputStream"* %931 to void (%"class.SkSL::OutputStream"*, i8*)***
  %933 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %932, align 8
  %934 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %933, i64 2
  %935 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %934, align 8
  call void %935(%"class.SkSL::OutputStream"* %931, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %910, align 8
  %936 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %936) #17
  call void @_ZNK4SkSL19FunctionDeclaration11mangledNameEv(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::FunctionDeclaration"* %1) #17
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %20)
  %937 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %938 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %937, i64 0, i32 1, i32 0
  %939 = load i8, i8* %938, align 1
  %940 = icmp slt i8 %939, 0
  br i1 %940, label %941, label %944

941:                                              ; preds = %929
  %942 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %943 = load i8*, i8** %942, align 8
  call void @_ZdlPv(i8* %943) #18
  br label %944

944:                                              ; preds = %929, %941
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %936) #17
  %945 = load i8, i8* %910, align 8, !range !2
  %946 = icmp eq i8 %945, 0
  br i1 %946, label %961, label %947

947:                                              ; preds = %944
  %948 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %949 = load i32, i32* %948, align 4
  %950 = icmp sgt i32 %949, 0
  br i1 %950, label %951, label %961

951:                                              ; preds = %947, %951
  %952 = phi i32 [ %958, %951 ], [ 0, %947 ]
  %953 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %930, align 8
  %954 = bitcast %"class.SkSL::OutputStream"* %953 to void (%"class.SkSL::OutputStream"*, i8*)***
  %955 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %954, align 8
  %956 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %955, i64 2
  %957 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %956, align 8
  call void %957(%"class.SkSL::OutputStream"* %953, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %958 = add nuw nsw i32 %952, 1
  %959 = load i32, i32* %948, align 4
  %960 = icmp slt i32 %958, %959
  br i1 %960, label %951, label %961

961:                                              ; preds = %951, %944, %947
  %962 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %930, align 8
  %963 = bitcast %"class.SkSL::OutputStream"* %962 to void (%"class.SkSL::OutputStream"*, i8*)***
  %964 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %963, align 8
  %965 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %964, i64 2
  %966 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %965, align 8
  call void %966(%"class.SkSL::OutputStream"* %962, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %910, align 8
  call void @_ZN4SkSL18MetalCodeGenerator30writeFunctionRequirementParamsERKNS_19FunctionDeclarationERPKc(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %1, i8** nonnull dereferenceable(8) %9)
  br label %967

967:                                              ; preds = %961, %862
  %968 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3, i32 0, i32 0
  %969 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %968, align 8
  %970 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3, i32 0, i32 1
  %971 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %970, align 8
  %972 = icmp eq %"class.SkSL::Variable"** %969, %971
  br i1 %972, label %987, label %973

973:                                              ; preds = %967
  %974 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %975 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %976 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %977 = bitcast %"class.SkSL::String"* %7 to i8*
  %978 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %979 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %978, i64 0, i32 1, i32 0
  %980 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %981 = bitcast %"class.SkSL::String"* %21 to i8*
  %982 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %983 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %984 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %985 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %986 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %985, i64 0, i32 1, i32 0
  br label %1014

987:                                              ; preds = %1171, %967
  %988 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %989 = load i8, i8* %988, align 8, !range !2
  %990 = icmp eq i8 %989, 0
  br i1 %990, label %1007, label %991

991:                                              ; preds = %987
  %992 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %993 = load i32, i32* %992, align 4
  %994 = icmp sgt i32 %993, 0
  br i1 %994, label %995, label %1007

995:                                              ; preds = %991
  %996 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %997

997:                                              ; preds = %997, %995
  %998 = phi i32 [ 0, %995 ], [ %1004, %997 ]
  %999 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %996, align 8
  %1000 = bitcast %"class.SkSL::OutputStream"* %999 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1001 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1000, align 8
  %1002 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1001, i64 2
  %1003 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1002, align 8
  call void %1003(%"class.SkSL::OutputStream"* %999, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1004 = add nuw nsw i32 %998, 1
  %1005 = load i32, i32* %992, align 4
  %1006 = icmp slt i32 %1004, %1005
  br i1 %1006, label %997, label %1007

1007:                                             ; preds = %997, %987, %991
  %1008 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1009 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1008, align 8
  %1010 = bitcast %"class.SkSL::OutputStream"* %1009 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1011 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1010, align 8
  %1012 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1011, i64 2
  %1013 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1012, align 8
  call void %1013(%"class.SkSL::OutputStream"* %1009, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %988, align 8
  br label %1174

1014:                                             ; preds = %973, %1171
  %1015 = phi %"class.SkSL::Variable"** [ %969, %973 ], [ %1172, %1171 ]
  %1016 = load i8, i8* %57, align 1, !range !2
  %1017 = icmp eq i8 %1016, 0
  br i1 %1017, label %1025, label %1018

1018:                                             ; preds = %1014
  %1019 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1015, align 8
  %1020 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1019, i64 0, i32 2
  %1021 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %1020, align 8
  %1022 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1021, i64 0, i32 0, i32 6
  %1023 = load i32, i32* %1022, align 8
  %1024 = icmp eq i32 %1023, -1
  br i1 %1024, label %1025, label %1171

1025:                                             ; preds = %1014, %1018
  %1026 = load i8*, i8** %9, align 8
  %1027 = load i8, i8* %1026, align 1
  %1028 = icmp eq i8 %1027, 0
  br i1 %1028, label %1051, label %1029

1029:                                             ; preds = %1025
  %1030 = load i8, i8* %974, align 8, !range !2
  %1031 = icmp eq i8 %1030, 0
  br i1 %1031, label %1045, label %1032

1032:                                             ; preds = %1029
  %1033 = load i32, i32* %975, align 4
  %1034 = icmp sgt i32 %1033, 0
  br i1 %1034, label %1035, label %1045

1035:                                             ; preds = %1032, %1035
  %1036 = phi i32 [ %1042, %1035 ], [ 0, %1032 ]
  %1037 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %976, align 8
  %1038 = bitcast %"class.SkSL::OutputStream"* %1037 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1039 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1038, align 8
  %1040 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1039, i64 2
  %1041 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1040, align 8
  call void %1041(%"class.SkSL::OutputStream"* %1037, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1042 = add nuw nsw i32 %1036, 1
  %1043 = load i32, i32* %975, align 4
  %1044 = icmp slt i32 %1042, %1043
  br i1 %1044, label %1035, label %1045

1045:                                             ; preds = %1035, %1032, %1029
  %1046 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %976, align 8
  %1047 = bitcast %"class.SkSL::OutputStream"* %1046 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1048 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1047, align 8
  %1049 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1048, i64 2
  %1050 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1049, align 8
  call void %1050(%"class.SkSL::OutputStream"* %1046, i8* %1026) #17
  store i8 0, i8* %974, align 8
  br label %1051

1051:                                             ; preds = %1025, %1045
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %9, align 8
  %1052 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1015, align 8
  %1053 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1052, i64 0, i32 2
  %1054 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %1053, align 8
  call void @_ZN4SkSL18MetalCodeGenerator14writeModifiersERKNS_9ModifiersE(%"class.SkSL::MetalCodeGenerator"* %0, %"struct.SkSL::Modifiers"* dereferenceable(80) %1054)
  %1055 = bitcast %"class.SkSL::Variable"** %1015 to %"class.SkSL::Symbol"**
  %1056 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %1055, align 8
  %1057 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %1056, i64 0, i32 2
  %1058 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %1057, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %977) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1058) #17
  %1059 = load i8, i8* %979, align 1
  %1060 = icmp slt i8 %1059, 0
  %1061 = load i8*, i8** %980, align 8
  %1062 = select i1 %1060, i8* %1061, i8* %977
  %1063 = load i8, i8* %1062, align 1
  %1064 = icmp eq i8 %1063, 0
  br i1 %1064, label %1088, label %1065

1065:                                             ; preds = %1051
  %1066 = load i8, i8* %974, align 8, !range !2
  %1067 = icmp eq i8 %1066, 0
  br i1 %1067, label %1081, label %1068

1068:                                             ; preds = %1065
  %1069 = load i32, i32* %975, align 4
  %1070 = icmp sgt i32 %1069, 0
  br i1 %1070, label %1071, label %1081

1071:                                             ; preds = %1068, %1071
  %1072 = phi i32 [ %1078, %1071 ], [ 0, %1068 ]
  %1073 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %976, align 8
  %1074 = bitcast %"class.SkSL::OutputStream"* %1073 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1075 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1074, align 8
  %1076 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1075, i64 2
  %1077 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1076, align 8
  call void %1077(%"class.SkSL::OutputStream"* %1073, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1078 = add nuw nsw i32 %1072, 1
  %1079 = load i32, i32* %975, align 4
  %1080 = icmp slt i32 %1078, %1079
  br i1 %1080, label %1071, label %1081

1081:                                             ; preds = %1071, %1068, %1065
  %1082 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %976, align 8
  %1083 = bitcast %"class.SkSL::OutputStream"* %1082 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1084 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1083, align 8
  %1085 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1084, i64 2
  %1086 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1085, align 8
  call void %1086(%"class.SkSL::OutputStream"* %1082, i8* %1062) #17
  store i8 0, i8* %974, align 8
  %1087 = load i8, i8* %979, align 1
  br label %1088

1088:                                             ; preds = %1081, %1051
  %1089 = phi i8 [ %1059, %1051 ], [ %1087, %1081 ]
  %1090 = icmp slt i8 %1089, 0
  br i1 %1090, label %1091, label %1093

1091:                                             ; preds = %1088
  %1092 = load i8*, i8** %980, align 8
  call void @_ZdlPv(i8* %1092) #18
  br label %1093

1093:                                             ; preds = %1088, %1091
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %977) #17
  %1094 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1015, align 8
  %1095 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1094, i64 0, i32 2
  %1096 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %1095, align 8
  %1097 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1096, i64 0, i32 1
  %1098 = load i32, i32* %1097, align 8
  %1099 = and i32 %1098, 4
  %1100 = icmp eq i32 %1099, 0
  %1101 = load i8, i8* %974, align 8, !range !2
  %1102 = icmp eq i8 %1101, 0
  br i1 %1100, label %1123, label %1103

1103:                                             ; preds = %1093
  br i1 %1102, label %1117, label %1104

1104:                                             ; preds = %1103
  %1105 = load i32, i32* %975, align 4
  %1106 = icmp sgt i32 %1105, 0
  br i1 %1106, label %1107, label %1117

1107:                                             ; preds = %1104, %1107
  %1108 = phi i32 [ %1114, %1107 ], [ 0, %1104 ]
  %1109 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %976, align 8
  %1110 = bitcast %"class.SkSL::OutputStream"* %1109 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1111 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1110, align 8
  %1112 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1111, i64 2
  %1113 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1112, align 8
  call void %1113(%"class.SkSL::OutputStream"* %1109, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1114 = add nuw nsw i32 %1108, 1
  %1115 = load i32, i32* %975, align 4
  %1116 = icmp slt i32 %1114, %1115
  br i1 %1116, label %1107, label %1117

1117:                                             ; preds = %1107, %1104, %1103
  %1118 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %976, align 8
  %1119 = bitcast %"class.SkSL::OutputStream"* %1118 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1120 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1119, align 8
  %1121 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1120, i64 2
  %1122 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1121, align 8
  call void %1122(%"class.SkSL::OutputStream"* %1118, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #17
  store i8 0, i8* %974, align 8
  br label %1137

1123:                                             ; preds = %1093
  br i1 %1102, label %1137, label %1124

1124:                                             ; preds = %1123
  %1125 = load i32, i32* %975, align 4
  %1126 = icmp sgt i32 %1125, 0
  br i1 %1126, label %1127, label %1137

1127:                                             ; preds = %1124, %1127
  %1128 = phi i32 [ %1134, %1127 ], [ 0, %1124 ]
  %1129 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %976, align 8
  %1130 = bitcast %"class.SkSL::OutputStream"* %1129 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1131 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1130, align 8
  %1132 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1131, i64 2
  %1133 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1132, align 8
  call void %1133(%"class.SkSL::OutputStream"* %1129, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1134 = add nuw nsw i32 %1128, 1
  %1135 = load i32, i32* %975, align 4
  %1136 = icmp slt i32 %1134, %1135
  br i1 %1136, label %1127, label %1137

1137:                                             ; preds = %1127, %1117, %1123, %1124
  %1138 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %976, align 8
  %1139 = bitcast %"class.SkSL::OutputStream"* %1138 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1140 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1139, align 8
  %1141 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1140, i64 2
  %1142 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1141, align 8
  call void %1142(%"class.SkSL::OutputStream"* %1138, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %974, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %981) #17
  %1143 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %1055, align 8
  %1144 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %1143, i64 0, i32 1, i32 0
  %1145 = load i8*, i8** %1144, align 8
  %1146 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %1143, i64 0, i32 1, i32 1
  %1147 = load i64, i64* %1146, align 8
  %1148 = icmp ugt i64 %1147, -17
  br i1 %1148, label %1149, label %1151

1149:                                             ; preds = %1137
  %1150 = bitcast %"class.SkSL::String"* %21 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1150) #19
  unreachable

1151:                                             ; preds = %1137
  %1152 = icmp ult i64 %1147, 23
  br i1 %1152, label %1158, label %1153

1153:                                             ; preds = %1151
  %1154 = add nuw i64 %1147, 16
  %1155 = and i64 %1154, -16
  %1156 = call i8* @_Znwm(i64 %1155) #18
  store i8* %1156, i8** %982, align 8
  %1157 = or i64 %1155, -9223372036854775808
  store i64 %1157, i64* %983, align 8
  store i64 %1147, i64* %984, align 8
  br label %1161

1158:                                             ; preds = %1151
  %1159 = trunc i64 %1147 to i8
  store i8 %1159, i8* %986, align 1
  %1160 = icmp eq i64 %1147, 0
  br i1 %1160, label %1163, label %1161

1161:                                             ; preds = %1158, %1153
  %1162 = phi i8* [ %1156, %1153 ], [ %981, %1158 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1162, i8* align 1 %1145, i64 %1147, i1 false) #17
  br label %1163

1163:                                             ; preds = %1158, %1161
  %1164 = phi i8* [ %981, %1158 ], [ %1162, %1161 ]
  %1165 = getelementptr inbounds i8, i8* %1164, i64 %1147
  store i8 0, i8* %1165, align 1
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %21)
  %1166 = load i8, i8* %986, align 1
  %1167 = icmp slt i8 %1166, 0
  br i1 %1167, label %1168, label %1170

1168:                                             ; preds = %1163
  %1169 = load i8*, i8** %982, align 8
  call void @_ZdlPv(i8* %1169) #18
  br label %1170

1170:                                             ; preds = %1163, %1168
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %981) #17
  br label %1171

1171:                                             ; preds = %1018, %1170
  %1172 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1015, i64 1
  %1173 = icmp eq %"class.SkSL::Variable"** %1172, %971
  br i1 %1173, label %987, label %1014

1174:                                             ; preds = %282, %273, %1007, %119
  %1175 = phi i1 [ false, %119 ], [ true, %1007 ], [ false, %273 ], [ false, %282 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  ret i1 %1175
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator30writeFunctionRequirementParamsERKNS_19FunctionDeclarationERPKc(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96), i8** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsERKNS_19FunctionDeclarationE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %1)
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %66, label %7

7:                                                ; preds = %3
  %8 = load i8*, i8** %2, align 8
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %12 = load i8, i8* %11, align 8, !range !2
  br i1 %10, label %39, label %13

13:                                               ; preds = %7
  %14 = icmp eq i8 %12, 0
  br i1 %14, label %31, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i32 [ 0, %19 ], [ %28, %21 ]
  %23 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %24 = bitcast %"class.SkSL::OutputStream"* %23 to void (%"class.SkSL::OutputStream"*, i8*)***
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %25, i64 2
  %27 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, align 8
  tail call void %27(%"class.SkSL::OutputStream"* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %28 = add nuw nsw i32 %22, 1
  %29 = load i32, i32* %16, align 4
  %30 = icmp slt i32 %28, %29
  br i1 %30, label %21, label %31

31:                                               ; preds = %21, %13, %15
  %32 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %33 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %32, align 8
  %34 = bitcast %"class.SkSL::OutputStream"* %33 to void (%"class.SkSL::OutputStream"*, i8*)***
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, i64 2
  %37 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, align 8
  tail call void %37(%"class.SkSL::OutputStream"* %33, i8* %8) #17
  store i8 0, i8* %11, align 8
  %38 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br label %58

39:                                               ; preds = %7
  %40 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %41 = icmp eq i8 %12, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i32 [ 0, %46 ], [ %55, %48 ]
  %50 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %47, align 8
  %51 = bitcast %"class.SkSL::OutputStream"* %50 to void (%"class.SkSL::OutputStream"*, i8*)***
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %52, i64 2
  %54 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, align 8
  tail call void %54(%"class.SkSL::OutputStream"* %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %55 = add nuw nsw i32 %49, 1
  %56 = load i32, i32* %43, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %48, label %58

58:                                               ; preds = %48, %31, %39, %42
  %59 = phi i8* [ %38, %31 ], [ %40, %39 ], [ %40, %42 ], [ %40, %48 ]
  %60 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %61 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %60, align 8
  %62 = bitcast %"class.SkSL::OutputStream"* %61 to void (%"class.SkSL::OutputStream"*, i8*)***
  %63 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, i64 2
  %65 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %64, align 8
  tail call void %65(%"class.SkSL::OutputStream"* %61, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.160, i64 0, i64 0)) #17
  store i8 0, i8* %59, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %2, align 8
  br label %66

66:                                               ; preds = %3, %58
  %67 = and i32 %4, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %128, label %69

69:                                               ; preds = %66
  %70 = load i8*, i8** %2, align 8
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 0
  %73 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %74 = load i8, i8* %73, align 8, !range !2
  br i1 %72, label %101, label %75

75:                                               ; preds = %69
  %76 = icmp eq i8 %74, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %79 = load i32, i32* %78, align 4
  %80 = icmp sgt i32 %79, 0
  br i1 %80, label %81, label %93

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i32 [ 0, %81 ], [ %90, %83 ]
  %85 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %82, align 8
  %86 = bitcast %"class.SkSL::OutputStream"* %85 to void (%"class.SkSL::OutputStream"*, i8*)***
  %87 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %87, i64 2
  %89 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %88, align 8
  tail call void %89(%"class.SkSL::OutputStream"* %85, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %90 = add nuw nsw i32 %84, 1
  %91 = load i32, i32* %78, align 4
  %92 = icmp slt i32 %90, %91
  br i1 %92, label %83, label %93

93:                                               ; preds = %83, %75, %77
  %94 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %95 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %94, align 8
  %96 = bitcast %"class.SkSL::OutputStream"* %95 to void (%"class.SkSL::OutputStream"*, i8*)***
  %97 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %97, i64 2
  %99 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %98, align 8
  tail call void %99(%"class.SkSL::OutputStream"* %95, i8* %70) #17
  store i8 0, i8* %73, align 8
  %100 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br label %120

101:                                              ; preds = %69
  %102 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %103 = icmp eq i8 %74, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %120

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %110

110:                                              ; preds = %110, %108
  %111 = phi i32 [ 0, %108 ], [ %117, %110 ]
  %112 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %109, align 8
  %113 = bitcast %"class.SkSL::OutputStream"* %112 to void (%"class.SkSL::OutputStream"*, i8*)***
  %114 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %114, i64 2
  %116 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %115, align 8
  tail call void %116(%"class.SkSL::OutputStream"* %112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %117 = add nuw nsw i32 %111, 1
  %118 = load i32, i32* %105, align 4
  %119 = icmp slt i32 %117, %118
  br i1 %119, label %110, label %120

120:                                              ; preds = %110, %93, %101, %104
  %121 = phi i8* [ %100, %93 ], [ %102, %101 ], [ %102, %104 ], [ %102, %110 ]
  %122 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %123 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %122, align 8
  %124 = bitcast %"class.SkSL::OutputStream"* %123 to void (%"class.SkSL::OutputStream"*, i8*)***
  %125 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %125, i64 2
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %126, align 8
  tail call void %127(%"class.SkSL::OutputStream"* %123, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.161, i64 0, i64 0)) #17
  store i8 0, i8* %121, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %2, align 8
  br label %128

128:                                              ; preds = %66, %120
  %129 = and i32 %4, 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %190, label %131

131:                                              ; preds = %128
  %132 = load i8*, i8** %2, align 8
  %133 = load i8, i8* %132, align 1
  %134 = icmp eq i8 %133, 0
  %135 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %136 = load i8, i8* %135, align 8, !range !2
  br i1 %134, label %163, label %137

137:                                              ; preds = %131
  %138 = icmp eq i8 %136, 0
  br i1 %138, label %155, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %141 = load i32, i32* %140, align 4
  %142 = icmp sgt i32 %141, 0
  br i1 %142, label %143, label %155

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %145

145:                                              ; preds = %145, %143
  %146 = phi i32 [ 0, %143 ], [ %152, %145 ]
  %147 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %144, align 8
  %148 = bitcast %"class.SkSL::OutputStream"* %147 to void (%"class.SkSL::OutputStream"*, i8*)***
  %149 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %149, i64 2
  %151 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %150, align 8
  tail call void %151(%"class.SkSL::OutputStream"* %147, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %152 = add nuw nsw i32 %146, 1
  %153 = load i32, i32* %140, align 4
  %154 = icmp slt i32 %152, %153
  br i1 %154, label %145, label %155

155:                                              ; preds = %145, %137, %139
  %156 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %157 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %156, align 8
  %158 = bitcast %"class.SkSL::OutputStream"* %157 to void (%"class.SkSL::OutputStream"*, i8*)***
  %159 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %159, i64 2
  %161 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %160, align 8
  tail call void %161(%"class.SkSL::OutputStream"* %157, i8* %132) #17
  store i8 0, i8* %135, align 8
  %162 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br label %182

163:                                              ; preds = %131
  %164 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %165 = icmp eq i8 %136, 0
  br i1 %165, label %182, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %168 = load i32, i32* %167, align 4
  %169 = icmp sgt i32 %168, 0
  br i1 %169, label %170, label %182

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %172

172:                                              ; preds = %172, %170
  %173 = phi i32 [ 0, %170 ], [ %179, %172 ]
  %174 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %171, align 8
  %175 = bitcast %"class.SkSL::OutputStream"* %174 to void (%"class.SkSL::OutputStream"*, i8*)***
  %176 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %176, i64 2
  %178 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %177, align 8
  tail call void %178(%"class.SkSL::OutputStream"* %174, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %179 = add nuw nsw i32 %173, 1
  %180 = load i32, i32* %167, align 4
  %181 = icmp slt i32 %179, %180
  br i1 %181, label %172, label %182

182:                                              ; preds = %172, %155, %163, %166
  %183 = phi i8* [ %162, %155 ], [ %164, %163 ], [ %164, %166 ], [ %164, %172 ]
  %184 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %185 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %184, align 8
  %186 = bitcast %"class.SkSL::OutputStream"* %185 to void (%"class.SkSL::OutputStream"*, i8*)***
  %187 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %186, align 8
  %188 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %187, i64 2
  %189 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %188, align 8
  tail call void %189(%"class.SkSL::OutputStream"* %185, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.162, i64 0, i64 0)) #17
  store i8 0, i8* %183, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %2, align 8
  br label %190

190:                                              ; preds = %128, %182
  %191 = and i32 %4, 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %251, label %193

193:                                              ; preds = %190
  %194 = load i8*, i8** %2, align 8
  %195 = load i8, i8* %194, align 1
  %196 = icmp eq i8 %195, 0
  %197 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %198 = load i8, i8* %197, align 8, !range !2
  %199 = icmp eq i8 %198, 0
  br i1 %196, label %225, label %200

200:                                              ; preds = %193
  br i1 %199, label %217, label %201

201:                                              ; preds = %200
  %202 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %203 = load i32, i32* %202, align 4
  %204 = icmp sgt i32 %203, 0
  br i1 %204, label %205, label %217

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %207

207:                                              ; preds = %207, %205
  %208 = phi i32 [ 0, %205 ], [ %214, %207 ]
  %209 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %206, align 8
  %210 = bitcast %"class.SkSL::OutputStream"* %209 to void (%"class.SkSL::OutputStream"*, i8*)***
  %211 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %211, i64 2
  %213 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %212, align 8
  tail call void %213(%"class.SkSL::OutputStream"* %209, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %214 = add nuw nsw i32 %208, 1
  %215 = load i32, i32* %202, align 4
  %216 = icmp slt i32 %214, %215
  br i1 %216, label %207, label %217

217:                                              ; preds = %207, %200, %201
  %218 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %219 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %218, align 8
  %220 = bitcast %"class.SkSL::OutputStream"* %219 to void (%"class.SkSL::OutputStream"*, i8*)***
  %221 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %221, i64 2
  %223 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %222, align 8
  tail call void %223(%"class.SkSL::OutputStream"* %219, i8* %194) #17
  store i8 0, i8* %197, align 8
  %224 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br label %243

225:                                              ; preds = %193
  %226 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br i1 %199, label %243, label %227

227:                                              ; preds = %225
  %228 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %229 = load i32, i32* %228, align 4
  %230 = icmp sgt i32 %229, 0
  br i1 %230, label %231, label %243

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %233

233:                                              ; preds = %233, %231
  %234 = phi i32 [ 0, %231 ], [ %240, %233 ]
  %235 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %232, align 8
  %236 = bitcast %"class.SkSL::OutputStream"* %235 to void (%"class.SkSL::OutputStream"*, i8*)***
  %237 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %236, align 8
  %238 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %237, i64 2
  %239 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %238, align 8
  tail call void %239(%"class.SkSL::OutputStream"* %235, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %240 = add nuw nsw i32 %234, 1
  %241 = load i32, i32* %228, align 4
  %242 = icmp slt i32 %240, %241
  br i1 %242, label %233, label %243

243:                                              ; preds = %233, %217, %225, %227
  %244 = phi i8* [ %224, %217 ], [ %226, %225 ], [ %226, %227 ], [ %226, %233 ]
  %245 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %246 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %245, align 8
  %247 = bitcast %"class.SkSL::OutputStream"* %246 to void (%"class.SkSL::OutputStream"*, i8*)***
  %248 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %247, align 8
  %249 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %248, i64 2
  %250 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %249, align 8
  tail call void %250(%"class.SkSL::OutputStream"* %246, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.163, i64 0, i64 0)) #17
  store i8 0, i8* %244, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %2, align 8
  br label %251

251:                                              ; preds = %190, %243
  %252 = and i32 %4, 16
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %312, label %254

254:                                              ; preds = %251
  %255 = load i8*, i8** %2, align 8
  %256 = load i8, i8* %255, align 1
  %257 = icmp eq i8 %256, 0
  %258 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %259 = load i8, i8* %258, align 8, !range !2
  %260 = icmp eq i8 %259, 0
  br i1 %257, label %286, label %261

261:                                              ; preds = %254
  br i1 %260, label %278, label %262

262:                                              ; preds = %261
  %263 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %264, 0
  br i1 %265, label %266, label %278

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %268

268:                                              ; preds = %268, %266
  %269 = phi i32 [ 0, %266 ], [ %275, %268 ]
  %270 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %267, align 8
  %271 = bitcast %"class.SkSL::OutputStream"* %270 to void (%"class.SkSL::OutputStream"*, i8*)***
  %272 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %271, align 8
  %273 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %272, i64 2
  %274 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %273, align 8
  tail call void %274(%"class.SkSL::OutputStream"* %270, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %275 = add nuw nsw i32 %269, 1
  %276 = load i32, i32* %263, align 4
  %277 = icmp slt i32 %275, %276
  br i1 %277, label %268, label %278

278:                                              ; preds = %268, %261, %262
  %279 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %280 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %279, align 8
  %281 = bitcast %"class.SkSL::OutputStream"* %280 to void (%"class.SkSL::OutputStream"*, i8*)***
  %282 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %281, align 8
  %283 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %282, i64 2
  %284 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %283, align 8
  tail call void %284(%"class.SkSL::OutputStream"* %280, i8* %255) #17
  store i8 0, i8* %258, align 8
  %285 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br label %304

286:                                              ; preds = %254
  %287 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br i1 %260, label %304, label %288

288:                                              ; preds = %286
  %289 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %290 = load i32, i32* %289, align 4
  %291 = icmp sgt i32 %290, 0
  br i1 %291, label %292, label %304

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %294

294:                                              ; preds = %294, %292
  %295 = phi i32 [ 0, %292 ], [ %301, %294 ]
  %296 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %293, align 8
  %297 = bitcast %"class.SkSL::OutputStream"* %296 to void (%"class.SkSL::OutputStream"*, i8*)***
  %298 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %297, align 8
  %299 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %298, i64 2
  %300 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %299, align 8
  tail call void %300(%"class.SkSL::OutputStream"* %296, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %301 = add nuw nsw i32 %295, 1
  %302 = load i32, i32* %289, align 4
  %303 = icmp slt i32 %301, %302
  br i1 %303, label %294, label %304

304:                                              ; preds = %294, %278, %286, %288
  %305 = phi i8* [ %285, %278 ], [ %287, %286 ], [ %287, %288 ], [ %287, %294 ]
  %306 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %307 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %306, align 8
  %308 = bitcast %"class.SkSL::OutputStream"* %307 to void (%"class.SkSL::OutputStream"*, i8*)***
  %309 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %308, align 8
  %310 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %309, i64 2
  %311 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %310, align 8
  tail call void %311(%"class.SkSL::OutputStream"* %307, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.164, i64 0, i64 0)) #17
  store i8 0, i8* %305, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %2, align 8
  br label %312

312:                                              ; preds = %251, %304
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator14writeModifiersERKNS_9ModifiersE(%"class.SkSL::MetalCodeGenerator"* nocapture, %"struct.SkSL::Modifiers"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %35, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i32 [ 0, %15 ], [ %24, %17 ]
  %19 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %16, align 8
  %20 = bitcast %"class.SkSL::OutputStream"* %19 to void (%"class.SkSL::OutputStream"*, i8*)***
  %21 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %21, i64 2
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %22, align 8
  tail call void %23(%"class.SkSL::OutputStream"* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %24 = add nuw nsw i32 %18, 1
  %25 = load i32, i32* %12, align 4
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %17, label %27

27:                                               ; preds = %17, %7, %11
  %28 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %29 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %30 = bitcast %"class.SkSL::OutputStream"* %29 to void (%"class.SkSL::OutputStream"*, i8*)***
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, i64 2
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %32, align 8
  tail call void %33(%"class.SkSL::OutputStream"* %29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.189, i64 0, i64 0)) #17
  store i8 0, i8* %8, align 8
  %34 = load i32, i32* %3, align 8
  br label %35

35:                                               ; preds = %2, %27
  %36 = phi i32 [ %4, %2 ], [ %34, %27 ]
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %66, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %59, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i32 [ 0, %47 ], [ %56, %49 ]
  %51 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %48, align 8
  %52 = bitcast %"class.SkSL::OutputStream"* %51 to void (%"class.SkSL::OutputStream"*, i8*)***
  %53 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, i64 2
  %55 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %54, align 8
  tail call void %55(%"class.SkSL::OutputStream"* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %56 = add nuw nsw i32 %50, 1
  %57 = load i32, i32* %44, align 4
  %58 = icmp slt i32 %56, %57
  br i1 %58, label %49, label %59

59:                                               ; preds = %49, %39, %43
  %60 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %61 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %60, align 8
  %62 = bitcast %"class.SkSL::OutputStream"* %61 to void (%"class.SkSL::OutputStream"*, i8*)***
  %63 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, i64 2
  %65 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %64, align 8
  tail call void %65(%"class.SkSL::OutputStream"* %61, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.190, i64 0, i64 0)) #17
  store i8 0, i8* %40, align 8
  br label %66

66:                                               ; preds = %35, %59
  ret void
}

declare zeroext i1 @_ZNK4SkSL14StringFragmentneEPKc(%"struct.SkSL::StringFragment"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 1, i32 0
  %4 = tail call %"struct.std::__1::__hash_node_base.114"* @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(%"class.std::__1::__hash_table.110"* %3, %"class.SkSL::String"* dereferenceable(24) %1) #17
  %5 = icmp eq %"struct.std::__1::__hash_node_base.114"* %4, null
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i32 [ 0, %14 ], [ %23, %16 ]
  %18 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %15, align 8
  %19 = bitcast %"class.SkSL::OutputStream"* %18 to void (%"class.SkSL::OutputStream"*, i8*)***
  %20 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %20, i64 2
  %22 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %21, align 8
  tail call void %22(%"class.SkSL::OutputStream"* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %23 = add nuw nsw i32 %17, 1
  %24 = load i32, i32* %11, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %16, label %26

26:                                               ; preds = %16, %6, %10
  %27 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %28 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %27, align 8
  %29 = bitcast %"class.SkSL::OutputStream"* %28 to void (%"class.SkSL::OutputStream"*, i8*)***
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, i64 2
  %32 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, align 8
  tail call void %32(%"class.SkSL::OutputStream"* %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #17
  store i8 0, i8* %7, align 8
  br label %33

33:                                               ; preds = %2, %26
  %34 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.SkSL::String"* %1 to i8*
  %41 = select i1 %37, i8* %39, i8* %40
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %71, label %44

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i32 [ 0, %52 ], [ %61, %54 ]
  %56 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %53, align 8
  %57 = bitcast %"class.SkSL::OutputStream"* %56 to void (%"class.SkSL::OutputStream"*, i8*)***
  %58 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, i64 2
  %60 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %59, align 8
  tail call void %60(%"class.SkSL::OutputStream"* %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %61 = add nuw nsw i32 %55, 1
  %62 = load i32, i32* %49, align 4
  %63 = icmp slt i32 %61, %62
  br i1 %63, label %54, label %64

64:                                               ; preds = %54, %48, %44
  %65 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %66 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %65, align 8
  %67 = bitcast %"class.SkSL::OutputStream"* %66 to void (%"class.SkSL::OutputStream"*, i8*)***
  %68 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %68, i64 2
  %70 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %69, align 8
  tail call void %70(%"class.SkSL::OutputStream"* %66, i8* %41) #17
  store i8 0, i8* %45, align 8
  br label %71

71:                                               ; preds = %33, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator28writeFunctionRequirementArgsERKNS_19FunctionDeclarationERPKc(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96), i8** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsERKNS_19FunctionDeclarationE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %1)
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %66, label %7

7:                                                ; preds = %3
  %8 = load i8*, i8** %2, align 8
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %12 = load i8, i8* %11, align 8, !range !2
  br i1 %10, label %39, label %13

13:                                               ; preds = %7
  %14 = icmp eq i8 %12, 0
  br i1 %14, label %31, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i32 [ 0, %19 ], [ %28, %21 ]
  %23 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %24 = bitcast %"class.SkSL::OutputStream"* %23 to void (%"class.SkSL::OutputStream"*, i8*)***
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %25, i64 2
  %27 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, align 8
  tail call void %27(%"class.SkSL::OutputStream"* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %28 = add nuw nsw i32 %22, 1
  %29 = load i32, i32* %16, align 4
  %30 = icmp slt i32 %28, %29
  br i1 %30, label %21, label %31

31:                                               ; preds = %21, %13, %15
  %32 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %33 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %32, align 8
  %34 = bitcast %"class.SkSL::OutputStream"* %33 to void (%"class.SkSL::OutputStream"*, i8*)***
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, i64 2
  %37 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, align 8
  tail call void %37(%"class.SkSL::OutputStream"* %33, i8* %8) #17
  store i8 0, i8* %11, align 8
  %38 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br label %58

39:                                               ; preds = %7
  %40 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %41 = icmp eq i8 %12, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i32 [ 0, %46 ], [ %55, %48 ]
  %50 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %47, align 8
  %51 = bitcast %"class.SkSL::OutputStream"* %50 to void (%"class.SkSL::OutputStream"*, i8*)***
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %52, i64 2
  %54 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, align 8
  tail call void %54(%"class.SkSL::OutputStream"* %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %55 = add nuw nsw i32 %49, 1
  %56 = load i32, i32* %43, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %48, label %58

58:                                               ; preds = %48, %31, %39, %42
  %59 = phi i8* [ %38, %31 ], [ %40, %39 ], [ %40, %42 ], [ %40, %48 ]
  %60 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %61 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %60, align 8
  %62 = bitcast %"class.SkSL::OutputStream"* %61 to void (%"class.SkSL::OutputStream"*, i8*)***
  %63 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, i64 2
  %65 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %64, align 8
  tail call void %65(%"class.SkSL::OutputStream"* %61, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.155, i64 0, i64 0)) #17
  store i8 0, i8* %59, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %2, align 8
  br label %66

66:                                               ; preds = %3, %58
  %67 = and i32 %4, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %128, label %69

69:                                               ; preds = %66
  %70 = load i8*, i8** %2, align 8
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 0
  %73 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %74 = load i8, i8* %73, align 8, !range !2
  br i1 %72, label %101, label %75

75:                                               ; preds = %69
  %76 = icmp eq i8 %74, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %79 = load i32, i32* %78, align 4
  %80 = icmp sgt i32 %79, 0
  br i1 %80, label %81, label %93

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i32 [ 0, %81 ], [ %90, %83 ]
  %85 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %82, align 8
  %86 = bitcast %"class.SkSL::OutputStream"* %85 to void (%"class.SkSL::OutputStream"*, i8*)***
  %87 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %87, i64 2
  %89 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %88, align 8
  tail call void %89(%"class.SkSL::OutputStream"* %85, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %90 = add nuw nsw i32 %84, 1
  %91 = load i32, i32* %78, align 4
  %92 = icmp slt i32 %90, %91
  br i1 %92, label %83, label %93

93:                                               ; preds = %83, %75, %77
  %94 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %95 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %94, align 8
  %96 = bitcast %"class.SkSL::OutputStream"* %95 to void (%"class.SkSL::OutputStream"*, i8*)***
  %97 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %97, i64 2
  %99 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %98, align 8
  tail call void %99(%"class.SkSL::OutputStream"* %95, i8* %70) #17
  store i8 0, i8* %73, align 8
  %100 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br label %120

101:                                              ; preds = %69
  %102 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %103 = icmp eq i8 %74, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %120

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %110

110:                                              ; preds = %110, %108
  %111 = phi i32 [ 0, %108 ], [ %117, %110 ]
  %112 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %109, align 8
  %113 = bitcast %"class.SkSL::OutputStream"* %112 to void (%"class.SkSL::OutputStream"*, i8*)***
  %114 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %114, i64 2
  %116 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %115, align 8
  tail call void %116(%"class.SkSL::OutputStream"* %112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %117 = add nuw nsw i32 %111, 1
  %118 = load i32, i32* %105, align 4
  %119 = icmp slt i32 %117, %118
  br i1 %119, label %110, label %120

120:                                              ; preds = %110, %93, %101, %104
  %121 = phi i8* [ %100, %93 ], [ %102, %101 ], [ %102, %104 ], [ %102, %110 ]
  %122 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %123 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %122, align 8
  %124 = bitcast %"class.SkSL::OutputStream"* %123 to void (%"class.SkSL::OutputStream"*, i8*)***
  %125 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %125, i64 2
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %126, align 8
  tail call void %127(%"class.SkSL::OutputStream"* %123, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.156, i64 0, i64 0)) #17
  store i8 0, i8* %121, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %2, align 8
  br label %128

128:                                              ; preds = %66, %120
  %129 = and i32 %4, 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %190, label %131

131:                                              ; preds = %128
  %132 = load i8*, i8** %2, align 8
  %133 = load i8, i8* %132, align 1
  %134 = icmp eq i8 %133, 0
  %135 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %136 = load i8, i8* %135, align 8, !range !2
  br i1 %134, label %163, label %137

137:                                              ; preds = %131
  %138 = icmp eq i8 %136, 0
  br i1 %138, label %155, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %141 = load i32, i32* %140, align 4
  %142 = icmp sgt i32 %141, 0
  br i1 %142, label %143, label %155

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %145

145:                                              ; preds = %145, %143
  %146 = phi i32 [ 0, %143 ], [ %152, %145 ]
  %147 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %144, align 8
  %148 = bitcast %"class.SkSL::OutputStream"* %147 to void (%"class.SkSL::OutputStream"*, i8*)***
  %149 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %149, i64 2
  %151 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %150, align 8
  tail call void %151(%"class.SkSL::OutputStream"* %147, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %152 = add nuw nsw i32 %146, 1
  %153 = load i32, i32* %140, align 4
  %154 = icmp slt i32 %152, %153
  br i1 %154, label %145, label %155

155:                                              ; preds = %145, %137, %139
  %156 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %157 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %156, align 8
  %158 = bitcast %"class.SkSL::OutputStream"* %157 to void (%"class.SkSL::OutputStream"*, i8*)***
  %159 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %159, i64 2
  %161 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %160, align 8
  tail call void %161(%"class.SkSL::OutputStream"* %157, i8* %132) #17
  store i8 0, i8* %135, align 8
  %162 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br label %182

163:                                              ; preds = %131
  %164 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %165 = icmp eq i8 %136, 0
  br i1 %165, label %182, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %168 = load i32, i32* %167, align 4
  %169 = icmp sgt i32 %168, 0
  br i1 %169, label %170, label %182

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %172

172:                                              ; preds = %172, %170
  %173 = phi i32 [ 0, %170 ], [ %179, %172 ]
  %174 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %171, align 8
  %175 = bitcast %"class.SkSL::OutputStream"* %174 to void (%"class.SkSL::OutputStream"*, i8*)***
  %176 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %176, i64 2
  %178 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %177, align 8
  tail call void %178(%"class.SkSL::OutputStream"* %174, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %179 = add nuw nsw i32 %173, 1
  %180 = load i32, i32* %167, align 4
  %181 = icmp slt i32 %179, %180
  br i1 %181, label %172, label %182

182:                                              ; preds = %172, %155, %163, %166
  %183 = phi i8* [ %162, %155 ], [ %164, %163 ], [ %164, %166 ], [ %164, %172 ]
  %184 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %185 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %184, align 8
  %186 = bitcast %"class.SkSL::OutputStream"* %185 to void (%"class.SkSL::OutputStream"*, i8*)***
  %187 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %186, align 8
  %188 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %187, i64 2
  %189 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %188, align 8
  tail call void %189(%"class.SkSL::OutputStream"* %185, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.157, i64 0, i64 0)) #17
  store i8 0, i8* %183, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %2, align 8
  br label %190

190:                                              ; preds = %128, %182
  %191 = and i32 %4, 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %251, label %193

193:                                              ; preds = %190
  %194 = load i8*, i8** %2, align 8
  %195 = load i8, i8* %194, align 1
  %196 = icmp eq i8 %195, 0
  %197 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %198 = load i8, i8* %197, align 8, !range !2
  %199 = icmp eq i8 %198, 0
  br i1 %196, label %225, label %200

200:                                              ; preds = %193
  br i1 %199, label %217, label %201

201:                                              ; preds = %200
  %202 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %203 = load i32, i32* %202, align 4
  %204 = icmp sgt i32 %203, 0
  br i1 %204, label %205, label %217

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %207

207:                                              ; preds = %207, %205
  %208 = phi i32 [ 0, %205 ], [ %214, %207 ]
  %209 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %206, align 8
  %210 = bitcast %"class.SkSL::OutputStream"* %209 to void (%"class.SkSL::OutputStream"*, i8*)***
  %211 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %211, i64 2
  %213 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %212, align 8
  tail call void %213(%"class.SkSL::OutputStream"* %209, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %214 = add nuw nsw i32 %208, 1
  %215 = load i32, i32* %202, align 4
  %216 = icmp slt i32 %214, %215
  br i1 %216, label %207, label %217

217:                                              ; preds = %207, %200, %201
  %218 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %219 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %218, align 8
  %220 = bitcast %"class.SkSL::OutputStream"* %219 to void (%"class.SkSL::OutputStream"*, i8*)***
  %221 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %221, i64 2
  %223 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %222, align 8
  tail call void %223(%"class.SkSL::OutputStream"* %219, i8* %194) #17
  store i8 0, i8* %197, align 8
  %224 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br label %243

225:                                              ; preds = %193
  %226 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br i1 %199, label %243, label %227

227:                                              ; preds = %225
  %228 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %229 = load i32, i32* %228, align 4
  %230 = icmp sgt i32 %229, 0
  br i1 %230, label %231, label %243

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %233

233:                                              ; preds = %233, %231
  %234 = phi i32 [ 0, %231 ], [ %240, %233 ]
  %235 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %232, align 8
  %236 = bitcast %"class.SkSL::OutputStream"* %235 to void (%"class.SkSL::OutputStream"*, i8*)***
  %237 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %236, align 8
  %238 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %237, i64 2
  %239 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %238, align 8
  tail call void %239(%"class.SkSL::OutputStream"* %235, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %240 = add nuw nsw i32 %234, 1
  %241 = load i32, i32* %228, align 4
  %242 = icmp slt i32 %240, %241
  br i1 %242, label %233, label %243

243:                                              ; preds = %233, %217, %225, %227
  %244 = phi i8* [ %224, %217 ], [ %226, %225 ], [ %226, %227 ], [ %226, %233 ]
  %245 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %246 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %245, align 8
  %247 = bitcast %"class.SkSL::OutputStream"* %246 to void (%"class.SkSL::OutputStream"*, i8*)***
  %248 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %247, align 8
  %249 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %248, i64 2
  %250 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %249, align 8
  tail call void %250(%"class.SkSL::OutputStream"* %246, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.158, i64 0, i64 0)) #17
  store i8 0, i8* %244, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %2, align 8
  br label %251

251:                                              ; preds = %190, %243
  %252 = and i32 %4, 16
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %312, label %254

254:                                              ; preds = %251
  %255 = load i8*, i8** %2, align 8
  %256 = load i8, i8* %255, align 1
  %257 = icmp eq i8 %256, 0
  %258 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %259 = load i8, i8* %258, align 8, !range !2
  %260 = icmp eq i8 %259, 0
  br i1 %257, label %286, label %261

261:                                              ; preds = %254
  br i1 %260, label %278, label %262

262:                                              ; preds = %261
  %263 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %264, 0
  br i1 %265, label %266, label %278

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %268

268:                                              ; preds = %268, %266
  %269 = phi i32 [ 0, %266 ], [ %275, %268 ]
  %270 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %267, align 8
  %271 = bitcast %"class.SkSL::OutputStream"* %270 to void (%"class.SkSL::OutputStream"*, i8*)***
  %272 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %271, align 8
  %273 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %272, i64 2
  %274 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %273, align 8
  tail call void %274(%"class.SkSL::OutputStream"* %270, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %275 = add nuw nsw i32 %269, 1
  %276 = load i32, i32* %263, align 4
  %277 = icmp slt i32 %275, %276
  br i1 %277, label %268, label %278

278:                                              ; preds = %268, %261, %262
  %279 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %280 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %279, align 8
  %281 = bitcast %"class.SkSL::OutputStream"* %280 to void (%"class.SkSL::OutputStream"*, i8*)***
  %282 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %281, align 8
  %283 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %282, i64 2
  %284 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %283, align 8
  tail call void %284(%"class.SkSL::OutputStream"* %280, i8* %255) #17
  store i8 0, i8* %258, align 8
  %285 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br label %304

286:                                              ; preds = %254
  %287 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br i1 %260, label %304, label %288

288:                                              ; preds = %286
  %289 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %290 = load i32, i32* %289, align 4
  %291 = icmp sgt i32 %290, 0
  br i1 %291, label %292, label %304

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %294

294:                                              ; preds = %294, %292
  %295 = phi i32 [ 0, %292 ], [ %301, %294 ]
  %296 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %293, align 8
  %297 = bitcast %"class.SkSL::OutputStream"* %296 to void (%"class.SkSL::OutputStream"*, i8*)***
  %298 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %297, align 8
  %299 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %298, i64 2
  %300 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %299, align 8
  tail call void %300(%"class.SkSL::OutputStream"* %296, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %301 = add nuw nsw i32 %295, 1
  %302 = load i32, i32* %289, align 4
  %303 = icmp slt i32 %301, %302
  br i1 %303, label %294, label %304

304:                                              ; preds = %294, %278, %286, %288
  %305 = phi i8* [ %285, %278 ], [ %287, %286 ], [ %287, %288 ], [ %287, %294 ]
  %306 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %307 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %306, align 8
  %308 = bitcast %"class.SkSL::OutputStream"* %307 to void (%"class.SkSL::OutputStream"*, i8*)***
  %309 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %308, align 8
  %310 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %309, i64 2
  %311 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %310, align 8
  tail call void %311(%"class.SkSL::OutputStream"* %307, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.159, i64 0, i64 0)) #17
  store i8 0, i8* %305, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8** %2, align 8
  br label %312

312:                                              ; preds = %251, %304
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator19getBitcastIntrinsicERKNS_4TypeE(%"class.SkSL::String"* noalias sret, %"class.SkSL::MetalCodeGenerator"* nocapture readnone, %"class.SkSL::Type"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 18
  %9 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %8, align 8, !noalias !9
  %10 = icmp eq %"class.SkSL::Type"* %9, null
  %11 = select i1 %10, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %9
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %11, i64 0, i32 0, i32 1, i32 0
  %13 = load i8*, i8** %12, align 8, !noalias !9
  %14 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %11, i64 0, i32 0, i32 1, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !9
  %16 = icmp ugt i64 %15, -17
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  %18 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %18) #19
  unreachable

19:                                               ; preds = %3
  %20 = icmp ult i64 %15, 23
  br i1 %20, label %29, label %21

21:                                               ; preds = %19
  %22 = add nuw i64 %15, 16
  %23 = and i64 %22, -16
  %24 = tail call i8* @_Znwm(i64 %23) #18
  %25 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %24, i8** %25, align 8, !alias.scope !9
  %26 = or i64 %23, -9223372036854775808
  %27 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %26, i64* %27, align 8, !alias.scope !9
  %28 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %28, align 8, !alias.scope !9
  br label %34

29:                                               ; preds = %19
  %30 = trunc i64 %15 to i8
  %31 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1, !alias.scope !9
  %33 = icmp eq i64 %15, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %29, %21
  %35 = phi i8* [ %24, %21 ], [ %7, %29 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 1 %13, i64 %15, i1 false) #17
  br label %36

36:                                               ; preds = %29, %34
  %37 = phi i8* [ %7, %29 ], [ %35, %34 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 %15
  store i8 0, i8* %38, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %5) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #17
  %39 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #18
  br label %46

46:                                               ; preds = %36, %43
  %47 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #18
  br label %54

54:                                               ; preds = %46, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL18MetalCodeGenerator18writeIntrinsicCallERKNS_12FunctionCallENS_13IntrinsicKindE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::FunctionCall"* nocapture readonly dereferenceable(64), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.SkSL::String", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.SkSL::String", align 8
  %30 = alloca %"class.SkSL::String", align 8
  %31 = alloca %"class.SkSL::String", align 8
  %32 = alloca %"class.SkSL::String", align 8
  %33 = alloca %"class.SkSL::String", align 8
  %34 = alloca %"class.SkSL::String", align 8
  %35 = alloca %"class.SkSL::String", align 8
  %36 = alloca %"class.SkSL::String", align 8
  %37 = alloca %"class.SkSL::String", align 8
  %38 = alloca %"class.SkSL::String", align 8
  %39 = alloca %"class.SkSL::String", align 8
  %40 = alloca %"class.SkSL::String", align 8
  %41 = alloca %"class.SkSL::String", align 8
  %42 = alloca %"class.SkSL::String", align 8
  %43 = alloca %"class.SkSL::String", align 8
  %44 = alloca %"class.SkSL::String", align 8
  %45 = alloca %"class.SkSL::String", align 8
  %46 = alloca %"class.SkSL::String", align 8
  %47 = alloca %"class.SkSL::String", align 8
  %48 = alloca %"class.SkSL::String", align 8
  %49 = alloca %"class.SkSL::String", align 8
  %50 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2
  switch i32 %2, label %2738 [
    i32 73, label %51
    i32 56, label %280
    i32 19, label %538
    i32 20, label %630
    i32 26, label %722
    i32 44, label %839
    i32 57, label %913
    i32 29, label %987
    i32 30, label %987
    i32 38, label %987
    i32 86, label %987
    i32 15, label %1087
    i32 68, label %1141
    i32 17, label %1195
    i32 18, label %1222
    i32 40, label %1284
    i32 39, label %1329
    i32 8, label %1356
    i32 69, label %1393
    i32 70, label %1664
    i32 71, label %1781
    i32 9, label %1808
    i32 27, label %1862
    i32 28, label %2042
    i32 50, label %2517
    i32 23, label %2541
    i32 37, label %2541
    i32 36, label %2541
    i32 46, label %2541
    i32 45, label %2541
    i32 58, label %2541
  ]

51:                                               ; preds = %3
  %52 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %53 = bitcast i8* %52 to %"class.std::__1::unique_ptr.258"**
  %54 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %55, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %56, i32 17)
  %57 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %76, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %76

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i32 [ 0, %64 ], [ %73, %66 ]
  %68 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %65, align 8
  %69 = bitcast %"class.SkSL::OutputStream"* %68 to void (%"class.SkSL::OutputStream"*, i8*)***
  %70 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %70, i64 2
  %72 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %71, align 8
  tail call void %72(%"class.SkSL::OutputStream"* %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %73 = add nuw nsw i32 %67, 1
  %74 = load i32, i32* %61, align 4
  %75 = icmp slt i32 %73, %74
  br i1 %75, label %66, label %76

76:                                               ; preds = %66, %51, %60
  %77 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %78 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %79 = bitcast %"class.SkSL::OutputStream"* %78 to void (%"class.SkSL::OutputStream"*, i8*)***
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %80, i64 2
  %82 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %81, align 8
  tail call void %82(%"class.SkSL::OutputStream"* %78, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0)) #17
  store i8 0, i8* %57, align 8
  %83 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %53, align 8
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %84, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %85, i32 17)
  %86 = load i8, i8* %57, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %102, label %88

88:                                               ; preds = %76
  %89 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 4
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %102

92:                                               ; preds = %88, %92
  %93 = phi i32 [ %99, %92 ], [ 0, %88 ]
  %94 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %95 = bitcast %"class.SkSL::OutputStream"* %94 to void (%"class.SkSL::OutputStream"*, i8*)***
  %96 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %96, i64 2
  %98 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %97, align 8
  tail call void %98(%"class.SkSL::OutputStream"* %94, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %99 = add nuw nsw i32 %93, 1
  %100 = load i32, i32* %89, align 4
  %101 = icmp slt i32 %99, %100
  br i1 %101, label %92, label %102

102:                                              ; preds = %92, %88, %76
  %103 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %104 = bitcast %"class.SkSL::OutputStream"* %103 to void (%"class.SkSL::OutputStream"*, i8*)***
  %105 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %105, i64 2
  %107 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %106, align 8
  tail call void %107(%"class.SkSL::OutputStream"* %103, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0)) #17
  store i8 0, i8* %57, align 8
  %108 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %109 = bitcast %"class.SkSL::OutputStream"* %108 to void (%"class.SkSL::OutputStream"*, i8*)***
  %110 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %110, i64 2
  %112 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %111, align 8
  tail call void %112(%"class.SkSL::OutputStream"* %108, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #17
  store i8 0, i8* %57, align 8
  %113 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %53, align 8
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %113, i64 1, i32 0, i32 0, i32 0
  %115 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %114, align 8
  %116 = bitcast %"class.SkSL::Expression"* %115 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %117 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %116, align 8
  %118 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %117, i64 3
  %119 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %118, align 8
  %120 = tail call dereferenceable(184) %"class.SkSL::Type"* %119(%"class.SkSL::Expression"* %115) #17
  %121 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 8
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 3
  br i1 %123, label %124, label %254

124:                                              ; preds = %102
  %125 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #17
  %126 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 -86, i64 24, i1 false)
  call void @_ZN4SkSL18MetalCodeGenerator15getTempVariableERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %120)
  %128 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #17
  %129 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %5) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0)) #17
  %130 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  %134 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = select i1 %133, i8* %135, i8* %128
  %137 = load i8, i8* %136, align 1
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %163, label %139

139:                                              ; preds = %124
  %140 = load i8, i8* %57, align 8, !range !2
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %156, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %144 = load i32, i32* %143, align 4
  %145 = icmp sgt i32 %144, 0
  br i1 %145, label %146, label %156

146:                                              ; preds = %142, %146
  %147 = phi i32 [ %153, %146 ], [ 0, %142 ]
  %148 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %149 = bitcast %"class.SkSL::OutputStream"* %148 to void (%"class.SkSL::OutputStream"*, i8*)***
  %150 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %150, i64 2
  %152 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %151, align 8
  call void %152(%"class.SkSL::OutputStream"* %148, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %153 = add nuw nsw i32 %147, 1
  %154 = load i32, i32* %143, align 4
  %155 = icmp slt i32 %153, %154
  br i1 %155, label %146, label %156

156:                                              ; preds = %146, %142, %139
  %157 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %158 = bitcast %"class.SkSL::OutputStream"* %157 to void (%"class.SkSL::OutputStream"*, i8*)***
  %159 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %159, i64 2
  %161 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %160, align 8
  call void %161(%"class.SkSL::OutputStream"* %157, i8* %136) #17
  store i8 0, i8* %57, align 8
  %162 = load i8, i8* %131, align 1
  br label %163

163:                                              ; preds = %124, %156
  %164 = phi i8 [ %132, %124 ], [ %162, %156 ]
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %163
  %167 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %167) #18
  br label %168

168:                                              ; preds = %163, %166
  %169 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  call void @_ZdlPv(i8* %175) #18
  br label %176

176:                                              ; preds = %168, %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #17
  %177 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %53, align 8
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %177, i64 1, i32 0, i32 0, i32 0
  %179 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %178, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %179, i32 17)
  %180 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #17
  %181 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #17
  %182 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #17
  %183 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %5) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::String"* nonnull %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0)) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::String"* nonnull %10, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i64 0, i64 0)) #17
  %184 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  %188 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = select i1 %187, i8* %189, i8* %180
  %191 = load i8, i8* %190, align 1
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %217, label %193

193:                                              ; preds = %176
  %194 = load i8, i8* %57, align 8, !range !2
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %210, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %198 = load i32, i32* %197, align 4
  %199 = icmp sgt i32 %198, 0
  br i1 %199, label %200, label %210

200:                                              ; preds = %196, %200
  %201 = phi i32 [ %207, %200 ], [ 0, %196 ]
  %202 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %203 = bitcast %"class.SkSL::OutputStream"* %202 to void (%"class.SkSL::OutputStream"*, i8*)***
  %204 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %203, align 8
  %205 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %204, i64 2
  %206 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %205, align 8
  call void %206(%"class.SkSL::OutputStream"* %202, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %207 = add nuw nsw i32 %201, 1
  %208 = load i32, i32* %197, align 4
  %209 = icmp slt i32 %207, %208
  br i1 %209, label %200, label %210

210:                                              ; preds = %200, %196, %193
  %211 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %212 = bitcast %"class.SkSL::OutputStream"* %211 to void (%"class.SkSL::OutputStream"*, i8*)***
  %213 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %212, align 8
  %214 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %213, i64 2
  %215 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %214, align 8
  call void %215(%"class.SkSL::OutputStream"* %211, i8* %190) #17
  store i8 0, i8* %57, align 8
  %216 = load i8, i8* %185, align 1
  br label %217

217:                                              ; preds = %176, %210
  %218 = phi i8 [ %186, %176 ], [ %216, %210 ]
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %222

220:                                              ; preds = %217
  %221 = load i8*, i8** %188, align 8
  call void @_ZdlPv(i8* %221) #18
  br label %222

222:                                              ; preds = %217, %220
  %223 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load i8*, i8** %228, align 8
  call void @_ZdlPv(i8* %229) #18
  br label %230

230:                                              ; preds = %222, %227
  %231 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %231, i64 0, i32 1, i32 0
  %233 = load i8, i8* %232, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  call void @_ZdlPv(i8* %237) #18
  br label %238

238:                                              ; preds = %230, %235
  %239 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %246

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  call void @_ZdlPv(i8* %245) #18
  br label %246

246:                                              ; preds = %238, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #17
  %247 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %247, i64 0, i32 1, i32 0
  %249 = load i8, i8* %248, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  %252 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %252) #18
  br label %253

253:                                              ; preds = %246, %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #17
  br label %2738

254:                                              ; preds = %102
  %255 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %53, align 8
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %255, i64 1, i32 0, i32 0, i32 0
  %257 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %256, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %257, i32 17)
  %258 = load i8, i8* %57, align 8, !range !2
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %274, label %260

260:                                              ; preds = %254
  %261 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %262 = load i32, i32* %261, align 4
  %263 = icmp sgt i32 %262, 0
  br i1 %263, label %264, label %274

264:                                              ; preds = %260, %264
  %265 = phi i32 [ %271, %264 ], [ 0, %260 ]
  %266 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %267 = bitcast %"class.SkSL::OutputStream"* %266 to void (%"class.SkSL::OutputStream"*, i8*)***
  %268 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %267, align 8
  %269 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %268, i64 2
  %270 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %269, align 8
  tail call void %270(%"class.SkSL::OutputStream"* %266, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %271 = add nuw nsw i32 %265, 1
  %272 = load i32, i32* %261, align 4
  %273 = icmp slt i32 %271, %272
  br i1 %273, label %264, label %274

274:                                              ; preds = %264, %254, %260
  %275 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %276 = bitcast %"class.SkSL::OutputStream"* %275 to void (%"class.SkSL::OutputStream"*, i8*)***
  %277 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %276, align 8
  %278 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %277, i64 2
  %279 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %278, align 8
  tail call void %279(%"class.SkSL::OutputStream"* %275, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %57, align 8
  br label %2738

280:                                              ; preds = %3
  %281 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %281) #17
  %282 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %284 = bitcast i8* %283 to %"class.std::__1::unique_ptr.258"**
  %285 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %285, i8 -86, i64 24, i1 false)
  %286 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %284, align 8
  %287 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %286, i64 0, i32 0, i32 0, i32 0
  %288 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %287, align 8
  %289 = bitcast %"class.SkSL::Expression"* %288 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %290 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %289, align 8
  %291 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %290, i64 3
  %292 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %291, align 8
  %293 = tail call dereferenceable(184) %"class.SkSL::Type"* %292(%"class.SkSL::Expression"* %288) #17
  call void @_ZN4SkSL18MetalCodeGenerator15getTempVariableERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %293)
  %294 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %294) #17
  %295 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %296, i8 -86, i64 24, i1 false)
  %297 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %284, align 8
  %298 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %297, i64 1, i32 0, i32 0, i32 0
  %299 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %298, align 8
  %300 = bitcast %"class.SkSL::Expression"* %299 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %301 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %300, align 8
  %302 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %301, i64 3
  %303 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %302, align 8
  %304 = call dereferenceable(184) %"class.SkSL::Type"* %303(%"class.SkSL::Expression"* %299) #17
  call void @_ZN4SkSL18MetalCodeGenerator15getTempVariableERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %13, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %304)
  %305 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %305) #17
  %306 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %306) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %12) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %14, %"class.SkSL::String"* nonnull %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0)) #17
  %307 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %308 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %307, i64 0, i32 1, i32 0
  %309 = load i8, i8* %308, align 1
  %310 = icmp slt i8 %309, 0
  %311 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i8*, i8** %311, align 8
  %313 = select i1 %310, i8* %312, i8* %305
  %314 = load i8, i8* %313, align 1
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %344, label %316

316:                                              ; preds = %280
  %317 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %318 = load i8, i8* %317, align 8, !range !2
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %336, label %320

320:                                              ; preds = %316
  %321 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %322 = load i32, i32* %321, align 4
  %323 = icmp sgt i32 %322, 0
  br i1 %323, label %324, label %336

324:                                              ; preds = %320
  %325 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %326

326:                                              ; preds = %326, %324
  %327 = phi i32 [ 0, %324 ], [ %333, %326 ]
  %328 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %325, align 8
  %329 = bitcast %"class.SkSL::OutputStream"* %328 to void (%"class.SkSL::OutputStream"*, i8*)***
  %330 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %329, align 8
  %331 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %330, i64 2
  %332 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %331, align 8
  call void %332(%"class.SkSL::OutputStream"* %328, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %333 = add nuw nsw i32 %327, 1
  %334 = load i32, i32* %321, align 4
  %335 = icmp slt i32 %333, %334
  br i1 %335, label %326, label %336

336:                                              ; preds = %326, %320, %316
  %337 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %338 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %337, align 8
  %339 = bitcast %"class.SkSL::OutputStream"* %338 to void (%"class.SkSL::OutputStream"*, i8*)***
  %340 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %339, align 8
  %341 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %340, i64 2
  %342 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %341, align 8
  call void %342(%"class.SkSL::OutputStream"* %338, i8* %313) #17
  store i8 0, i8* %317, align 8
  %343 = load i8, i8* %308, align 1
  br label %344

344:                                              ; preds = %280, %336
  %345 = phi i8 [ %309, %280 ], [ %343, %336 ]
  %346 = icmp slt i8 %345, 0
  br i1 %346, label %347, label %349

347:                                              ; preds = %344
  %348 = load i8*, i8** %311, align 8
  call void @_ZdlPv(i8* %348) #18
  br label %349

349:                                              ; preds = %344, %347
  %350 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %351 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %350, i64 0, i32 1, i32 0
  %352 = load i8, i8* %351, align 1
  %353 = icmp slt i8 %352, 0
  br i1 %353, label %354, label %357

354:                                              ; preds = %349
  %355 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i8*, i8** %355, align 8
  call void @_ZdlPv(i8* %356) #18
  br label %357

357:                                              ; preds = %349, %354
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %306) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %305) #17
  %358 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %284, align 8
  %359 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %358, i64 0, i32 0, i32 0, i32 0
  %360 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %359, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %360, i32 17)
  %361 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %361) #17
  %362 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %362) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %13) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0)) #17
  %363 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %364 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %363, i64 0, i32 1, i32 0
  %365 = load i8, i8* %364, align 1
  %366 = icmp slt i8 %365, 0
  %367 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = load i8*, i8** %367, align 8
  %369 = select i1 %366, i8* %368, i8* %361
  %370 = load i8, i8* %369, align 1
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %400, label %372

372:                                              ; preds = %357
  %373 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %374 = load i8, i8* %373, align 8, !range !2
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %392, label %376

376:                                              ; preds = %372
  %377 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %378 = load i32, i32* %377, align 4
  %379 = icmp sgt i32 %378, 0
  br i1 %379, label %380, label %392

380:                                              ; preds = %376
  %381 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i32 [ 0, %380 ], [ %389, %382 ]
  %384 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %381, align 8
  %385 = bitcast %"class.SkSL::OutputStream"* %384 to void (%"class.SkSL::OutputStream"*, i8*)***
  %386 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %385, align 8
  %387 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %386, i64 2
  %388 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %387, align 8
  call void %388(%"class.SkSL::OutputStream"* %384, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %389 = add nuw nsw i32 %383, 1
  %390 = load i32, i32* %377, align 4
  %391 = icmp slt i32 %389, %390
  br i1 %391, label %382, label %392

392:                                              ; preds = %382, %376, %372
  %393 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %394 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %393, align 8
  %395 = bitcast %"class.SkSL::OutputStream"* %394 to void (%"class.SkSL::OutputStream"*, i8*)***
  %396 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %395, align 8
  %397 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %396, i64 2
  %398 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %397, align 8
  call void %398(%"class.SkSL::OutputStream"* %394, i8* %369) #17
  store i8 0, i8* %373, align 8
  %399 = load i8, i8* %364, align 1
  br label %400

400:                                              ; preds = %357, %392
  %401 = phi i8 [ %365, %357 ], [ %399, %392 ]
  %402 = icmp slt i8 %401, 0
  br i1 %402, label %403, label %405

403:                                              ; preds = %400
  %404 = load i8*, i8** %367, align 8
  call void @_ZdlPv(i8* %404) #18
  br label %405

405:                                              ; preds = %400, %403
  %406 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %407 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %406, i64 0, i32 1, i32 0
  %408 = load i8, i8* %407, align 1
  %409 = icmp slt i8 %408, 0
  br i1 %409, label %410, label %413

410:                                              ; preds = %405
  %411 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = load i8*, i8** %411, align 8
  call void @_ZdlPv(i8* %412) #18
  br label %413

413:                                              ; preds = %405, %410
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %362) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %361) #17
  %414 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %284, align 8
  %415 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %414, i64 1, i32 0, i32 0, i32 0
  %416 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %415, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %416, i32 17)
  %417 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %417) #17
  %418 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %418) #17
  %419 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %419) #17
  %420 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %420) #17
  %421 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %421) #17
  %422 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %422) #17
  %423 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %423) #17
  %424 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %424) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %12) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %24, %"class.SkSL::String"* nonnull %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0)) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %23, %"class.SkSL::String"* nonnull %24, %"class.SkSL::String"* nonnull dereferenceable(24) %13) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %22, %"class.SkSL::String"* nonnull %23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i64 0, i64 0)) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %21, %"class.SkSL::String"* nonnull %22, %"class.SkSL::String"* nonnull dereferenceable(24) %12) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::String"* nonnull %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0)) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* nonnull %20, %"class.SkSL::String"* nonnull dereferenceable(24) %13) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %18, %"class.SkSL::String"* nonnull %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0)) #17
  %425 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %426 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %425, i64 0, i32 1, i32 0
  %427 = load i8, i8* %426, align 1
  %428 = icmp slt i8 %427, 0
  %429 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %430 = load i8*, i8** %429, align 8
  %431 = select i1 %428, i8* %430, i8* %417
  %432 = load i8, i8* %431, align 1
  %433 = icmp eq i8 %432, 0
  br i1 %433, label %462, label %434

434:                                              ; preds = %413
  %435 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %436 = load i8, i8* %435, align 8, !range !2
  %437 = icmp eq i8 %436, 0
  br i1 %437, label %454, label %438

438:                                              ; preds = %434
  %439 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %440 = load i32, i32* %439, align 4
  %441 = icmp sgt i32 %440, 0
  br i1 %441, label %442, label %454

442:                                              ; preds = %438
  %443 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %444

444:                                              ; preds = %444, %442
  %445 = phi i32 [ 0, %442 ], [ %451, %444 ]
  %446 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %443, align 8
  %447 = bitcast %"class.SkSL::OutputStream"* %446 to void (%"class.SkSL::OutputStream"*, i8*)***
  %448 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %447, align 8
  %449 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %448, i64 2
  %450 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %449, align 8
  call void %450(%"class.SkSL::OutputStream"* %446, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %451 = add nuw nsw i32 %445, 1
  %452 = load i32, i32* %439, align 4
  %453 = icmp slt i32 %451, %452
  br i1 %453, label %444, label %454

454:                                              ; preds = %444, %438, %434
  %455 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %456 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %455, align 8
  %457 = bitcast %"class.SkSL::OutputStream"* %456 to void (%"class.SkSL::OutputStream"*, i8*)***
  %458 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %457, align 8
  %459 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %458, i64 2
  %460 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %459, align 8
  call void %460(%"class.SkSL::OutputStream"* %456, i8* %431) #17
  store i8 0, i8* %435, align 8
  %461 = load i8, i8* %426, align 1
  br label %462

462:                                              ; preds = %413, %454
  %463 = phi i8 [ %427, %413 ], [ %461, %454 ]
  %464 = icmp slt i8 %463, 0
  br i1 %464, label %465, label %467

465:                                              ; preds = %462
  %466 = load i8*, i8** %429, align 8
  call void @_ZdlPv(i8* %466) #18
  br label %467

467:                                              ; preds = %462, %465
  %468 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %469 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %468, i64 0, i32 1, i32 0
  %470 = load i8, i8* %469, align 1
  %471 = icmp slt i8 %470, 0
  br i1 %471, label %472, label %475

472:                                              ; preds = %467
  %473 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %474 = load i8*, i8** %473, align 8
  call void @_ZdlPv(i8* %474) #18
  br label %475

475:                                              ; preds = %467, %472
  %476 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %477 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %476, i64 0, i32 1, i32 0
  %478 = load i8, i8* %477, align 1
  %479 = icmp slt i8 %478, 0
  br i1 %479, label %480, label %483

480:                                              ; preds = %475
  %481 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = load i8*, i8** %481, align 8
  call void @_ZdlPv(i8* %482) #18
  br label %483

483:                                              ; preds = %475, %480
  %484 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %485 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %484, i64 0, i32 1, i32 0
  %486 = load i8, i8* %485, align 1
  %487 = icmp slt i8 %486, 0
  br i1 %487, label %488, label %491

488:                                              ; preds = %483
  %489 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %490 = load i8*, i8** %489, align 8
  call void @_ZdlPv(i8* %490) #18
  br label %491

491:                                              ; preds = %483, %488
  %492 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %493 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %492, i64 0, i32 1, i32 0
  %494 = load i8, i8* %493, align 1
  %495 = icmp slt i8 %494, 0
  br i1 %495, label %496, label %499

496:                                              ; preds = %491
  %497 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %498 = load i8*, i8** %497, align 8
  call void @_ZdlPv(i8* %498) #18
  br label %499

499:                                              ; preds = %491, %496
  %500 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %501 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %500, i64 0, i32 1, i32 0
  %502 = load i8, i8* %501, align 1
  %503 = icmp slt i8 %502, 0
  br i1 %503, label %504, label %507

504:                                              ; preds = %499
  %505 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %506 = load i8*, i8** %505, align 8
  call void @_ZdlPv(i8* %506) #18
  br label %507

507:                                              ; preds = %499, %504
  %508 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %509 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %508, i64 0, i32 1, i32 0
  %510 = load i8, i8* %509, align 1
  %511 = icmp slt i8 %510, 0
  br i1 %511, label %512, label %515

512:                                              ; preds = %507
  %513 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %514 = load i8*, i8** %513, align 8
  call void @_ZdlPv(i8* %514) #18
  br label %515

515:                                              ; preds = %507, %512
  %516 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %517 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %516, i64 0, i32 1, i32 0
  %518 = load i8, i8* %517, align 1
  %519 = icmp slt i8 %518, 0
  br i1 %519, label %520, label %523

520:                                              ; preds = %515
  %521 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = load i8*, i8** %521, align 8
  call void @_ZdlPv(i8* %522) #18
  br label %523

523:                                              ; preds = %515, %520
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %424) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %423) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %422) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %421) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %420) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %419) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %418) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %417) #17
  %524 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %525 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %524, i64 0, i32 1, i32 0
  %526 = load i8, i8* %525, align 1
  %527 = icmp slt i8 %526, 0
  br i1 %527, label %528, label %530

528:                                              ; preds = %523
  %529 = load i8*, i8** %295, align 8
  call void @_ZdlPv(i8* %529) #18
  br label %530

530:                                              ; preds = %523, %528
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %294) #17
  %531 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %532 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %531, i64 0, i32 1, i32 0
  %533 = load i8, i8* %532, align 1
  %534 = icmp slt i8 %533, 0
  br i1 %534, label %535, label %537

535:                                              ; preds = %530
  %536 = load i8*, i8** %282, align 8
  call void @_ZdlPv(i8* %536) #18
  br label %537

537:                                              ; preds = %530, %535
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %281) #17
  br label %2738

538:                                              ; preds = %3
  %539 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %540 = bitcast i8* %539 to %"class.std::__1::unique_ptr.258"**
  %541 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %540, align 8
  %542 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %541, i64 0, i32 0, i32 0, i32 0
  %543 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %542, align 8
  %544 = bitcast %"class.SkSL::Expression"* %543 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %545 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %544, align 8
  %546 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %545, i64 3
  %547 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %546, align 8
  %548 = tail call dereferenceable(184) %"class.SkSL::Type"* %547(%"class.SkSL::Expression"* %543) #17
  %549 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %548, i64 0, i32 8
  %550 = load i32, i32* %549, align 8
  %551 = icmp eq i32 %550, 1
  br i1 %551, label %552, label %629

552:                                              ; preds = %538
  %553 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %554 = load i8, i8* %553, align 8, !range !2
  %555 = icmp eq i8 %554, 0
  br i1 %555, label %572, label %556

556:                                              ; preds = %552
  %557 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %558 = load i32, i32* %557, align 4
  %559 = icmp sgt i32 %558, 0
  br i1 %559, label %560, label %572

560:                                              ; preds = %556
  %561 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %562

562:                                              ; preds = %562, %560
  %563 = phi i32 [ 0, %560 ], [ %569, %562 ]
  %564 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %561, align 8
  %565 = bitcast %"class.SkSL::OutputStream"* %564 to void (%"class.SkSL::OutputStream"*, i8*)***
  %566 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %565, align 8
  %567 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %566, i64 2
  %568 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %567, align 8
  tail call void %568(%"class.SkSL::OutputStream"* %564, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %569 = add nuw nsw i32 %563, 1
  %570 = load i32, i32* %557, align 4
  %571 = icmp slt i32 %569, %570
  br i1 %571, label %562, label %572

572:                                              ; preds = %562, %552, %556
  %573 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %574 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %573, align 8
  %575 = bitcast %"class.SkSL::OutputStream"* %574 to void (%"class.SkSL::OutputStream"*, i8*)***
  %576 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %575, align 8
  %577 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %576, i64 2
  %578 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %577, align 8
  tail call void %578(%"class.SkSL::OutputStream"* %574, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0)) #17
  store i8 0, i8* %553, align 8
  %579 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %540, align 8
  %580 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %579, i64 0, i32 0, i32 0, i32 0
  %581 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %580, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %581, i32 5)
  %582 = load i8, i8* %553, align 8, !range !2
  %583 = icmp eq i8 %582, 0
  br i1 %583, label %598, label %584

584:                                              ; preds = %572
  %585 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %586 = load i32, i32* %585, align 4
  %587 = icmp sgt i32 %586, 0
  br i1 %587, label %588, label %598

588:                                              ; preds = %584, %588
  %589 = phi i32 [ %595, %588 ], [ 0, %584 ]
  %590 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %573, align 8
  %591 = bitcast %"class.SkSL::OutputStream"* %590 to void (%"class.SkSL::OutputStream"*, i8*)***
  %592 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %591, align 8
  %593 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %592, i64 2
  %594 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %593, align 8
  tail call void %594(%"class.SkSL::OutputStream"* %590, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %595 = add nuw nsw i32 %589, 1
  %596 = load i32, i32* %585, align 4
  %597 = icmp slt i32 %595, %596
  br i1 %597, label %588, label %598

598:                                              ; preds = %588, %572, %584
  %599 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %573, align 8
  %600 = bitcast %"class.SkSL::OutputStream"* %599 to void (%"class.SkSL::OutputStream"*, i8*)***
  %601 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %600, align 8
  %602 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %601, i64 2
  %603 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %602, align 8
  tail call void %603(%"class.SkSL::OutputStream"* %599, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0)) #17
  store i8 0, i8* %553, align 8
  %604 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %540, align 8
  %605 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %604, i64 1, i32 0, i32 0, i32 0
  %606 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %605, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %606, i32 5)
  %607 = load i8, i8* %553, align 8, !range !2
  %608 = icmp eq i8 %607, 0
  br i1 %608, label %623, label %609

609:                                              ; preds = %598
  %610 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %611 = load i32, i32* %610, align 4
  %612 = icmp sgt i32 %611, 0
  br i1 %612, label %613, label %623

613:                                              ; preds = %609, %613
  %614 = phi i32 [ %620, %613 ], [ 0, %609 ]
  %615 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %573, align 8
  %616 = bitcast %"class.SkSL::OutputStream"* %615 to void (%"class.SkSL::OutputStream"*, i8*)***
  %617 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %616, align 8
  %618 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %617, i64 2
  %619 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %618, align 8
  tail call void %619(%"class.SkSL::OutputStream"* %615, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %620 = add nuw nsw i32 %614, 1
  %621 = load i32, i32* %610, align 4
  %622 = icmp slt i32 %620, %621
  br i1 %622, label %613, label %623

623:                                              ; preds = %613, %598, %609
  %624 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %573, align 8
  %625 = bitcast %"class.SkSL::OutputStream"* %624 to void (%"class.SkSL::OutputStream"*, i8*)***
  %626 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %625, align 8
  %627 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %626, i64 2
  %628 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %627, align 8
  tail call void %628(%"class.SkSL::OutputStream"* %624, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %553, align 8
  br label %2738

629:                                              ; preds = %538
  tail call void @_ZN4SkSL18MetalCodeGenerator20writeSimpleIntrinsicERKNS_12FunctionCallE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %1)
  br label %2738

630:                                              ; preds = %3
  %631 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %632 = bitcast i8* %631 to %"class.std::__1::unique_ptr.258"**
  %633 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %632, align 8
  %634 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %633, i64 0, i32 0, i32 0, i32 0
  %635 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %634, align 8
  %636 = bitcast %"class.SkSL::Expression"* %635 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %637 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %636, align 8
  %638 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %637, i64 3
  %639 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %638, align 8
  %640 = tail call dereferenceable(184) %"class.SkSL::Type"* %639(%"class.SkSL::Expression"* %635) #17
  %641 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %640, i64 0, i32 8
  %642 = load i32, i32* %641, align 8
  %643 = icmp eq i32 %642, 1
  br i1 %643, label %644, label %721

644:                                              ; preds = %630
  %645 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %646 = load i8, i8* %645, align 8, !range !2
  %647 = icmp eq i8 %646, 0
  br i1 %647, label %664, label %648

648:                                              ; preds = %644
  %649 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %650 = load i32, i32* %649, align 4
  %651 = icmp sgt i32 %650, 0
  br i1 %651, label %652, label %664

652:                                              ; preds = %648
  %653 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %654

654:                                              ; preds = %654, %652
  %655 = phi i32 [ 0, %652 ], [ %661, %654 ]
  %656 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %653, align 8
  %657 = bitcast %"class.SkSL::OutputStream"* %656 to void (%"class.SkSL::OutputStream"*, i8*)***
  %658 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %657, align 8
  %659 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %658, i64 2
  %660 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %659, align 8
  tail call void %660(%"class.SkSL::OutputStream"* %656, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %661 = add nuw nsw i32 %655, 1
  %662 = load i32, i32* %649, align 4
  %663 = icmp slt i32 %661, %662
  br i1 %663, label %654, label %664

664:                                              ; preds = %654, %644, %648
  %665 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %666 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %665, align 8
  %667 = bitcast %"class.SkSL::OutputStream"* %666 to void (%"class.SkSL::OutputStream"*, i8*)***
  %668 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %667, align 8
  %669 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %668, i64 2
  %670 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %669, align 8
  tail call void %670(%"class.SkSL::OutputStream"* %666, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %645, align 8
  %671 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %632, align 8
  %672 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %671, i64 0, i32 0, i32 0, i32 0
  %673 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %672, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %673, i32 4)
  %674 = load i8, i8* %645, align 8, !range !2
  %675 = icmp eq i8 %674, 0
  br i1 %675, label %690, label %676

676:                                              ; preds = %664
  %677 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %678 = load i32, i32* %677, align 4
  %679 = icmp sgt i32 %678, 0
  br i1 %679, label %680, label %690

680:                                              ; preds = %676, %680
  %681 = phi i32 [ %687, %680 ], [ 0, %676 ]
  %682 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %665, align 8
  %683 = bitcast %"class.SkSL::OutputStream"* %682 to void (%"class.SkSL::OutputStream"*, i8*)***
  %684 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %683, align 8
  %685 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %684, i64 2
  %686 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %685, align 8
  tail call void %686(%"class.SkSL::OutputStream"* %682, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %687 = add nuw nsw i32 %681, 1
  %688 = load i32, i32* %677, align 4
  %689 = icmp slt i32 %687, %688
  br i1 %689, label %680, label %690

690:                                              ; preds = %680, %664, %676
  %691 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %665, align 8
  %692 = bitcast %"class.SkSL::OutputStream"* %691 to void (%"class.SkSL::OutputStream"*, i8*)***
  %693 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %692, align 8
  %694 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %693, i64 2
  %695 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %694, align 8
  tail call void %695(%"class.SkSL::OutputStream"* %691, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0)) #17
  store i8 0, i8* %645, align 8
  %696 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %632, align 8
  %697 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %696, i64 1, i32 0, i32 0, i32 0
  %698 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %697, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %698, i32 4)
  %699 = load i8, i8* %645, align 8, !range !2
  %700 = icmp eq i8 %699, 0
  br i1 %700, label %715, label %701

701:                                              ; preds = %690
  %702 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %703 = load i32, i32* %702, align 4
  %704 = icmp sgt i32 %703, 0
  br i1 %704, label %705, label %715

705:                                              ; preds = %701, %705
  %706 = phi i32 [ %712, %705 ], [ 0, %701 ]
  %707 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %665, align 8
  %708 = bitcast %"class.SkSL::OutputStream"* %707 to void (%"class.SkSL::OutputStream"*, i8*)***
  %709 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %708, align 8
  %710 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %709, i64 2
  %711 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %710, align 8
  tail call void %711(%"class.SkSL::OutputStream"* %707, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %712 = add nuw nsw i32 %706, 1
  %713 = load i32, i32* %702, align 4
  %714 = icmp slt i32 %712, %713
  br i1 %714, label %705, label %715

715:                                              ; preds = %705, %690, %701
  %716 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %665, align 8
  %717 = bitcast %"class.SkSL::OutputStream"* %716 to void (%"class.SkSL::OutputStream"*, i8*)***
  %718 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %717, align 8
  %719 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %718, i64 2
  %720 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %719, align 8
  tail call void %720(%"class.SkSL::OutputStream"* %716, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %645, align 8
  br label %2738

721:                                              ; preds = %630
  tail call void @_ZN4SkSL18MetalCodeGenerator20writeSimpleIntrinsicERKNS_12FunctionCallE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %1)
  br label %2738

722:                                              ; preds = %3
  %723 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %724 = bitcast i8* %723 to %"class.std::__1::unique_ptr.258"**
  %725 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %724, align 8
  %726 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %725, i64 0, i32 0, i32 0, i32 0
  %727 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %726, align 8
  %728 = bitcast %"class.SkSL::Expression"* %727 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %729 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %728, align 8
  %730 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %729, i64 3
  %731 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %730, align 8
  %732 = tail call dereferenceable(184) %"class.SkSL::Type"* %731(%"class.SkSL::Expression"* %727) #17
  %733 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %732, i64 0, i32 8
  %734 = load i32, i32* %733, align 8
  %735 = icmp eq i32 %734, 1
  br i1 %735, label %736, label %838

736:                                              ; preds = %722
  %737 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %738 = load i8, i8* %737, align 8, !range !2
  %739 = icmp eq i8 %738, 0
  br i1 %739, label %756, label %740

740:                                              ; preds = %736
  %741 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %742 = load i32, i32* %741, align 4
  %743 = icmp sgt i32 %742, 0
  br i1 %743, label %744, label %756

744:                                              ; preds = %740
  %745 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %746

746:                                              ; preds = %746, %744
  %747 = phi i32 [ 0, %744 ], [ %753, %746 ]
  %748 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %745, align 8
  %749 = bitcast %"class.SkSL::OutputStream"* %748 to void (%"class.SkSL::OutputStream"*, i8*)***
  %750 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %749, align 8
  %751 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %750, i64 2
  %752 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %751, align 8
  tail call void %752(%"class.SkSL::OutputStream"* %748, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %753 = add nuw nsw i32 %747, 1
  %754 = load i32, i32* %741, align 4
  %755 = icmp slt i32 %753, %754
  br i1 %755, label %746, label %756

756:                                              ; preds = %746, %736, %740
  %757 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %758 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %757, align 8
  %759 = bitcast %"class.SkSL::OutputStream"* %758 to void (%"class.SkSL::OutputStream"*, i8*)***
  %760 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %759, align 8
  %761 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %760, i64 2
  %762 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %761, align 8
  tail call void %762(%"class.SkSL::OutputStream"* %758, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0)) #17
  store i8 0, i8* %737, align 8
  %763 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %724, align 8
  %764 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %763, i64 2, i32 0, i32 0, i32 0
  %765 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %764, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %765, i32 17)
  %766 = load i8, i8* %737, align 8, !range !2
  %767 = icmp eq i8 %766, 0
  br i1 %767, label %782, label %768

768:                                              ; preds = %756
  %769 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %770 = load i32, i32* %769, align 4
  %771 = icmp sgt i32 %770, 0
  br i1 %771, label %772, label %782

772:                                              ; preds = %768, %772
  %773 = phi i32 [ %779, %772 ], [ 0, %768 ]
  %774 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %757, align 8
  %775 = bitcast %"class.SkSL::OutputStream"* %774 to void (%"class.SkSL::OutputStream"*, i8*)***
  %776 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %775, align 8
  %777 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %776, i64 2
  %778 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %777, align 8
  tail call void %778(%"class.SkSL::OutputStream"* %774, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %779 = add nuw nsw i32 %773, 1
  %780 = load i32, i32* %769, align 4
  %781 = icmp slt i32 %779, %780
  br i1 %781, label %772, label %782

782:                                              ; preds = %772, %756, %768
  %783 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %757, align 8
  %784 = bitcast %"class.SkSL::OutputStream"* %783 to void (%"class.SkSL::OutputStream"*, i8*)***
  %785 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %784, align 8
  %786 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %785, i64 2
  %787 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %786, align 8
  tail call void %787(%"class.SkSL::OutputStream"* %783, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0)) #17
  store i8 0, i8* %737, align 8
  %788 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %724, align 8
  %789 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %788, i64 1, i32 0, i32 0, i32 0
  %790 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %789, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %790, i32 17)
  %791 = load i8, i8* %737, align 8, !range !2
  %792 = icmp eq i8 %791, 0
  br i1 %792, label %807, label %793

793:                                              ; preds = %782
  %794 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %795 = load i32, i32* %794, align 4
  %796 = icmp sgt i32 %795, 0
  br i1 %796, label %797, label %807

797:                                              ; preds = %793, %797
  %798 = phi i32 [ %804, %797 ], [ 0, %793 ]
  %799 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %757, align 8
  %800 = bitcast %"class.SkSL::OutputStream"* %799 to void (%"class.SkSL::OutputStream"*, i8*)***
  %801 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %800, align 8
  %802 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %801, i64 2
  %803 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %802, align 8
  tail call void %803(%"class.SkSL::OutputStream"* %799, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %804 = add nuw nsw i32 %798, 1
  %805 = load i32, i32* %794, align 4
  %806 = icmp slt i32 %804, %805
  br i1 %806, label %797, label %807

807:                                              ; preds = %797, %782, %793
  %808 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %757, align 8
  %809 = bitcast %"class.SkSL::OutputStream"* %808 to void (%"class.SkSL::OutputStream"*, i8*)***
  %810 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %809, align 8
  %811 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %810, i64 2
  %812 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %811, align 8
  tail call void %812(%"class.SkSL::OutputStream"* %808, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.50, i64 0, i64 0)) #17
  store i8 0, i8* %737, align 8
  %813 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %724, align 8
  %814 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %813, i64 0, i32 0, i32 0, i32 0
  %815 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %814, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %815, i32 17)
  %816 = load i8, i8* %737, align 8, !range !2
  %817 = icmp eq i8 %816, 0
  br i1 %817, label %832, label %818

818:                                              ; preds = %807
  %819 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %820 = load i32, i32* %819, align 4
  %821 = icmp sgt i32 %820, 0
  br i1 %821, label %822, label %832

822:                                              ; preds = %818, %822
  %823 = phi i32 [ %829, %822 ], [ 0, %818 ]
  %824 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %757, align 8
  %825 = bitcast %"class.SkSL::OutputStream"* %824 to void (%"class.SkSL::OutputStream"*, i8*)***
  %826 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %825, align 8
  %827 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %826, i64 2
  %828 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %827, align 8
  tail call void %828(%"class.SkSL::OutputStream"* %824, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %829 = add nuw nsw i32 %823, 1
  %830 = load i32, i32* %819, align 4
  %831 = icmp slt i32 %829, %830
  br i1 %831, label %822, label %832

832:                                              ; preds = %822, %807, %818
  %833 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %757, align 8
  %834 = bitcast %"class.SkSL::OutputStream"* %833 to void (%"class.SkSL::OutputStream"*, i8*)***
  %835 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %834, align 8
  %836 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %835, i64 2
  %837 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %836, align 8
  tail call void %837(%"class.SkSL::OutputStream"* %833, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0)) #17
  store i8 0, i8* %737, align 8
  br label %2738

838:                                              ; preds = %722
  tail call void @_ZN4SkSL18MetalCodeGenerator20writeSimpleIntrinsicERKNS_12FunctionCallE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %1)
  br label %2738

839:                                              ; preds = %3
  %840 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %841 = bitcast i8* %840 to %"class.std::__1::unique_ptr.258"**
  %842 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %841, align 8
  %843 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %842, i64 0, i32 0, i32 0, i32 0
  %844 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %843, align 8
  %845 = bitcast %"class.SkSL::Expression"* %844 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %846 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %845, align 8
  %847 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %846, i64 3
  %848 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %847, align 8
  %849 = tail call dereferenceable(184) %"class.SkSL::Type"* %848(%"class.SkSL::Expression"* %844) #17
  %850 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %849, i64 0, i32 8
  %851 = load i32, i32* %850, align 8
  %852 = icmp eq i32 %851, 1
  %853 = select i1 %852, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0)
  %854 = load i8, i8* %853, align 1
  %855 = icmp eq i8 %854, 0
  br i1 %855, label %883, label %856

856:                                              ; preds = %839
  %857 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %858 = load i8, i8* %857, align 8, !range !2
  %859 = icmp eq i8 %858, 0
  br i1 %859, label %876, label %860

860:                                              ; preds = %856
  %861 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %862 = load i32, i32* %861, align 4
  %863 = icmp sgt i32 %862, 0
  br i1 %863, label %864, label %876

864:                                              ; preds = %860
  %865 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %866

866:                                              ; preds = %866, %864
  %867 = phi i32 [ 0, %864 ], [ %873, %866 ]
  %868 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %865, align 8
  %869 = bitcast %"class.SkSL::OutputStream"* %868 to void (%"class.SkSL::OutputStream"*, i8*)***
  %870 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %869, align 8
  %871 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %870, i64 2
  %872 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %871, align 8
  tail call void %872(%"class.SkSL::OutputStream"* %868, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %873 = add nuw nsw i32 %867, 1
  %874 = load i32, i32* %861, align 4
  %875 = icmp slt i32 %873, %874
  br i1 %875, label %866, label %876

876:                                              ; preds = %866, %860, %856
  %877 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %878 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %877, align 8
  %879 = bitcast %"class.SkSL::OutputStream"* %878 to void (%"class.SkSL::OutputStream"*, i8*)***
  %880 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %879, align 8
  %881 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %880, i64 2
  %882 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %881, align 8
  tail call void %882(%"class.SkSL::OutputStream"* %878, i8* %853) #17
  store i8 0, i8* %857, align 8
  br label %883

883:                                              ; preds = %839, %876
  %884 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %841, align 8
  %885 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %884, i64 0, i32 0, i32 0, i32 0
  %886 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %885, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %886, i32 17)
  %887 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %888 = load i8, i8* %887, align 8, !range !2
  %889 = icmp eq i8 %888, 0
  br i1 %889, label %906, label %890

890:                                              ; preds = %883
  %891 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %892 = load i32, i32* %891, align 4
  %893 = icmp sgt i32 %892, 0
  br i1 %893, label %894, label %906

894:                                              ; preds = %890
  %895 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %896

896:                                              ; preds = %896, %894
  %897 = phi i32 [ 0, %894 ], [ %903, %896 ]
  %898 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %895, align 8
  %899 = bitcast %"class.SkSL::OutputStream"* %898 to void (%"class.SkSL::OutputStream"*, i8*)***
  %900 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %899, align 8
  %901 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %900, i64 2
  %902 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %901, align 8
  tail call void %902(%"class.SkSL::OutputStream"* %898, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %903 = add nuw nsw i32 %897, 1
  %904 = load i32, i32* %891, align 4
  %905 = icmp slt i32 %903, %904
  br i1 %905, label %896, label %906

906:                                              ; preds = %896, %883, %890
  %907 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %908 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %907, align 8
  %909 = bitcast %"class.SkSL::OutputStream"* %908 to void (%"class.SkSL::OutputStream"*, i8*)***
  %910 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %909, align 8
  %911 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %910, i64 2
  %912 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %911, align 8
  tail call void %912(%"class.SkSL::OutputStream"* %908, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %887, align 8
  br label %2738

913:                                              ; preds = %3
  %914 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %915 = bitcast i8* %914 to %"class.std::__1::unique_ptr.258"**
  %916 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %915, align 8
  %917 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %916, i64 0, i32 0, i32 0, i32 0
  %918 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %917, align 8
  %919 = bitcast %"class.SkSL::Expression"* %918 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %920 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %919, align 8
  %921 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %920, i64 3
  %922 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %921, align 8
  %923 = tail call dereferenceable(184) %"class.SkSL::Type"* %922(%"class.SkSL::Expression"* %918) #17
  %924 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %923, i64 0, i32 8
  %925 = load i32, i32* %924, align 8
  %926 = icmp eq i32 %925, 1
  %927 = select i1 %926, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i64 0, i64 0)
  %928 = load i8, i8* %927, align 1
  %929 = icmp eq i8 %928, 0
  br i1 %929, label %957, label %930

930:                                              ; preds = %913
  %931 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %932 = load i8, i8* %931, align 8, !range !2
  %933 = icmp eq i8 %932, 0
  br i1 %933, label %950, label %934

934:                                              ; preds = %930
  %935 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %936 = load i32, i32* %935, align 4
  %937 = icmp sgt i32 %936, 0
  br i1 %937, label %938, label %950

938:                                              ; preds = %934
  %939 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %940

940:                                              ; preds = %940, %938
  %941 = phi i32 [ 0, %938 ], [ %947, %940 ]
  %942 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %939, align 8
  %943 = bitcast %"class.SkSL::OutputStream"* %942 to void (%"class.SkSL::OutputStream"*, i8*)***
  %944 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %943, align 8
  %945 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %944, i64 2
  %946 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %945, align 8
  tail call void %946(%"class.SkSL::OutputStream"* %942, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %947 = add nuw nsw i32 %941, 1
  %948 = load i32, i32* %935, align 4
  %949 = icmp slt i32 %947, %948
  br i1 %949, label %940, label %950

950:                                              ; preds = %940, %934, %930
  %951 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %952 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %951, align 8
  %953 = bitcast %"class.SkSL::OutputStream"* %952 to void (%"class.SkSL::OutputStream"*, i8*)***
  %954 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %953, align 8
  %955 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %954, i64 2
  %956 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %955, align 8
  tail call void %956(%"class.SkSL::OutputStream"* %952, i8* %927) #17
  store i8 0, i8* %931, align 8
  br label %957

957:                                              ; preds = %913, %950
  %958 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %915, align 8
  %959 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %958, i64 0, i32 0, i32 0, i32 0
  %960 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %959, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %960, i32 17)
  %961 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %962 = load i8, i8* %961, align 8, !range !2
  %963 = icmp eq i8 %962, 0
  br i1 %963, label %980, label %964

964:                                              ; preds = %957
  %965 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %966 = load i32, i32* %965, align 4
  %967 = icmp sgt i32 %966, 0
  br i1 %967, label %968, label %980

968:                                              ; preds = %964
  %969 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %970

970:                                              ; preds = %970, %968
  %971 = phi i32 [ 0, %968 ], [ %977, %970 ]
  %972 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %969, align 8
  %973 = bitcast %"class.SkSL::OutputStream"* %972 to void (%"class.SkSL::OutputStream"*, i8*)***
  %974 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %973, align 8
  %975 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %974, i64 2
  %976 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %975, align 8
  tail call void %976(%"class.SkSL::OutputStream"* %972, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %977 = add nuw nsw i32 %971, 1
  %978 = load i32, i32* %965, align 4
  %979 = icmp slt i32 %977, %978
  br i1 %979, label %970, label %980

980:                                              ; preds = %970, %957, %964
  %981 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %982 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %981, align 8
  %983 = bitcast %"class.SkSL::OutputStream"* %982 to void (%"class.SkSL::OutputStream"*, i8*)***
  %984 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %983, align 8
  %985 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %984, i64 2
  %986 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %985, align 8
  tail call void %986(%"class.SkSL::OutputStream"* %982, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %961, align 8
  br label %2738

987:                                              ; preds = %3, %3, %3, %3
  %988 = bitcast %"class.SkSL::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %988) #17
  %989 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 0, i32 1
  %990 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %989, align 8
  call void @_ZN4SkSL18MetalCodeGenerator19getBitcastIntrinsicERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %26, %"class.SkSL::MetalCodeGenerator"* undef, %"class.SkSL::Type"* dereferenceable(184) %990)
  %991 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %992 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %991, i64 0, i32 1, i32 0
  %993 = load i8, i8* %992, align 1
  %994 = icmp slt i8 %993, 0
  %995 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %996 = load i8*, i8** %995, align 8
  %997 = select i1 %994, i8* %996, i8* %988
  %998 = load i8, i8* %997, align 1
  %999 = icmp eq i8 %998, 0
  br i1 %999, label %1028, label %1000

1000:                                             ; preds = %987
  %1001 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1002 = load i8, i8* %1001, align 8, !range !2
  %1003 = icmp eq i8 %1002, 0
  br i1 %1003, label %1020, label %1004

1004:                                             ; preds = %1000
  %1005 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1006 = load i32, i32* %1005, align 4
  %1007 = icmp sgt i32 %1006, 0
  br i1 %1007, label %1008, label %1020

1008:                                             ; preds = %1004
  %1009 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1010

1010:                                             ; preds = %1010, %1008
  %1011 = phi i32 [ 0, %1008 ], [ %1017, %1010 ]
  %1012 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1009, align 8
  %1013 = bitcast %"class.SkSL::OutputStream"* %1012 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1014 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1013, align 8
  %1015 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1014, i64 2
  %1016 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1015, align 8
  call void %1016(%"class.SkSL::OutputStream"* %1012, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1017 = add nuw nsw i32 %1011, 1
  %1018 = load i32, i32* %1005, align 4
  %1019 = icmp slt i32 %1017, %1018
  br i1 %1019, label %1010, label %1020

1020:                                             ; preds = %1010, %1004, %1000
  %1021 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1022 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1021, align 8
  %1023 = bitcast %"class.SkSL::OutputStream"* %1022 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1024 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1023, align 8
  %1025 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1024, i64 2
  %1026 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1025, align 8
  call void %1026(%"class.SkSL::OutputStream"* %1022, i8* %997) #17
  store i8 0, i8* %1001, align 8
  %1027 = load i8, i8* %992, align 1
  br label %1028

1028:                                             ; preds = %987, %1020
  %1029 = phi i8 [ %993, %987 ], [ %1027, %1020 ]
  %1030 = icmp slt i8 %1029, 0
  br i1 %1030, label %1031, label %1033

1031:                                             ; preds = %1028
  %1032 = load i8*, i8** %995, align 8
  call void @_ZdlPv(i8* %1032) #18
  br label %1033

1033:                                             ; preds = %1028, %1031
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %988) #17
  %1034 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1035 = load i8, i8* %1034, align 8, !range !2
  %1036 = icmp eq i8 %1035, 0
  br i1 %1036, label %1053, label %1037

1037:                                             ; preds = %1033
  %1038 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1039 = load i32, i32* %1038, align 4
  %1040 = icmp sgt i32 %1039, 0
  br i1 %1040, label %1041, label %1053

1041:                                             ; preds = %1037
  %1042 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1043

1043:                                             ; preds = %1043, %1041
  %1044 = phi i32 [ 0, %1041 ], [ %1050, %1043 ]
  %1045 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1042, align 8
  %1046 = bitcast %"class.SkSL::OutputStream"* %1045 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1047 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1046, align 8
  %1048 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1047, i64 2
  %1049 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1048, align 8
  call void %1049(%"class.SkSL::OutputStream"* %1045, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1050 = add nuw nsw i32 %1044, 1
  %1051 = load i32, i32* %1038, align 4
  %1052 = icmp slt i32 %1050, %1051
  br i1 %1052, label %1043, label %1053

1053:                                             ; preds = %1043, %1033, %1037
  %1054 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1055 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1054, align 8
  %1056 = bitcast %"class.SkSL::OutputStream"* %1055 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1057 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1056, align 8
  %1058 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1057, i64 2
  %1059 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1058, align 8
  call void %1059(%"class.SkSL::OutputStream"* %1055, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %1034, align 8
  %1060 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %1061 = bitcast i8* %1060 to %"class.std::__1::unique_ptr.258"**
  %1062 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1061, align 8
  %1063 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1062, i64 0, i32 0, i32 0, i32 0
  %1064 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1063, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1064, i32 17)
  %1065 = load i8, i8* %1034, align 8, !range !2
  %1066 = icmp eq i8 %1065, 0
  br i1 %1066, label %1081, label %1067

1067:                                             ; preds = %1053
  %1068 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1069 = load i32, i32* %1068, align 4
  %1070 = icmp sgt i32 %1069, 0
  br i1 %1070, label %1071, label %1081

1071:                                             ; preds = %1067, %1071
  %1072 = phi i32 [ %1078, %1071 ], [ 0, %1067 ]
  %1073 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1054, align 8
  %1074 = bitcast %"class.SkSL::OutputStream"* %1073 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1075 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1074, align 8
  %1076 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1075, i64 2
  %1077 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1076, align 8
  call void %1077(%"class.SkSL::OutputStream"* %1073, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1078 = add nuw nsw i32 %1072, 1
  %1079 = load i32, i32* %1068, align 4
  %1080 = icmp slt i32 %1078, %1079
  br i1 %1080, label %1071, label %1081

1081:                                             ; preds = %1071, %1053, %1067
  %1082 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1054, align 8
  %1083 = bitcast %"class.SkSL::OutputStream"* %1082 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1084 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1083, align 8
  %1085 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1084, i64 2
  %1086 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1085, align 8
  call void %1086(%"class.SkSL::OutputStream"* %1082, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %1034, align 8
  br label %2738

1087:                                             ; preds = %3
  %1088 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1089 = load i8, i8* %1088, align 8, !range !2
  %1090 = icmp eq i8 %1089, 0
  br i1 %1090, label %1107, label %1091

1091:                                             ; preds = %1087
  %1092 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1093 = load i32, i32* %1092, align 4
  %1094 = icmp sgt i32 %1093, 0
  br i1 %1094, label %1095, label %1107

1095:                                             ; preds = %1091
  %1096 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1097

1097:                                             ; preds = %1097, %1095
  %1098 = phi i32 [ 0, %1095 ], [ %1104, %1097 ]
  %1099 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1096, align 8
  %1100 = bitcast %"class.SkSL::OutputStream"* %1099 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1101 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1100, align 8
  %1102 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1101, i64 2
  %1103 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1102, align 8
  tail call void %1103(%"class.SkSL::OutputStream"* %1099, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1104 = add nuw nsw i32 %1098, 1
  %1105 = load i32, i32* %1092, align 4
  %1106 = icmp slt i32 %1104, %1105
  br i1 %1106, label %1097, label %1107

1107:                                             ; preds = %1097, %1087, %1091
  %1108 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1109 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1108, align 8
  %1110 = bitcast %"class.SkSL::OutputStream"* %1109 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1111 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1110, align 8
  %1112 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1111, i64 2
  %1113 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1112, align 8
  tail call void %1113(%"class.SkSL::OutputStream"* %1109, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0)) #17
  store i8 0, i8* %1088, align 8
  %1114 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %1115 = bitcast i8* %1114 to %"class.std::__1::unique_ptr.258"**
  %1116 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1115, align 8
  %1117 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1116, i64 0, i32 0, i32 0, i32 0
  %1118 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1117, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1118, i32 17)
  %1119 = load i8, i8* %1088, align 8, !range !2
  %1120 = icmp eq i8 %1119, 0
  br i1 %1120, label %1135, label %1121

1121:                                             ; preds = %1107
  %1122 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1123 = load i32, i32* %1122, align 4
  %1124 = icmp sgt i32 %1123, 0
  br i1 %1124, label %1125, label %1135

1125:                                             ; preds = %1121, %1125
  %1126 = phi i32 [ %1132, %1125 ], [ 0, %1121 ]
  %1127 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1108, align 8
  %1128 = bitcast %"class.SkSL::OutputStream"* %1127 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1129 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1128, align 8
  %1130 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1129, i64 2
  %1131 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1130, align 8
  tail call void %1131(%"class.SkSL::OutputStream"* %1127, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1132 = add nuw nsw i32 %1126, 1
  %1133 = load i32, i32* %1122, align 4
  %1134 = icmp slt i32 %1132, %1133
  br i1 %1134, label %1125, label %1135

1135:                                             ; preds = %1125, %1107, %1121
  %1136 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1108, align 8
  %1137 = bitcast %"class.SkSL::OutputStream"* %1136 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1138 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1137, align 8
  %1139 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1138, i64 2
  %1140 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1139, align 8
  tail call void %1140(%"class.SkSL::OutputStream"* %1136, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i64 0, i64 0)) #17
  store i8 0, i8* %1088, align 8
  br label %2738

1141:                                             ; preds = %3
  %1142 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1143 = load i8, i8* %1142, align 8, !range !2
  %1144 = icmp eq i8 %1143, 0
  br i1 %1144, label %1161, label %1145

1145:                                             ; preds = %1141
  %1146 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1147 = load i32, i32* %1146, align 4
  %1148 = icmp sgt i32 %1147, 0
  br i1 %1148, label %1149, label %1161

1149:                                             ; preds = %1145
  %1150 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1151

1151:                                             ; preds = %1151, %1149
  %1152 = phi i32 [ 0, %1149 ], [ %1158, %1151 ]
  %1153 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1150, align 8
  %1154 = bitcast %"class.SkSL::OutputStream"* %1153 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1155 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1154, align 8
  %1156 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1155, i64 2
  %1157 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1156, align 8
  tail call void %1157(%"class.SkSL::OutputStream"* %1153, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1158 = add nuw nsw i32 %1152, 1
  %1159 = load i32, i32* %1146, align 4
  %1160 = icmp slt i32 %1158, %1159
  br i1 %1160, label %1151, label %1161

1161:                                             ; preds = %1151, %1141, %1145
  %1162 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1163 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1162, align 8
  %1164 = bitcast %"class.SkSL::OutputStream"* %1163 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1165 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1164, align 8
  %1166 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1165, i64 2
  %1167 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1166, align 8
  tail call void %1167(%"class.SkSL::OutputStream"* %1163, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0)) #17
  store i8 0, i8* %1142, align 8
  %1168 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %1169 = bitcast i8* %1168 to %"class.std::__1::unique_ptr.258"**
  %1170 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1169, align 8
  %1171 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1170, i64 0, i32 0, i32 0, i32 0
  %1172 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1171, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1172, i32 17)
  %1173 = load i8, i8* %1142, align 8, !range !2
  %1174 = icmp eq i8 %1173, 0
  br i1 %1174, label %1189, label %1175

1175:                                             ; preds = %1161
  %1176 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1177 = load i32, i32* %1176, align 4
  %1178 = icmp sgt i32 %1177, 0
  br i1 %1178, label %1179, label %1189

1179:                                             ; preds = %1175, %1179
  %1180 = phi i32 [ %1186, %1179 ], [ 0, %1175 ]
  %1181 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1162, align 8
  %1182 = bitcast %"class.SkSL::OutputStream"* %1181 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1183 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1182, align 8
  %1184 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1183, i64 2
  %1185 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1184, align 8
  tail call void %1185(%"class.SkSL::OutputStream"* %1181, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1186 = add nuw nsw i32 %1180, 1
  %1187 = load i32, i32* %1176, align 4
  %1188 = icmp slt i32 %1186, %1187
  br i1 %1188, label %1179, label %1189

1189:                                             ; preds = %1179, %1161, %1175
  %1190 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1162, align 8
  %1191 = bitcast %"class.SkSL::OutputStream"* %1190 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1192 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1191, align 8
  %1193 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1192, i64 2
  %1194 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1193, align 8
  tail call void %1194(%"class.SkSL::OutputStream"* %1190, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.56, i64 0, i64 0)) #17
  store i8 0, i8* %1142, align 8
  br label %2738

1195:                                             ; preds = %3
  %1196 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1197 = load i8, i8* %1196, align 8, !range !2
  %1198 = icmp eq i8 %1197, 0
  br i1 %1198, label %1215, label %1199

1199:                                             ; preds = %1195
  %1200 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1201 = load i32, i32* %1200, align 4
  %1202 = icmp sgt i32 %1201, 0
  br i1 %1202, label %1203, label %1215

1203:                                             ; preds = %1199
  %1204 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1205

1205:                                             ; preds = %1205, %1203
  %1206 = phi i32 [ 0, %1203 ], [ %1212, %1205 ]
  %1207 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1204, align 8
  %1208 = bitcast %"class.SkSL::OutputStream"* %1207 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1209 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1208, align 8
  %1210 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1209, i64 2
  %1211 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1210, align 8
  tail call void %1211(%"class.SkSL::OutputStream"* %1207, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1212 = add nuw nsw i32 %1206, 1
  %1213 = load i32, i32* %1200, align 4
  %1214 = icmp slt i32 %1212, %1213
  br i1 %1214, label %1205, label %1215

1215:                                             ; preds = %1205, %1195, %1199
  %1216 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1217 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1216, align 8
  %1218 = bitcast %"class.SkSL::OutputStream"* %1217 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1219 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1218, align 8
  %1220 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1219, i64 2
  %1221 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1220, align 8
  tail call void %1221(%"class.SkSL::OutputStream"* %1217, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0)) #17
  store i8 0, i8* %1196, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator17writeArgumentListERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EE(%"class.SkSL::MetalCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %50)
  br label %2738

1222:                                             ; preds = %3
  %1223 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %1224 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %1223, align 8
  %1225 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1224, i64 0, i32 1, i32 0, i32 0, i32 0
  %1226 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %1225, align 8
  %1227 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %1226, i64 0, i32 1, i32 0
  %1228 = load i8, i8* %1227, align 8, !range !2
  %1229 = icmp eq i8 %1228, 0
  %1230 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1231 = load i8, i8* %1230, align 8, !range !2
  %1232 = icmp eq i8 %1231, 0
  br i1 %1229, label %1258, label %1233

1233:                                             ; preds = %1222
  br i1 %1232, label %1250, label %1234

1234:                                             ; preds = %1233
  %1235 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1236 = load i32, i32* %1235, align 4
  %1237 = icmp sgt i32 %1236, 0
  br i1 %1237, label %1238, label %1250

1238:                                             ; preds = %1234
  %1239 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1240

1240:                                             ; preds = %1240, %1238
  %1241 = phi i32 [ 0, %1238 ], [ %1247, %1240 ]
  %1242 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1239, align 8
  %1243 = bitcast %"class.SkSL::OutputStream"* %1242 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1244 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1243, align 8
  %1245 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1244, i64 2
  %1246 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1245, align 8
  tail call void %1246(%"class.SkSL::OutputStream"* %1242, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1247 = add nuw nsw i32 %1241, 1
  %1248 = load i32, i32* %1235, align 4
  %1249 = icmp slt i32 %1247, %1248
  br i1 %1249, label %1240, label %1250

1250:                                             ; preds = %1240, %1234, %1233
  %1251 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1252 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1251, align 8
  %1253 = bitcast %"class.SkSL::OutputStream"* %1252 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1254 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1253, align 8
  %1255 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1254, i64 2
  %1256 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1255, align 8
  tail call void %1256(%"class.SkSL::OutputStream"* %1252, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i64 0, i64 0)) #17
  store i8 0, i8* %1230, align 8
  %1257 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br label %1276

1258:                                             ; preds = %1222
  %1259 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  br i1 %1232, label %1276, label %1260

1260:                                             ; preds = %1258
  %1261 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1262 = load i32, i32* %1261, align 4
  %1263 = icmp sgt i32 %1262, 0
  br i1 %1263, label %1264, label %1276

1264:                                             ; preds = %1260
  %1265 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1266

1266:                                             ; preds = %1266, %1264
  %1267 = phi i32 [ 0, %1264 ], [ %1273, %1266 ]
  %1268 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1265, align 8
  %1269 = bitcast %"class.SkSL::OutputStream"* %1268 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1270 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1269, align 8
  %1271 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1270, i64 2
  %1272 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1271, align 8
  tail call void %1272(%"class.SkSL::OutputStream"* %1268, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1273 = add nuw nsw i32 %1267, 1
  %1274 = load i32, i32* %1261, align 4
  %1275 = icmp slt i32 %1273, %1274
  br i1 %1275, label %1266, label %1276

1276:                                             ; preds = %1266, %1250, %1258, %1260
  %1277 = phi i8* [ %1257, %1250 ], [ %1259, %1258 ], [ %1259, %1260 ], [ %1259, %1266 ]
  %1278 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1279 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1278, align 8
  %1280 = bitcast %"class.SkSL::OutputStream"* %1279 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1281 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1280, align 8
  %1282 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1281, i64 2
  %1283 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1282, align 8
  tail call void %1283(%"class.SkSL::OutputStream"* %1279, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0)) #17
  store i8 0, i8* %1277, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator17writeArgumentListERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EE(%"class.SkSL::MetalCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %50)
  br label %2738

1284:                                             ; preds = %3
  %1285 = bitcast %"class.SkSL::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1285) #17
  call void @_ZN4SkSL18MetalCodeGenerator18getInversePolyfillERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EE(%"class.SkSL::String"* nonnull sret %27, %"class.SkSL::MetalCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %50)
  %1286 = bitcast %"class.SkSL::String"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1287 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1286, i64 0, i32 1, i32 0
  %1288 = load i8, i8* %1287, align 1
  %1289 = icmp slt i8 %1288, 0
  %1290 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1291 = load i8*, i8** %1290, align 8
  %1292 = select i1 %1289, i8* %1291, i8* %1285
  %1293 = load i8, i8* %1292, align 1
  %1294 = icmp eq i8 %1293, 0
  br i1 %1294, label %1323, label %1295

1295:                                             ; preds = %1284
  %1296 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1297 = load i8, i8* %1296, align 8, !range !2
  %1298 = icmp eq i8 %1297, 0
  br i1 %1298, label %1315, label %1299

1299:                                             ; preds = %1295
  %1300 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1301 = load i32, i32* %1300, align 4
  %1302 = icmp sgt i32 %1301, 0
  br i1 %1302, label %1303, label %1315

1303:                                             ; preds = %1299
  %1304 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1305

1305:                                             ; preds = %1305, %1303
  %1306 = phi i32 [ 0, %1303 ], [ %1312, %1305 ]
  %1307 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1304, align 8
  %1308 = bitcast %"class.SkSL::OutputStream"* %1307 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1309 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1308, align 8
  %1310 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1309, i64 2
  %1311 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1310, align 8
  call void %1311(%"class.SkSL::OutputStream"* %1307, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1312 = add nuw nsw i32 %1306, 1
  %1313 = load i32, i32* %1300, align 4
  %1314 = icmp slt i32 %1312, %1313
  br i1 %1314, label %1305, label %1315

1315:                                             ; preds = %1305, %1299, %1295
  %1316 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1317 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1316, align 8
  %1318 = bitcast %"class.SkSL::OutputStream"* %1317 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1319 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1318, align 8
  %1320 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1319, i64 2
  %1321 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1320, align 8
  call void %1321(%"class.SkSL::OutputStream"* %1317, i8* %1292) #17
  store i8 0, i8* %1296, align 8
  %1322 = load i8, i8* %1287, align 1
  br label %1323

1323:                                             ; preds = %1284, %1315
  %1324 = phi i8 [ %1288, %1284 ], [ %1322, %1315 ]
  %1325 = icmp slt i8 %1324, 0
  br i1 %1325, label %1326, label %1328

1326:                                             ; preds = %1323
  %1327 = load i8*, i8** %1290, align 8
  call void @_ZdlPv(i8* %1327) #18
  br label %1328

1328:                                             ; preds = %1323, %1326
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1285) #17
  call void @_ZN4SkSL18MetalCodeGenerator17writeArgumentListERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EE(%"class.SkSL::MetalCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %50)
  br label %2738

1329:                                             ; preds = %3
  %1330 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1331 = load i8, i8* %1330, align 8, !range !2
  %1332 = icmp eq i8 %1331, 0
  br i1 %1332, label %1349, label %1333

1333:                                             ; preds = %1329
  %1334 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1335 = load i32, i32* %1334, align 4
  %1336 = icmp sgt i32 %1335, 0
  br i1 %1336, label %1337, label %1349

1337:                                             ; preds = %1333
  %1338 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1339

1339:                                             ; preds = %1339, %1337
  %1340 = phi i32 [ 0, %1337 ], [ %1346, %1339 ]
  %1341 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1338, align 8
  %1342 = bitcast %"class.SkSL::OutputStream"* %1341 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1343 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1342, align 8
  %1344 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1343, i64 2
  %1345 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1344, align 8
  tail call void %1345(%"class.SkSL::OutputStream"* %1341, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1346 = add nuw nsw i32 %1340, 1
  %1347 = load i32, i32* %1334, align 4
  %1348 = icmp slt i32 %1346, %1347
  br i1 %1348, label %1339, label %1349

1349:                                             ; preds = %1339, %1329, %1333
  %1350 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1351 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1350, align 8
  %1352 = bitcast %"class.SkSL::OutputStream"* %1351 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1353 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1352, align 8
  %1354 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1353, i64 2
  %1355 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1354, align 8
  tail call void %1355(%"class.SkSL::OutputStream"* %1351, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0)) #17
  store i8 0, i8* %1330, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator17writeArgumentListERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EE(%"class.SkSL::MetalCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %50)
  br label %2738

1356:                                             ; preds = %3
  %1357 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %1358 = bitcast i8* %1357 to i64*
  %1359 = load i64, i64* %1358, align 8
  %1360 = and i64 %1359, 4294967294
  %1361 = icmp eq i64 %1360, 4
  %1362 = select i1 %1361, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0)
  %1363 = load i8, i8* %1362, align 1
  %1364 = icmp eq i8 %1363, 0
  br i1 %1364, label %1392, label %1365

1365:                                             ; preds = %1356
  %1366 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1367 = load i8, i8* %1366, align 8, !range !2
  %1368 = icmp eq i8 %1367, 0
  br i1 %1368, label %1385, label %1369

1369:                                             ; preds = %1365
  %1370 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1371 = load i32, i32* %1370, align 4
  %1372 = icmp sgt i32 %1371, 0
  br i1 %1372, label %1373, label %1385

1373:                                             ; preds = %1369
  %1374 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1375

1375:                                             ; preds = %1375, %1373
  %1376 = phi i32 [ 0, %1373 ], [ %1382, %1375 ]
  %1377 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1374, align 8
  %1378 = bitcast %"class.SkSL::OutputStream"* %1377 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1379 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1378, align 8
  %1380 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1379, i64 2
  %1381 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1380, align 8
  tail call void %1381(%"class.SkSL::OutputStream"* %1377, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1382 = add nuw nsw i32 %1376, 1
  %1383 = load i32, i32* %1370, align 4
  %1384 = icmp slt i32 %1382, %1383
  br i1 %1384, label %1375, label %1385

1385:                                             ; preds = %1375, %1369, %1365
  %1386 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1387 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1386, align 8
  %1388 = bitcast %"class.SkSL::OutputStream"* %1387 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1389 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1388, align 8
  %1390 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1389, i64 2
  %1391 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1390, align 8
  tail call void %1391(%"class.SkSL::OutputStream"* %1387, i8* %1362) #17
  store i8 0, i8* %1366, align 8
  br label %1392

1392:                                             ; preds = %1356, %1385
  tail call void @_ZN4SkSL18MetalCodeGenerator17writeArgumentListERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EE(%"class.SkSL::MetalCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %50)
  br label %2738

1393:                                             ; preds = %3
  %1394 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %1395 = bitcast i8* %1394 to %"class.std::__1::unique_ptr.258"**
  %1396 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1395, align 8
  %1397 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1396, i64 0, i32 0, i32 0, i32 0
  %1398 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1397, align 8
  %1399 = bitcast %"class.SkSL::Expression"* %1398 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %1400 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %1399, align 8
  %1401 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %1400, i64 3
  %1402 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %1401, align 8
  %1403 = tail call dereferenceable(184) %"class.SkSL::Type"* %1402(%"class.SkSL::Expression"* %1398) #17
  %1404 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1403, i64 0, i32 8
  %1405 = load i32, i32* %1404, align 8
  %1406 = icmp eq i32 %1405, 1
  br i1 %1406, label %1407, label %1663

1407:                                             ; preds = %1393
  %1408 = bitcast %"class.SkSL::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1408) #17
  %1409 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1410 = bitcast %"class.SkSL::String"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1410, i8 -86, i64 24, i1 false)
  %1411 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1395, align 8
  %1412 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1411, i64 0, i32 0, i32 0, i32 0
  %1413 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1412, align 8
  %1414 = bitcast %"class.SkSL::Expression"* %1413 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %1415 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %1414, align 8
  %1416 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %1415, i64 3
  %1417 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %1416, align 8
  %1418 = tail call dereferenceable(184) %"class.SkSL::Type"* %1417(%"class.SkSL::Expression"* %1413) #17
  call void @_ZN4SkSL18MetalCodeGenerator15getTempVariableERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %28, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1418)
  %1419 = bitcast %"class.SkSL::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1419) #17
  %1420 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1421 = bitcast %"class.SkSL::String"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1421, i8 -86, i64 24, i1 false)
  %1422 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1395, align 8
  %1423 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1422, i64 1, i32 0, i32 0, i32 0
  %1424 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1423, align 8
  %1425 = bitcast %"class.SkSL::Expression"* %1424 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %1426 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %1425, align 8
  %1427 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %1426, i64 3
  %1428 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %1427, align 8
  %1429 = call dereferenceable(184) %"class.SkSL::Type"* %1428(%"class.SkSL::Expression"* %1424) #17
  call void @_ZN4SkSL18MetalCodeGenerator15getTempVariableERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %29, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1429)
  %1430 = bitcast %"class.SkSL::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1430) #17
  %1431 = bitcast %"class.SkSL::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1431) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %28) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %30, %"class.SkSL::String"* nonnull %31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0)) #17
  %1432 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1433 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1432, i64 0, i32 1, i32 0
  %1434 = load i8, i8* %1433, align 1
  %1435 = icmp slt i8 %1434, 0
  %1436 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1437 = load i8*, i8** %1436, align 8
  %1438 = select i1 %1435, i8* %1437, i8* %1430
  %1439 = load i8, i8* %1438, align 1
  %1440 = icmp eq i8 %1439, 0
  br i1 %1440, label %1469, label %1441

1441:                                             ; preds = %1407
  %1442 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1443 = load i8, i8* %1442, align 8, !range !2
  %1444 = icmp eq i8 %1443, 0
  br i1 %1444, label %1461, label %1445

1445:                                             ; preds = %1441
  %1446 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1447 = load i32, i32* %1446, align 4
  %1448 = icmp sgt i32 %1447, 0
  br i1 %1448, label %1449, label %1461

1449:                                             ; preds = %1445
  %1450 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1451

1451:                                             ; preds = %1451, %1449
  %1452 = phi i32 [ 0, %1449 ], [ %1458, %1451 ]
  %1453 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1450, align 8
  %1454 = bitcast %"class.SkSL::OutputStream"* %1453 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1455 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1454, align 8
  %1456 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1455, i64 2
  %1457 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1456, align 8
  call void %1457(%"class.SkSL::OutputStream"* %1453, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1458 = add nuw nsw i32 %1452, 1
  %1459 = load i32, i32* %1446, align 4
  %1460 = icmp slt i32 %1458, %1459
  br i1 %1460, label %1451, label %1461

1461:                                             ; preds = %1451, %1445, %1441
  %1462 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1463 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1462, align 8
  %1464 = bitcast %"class.SkSL::OutputStream"* %1463 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1465 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1464, align 8
  %1466 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1465, i64 2
  %1467 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1466, align 8
  call void %1467(%"class.SkSL::OutputStream"* %1463, i8* %1438) #17
  store i8 0, i8* %1442, align 8
  %1468 = load i8, i8* %1433, align 1
  br label %1469

1469:                                             ; preds = %1407, %1461
  %1470 = phi i8 [ %1434, %1407 ], [ %1468, %1461 ]
  %1471 = icmp slt i8 %1470, 0
  br i1 %1471, label %1472, label %1474

1472:                                             ; preds = %1469
  %1473 = load i8*, i8** %1436, align 8
  call void @_ZdlPv(i8* %1473) #18
  br label %1474

1474:                                             ; preds = %1469, %1472
  %1475 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1476 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1475, i64 0, i32 1, i32 0
  %1477 = load i8, i8* %1476, align 1
  %1478 = icmp slt i8 %1477, 0
  br i1 %1478, label %1479, label %1482

1479:                                             ; preds = %1474
  %1480 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1481 = load i8*, i8** %1480, align 8
  call void @_ZdlPv(i8* %1481) #18
  br label %1482

1482:                                             ; preds = %1474, %1479
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1431) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1430) #17
  %1483 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1395, align 8
  %1484 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1483, i64 0, i32 0, i32 0, i32 0
  %1485 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1484, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1485, i32 17)
  %1486 = bitcast %"class.SkSL::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1486) #17
  %1487 = bitcast %"class.SkSL::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1487) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %29) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %32, %"class.SkSL::String"* nonnull %33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0)) #17
  %1488 = bitcast %"class.SkSL::String"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1489 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1488, i64 0, i32 1, i32 0
  %1490 = load i8, i8* %1489, align 1
  %1491 = icmp slt i8 %1490, 0
  %1492 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1493 = load i8*, i8** %1492, align 8
  %1494 = select i1 %1491, i8* %1493, i8* %1486
  %1495 = load i8, i8* %1494, align 1
  %1496 = icmp eq i8 %1495, 0
  br i1 %1496, label %1525, label %1497

1497:                                             ; preds = %1482
  %1498 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1499 = load i8, i8* %1498, align 8, !range !2
  %1500 = icmp eq i8 %1499, 0
  br i1 %1500, label %1517, label %1501

1501:                                             ; preds = %1497
  %1502 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1503 = load i32, i32* %1502, align 4
  %1504 = icmp sgt i32 %1503, 0
  br i1 %1504, label %1505, label %1517

1505:                                             ; preds = %1501
  %1506 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1507

1507:                                             ; preds = %1507, %1505
  %1508 = phi i32 [ 0, %1505 ], [ %1514, %1507 ]
  %1509 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1506, align 8
  %1510 = bitcast %"class.SkSL::OutputStream"* %1509 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1511 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1510, align 8
  %1512 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1511, i64 2
  %1513 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1512, align 8
  call void %1513(%"class.SkSL::OutputStream"* %1509, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1514 = add nuw nsw i32 %1508, 1
  %1515 = load i32, i32* %1502, align 4
  %1516 = icmp slt i32 %1514, %1515
  br i1 %1516, label %1507, label %1517

1517:                                             ; preds = %1507, %1501, %1497
  %1518 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1519 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1518, align 8
  %1520 = bitcast %"class.SkSL::OutputStream"* %1519 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1521 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1520, align 8
  %1522 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1521, i64 2
  %1523 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1522, align 8
  call void %1523(%"class.SkSL::OutputStream"* %1519, i8* %1494) #17
  store i8 0, i8* %1498, align 8
  %1524 = load i8, i8* %1489, align 1
  br label %1525

1525:                                             ; preds = %1482, %1517
  %1526 = phi i8 [ %1490, %1482 ], [ %1524, %1517 ]
  %1527 = icmp slt i8 %1526, 0
  br i1 %1527, label %1528, label %1530

1528:                                             ; preds = %1525
  %1529 = load i8*, i8** %1492, align 8
  call void @_ZdlPv(i8* %1529) #18
  br label %1530

1530:                                             ; preds = %1525, %1528
  %1531 = bitcast %"class.SkSL::String"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1532 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1531, i64 0, i32 1, i32 0
  %1533 = load i8, i8* %1532, align 1
  %1534 = icmp slt i8 %1533, 0
  br i1 %1534, label %1535, label %1538

1535:                                             ; preds = %1530
  %1536 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1537 = load i8*, i8** %1536, align 8
  call void @_ZdlPv(i8* %1537) #18
  br label %1538

1538:                                             ; preds = %1530, %1535
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1487) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1486) #17
  %1539 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1395, align 8
  %1540 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1539, i64 1, i32 0, i32 0, i32 0
  %1541 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1540, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1541, i32 17)
  %1542 = bitcast %"class.SkSL::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1542) #17
  %1543 = bitcast %"class.SkSL::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1543) #17
  %1544 = bitcast %"class.SkSL::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1544) #17
  %1545 = bitcast %"class.SkSL::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1545) #17
  %1546 = bitcast %"class.SkSL::String"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1546) #17
  %1547 = bitcast %"class.SkSL::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1547) #17
  %1548 = bitcast %"class.SkSL::String"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1548) #17
  %1549 = bitcast %"class.SkSL::String"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1549) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %28) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %40, %"class.SkSL::String"* nonnull %41, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i64 0, i64 0)) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %39, %"class.SkSL::String"* nonnull %40, %"class.SkSL::String"* nonnull dereferenceable(24) %29) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %38, %"class.SkSL::String"* nonnull %39, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0)) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %37, %"class.SkSL::String"* nonnull %38, %"class.SkSL::String"* nonnull dereferenceable(24) %28) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %36, %"class.SkSL::String"* nonnull %37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0)) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %35, %"class.SkSL::String"* nonnull %36, %"class.SkSL::String"* nonnull dereferenceable(24) %29) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %34, %"class.SkSL::String"* nonnull %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  %1550 = bitcast %"class.SkSL::String"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1551 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1550, i64 0, i32 1, i32 0
  %1552 = load i8, i8* %1551, align 1
  %1553 = icmp slt i8 %1552, 0
  %1554 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1555 = load i8*, i8** %1554, align 8
  %1556 = select i1 %1553, i8* %1555, i8* %1542
  %1557 = load i8, i8* %1556, align 1
  %1558 = icmp eq i8 %1557, 0
  br i1 %1558, label %1587, label %1559

1559:                                             ; preds = %1538
  %1560 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1561 = load i8, i8* %1560, align 8, !range !2
  %1562 = icmp eq i8 %1561, 0
  br i1 %1562, label %1579, label %1563

1563:                                             ; preds = %1559
  %1564 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1565 = load i32, i32* %1564, align 4
  %1566 = icmp sgt i32 %1565, 0
  br i1 %1566, label %1567, label %1579

1567:                                             ; preds = %1563
  %1568 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1569

1569:                                             ; preds = %1569, %1567
  %1570 = phi i32 [ 0, %1567 ], [ %1576, %1569 ]
  %1571 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1568, align 8
  %1572 = bitcast %"class.SkSL::OutputStream"* %1571 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1573 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1572, align 8
  %1574 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1573, i64 2
  %1575 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1574, align 8
  call void %1575(%"class.SkSL::OutputStream"* %1571, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1576 = add nuw nsw i32 %1570, 1
  %1577 = load i32, i32* %1564, align 4
  %1578 = icmp slt i32 %1576, %1577
  br i1 %1578, label %1569, label %1579

1579:                                             ; preds = %1569, %1563, %1559
  %1580 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1581 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1580, align 8
  %1582 = bitcast %"class.SkSL::OutputStream"* %1581 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1583 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1582, align 8
  %1584 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1583, i64 2
  %1585 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1584, align 8
  call void %1585(%"class.SkSL::OutputStream"* %1581, i8* %1556) #17
  store i8 0, i8* %1560, align 8
  %1586 = load i8, i8* %1551, align 1
  br label %1587

1587:                                             ; preds = %1538, %1579
  %1588 = phi i8 [ %1552, %1538 ], [ %1586, %1579 ]
  %1589 = icmp slt i8 %1588, 0
  br i1 %1589, label %1590, label %1592

1590:                                             ; preds = %1587
  %1591 = load i8*, i8** %1554, align 8
  call void @_ZdlPv(i8* %1591) #18
  br label %1592

1592:                                             ; preds = %1587, %1590
  %1593 = bitcast %"class.SkSL::String"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1594 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1593, i64 0, i32 1, i32 0
  %1595 = load i8, i8* %1594, align 1
  %1596 = icmp slt i8 %1595, 0
  br i1 %1596, label %1597, label %1600

1597:                                             ; preds = %1592
  %1598 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1599 = load i8*, i8** %1598, align 8
  call void @_ZdlPv(i8* %1599) #18
  br label %1600

1600:                                             ; preds = %1592, %1597
  %1601 = bitcast %"class.SkSL::String"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1602 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1601, i64 0, i32 1, i32 0
  %1603 = load i8, i8* %1602, align 1
  %1604 = icmp slt i8 %1603, 0
  br i1 %1604, label %1605, label %1608

1605:                                             ; preds = %1600
  %1606 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1607 = load i8*, i8** %1606, align 8
  call void @_ZdlPv(i8* %1607) #18
  br label %1608

1608:                                             ; preds = %1600, %1605
  %1609 = bitcast %"class.SkSL::String"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1610 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1609, i64 0, i32 1, i32 0
  %1611 = load i8, i8* %1610, align 1
  %1612 = icmp slt i8 %1611, 0
  br i1 %1612, label %1613, label %1616

1613:                                             ; preds = %1608
  %1614 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1615 = load i8*, i8** %1614, align 8
  call void @_ZdlPv(i8* %1615) #18
  br label %1616

1616:                                             ; preds = %1608, %1613
  %1617 = bitcast %"class.SkSL::String"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1618 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1617, i64 0, i32 1, i32 0
  %1619 = load i8, i8* %1618, align 1
  %1620 = icmp slt i8 %1619, 0
  br i1 %1620, label %1621, label %1624

1621:                                             ; preds = %1616
  %1622 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1623 = load i8*, i8** %1622, align 8
  call void @_ZdlPv(i8* %1623) #18
  br label %1624

1624:                                             ; preds = %1616, %1621
  %1625 = bitcast %"class.SkSL::String"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1626 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1625, i64 0, i32 1, i32 0
  %1627 = load i8, i8* %1626, align 1
  %1628 = icmp slt i8 %1627, 0
  br i1 %1628, label %1629, label %1632

1629:                                             ; preds = %1624
  %1630 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1631 = load i8*, i8** %1630, align 8
  call void @_ZdlPv(i8* %1631) #18
  br label %1632

1632:                                             ; preds = %1624, %1629
  %1633 = bitcast %"class.SkSL::String"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1634 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1633, i64 0, i32 1, i32 0
  %1635 = load i8, i8* %1634, align 1
  %1636 = icmp slt i8 %1635, 0
  br i1 %1636, label %1637, label %1640

1637:                                             ; preds = %1632
  %1638 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1639 = load i8*, i8** %1638, align 8
  call void @_ZdlPv(i8* %1639) #18
  br label %1640

1640:                                             ; preds = %1632, %1637
  %1641 = bitcast %"class.SkSL::String"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1642 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1641, i64 0, i32 1, i32 0
  %1643 = load i8, i8* %1642, align 1
  %1644 = icmp slt i8 %1643, 0
  br i1 %1644, label %1645, label %1648

1645:                                             ; preds = %1640
  %1646 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1647 = load i8*, i8** %1646, align 8
  call void @_ZdlPv(i8* %1647) #18
  br label %1648

1648:                                             ; preds = %1640, %1645
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1549) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1548) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1547) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1546) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1545) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1544) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1543) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1542) #17
  %1649 = bitcast %"class.SkSL::String"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1650 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1649, i64 0, i32 1, i32 0
  %1651 = load i8, i8* %1650, align 1
  %1652 = icmp slt i8 %1651, 0
  br i1 %1652, label %1653, label %1655

1653:                                             ; preds = %1648
  %1654 = load i8*, i8** %1420, align 8
  call void @_ZdlPv(i8* %1654) #18
  br label %1655

1655:                                             ; preds = %1648, %1653
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1419) #17
  %1656 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1657 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1656, i64 0, i32 1, i32 0
  %1658 = load i8, i8* %1657, align 1
  %1659 = icmp slt i8 %1658, 0
  br i1 %1659, label %1660, label %1662

1660:                                             ; preds = %1655
  %1661 = load i8*, i8** %1409, align 8
  call void @_ZdlPv(i8* %1661) #18
  br label %1662

1662:                                             ; preds = %1655, %1660
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1408) #17
  br label %2738

1663:                                             ; preds = %1393
  tail call void @_ZN4SkSL18MetalCodeGenerator20writeSimpleIntrinsicERKNS_12FunctionCallE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %1)
  br label %2738

1664:                                             ; preds = %3
  %1665 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %1666 = bitcast i8* %1665 to %"class.std::__1::unique_ptr.258"**
  %1667 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1666, align 8
  %1668 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1667, i64 0, i32 0, i32 0, i32 0
  %1669 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1668, align 8
  %1670 = bitcast %"class.SkSL::Expression"* %1669 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %1671 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %1670, align 8
  %1672 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %1671, i64 3
  %1673 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %1672, align 8
  %1674 = tail call dereferenceable(184) %"class.SkSL::Type"* %1673(%"class.SkSL::Expression"* %1669) #17
  %1675 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1674, i64 0, i32 8
  %1676 = load i32, i32* %1675, align 8
  %1677 = icmp eq i32 %1676, 1
  br i1 %1677, label %1678, label %1780

1678:                                             ; preds = %1664
  %1679 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1680 = load i8, i8* %1679, align 8, !range !2
  %1681 = icmp eq i8 %1680, 0
  br i1 %1681, label %1698, label %1682

1682:                                             ; preds = %1678
  %1683 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1684 = load i32, i32* %1683, align 4
  %1685 = icmp sgt i32 %1684, 0
  br i1 %1685, label %1686, label %1698

1686:                                             ; preds = %1682
  %1687 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1688

1688:                                             ; preds = %1688, %1686
  %1689 = phi i32 [ 0, %1686 ], [ %1695, %1688 ]
  %1690 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1687, align 8
  %1691 = bitcast %"class.SkSL::OutputStream"* %1690 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1692 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1691, align 8
  %1693 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1692, i64 2
  %1694 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1693, align 8
  tail call void %1694(%"class.SkSL::OutputStream"* %1690, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1695 = add nuw nsw i32 %1689, 1
  %1696 = load i32, i32* %1683, align 4
  %1697 = icmp slt i32 %1695, %1696
  br i1 %1697, label %1688, label %1698

1698:                                             ; preds = %1688, %1678, %1682
  %1699 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1700 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1699, align 8
  %1701 = bitcast %"class.SkSL::OutputStream"* %1700 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1702 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1701, align 8
  %1703 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1702, i64 2
  %1704 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1703, align 8
  tail call void %1704(%"class.SkSL::OutputStream"* %1700, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.64, i64 0, i64 0)) #17
  store i8 0, i8* %1679, align 8
  %1705 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1666, align 8
  %1706 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1705, i64 0, i32 0, i32 0, i32 0
  %1707 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1706, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1707, i32 17)
  %1708 = load i8, i8* %1679, align 8, !range !2
  %1709 = icmp eq i8 %1708, 0
  br i1 %1709, label %1724, label %1710

1710:                                             ; preds = %1698
  %1711 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1712 = load i32, i32* %1711, align 4
  %1713 = icmp sgt i32 %1712, 0
  br i1 %1713, label %1714, label %1724

1714:                                             ; preds = %1710, %1714
  %1715 = phi i32 [ %1721, %1714 ], [ 0, %1710 ]
  %1716 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1699, align 8
  %1717 = bitcast %"class.SkSL::OutputStream"* %1716 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1718 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1717, align 8
  %1719 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1718, i64 2
  %1720 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1719, align 8
  tail call void %1720(%"class.SkSL::OutputStream"* %1716, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1721 = add nuw nsw i32 %1715, 1
  %1722 = load i32, i32* %1711, align 4
  %1723 = icmp slt i32 %1721, %1722
  br i1 %1723, label %1714, label %1724

1724:                                             ; preds = %1714, %1698, %1710
  %1725 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1699, align 8
  %1726 = bitcast %"class.SkSL::OutputStream"* %1725 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1727 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1726, align 8
  %1728 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1727, i64 2
  %1729 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1728, align 8
  tail call void %1729(%"class.SkSL::OutputStream"* %1725, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.65, i64 0, i64 0)) #17
  store i8 0, i8* %1679, align 8
  %1730 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1666, align 8
  %1731 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1730, i64 1, i32 0, i32 0, i32 0
  %1732 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1731, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1732, i32 17)
  %1733 = load i8, i8* %1679, align 8, !range !2
  %1734 = icmp eq i8 %1733, 0
  br i1 %1734, label %1749, label %1735

1735:                                             ; preds = %1724
  %1736 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1737 = load i32, i32* %1736, align 4
  %1738 = icmp sgt i32 %1737, 0
  br i1 %1738, label %1739, label %1749

1739:                                             ; preds = %1735, %1739
  %1740 = phi i32 [ %1746, %1739 ], [ 0, %1735 ]
  %1741 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1699, align 8
  %1742 = bitcast %"class.SkSL::OutputStream"* %1741 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1743 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1742, align 8
  %1744 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1743, i64 2
  %1745 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1744, align 8
  tail call void %1745(%"class.SkSL::OutputStream"* %1741, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1746 = add nuw nsw i32 %1740, 1
  %1747 = load i32, i32* %1736, align 4
  %1748 = icmp slt i32 %1746, %1747
  br i1 %1748, label %1739, label %1749

1749:                                             ; preds = %1739, %1724, %1735
  %1750 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1699, align 8
  %1751 = bitcast %"class.SkSL::OutputStream"* %1750 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1752 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1751, align 8
  %1753 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1752, i64 2
  %1754 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1753, align 8
  tail call void %1754(%"class.SkSL::OutputStream"* %1750, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.66, i64 0, i64 0)) #17
  store i8 0, i8* %1679, align 8
  %1755 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1666, align 8
  %1756 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1755, i64 2, i32 0, i32 0, i32 0
  %1757 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1756, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1757, i32 17)
  %1758 = load i8, i8* %1679, align 8, !range !2
  %1759 = icmp eq i8 %1758, 0
  br i1 %1759, label %1774, label %1760

1760:                                             ; preds = %1749
  %1761 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1762 = load i32, i32* %1761, align 4
  %1763 = icmp sgt i32 %1762, 0
  br i1 %1763, label %1764, label %1774

1764:                                             ; preds = %1760, %1764
  %1765 = phi i32 [ %1771, %1764 ], [ 0, %1760 ]
  %1766 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1699, align 8
  %1767 = bitcast %"class.SkSL::OutputStream"* %1766 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1768 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1767, align 8
  %1769 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1768, i64 2
  %1770 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1769, align 8
  tail call void %1770(%"class.SkSL::OutputStream"* %1766, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1771 = add nuw nsw i32 %1765, 1
  %1772 = load i32, i32* %1761, align 4
  %1773 = icmp slt i32 %1771, %1772
  br i1 %1773, label %1764, label %1774

1774:                                             ; preds = %1764, %1749, %1760
  %1775 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1699, align 8
  %1776 = bitcast %"class.SkSL::OutputStream"* %1775 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1777 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1776, align 8
  %1778 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1777, i64 2
  %1779 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1778, align 8
  tail call void %1779(%"class.SkSL::OutputStream"* %1775, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0)) #17
  store i8 0, i8* %1679, align 8
  br label %2738

1780:                                             ; preds = %1664
  tail call void @_ZN4SkSL18MetalCodeGenerator20writeSimpleIntrinsicERKNS_12FunctionCallE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %1)
  br label %2738

1781:                                             ; preds = %3
  %1782 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1783 = load i8, i8* %1782, align 8, !range !2
  %1784 = icmp eq i8 %1783, 0
  br i1 %1784, label %1801, label %1785

1785:                                             ; preds = %1781
  %1786 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1787 = load i32, i32* %1786, align 4
  %1788 = icmp sgt i32 %1787, 0
  br i1 %1788, label %1789, label %1801

1789:                                             ; preds = %1785
  %1790 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1791

1791:                                             ; preds = %1791, %1789
  %1792 = phi i32 [ 0, %1789 ], [ %1798, %1791 ]
  %1793 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1790, align 8
  %1794 = bitcast %"class.SkSL::OutputStream"* %1793 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1795 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1794, align 8
  %1796 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1795, i64 2
  %1797 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1796, align 8
  tail call void %1797(%"class.SkSL::OutputStream"* %1793, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1798 = add nuw nsw i32 %1792, 1
  %1799 = load i32, i32* %1786, align 4
  %1800 = icmp slt i32 %1798, %1799
  br i1 %1800, label %1791, label %1801

1801:                                             ; preds = %1791, %1781, %1785
  %1802 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1803 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1802, align 8
  %1804 = bitcast %"class.SkSL::OutputStream"* %1803 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1805 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1804, align 8
  %1806 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1805, i64 2
  %1807 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1806, align 8
  tail call void %1807(%"class.SkSL::OutputStream"* %1803, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0)) #17
  store i8 0, i8* %1782, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator17writeArgumentListERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EE(%"class.SkSL::MetalCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %50)
  br label %2738

1808:                                             ; preds = %3
  %1809 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1810 = load i8, i8* %1809, align 8, !range !2
  %1811 = icmp eq i8 %1810, 0
  br i1 %1811, label %1828, label %1812

1812:                                             ; preds = %1808
  %1813 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1814 = load i32, i32* %1813, align 4
  %1815 = icmp sgt i32 %1814, 0
  br i1 %1815, label %1816, label %1828

1816:                                             ; preds = %1812
  %1817 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1818

1818:                                             ; preds = %1818, %1816
  %1819 = phi i32 [ 0, %1816 ], [ %1825, %1818 ]
  %1820 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1817, align 8
  %1821 = bitcast %"class.SkSL::OutputStream"* %1820 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1822 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1821, align 8
  %1823 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1822, i64 2
  %1824 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1823, align 8
  tail call void %1824(%"class.SkSL::OutputStream"* %1820, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1825 = add nuw nsw i32 %1819, 1
  %1826 = load i32, i32* %1813, align 4
  %1827 = icmp slt i32 %1825, %1826
  br i1 %1827, label %1818, label %1828

1828:                                             ; preds = %1818, %1808, %1812
  %1829 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1830 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1829, align 8
  %1831 = bitcast %"class.SkSL::OutputStream"* %1830 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1832 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1831, align 8
  %1833 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1832, i64 2
  %1834 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1833, align 8
  tail call void %1834(%"class.SkSL::OutputStream"* %1830, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0)) #17
  store i8 0, i8* %1809, align 8
  %1835 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %1836 = bitcast i8* %1835 to %"class.std::__1::unique_ptr.258"**
  %1837 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1836, align 8
  %1838 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1837, i64 0, i32 0, i32 0, i32 0
  %1839 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1838, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1839, i32 17)
  %1840 = load i8, i8* %1809, align 8, !range !2
  %1841 = icmp eq i8 %1840, 0
  br i1 %1841, label %1856, label %1842

1842:                                             ; preds = %1828
  %1843 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1844 = load i32, i32* %1843, align 4
  %1845 = icmp sgt i32 %1844, 0
  br i1 %1845, label %1846, label %1856

1846:                                             ; preds = %1842, %1846
  %1847 = phi i32 [ %1853, %1846 ], [ 0, %1842 ]
  %1848 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1829, align 8
  %1849 = bitcast %"class.SkSL::OutputStream"* %1848 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1850 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1849, align 8
  %1851 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1850, i64 2
  %1852 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1851, align 8
  tail call void %1852(%"class.SkSL::OutputStream"* %1848, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1853 = add nuw nsw i32 %1847, 1
  %1854 = load i32, i32* %1843, align 4
  %1855 = icmp slt i32 %1853, %1854
  br i1 %1855, label %1846, label %1856

1856:                                             ; preds = %1846, %1828, %1842
  %1857 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1829, align 8
  %1858 = bitcast %"class.SkSL::OutputStream"* %1857 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1859 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1858, align 8
  %1860 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1859, i64 2
  %1861 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1860, align 8
  tail call void %1861(%"class.SkSL::OutputStream"* %1857, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %1809, align 8
  br label %2738

1862:                                             ; preds = %3
  %1863 = bitcast %"class.SkSL::String"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1863) #17
  %1864 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1865 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %1866 = bitcast i8* %1865 to %"class.std::__1::unique_ptr.258"**
  %1867 = bitcast %"class.SkSL::String"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1867, i8 -86, i64 24, i1 false)
  %1868 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1866, align 8
  %1869 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1868, i64 0, i32 0, i32 0, i32 0
  %1870 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1869, align 8
  %1871 = bitcast %"class.SkSL::Expression"* %1870 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %1872 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %1871, align 8
  %1873 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %1872, i64 3
  %1874 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %1873, align 8
  %1875 = tail call dereferenceable(184) %"class.SkSL::Type"* %1874(%"class.SkSL::Expression"* %1870) #17
  call void @_ZN4SkSL18MetalCodeGenerator15getTempVariableERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %42, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1875)
  %1876 = bitcast %"class.SkSL::String"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1876) #17
  %1877 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1878 = bitcast %"class.SkSL::String"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1878, i8 -86, i64 24, i1 false)
  %1879 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1866, align 8
  %1880 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1879, i64 0, i32 0, i32 0, i32 0
  %1881 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1880, align 8
  %1882 = bitcast %"class.SkSL::Expression"* %1881 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %1883 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %1882, align 8
  %1884 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %1883, i64 3
  %1885 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %1884, align 8
  %1886 = call dereferenceable(184) %"class.SkSL::Type"* %1885(%"class.SkSL::Expression"* %1881) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %43, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1886)
  %1887 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %1888 = load i8, i8* %1887, align 8, !range !2
  %1889 = icmp eq i8 %1888, 0
  br i1 %1889, label %1906, label %1890

1890:                                             ; preds = %1862
  %1891 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1892 = load i32, i32* %1891, align 4
  %1893 = icmp sgt i32 %1892, 0
  br i1 %1893, label %1894, label %1906

1894:                                             ; preds = %1890
  %1895 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %1896

1896:                                             ; preds = %1896, %1894
  %1897 = phi i32 [ 0, %1894 ], [ %1903, %1896 ]
  %1898 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1895, align 8
  %1899 = bitcast %"class.SkSL::OutputStream"* %1898 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1900 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1899, align 8
  %1901 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1900, i64 2
  %1902 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1901, align 8
  call void %1902(%"class.SkSL::OutputStream"* %1898, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1903 = add nuw nsw i32 %1897, 1
  %1904 = load i32, i32* %1891, align 4
  %1905 = icmp slt i32 %1903, %1904
  br i1 %1905, label %1896, label %1906

1906:                                             ; preds = %1896, %1862, %1890
  %1907 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %1908 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1907, align 8
  %1909 = bitcast %"class.SkSL::OutputStream"* %1908 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1910 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1909, align 8
  %1911 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1910, i64 2
  %1912 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1911, align 8
  call void %1912(%"class.SkSL::OutputStream"* %1908, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %1887, align 8
  %1913 = bitcast %"class.SkSL::String"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1914 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1913, i64 0, i32 1, i32 0
  %1915 = load i8, i8* %1914, align 1
  %1916 = icmp slt i8 %1915, 0
  %1917 = load i8*, i8** %1864, align 8
  %1918 = select i1 %1916, i8* %1917, i8* %1863
  %1919 = load i8, i8* %1918, align 1
  %1920 = icmp eq i8 %1919, 0
  br i1 %1920, label %1927, label %1921

1921:                                             ; preds = %1906
  %1922 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1907, align 8
  %1923 = bitcast %"class.SkSL::OutputStream"* %1922 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1924 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1923, align 8
  %1925 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1924, i64 2
  %1926 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1925, align 8
  call void %1926(%"class.SkSL::OutputStream"* %1922, i8* %1918) #17
  store i8 0, i8* %1887, align 8
  br label %1927

1927:                                             ; preds = %1906, %1921
  %1928 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1907, align 8
  %1929 = bitcast %"class.SkSL::OutputStream"* %1928 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1930 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1929, align 8
  %1931 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1930, i64 2
  %1932 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1931, align 8
  call void %1932(%"class.SkSL::OutputStream"* %1928, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i64 0, i64 0)) #17
  store i8 0, i8* %1887, align 8
  %1933 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %1866, align 8
  %1934 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %1933, i64 0, i32 0, i32 0, i32 0
  %1935 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1934, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1935, i32 17)
  %1936 = load i8, i8* %1887, align 8, !range !2
  %1937 = icmp eq i8 %1936, 0
  br i1 %1937, label %1952, label %1938

1938:                                             ; preds = %1927
  %1939 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %1940 = load i32, i32* %1939, align 4
  %1941 = icmp sgt i32 %1940, 0
  br i1 %1941, label %1942, label %1952

1942:                                             ; preds = %1938, %1942
  %1943 = phi i32 [ %1949, %1942 ], [ 0, %1938 ]
  %1944 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1907, align 8
  %1945 = bitcast %"class.SkSL::OutputStream"* %1944 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1946 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1945, align 8
  %1947 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1946, i64 2
  %1948 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1947, align 8
  call void %1948(%"class.SkSL::OutputStream"* %1944, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %1949 = add nuw nsw i32 %1943, 1
  %1950 = load i32, i32* %1939, align 4
  %1951 = icmp slt i32 %1949, %1950
  br i1 %1951, label %1942, label %1952

1952:                                             ; preds = %1942, %1927, %1938
  %1953 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1907, align 8
  %1954 = bitcast %"class.SkSL::OutputStream"* %1953 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1955 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1954, align 8
  %1956 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1955, i64 2
  %1957 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1956, align 8
  call void %1957(%"class.SkSL::OutputStream"* %1953, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i64 0, i64 0)) #17
  store i8 0, i8* %1887, align 8
  %1958 = load i8, i8* %1914, align 1
  %1959 = icmp slt i8 %1958, 0
  %1960 = load i8*, i8** %1864, align 8
  %1961 = select i1 %1959, i8* %1960, i8* %1863
  %1962 = load i8, i8* %1961, align 1
  %1963 = icmp eq i8 %1962, 0
  br i1 %1963, label %1970, label %1964

1964:                                             ; preds = %1952
  %1965 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1907, align 8
  %1966 = bitcast %"class.SkSL::OutputStream"* %1965 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1967 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1966, align 8
  %1968 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1967, i64 2
  %1969 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1968, align 8
  call void %1969(%"class.SkSL::OutputStream"* %1965, i8* %1961) #17
  store i8 0, i8* %1887, align 8
  br label %1970

1970:                                             ; preds = %1952, %1964
  %1971 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1907, align 8
  %1972 = bitcast %"class.SkSL::OutputStream"* %1971 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1973 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1972, align 8
  %1974 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1973, i64 2
  %1975 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1974, align 8
  call void %1975(%"class.SkSL::OutputStream"* %1971, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0)) #17
  store i8 0, i8* %1887, align 8
  %1976 = bitcast %"class.SkSL::String"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1977 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1976, i64 0, i32 1, i32 0
  %1978 = load i8, i8* %1977, align 1
  %1979 = icmp slt i8 %1978, 0
  %1980 = load i8*, i8** %1877, align 8
  %1981 = select i1 %1979, i8* %1980, i8* %1876
  %1982 = load i8, i8* %1981, align 1
  %1983 = icmp eq i8 %1982, 0
  br i1 %1983, label %1990, label %1984

1984:                                             ; preds = %1970
  %1985 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1907, align 8
  %1986 = bitcast %"class.SkSL::OutputStream"* %1985 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1987 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1986, align 8
  %1988 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1987, i64 2
  %1989 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1988, align 8
  call void %1989(%"class.SkSL::OutputStream"* %1985, i8* %1981) #17
  store i8 0, i8* %1887, align 8
  br label %1990

1990:                                             ; preds = %1970, %1984
  %1991 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1907, align 8
  %1992 = bitcast %"class.SkSL::OutputStream"* %1991 to void (%"class.SkSL::OutputStream"*, i8*)***
  %1993 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %1992, align 8
  %1994 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1993, i64 2
  %1995 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %1994, align 8
  call void %1995(%"class.SkSL::OutputStream"* %1991, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0)) #17
  store i8 0, i8* %1887, align 8
  %1996 = load i8, i8* %1914, align 1
  %1997 = icmp slt i8 %1996, 0
  %1998 = load i8*, i8** %1864, align 8
  %1999 = select i1 %1997, i8* %1998, i8* %1863
  %2000 = load i8, i8* %1999, align 1
  %2001 = icmp eq i8 %2000, 0
  br i1 %2001, label %2008, label %2002

2002:                                             ; preds = %1990
  %2003 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1907, align 8
  %2004 = bitcast %"class.SkSL::OutputStream"* %2003 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2005 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2004, align 8
  %2006 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2005, i64 2
  %2007 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2006, align 8
  call void %2007(%"class.SkSL::OutputStream"* %2003, i8* %1999) #17
  store i8 0, i8* %1887, align 8
  br label %2008

2008:                                             ; preds = %1990, %2002
  %2009 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1907, align 8
  %2010 = bitcast %"class.SkSL::OutputStream"* %2009 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2011 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2010, align 8
  %2012 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2011, i64 2
  %2013 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2012, align 8
  call void %2013(%"class.SkSL::OutputStream"* %2009, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)) #17
  store i8 0, i8* %1887, align 8
  %2014 = load i8, i8* %1977, align 1
  %2015 = icmp slt i8 %2014, 0
  %2016 = load i8*, i8** %1877, align 8
  %2017 = select i1 %2015, i8* %2016, i8* %1876
  %2018 = load i8, i8* %2017, align 1
  %2019 = icmp eq i8 %2018, 0
  br i1 %2019, label %2026, label %2020

2020:                                             ; preds = %2008
  %2021 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1907, align 8
  %2022 = bitcast %"class.SkSL::OutputStream"* %2021 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2023 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2022, align 8
  %2024 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2023, i64 2
  %2025 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2024, align 8
  call void %2025(%"class.SkSL::OutputStream"* %2021, i8* %2017) #17
  store i8 0, i8* %1887, align 8
  br label %2026

2026:                                             ; preds = %2008, %2020
  %2027 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %1907, align 8
  %2028 = bitcast %"class.SkSL::OutputStream"* %2027 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2029 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2028, align 8
  %2030 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2029, i64 2
  %2031 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2030, align 8
  call void %2031(%"class.SkSL::OutputStream"* %2027, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0)) #17
  store i8 0, i8* %1887, align 8
  %2032 = load i8, i8* %1977, align 1
  %2033 = icmp slt i8 %2032, 0
  br i1 %2033, label %2034, label %2036

2034:                                             ; preds = %2026
  %2035 = load i8*, i8** %1877, align 8
  call void @_ZdlPv(i8* %2035) #18
  br label %2036

2036:                                             ; preds = %2026, %2034
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1876) #17
  %2037 = load i8, i8* %1914, align 1
  %2038 = icmp slt i8 %2037, 0
  br i1 %2038, label %2039, label %2041

2039:                                             ; preds = %2036
  %2040 = load i8*, i8** %1864, align 8
  call void @_ZdlPv(i8* %2040) #18
  br label %2041

2041:                                             ; preds = %2036, %2039
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1863) #17
  br label %2738

2042:                                             ; preds = %3
  %2043 = bitcast %"class.SkSL::String"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2043) #17
  %2044 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2045 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2046 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %2047 = bitcast i8* %2046 to %"class.std::__1::unique_ptr.258"**
  %2048 = bitcast %"class.SkSL::String"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2048, i8 -86, i64 24, i1 false)
  %2049 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %2047, align 8
  %2050 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %2049, i64 0, i32 0, i32 0, i32 0
  %2051 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %2050, align 8
  %2052 = bitcast %"class.SkSL::Expression"* %2051 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %2053 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %2052, align 8
  %2054 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %2053, i64 3
  %2055 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %2054, align 8
  %2056 = tail call dereferenceable(184) %"class.SkSL::Type"* %2055(%"class.SkSL::Expression"* %2051) #17
  call void @_ZN4SkSL18MetalCodeGenerator15getTempVariableERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %44, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %2056)
  %2057 = bitcast %"class.SkSL::String"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2057) #17
  %2058 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2059 = bitcast %"class.SkSL::String"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2059, i8 -86, i64 24, i1 false)
  %2060 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %2047, align 8
  %2061 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %2060, i64 0, i32 0, i32 0, i32 0
  %2062 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %2061, align 8
  %2063 = bitcast %"class.SkSL::Expression"* %2062 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %2064 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %2063, align 8
  %2065 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %2064, i64 3
  %2066 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %2065, align 8
  %2067 = call dereferenceable(184) %"class.SkSL::Type"* %2066(%"class.SkSL::Expression"* %2062) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %45, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %2067)
  %2068 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %2069 = load i8, i8* %2068, align 8, !range !2
  %2070 = icmp eq i8 %2069, 0
  br i1 %2070, label %2087, label %2071

2071:                                             ; preds = %2042
  %2072 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2073 = load i32, i32* %2072, align 4
  %2074 = icmp sgt i32 %2073, 0
  br i1 %2074, label %2075, label %2087

2075:                                             ; preds = %2071
  %2076 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %2077

2077:                                             ; preds = %2077, %2075
  %2078 = phi i32 [ 0, %2075 ], [ %2084, %2077 ]
  %2079 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2076, align 8
  %2080 = bitcast %"class.SkSL::OutputStream"* %2079 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2081 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2080, align 8
  %2082 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2081, i64 2
  %2083 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2082, align 8
  call void %2083(%"class.SkSL::OutputStream"* %2079, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2084 = add nuw nsw i32 %2078, 1
  %2085 = load i32, i32* %2072, align 4
  %2086 = icmp slt i32 %2084, %2085
  br i1 %2086, label %2077, label %2087

2087:                                             ; preds = %2077, %2042, %2071
  %2088 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %2089 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2090 = bitcast %"class.SkSL::OutputStream"* %2089 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2091 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2090, align 8
  %2092 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2091, i64 2
  %2093 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2092, align 8
  call void %2093(%"class.SkSL::OutputStream"* %2089, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %2068, align 8
  %2094 = bitcast %"class.SkSL::String"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2095 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2094, i64 0, i32 1, i32 0
  %2096 = load i8, i8* %2095, align 1
  %2097 = icmp slt i8 %2096, 0
  %2098 = load i8*, i8** %2044, align 8
  %2099 = select i1 %2097, i8* %2098, i8* %2043
  %2100 = load i8, i8* %2099, align 1
  %2101 = icmp eq i8 %2100, 0
  br i1 %2101, label %2108, label %2102

2102:                                             ; preds = %2087
  %2103 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2104 = bitcast %"class.SkSL::OutputStream"* %2103 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2105 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2104, align 8
  %2106 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2105, i64 2
  %2107 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2106, align 8
  call void %2107(%"class.SkSL::OutputStream"* %2103, i8* %2099) #17
  store i8 0, i8* %2068, align 8
  br label %2108

2108:                                             ; preds = %2087, %2102
  %2109 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2110 = bitcast %"class.SkSL::OutputStream"* %2109 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2111 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2110, align 8
  %2112 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2111, i64 2
  %2113 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2112, align 8
  call void %2113(%"class.SkSL::OutputStream"* %2109, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i64 0, i64 0)) #17
  store i8 0, i8* %2068, align 8
  %2114 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %2047, align 8
  %2115 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %2114, i64 0, i32 0, i32 0, i32 0
  %2116 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %2115, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %2116, i32 17)
  %2117 = load i8, i8* %2068, align 8, !range !2
  %2118 = icmp eq i8 %2117, 0
  br i1 %2118, label %2133, label %2119

2119:                                             ; preds = %2108
  %2120 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2121 = load i32, i32* %2120, align 4
  %2122 = icmp sgt i32 %2121, 0
  br i1 %2122, label %2123, label %2133

2123:                                             ; preds = %2119, %2123
  %2124 = phi i32 [ %2130, %2123 ], [ 0, %2119 ]
  %2125 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2126 = bitcast %"class.SkSL::OutputStream"* %2125 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2127 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2126, align 8
  %2128 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2127, i64 2
  %2129 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2128, align 8
  call void %2129(%"class.SkSL::OutputStream"* %2125, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2130 = add nuw nsw i32 %2124, 1
  %2131 = load i32, i32* %2120, align 4
  %2132 = icmp slt i32 %2130, %2131
  br i1 %2132, label %2123, label %2133

2133:                                             ; preds = %2123, %2108, %2119
  %2134 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2135 = bitcast %"class.SkSL::OutputStream"* %2134 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2136 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2135, align 8
  %2137 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2136, i64 2
  %2138 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2137, align 8
  call void %2138(%"class.SkSL::OutputStream"* %2134, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0)) #17
  store i8 0, i8* %2068, align 8
  %2139 = bitcast %"class.SkSL::String"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2139) #17
  %2140 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2139, i8 0, i64 24, i1 false) #17
  %2141 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %2047, align 8
  %2142 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %2141, i64 0, i32 0, i32 0, i32 0
  %2143 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %2142, align 8
  %2144 = bitcast %"class.SkSL::Expression"* %2143 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %2145 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %2144, align 8
  %2146 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %2145, i64 3
  %2147 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %2146, align 8
  %2148 = call dereferenceable(184) %"class.SkSL::Type"* %2147(%"class.SkSL::Expression"* %2143) #17
  %2149 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2148, i64 0, i32 4
  %2150 = load i32, i32* %2149, align 4
  %2151 = icmp eq i32 %2150, 1
  br i1 %2151, label %2152, label %2273

2152:                                             ; preds = %2133
  %2153 = bitcast %"class.SkSL::String"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2153) #17
  %2154 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %2047, align 8
  %2155 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %2154, i64 0, i32 0, i32 0, i32 0
  %2156 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %2155, align 8
  %2157 = bitcast %"class.SkSL::Expression"* %2156 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %2158 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %2157, align 8
  %2159 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %2158, i64 3
  %2160 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %2159, align 8
  %2161 = call dereferenceable(184) %"class.SkSL::Type"* %2160(%"class.SkSL::Expression"* %2156) #17
  call void @_ZN4SkSL18MetalCodeGenerator15getTempVariableERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %47, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %2161)
  %2162 = bitcast %"class.SkSL::String"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2162, i64 0, i32 1, i32 0
  %2164 = load i8, i8* %2163, align 1
  %2165 = icmp slt i8 %2164, 0
  br i1 %2165, label %2166, label %2168

2166:                                             ; preds = %2152
  %2167 = load i8*, i8** %2140, align 8
  call void @_ZdlPv(i8* %2167) #18
  br label %2168

2168:                                             ; preds = %2152, %2166
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2139, i8* nonnull align 8 %2153, i64 24, i1 false) #17
  %2169 = load i8, i8* %2163, align 1
  %2170 = load i8*, i8** %2140, align 8
  %2171 = load i8, i8* %2068, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2153) #17
  %2172 = icmp slt i8 %2169, 0
  %2173 = select i1 %2172, i8* %2170, i8* %2139
  %2174 = load i8, i8* %2173, align 1
  %2175 = icmp eq i8 %2174, 0
  %2176 = icmp eq i8 %2171, 0
  br i1 %2175, label %2198, label %2177

2177:                                             ; preds = %2168
  br i1 %2176, label %2192, label %2178

2178:                                             ; preds = %2177
  %2179 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2180 = load i32, i32* %2179, align 4
  %2181 = icmp sgt i32 %2180, 0
  br i1 %2181, label %2182, label %2192

2182:                                             ; preds = %2178, %2182
  %2183 = phi i32 [ %2189, %2182 ], [ 0, %2178 ]
  %2184 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2185 = bitcast %"class.SkSL::OutputStream"* %2184 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2186 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2185, align 8
  %2187 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2186, i64 2
  %2188 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2187, align 8
  call void %2188(%"class.SkSL::OutputStream"* %2184, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2189 = add nuw nsw i32 %2183, 1
  %2190 = load i32, i32* %2179, align 4
  %2191 = icmp slt i32 %2189, %2190
  br i1 %2191, label %2182, label %2192

2192:                                             ; preds = %2182, %2177, %2178
  %2193 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2194 = bitcast %"class.SkSL::OutputStream"* %2193 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2195 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2194, align 8
  %2196 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2195, i64 2
  %2197 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2196, align 8
  call void %2197(%"class.SkSL::OutputStream"* %2193, i8* %2173) #17
  store i8 0, i8* %2068, align 8
  br label %2213

2198:                                             ; preds = %2168
  br i1 %2176, label %2213, label %2199

2199:                                             ; preds = %2198
  %2200 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2201 = load i32, i32* %2200, align 4
  %2202 = icmp sgt i32 %2201, 0
  br i1 %2202, label %2203, label %2213

2203:                                             ; preds = %2199, %2203
  %2204 = phi i32 [ %2210, %2203 ], [ 0, %2199 ]
  %2205 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2206 = bitcast %"class.SkSL::OutputStream"* %2205 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2207 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2206, align 8
  %2208 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2207, i64 2
  %2209 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2208, align 8
  call void %2209(%"class.SkSL::OutputStream"* %2205, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2210 = add nuw nsw i32 %2204, 1
  %2211 = load i32, i32* %2200, align 4
  %2212 = icmp slt i32 %2210, %2211
  br i1 %2212, label %2203, label %2213

2213:                                             ; preds = %2203, %2192, %2198, %2199
  %2214 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2215 = bitcast %"class.SkSL::OutputStream"* %2214 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2216 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2215, align 8
  %2217 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2216, i64 2
  %2218 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2217, align 8
  call void %2218(%"class.SkSL::OutputStream"* %2214, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.76, i64 0, i64 0)) #17
  store i8 0, i8* %2068, align 8
  %2219 = load i8, i8* %2095, align 1
  %2220 = icmp slt i8 %2219, 0
  %2221 = load i8*, i8** %2044, align 8
  %2222 = select i1 %2220, i8* %2221, i8* %2043
  %2223 = load i8, i8* %2222, align 1
  %2224 = icmp eq i8 %2223, 0
  br i1 %2224, label %2231, label %2225

2225:                                             ; preds = %2213
  %2226 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2227 = bitcast %"class.SkSL::OutputStream"* %2226 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2228 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2227, align 8
  %2229 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2228, i64 2
  %2230 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2229, align 8
  call void %2230(%"class.SkSL::OutputStream"* %2226, i8* %2222) #17
  store i8 0, i8* %2068, align 8
  br label %2231

2231:                                             ; preds = %2213, %2225
  %2232 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2233 = bitcast %"class.SkSL::OutputStream"* %2232 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2234 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2233, align 8
  %2235 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2234, i64 2
  %2236 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2235, align 8
  call void %2236(%"class.SkSL::OutputStream"* %2232, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i64 0, i64 0)) #17
  store i8 0, i8* %2068, align 8
  %2237 = load i8, i8* %2095, align 1
  %2238 = icmp slt i8 %2237, 0
  %2239 = load i8*, i8** %2044, align 8
  %2240 = select i1 %2238, i8* %2239, i8* %2043
  %2241 = load i8, i8* %2240, align 1
  %2242 = icmp eq i8 %2241, 0
  br i1 %2242, label %2249, label %2243

2243:                                             ; preds = %2231
  %2244 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2245 = bitcast %"class.SkSL::OutputStream"* %2244 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2246 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2245, align 8
  %2247 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2246, i64 2
  %2248 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2247, align 8
  call void %2248(%"class.SkSL::OutputStream"* %2244, i8* %2240) #17
  store i8 0, i8* %2068, align 8
  br label %2249

2249:                                             ; preds = %2231, %2243
  %2250 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2251 = bitcast %"class.SkSL::OutputStream"* %2250 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2252 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2251, align 8
  %2253 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2252, i64 2
  %2254 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2253, align 8
  call void %2254(%"class.SkSL::OutputStream"* %2250, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #17
  store i8 0, i8* %2068, align 8
  %2255 = load i8, i8* %2095, align 1
  %2256 = icmp slt i8 %2255, 0
  %2257 = load i8*, i8** %2044, align 8
  %2258 = select i1 %2256, i8* %2257, i8* %2043
  %2259 = load i8, i8* %2258, align 1
  %2260 = icmp eq i8 %2259, 0
  br i1 %2260, label %2267, label %2261

2261:                                             ; preds = %2249
  %2262 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2263 = bitcast %"class.SkSL::OutputStream"* %2262 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2264 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2263, align 8
  %2265 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2264, i64 2
  %2266 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2265, align 8
  call void %2266(%"class.SkSL::OutputStream"* %2262, i8* %2258) #17
  store i8 0, i8* %2068, align 8
  br label %2267

2267:                                             ; preds = %2249, %2261
  %2268 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2269 = bitcast %"class.SkSL::OutputStream"* %2268 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2270 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2269, align 8
  %2271 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2270, i64 2
  %2272 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2271, align 8
  call void %2272(%"class.SkSL::OutputStream"* %2268, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i64 0, i64 0)) #17
  store i8 0, i8* %2068, align 8
  br label %2311

2273:                                             ; preds = %2133
  %2274 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %46, i64 0, i32 0
  %2275 = bitcast %"class.SkSL::String"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2276 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2275, i64 0, i32 1, i32 0
  %2277 = load i8, i8* %2276, align 1
  %2278 = icmp slt i8 %2277, 0
  %2279 = load i8, i8* %2095, align 1
  %2280 = icmp slt i8 %2279, 0
  br i1 %2278, label %2287, label %2281

2281:                                             ; preds = %2273
  br i1 %2280, label %2283, label %2282

2282:                                             ; preds = %2281
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2139, i8* nonnull align 8 %2043, i64 24, i1 false) #17
  br label %2294

2283:                                             ; preds = %2281
  %2284 = load i8*, i8** %2044, align 8
  %2285 = load i64, i64* %2045, align 8
  %2286 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %2274, i8* %2284, i64 %2285) #17
  br label %2294

2287:                                             ; preds = %2273
  %2288 = load i8*, i8** %2044, align 8
  %2289 = load i64, i64* %2045, align 8
  %2290 = zext i8 %2279 to i64
  %2291 = select i1 %2280, i8* %2288, i8* %2043
  %2292 = select i1 %2280, i64 %2289, i64 %2290
  %2293 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %2274, i8* %2291, i64 %2292) #17
  br label %2294

2294:                                             ; preds = %2287, %2283, %2282
  %2295 = load i8, i8* %2068, align 8
  %2296 = icmp eq i8 %2295, 0
  br i1 %2296, label %2311, label %2297

2297:                                             ; preds = %2294
  %2298 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2299 = load i32, i32* %2298, align 4
  %2300 = icmp sgt i32 %2299, 0
  br i1 %2300, label %2301, label %2311

2301:                                             ; preds = %2297, %2301
  %2302 = phi i32 [ %2308, %2301 ], [ 0, %2297 ]
  %2303 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2304 = bitcast %"class.SkSL::OutputStream"* %2303 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2305 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2304, align 8
  %2306 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2305, i64 2
  %2307 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2306, align 8
  call void %2307(%"class.SkSL::OutputStream"* %2303, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2308 = add nuw nsw i32 %2302, 1
  %2309 = load i32, i32* %2298, align 4
  %2310 = icmp slt i32 %2308, %2309
  br i1 %2310, label %2301, label %2311

2311:                                             ; preds = %2301, %2267, %2294, %2297
  %2312 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2313 = bitcast %"class.SkSL::OutputStream"* %2312 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2314 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2313, align 8
  %2315 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2314, i64 2
  %2316 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2315, align 8
  call void %2316(%"class.SkSL::OutputStream"* %2312, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i64 0, i64 0)) #17
  store i8 0, i8* %2068, align 8
  %2317 = bitcast %"class.SkSL::String"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2317) #17
  %2318 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 0, i32 1
  %2319 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2318, align 8
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %48, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %2319)
  %2320 = bitcast %"class.SkSL::String"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2321 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2320, i64 0, i32 1, i32 0
  %2322 = load i8, i8* %2321, align 1
  %2323 = icmp slt i8 %2322, 0
  %2324 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2325 = load i8*, i8** %2324, align 8
  %2326 = select i1 %2323, i8* %2325, i8* %2317
  %2327 = load i8, i8* %2326, align 1
  %2328 = icmp eq i8 %2327, 0
  br i1 %2328, label %2353, label %2329

2329:                                             ; preds = %2311
  %2330 = load i8, i8* %2068, align 8, !range !2
  %2331 = icmp eq i8 %2330, 0
  br i1 %2331, label %2346, label %2332

2332:                                             ; preds = %2329
  %2333 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2334 = load i32, i32* %2333, align 4
  %2335 = icmp sgt i32 %2334, 0
  br i1 %2335, label %2336, label %2346

2336:                                             ; preds = %2332, %2336
  %2337 = phi i32 [ %2343, %2336 ], [ 0, %2332 ]
  %2338 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2339 = bitcast %"class.SkSL::OutputStream"* %2338 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2340 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2339, align 8
  %2341 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2340, i64 2
  %2342 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2341, align 8
  call void %2342(%"class.SkSL::OutputStream"* %2338, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2343 = add nuw nsw i32 %2337, 1
  %2344 = load i32, i32* %2333, align 4
  %2345 = icmp slt i32 %2343, %2344
  br i1 %2345, label %2336, label %2346

2346:                                             ; preds = %2336, %2332, %2329
  %2347 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2348 = bitcast %"class.SkSL::OutputStream"* %2347 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2349 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2348, align 8
  %2350 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2349, i64 2
  %2351 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2350, align 8
  call void %2351(%"class.SkSL::OutputStream"* %2347, i8* %2326) #17
  store i8 0, i8* %2068, align 8
  %2352 = load i8, i8* %2321, align 1
  br label %2353

2353:                                             ; preds = %2311, %2346
  %2354 = phi i8 [ %2322, %2311 ], [ %2352, %2346 ]
  %2355 = icmp slt i8 %2354, 0
  br i1 %2355, label %2356, label %2358

2356:                                             ; preds = %2353
  %2357 = load i8*, i8** %2324, align 8
  call void @_ZdlPv(i8* %2357) #18
  br label %2358

2358:                                             ; preds = %2353, %2356
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2317) #17
  %2359 = load i8, i8* %2068, align 8, !range !2
  %2360 = icmp eq i8 %2359, 0
  br i1 %2360, label %2375, label %2361

2361:                                             ; preds = %2358
  %2362 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2363 = load i32, i32* %2362, align 4
  %2364 = icmp sgt i32 %2363, 0
  br i1 %2364, label %2365, label %2375

2365:                                             ; preds = %2361, %2365
  %2366 = phi i32 [ %2372, %2365 ], [ 0, %2361 ]
  %2367 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2368 = bitcast %"class.SkSL::OutputStream"* %2367 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2369 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2368, align 8
  %2370 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2369, i64 2
  %2371 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2370, align 8
  call void %2371(%"class.SkSL::OutputStream"* %2367, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2372 = add nuw nsw i32 %2366, 1
  %2373 = load i32, i32* %2362, align 4
  %2374 = icmp slt i32 %2372, %2373
  br i1 %2374, label %2365, label %2375

2375:                                             ; preds = %2365, %2358, %2361
  %2376 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2377 = bitcast %"class.SkSL::OutputStream"* %2376 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2378 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2377, align 8
  %2379 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2378, i64 2
  %2380 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2379, align 8
  call void %2380(%"class.SkSL::OutputStream"* %2376, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0)) #17
  store i8 0, i8* %2068, align 8
  %2381 = bitcast %"class.SkSL::String"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2382 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2381, i64 0, i32 1, i32 0
  %2383 = load i8, i8* %2382, align 1
  %2384 = icmp slt i8 %2383, 0
  %2385 = load i8*, i8** %2140, align 8
  %2386 = select i1 %2384, i8* %2385, i8* %2139
  %2387 = load i8, i8* %2386, align 1
  %2388 = icmp eq i8 %2387, 0
  br i1 %2388, label %2395, label %2389

2389:                                             ; preds = %2375
  %2390 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2391 = bitcast %"class.SkSL::OutputStream"* %2390 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2392 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2391, align 8
  %2393 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2392, i64 2
  %2394 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2393, align 8
  call void %2394(%"class.SkSL::OutputStream"* %2390, i8* %2386) #17
  store i8 0, i8* %2068, align 8
  br label %2395

2395:                                             ; preds = %2375, %2389
  %2396 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2397 = bitcast %"class.SkSL::OutputStream"* %2396 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2398 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2397, align 8
  %2399 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2398, i64 2
  %2400 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2399, align 8
  call void %2400(%"class.SkSL::OutputStream"* %2396, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0)) #17
  store i8 0, i8* %2068, align 8
  %2401 = bitcast %"class.SkSL::String"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2401) #17
  %2402 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2318, align 8
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %49, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %2402)
  %2403 = bitcast %"class.SkSL::String"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2404 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2403, i64 0, i32 1, i32 0
  %2405 = load i8, i8* %2404, align 1
  %2406 = icmp slt i8 %2405, 0
  %2407 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2408 = load i8*, i8** %2407, align 8
  %2409 = select i1 %2406, i8* %2408, i8* %2401
  %2410 = load i8, i8* %2409, align 1
  %2411 = icmp eq i8 %2410, 0
  br i1 %2411, label %2436, label %2412

2412:                                             ; preds = %2395
  %2413 = load i8, i8* %2068, align 8, !range !2
  %2414 = icmp eq i8 %2413, 0
  br i1 %2414, label %2429, label %2415

2415:                                             ; preds = %2412
  %2416 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2417 = load i32, i32* %2416, align 4
  %2418 = icmp sgt i32 %2417, 0
  br i1 %2418, label %2419, label %2429

2419:                                             ; preds = %2415, %2419
  %2420 = phi i32 [ %2426, %2419 ], [ 0, %2415 ]
  %2421 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2422 = bitcast %"class.SkSL::OutputStream"* %2421 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2423 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2422, align 8
  %2424 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2423, i64 2
  %2425 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2424, align 8
  call void %2425(%"class.SkSL::OutputStream"* %2421, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2426 = add nuw nsw i32 %2420, 1
  %2427 = load i32, i32* %2416, align 4
  %2428 = icmp slt i32 %2426, %2427
  br i1 %2428, label %2419, label %2429

2429:                                             ; preds = %2419, %2415, %2412
  %2430 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2431 = bitcast %"class.SkSL::OutputStream"* %2430 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2432 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2431, align 8
  %2433 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2432, i64 2
  %2434 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2433, align 8
  call void %2434(%"class.SkSL::OutputStream"* %2430, i8* %2409) #17
  store i8 0, i8* %2068, align 8
  %2435 = load i8, i8* %2404, align 1
  br label %2436

2436:                                             ; preds = %2395, %2429
  %2437 = phi i8 [ %2405, %2395 ], [ %2435, %2429 ]
  %2438 = icmp slt i8 %2437, 0
  br i1 %2438, label %2439, label %2441

2439:                                             ; preds = %2436
  %2440 = load i8*, i8** %2407, align 8
  call void @_ZdlPv(i8* %2440) #18
  br label %2441

2441:                                             ; preds = %2436, %2439
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2401) #17
  %2442 = load i8, i8* %2068, align 8, !range !2
  %2443 = icmp eq i8 %2442, 0
  br i1 %2443, label %2458, label %2444

2444:                                             ; preds = %2441
  %2445 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2446 = load i32, i32* %2445, align 4
  %2447 = icmp sgt i32 %2446, 0
  br i1 %2447, label %2448, label %2458

2448:                                             ; preds = %2444, %2448
  %2449 = phi i32 [ %2455, %2448 ], [ 0, %2444 ]
  %2450 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2451 = bitcast %"class.SkSL::OutputStream"* %2450 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2452 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2451, align 8
  %2453 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2452, i64 2
  %2454 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2453, align 8
  call void %2454(%"class.SkSL::OutputStream"* %2450, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2455 = add nuw nsw i32 %2449, 1
  %2456 = load i32, i32* %2445, align 4
  %2457 = icmp slt i32 %2455, %2456
  br i1 %2457, label %2448, label %2458

2458:                                             ; preds = %2448, %2441, %2444
  %2459 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2460 = bitcast %"class.SkSL::OutputStream"* %2459 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2461 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2460, align 8
  %2462 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2461, i64 2
  %2463 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2462, align 8
  call void %2463(%"class.SkSL::OutputStream"* %2459, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0)) #17
  store i8 0, i8* %2068, align 8
  %2464 = load i8, i8* %2382, align 1
  %2465 = icmp slt i8 %2464, 0
  %2466 = load i8*, i8** %2140, align 8
  %2467 = select i1 %2465, i8* %2466, i8* %2139
  %2468 = load i8, i8* %2467, align 1
  %2469 = icmp eq i8 %2468, 0
  br i1 %2469, label %2476, label %2470

2470:                                             ; preds = %2458
  %2471 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2472 = bitcast %"class.SkSL::OutputStream"* %2471 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2473 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2472, align 8
  %2474 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2473, i64 2
  %2475 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2474, align 8
  call void %2475(%"class.SkSL::OutputStream"* %2471, i8* %2467) #17
  store i8 0, i8* %2068, align 8
  br label %2476

2476:                                             ; preds = %2458, %2470
  %2477 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2478 = bitcast %"class.SkSL::OutputStream"* %2477 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2479 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2478, align 8
  %2480 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2479, i64 2
  %2481 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2480, align 8
  call void %2481(%"class.SkSL::OutputStream"* %2477, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)) #17
  store i8 0, i8* %2068, align 8
  %2482 = bitcast %"class.SkSL::String"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2483 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2482, i64 0, i32 1, i32 0
  %2484 = load i8, i8* %2483, align 1
  %2485 = icmp slt i8 %2484, 0
  %2486 = load i8*, i8** %2058, align 8
  %2487 = select i1 %2485, i8* %2486, i8* %2057
  %2488 = load i8, i8* %2487, align 1
  %2489 = icmp eq i8 %2488, 0
  br i1 %2489, label %2496, label %2490

2490:                                             ; preds = %2476
  %2491 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2492 = bitcast %"class.SkSL::OutputStream"* %2491 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2493 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2492, align 8
  %2494 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2493, i64 2
  %2495 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2494, align 8
  call void %2495(%"class.SkSL::OutputStream"* %2491, i8* %2487) #17
  store i8 0, i8* %2068, align 8
  br label %2496

2496:                                             ; preds = %2476, %2490
  %2497 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2088, align 8
  %2498 = bitcast %"class.SkSL::OutputStream"* %2497 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2499 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2498, align 8
  %2500 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2499, i64 2
  %2501 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2500, align 8
  call void %2501(%"class.SkSL::OutputStream"* %2497, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0)) #17
  store i8 0, i8* %2068, align 8
  %2502 = load i8, i8* %2382, align 1
  %2503 = icmp slt i8 %2502, 0
  br i1 %2503, label %2504, label %2506

2504:                                             ; preds = %2496
  %2505 = load i8*, i8** %2140, align 8
  call void @_ZdlPv(i8* %2505) #18
  br label %2506

2506:                                             ; preds = %2496, %2504
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2139) #17
  %2507 = load i8, i8* %2483, align 1
  %2508 = icmp slt i8 %2507, 0
  br i1 %2508, label %2509, label %2511

2509:                                             ; preds = %2506
  %2510 = load i8*, i8** %2058, align 8
  call void @_ZdlPv(i8* %2510) #18
  br label %2511

2511:                                             ; preds = %2506, %2509
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2057) #17
  %2512 = load i8, i8* %2095, align 1
  %2513 = icmp slt i8 %2512, 0
  br i1 %2513, label %2514, label %2516

2514:                                             ; preds = %2511
  %2515 = load i8*, i8** %2044, align 8
  call void @_ZdlPv(i8* %2515) #18
  br label %2516

2516:                                             ; preds = %2511, %2514
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2043) #17
  br label %2738

2517:                                             ; preds = %3
  %2518 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2518) #17
  %2519 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2520 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2521 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2520, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2518, i8 -86, i64 24, i1 false) #17
  store i8 14, i8* %2521, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2518, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i64 0, i64 0), i64 14, i1 false) #17
  %2522 = getelementptr inbounds i8, i8* %2518, i64 14
  store i8 0, i8* %2522, align 2
  %2523 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 14, i32 0
  %2524 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_(%"class.std::__1::__tree"* %2523, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #17
  %2525 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %2526 = icmp eq %"class.std::__1::__tree_end_node"* %2524, %2525
  br i1 %2526, label %2527, label %2535

2527:                                             ; preds = %2517
  %2528 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %2523, %"class.SkSL::String"* nonnull dereferenceable(24) %4, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #17
  %2529 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 1, i32 0
  %2530 = bitcast %class.SkWStream* %2529 to i1 (%class.SkWStream*, i8*, i64)***
  %2531 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %2530, align 8
  %2532 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %2531, i64 2
  %2533 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %2532, align 8
  %2534 = call zeroext i1 %2533(%class.SkWStream* %2529, i8* getelementptr inbounds ([235 x i8], [235 x i8]* @_ZN4SkSLL15kMatrixCompMultE, i64 0, i64 0), i64 234) #17
  br label %2535

2535:                                             ; preds = %2527, %2517
  %2536 = load i8, i8* %2521, align 1
  %2537 = icmp slt i8 %2536, 0
  br i1 %2537, label %2538, label %2540

2538:                                             ; preds = %2535
  %2539 = load i8*, i8** %2519, align 8
  call void @_ZdlPv(i8* %2539) #18
  br label %2540

2540:                                             ; preds = %2535, %2538
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2518) #17
  call void @_ZN4SkSL18MetalCodeGenerator20writeSimpleIntrinsicERKNS_12FunctionCallE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %1)
  br label %2738

2541:                                             ; preds = %3, %3, %3, %3, %3, %3
  %2542 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %2543 = load i8, i8* %2542, align 8, !range !2
  %2544 = icmp eq i8 %2543, 0
  br i1 %2544, label %2561, label %2545

2545:                                             ; preds = %2541
  %2546 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2547 = load i32, i32* %2546, align 4
  %2548 = icmp sgt i32 %2547, 0
  br i1 %2548, label %2549, label %2561

2549:                                             ; preds = %2545
  %2550 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %2551

2551:                                             ; preds = %2551, %2549
  %2552 = phi i32 [ 0, %2549 ], [ %2558, %2551 ]
  %2553 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2550, align 8
  %2554 = bitcast %"class.SkSL::OutputStream"* %2553 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2555 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2554, align 8
  %2556 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2555, i64 2
  %2557 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2556, align 8
  tail call void %2557(%"class.SkSL::OutputStream"* %2553, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2558 = add nuw nsw i32 %2552, 1
  %2559 = load i32, i32* %2546, align 4
  %2560 = icmp slt i32 %2558, %2559
  br i1 %2560, label %2551, label %2561

2561:                                             ; preds = %2551, %2541, %2545
  %2562 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %2563 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2564 = bitcast %"class.SkSL::OutputStream"* %2563 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2565 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2564, align 8
  %2566 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2565, i64 2
  %2567 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2566, align 8
  tail call void %2567(%"class.SkSL::OutputStream"* %2563, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %2542, align 8
  %2568 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %2569 = bitcast i8* %2568 to %"class.std::__1::unique_ptr.258"**
  %2570 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %2569, align 8
  %2571 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %2570, i64 0, i32 0, i32 0, i32 0
  %2572 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %2571, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %2572, i32 7)
  switch i32 %2, label %2711 [
    i32 23, label %2573
    i32 58, label %2596
    i32 46, label %2619
    i32 45, label %2642
    i32 37, label %2665
    i32 36, label %2688
  ]

2573:                                             ; preds = %2561
  %2574 = load i8, i8* %2542, align 8, !range !2
  %2575 = icmp eq i8 %2574, 0
  br i1 %2575, label %2590, label %2576

2576:                                             ; preds = %2573
  %2577 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2578 = load i32, i32* %2577, align 4
  %2579 = icmp sgt i32 %2578, 0
  br i1 %2579, label %2580, label %2590

2580:                                             ; preds = %2576, %2580
  %2581 = phi i32 [ %2587, %2580 ], [ 0, %2576 ]
  %2582 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2583 = bitcast %"class.SkSL::OutputStream"* %2582 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2584 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2583, align 8
  %2585 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2584, i64 2
  %2586 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2585, align 8
  tail call void %2586(%"class.SkSL::OutputStream"* %2582, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2587 = add nuw nsw i32 %2581, 1
  %2588 = load i32, i32* %2577, align 4
  %2589 = icmp slt i32 %2587, %2588
  br i1 %2589, label %2580, label %2590

2590:                                             ; preds = %2580, %2573, %2576
  %2591 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2592 = bitcast %"class.SkSL::OutputStream"* %2591 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2593 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2592, align 8
  %2594 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2593, i64 2
  %2595 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2594, align 8
  tail call void %2595(%"class.SkSL::OutputStream"* %2591, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)) #17
  br label %2712

2596:                                             ; preds = %2561
  %2597 = load i8, i8* %2542, align 8, !range !2
  %2598 = icmp eq i8 %2597, 0
  br i1 %2598, label %2613, label %2599

2599:                                             ; preds = %2596
  %2600 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2601 = load i32, i32* %2600, align 4
  %2602 = icmp sgt i32 %2601, 0
  br i1 %2602, label %2603, label %2613

2603:                                             ; preds = %2599, %2603
  %2604 = phi i32 [ %2610, %2603 ], [ 0, %2599 ]
  %2605 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2606 = bitcast %"class.SkSL::OutputStream"* %2605 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2607 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2606, align 8
  %2608 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2607, i64 2
  %2609 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2608, align 8
  tail call void %2609(%"class.SkSL::OutputStream"* %2605, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2610 = add nuw nsw i32 %2604, 1
  %2611 = load i32, i32* %2600, align 4
  %2612 = icmp slt i32 %2610, %2611
  br i1 %2612, label %2603, label %2613

2613:                                             ; preds = %2603, %2596, %2599
  %2614 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2615 = bitcast %"class.SkSL::OutputStream"* %2614 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2616 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2615, align 8
  %2617 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2616, i64 2
  %2618 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2617, align 8
  tail call void %2618(%"class.SkSL::OutputStream"* %2614, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0)) #17
  br label %2712

2619:                                             ; preds = %2561
  %2620 = load i8, i8* %2542, align 8, !range !2
  %2621 = icmp eq i8 %2620, 0
  br i1 %2621, label %2636, label %2622

2622:                                             ; preds = %2619
  %2623 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2624 = load i32, i32* %2623, align 4
  %2625 = icmp sgt i32 %2624, 0
  br i1 %2625, label %2626, label %2636

2626:                                             ; preds = %2622, %2626
  %2627 = phi i32 [ %2633, %2626 ], [ 0, %2622 ]
  %2628 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2629 = bitcast %"class.SkSL::OutputStream"* %2628 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2630 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2629, align 8
  %2631 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2630, i64 2
  %2632 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2631, align 8
  tail call void %2632(%"class.SkSL::OutputStream"* %2628, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2633 = add nuw nsw i32 %2627, 1
  %2634 = load i32, i32* %2623, align 4
  %2635 = icmp slt i32 %2633, %2634
  br i1 %2635, label %2626, label %2636

2636:                                             ; preds = %2626, %2619, %2622
  %2637 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2638 = bitcast %"class.SkSL::OutputStream"* %2637 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2639 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2638, align 8
  %2640 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2639, i64 2
  %2641 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2640, align 8
  tail call void %2641(%"class.SkSL::OutputStream"* %2637, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.83, i64 0, i64 0)) #17
  br label %2712

2642:                                             ; preds = %2561
  %2643 = load i8, i8* %2542, align 8, !range !2
  %2644 = icmp eq i8 %2643, 0
  br i1 %2644, label %2659, label %2645

2645:                                             ; preds = %2642
  %2646 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2647 = load i32, i32* %2646, align 4
  %2648 = icmp sgt i32 %2647, 0
  br i1 %2648, label %2649, label %2659

2649:                                             ; preds = %2645, %2649
  %2650 = phi i32 [ %2656, %2649 ], [ 0, %2645 ]
  %2651 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2652 = bitcast %"class.SkSL::OutputStream"* %2651 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2653 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2652, align 8
  %2654 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2653, i64 2
  %2655 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2654, align 8
  tail call void %2655(%"class.SkSL::OutputStream"* %2651, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2656 = add nuw nsw i32 %2650, 1
  %2657 = load i32, i32* %2646, align 4
  %2658 = icmp slt i32 %2656, %2657
  br i1 %2658, label %2649, label %2659

2659:                                             ; preds = %2649, %2642, %2645
  %2660 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2661 = bitcast %"class.SkSL::OutputStream"* %2660 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2662 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2661, align 8
  %2663 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2662, i64 2
  %2664 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2663, align 8
  tail call void %2664(%"class.SkSL::OutputStream"* %2660, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84, i64 0, i64 0)) #17
  br label %2712

2665:                                             ; preds = %2561
  %2666 = load i8, i8* %2542, align 8, !range !2
  %2667 = icmp eq i8 %2666, 0
  br i1 %2667, label %2682, label %2668

2668:                                             ; preds = %2665
  %2669 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2670 = load i32, i32* %2669, align 4
  %2671 = icmp sgt i32 %2670, 0
  br i1 %2671, label %2672, label %2682

2672:                                             ; preds = %2668, %2672
  %2673 = phi i32 [ %2679, %2672 ], [ 0, %2668 ]
  %2674 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2675 = bitcast %"class.SkSL::OutputStream"* %2674 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2676 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2675, align 8
  %2677 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2676, i64 2
  %2678 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2677, align 8
  tail call void %2678(%"class.SkSL::OutputStream"* %2674, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2679 = add nuw nsw i32 %2673, 1
  %2680 = load i32, i32* %2669, align 4
  %2681 = icmp slt i32 %2679, %2680
  br i1 %2681, label %2672, label %2682

2682:                                             ; preds = %2672, %2665, %2668
  %2683 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2684 = bitcast %"class.SkSL::OutputStream"* %2683 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2685 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2684, align 8
  %2686 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2685, i64 2
  %2687 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2686, align 8
  tail call void %2687(%"class.SkSL::OutputStream"* %2683, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %2712

2688:                                             ; preds = %2561
  %2689 = load i8, i8* %2542, align 8, !range !2
  %2690 = icmp eq i8 %2689, 0
  br i1 %2690, label %2705, label %2691

2691:                                             ; preds = %2688
  %2692 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2693 = load i32, i32* %2692, align 4
  %2694 = icmp sgt i32 %2693, 0
  br i1 %2694, label %2695, label %2705

2695:                                             ; preds = %2691, %2695
  %2696 = phi i32 [ %2702, %2695 ], [ 0, %2691 ]
  %2697 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2698 = bitcast %"class.SkSL::OutputStream"* %2697 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2699 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2698, align 8
  %2700 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2699, i64 2
  %2701 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2700, align 8
  tail call void %2701(%"class.SkSL::OutputStream"* %2697, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2702 = add nuw nsw i32 %2696, 1
  %2703 = load i32, i32* %2692, align 4
  %2704 = icmp slt i32 %2702, %2703
  br i1 %2704, label %2695, label %2705

2705:                                             ; preds = %2695, %2688, %2691
  %2706 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2707 = bitcast %"class.SkSL::OutputStream"* %2706 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2708 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2707, align 8
  %2709 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2708, i64 2
  %2710 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2709, align 8
  tail call void %2710(%"class.SkSL::OutputStream"* %2706, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i64 0, i64 0)) #17
  br label %2712

2711:                                             ; preds = %2561
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.87, i64 0, i64 0), i32 809, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.88, i64 0, i64 0)) #19
  unreachable

2712:                                             ; preds = %2705, %2682, %2659, %2636, %2613, %2590
  store i8 0, i8* %2542, align 8
  %2713 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %2569, align 8
  %2714 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %2713, i64 1, i32 0, i32 0, i32 0
  %2715 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %2714, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %2715, i32 7)
  %2716 = load i8, i8* %2542, align 8, !range !2
  %2717 = icmp eq i8 %2716, 0
  br i1 %2717, label %2732, label %2718

2718:                                             ; preds = %2712
  %2719 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %2720 = load i32, i32* %2719, align 4
  %2721 = icmp sgt i32 %2720, 0
  br i1 %2721, label %2722, label %2732

2722:                                             ; preds = %2718, %2722
  %2723 = phi i32 [ %2729, %2722 ], [ 0, %2718 ]
  %2724 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2725 = bitcast %"class.SkSL::OutputStream"* %2724 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2726 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2725, align 8
  %2727 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2726, i64 2
  %2728 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2727, align 8
  tail call void %2728(%"class.SkSL::OutputStream"* %2724, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %2729 = add nuw nsw i32 %2723, 1
  %2730 = load i32, i32* %2719, align 4
  %2731 = icmp slt i32 %2729, %2730
  br i1 %2731, label %2722, label %2732

2732:                                             ; preds = %2722, %2712, %2718
  %2733 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %2562, align 8
  %2734 = bitcast %"class.SkSL::OutputStream"* %2733 to void (%"class.SkSL::OutputStream"*, i8*)***
  %2735 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %2734, align 8
  %2736 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2735, i64 2
  %2737 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %2736, align 8
  tail call void %2737(%"class.SkSL::OutputStream"* %2733, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %2542, align 8
  br label %2738

2738:                                             ; preds = %3, %1774, %1780, %1662, %1663, %832, %838, %715, %721, %623, %629, %253, %274, %2732, %2540, %2516, %2041, %1856, %1801, %1392, %1349, %1328, %1276, %1215, %1189, %1135, %1081, %980, %906, %537
  %2739 = phi i1 [ true, %2732 ], [ true, %2540 ], [ true, %2516 ], [ true, %2041 ], [ true, %1856 ], [ true, %1801 ], [ true, %1392 ], [ true, %1349 ], [ true, %1328 ], [ true, %1276 ], [ true, %1215 ], [ true, %1189 ], [ true, %1135 ], [ true, %1081 ], [ true, %980 ], [ true, %906 ], [ true, %537 ], [ true, %274 ], [ true, %253 ], [ true, %629 ], [ true, %623 ], [ true, %721 ], [ true, %715 ], [ true, %838 ], [ true, %832 ], [ true, %1663 ], [ true, %1662 ], [ true, %1780 ], [ true, %1774 ], [ false, %3 ]
  ret i1 %2739
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZN4SkSL8Analysis12IsAssignableERNS_10ExpressionEPNS0_14AssignmentInfoEPNS_13ErrorReporterE(%"class.SkSL::Expression"* dereferenceable(24), %"struct.SkSL::Analysis::AssignmentInfo"*, %"class.SkSL::ErrorReporter"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator18getInversePolyfillERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EE(%"class.SkSL::String"* noalias sret, %"class.SkSL::MetalCodeGenerator"*, %class.SkSTArray* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 4294967294
  %9 = icmp eq i64 %8, 2
  br i1 %9, label %10, label %68

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 16
  %12 = bitcast i8* %11 to %"class.std::__1::unique_ptr.258"**
  %13 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %14, align 8
  %16 = bitcast %"class.SkSL::Expression"* %15 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %17 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %17, i64 3
  %19 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %18, align 8
  %20 = tail call dereferenceable(184) %"class.SkSL::Type"* %19(%"class.SkSL::Expression"* %15) #17
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %20, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 4
  br i1 %23, label %24, label %68

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %20, i64 0, i32 9
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %20, i64 0, i32 8
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %68

30:                                               ; preds = %24
  %31 = bitcast %"class.SkSL::String"* %4 to i8*
  %32 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %20)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0)) #17
  %33 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #18
  br label %40

40:                                               ; preds = %30, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  %41 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 14, i32 0
  %42 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %41, %"class.SkSL::String"* dereferenceable(24) %0, %"class.SkSL::String"* dereferenceable(24) %0) #17
  %43 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %42, 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %73, label %45

45:                                               ; preds = %40
  %46 = load i32, i32* %25, align 4
  switch i32 %46, label %73 [
    i32 2, label %47
    i32 3, label %54
    i32 4, label %61
  ]

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 9, i32 1, i32 0
  %49 = bitcast %class.SkWStream* %48 to i1 (%class.SkWStream*, i8*, i64)***
  %50 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %49, align 8
  %51 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %50, i64 2
  %52 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %51, align 8
  %53 = call zeroext i1 %52(%class.SkWStream* %48, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @_ZN4SkSLL11kInverse2x2E, i64 0, i64 0), i64 123) #17
  br label %73

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 9, i32 1, i32 0
  %56 = bitcast %class.SkWStream* %55 to i1 (%class.SkWStream*, i8*, i64)***
  %57 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %57, i64 2
  %59 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %58, align 8
  %60 = call zeroext i1 %59(%class.SkWStream* %55, i8* getelementptr inbounds ([580 x i8], [580 x i8]* @_ZN4SkSLL11kInverse3x3E, i64 0, i64 0), i64 579) #17
  br label %73

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 9, i32 1, i32 0
  %63 = bitcast %class.SkWStream* %62 to i1 (%class.SkWStream*, i8*, i64)***
  %64 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %63, align 8
  %65 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %64, i64 2
  %66 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %65, align 8
  %67 = call zeroext i1 %66(%class.SkWStream* %62, i8* getelementptr inbounds ([1614 x i8], [1614 x i8]* @_ZN4SkSLL11kInverse4x4E, i64 0, i64 0), i64 1613) #17
  br label %73

68:                                               ; preds = %24, %10, %3
  %69 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  store i8 7, i8* %70, align 1
  %71 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i64 0, i64 0), i64 7, i1 false) #17
  %72 = getelementptr inbounds i8, i8* %71, i64 7
  store i8 0, i8* %72, align 1
  br label %73

73:                                               ; preds = %45, %61, %54, %47, %40, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream9writeTextEPKc(%"class.SkSL::StringStream"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1, i32 0
  %4 = tail call i64 @strlen(i8* %1) #20
  %5 = bitcast %class.SkWStream* %3 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkWStream* %3, i8* %1, i64 %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator19writeMatrixCompMultEv(%"class.SkSL::MetalCodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  %4 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  store i8 14, i8* %6, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i64 0, i64 0), i64 14, i1 false) #17
  %8 = getelementptr inbounds i8, i8* %3, i64 14
  store i8 0, i8* %8, align 2
  %9 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 14, i32 0
  %10 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_(%"class.std::__1::__tree"* %9, %"class.SkSL::String"* nonnull dereferenceable(24) %2) #17
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %12 = icmp eq %"class.std::__1::__tree_end_node"* %10, %11
  br i1 %12, label %13, label %21

13:                                               ; preds = %1
  %14 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %9, %"class.SkSL::String"* nonnull dereferenceable(24) %2, %"class.SkSL::String"* nonnull dereferenceable(24) %2) #17
  %15 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 1, i32 0
  %16 = bitcast %class.SkWStream* %15 to i1 (%class.SkWStream*, i8*, i64)***
  %17 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %16, align 8
  %18 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %17, i64 2
  %19 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %18, align 8
  %20 = call zeroext i1 %19(%class.SkWStream* %15, i8* getelementptr inbounds ([235 x i8], [235 x i8]* @_ZN4SkSLL15kMatrixCompMultE, i64 0, i64 0), i64 234) #17
  br label %21

21:                                               ; preds = %13, %1
  %22 = load i8, i8* %6, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = load i8*, i8** %4, align 8
  call void @_ZdlPv(i8* %25) #18
  br label %26

26:                                               ; preds = %21, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator15getTempVariableERKNS_4TypeE(%"class.SkSL::String"* noalias sret, %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Type"* readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = bitcast %"class.SkSL::String"* %4 to i8*
  %11 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #17
  %12 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 10
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %4, i32 %13) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %4) #17
  %15 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #18
  br label %22

22:                                               ; preds = %3, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #17
  %23 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #17
  %24 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #17
  %25 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #17
  %26 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #17
  %27 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %2)
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %9) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, %"class.SkSL::String"* dereferenceable(24) %0) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #17
  %28 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 8
  %29 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %28, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #17
  %30 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #18
  br label %37

37:                                               ; preds = %22, %34
  %38 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #18
  br label %45

45:                                               ; preds = %37, %42
  %46 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #18
  br label %53

53:                                               ; preds = %45, %50
  %54 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #18
  br label %61

61:                                               ; preds = %53, %58
  %62 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #18
  br label %69

69:                                               ; preds = %61, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #17
  ret void
}

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator20writeSimpleIntrinsicERKNS_12FunctionCallE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::FunctionCall"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 1
  %6 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %6, i64 0, i32 0, i32 1, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %6, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %25, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #18
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8
  %24 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %30

25:                                               ; preds = %14
  %26 = trunc i64 %10 to i8
  %27 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 %26, i8* %28, align 1
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %25, %16
  %31 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %27, %25 ], [ %24, %16 ]
  %32 = phi i8* [ %4, %25 ], [ %19, %16 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %8, i64 %10, i1 false) #17
  br label %33

33:                                               ; preds = %25, %30
  %34 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %27, %25 ], [ %31, %30 ]
  %35 = phi i8* [ %4, %25 ], [ %32, %30 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 %10
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = select i1 %39, i8* %41, i8* %4
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %73, label %45

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i32 [ 0, %53 ], [ %62, %55 ]
  %57 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %58 = bitcast %"class.SkSL::OutputStream"* %57 to void (%"class.SkSL::OutputStream"*, i8*)***
  %59 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %59, i64 2
  %61 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %60, align 8
  tail call void %61(%"class.SkSL::OutputStream"* %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %62 = add nuw nsw i32 %56, 1
  %63 = load i32, i32* %50, align 4
  %64 = icmp slt i32 %62, %63
  br i1 %64, label %55, label %65

65:                                               ; preds = %55, %49, %45
  %66 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %67 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %66, align 8
  %68 = bitcast %"class.SkSL::OutputStream"* %67 to void (%"class.SkSL::OutputStream"*, i8*)***
  %69 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %69, i64 2
  %71 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %70, align 8
  call void %71(%"class.SkSL::OutputStream"* %67, i8* %42) #17
  store i8 0, i8* %46, align 8
  %72 = load i8, i8* %37, align 1
  br label %73

73:                                               ; preds = %33, %65
  %74 = phi i8 [ %38, %33 ], [ %72, %65 ]
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %77) #18
  br label %78

78:                                               ; preds = %73, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #17
  %79 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2
  call void @_ZN4SkSL18MetalCodeGenerator17writeArgumentListERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EE(%"class.SkSL::MetalCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %79)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator17writeArgumentListERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EE(%"class.SkSL::MetalCodeGenerator"*, %class.SkSTArray* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i32 [ 0, %10 ], [ %19, %12 ]
  %14 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %11, align 8
  %15 = bitcast %"class.SkSL::OutputStream"* %14 to void (%"class.SkSL::OutputStream"*, i8*)***
  %16 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %16, i64 2
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %17, align 8
  tail call void %18(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %19 = add nuw nsw i32 %13, 1
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %12, label %22

22:                                               ; preds = %12, %2, %6
  %23 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %24 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %25 = bitcast %"class.SkSL::OutputStream"* %24 to void (%"class.SkSL::OutputStream"*, i8*)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, i64 2
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, align 8
  tail call void %28(%"class.SkSL::OutputStream"* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  %29 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %1, i64 0, i32 0, i32 0, i64 16
  %30 = bitcast i8* %29 to %"class.std::__1::unique_ptr.258"**
  %31 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %30, align 8
  %32 = icmp eq %"class.std::__1::unique_ptr.258"* %31, null
  br i1 %32, label %60, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %1, i64 0, i32 0, i32 0, i64 24
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = lshr i64 %36, 1
  %38 = and i64 %37, 2147483647
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %31, i64 %38
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %60, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  br label %66

43:                                               ; preds = %93
  %44 = load i8, i8* %3, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %60, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %46, %50
  %51 = phi i32 [ %57, %50 ], [ 0, %46 ]
  %52 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %53 = bitcast %"class.SkSL::OutputStream"* %52 to void (%"class.SkSL::OutputStream"*, i8*)***
  %54 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %54, i64 2
  %56 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %55, align 8
  tail call void %56(%"class.SkSL::OutputStream"* %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %57 = add nuw nsw i32 %51, 1
  %58 = load i32, i32* %47, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %50, label %60

60:                                               ; preds = %50, %22, %33, %43, %46
  %61 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %62 = bitcast %"class.SkSL::OutputStream"* %61 to void (%"class.SkSL::OutputStream"*, i8*)***
  %63 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, i64 2
  %65 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %64, align 8
  tail call void %65(%"class.SkSL::OutputStream"* %61, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  ret void

66:                                               ; preds = %41, %93
  %67 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), %41 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %93 ]
  %68 = phi %"class.std::__1::unique_ptr.258"* [ %31, %41 ], [ %96, %93 ]
  %69 = load i8, i8* %67, align 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %93, label %71

71:                                               ; preds = %66
  %72 = load i8, i8* %3, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = load i32, i32* %42, align 4
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %87

77:                                               ; preds = %74, %77
  %78 = phi i32 [ %84, %77 ], [ 0, %74 ]
  %79 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %80 = bitcast %"class.SkSL::OutputStream"* %79 to void (%"class.SkSL::OutputStream"*, i8*)***
  %81 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %81, i64 2
  %83 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %82, align 8
  tail call void %83(%"class.SkSL::OutputStream"* %79, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %84 = add nuw nsw i32 %78, 1
  %85 = load i32, i32* %42, align 4
  %86 = icmp slt i32 %84, %85
  br i1 %86, label %77, label %87

87:                                               ; preds = %77, %74, %71
  %88 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %89 = bitcast %"class.SkSL::OutputStream"* %88 to void (%"class.SkSL::OutputStream"*, i8*)***
  %90 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %90, i64 2
  %92 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %91, align 8
  tail call void %92(%"class.SkSL::OutputStream"* %88, i8* %67) #17
  store i8 0, i8* %3, align 8
  br label %93

93:                                               ; preds = %66, %87
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %68, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %94, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %95, i32 17)
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %68, i64 1
  %97 = icmp eq %"class.std::__1::unique_ptr.258"* %96, %39
  br i1 %97, label %43, label %66
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator24assembleMatrixFromMatrixERKNS_4TypeEii(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Type"* nocapture readonly dereferenceable(184), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 0
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 9
  br label %17

10:                                               ; preds = %41, %4
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 1, i32 0
  %12 = bitcast %class.SkWStream* %11 to i1 (%class.SkWStream*, i8*, i64)***
  %13 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %14 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %13, i64 2
  %15 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %14, align 8
  %16 = tail call zeroext i1 %15(%class.SkWStream* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i64 1) #17
  ret void

17:                                               ; preds = %41, %6
  %18 = phi i32 [ 0, %6 ], [ %42, %41 ]
  %19 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), %6 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), %41 ]
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.89, i64 0, i64 0), i8* nonnull %19, i32 %2) #17
  %20 = load i32, i32* %8, align 8
  %21 = icmp slt i32 %18, %20
  br i1 %21, label %22, label %31

22:                                               ; preds = %17
  %23 = load i32, i32* %9, align 4
  %24 = icmp slt i32 %23, %2
  %25 = select i1 %24, i32 %23, i32 %2
  switch i32 %25, label %30 [
    i32 0, label %31
    i32 1, label %26
    i32 2, label %27
    i32 3, label %28
    i32 4, label %29
  ]

26:                                               ; preds = %22
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.90, i64 0, i64 0), i32 %18) #17
  br label %31

27:                                               ; preds = %22
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.91, i64 0, i64 0), i32 %18) #17
  br label %31

28:                                               ; preds = %22
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i64 0, i64 0), i32 %18) #17
  br label %31

29:                                               ; preds = %22
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i64 0, i64 0), i32 %18) #17
  br label %31

30:                                               ; preds = %22
  tail call void @llvm.trap()
  unreachable

31:                                               ; preds = %17, %22, %29, %28, %27, %26
  %32 = phi i32 [ 4, %29 ], [ 3, %28 ], [ 2, %27 ], [ 1, %26 ], [ %25, %22 ], [ 0, %17 ]
  %33 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %29 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %28 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %27 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %26 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), %22 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), %17 ]
  %34 = icmp slt i32 %32, %2
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = icmp eq i32 %32, %18
  %37 = select i1 %36, [4 x i8]* @.str.95, [4 x i8]* @.str.96
  %38 = getelementptr inbounds [4 x i8], [4 x i8]* %37, i64 0, i64 0
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.94, i64 0, i64 0), i8* %33, i8* nonnull %38) #17
  %39 = add nuw i32 %32, 1
  %40 = icmp eq i32 %39, %2
  br i1 %40, label %41, label %44

41:                                               ; preds = %35, %44, %31
  %42 = add nuw nsw i32 %18, 1
  %43 = icmp eq i32 %42, %3
  br i1 %43, label %10, label %17

44:                                               ; preds = %35, %44
  %45 = phi i32 [ %49, %44 ], [ %39, %35 ]
  %46 = icmp eq i32 %45, %18
  %47 = select i1 %46, [4 x i8]* @.str.95, [4 x i8]* @.str.96
  %48 = getelementptr inbounds [4 x i8], [4 x i8]* %47, i64 0, i64 0
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8* nonnull %48) #17
  %49 = add nuw i32 %45, 1
  %50 = icmp eq i32 %49, %2
  br i1 %50, label %41, label %44, !llvm.loop !12
}

declare void @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"*, i8*, ...) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator29assembleMatrixFromExpressionsERKNS_14AnyConstructorEii(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::AnyConstructor"* dereferenceable(32), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %6 = load { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %5, align 8
  %7 = getelementptr inbounds { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)** %6, i64 12
  %8 = load { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)** %7, align 8
  %9 = tail call { %"class.std::__1::unique_ptr.258"*, i64 } %8(%"class.SkSL::AnyConstructor"* %1) #17
  %10 = extractvalue { %"class.std::__1::unique_ptr.258"*, i64 } %9, 0
  %11 = extractvalue { %"class.std::__1::unique_ptr.258"*, i64 } %9, 1
  %12 = icmp sgt i32 %3, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 0
  %15 = icmp sgt i32 %2, 0
  %16 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 1, i32 0
  %17 = bitcast %class.SkWStream* %16 to i1 (%class.SkWStream*, i8*, i64)***
  %18 = icmp eq i32 %2, 1
  br label %25

19:                                               ; preds = %78, %4
  %20 = phi i64 [ 0, %4 ], [ %79, %78 ]
  %21 = phi i32 [ 0, %4 ], [ %80, %78 ]
  %22 = icmp eq i32 %21, 0
  %23 = icmp eq i64 %20, %11
  %24 = and i1 %23, %22
  br i1 %24, label %143, label %136

25:                                               ; preds = %78, %13
  %26 = phi i32 [ 0, %13 ], [ %81, %78 ]
  %27 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), %13 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), %78 ]
  %28 = phi i32 [ 0, %13 ], [ %80, %78 ]
  %29 = phi i64 [ 0, %13 ], [ %79, %78 ]
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.89, i64 0, i64 0), i8* nonnull %27, i32 %2) #17
  br i1 %15, label %30, label %78

30:                                               ; preds = %25
  %31 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %17, align 8
  %32 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %31, i64 2
  %33 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %32, align 8
  %34 = tail call zeroext i1 %33(%class.SkWStream* %16, i8* nonnull getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i64 0) #17
  %35 = icmp ult i64 %29, %11
  br i1 %35, label %41, label %36

36:                                               ; preds = %30
  %37 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %17, align 8
  %38 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %37, i64 2
  %39 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %38, align 8
  %40 = tail call zeroext i1 %39(%class.SkWStream* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.100, i64 0, i64 0), i64 7) #17
  br label %75

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %10, i64 %29, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  %44 = bitcast %"class.SkSL::Expression"* %43 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %45 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %45, i64 3
  %47 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %46, align 8
  %48 = tail call dereferenceable(184) %"class.SkSL::Type"* %47(%"class.SkSL::Expression"* %43) #17
  %49 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  switch i32 %50, label %58 [
    i32 8, label %57
    i32 11, label %56
    i32 4, label %51
  ]

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 9
  %53 = load i32, i32* %52, align 4
  %54 = sdiv i32 %28, %53
  %55 = srem i32 %28, %53
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i64 0, i64 0), i64 %29, i32 %54, i32 %55) #17
  br label %63

56:                                               ; preds = %41
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.98, i64 0, i64 0), i64 %29, i32 %28) #17
  br label %63

57:                                               ; preds = %41
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i64 0, i64 0), i64 %29) #17
  br label %63

58:                                               ; preds = %41
  %59 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %17, align 8
  %60 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %59, i64 2
  %61 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %60, align 8
  %62 = tail call zeroext i1 %61(%class.SkWStream* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.100, i64 0, i64 0), i64 7) #17
  br label %63

63:                                               ; preds = %58, %57, %56, %51
  %64 = add nsw i32 %28, 1
  %65 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 8
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 9
  %68 = load i32, i32* %67, align 4
  %69 = mul nsw i32 %68, %66
  %70 = icmp slt i32 %64, %69
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i64
  %73 = add nuw i64 %29, %72
  %74 = select i1 %70, i32 %64, i32 0
  br label %75

75:                                               ; preds = %63, %36
  %76 = phi i64 [ %73, %63 ], [ %29, %36 ]
  %77 = phi i32 [ %74, %63 ], [ %28, %36 ]
  br i1 %18, label %78, label %83

78:                                               ; preds = %75, %131, %25
  %79 = phi i64 [ %29, %25 ], [ %76, %75 ], [ %132, %131 ]
  %80 = phi i32 [ %28, %25 ], [ %77, %75 ], [ %133, %131 ]
  %81 = add nuw nsw i32 %26, 1
  %82 = icmp eq i32 %81, %3
  br i1 %82, label %19, label %25

83:                                               ; preds = %75, %131
  %84 = phi i32 [ %134, %131 ], [ 1, %75 ]
  %85 = phi i32 [ %133, %131 ], [ %77, %75 ]
  %86 = phi i64 [ %132, %131 ], [ %76, %75 ]
  %87 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %17, align 8
  %88 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %87, i64 2
  %89 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %88, align 8
  %90 = tail call zeroext i1 %89(%class.SkWStream* %16, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i64 2) #17
  %91 = icmp ult i64 %86, %11
  br i1 %91, label %92, label %126

92:                                               ; preds = %83
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %10, i64 %86, i32 0, i32 0, i32 0
  %94 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %93, align 8
  %95 = bitcast %"class.SkSL::Expression"* %94 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %96 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %95, align 8
  %97 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %96, i64 3
  %98 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %97, align 8
  %99 = tail call dereferenceable(184) %"class.SkSL::Type"* %98(%"class.SkSL::Expression"* %94) #17
  %100 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %99, i64 0, i32 3
  %101 = load i32, i32* %100, align 8
  switch i32 %101, label %109 [
    i32 8, label %102
    i32 11, label %103
    i32 4, label %104
  ]

102:                                              ; preds = %92
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i64 0, i64 0), i64 %86) #17
  br label %114

103:                                              ; preds = %92
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.98, i64 0, i64 0), i64 %86, i32 %85) #17
  br label %114

104:                                              ; preds = %92
  %105 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %99, i64 0, i32 9
  %106 = load i32, i32* %105, align 4
  %107 = sdiv i32 %85, %106
  %108 = srem i32 %85, %106
  tail call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i64 0, i64 0), i64 %86, i32 %107, i32 %108) #17
  br label %114

109:                                              ; preds = %92
  %110 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %17, align 8
  %111 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %110, i64 2
  %112 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %111, align 8
  %113 = tail call zeroext i1 %112(%class.SkWStream* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.100, i64 0, i64 0), i64 7) #17
  br label %114

114:                                              ; preds = %109, %104, %103, %102
  %115 = add nsw i32 %85, 1
  %116 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %99, i64 0, i32 8
  %117 = load i32, i32* %116, align 8
  %118 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %99, i64 0, i32 9
  %119 = load i32, i32* %118, align 4
  %120 = mul nsw i32 %119, %117
  %121 = icmp slt i32 %115, %120
  %122 = xor i1 %121, true
  %123 = zext i1 %122 to i64
  %124 = add nuw i64 %86, %123
  %125 = select i1 %121, i32 %115, i32 0
  br label %131

126:                                              ; preds = %83
  %127 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %17, align 8
  %128 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %127, i64 2
  %129 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %128, align 8
  %130 = tail call zeroext i1 %129(%class.SkWStream* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.100, i64 0, i64 0), i64 7) #17
  br label %131

131:                                              ; preds = %114, %126
  %132 = phi i64 [ %124, %114 ], [ %86, %126 ]
  %133 = phi i32 [ %125, %114 ], [ %85, %126 ]
  %134 = add nuw nsw i32 %84, 1
  %135 = icmp eq i32 %134, %2
  br i1 %135, label %78, label %83, !llvm.loop !14

136:                                              ; preds = %19
  %137 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 1, i32 0
  %138 = bitcast %class.SkWStream* %137 to i1 (%class.SkWStream*, i8*, i64)***
  %139 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %138, align 8
  %140 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %139, i64 2
  %141 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %140, align 8
  %142 = tail call zeroext i1 %141(%class.SkWStream* %137, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.101, i64 0, i64 0), i64 9) #17
  br label %143

143:                                              ; preds = %19, %136
  %144 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 1, i32 0
  %145 = bitcast %class.SkWStream* %144 to i1 (%class.SkWStream*, i8*, i64)***
  %146 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %145, align 8
  %147 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %146, i64 2
  %148 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %147, align 8
  %149 = tail call zeroext i1 %148(%class.SkWStream* %144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i64 1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator24getMatrixConstructHelperERKNS_14AnyConstructorE(%"class.SkSL::String"* noalias sret, %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::AnyConstructor"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %2, i64 0, i32 0
  %7 = bitcast %"class.SkSL::AnyConstructor"* %2 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %8 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %8, i64 3
  %10 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %9, align 8
  %11 = tail call dereferenceable(184) %"class.SkSL::Type"* %10(%"class.SkSL::Expression"* %6) #17
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %11, i64 0, i32 8
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %11, i64 0, i32 9
  %15 = load i32, i32* %14, align 4
  %16 = bitcast %"class.SkSL::AnyConstructor"* %2 to { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %17 = load { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %16, align 8
  %18 = getelementptr inbounds { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)** %17, i64 12
  %19 = load { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)** %18, align 8
  %20 = tail call { %"class.std::__1::unique_ptr.258"*, i64 } %19(%"class.SkSL::AnyConstructor"* %2) #17
  %21 = extractvalue { %"class.std::__1::unique_ptr.258"*, i64 } %20, 0
  %22 = extractvalue { %"class.std::__1::unique_ptr.258"*, i64 } %20, 1
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #17
  tail call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String7appendfEPKcz(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.102, i64 0, i64 0), i32 %13, i32 %15) #17
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %21, i64 %22
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %3
  %28 = bitcast %"class.SkSL::String"* %4 to i8*
  %29 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %37

32:                                               ; preds = %54, %3
  %33 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 21, i32 0
  %34 = call { %"struct.std::__1::__hash_node_base.114"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.110"* %33, %"class.SkSL::String"* dereferenceable(24) %0, %"class.SkSL::String"* dereferenceable(24) %0) #17
  %35 = extractvalue { %"struct.std::__1::__hash_node_base.114"*, i8 } %34, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %139, label %57

37:                                               ; preds = %27, %54
  %38 = phi %"class.std::__1::unique_ptr.258"* [ %21, %27 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #17
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %39, align 8
  %41 = bitcast %"class.SkSL::Expression"* %40 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %42 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %42, i64 3
  %44 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %43, align 8
  %45 = call dereferenceable(184) %"class.SkSL::Type"* %44(%"class.SkSL::Expression"* %40) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %45)
  %46 = load i8, i8* %30, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i8*, i8** %31, align 8
  %49 = select i1 %47, i8* %48, i8* %28
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String7appendfEPKcz(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i64 0, i64 0), i8* %49) #17
  %50 = load i8, i8* %30, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %53) #18
  br label %54

54:                                               ; preds = %37, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #17
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %38, i64 1
  %56 = icmp eq %"class.std::__1::unique_ptr.258"* %55, %25
  br i1 %56, label %32, label %37

57:                                               ; preds = %32
  %58 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 9, i32 0
  %59 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = load i8*, i8** %23, align 8
  %64 = select i1 %62, i8* %63, i8* %24
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %58, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.104, i64 0, i64 0), i32 %13, i32 %15, i8* %64) #17
  br i1 %26, label %65, label %66

65:                                               ; preds = %57
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %58, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.106, i64 0, i64 0), i32 %13, i32 %15) #17
  br label %131

66:                                               ; preds = %57
  %67 = bitcast %"class.SkSL::String"* %5 to i8*
  %68 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #17
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %21, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %71, align 8
  %73 = bitcast %"class.SkSL::Expression"* %72 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %74 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %74, i64 3
  %76 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %75, align 8
  %77 = call dereferenceable(184) %"class.SkSL::Type"* %76(%"class.SkSL::Expression"* %72) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %77)
  %78 = load i8, i8* %69, align 1
  %79 = icmp slt i8 %78, 0
  %80 = load i8*, i8** %70, align 8
  %81 = select i1 %79, i8* %80, i8* %67
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %58, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i8* nonnull getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i8* %81, i64 0) #17
  %82 = load i8, i8* %69, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %66
  %85 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %85) #18
  br label %86

86:                                               ; preds = %84, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #17
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %21, i64 1
  %88 = icmp eq i64 %22, 1
  br i1 %88, label %89, label %91

89:                                               ; preds = %110, %86
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %58, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.106, i64 0, i64 0), i32 %13, i32 %15) #17
  %90 = icmp eq i64 %22, 1
  br i1 %90, label %113, label %131

91:                                               ; preds = %86, %110
  %92 = phi %"class.std::__1::unique_ptr.258"* [ %111, %110 ], [ %87, %86 ]
  %93 = phi i64 [ %105, %110 ], [ 1, %86 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #17
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %92, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %94, align 8
  %96 = bitcast %"class.SkSL::Expression"* %95 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %97 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %96, align 8
  %98 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %97, i64 3
  %99 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %98, align 8
  %100 = call dereferenceable(184) %"class.SkSL::Type"* %99(%"class.SkSL::Expression"* %95) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %100)
  %101 = load i8, i8* %69, align 1
  %102 = icmp slt i8 %101, 0
  %103 = load i8*, i8** %70, align 8
  %104 = select i1 %102, i8* %103, i8* %67
  %105 = add nuw nsw i64 %93, 1
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %58, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8* %104, i64 %93) #17
  %106 = load i8, i8* %69, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %91
  %109 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %109) #18
  br label %110

110:                                              ; preds = %91, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #17
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %92, i64 1
  %112 = icmp eq %"class.std::__1::unique_ptr.258"* %111, %25
  br i1 %112, label %89, label %91, !llvm.loop !15

113:                                              ; preds = %89
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %21, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %114, align 8
  %116 = bitcast %"class.SkSL::Expression"* %115 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %117 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %116, align 8
  %118 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %117, i64 3
  %119 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %118, align 8
  %120 = call dereferenceable(184) %"class.SkSL::Type"* %119(%"class.SkSL::Expression"* %115) #17
  %121 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 3
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 4
  br i1 %123, label %124, label %131

124:                                              ; preds = %113
  %125 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %114, align 8
  %126 = bitcast %"class.SkSL::Expression"* %125 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %127 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %126, align 8
  %128 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %127, i64 3
  %129 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %128, align 8
  %130 = call dereferenceable(184) %"class.SkSL::Type"* %129(%"class.SkSL::Expression"* %125) #17
  call void @_ZN4SkSL18MetalCodeGenerator24assembleMatrixFromMatrixERKNS_4TypeEii(%"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %130, i32 %15, i32 %13)
  br label %132

131:                                              ; preds = %65, %113, %89
  call void @_ZN4SkSL18MetalCodeGenerator29assembleMatrixFromExpressionsERKNS_14AnyConstructorEii(%"class.SkSL::MetalCodeGenerator"* %1, %"class.SkSL::AnyConstructor"* dereferenceable(32) %2, i32 %15, i32 %13)
  br label %132

132:                                              ; preds = %131, %124
  %133 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %1, i64 0, i32 9, i32 1, i32 0
  %134 = bitcast %class.SkWStream* %133 to i1 (%class.SkWStream*, i8*, i64)***
  %135 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %134, align 8
  %136 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %135, i64 2
  %137 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %136, align 8
  %138 = call zeroext i1 %137(%class.SkWStream* %133, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0), i64 5) #17
  br label %139

139:                                              ; preds = %32, %132
  ret void
}

declare void @_ZN4SkSL6String7appendfEPKcz(%"class.SkSL::String"*, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4SkSL18MetalCodeGenerator9canCoerceERKNS_4TypeES3_(%"class.SkSL::MetalCodeGenerator"* nocapture readnone, %"class.SkSL::Type"* nocapture readonly dereferenceable(184), %"class.SkSL::Type"* nocapture readonly dereferenceable(184)) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %42

9:                                                ; preds = %3, %20
  %10 = phi i32 [ %30, %20 ], [ %5, %3 ]
  %11 = phi %"class.SkSL::Type"* [ %28, %20 ], [ %2, %3 ]
  %12 = phi %"class.SkSL::Type"* [ %24, %20 ], [ %1, %3 ]
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 9
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %11, i64 0, i32 9
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %42

18:                                               ; preds = %9
  %19 = icmp sgt i32 %10, 1
  br i1 %19, label %20, label %34

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 6
  %22 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %21, align 8
  %23 = icmp eq %"class.SkSL::Type"* %22, null
  %24 = select i1 %23, %"class.SkSL::Type"* %12, %"class.SkSL::Type"* %22
  %25 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %11, i64 0, i32 6
  %26 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %25, align 8
  %27 = icmp eq %"class.SkSL::Type"* %26, null
  %28 = select i1 %27, %"class.SkSL::Type"* %11, %"class.SkSL::Type"* %26
  %29 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %24, i64 0, i32 8
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %28, i64 0, i32 8
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %9, label %42

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %11, i64 0, i32 4
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br label %42

42:                                               ; preds = %9, %20, %3, %34, %38
  %43 = phi i1 [ false, %34 ], [ %41, %38 ], [ false, %3 ], [ false, %20 ], [ false, %9 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL18MetalCodeGenerator29matrixConstructHelperIsNeededERKNS_19ConstructorCompoundE(%"class.SkSL::MetalCodeGenerator"* nocapture readnone, %"class.SkSL::ConstructorCompound"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.std::__1::unique_ptr.258"**
  %5 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.258"* %5, null
  br i1 %6, label %49, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = lshr i64 %10, 1
  %12 = and i64 %11, 2147483647
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %5, i64 %12
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %49, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %17

17:                                               ; preds = %15, %44
  %18 = phi %"class.std::__1::unique_ptr.258"* [ %5, %15 ], [ %47, %44 ]
  %19 = phi i32 [ 0, %15 ], [ %46, %44 ]
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %18, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %20, align 8
  %22 = bitcast %"class.SkSL::Expression"* %21 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %23 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %23, i64 3
  %25 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %24, align 8
  %26 = tail call dereferenceable(184) %"class.SkSL::Type"* %25(%"class.SkSL::Expression"* %21) #17
  %27 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %26, i64 0, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 4
  br i1 %29, label %49, label %30

30:                                               ; preds = %17
  %31 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %20, align 8
  %32 = bitcast %"class.SkSL::Expression"* %31 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %33 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %33, i64 3
  %35 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %34, align 8
  %36 = tail call dereferenceable(184) %"class.SkSL::Type"* %35(%"class.SkSL::Expression"* %31) #17
  %37 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %36, i64 0, i32 8
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, %19
  %40 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %16, align 8
  %41 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %40, i64 0, i32 9
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %39, %42
  br i1 %43, label %49, label %44

44:                                               ; preds = %30
  %45 = icmp eq i32 %39, %42
  %46 = select i1 %45, i32 0, i32 %39
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %18, i64 1
  %48 = icmp eq %"class.std::__1::unique_ptr.258"* %47, %13
  br i1 %48, label %49, label %17

49:                                               ; preds = %17, %30, %44, %2, %7
  %50 = phi i1 [ false, %7 ], [ false, %2 ], [ false, %44 ], [ true, %30 ], [ true, %17 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator30writeConstructorCompoundMatrixERKNS_19ConstructorCompoundENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::ConstructorCompound"* dereferenceable(64), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 16
  %8 = bitcast i8* %7 to %"class.std::__1::unique_ptr.258"**
  %9 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.258"* %9, null
  br i1 %10, label %190, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %14, 1
  %16 = and i64 %15, 2147483647
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %9, i64 %16
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %190, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %21

21:                                               ; preds = %48, %19
  %22 = phi %"class.std::__1::unique_ptr.258"* [ %9, %19 ], [ %51, %48 ]
  %23 = phi i32 [ 0, %19 ], [ %50, %48 ]
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %24, align 8
  %26 = bitcast %"class.SkSL::Expression"* %25 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %27 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %27, i64 3
  %29 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %28, align 8
  %30 = tail call dereferenceable(184) %"class.SkSL::Type"* %29(%"class.SkSL::Expression"* %25) #17
  %31 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %30, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 4
  br i1 %33, label %53, label %34

34:                                               ; preds = %21
  %35 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %24, align 8
  %36 = bitcast %"class.SkSL::Expression"* %35 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %37 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %37, i64 3
  %39 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %38, align 8
  %40 = tail call dereferenceable(184) %"class.SkSL::Type"* %39(%"class.SkSL::Expression"* %35) #17
  %41 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %40, i64 0, i32 8
  %42 = load i32, i32* %41, align 8
  %43 = add nsw i32 %42, %23
  %44 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %20, align 8
  %45 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %44, i64 0, i32 9
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %43, %46
  br i1 %47, label %53, label %48

48:                                               ; preds = %34
  %49 = icmp eq i32 %43, %46
  %50 = select i1 %49, i32 0, i32 %43
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %22, i64 1
  %52 = icmp eq %"class.std::__1::unique_ptr.258"* %51, %17
  br i1 %52, label %190, label %21

53:                                               ; preds = %34, %21
  %54 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #17
  %55 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 0
  call void @_ZN4SkSL18MetalCodeGenerator24getMatrixConstructHelperERKNS_14AnyConstructorE(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %55)
  %56 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = select i1 %59, i8* %61, i8* %54
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %93, label %65

65:                                               ; preds = %53
  %66 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %85, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i32 [ 0, %73 ], [ %82, %75 ]
  %77 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %74, align 8
  %78 = bitcast %"class.SkSL::OutputStream"* %77 to void (%"class.SkSL::OutputStream"*, i8*)***
  %79 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, i64 2
  %81 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %80, align 8
  call void %81(%"class.SkSL::OutputStream"* %77, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %82 = add nuw nsw i32 %76, 1
  %83 = load i32, i32* %70, align 4
  %84 = icmp slt i32 %82, %83
  br i1 %84, label %75, label %85

85:                                               ; preds = %75, %69, %65
  %86 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %87 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %88 = bitcast %"class.SkSL::OutputStream"* %87 to void (%"class.SkSL::OutputStream"*, i8*)***
  %89 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %89, i64 2
  %91 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %90, align 8
  call void %91(%"class.SkSL::OutputStream"* %87, i8* %62) #17
  store i8 0, i8* %66, align 8
  %92 = load i8, i8* %57, align 1
  br label %93

93:                                               ; preds = %53, %85
  %94 = phi i8 [ %58, %53 ], [ %92, %85 ]
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %93
  %97 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %97) #18
  br label %98

98:                                               ; preds = %93, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #17
  %99 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %100 = load i8, i8* %99, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %104 = load i32, i32* %103, align 4
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %108

108:                                              ; preds = %108, %106
  %109 = phi i32 [ 0, %106 ], [ %115, %108 ]
  %110 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %107, align 8
  %111 = bitcast %"class.SkSL::OutputStream"* %110 to void (%"class.SkSL::OutputStream"*, i8*)***
  %112 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %112, i64 2
  %114 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %113, align 8
  call void %114(%"class.SkSL::OutputStream"* %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %115 = add nuw nsw i32 %109, 1
  %116 = load i32, i32* %103, align 4
  %117 = icmp slt i32 %115, %116
  br i1 %117, label %108, label %118

118:                                              ; preds = %108, %98, %102
  %119 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %120 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %119, align 8
  %121 = bitcast %"class.SkSL::OutputStream"* %120 to void (%"class.SkSL::OutputStream"*, i8*)***
  %122 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %122, i64 2
  %124 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %123, align 8
  call void %124(%"class.SkSL::OutputStream"* %120, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %99, align 8
  %125 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %8, align 8
  %126 = icmp eq %"class.std::__1::unique_ptr.258"* %125, null
  br i1 %126, label %152, label %127

127:                                              ; preds = %118
  %128 = load i64, i64* %13, align 8
  %129 = lshr i64 %128, 1
  %130 = and i64 %129, 2147483647
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %125, i64 %130
  %132 = icmp eq i64 %130, 0
  br i1 %132, label %152, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  br label %158

135:                                              ; preds = %185
  %136 = load i8, i8* %99, align 8, !range !2
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %152, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %140 = load i32, i32* %139, align 4
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %142, label %152

142:                                              ; preds = %138, %142
  %143 = phi i32 [ %149, %142 ], [ 0, %138 ]
  %144 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %119, align 8
  %145 = bitcast %"class.SkSL::OutputStream"* %144 to void (%"class.SkSL::OutputStream"*, i8*)***
  %146 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %146, i64 2
  %148 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %147, align 8
  call void %148(%"class.SkSL::OutputStream"* %144, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %149 = add nuw nsw i32 %143, 1
  %150 = load i32, i32* %139, align 4
  %151 = icmp slt i32 %149, %150
  br i1 %151, label %142, label %152

152:                                              ; preds = %142, %118, %127, %135, %138
  %153 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %119, align 8
  %154 = bitcast %"class.SkSL::OutputStream"* %153 to void (%"class.SkSL::OutputStream"*, i8*)***
  %155 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %155, i64 2
  %157 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %156, align 8
  call void %157(%"class.SkSL::OutputStream"* %153, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  br label %453

158:                                              ; preds = %133, %185
  %159 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), %133 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %185 ]
  %160 = phi %"class.std::__1::unique_ptr.258"* [ %125, %133 ], [ %188, %185 ]
  %161 = load i8, i8* %159, align 1
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %185, label %163

163:                                              ; preds = %158
  %164 = load i8, i8* %99, align 8, !range !2
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %179, label %166

166:                                              ; preds = %163
  %167 = load i32, i32* %134, align 4
  %168 = icmp sgt i32 %167, 0
  br i1 %168, label %169, label %179

169:                                              ; preds = %166, %169
  %170 = phi i32 [ %176, %169 ], [ 0, %166 ]
  %171 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %119, align 8
  %172 = bitcast %"class.SkSL::OutputStream"* %171 to void (%"class.SkSL::OutputStream"*, i8*)***
  %173 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %172, align 8
  %174 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %173, i64 2
  %175 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %174, align 8
  call void %175(%"class.SkSL::OutputStream"* %171, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %176 = add nuw nsw i32 %170, 1
  %177 = load i32, i32* %134, align 4
  %178 = icmp slt i32 %176, %177
  br i1 %178, label %169, label %179

179:                                              ; preds = %169, %166, %163
  %180 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %119, align 8
  %181 = bitcast %"class.SkSL::OutputStream"* %180 to void (%"class.SkSL::OutputStream"*, i8*)***
  %182 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %182, i64 2
  %184 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %183, align 8
  call void %184(%"class.SkSL::OutputStream"* %180, i8* %159) #17
  store i8 0, i8* %99, align 8
  br label %185

185:                                              ; preds = %158, %179
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %160, i64 0, i32 0, i32 0, i32 0
  %187 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %186, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %187, i32 17)
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %160, i64 1
  %189 = icmp eq %"class.std::__1::unique_ptr.258"* %188, %131
  br i1 %189, label %135, label %158

190:                                              ; preds = %48, %11, %3
  %191 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %192 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %191, align 8
  %193 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %192, i64 0, i32 6
  %194 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %193, align 8
  %195 = icmp eq %"class.SkSL::Type"* %194, null
  %196 = select i1 %195, %"class.SkSL::Type"* %192, %"class.SkSL::Type"* %194
  %197 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 7
  %198 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %197, align 8
  %199 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %192, i64 0, i32 9
  %200 = load i32, i32* %199, align 4
  %201 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %196, %"class.SkSL::Context"* dereferenceable(744) %198, i32 %200, i32 1) #17
  %202 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %202) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %192) #17
  %203 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  %207 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = select i1 %206, i8* %208, i8* %202
  %210 = load i8, i8* %209, align 1
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %240, label %212

212:                                              ; preds = %190
  %213 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %214 = load i8, i8* %213, align 8, !range !2
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %232, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %218 = load i32, i32* %217, align 4
  %219 = icmp sgt i32 %218, 0
  br i1 %219, label %220, label %232

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %222

222:                                              ; preds = %222, %220
  %223 = phi i32 [ 0, %220 ], [ %229, %222 ]
  %224 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %221, align 8
  %225 = bitcast %"class.SkSL::OutputStream"* %224 to void (%"class.SkSL::OutputStream"*, i8*)***
  %226 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %225, align 8
  %227 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %226, i64 2
  %228 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %227, align 8
  call void %228(%"class.SkSL::OutputStream"* %224, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %229 = add nuw nsw i32 %223, 1
  %230 = load i32, i32* %217, align 4
  %231 = icmp slt i32 %229, %230
  br i1 %231, label %222, label %232

232:                                              ; preds = %222, %216, %212
  %233 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %234 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %233, align 8
  %235 = bitcast %"class.SkSL::OutputStream"* %234 to void (%"class.SkSL::OutputStream"*, i8*)***
  %236 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %235, align 8
  %237 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %236, i64 2
  %238 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %237, align 8
  call void %238(%"class.SkSL::OutputStream"* %234, i8* %209) #17
  store i8 0, i8* %213, align 8
  %239 = load i8, i8* %204, align 1
  br label %240

240:                                              ; preds = %232, %190
  %241 = phi i8 [ %205, %190 ], [ %239, %232 ]
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %245

243:                                              ; preds = %240
  %244 = load i8*, i8** %207, align 8
  call void @_ZdlPv(i8* %244) #18
  br label %245

245:                                              ; preds = %240, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %202) #17
  %246 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %247 = load i8, i8* %246, align 8, !range !2
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %265, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %251 = load i32, i32* %250, align 4
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %253, label %265

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %255

255:                                              ; preds = %255, %253
  %256 = phi i32 [ 0, %253 ], [ %262, %255 ]
  %257 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %254, align 8
  %258 = bitcast %"class.SkSL::OutputStream"* %257 to void (%"class.SkSL::OutputStream"*, i8*)***
  %259 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %258, align 8
  %260 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %259, i64 2
  %261 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %260, align 8
  call void %261(%"class.SkSL::OutputStream"* %257, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %262 = add nuw nsw i32 %256, 1
  %263 = load i32, i32* %250, align 4
  %264 = icmp slt i32 %262, %263
  br i1 %264, label %255, label %265

265:                                              ; preds = %255, %245, %249
  %266 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %267 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %266, align 8
  %268 = bitcast %"class.SkSL::OutputStream"* %267 to void (%"class.SkSL::OutputStream"*, i8*)***
  %269 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %268, align 8
  %270 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %269, i64 2
  %271 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %270, align 8
  call void %271(%"class.SkSL::OutputStream"* %267, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %246, align 8
  %272 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %8, align 8
  %273 = icmp eq %"class.std::__1::unique_ptr.258"* %272, null
  br i1 %273, label %305, label %274

274:                                              ; preds = %265
  %275 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 24
  %276 = bitcast i8* %275 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = lshr i64 %277, 1
  %279 = and i64 %278, 2147483647
  %280 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %272, i64 %279
  %281 = icmp eq i64 %279, 0
  br i1 %281, label %305, label %282

282:                                              ; preds = %274
  %283 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %284 = bitcast %"class.SkSL::String"* %4 to i8*
  %285 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %286 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %285, i64 0, i32 1, i32 0
  %287 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %311

288:                                              ; preds = %449
  %289 = load i8, i8* %246, align 8, !range !2
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %305, label %291

291:                                              ; preds = %288
  %292 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %293 = load i32, i32* %292, align 4
  %294 = icmp sgt i32 %293, 0
  br i1 %294, label %295, label %305

295:                                              ; preds = %291, %295
  %296 = phi i32 [ %302, %295 ], [ 0, %291 ]
  %297 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %266, align 8
  %298 = bitcast %"class.SkSL::OutputStream"* %297 to void (%"class.SkSL::OutputStream"*, i8*)***
  %299 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %298, align 8
  %300 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %299, i64 2
  %301 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %300, align 8
  call void %301(%"class.SkSL::OutputStream"* %297, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %302 = add nuw nsw i32 %296, 1
  %303 = load i32, i32* %292, align 4
  %304 = icmp slt i32 %302, %303
  br i1 %304, label %295, label %305

305:                                              ; preds = %295, %265, %274, %288, %291
  %306 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %266, align 8
  %307 = bitcast %"class.SkSL::OutputStream"* %306 to void (%"class.SkSL::OutputStream"*, i8*)***
  %308 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %307, align 8
  %309 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %308, i64 2
  %310 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %309, align 8
  call void %310(%"class.SkSL::OutputStream"* %306, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  br label %453

311:                                              ; preds = %282, %449
  %312 = phi %"class.std::__1::unique_ptr.258"* [ %272, %282 ], [ %451, %449 ]
  %313 = phi i32 [ 0, %282 ], [ %450, %449 ]
  %314 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), %282 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %449 ]
  %315 = load i8, i8* %314, align 1
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %339, label %317

317:                                              ; preds = %311
  %318 = load i8, i8* %246, align 8, !range !2
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %333, label %320

320:                                              ; preds = %317
  %321 = load i32, i32* %283, align 4
  %322 = icmp sgt i32 %321, 0
  br i1 %322, label %323, label %333

323:                                              ; preds = %320, %323
  %324 = phi i32 [ %330, %323 ], [ 0, %320 ]
  %325 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %266, align 8
  %326 = bitcast %"class.SkSL::OutputStream"* %325 to void (%"class.SkSL::OutputStream"*, i8*)***
  %327 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %326, align 8
  %328 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %327, i64 2
  %329 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %328, align 8
  call void %329(%"class.SkSL::OutputStream"* %325, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %330 = add nuw nsw i32 %324, 1
  %331 = load i32, i32* %283, align 4
  %332 = icmp slt i32 %330, %331
  br i1 %332, label %323, label %333

333:                                              ; preds = %323, %320, %317
  %334 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %266, align 8
  %335 = bitcast %"class.SkSL::OutputStream"* %334 to void (%"class.SkSL::OutputStream"*, i8*)***
  %336 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %335, align 8
  %337 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %336, i64 2
  %338 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %337, align 8
  call void %338(%"class.SkSL::OutputStream"* %334, i8* %314) #17
  store i8 0, i8* %246, align 8
  br label %339

339:                                              ; preds = %311, %333
  %340 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %312, i64 0, i32 0, i32 0, i32 0
  %341 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %340, align 8
  %342 = bitcast %"class.SkSL::Expression"* %341 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %343 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %342, align 8
  %344 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %343, i64 3
  %345 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %344, align 8
  %346 = call dereferenceable(184) %"class.SkSL::Type"* %345(%"class.SkSL::Expression"* %341) #17
  %347 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %346, i64 0, i32 8
  %348 = load i32, i32* %347, align 8
  %349 = load i32, i32* %199, align 4
  %350 = icmp slt i32 %348, %349
  br i1 %350, label %351, label %420

351:                                              ; preds = %339
  %352 = icmp eq i32 %313, 0
  br i1 %352, label %353, label %410

353:                                              ; preds = %351
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %284) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %201) #17
  %354 = load i8, i8* %286, align 1
  %355 = icmp slt i8 %354, 0
  %356 = load i8*, i8** %287, align 8
  %357 = select i1 %355, i8* %356, i8* %284
  %358 = load i8, i8* %357, align 1
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %383, label %360

360:                                              ; preds = %353
  %361 = load i8, i8* %246, align 8, !range !2
  %362 = icmp eq i8 %361, 0
  br i1 %362, label %376, label %363

363:                                              ; preds = %360
  %364 = load i32, i32* %283, align 4
  %365 = icmp sgt i32 %364, 0
  br i1 %365, label %366, label %376

366:                                              ; preds = %363, %366
  %367 = phi i32 [ %373, %366 ], [ 0, %363 ]
  %368 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %266, align 8
  %369 = bitcast %"class.SkSL::OutputStream"* %368 to void (%"class.SkSL::OutputStream"*, i8*)***
  %370 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %369, align 8
  %371 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %370, i64 2
  %372 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %371, align 8
  call void %372(%"class.SkSL::OutputStream"* %368, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %373 = add nuw nsw i32 %367, 1
  %374 = load i32, i32* %283, align 4
  %375 = icmp slt i32 %373, %374
  br i1 %375, label %366, label %376

376:                                              ; preds = %366, %363, %360
  %377 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %266, align 8
  %378 = bitcast %"class.SkSL::OutputStream"* %377 to void (%"class.SkSL::OutputStream"*, i8*)***
  %379 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %378, align 8
  %380 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %379, i64 2
  %381 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %380, align 8
  call void %381(%"class.SkSL::OutputStream"* %377, i8* %357) #17
  store i8 0, i8* %246, align 8
  %382 = load i8, i8* %286, align 1
  br label %383

383:                                              ; preds = %376, %353
  %384 = phi i8 [ %354, %353 ], [ %382, %376 ]
  %385 = icmp slt i8 %384, 0
  br i1 %385, label %386, label %388

386:                                              ; preds = %383
  %387 = load i8*, i8** %287, align 8
  call void @_ZdlPv(i8* %387) #18
  br label %388

388:                                              ; preds = %383, %386
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %284) #17
  %389 = load i8, i8* %246, align 8, !range !2
  %390 = icmp eq i8 %389, 0
  br i1 %390, label %404, label %391

391:                                              ; preds = %388
  %392 = load i32, i32* %283, align 4
  %393 = icmp sgt i32 %392, 0
  br i1 %393, label %394, label %404

394:                                              ; preds = %391, %394
  %395 = phi i32 [ %401, %394 ], [ 0, %391 ]
  %396 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %266, align 8
  %397 = bitcast %"class.SkSL::OutputStream"* %396 to void (%"class.SkSL::OutputStream"*, i8*)***
  %398 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %397, align 8
  %399 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %398, i64 2
  %400 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %399, align 8
  call void %400(%"class.SkSL::OutputStream"* %396, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %401 = add nuw nsw i32 %395, 1
  %402 = load i32, i32* %283, align 4
  %403 = icmp slt i32 %401, %402
  br i1 %403, label %394, label %404

404:                                              ; preds = %394, %388, %391
  %405 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %266, align 8
  %406 = bitcast %"class.SkSL::OutputStream"* %405 to void (%"class.SkSL::OutputStream"*, i8*)***
  %407 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %406, align 8
  %408 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %407, i64 2
  %409 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %408, align 8
  call void %409(%"class.SkSL::OutputStream"* %405, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %246, align 8
  br label %410

410:                                              ; preds = %351, %404
  %411 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %340, align 8
  %412 = bitcast %"class.SkSL::Expression"* %411 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %413 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %412, align 8
  %414 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %413, i64 3
  %415 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %414, align 8
  %416 = call dereferenceable(184) %"class.SkSL::Type"* %415(%"class.SkSL::Expression"* %411) #17
  %417 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %416, i64 0, i32 8
  %418 = load i32, i32* %417, align 8
  %419 = add nsw i32 %418, %313
  br label %420

420:                                              ; preds = %410, %339
  %421 = phi i32 [ %419, %410 ], [ %313, %339 ]
  %422 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %340, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %422, i32 17)
  %423 = icmp eq i32 %421, 0
  br i1 %423, label %449, label %424

424:                                              ; preds = %420
  %425 = load i32, i32* %199, align 4
  %426 = icmp eq i32 %421, %425
  br i1 %426, label %427, label %449

427:                                              ; preds = %424
  %428 = load i8, i8* %246, align 8, !range !2
  %429 = icmp eq i8 %428, 0
  br i1 %429, label %443, label %430

430:                                              ; preds = %427
  %431 = load i32, i32* %283, align 4
  %432 = icmp sgt i32 %431, 0
  br i1 %432, label %433, label %443

433:                                              ; preds = %430, %433
  %434 = phi i32 [ %440, %433 ], [ 0, %430 ]
  %435 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %266, align 8
  %436 = bitcast %"class.SkSL::OutputStream"* %435 to void (%"class.SkSL::OutputStream"*, i8*)***
  %437 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %436, align 8
  %438 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %437, i64 2
  %439 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %438, align 8
  call void %439(%"class.SkSL::OutputStream"* %435, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %440 = add nuw nsw i32 %434, 1
  %441 = load i32, i32* %283, align 4
  %442 = icmp slt i32 %440, %441
  br i1 %442, label %433, label %443

443:                                              ; preds = %433, %427, %430
  %444 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %266, align 8
  %445 = bitcast %"class.SkSL::OutputStream"* %444 to void (%"class.SkSL::OutputStream"*, i8*)***
  %446 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %445, align 8
  %447 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %446, i64 2
  %448 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %447, align 8
  call void %448(%"class.SkSL::OutputStream"* %444, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %246, align 8
  br label %449

449:                                              ; preds = %420, %443, %424
  %450 = phi i32 [ 0, %443 ], [ %421, %424 ], [ 0, %420 ]
  %451 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %312, i64 1
  %452 = icmp eq %"class.std::__1::unique_ptr.258"* %451, %280
  br i1 %452, label %288, label %311

453:                                              ; preds = %305, %152
  %454 = phi i8* [ %246, %305 ], [ %99, %152 ]
  store i8 0, i8* %454, align 8
  ret void
}

declare dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"*, %"class.SkSL::Context"* dereferenceable(744), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator14writeFragCoordEv(%"class.SkSL::MetalCodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 24, i32 0
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = icmp eq i64 %13, 0
  %15 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %14, label %65, label %18

18:                                               ; preds = %12
  br i1 %17, label %35, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i32 [ 0, %23 ], [ %32, %25 ]
  %27 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %24, align 8
  %28 = bitcast %"class.SkSL::OutputStream"* %27 to void (%"class.SkSL::OutputStream"*, i8*)***
  %29 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, i64 2
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, align 8
  tail call void %31(%"class.SkSL::OutputStream"* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %32 = add nuw nsw i32 %26, 1
  %33 = load i32, i32* %20, align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %25, label %35

35:                                               ; preds = %25, %18, %19
  %36 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %37 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %38 = bitcast %"class.SkSL::OutputStream"* %37 to void (%"class.SkSL::OutputStream"*, i8*)***
  %39 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %39, i64 2
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %40, align 8
  tail call void %41(%"class.SkSL::OutputStream"* %37, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.108, i64 0, i64 0)) #17
  store i8 0, i8* %15, align 8
  %42 = load i8, i8* %4, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  br label %49

47:                                               ; preds = %35
  %48 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i8* [ %46, %44 ], [ %48, %47 ]
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %55 = bitcast %"class.SkSL::OutputStream"* %54 to void (%"class.SkSL::OutputStream"*, i8*)***
  %56 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %56, i64 2
  %58 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %57, align 8
  tail call void %58(%"class.SkSL::OutputStream"* %54, i8* %50) #17
  store i8 0, i8* %15, align 8
  br label %59

59:                                               ; preds = %49, %53
  %60 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %36, align 8
  %61 = bitcast %"class.SkSL::OutputStream"* %60 to void (%"class.SkSL::OutputStream"*, i8*)***
  %62 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %62, i64 2
  %64 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, align 8
  tail call void %64(%"class.SkSL::OutputStream"* %60, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.109, i64 0, i64 0)) #17
  br label %89

65:                                               ; preds = %12
  br i1 %17, label %82, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i32 [ 0, %70 ], [ %79, %72 ]
  %74 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %71, align 8
  %75 = bitcast %"class.SkSL::OutputStream"* %74 to void (%"class.SkSL::OutputStream"*, i8*)***
  %76 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %76, i64 2
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %77, align 8
  tail call void %78(%"class.SkSL::OutputStream"* %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %79 = add nuw nsw i32 %73, 1
  %80 = load i32, i32* %67, align 4
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %72, label %82

82:                                               ; preds = %72, %65, %66
  %83 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %84 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %83, align 8
  %85 = bitcast %"class.SkSL::OutputStream"* %84 to void (%"class.SkSL::OutputStream"*, i8*)***
  %86 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %86, i64 2
  %88 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %87, align 8
  tail call void %88(%"class.SkSL::OutputStream"* %84, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.110, i64 0, i64 0)) #17
  br label %89

89:                                               ; preds = %82, %59
  store i8 0, i8* %15, align 8
  ret void
}

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator27writeMatrixTimesEqualHelperERKNS_4TypeES3_S3_(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Type"* readonly dereferenceable(184), %"class.SkSL::Type"* readonly dereferenceable(184), %"class.SkSL::Type"* readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.SkSL::String"* %6 to i8*
  %16 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %17 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #17
  %18 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.128, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %8) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.129, i64 0, i64 0)) #17
  %19 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %2)
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, %"class.SkSL::String"* nonnull dereferenceable(24) %9) #17
  %20 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %4, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #17
  %28 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #18
  br label %35

35:                                               ; preds = %27, %32
  %36 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #18
  br label %43

43:                                               ; preds = %35, %40
  %44 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #18
  br label %51

51:                                               ; preds = %43, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  %52 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 21, i32 0
  %53 = call { %"struct.std::__1::__hash_node_base.114"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.110"* %52, %"class.SkSL::String"* nonnull dereferenceable(24) %5, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #17
  %54 = extractvalue { %"struct.std::__1::__hash_node_base.114"*, i8 } %53, 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %97, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 0
  %58 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3)
  %59 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = select i1 %62, i8* %64, i8* %58
  %66 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %67 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = select i1 %70, i8* %72, i8* %66
  %74 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %2)
  %75 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = select i1 %78, i8* %80, i8* %74
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %57, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.130, i64 0, i64 0), i8* %65, i8* %73, i8* %81) #17
  %82 = load i8, i8* %76, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %56
  %85 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %85) #18
  br label %86

86:                                               ; preds = %56, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #17
  %87 = load i8, i8* %68, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %86
  %90 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %90) #18
  br label %91

91:                                               ; preds = %86, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #17
  %92 = load i8, i8* %60, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %91
  %95 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %95) #18
  br label %96

96:                                               ; preds = %91, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #17
  br label %97

97:                                               ; preds = %51, %96
  %98 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %97
  %103 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %103) #18
  br label %104

104:                                              ; preds = %97, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator26writeMatrixEqualityHelpersERKNS_4TypeES3_(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Type"* readonly dereferenceable(184), %"class.SkSL::Type"* readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.SkSL::String"* %5 to i8*
  %16 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %17 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #17
  %18 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.131, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %7) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.129, i64 0, i64 0)) #17
  %19 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %2)
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, %"class.SkSL::String"* nonnull dereferenceable(24) %8) #17
  %20 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %3, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #17
  %28 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #18
  br label %35

35:                                               ; preds = %27, %32
  %36 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #18
  br label %43

43:                                               ; preds = %35, %40
  %44 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #18
  br label %51

51:                                               ; preds = %43, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  %52 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 21, i32 0
  %53 = call { %"struct.std::__1::__hash_node_base.114"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.110"* %52, %"class.SkSL::String"* nonnull dereferenceable(24) %4, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #17
  %54 = extractvalue { %"struct.std::__1::__hash_node_base.114"*, i8 } %53, 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %122, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 0
  %58 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %59 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = select i1 %62, i8* %64, i8* %58
  %66 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %2)
  %67 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = select i1 %70, i8* %72, i8* %66
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %57, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.132, i64 0, i64 0), i8* %65, i8* %73) #17
  %74 = load i8, i8* %68, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %56
  %77 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %77) #18
  br label %78

78:                                               ; preds = %56, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #17
  %79 = load i8, i8* %60, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %82) #18
  br label %83

83:                                               ; preds = %78, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #17
  %84 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %85 = load i32, i32* %84, align 8
  %86 = icmp sgt i32 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %83
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %57, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.133, i64 0, i64 0), i8* nonnull getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i32 0, i32 0) #17
  %88 = load i32, i32* %84, align 8
  %89 = icmp sgt i32 %88, 1
  br i1 %89, label %117, label %90

90:                                               ; preds = %87, %117, %83
  %91 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %92 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = select i1 %95, i8* %97, i8* %91
  %99 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %2)
  %100 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  %104 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = select i1 %103, i8* %105, i8* %99
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %57, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.135, i64 0, i64 0), i8* %98, i8* %106) #17
  %107 = load i8, i8* %101, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %90
  %110 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %110) #18
  br label %111

111:                                              ; preds = %90, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #17
  %112 = load i8, i8* %93, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %115) #18
  br label %116

116:                                              ; preds = %111, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #17
  br label %122

117:                                              ; preds = %87, %117
  %118 = phi i32 [ %119, %117 ], [ 1, %87 ]
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %57, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.133, i64 0, i64 0), i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.134, i64 0, i64 0), i32 %118, i32 %118) #17
  %119 = add nuw nsw i32 %118, 1
  %120 = load i32, i32* %84, align 8
  %121 = icmp slt i32 %119, %120
  br i1 %121, label %117, label %90, !llvm.loop !16

122:                                              ; preds = %51, %116
  %123 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  %128 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %128) #18
  br label %129

129:                                              ; preds = %122, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator26writeMatrixDivisionHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Type"* readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.SkSL::String"* %4 to i8*
  %9 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.136, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %4) #17
  %10 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %2, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #17
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 21, i32 0
  %19 = call { %"struct.std::__1::__hash_node_base.114"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.110"* %18, %"class.SkSL::String"* nonnull dereferenceable(24) %3, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #17
  %20 = extractvalue { %"struct.std::__1::__hash_node_base.114"*, i8 } %19, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %57, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #17
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %26 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 0
  %27 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %24, align 8
  %32 = select i1 %30, i8* %31, i8* %23
  %33 = select i1 %30, i8* %31, i8* %23
  %34 = select i1 %30, i8* %31, i8* %23
  %35 = select i1 %30, i8* %31, i8* %23
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.137, i64 0, i64 0), i8* %33, i8* %34, i8* %32, i8* %35) #17
  %36 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %37 = load i32, i32* %36, align 8
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %22
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.138, i64 0, i64 0), i8* nonnull getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i32 0, i32 0) #17
  %40 = load i32, i32* %36, align 8
  %41 = icmp sgt i32 %40, 1
  br i1 %41, label %52, label %42

42:                                               ; preds = %39, %52, %22
  %43 = load i8, i8* %28, align 1
  %44 = icmp slt i8 %43, 0
  %45 = load i8*, i8** %24, align 8
  %46 = select i1 %44, i8* %45, i8* %23
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.139, i64 0, i64 0), i8* %46, i8* %46, i8* %46) #17
  %47 = load i8, i8* %28, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %50) #18
  br label %51

51:                                               ; preds = %42, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #17
  br label %57

52:                                               ; preds = %39, %52
  %53 = phi i32 [ %54, %52 ], [ 1, %39 ]
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.138, i64 0, i64 0), i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32 %53, i32 %53) #17
  %54 = add nuw nsw i32 %53, 1
  %55 = load i32, i32* %36, align 8
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %52, label %42, !llvm.loop !17

57:                                               ; preds = %17, %51
  %58 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %63) #18
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator25writeArrayEqualityHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Type"* readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %5 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %4, align 8
  %6 = icmp eq %"class.SkSL::Type"* %5, null
  %7 = select i1 %6, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %5
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %13 [
    i32 0, label %10
    i32 9, label %11
    i32 4, label %12
  ]

10:                                               ; preds = %2
  tail call void @_ZN4SkSL18MetalCodeGenerator25writeArrayEqualityHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %7) #17
  br label %13

11:                                               ; preds = %2
  tail call void @_ZN4SkSL18MetalCodeGenerator26writeStructEqualityHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %7) #17
  br label %13

12:                                               ; preds = %2
  tail call void @_ZN4SkSL18MetalCodeGenerator26writeMatrixEqualityHelpersERKNS_4TypeES3_(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %7, %"class.SkSL::Type"* dereferenceable(184) %7) #17
  br label %13

13:                                               ; preds = %2, %10, %11, %12
  %14 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #17
  %15 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  store i8 16, i8* %16, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.140, i64 0, i64 0), i64 16, i1 false) #17
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast i64* %17 to i8*
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 21, i32 0
  %20 = call { %"struct.std::__1::__hash_node_base.114"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.110"* %19, %"class.SkSL::String"* nonnull dereferenceable(24) %3, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #17
  %21 = extractvalue { %"struct.std::__1::__hash_node_base.114"*, i8 } %20, 1
  %22 = load i8, i8* %16, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %13, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #17
  %28 = icmp eq i8 %21, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 1, i32 0
  %31 = bitcast %class.SkWStream* %30 to i1 (%class.SkWStream*, i8*, i64)***
  %32 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %31, align 8
  %33 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %32, i64 2
  %34 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %33, align 8
  %35 = call zeroext i1 %34(%class.SkWStream* %30, i8* getelementptr inbounds ([420 x i8], [420 x i8]* @.str.141, i64 0, i64 0), i64 419) #17
  br label %36

36:                                               ; preds = %27, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator20writeEqualityHelpersERKNS_4TypeES3_(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Type"* readonly dereferenceable(184), %"class.SkSL::Type"* readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %21 [
    i32 0, label %6
    i32 9, label %11
    i32 4, label %16
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  tail call void @_ZN4SkSL18MetalCodeGenerator25writeArrayEqualityHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  br label %21

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 9
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  tail call void @_ZN4SkSL18MetalCodeGenerator26writeStructEqualityHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  br label %21

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  tail call void @_ZN4SkSL18MetalCodeGenerator26writeMatrixEqualityHelpersERKNS_4TypeES3_(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::Type"* dereferenceable(184) %2)
  br label %21

21:                                               ; preds = %3, %6, %11, %10, %15, %20, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator26writeStructEqualityHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Type"* readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.SkSL::String"* %4 to i8*
  %12 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.142, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %4) #17
  %13 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %2, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  %21 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 21, i32 0
  %22 = call { %"struct.std::__1::__hash_node_base.114"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.110"* %21, %"class.SkSL::String"* nonnull dereferenceable(24) %3, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #17
  %23 = extractvalue { %"struct.std::__1::__hash_node_base.114"*, i8 } %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %118, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 0
  %27 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %26, align 8
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 1
  %29 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %28, align 8
  %30 = icmp eq %"struct.SkSL::Type::Field"* %27, %29
  br i1 %30, label %31, label %70

31:                                               ; preds = %79, %25
  %32 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 0
  %33 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %34 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = select i1 %37, i8* %39, i8* %33
  %41 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %42 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = select i1 %45, i8* %47, i8* %41
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %32, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.143, i64 0, i64 0), i8* %40, i8* %48) #17
  %49 = load i8, i8* %43, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %31
  %52 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %52) #18
  br label %53

53:                                               ; preds = %31, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #17
  %54 = load i8, i8* %35, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %57) #18
  br label %58

58:                                               ; preds = %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #17
  %59 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %26, align 8
  %60 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %28, align 8
  %61 = icmp eq %"struct.SkSL::Type::Field"* %59, %60
  br i1 %61, label %82, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %59, i64 0, i32 1, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = trunc i64 %64 to i32
  %66 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %59, i64 0, i32 1, i32 0
  %67 = load i8*, i8** %66, align 8
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %32, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.144, i64 0, i64 0), i8* nonnull getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i32 %65, i8* %67, i32 %65, i8* %67) #17
  %68 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %59, i64 1
  %69 = icmp eq %"struct.SkSL::Type::Field"* %68, %60
  br i1 %69, label %82, label %109

70:                                               ; preds = %25, %79
  %71 = phi %"struct.SkSL::Type::Field"* [ %80, %79 ], [ %27, %25 ]
  %72 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %71, i64 0, i32 2
  %73 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %72, align 8
  %74 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %73, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  switch i32 %75, label %79 [
    i32 0, label %76
    i32 9, label %77
    i32 4, label %78
  ]

76:                                               ; preds = %70
  call void @_ZN4SkSL18MetalCodeGenerator25writeArrayEqualityHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %73) #17
  br label %79

77:                                               ; preds = %70
  call void @_ZN4SkSL18MetalCodeGenerator26writeStructEqualityHelpersERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %73) #17
  br label %79

78:                                               ; preds = %70
  call void @_ZN4SkSL18MetalCodeGenerator26writeMatrixEqualityHelpersERKNS_4TypeES3_(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %73, %"class.SkSL::Type"* dereferenceable(184) %73) #17
  br label %79

79:                                               ; preds = %70, %76, %77, %78
  %80 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %71, i64 1
  %81 = icmp eq %"struct.SkSL::Type::Field"* %80, %29
  br i1 %81, label %31, label %70

82:                                               ; preds = %62, %109, %58
  %83 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %84 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  %88 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = select i1 %87, i8* %89, i8* %83
  %91 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %92 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = select i1 %95, i8* %97, i8* %91
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %32, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.145, i64 0, i64 0), i8* %90, i8* %98) #17
  %99 = load i8, i8* %93, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %82
  %102 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %102) #18
  br label %103

103:                                              ; preds = %82, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #17
  %104 = load i8, i8* %85, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %103
  %107 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %107) #18
  br label %108

108:                                              ; preds = %103, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #17
  br label %118

109:                                              ; preds = %62, %109
  %110 = phi %"struct.SkSL::Type::Field"* [ %116, %109 ], [ %68, %62 ]
  %111 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %110, i64 0, i32 1, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = trunc i64 %112 to i32
  %114 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %110, i64 0, i32 1, i32 0
  %115 = load i8*, i8** %114, align 8
  call void (%"class.SkSL::OutputStream"*, i8*, ...) @_ZN4SkSL12OutputStream6printfEPKcz(%"class.SkSL::OutputStream"* %32, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.144, i64 0, i64 0), i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.134, i64 0, i64 0), i32 %113, i8* %115, i32 %113, i8* %115) #17
  %116 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %110, i64 1
  %117 = icmp eq %"struct.SkSL::Type::Field"* %116, %60
  br i1 %117, label %82, label %109, !llvm.loop !18

118:                                              ; preds = %20, %108
  %119 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %118
  %124 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %124) #18
  br label %125

125:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator19writeNumberAsMatrixERKNS_10ExpressionERKNS_4TypeE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24), %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i32 [ 0, %12 ], [ %21, %14 ]
  %16 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %13, align 8
  %17 = bitcast %"class.SkSL::OutputStream"* %16 to void (%"class.SkSL::OutputStream"*, i8*)***
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %18, i64 2
  %20 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, align 8
  tail call void %20(%"class.SkSL::OutputStream"* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %21 = add nuw nsw i32 %15, 1
  %22 = load i32, i32* %9, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %14, label %24

24:                                               ; preds = %14, %3, %8
  %25 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %26 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %27 = bitcast %"class.SkSL::OutputStream"* %26 to void (%"class.SkSL::OutputStream"*, i8*)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, i64 2
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, align 8
  tail call void %30(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %5, align 8
  %31 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %2) #17
  %32 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = select i1 %35, i8* %37, i8* %31
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %65, label %41

41:                                               ; preds = %24
  %42 = load i8, i8* %5, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %58, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %58

48:                                               ; preds = %44, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %44 ]
  %50 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %51 = bitcast %"class.SkSL::OutputStream"* %50 to void (%"class.SkSL::OutputStream"*, i8*)***
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %52, i64 2
  %54 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, align 8
  call void %54(%"class.SkSL::OutputStream"* %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %55 = add nuw nsw i32 %49, 1
  %56 = load i32, i32* %45, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %48, label %58

58:                                               ; preds = %48, %44, %41
  %59 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %60 = bitcast %"class.SkSL::OutputStream"* %59 to void (%"class.SkSL::OutputStream"*, i8*)***
  %61 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %61, i64 2
  %63 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %62, align 8
  call void %63(%"class.SkSL::OutputStream"* %59, i8* %38) #17
  store i8 0, i8* %5, align 8
  %64 = load i8, i8* %33, align 1
  br label %65

65:                                               ; preds = %58, %24
  %66 = phi i8 [ %34, %24 ], [ %64, %58 ]
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %65
  %69 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %69) #18
  br label %70

70:                                               ; preds = %65, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  %71 = load i8, i8* %5, align 8, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %87, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %75 = load i32, i32* %74, align 4
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %87

77:                                               ; preds = %73, %77
  %78 = phi i32 [ %84, %77 ], [ 0, %73 ]
  %79 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %80 = bitcast %"class.SkSL::OutputStream"* %79 to void (%"class.SkSL::OutputStream"*, i8*)***
  %81 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %81, i64 2
  %83 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %82, align 8
  call void %83(%"class.SkSL::OutputStream"* %79, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %84 = add nuw nsw i32 %78, 1
  %85 = load i32, i32* %74, align 4
  %86 = icmp slt i32 %84, %85
  br i1 %86, label %77, label %87

87:                                               ; preds = %77, %70, %73
  %88 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %89 = bitcast %"class.SkSL::OutputStream"* %88 to void (%"class.SkSL::OutputStream"*, i8*)***
  %90 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %90, i64 2
  %92 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %91, align 8
  call void %92(%"class.SkSL::OutputStream"* %88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  store i8 0, i8* %5, align 8
  %93 = call i64 @_ZNK4SkSL4Type9slotCountEv(%"class.SkSL::Type"* %2)
  %94 = trunc i64 %93 to i32
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %98 = load i8, i8* %5, align 8
  %99 = icmp eq i8 %98, 0
  br label %145

100:                                              ; preds = %87
  %101 = load i8, i8* %5, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %117, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %107, label %117

107:                                              ; preds = %103, %107
  %108 = phi i32 [ %114, %107 ], [ 0, %103 ]
  %109 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %110 = bitcast %"class.SkSL::OutputStream"* %109 to void (%"class.SkSL::OutputStream"*, i8*)***
  %111 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %111, i64 2
  %113 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %112, align 8
  call void %113(%"class.SkSL::OutputStream"* %109, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %114 = add nuw nsw i32 %108, 1
  %115 = load i32, i32* %104, align 4
  %116 = icmp slt i32 %114, %115
  br i1 %116, label %107, label %117

117:                                              ; preds = %186, %107, %100, %103
  %118 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %119 = bitcast %"class.SkSL::OutputStream"* %118 to void (%"class.SkSL::OutputStream"*, i8*)***
  %120 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %120, i64 2
  %122 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %121, align 8
  call void %122(%"class.SkSL::OutputStream"* %118, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.146, i64 0, i64 0)) #17
  store i8 0, i8* %5, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1, i32 4)
  %123 = load i8, i8* %5, align 8, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %139, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %127 = load i32, i32* %126, align 4
  %128 = icmp sgt i32 %127, 0
  br i1 %128, label %129, label %139

129:                                              ; preds = %125, %129
  %130 = phi i32 [ %136, %129 ], [ 0, %125 ]
  %131 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %132 = bitcast %"class.SkSL::OutputStream"* %131 to void (%"class.SkSL::OutputStream"*, i8*)***
  %133 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %133, i64 2
  %135 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %134, align 8
  call void %135(%"class.SkSL::OutputStream"* %131, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %136 = add nuw nsw i32 %130, 1
  %137 = load i32, i32* %126, align 4
  %138 = icmp slt i32 %136, %137
  br i1 %138, label %129, label %139

139:                                              ; preds = %129, %117, %125
  %140 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %141 = bitcast %"class.SkSL::OutputStream"* %140 to void (%"class.SkSL::OutputStream"*, i8*)***
  %142 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %142, i64 2
  %144 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %143, align 8
  call void %144(%"class.SkSL::OutputStream"* %140, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  store i8 0, i8* %5, align 8
  ret void

145:                                              ; preds = %96, %186
  %146 = phi i1 [ %99, %96 ], [ true, %186 ]
  %147 = phi i32 [ %94, %96 ], [ %149, %186 ]
  %148 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), %96 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %186 ]
  %149 = add nsw i32 %147, -1
  %150 = load i8, i8* %148, align 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %172, label %152

152:                                              ; preds = %145
  br i1 %146, label %166, label %153

153:                                              ; preds = %152
  %154 = load i32, i32* %97, align 4
  %155 = icmp sgt i32 %154, 0
  br i1 %155, label %156, label %166

156:                                              ; preds = %153, %156
  %157 = phi i32 [ %163, %156 ], [ 0, %153 ]
  %158 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %159 = bitcast %"class.SkSL::OutputStream"* %158 to void (%"class.SkSL::OutputStream"*, i8*)***
  %160 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %160, i64 2
  %162 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %161, align 8
  call void %162(%"class.SkSL::OutputStream"* %158, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %163 = add nuw nsw i32 %157, 1
  %164 = load i32, i32* %97, align 4
  %165 = icmp slt i32 %163, %164
  br i1 %165, label %156, label %166

166:                                              ; preds = %156, %152, %153
  %167 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %168 = bitcast %"class.SkSL::OutputStream"* %167 to void (%"class.SkSL::OutputStream"*, i8*)***
  %169 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %169, i64 2
  %171 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %170, align 8
  call void %171(%"class.SkSL::OutputStream"* %167, i8* %148) #17
  store i8 0, i8* %5, align 8
  br label %186

172:                                              ; preds = %145
  br i1 %146, label %186, label %173

173:                                              ; preds = %172
  %174 = load i32, i32* %97, align 4
  %175 = icmp sgt i32 %174, 0
  br i1 %175, label %176, label %186

176:                                              ; preds = %173, %176
  %177 = phi i32 [ %183, %176 ], [ 0, %173 ]
  %178 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %179 = bitcast %"class.SkSL::OutputStream"* %178 to void (%"class.SkSL::OutputStream"*, i8*)***
  %180 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %180, i64 2
  %182 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %181, align 8
  call void %182(%"class.SkSL::OutputStream"* %178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %183 = add nuw nsw i32 %177, 1
  %184 = load i32, i32* %97, align 4
  %185 = icmp slt i32 %183, %184
  br i1 %185, label %176, label %186

186:                                              ; preds = %176, %166, %172, %173
  %187 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %25, align 8
  %188 = bitcast %"class.SkSL::OutputStream"* %187 to void (%"class.SkSL::OutputStream"*, i8*)***
  %189 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %188, align 8
  %190 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %189, i64 2
  %191 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %190, align 8
  call void %191(%"class.SkSL::OutputStream"* %187, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #17
  store i8 0, i8* %5, align 8
  %192 = icmp eq i32 %149, 0
  br i1 %192, label %117, label %145
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4SkSL4Type9slotCountEv(%"class.SkSL::Type"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %41 [
    i32 13, label %42
    i32 2, label %42
    i32 3, label %42
    i32 5, label %42
    i32 6, label %42
    i32 7, label %42
    i32 14, label %42
    i32 10, label %42
    i32 12, label %42
    i32 8, label %4
    i32 1, label %4
    i32 11, label %5
    i32 4, label %9
    i32 9, label %16
    i32 0, label %31
  ]

4:                                                ; preds = %1, %1
  br label %42

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  br label %42

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 9
  %13 = load i32, i32* %12, align 4
  %14 = mul nsw i32 %13, %11
  %15 = sext i32 %14 to i64
  br label %42

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %18 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %20 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %19, align 8
  %21 = icmp eq %"struct.SkSL::Type::Field"* %18, %20
  br i1 %21, label %42, label %22

22:                                               ; preds = %16, %22
  %23 = phi i64 [ %28, %22 ], [ 0, %16 ]
  %24 = phi %"struct.SkSL::Type::Field"* [ %29, %22 ], [ %18, %16 ]
  %25 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %24, i64 0, i32 2
  %26 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %25, align 8
  %27 = tail call i64 @_ZNK4SkSL4Type9slotCountEv(%"class.SkSL::Type"* %26)
  %28 = add i64 %27, %23
  %29 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %24, i64 1
  %30 = icmp eq %"struct.SkSL::Type::Field"* %29, %20
  br i1 %30, label %42, label %22

31:                                               ; preds = %1
  %32 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 8
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 6
  %36 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %35, align 8
  %37 = icmp eq %"class.SkSL::Type"* %36, null
  %38 = select i1 %37, %"class.SkSL::Type"* %0, %"class.SkSL::Type"* %36
  %39 = tail call i64 @_ZNK4SkSL4Type9slotCountEv(%"class.SkSL::Type"* %38)
  %40 = mul i64 %39, %34
  ret i64 %40

41:                                               ; preds = %1
  tail call void @llvm.trap()
  unreachable

42:                                               ; preds = %22, %16, %1, %1, %1, %1, %1, %1, %1, %1, %1, %9, %5, %4
  %43 = phi i64 [ %15, %9 ], [ %8, %5 ], [ 1, %4 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %1 ], [ 0, %16 ], [ %28, %22 ]
  ret i64 %43
}

declare i32 @_ZNK4SkSL8Operator19getBinaryPrecedenceEv(%"class.SkSL::Operator"*) local_unnamed_addr #1

declare i32 @_ZNK4SkSL8Operator16removeAssignmentEv(%"class.SkSL::Operator"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4SkSL8Operator24isValidForMatrixOrVectorEv(%"class.SkSL::Operator"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4SkSL8Operator12isAssignmentEv(%"class.SkSL::Operator"*) local_unnamed_addr #1

declare void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret, i64) local_unnamed_addr #1

declare void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* sret, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18MetalCodeGenerator12requirementsERKNS_19FunctionDeclarationE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.441", align 8
  %4 = alloca %"class.std::__1::tuple.407", align 1
  %5 = alloca %"class.std::__1::tuple.441", align 8
  %6 = alloca %"class.std::__1::tuple.407", align 1
  %7 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %8 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %9 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 5
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %152

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 17
  %14 = ptrtoint %"class.SkSL::FunctionDeclaration"* %1 to i64
  %15 = lshr i64 %14, 32
  %16 = shl i64 %14, 3
  %17 = and i64 %16, 4294967288
  %18 = add nuw nsw i64 %17, 8
  %19 = xor i64 %18, %15
  %20 = mul i64 %19, -7070675565921424023
  %21 = lshr i64 %20, 47
  %22 = xor i64 %20, %15
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, -7070675565921424023
  %25 = lshr i64 %24, 47
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, -7070675565921424023
  %28 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %79, label %31

31:                                               ; preds = %12
  %32 = tail call i64 @llvm.ctpop.i64(i64 %29) #17, !range !19
  %33 = icmp ugt i64 %32, 1
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = add i64 %29, -1
  %36 = and i64 %35, %27
  br label %41

37:                                               ; preds = %31
  %38 = icmp ult i64 %27, %29
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = urem i64 %27, %29
  br label %41

41:                                               ; preds = %39, %37, %34
  %42 = phi i64 [ %36, %34 ], [ %40, %39 ], [ %27, %37 ]
  %43 = getelementptr inbounds %"class.std::__1::unordered_map.193", %"class.std::__1::unordered_map.193"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %44, i64 %42
  %46 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.198"* %46, null
  br i1 %47, label %79, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %46, i64 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %49, align 8
  %51 = icmp eq %"struct.std::__1::__hash_node_base.198"* %50, null
  br i1 %51, label %79, label %52

52:                                               ; preds = %48
  %53 = add i64 %29, -1
  br label %54

54:                                               ; preds = %75, %52
  %55 = phi %"struct.std::__1::__hash_node_base.198"* [ %50, %52 ], [ %77, %75 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %55, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.198"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %27
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  br i1 %33, label %63, label %61

61:                                               ; preds = %60
  %62 = and i64 %58, %53
  br label %67

63:                                               ; preds = %60
  %64 = icmp ult i64 %58, %29
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %58, %29
  br label %67

67:                                               ; preds = %65, %63, %61
  %68 = phi i64 [ %62, %61 ], [ %66, %65 ], [ %58, %63 ]
  %69 = icmp eq i64 %68, %42
  br i1 %69, label %75, label %79

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %55, i64 2
  %72 = bitcast %"struct.std::__1::__hash_node_base.198"* %71 to %"class.SkSL::FunctionDeclaration"**
  %73 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %72, align 8
  %74 = icmp eq %"class.SkSL::FunctionDeclaration"* %73, %1
  br i1 %74, label %148, label %75

75:                                               ; preds = %70, %67
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %55, i64 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %76, align 8
  %78 = icmp eq %"struct.std::__1::__hash_node_base.198"* %77, null
  br i1 %78, label %79, label %54

79:                                               ; preds = %67, %75, %41, %12, %48
  %80 = bitcast %"class.SkSL::FunctionDeclaration"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #17
  store %"class.SkSL::FunctionDeclaration"* %1, %"class.SkSL::FunctionDeclaration"** %7, align 8
  %81 = getelementptr inbounds %"class.std::__1::unordered_map.193", %"class.std::__1::unordered_map.193"* %13, i64 0, i32 0
  %82 = bitcast %"class.std::__1::tuple.441"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #17
  %83 = getelementptr inbounds %"class.std::__1::tuple.441", %"class.std::__1::tuple.441"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::FunctionDeclaration"** %7, %"class.SkSL::FunctionDeclaration"*** %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::tuple.407", %"class.std::__1::tuple.407"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %84) #17
  %85 = call { %"struct.std::__1::__hash_node_base.198"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.194"* %81, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.441"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.407"* nonnull dereferenceable(1) %4) #17
  %86 = extractvalue { %"struct.std::__1::__hash_node_base.198"*, i8 } %85, 0
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %86, i64 3
  %88 = bitcast %"struct.std::__1::__hash_node_base.198"* %87 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %84) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #17
  store i32 0, i32* %88, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #17
  %89 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %90 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %89, align 8
  %91 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %90, i64 0, i32 6
  %92 = bitcast %"class.std::__1::vector.62"* %91 to i64*
  %93 = load i64, i64* %92, align 8, !noalias !20
  %94 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %90, i64 0, i32 6, i32 0, i32 1
  %95 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %90, i64 0, i32 7
  %96 = bitcast %"class.std::__1::vector.75"* %95 to i64*
  %97 = load i64, i64* %96, align 8, !noalias !20
  %98 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %90, i64 0, i32 7, i32 0, i32 1
  %99 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %98, align 8, !noalias !20
  %100 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %94, align 8, !noalias !23
  %101 = inttoptr i64 %93 to %"class.std::__1::unique_ptr.64"*
  %102 = icmp eq %"class.std::__1::unique_ptr.64"* %100, %101
  %103 = inttoptr i64 %97 to %"class.SkSL::ProgramElement"**
  %104 = icmp eq %"class.SkSL::ProgramElement"** %99, %103
  %105 = and i1 %102, %104
  br i1 %105, label %152, label %106

106:                                              ; preds = %79, %123
  %107 = phi i1 [ %133, %123 ], [ %104, %79 ]
  %108 = phi %"class.SkSL::ProgramElement"** [ %132, %123 ], [ %103, %79 ]
  %109 = phi %"class.std::__1::unique_ptr.64"* [ %130, %123 ], [ %101, %79 ]
  %110 = phi i64 [ %129, %123 ], [ %93, %79 ]
  %111 = phi i64 [ %128, %123 ], [ %97, %79 ]
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %109, i64 0, i32 0, i32 0, i32 0
  %113 = select i1 %107, %"class.SkSL::ProgramElement"** %112, %"class.SkSL::ProgramElement"** %108
  %114 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %113, align 8
  %115 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %114, i64 0, i32 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 2
  br i1 %117, label %118, label %123

118:                                              ; preds = %106
  %119 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %114, i64 1
  %120 = bitcast %"class.SkSL::ProgramElement"* %119 to %"class.SkSL::FunctionDeclaration"**
  %121 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %120, align 8
  %122 = icmp eq %"class.SkSL::FunctionDeclaration"* %121, %1
  br i1 %122, label %135, label %123

123:                                              ; preds = %118, %106
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %109, i64 1
  %125 = ptrtoint %"class.std::__1::unique_ptr.64"* %124 to i64
  %126 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %108, i64 1
  %127 = ptrtoint %"class.SkSL::ProgramElement"** %126 to i64
  %128 = select i1 %107, i64 %111, i64 %127
  %129 = select i1 %107, i64 %125, i64 %110
  %130 = inttoptr i64 %129 to %"class.std::__1::unique_ptr.64"*
  %131 = icmp eq %"class.std::__1::unique_ptr.64"* %100, %130
  %132 = inttoptr i64 %128 to %"class.SkSL::ProgramElement"**
  %133 = icmp eq %"class.SkSL::ProgramElement"** %99, %132
  %134 = and i1 %131, %133
  br i1 %134, label %152, label %106

135:                                              ; preds = %118
  %136 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %114, i64 2
  %137 = bitcast %"class.SkSL::ProgramElement"* %136 to %"class.SkSL::Statement"**
  %138 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %137, align 8
  %139 = call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* %138)
  %140 = bitcast %"class.SkSL::FunctionDeclaration"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #17
  store %"class.SkSL::FunctionDeclaration"* %1, %"class.SkSL::FunctionDeclaration"** %8, align 8
  %141 = bitcast %"class.std::__1::tuple.441"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #17
  %142 = getelementptr inbounds %"class.std::__1::tuple.441", %"class.std::__1::tuple.441"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::FunctionDeclaration"** %8, %"class.SkSL::FunctionDeclaration"*** %142, align 8
  %143 = getelementptr inbounds %"class.std::__1::tuple.407", %"class.std::__1::tuple.407"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %143) #17
  %144 = call { %"struct.std::__1::__hash_node_base.198"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.194"* %81, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.441"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.407"* nonnull dereferenceable(1) %6) #17
  %145 = extractvalue { %"struct.std::__1::__hash_node_base.198"*, i8 } %144, 0
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %145, i64 3
  %147 = bitcast %"struct.std::__1::__hash_node_base.198"* %146 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %143) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #17
  store i32 %139, i32* %147, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #17
  br label %152

148:                                              ; preds = %70
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %55, i64 3
  %150 = bitcast %"struct.std::__1::__hash_node_base.198"* %149 to i32*
  %151 = load i32, i32* %150, align 8
  br label %152

152:                                              ; preds = %123, %79, %2, %148, %135
  %153 = phi i32 [ 0, %2 ], [ %151, %148 ], [ %139, %135 ], [ 0, %79 ], [ 0, %123 ]
  ret i32 %153
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN4SkSL18MetalCodeGenerator17getUniformBindingERKNS_9ModifiersE(%"class.SkSL::MetalCodeGenerator"* nocapture readonly, %"struct.SkSL::Modifiers"* nocapture readonly dereferenceable(80)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %7, align 8
  %9 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %9, align 8
  %11 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %10, i64 0, i32 1, i32 9
  %12 = load i32, i32* %11, align 8
  br label %13

13:                                               ; preds = %2, %6
  %14 = phi i32 [ %12, %6 ], [ %4, %2 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN4SkSL18MetalCodeGenerator13getUniformSetERKNS_9ModifiersE(%"class.SkSL::MetalCodeGenerator"* nocapture readonly, %"struct.SkSL::Modifiers"* nocapture readonly dereferenceable(80)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %7, align 8
  %9 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %9, align 8
  %11 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %10, i64 0, i32 1, i32 8
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %2, %6
  %14 = phi i32 [ %12, %6 ], [ %4, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"*, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = tail call i64 @strlen(i8* %2) #17
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #19
  unreachable

9:                                                ; preds = %3
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #18
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  %19 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

20:                                               ; preds = %9
  %21 = trunc i64 %5 to i8
  %22 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.SkSL::String"* %4 to i8*
  %25 = icmp eq i64 %5, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20, %11
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %19, %11 ]
  %28 = phi i8* [ %24, %20 ], [ %14, %11 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %2, i64 %5, i1 false) #17
  br label %29

29:                                               ; preds = %20, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %27, %26 ]
  %31 = phi i8* [ %24, %20 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %5
  store i8 0, i8* %32, align 1
  %33 = bitcast %"class.SkSL::ErrorReporter"* %0 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %34 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %34, i64 2
  %36 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %35, align 8
  call void %36(%"class.SkSL::ErrorReporter"* %0, i32 %1, %"class.SkSL::String"* nonnull %4) #17
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #18
  br label %43

43:                                               ; preds = %29, %40
  ret void
}

declare zeroext i1 @_ZNK4SkSL6StringeqEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator22writeFunctionPrototypeERKNS_17FunctionPrototypeE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::FunctionPrototype"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::FunctionPrototype", %"class.SkSL::FunctionPrototype"* %1, i64 0, i32 1
  %4 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %3, align 8
  %5 = tail call zeroext i1 @_ZN4SkSL18MetalCodeGenerator24writeFunctionDeclarationERKNS_19FunctionDeclarationE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %4)
  %6 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  %17 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %14, align 8
  %18 = bitcast %"class.SkSL::OutputStream"* %17 to void (%"class.SkSL::OutputStream"*, i8*)***
  %19 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %19, i64 2
  %21 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %20, align 8
  tail call void %21(%"class.SkSL::OutputStream"* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %22 = add nuw nsw i32 %16, 1
  %23 = load i32, i32* %10, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %15, label %25

25:                                               ; preds = %15, %2, %9
  %26 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %27 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %28 = bitcast %"class.SkSL::OutputStream"* %27 to void (%"class.SkSL::OutputStream"*, i8*)***
  %29 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, i64 2
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, align 8
  tail call void %31(%"class.SkSL::OutputStream"* %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #17
  store i8 0, i8* %6, align 8
  %32 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %26, align 8
  %33 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.SkSL::OutputStream"* %32 to void (%"class.SkSL::OutputStream"*, i8*)***
  %36 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, i64 2
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %37, align 8
  tail call void %38(%"class.SkSL::OutputStream"* %32, i8* %34) #17
  store i8 1, i8* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator13writeFunctionERKNS_18FunctionDefinitionE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::FunctionDefinition"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkScopeExit, align 8
  %4 = alloca %"class.SkSL::StringStream", align 16
  %5 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 1
  %6 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %5, align 8
  %7 = tail call zeroext i1 @_ZN4SkSL18MetalCodeGenerator24writeFunctionDeclarationERKNS_19FunctionDeclarationE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %6)
  br i1 %7, label %8, label %336

8:                                                ; preds = %2
  %9 = bitcast %"class.SkSL::FunctionDeclaration"** %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 25
  %12 = bitcast %"class.SkSL::FunctionDeclaration"** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast %class.SkScopeExit* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #17
  %14 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %3, i64 0, i32 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %3, i64 0, i32 0, i32 0, i32 2
  %17 = ptrtoint %"class.SkSL::MetalCodeGenerator"* %0 to i64
  %18 = bitcast %class.SkScopeExit* %3 to i64*
  %19 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  store i64 %17, i64* %18, align 8
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> <i64 -6148914691236517206, i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN4SkSL18MetalCodeGenerator13writeFunctionERKNS6_18FunctionDefinitionEE3$_2S2_EEEEvPKNS0_16__policy_storageE" to i64)>, <2 x i64>* %20, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4SkSL18MetalCodeGenerator13writeFunctionERKNS4_18FunctionDefinitionEE3$_2FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %16, align 8
  %21 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %8
  %25 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i32 [ 0, %28 ], [ %37, %30 ]
  %32 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %33 = bitcast %"class.SkSL::OutputStream"* %32 to void (%"class.SkSL::OutputStream"*, i8*)***
  %34 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, i64 2
  %36 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, align 8
  tail call void %36(%"class.SkSL::OutputStream"* %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %37 = add nuw nsw i32 %31, 1
  %38 = load i32, i32* %25, align 4
  %39 = icmp slt i32 %37, %38
  br i1 %39, label %30, label %40

40:                                               ; preds = %30, %8, %24
  %41 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %42 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %43 = bitcast %"class.SkSL::OutputStream"* %42 to void (%"class.SkSL::OutputStream"*, i8*)***
  %44 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %44, i64 2
  %46 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %45, align 8
  tail call void %46(%"class.SkSL::OutputStream"* %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #17
  store i8 0, i8* %21, align 8
  %47 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %48 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %49 = load i8*, i8** %48, align 8
  %50 = bitcast %"class.SkSL::OutputStream"* %47 to void (%"class.SkSL::OutputStream"*, i8*)***
  %51 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %51, i64 2
  %53 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %52, align 8
  tail call void %53(%"class.SkSL::OutputStream"* %47, i8* %49) #17
  store i8 1, i8* %21, align 8
  %54 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %5, align 8
  %55 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %54, i64 0, i32 6
  %56 = load i8, i8* %55, align 1, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %112, label %58

58:                                               ; preds = %40
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeGlobalInitEv(%"class.SkSL::MetalCodeGenerator"* %0)
  %59 = load i8, i8* %21, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %75, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %63 = load i32, i32* %62, align 4
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %61, %65
  %66 = phi i32 [ %72, %65 ], [ 0, %61 ]
  %67 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %68 = bitcast %"class.SkSL::OutputStream"* %67 to void (%"class.SkSL::OutputStream"*, i8*)***
  %69 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %69, i64 2
  %71 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %70, align 8
  tail call void %71(%"class.SkSL::OutputStream"* %67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %72 = add nuw nsw i32 %66, 1
  %73 = load i32, i32* %62, align 4
  %74 = icmp slt i32 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %61, %58
  %76 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %77 = bitcast %"class.SkSL::OutputStream"* %76 to void (%"class.SkSL::OutputStream"*, i8*)***
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %78, i64 2
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, align 8
  tail call void %80(%"class.SkSL::OutputStream"* %76, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.187, i64 0, i64 0)) #17
  store i8 0, i8* %21, align 8
  %81 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %82 = load i8*, i8** %48, align 8
  %83 = bitcast %"class.SkSL::OutputStream"* %81 to void (%"class.SkSL::OutputStream"*, i8*)***
  %84 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %84, i64 2
  %86 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %85, align 8
  tail call void %86(%"class.SkSL::OutputStream"* %81, i8* %82) #17
  store i8 1, i8* %21, align 8
  %87 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %88 = load i32, i32* %87, align 4
  %89 = icmp sgt i32 %88, 0
  br i1 %89, label %90, label %100

90:                                               ; preds = %75, %90
  %91 = phi i32 [ %97, %90 ], [ 0, %75 ]
  %92 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %93 = bitcast %"class.SkSL::OutputStream"* %92 to void (%"class.SkSL::OutputStream"*, i8*)***
  %94 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %94, i64 2
  %96 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %95, align 8
  tail call void %96(%"class.SkSL::OutputStream"* %92, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %97 = add nuw nsw i32 %91, 1
  %98 = load i32, i32* %87, align 4
  %99 = icmp slt i32 %97, %98
  br i1 %99, label %90, label %100

100:                                              ; preds = %90, %75
  %101 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %102 = bitcast %"class.SkSL::OutputStream"* %101 to void (%"class.SkSL::OutputStream"*, i8*)***
  %103 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %103, i64 2
  %105 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %104, align 8
  tail call void %105(%"class.SkSL::OutputStream"* %101, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.188, i64 0, i64 0)) #17
  store i8 0, i8* %21, align 8
  %106 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %107 = load i8*, i8** %48, align 8
  %108 = bitcast %"class.SkSL::OutputStream"* %106 to void (%"class.SkSL::OutputStream"*, i8*)***
  %109 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %109, i64 2
  %111 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %110, align 8
  tail call void %111(%"class.SkSL::OutputStream"* %106, i8* %107) #17
  store i8 1, i8* %21, align 8
  br label %112

112:                                              ; preds = %40, %100
  %113 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 8
  %114 = bitcast %"class.SkSL::String"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  store i8 0, i8* %120, align 1
  %121 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %121, align 8
  br label %124

122:                                              ; preds = %112
  %123 = bitcast %"class.SkSL::String"* %113 to i8*
  store i8 0, i8* %123, align 1
  store i8 0, i8* %115, align 1
  br label %124

124:                                              ; preds = %118, %122
  %125 = bitcast %"class.SkSL::StringStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %125) #17
  %126 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 0, i32 0
  %127 = bitcast %"class.SkSL::StringStream"* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %127, align 16
  %128 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 1, i32 1
  %129 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 48, i1 false) #17
  %130 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 0
  %131 = bitcast %"class.SkSL::OutputStream"** %41 to i64*
  %132 = load i64, i64* %131, align 8
  store %"class.SkSL::OutputStream"* %130, %"class.SkSL::OutputStream"** %41, align 8
  %133 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %134 = load i32, i32* %133, align 4
  %135 = add nsw i32 %134, 1
  store i32 %135, i32* %133, align 4
  %136 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %137 = bitcast %"class.SkSL::Statement"** %136 to %"class.SkSL::Block"**
  %138 = load %"class.SkSL::Block"*, %"class.SkSL::Block"** %137, align 8
  %139 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %138, i64 0, i32 1, i32 0, i32 0, i64 16
  %140 = bitcast i8* %139 to %"class.std::__1::unique_ptr.221"**
  %141 = load %"class.std::__1::unique_ptr.221"*, %"class.std::__1::unique_ptr.221"** %140, align 8
  %142 = icmp eq %"class.std::__1::unique_ptr.221"* %141, null
  br i1 %142, label %151, label %143

143:                                              ; preds = %124
  %144 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %138, i64 0, i32 1, i32 0, i32 0, i64 24
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = lshr i64 %146, 1
  %148 = and i64 %147, 2147483647
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %141, i64 %148
  %150 = icmp eq i64 %148, 0
  br i1 %150, label %151, label %156

151:                                              ; preds = %176, %124, %143
  %152 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %5, align 8
  %153 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %152, i64 0, i32 6
  %154 = load i8, i8* %153, align 1, !range !2
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %216, label %179

156:                                              ; preds = %143, %176
  %157 = phi %"class.std::__1::unique_ptr.221"* [ %177, %176 ], [ %141, %143 ]
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %157, i64 0, i32 0, i32 0, i32 0
  %159 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %158, align 8
  %160 = bitcast %"class.SkSL::Statement"* %159 to i1 (%"class.SkSL::Statement"*)***
  %161 = load i1 (%"class.SkSL::Statement"*)**, i1 (%"class.SkSL::Statement"*)*** %160, align 8
  %162 = getelementptr inbounds i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %161, i64 3
  %163 = load i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %162, align 8
  %164 = call zeroext i1 %163(%"class.SkSL::Statement"* %159) #17
  br i1 %164, label %176, label %165

165:                                              ; preds = %156
  %166 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %158, align 8
  call void @_ZN4SkSL18MetalCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %166)
  %167 = load i8, i8* %21, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %176

169:                                              ; preds = %165
  %170 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %171 = load i8*, i8** %48, align 8
  %172 = bitcast %"class.SkSL::OutputStream"* %170 to void (%"class.SkSL::OutputStream"*, i8*)***
  %173 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %172, align 8
  %174 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %173, i64 2
  %175 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %174, align 8
  call void %175(%"class.SkSL::OutputStream"* %170, i8* %171) #17
  store i8 1, i8* %21, align 8
  br label %176

176:                                              ; preds = %169, %165, %156
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %157, i64 1
  %178 = icmp eq %"class.std::__1::unique_ptr.221"* %177, %149
  br i1 %178, label %151, label %156

179:                                              ; preds = %151
  %180 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %136, align 8
  %181 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %180, i64 0, i32 0, i32 2
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %182, 16
  br i1 %183, label %184, label %203

184:                                              ; preds = %197, %179
  %185 = phi %"class.SkSL::Statement"* [ %180, %179 ], [ %200, %197 ]
  %186 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %185, i64 2
  %187 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %185, i64 2, i32 0, i32 1
  %188 = bitcast i32* %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = lshr i64 %189, 1
  %191 = bitcast %"class.SkSL::Statement"* %186 to %"class.std::__1::unique_ptr.221"**
  %192 = and i64 %190, 2147483647
  br label %193

193:                                              ; preds = %197, %184
  %194 = phi i64 [ %195, %197 ], [ %192, %184 ]
  %195 = add nsw i64 %194, -1
  %196 = icmp eq i64 %194, 0
  br i1 %196, label %203, label %197

197:                                              ; preds = %193
  %198 = load %"class.std::__1::unique_ptr.221"*, %"class.std::__1::unique_ptr.221"** %191, align 8
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %198, i64 %195, i32 0, i32 0, i32 0
  %200 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %199, align 8
  %201 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %200, i64 0, i32 0, i32 2
  %202 = load i32, i32* %201, align 4
  switch i32 %202, label %203 [
    i32 26, label %216
    i32 16, label %184
    i32 25, label %193
  ]

203:                                              ; preds = %197, %193, %179
  call void @_ZN4SkSL18MetalCodeGenerator28writeReturnStatementFromMainEv(%"class.SkSL::MetalCodeGenerator"* %0)
  %204 = load i8, i8* %21, align 8, !range !2
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %206, label %213

206:                                              ; preds = %203
  %207 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %208 = load i8*, i8** %48, align 8
  %209 = bitcast %"class.SkSL::OutputStream"* %207 to void (%"class.SkSL::OutputStream"*, i8*)***
  %210 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %210, i64 2
  %212 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %211, align 8
  call void %212(%"class.SkSL::OutputStream"* %207, i8* %208) #17
  store i8 1, i8* %21, align 8
  br label %213

213:                                              ; preds = %206, %203
  %214 = load i32, i32* %133, align 4
  %215 = add nsw i32 %214, -1
  store i32 %215, i32* %133, align 4
  br label %221

216:                                              ; preds = %197, %151
  %217 = load i8, i8* %21, align 8
  %218 = load i32, i32* %133, align 4
  %219 = add nsw i32 %218, -1
  store i32 %219, i32* %133, align 4
  %220 = icmp eq i8 %217, 0
  br i1 %220, label %234, label %221

221:                                              ; preds = %213, %216
  %222 = phi i32 [ %215, %213 ], [ %219, %216 ]
  %223 = icmp sgt i32 %222, 0
  br i1 %223, label %224, label %234

224:                                              ; preds = %221, %224
  %225 = phi i32 [ %231, %224 ], [ 0, %221 ]
  %226 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %227 = bitcast %"class.SkSL::OutputStream"* %226 to void (%"class.SkSL::OutputStream"*, i8*)***
  %228 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %227, align 8
  %229 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %228, i64 2
  %230 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %229, align 8
  call void %230(%"class.SkSL::OutputStream"* %226, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %231 = add nuw nsw i32 %225, 1
  %232 = load i32, i32* %133, align 4
  %233 = icmp slt i32 %231, %232
  br i1 %233, label %224, label %234

234:                                              ; preds = %224, %221, %216
  %235 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %236 = bitcast %"class.SkSL::OutputStream"* %235 to void (%"class.SkSL::OutputStream"*, i8*)***
  %237 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %236, align 8
  %238 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %237, i64 2
  %239 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %238, align 8
  call void %239(%"class.SkSL::OutputStream"* %235, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #17
  store i8 0, i8* %21, align 8
  %240 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %241 = load i8*, i8** %48, align 8
  %242 = bitcast %"class.SkSL::OutputStream"* %240 to void (%"class.SkSL::OutputStream"*, i8*)***
  %243 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %242, align 8
  %244 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %243, i64 2
  %245 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %244, align 8
  call void %245(%"class.SkSL::OutputStream"* %240, i8* %241) #17
  store i8 1, i8* %21, align 8
  store i64 %132, i64* %131, align 8
  %246 = load i8, i8* %115, align 1
  %247 = icmp slt i8 %246, 0
  %248 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i8*, i8** %248, align 8
  %250 = bitcast %"class.SkSL::String"* %113 to i8*
  %251 = select i1 %247, i8* %249, i8* %250
  %252 = load i8, i8* %251, align 1
  %253 = icmp eq i8 %252, 0
  %254 = inttoptr i64 %132 to %"class.SkSL::OutputStream"*
  br i1 %253, label %275, label %255

255:                                              ; preds = %234
  %256 = load i32, i32* %133, align 4
  %257 = icmp sgt i32 %256, 0
  br i1 %257, label %258, label %269

258:                                              ; preds = %255, %258
  %259 = phi %"class.SkSL::OutputStream"* [ %268, %258 ], [ %254, %255 ]
  %260 = phi i32 [ %265, %258 ], [ 0, %255 ]
  %261 = bitcast %"class.SkSL::OutputStream"* %259 to void (%"class.SkSL::OutputStream"*, i8*)***
  %262 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %261, align 8
  %263 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %262, i64 2
  %264 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %263, align 8
  call void %264(%"class.SkSL::OutputStream"* %259, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %265 = add nuw nsw i32 %260, 1
  %266 = load i32, i32* %133, align 4
  %267 = icmp slt i32 %265, %266
  %268 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  br i1 %267, label %258, label %269

269:                                              ; preds = %258, %255
  %270 = phi %"class.SkSL::OutputStream"* [ %254, %255 ], [ %268, %258 ]
  %271 = bitcast %"class.SkSL::OutputStream"* %270 to void (%"class.SkSL::OutputStream"*, i8*)***
  %272 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %271, align 8
  %273 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %272, i64 2
  %274 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %273, align 8
  call void %274(%"class.SkSL::OutputStream"* %270, i8* %251) #17
  store i8 0, i8* %21, align 8
  br label %275

275:                                              ; preds = %234, %269
  %276 = call dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"* nonnull %4)
  %277 = bitcast %"class.SkSL::String"* %276 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %278 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %277, i64 0, i32 1, i32 0
  %279 = load i8, i8* %278, align 1
  %280 = icmp slt i8 %279, 0
  %281 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %276, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = bitcast %"class.SkSL::String"* %276 to i8*
  %284 = select i1 %280, i8* %282, i8* %283
  %285 = load i8, i8* %284, align 1
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %309, label %287

287:                                              ; preds = %275
  %288 = load i8, i8* %21, align 8, !range !2
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %303, label %290

290:                                              ; preds = %287
  %291 = load i32, i32* %133, align 4
  %292 = icmp sgt i32 %291, 0
  br i1 %292, label %293, label %303

293:                                              ; preds = %290, %293
  %294 = phi i32 [ %300, %293 ], [ 0, %290 ]
  %295 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %296 = bitcast %"class.SkSL::OutputStream"* %295 to void (%"class.SkSL::OutputStream"*, i8*)***
  %297 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %296, align 8
  %298 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %297, i64 2
  %299 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %298, align 8
  call void %299(%"class.SkSL::OutputStream"* %295, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %300 = add nuw nsw i32 %294, 1
  %301 = load i32, i32* %133, align 4
  %302 = icmp slt i32 %300, %301
  br i1 %302, label %293, label %303

303:                                              ; preds = %293, %290, %287
  %304 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %41, align 8
  %305 = bitcast %"class.SkSL::OutputStream"* %304 to void (%"class.SkSL::OutputStream"*, i8*)***
  %306 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %305, align 8
  %307 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %306, i64 2
  %308 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %307, align 8
  call void %308(%"class.SkSL::OutputStream"* %304, i8* %284) #17
  store i8 0, i8* %21, align 8
  br label %309

309:                                              ; preds = %275, %303
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 16
  %310 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 2, i32 0
  %311 = bitcast %"class.std::__1::basic_string"* %310 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %312 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %311, i64 0, i32 1, i32 0
  %313 = load i8, i8* %312, align 1
  %314 = icmp slt i8 %313, 0
  br i1 %314, label %315, label %318

315:                                              ; preds = %309
  %316 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %310, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load i8*, i8** %316, align 8
  call void @_ZdlPv(i8* %317) #18
  br label %318

318:                                              ; preds = %309, %315
  %319 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %319) #17
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %125) #17
  %320 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %16, align 8
  %321 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %320, i64 0, i32 2
  %322 = load i8, i8* %321, align 8, !range !2
  %323 = icmp eq i8 %322, 0
  br i1 %323, label %324, label %328

324:                                              ; preds = %318
  %325 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %15, align 8
  %326 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %3, i64 0, i32 0, i32 0, i32 0
  call void %325(%"union.std::__1::__function::__policy_storage"* nonnull %326) #17
  %327 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %16, align 8
  br label %328

328:                                              ; preds = %324, %318
  %329 = phi %"struct.std::__1::__function::__policy"* [ %327, %324 ], [ %320, %318 ]
  %330 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %329, i64 0, i32 1
  %331 = load void (i8*)*, void (i8*)** %330, align 8
  %332 = icmp eq void (i8*)* %331, null
  br i1 %332, label %335, label %333

333:                                              ; preds = %328
  %334 = load i8*, i8** %14, align 8
  call void %331(i8* %334) #17
  br label %335

335:                                              ; preds = %328, %333
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #17
  br label %336

336:                                              ; preds = %2, %335
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator15writeGlobalInitEv(%"class.SkSL::MetalCodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.anon.346, align 8
  %3 = bitcast %class.anon.346* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  %4 = getelementptr inbounds %class.anon.346, %class.anon.346* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.anon.346, %class.anon.346* %2, i64 0, i32 1
  %6 = getelementptr inbounds %class.anon.346, %class.anon.346* %2, i64 0, i32 2
  %7 = bitcast %class.anon.346* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @"_ZTVZN4SkSL18MetalCodeGenerator15writeGlobalInitEvE3$_1", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store i8 1, i8* %6, align 8
  store %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::MetalCodeGenerator"** %5, align 8
  %8 = getelementptr inbounds %class.anon.346, %class.anon.346* %2, i64 0, i32 0
  call void @_ZN4SkSL18MetalCodeGenerator17visitGlobalStructEPNS0_19GlobalStructVisitorE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"* nonnull %8)
  %9 = load i8, i8* %6, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %80

11:                                               ; preds = %1
  %12 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %5, align 8
  %13 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %12, i64 0, i32 12
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %12, i64 0, i32 11
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %12, i64 0, i32 0, i32 3
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i32 [ 0, %20 ], [ %29, %22 ]
  %24 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %21, align 8
  %25 = bitcast %"class.SkSL::OutputStream"* %24 to void (%"class.SkSL::OutputStream"*, i8*)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, i64 2
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, align 8
  call void %28(%"class.SkSL::OutputStream"* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %29 = add nuw nsw i32 %23, 1
  %30 = load i32, i32* %17, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %22, label %32

32:                                               ; preds = %22, %16, %11
  %33 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %12, i64 0, i32 0, i32 3
  %34 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %35 = bitcast %"class.SkSL::OutputStream"* %34 to void (%"class.SkSL::OutputStream"*, i8*)***
  %36 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, i64 2
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %37, align 8
  call void %38(%"class.SkSL::OutputStream"* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #17
  store i8 0, i8* %13, align 8
  %39 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %40 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %12, i64 0, i32 6
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*)***
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %43, i64 2
  %45 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %44, align 8
  call void %45(%"class.SkSL::OutputStream"* %39, i8* %41) #17
  store i8 1, i8* %13, align 8
  %46 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %5, align 8
  %47 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %46, i64 0, i32 12
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %32
  %51 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %46, i64 0, i32 11
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %46, i64 0, i32 0, i32 3
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi i32 [ 0, %54 ], [ %63, %56 ]
  %58 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %55, align 8
  %59 = bitcast %"class.SkSL::OutputStream"* %58 to void (%"class.SkSL::OutputStream"*, i8*)***
  %60 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %60, i64 2
  %62 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %61, align 8
  call void %62(%"class.SkSL::OutputStream"* %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %63 = add nuw nsw i32 %57, 1
  %64 = load i32, i32* %51, align 4
  %65 = icmp slt i32 %63, %64
  br i1 %65, label %56, label %66

66:                                               ; preds = %56, %50, %32
  %67 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %46, i64 0, i32 0, i32 3
  %68 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %67, align 8
  %69 = bitcast %"class.SkSL::OutputStream"* %68 to void (%"class.SkSL::OutputStream"*, i8*)***
  %70 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %70, i64 2
  %72 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %71, align 8
  call void %72(%"class.SkSL::OutputStream"* %68, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.252, i64 0, i64 0)) #17
  store i8 0, i8* %47, align 8
  %73 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %67, align 8
  %74 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %46, i64 0, i32 6
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.SkSL::OutputStream"* %73 to void (%"class.SkSL::OutputStream"*, i8*)***
  %77 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %77, i64 2
  %79 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %78, align 8
  call void %79(%"class.SkSL::OutputStream"* %73, i8* %75) #17
  store i8 1, i8* %47, align 8
  br label %80

80:                                               ; preds = %1, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Statement"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %157 [
    i32 16, label %5
    i32 21, label %7
    i32 26, label %37
    i32 29, label %39
    i32 23, label %41
    i32 22, label %43
    i32 20, label %45
    i32 27, label %47
    i32 17, label %49
    i32 18, label %76
    i32 19, label %103
    i32 24, label %130
    i32 25, label %130
  ]

5:                                                ; preds = %2
  %6 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::Block"*
  tail call void @_ZN4SkSL18MetalCodeGenerator10writeBlockERKNS_5BlockE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Block"* dereferenceable(72) %6)
  br label %157

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %9 = bitcast %"class.SkSL::Statement"* %8 to %"class.SkSL::Expression"**
  %10 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %9, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %10, i32 17)
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i32 [ 0, %18 ], [ %27, %20 ]
  %22 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %19, align 8
  %23 = bitcast %"class.SkSL::OutputStream"* %22 to void (%"class.SkSL::OutputStream"*, i8*)***
  %24 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, i64 2
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %25, align 8
  tail call void %26(%"class.SkSL::OutputStream"* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %27 = add nuw nsw i32 %21, 1
  %28 = load i32, i32* %15, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %20, label %30

30:                                               ; preds = %20, %7, %14
  %31 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %32 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %31, align 8
  %33 = bitcast %"class.SkSL::OutputStream"* %32 to void (%"class.SkSL::OutputStream"*, i8*)***
  %34 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, i64 2
  %36 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, align 8
  tail call void %36(%"class.SkSL::OutputStream"* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #17
  store i8 0, i8* %11, align 8
  br label %157

37:                                               ; preds = %2
  %38 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::ReturnStatement"*
  tail call void @_ZN4SkSL18MetalCodeGenerator20writeReturnStatementERKNS_15ReturnStatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::ReturnStatement"* dereferenceable(24) %38)
  br label %157

39:                                               ; preds = %2
  %40 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::VarDeclaration"*
  tail call void @_ZN4SkSL18MetalCodeGenerator19writeVarDeclarationERKNS_14VarDeclarationE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::VarDeclaration"* dereferenceable(48) %40)
  br label %157

41:                                               ; preds = %2
  %42 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::IfStatement"*
  tail call void @_ZN4SkSL18MetalCodeGenerator16writeIfStatementERKNS_11IfStatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::IfStatement"* dereferenceable(48) %42)
  br label %157

43:                                               ; preds = %2
  %44 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::ForStatement"*
  tail call void @_ZN4SkSL18MetalCodeGenerator17writeForStatementERKNS_12ForStatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::ForStatement"* dereferenceable(64) %44)
  br label %157

45:                                               ; preds = %2
  %46 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::DoStatement"*
  tail call void @_ZN4SkSL18MetalCodeGenerator16writeDoStatementERKNS_11DoStatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::DoStatement"* dereferenceable(32) %46)
  br label %157

47:                                               ; preds = %2
  %48 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::SwitchStatement"*
  tail call void @_ZN4SkSL18MetalCodeGenerator20writeSwitchStatementERKNS_15SwitchStatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::SwitchStatement"* dereferenceable(80) %48)
  br label %157

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %69, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %59

59:                                               ; preds = %59, %57
  %60 = phi i32 [ 0, %57 ], [ %66, %59 ]
  %61 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %58, align 8
  %62 = bitcast %"class.SkSL::OutputStream"* %61 to void (%"class.SkSL::OutputStream"*, i8*)***
  %63 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, i64 2
  %65 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %64, align 8
  tail call void %65(%"class.SkSL::OutputStream"* %61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %66 = add nuw nsw i32 %60, 1
  %67 = load i32, i32* %54, align 4
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %59, label %69

69:                                               ; preds = %59, %49, %53
  %70 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %71 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %70, align 8
  %72 = bitcast %"class.SkSL::OutputStream"* %71 to void (%"class.SkSL::OutputStream"*, i8*)***
  %73 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %73, i64 2
  %75 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %74, align 8
  tail call void %75(%"class.SkSL::OutputStream"* %71, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.202, i64 0, i64 0)) #17
  store i8 0, i8* %50, align 8
  br label %157

76:                                               ; preds = %2
  %77 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %84, label %96

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %86

86:                                               ; preds = %86, %84
  %87 = phi i32 [ 0, %84 ], [ %93, %86 ]
  %88 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %89 = bitcast %"class.SkSL::OutputStream"* %88 to void (%"class.SkSL::OutputStream"*, i8*)***
  %90 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %90, i64 2
  %92 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %91, align 8
  tail call void %92(%"class.SkSL::OutputStream"* %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %93 = add nuw nsw i32 %87, 1
  %94 = load i32, i32* %81, align 4
  %95 = icmp slt i32 %93, %94
  br i1 %95, label %86, label %96

96:                                               ; preds = %86, %76, %80
  %97 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %98 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %97, align 8
  %99 = bitcast %"class.SkSL::OutputStream"* %98 to void (%"class.SkSL::OutputStream"*, i8*)***
  %100 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %100, i64 2
  %102 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %101, align 8
  tail call void %102(%"class.SkSL::OutputStream"* %98, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i64 0, i64 0)) #17
  store i8 0, i8* %77, align 8
  br label %157

103:                                              ; preds = %2
  %104 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %123, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %109 = load i32, i32* %108, align 4
  %110 = icmp sgt i32 %109, 0
  br i1 %110, label %111, label %123

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %113

113:                                              ; preds = %113, %111
  %114 = phi i32 [ 0, %111 ], [ %120, %113 ]
  %115 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %112, align 8
  %116 = bitcast %"class.SkSL::OutputStream"* %115 to void (%"class.SkSL::OutputStream"*, i8*)***
  %117 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %117, i64 2
  %119 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %118, align 8
  tail call void %119(%"class.SkSL::OutputStream"* %115, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %120 = add nuw nsw i32 %114, 1
  %121 = load i32, i32* %108, align 4
  %122 = icmp slt i32 %120, %121
  br i1 %122, label %113, label %123

123:                                              ; preds = %113, %103, %107
  %124 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %125 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %124, align 8
  %126 = bitcast %"class.SkSL::OutputStream"* %125 to void (%"class.SkSL::OutputStream"*, i8*)***
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %127, i64 2
  %129 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %128, align 8
  tail call void %129(%"class.SkSL::OutputStream"* %125, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.204, i64 0, i64 0)) #17
  store i8 0, i8* %104, align 8
  br label %157

130:                                              ; preds = %2, %2
  %131 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i32 [ 0, %138 ], [ %147, %140 ]
  %142 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %139, align 8
  %143 = bitcast %"class.SkSL::OutputStream"* %142 to void (%"class.SkSL::OutputStream"*, i8*)***
  %144 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %144, i64 2
  %146 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %145, align 8
  tail call void %146(%"class.SkSL::OutputStream"* %142, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %147 = add nuw nsw i32 %141, 1
  %148 = load i32, i32* %135, align 4
  %149 = icmp slt i32 %147, %148
  br i1 %149, label %140, label %150

150:                                              ; preds = %140, %130, %134
  %151 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %152 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %151, align 8
  %153 = bitcast %"class.SkSL::OutputStream"* %152 to void (%"class.SkSL::OutputStream"*, i8*)***
  %154 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %154, i64 2
  %156 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %155, align 8
  tail call void %156(%"class.SkSL::OutputStream"* %152, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #17
  store i8 0, i8* %131, align 8
  br label %157

157:                                              ; preds = %2, %150, %123, %96, %69, %47, %45, %43, %41, %39, %37, %30, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator28writeReturnStatementFromMainEv(%"class.SkSL::MetalCodeGenerator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %3 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %2, align 8
  %4 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8
  switch i8 %7, label %64 [
    i8 0, label %8
    i8 1, label %35
  ]

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi i32 [ 0, %16 ], [ %25, %18 ]
  %20 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %17, align 8
  %21 = bitcast %"class.SkSL::OutputStream"* %20 to void (%"class.SkSL::OutputStream"*, i8*)***
  %22 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %22, i64 2
  %24 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %23, align 8
  tail call void %24(%"class.SkSL::OutputStream"* %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %25 = add nuw nsw i32 %19, 1
  %26 = load i32, i32* %13, align 4
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %18, label %28

28:                                               ; preds = %18, %8, %12
  %29 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %30 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %29, align 8
  %31 = bitcast %"class.SkSL::OutputStream"* %30 to void (%"class.SkSL::OutputStream"*, i8*)***
  %32 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %32, i64 2
  %34 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, align 8
  tail call void %34(%"class.SkSL::OutputStream"* %30, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.216, i64 0, i64 0)) #17
  br label %62

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i32 [ 0, %43 ], [ %52, %45 ]
  %47 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %44, align 8
  %48 = bitcast %"class.SkSL::OutputStream"* %47 to void (%"class.SkSL::OutputStream"*, i8*)***
  %49 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %49, i64 2
  %51 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %50, align 8
  tail call void %51(%"class.SkSL::OutputStream"* %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %52 = add nuw nsw i32 %46, 1
  %53 = load i32, i32* %40, align 4
  %54 = icmp slt i32 %52, %53
  br i1 %54, label %45, label %55

55:                                               ; preds = %45, %35, %39
  %56 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %57 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %56, align 8
  %58 = bitcast %"class.SkSL::OutputStream"* %57 to void (%"class.SkSL::OutputStream"*, i8*)***
  %59 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %59, i64 2
  %61 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %60, align 8
  tail call void %61(%"class.SkSL::OutputStream"* %57, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.217, i64 0, i64 0)) #17
  br label %62

62:                                               ; preds = %28, %55
  %63 = phi i8* [ %36, %55 ], [ %9, %28 ]
  store i8 0, i8* %63, align 8
  br label %64

64:                                               ; preds = %62, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.sk_sp, align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2
  %5 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %1
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %66

17:                                               ; preds = %14
  %18 = bitcast %class.sk_sp* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %19 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %19, align 8
  %20 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp* nonnull sret %2, %class.SkDynamicMemoryWStream* %20) #17
  %21 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #17
  %22 = load %class.SkData*, %class.SkData** %19, align 8
  %23 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 3
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 4
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %17
  %29 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #19
  unreachable

30:                                               ; preds = %17
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = call i8* @_Znwm(i64 %34) #18
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %39, align 8
  br label %45

40:                                               ; preds = %30
  %41 = trunc i64 %26 to i8
  %42 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1
  %44 = icmp eq i64 %26, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40, %32
  %46 = phi i8* [ %35, %32 ], [ %21, %40 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 %24, i64 %26, i1 false) #17
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i8* [ %21, %40 ], [ %46, %45 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %26
  store i8 0, i8* %49, align 1
  %50 = load i8, i8* %6, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #18
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %21, i64 24, i1 false) #17
  %57 = load %class.SkData*, %class.SkData** %19, align 8
  %58 = bitcast %class.SkData* %57 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #17
  %59 = icmp eq %class.SkData* %57, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %class.SkData, %class.SkData* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %57) #17
  call void @_ZN6SkDatadlEPv(i8* nonnull %58) #17
  br label %65

65:                                               ; preds = %55, %60, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  br label %66

66:                                               ; preds = %14, %65
  ret %"class.SkSL::String"* %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStreamD2Ev(%"class.SkSL::StringStream"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %12) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator19writeInterfaceBlockERKNS_14InterfaceBlockE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::InterfaceBlock"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.430", align 8
  %4 = alloca %"class.std::__1::tuple.407", align 1
  %5 = alloca %"class.std::__1::tuple.430", align 8
  %6 = alloca %"class.std::__1::tuple.407", align 1
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::InterfaceBlock"*, align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::InterfaceBlock"*, align 8
  %13 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 2
  %14 = tail call zeroext i1 @_ZN4SkSLeqEPKcRKNS_6StringE(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.178, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %13) #17
  br i1 %14, label %374, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 1
  %17 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %16, align 8
  %18 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %17, i64 0, i32 2
  %19 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %18, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator14writeModifiersERKNS_9ModifiersE(%"class.SkSL::MetalCodeGenerator"* %0, %"struct.SkSL::Modifiers"* dereferenceable(80) %19)
  %20 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %39, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i32 [ 0, %27 ], [ %36, %29 ]
  %31 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %28, align 8
  %32 = bitcast %"class.SkSL::OutputStream"* %31 to void (%"class.SkSL::OutputStream"*, i8*)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::OutputStream"* %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %36 = add nuw nsw i32 %30, 1
  %37 = load i32, i32* %24, align 4
  %38 = icmp slt i32 %36, %37
  br i1 %38, label %29, label %39

39:                                               ; preds = %29, %15, %23
  %40 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %41 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %42 = bitcast %"class.SkSL::OutputStream"* %41 to void (%"class.SkSL::OutputStream"*, i8*)***
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %43, i64 2
  %45 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %44, align 8
  tail call void %45(%"class.SkSL::OutputStream"* %41, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)) #17
  store i8 0, i8* %20, align 8
  %46 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #17
  %47 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = select i1 %50, i8* %52, i8* %46
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %79, label %56

56:                                               ; preds = %39
  %57 = load i8, i8* %20, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %73, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %73

63:                                               ; preds = %59, %63
  %64 = phi i32 [ %70, %63 ], [ 0, %59 ]
  %65 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %66 = bitcast %"class.SkSL::OutputStream"* %65 to void (%"class.SkSL::OutputStream"*, i8*)***
  %67 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %67, i64 2
  %69 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %68, align 8
  call void %69(%"class.SkSL::OutputStream"* %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %70 = add nuw nsw i32 %64, 1
  %71 = load i32, i32* %60, align 4
  %72 = icmp slt i32 %70, %71
  br i1 %72, label %63, label %73

73:                                               ; preds = %63, %59, %56
  %74 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %75 = bitcast %"class.SkSL::OutputStream"* %74 to void (%"class.SkSL::OutputStream"*, i8*)***
  %76 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %76, i64 2
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %77, align 8
  call void %78(%"class.SkSL::OutputStream"* %74, i8* %53) #17
  store i8 0, i8* %20, align 8
  br label %79

79:                                               ; preds = %39, %73
  %80 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %81 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"class.SkSL::OutputStream"* %80 to void (%"class.SkSL::OutputStream"*, i8*)***
  %84 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %84, i64 2
  %86 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %85, align 8
  call void %86(%"class.SkSL::OutputStream"* %80, i8* %82) #17
  store i8 1, i8* %20, align 8
  %87 = load i8, i8* %48, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %79
  %90 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %90) #18
  br label %91

91:                                               ; preds = %79, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #17
  %92 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %16, align 8
  %93 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %92, i64 0, i32 0, i32 2
  %94 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %93, align 8
  %95 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %94, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %103

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %94, i64 0, i32 6
  %100 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %99, align 8
  %101 = icmp eq %"class.SkSL::Type"* %100, null
  %102 = select i1 %101, %"class.SkSL::Type"* %94, %"class.SkSL::Type"* %100
  br label %103

103:                                              ; preds = %98, %91
  %104 = phi %"class.SkSL::Type"* [ %102, %98 ], [ %94, %91 ]
  %105 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %106 = load i32, i32* %105, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %104, i64 0, i32 10
  %109 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %104, i64 0, i32 0, i32 0, i32 1
  %110 = load i32, i32* %109, align 8
  call void @_ZN4SkSL18MetalCodeGenerator11writeFieldsERKNSt3__16vectorINS_4Type5FieldENS1_9allocatorIS4_EEEEiPKNS_14InterfaceBlockE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.std::__1::vector.19"* dereferenceable(24) %108, i32 %110, %"class.SkSL::InterfaceBlock"* %1)
  %111 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %112 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %111, align 8
  %113 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %112, i64 0, i32 5, i32 0
  %114 = load i8, i8* %113, align 8, !range !2
  %115 = icmp eq i8 %114, 0
  %116 = load i8, i8* %20, align 8
  br i1 %115, label %146, label %117

117:                                              ; preds = %103
  %118 = icmp eq i8 %116, 0
  br i1 %118, label %132, label %119

119:                                              ; preds = %117
  %120 = load i32, i32* %105, align 4
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %122, label %132

122:                                              ; preds = %119, %122
  %123 = phi i32 [ %129, %122 ], [ 0, %119 ]
  %124 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %125 = bitcast %"class.SkSL::OutputStream"* %124 to void (%"class.SkSL::OutputStream"*, i8*)***
  %126 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %126, i64 2
  %128 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %127, align 8
  call void %128(%"class.SkSL::OutputStream"* %124, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %129 = add nuw nsw i32 %123, 1
  %130 = load i32, i32* %105, align 4
  %131 = icmp slt i32 %129, %130
  br i1 %131, label %122, label %132

132:                                              ; preds = %122, %119, %117
  %133 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %134 = bitcast %"class.SkSL::OutputStream"* %133 to void (%"class.SkSL::OutputStream"*, i8*)***
  %135 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %135, i64 2
  %137 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %136, align 8
  call void %137(%"class.SkSL::OutputStream"* %133, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.191, i64 0, i64 0)) #17
  store i8 0, i8* %20, align 8
  %138 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %139 = load i8*, i8** %81, align 8
  %140 = bitcast %"class.SkSL::OutputStream"* %138 to void (%"class.SkSL::OutputStream"*, i8*)***
  %141 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %141, i64 2
  %143 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %142, align 8
  call void %143(%"class.SkSL::OutputStream"* %138, i8* %139) #17
  store i8 1, i8* %20, align 8
  %144 = load i32, i32* %105, align 4
  %145 = add nsw i32 %144, -1
  store i32 %145, i32* %105, align 4
  br label %150

146:                                              ; preds = %103
  %147 = load i32, i32* %105, align 4
  %148 = add nsw i32 %147, -1
  store i32 %148, i32* %105, align 4
  %149 = icmp eq i8 %116, 0
  br i1 %149, label %163, label %150

150:                                              ; preds = %132, %146
  %151 = phi i32 [ %145, %132 ], [ %148, %146 ]
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %153, label %163

153:                                              ; preds = %150, %153
  %154 = phi i32 [ %160, %153 ], [ 0, %150 ]
  %155 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %156 = bitcast %"class.SkSL::OutputStream"* %155 to void (%"class.SkSL::OutputStream"*, i8*)***
  %157 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %157, i64 2
  %159 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %158, align 8
  call void %159(%"class.SkSL::OutputStream"* %155, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %160 = add nuw nsw i32 %154, 1
  %161 = load i32, i32* %105, align 4
  %162 = icmp slt i32 %160, %161
  br i1 %162, label %153, label %163

163:                                              ; preds = %153, %146, %150
  %164 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %165 = bitcast %"class.SkSL::OutputStream"* %164 to void (%"class.SkSL::OutputStream"*, i8*)***
  %166 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %166, i64 2
  %168 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %167, align 8
  call void %168(%"class.SkSL::OutputStream"* %164, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #17
  store i8 0, i8* %20, align 8
  %169 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 3
  %170 = bitcast %"class.SkSL::String"* %169 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  %172 = load i8, i8* %171, align 1
  %173 = icmp slt i8 %172, 0
  %174 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = zext i8 %172 to i64
  %177 = select i1 %173, i64 %175, i64 %176
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %313, label %179

179:                                              ; preds = %163
  %180 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %181 = bitcast %"class.SkSL::OutputStream"* %180 to void (%"class.SkSL::OutputStream"*, i8*)***
  %182 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %182, i64 2
  %184 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %183, align 8
  call void %184(%"class.SkSL::OutputStream"* %180, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %20, align 8
  %185 = load i8, i8* %171, align 1
  %186 = icmp slt i8 %185, 0
  %187 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = bitcast %"class.SkSL::String"* %169 to i8*
  %190 = select i1 %186, i8* %188, i8* %189
  %191 = load i8, i8* %190, align 1
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %199, label %193

193:                                              ; preds = %179
  %194 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %195 = bitcast %"class.SkSL::OutputStream"* %194 to void (%"class.SkSL::OutputStream"*, i8*)***
  %196 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %196, i64 2
  %198 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %197, align 8
  call void %198(%"class.SkSL::OutputStream"* %194, i8* %190) #17
  store i8 0, i8* %20, align 8
  br label %199

199:                                              ; preds = %179, %193
  %200 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 4
  %201 = load i32, i32* %200, align 8
  %202 = icmp sgt i32 %201, 0
  br i1 %202, label %203, label %270

203:                                              ; preds = %199
  %204 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %205 = bitcast %"class.SkSL::OutputStream"* %204 to void (%"class.SkSL::OutputStream"*, i8*)***
  %206 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %205, align 8
  %207 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %206, i64 2
  %208 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %207, align 8
  call void %208(%"class.SkSL::OutputStream"* %204, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.120, i64 0, i64 0)) #17
  store i8 0, i8* %20, align 8
  %209 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %209) #17
  %210 = load i32, i32* %200, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %8, i32 %210) #17
  %211 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  %215 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  %217 = select i1 %214, i8* %216, i8* %209
  %218 = load i8, i8* %217, align 1
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %243, label %220

220:                                              ; preds = %203
  %221 = load i8, i8* %20, align 8, !range !2
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %236, label %223

223:                                              ; preds = %220
  %224 = load i32, i32* %105, align 4
  %225 = icmp sgt i32 %224, 0
  br i1 %225, label %226, label %236

226:                                              ; preds = %223, %226
  %227 = phi i32 [ %233, %226 ], [ 0, %223 ]
  %228 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %229 = bitcast %"class.SkSL::OutputStream"* %228 to void (%"class.SkSL::OutputStream"*, i8*)***
  %230 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %229, align 8
  %231 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %230, i64 2
  %232 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %231, align 8
  call void %232(%"class.SkSL::OutputStream"* %228, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %233 = add nuw nsw i32 %227, 1
  %234 = load i32, i32* %105, align 4
  %235 = icmp slt i32 %233, %234
  br i1 %235, label %226, label %236

236:                                              ; preds = %226, %223, %220
  %237 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %238 = bitcast %"class.SkSL::OutputStream"* %237 to void (%"class.SkSL::OutputStream"*, i8*)***
  %239 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %238, align 8
  %240 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %239, i64 2
  %241 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %240, align 8
  call void %241(%"class.SkSL::OutputStream"* %237, i8* %217) #17
  store i8 0, i8* %20, align 8
  %242 = load i8, i8* %212, align 1
  br label %243

243:                                              ; preds = %203, %236
  %244 = phi i8 [ %213, %203 ], [ %242, %236 ]
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %243
  %247 = load i8*, i8** %215, align 8
  call void @_ZdlPv(i8* %247) #18
  br label %248

248:                                              ; preds = %243, %246
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %209) #17
  %249 = load i8, i8* %20, align 8, !range !2
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %264, label %251

251:                                              ; preds = %248
  %252 = load i32, i32* %105, align 4
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %254, label %264

254:                                              ; preds = %251, %254
  %255 = phi i32 [ %261, %254 ], [ 0, %251 ]
  %256 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %257 = bitcast %"class.SkSL::OutputStream"* %256 to void (%"class.SkSL::OutputStream"*, i8*)***
  %258 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %257, align 8
  %259 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %258, i64 2
  %260 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %259, align 8
  call void %260(%"class.SkSL::OutputStream"* %256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %261 = add nuw nsw i32 %255, 1
  %262 = load i32, i32* %105, align 4
  %263 = icmp slt i32 %261, %262
  br i1 %263, label %254, label %264

264:                                              ; preds = %254, %248, %251
  %265 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %266 = bitcast %"class.SkSL::OutputStream"* %265 to void (%"class.SkSL::OutputStream"*, i8*)***
  %267 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %266, align 8
  %268 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %267, i64 2
  %269 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %268, align 8
  call void %269(%"class.SkSL::OutputStream"* %265, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121, i64 0, i64 0)) #17
  br label %278

270:                                              ; preds = %199
  %271 = icmp eq i32 %201, -1
  br i1 %271, label %272, label %279

272:                                              ; preds = %270
  %273 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %274 = bitcast %"class.SkSL::OutputStream"* %273 to void (%"class.SkSL::OutputStream"*, i8*)***
  %275 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %274, align 8
  %276 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %275, i64 2
  %277 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %276, align 8
  call void %277(%"class.SkSL::OutputStream"* %273, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.192, i64 0, i64 0)) #17
  br label %278

278:                                              ; preds = %264, %272
  store i8 0, i8* %20, align 8
  br label %279

279:                                              ; preds = %278, %270
  %280 = bitcast %"class.SkSL::InterfaceBlock"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %280) #17
  store %"class.SkSL::InterfaceBlock"* %1, %"class.SkSL::InterfaceBlock"** %9, align 8
  %281 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 3, i32 0
  %282 = bitcast %"class.std::__1::tuple.430"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %282) #17
  %283 = getelementptr inbounds %"class.std::__1::tuple.430", %"class.std::__1::tuple.430"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::InterfaceBlock"** %9, %"class.SkSL::InterfaceBlock"*** %283, align 8
  %284 = getelementptr inbounds %"class.std::__1::tuple.407", %"class.std::__1::tuple.407"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %284) #17
  %285 = call { %"struct.std::__1::__hash_node_base.163"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.159"* %281, %"class.SkSL::InterfaceBlock"** nonnull dereferenceable(8) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.430"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.407"* nonnull dereferenceable(1) %6) #17
  %286 = extractvalue { %"struct.std::__1::__hash_node_base.163"*, i8 } %285, 0
  %287 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %286, i64 3
  %288 = bitcast %"struct.std::__1::__hash_node_base.163"* %287 to %"class.SkSL::String"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %284) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %282) #17
  %289 = bitcast %"struct.std::__1::__hash_node_base.163"* %287 to %"class.std::__1::basic_string"*
  %290 = icmp eq %"class.SkSL::String"* %169, %288
  br i1 %290, label %312, label %291

291:                                              ; preds = %279
  %292 = bitcast %"struct.std::__1::__hash_node_base.163"* %287 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %293 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %292, i64 0, i32 1, i32 0
  %294 = load i8, i8* %293, align 1
  %295 = icmp slt i8 %294, 0
  %296 = load i8, i8* %171, align 1
  %297 = icmp slt i8 %296, 0
  br i1 %295, label %305, label %298

298:                                              ; preds = %291
  br i1 %297, label %301, label %299

299:                                              ; preds = %298
  %300 = bitcast %"struct.std::__1::__hash_node_base.163"* %287 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 %189, i64 24, i1 false) #17
  br label %312

301:                                              ; preds = %298
  %302 = load i8*, i8** %187, align 8
  %303 = load i64, i64* %174, align 8
  %304 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %289, i8* %302, i64 %303) #17
  br label %312

305:                                              ; preds = %291
  %306 = load i8*, i8** %187, align 8
  %307 = load i64, i64* %174, align 8
  %308 = zext i8 %296 to i64
  %309 = select i1 %297, i8* %306, i8* %189
  %310 = select i1 %297, i64 %307, i64 %308
  %311 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %289, i8* %309, i64 %310) #17
  br label %312

312:                                              ; preds = %279, %299, %301, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #17
  br label %346

313:                                              ; preds = %163
  %314 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %314) #17
  %315 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %315) #17
  %316 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 4
  %317 = load i32, i32* %316, align 8
  %318 = add nsw i32 %317, 1
  store i32 %318, i32* %316, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %11, i32 %317) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.193, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %11) #17
  %319 = bitcast %"class.SkSL::InterfaceBlock"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319) #17
  store %"class.SkSL::InterfaceBlock"* %1, %"class.SkSL::InterfaceBlock"** %12, align 8
  %320 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 3, i32 0
  %321 = bitcast %"class.std::__1::tuple.430"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %321) #17
  %322 = getelementptr inbounds %"class.std::__1::tuple.430", %"class.std::__1::tuple.430"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::InterfaceBlock"** %12, %"class.SkSL::InterfaceBlock"*** %322, align 8
  %323 = getelementptr inbounds %"class.std::__1::tuple.407", %"class.std::__1::tuple.407"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %323) #17
  %324 = call { %"struct.std::__1::__hash_node_base.163"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.159"* %320, %"class.SkSL::InterfaceBlock"** nonnull dereferenceable(8) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.430"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.407"* nonnull dereferenceable(1) %4) #17
  %325 = extractvalue { %"struct.std::__1::__hash_node_base.163"*, i8 } %324, 0
  %326 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %325, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %323) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %321) #17
  %327 = bitcast %"struct.std::__1::__hash_node_base.163"* %326 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %328 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %327, i64 0, i32 1, i32 0
  %329 = load i8, i8* %328, align 1
  %330 = icmp slt i8 %329, 0
  br i1 %330, label %331, label %334

331:                                              ; preds = %313
  %332 = bitcast %"struct.std::__1::__hash_node_base.163"* %326 to i8**
  %333 = load i8*, i8** %332, align 8
  call void @_ZdlPv(i8* %333) #18
  br label %334

334:                                              ; preds = %313, %331
  %335 = bitcast %"struct.std::__1::__hash_node_base.163"* %326 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %335, i8* nonnull align 8 %314, i64 24, i1 false) #17
  %336 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %337 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %336, i64 0, i32 1, i32 0
  store i8 0, i8* %337, align 1
  store i8 0, i8* %314, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319) #17
  %338 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %339 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %338, i64 0, i32 1, i32 0
  %340 = load i8, i8* %339, align 1
  %341 = icmp slt i8 %340, 0
  br i1 %341, label %342, label %345

342:                                              ; preds = %334
  %343 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load i8*, i8** %343, align 8
  call void @_ZdlPv(i8* %344) #18
  br label %345

345:                                              ; preds = %334, %342
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %315) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %314) #17
  br label %346

346:                                              ; preds = %345, %312
  %347 = load i8, i8* %20, align 8, !range !2
  %348 = icmp eq i8 %347, 0
  br i1 %348, label %362, label %349

349:                                              ; preds = %346
  %350 = load i32, i32* %105, align 4
  %351 = icmp sgt i32 %350, 0
  br i1 %351, label %352, label %362

352:                                              ; preds = %349, %352
  %353 = phi i32 [ %359, %352 ], [ 0, %349 ]
  %354 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %355 = bitcast %"class.SkSL::OutputStream"* %354 to void (%"class.SkSL::OutputStream"*, i8*)***
  %356 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %355, align 8
  %357 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %356, i64 2
  %358 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %357, align 8
  call void %358(%"class.SkSL::OutputStream"* %354, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %359 = add nuw nsw i32 %353, 1
  %360 = load i32, i32* %105, align 4
  %361 = icmp slt i32 %359, %360
  br i1 %361, label %352, label %362

362:                                              ; preds = %352, %346, %349
  %363 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %364 = bitcast %"class.SkSL::OutputStream"* %363 to void (%"class.SkSL::OutputStream"*, i8*)***
  %365 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %364, align 8
  %366 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %365, i64 2
  %367 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %366, align 8
  call void %367(%"class.SkSL::OutputStream"* %363, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #17
  store i8 0, i8* %20, align 8
  %368 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %369 = load i8*, i8** %81, align 8
  %370 = bitcast %"class.SkSL::OutputStream"* %368 to void (%"class.SkSL::OutputStream"*, i8*)***
  %371 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %370, align 8
  %372 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %371, i64 2
  %373 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %372, align 8
  call void %373(%"class.SkSL::OutputStream"* %368, i8* %369) #17
  store i8 1, i8* %20, align 8
  br label %374

374:                                              ; preds = %2, %362
  ret void
}

declare zeroext i1 @_ZN4SkSLeqEPKcRKNS_6StringE(i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4SkSL12MemoryLayout17LayoutIsSupportedERKNS_4TypeE(%"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 comdat align 2 {
  br label %2

2:                                                ; preds = %6, %1
  %3 = phi %"class.SkSL::Type"* [ %0, %1 ], [ %10, %6 ]
  %4 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %27 [
    i32 8, label %26
    i32 1, label %26
    i32 11, label %26
    i32 4, label %26
    i32 0, label %6
    i32 9, label %11
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 6
  %8 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %7, align 8
  %9 = icmp eq %"class.SkSL::Type"* %8, null
  %10 = select i1 %9, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %8
  br label %2

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 10, i32 0, i32 0
  %13 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 10, i32 0, i32 1
  %15 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %14, align 8
  %16 = icmp eq %"struct.SkSL::Type::Field"* %13, %15
  br i1 %16, label %27, label %19

17:                                               ; preds = %19
  %18 = icmp eq %"struct.SkSL::Type::Field"* %25, %15
  br i1 %18, label %27, label %19

19:                                               ; preds = %11, %17
  %20 = phi %"struct.SkSL::Type::Field"* [ %25, %17 ], [ %13, %11 ]
  %21 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %20, i64 0, i32 2
  %22 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %21, align 8
  %23 = tail call i64 @_ZN4SkSL12MemoryLayout17LayoutIsSupportedERKNS_4TypeE(%"class.SkSL::Type"* dereferenceable(184) %22) #17
  %24 = icmp eq i64 %23, 0
  %25 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %20, i64 1
  br i1 %24, label %27, label %17

26:                                               ; preds = %2, %2, %2, %2
  br label %27

27:                                               ; preds = %17, %19, %2, %26, %11
  %28 = phi i64 [ 1, %11 ], [ 1, %26 ], [ 0, %2 ], [ 1, %17 ], [ 0, %19 ]
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %74 [
    i32 8, label %6
    i32 1, label %6
    i32 11, label %8
    i32 4, label %20
    i32 0, label %38
    i32 9, label %50
  ]

6:                                                ; preds = %2, %2
  %7 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  br label %112

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %10 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %9, align 8
  %11 = icmp eq %"class.SkSL::Type"* %10, null
  %12 = select i1 %11, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %10
  %13 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %12)
  %14 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %15 = load i32, i32* %14, align 8
  %16 = srem i32 %15, 2
  %17 = add nsw i32 %16, %15
  %18 = sext i32 %17 to i64
  %19 = mul i64 %13, %18
  br label %112

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %22 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %21, align 8
  %23 = icmp eq %"class.SkSL::Type"* %22, null
  %24 = select i1 %23, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %22
  %25 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %24)
  %26 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 9
  %27 = load i32, i32* %26, align 4
  %28 = srem i32 %27, 2
  %29 = add nsw i32 %28, %27
  %30 = sext i32 %29 to i64
  %31 = mul i64 %25, %30
  %32 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %0, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  switch i32 %33, label %37 [
    i32 0, label %34
    i32 1, label %112
    i32 2, label %112
  ]

34:                                               ; preds = %20
  %35 = add i64 %31, 15
  %36 = and i64 %35, -16
  br label %112

37:                                               ; preds = %20
  tail call void @llvm.trap() #17
  unreachable

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %40 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %39, align 8
  %41 = icmp eq %"class.SkSL::Type"* %40, null
  %42 = select i1 %41, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %40
  %43 = tail call i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %42)
  %44 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %0, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  switch i32 %45, label %49 [
    i32 0, label %46
    i32 1, label %112
    i32 2, label %112
  ]

46:                                               ; preds = %38
  %47 = add i64 %43, 15
  %48 = and i64 %47, -16
  br label %112

49:                                               ; preds = %38
  tail call void @llvm.trap() #17
  unreachable

50:                                               ; preds = %2
  %51 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 0
  %52 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %51, align 8
  %53 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 1
  %54 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %53, align 8
  %55 = icmp eq %"struct.SkSL::Type::Field"* %52, %54
  br i1 %55, label %56, label %64

56:                                               ; preds = %64, %50
  %57 = phi i64 [ 0, %50 ], [ %71, %64 ]
  %58 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %0, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  switch i32 %59, label %63 [
    i32 0, label %60
    i32 1, label %112
    i32 2, label %112
  ]

60:                                               ; preds = %56
  %61 = add i64 %57, 15
  %62 = and i64 %61, -16
  br label %112

63:                                               ; preds = %56
  tail call void @llvm.trap() #17
  unreachable

64:                                               ; preds = %50, %64
  %65 = phi i64 [ %71, %64 ], [ 0, %50 ]
  %66 = phi %"struct.SkSL::Type::Field"* [ %72, %64 ], [ %52, %50 ]
  %67 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %66, i64 0, i32 2
  %68 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %67, align 8
  %69 = tail call i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %68)
  %70 = icmp ugt i64 %69, %65
  %71 = select i1 %70, i64 %69, i64 %65
  %72 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %66, i64 1
  %73 = icmp eq %"struct.SkSL::Type::Field"* %72, %54
  br i1 %73, label %56, label %64

74:                                               ; preds = %2
  %75 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #17
  %76 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = icmp ugt i64 %79, -17
  br i1 %80, label %81, label %83

81:                                               ; preds = %74
  %82 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %82) #19
  unreachable

83:                                               ; preds = %74
  %84 = icmp ult i64 %79, 23
  br i1 %84, label %94, label %85

85:                                               ; preds = %83
  %86 = add nuw i64 %79, 16
  %87 = and i64 %86, -16
  %88 = tail call i8* @_Znwm(i64 %87) #18
  %89 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %88, i8** %89, align 8
  %90 = or i64 %87, -9223372036854775808
  %91 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %79, i64* %92, align 8
  %93 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %99

94:                                               ; preds = %83
  %95 = trunc i64 %79 to i8
  %96 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  store i8 %95, i8* %97, align 1
  %98 = icmp eq i64 %79, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %94, %85
  %100 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %96, %94 ], [ %93, %85 ]
  %101 = phi i8* [ %75, %94 ], [ %88, %85 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %101, i8* align 1 %77, i64 %79, i1 false) #17
  br label %102

102:                                              ; preds = %94, %99
  %103 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %96, %94 ], [ %100, %99 ]
  %104 = phi i8* [ %75, %94 ], [ %101, %99 ]
  %105 = getelementptr inbounds i8, i8* %104, i64 %79
  store i8 0, i8* %105, align 1
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  %109 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = select i1 %108, i8* %110, i8* %75
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.243, i64 0, i64 0), i32 73, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.244, i64 0, i64 0), i8* %111) #19
  unreachable

112:                                              ; preds = %60, %56, %56, %46, %38, %38, %34, %20, %20, %8, %6
  %113 = phi i64 [ %19, %8 ], [ %7, %6 ], [ %36, %34 ], [ %31, %20 ], [ %31, %20 ], [ %48, %46 ], [ %43, %38 ], [ %43, %38 ], [ %62, %60 ], [ %57, %56 ], [ %57, %56 ]
  ret i64 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %70 [
    i32 8, label %6
    i32 1, label %108
    i32 11, label %11
    i32 4, label %34
    i32 0, label %34
    i32 9, label %40
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 3
  %10 = select i1 %9, i64 1, i64 4
  br label %108

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 3
  %18 = and i1 %14, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %21 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %20, align 8
  %22 = icmp eq %"class.SkSL::Type"* %21, null
  %23 = select i1 %22, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %21
  %24 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %23)
  %25 = shl i64 %24, 2
  br label %108

26:                                               ; preds = %11
  %27 = sext i32 %16 to i64
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %29 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %28, align 8
  %30 = icmp eq %"class.SkSL::Type"* %29, null
  %31 = select i1 %30, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %29
  %32 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %31)
  %33 = mul i64 %32, %27
  br label %108

34:                                               ; preds = %2, %2
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = tail call i64 @_ZNK4SkSL12MemoryLayout6strideERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %39 = mul i64 %38, %37
  br label %108

40:                                               ; preds = %2
  %41 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 0
  %42 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %41, align 8
  %43 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 1
  %44 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %43, align 8
  %45 = icmp eq %"struct.SkSL::Type::Field"* %42, %44
  br i1 %45, label %48, label %54

46:                                               ; preds = %54
  %47 = add i64 %67, -1
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i64 [ -1, %40 ], [ %47, %46 ]
  %50 = tail call i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %51 = add i64 %49, %50
  %52 = sub i64 0, %50
  %53 = and i64 %51, %52
  br label %108

54:                                               ; preds = %40, %54
  %55 = phi i64 [ %67, %54 ], [ 0, %40 ]
  %56 = phi %"struct.SkSL::Type::Field"* [ %68, %54 ], [ %42, %40 ]
  %57 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %56, i64 0, i32 2
  %58 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %57, align 8
  %59 = tail call i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %58)
  %60 = urem i64 %55, %59
  %61 = icmp eq i64 %60, 0
  %62 = sub i64 %59, %60
  %63 = select i1 %61, i64 0, i64 %62
  %64 = add i64 %63, %55
  %65 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %57, align 8
  %66 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %65)
  %67 = add i64 %64, %66
  %68 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %56, i64 1
  %69 = icmp eq %"struct.SkSL::Type::Field"* %68, %44
  br i1 %69, label %46, label %54

70:                                               ; preds = %2
  %71 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #17
  %72 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = icmp ugt i64 %75, -17
  br i1 %76, label %77, label %79

77:                                               ; preds = %70
  %78 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %78) #19
  unreachable

79:                                               ; preds = %70
  %80 = icmp ult i64 %75, 23
  br i1 %80, label %90, label %81

81:                                               ; preds = %79
  %82 = add nuw i64 %75, 16
  %83 = and i64 %82, -16
  %84 = tail call i8* @_Znwm(i64 %83) #18
  %85 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %84, i8** %85, align 8
  %86 = or i64 %83, -9223372036854775808
  %87 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %75, i64* %88, align 8
  %89 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %95

90:                                               ; preds = %79
  %91 = trunc i64 %75 to i8
  %92 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  store i8 %91, i8* %93, align 1
  %94 = icmp eq i64 %75, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %90, %81
  %96 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %92, %90 ], [ %89, %81 ]
  %97 = phi i8* [ %71, %90 ], [ %84, %81 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %97, i8* align 1 %73, i64 %75, i1 false) #17
  br label %98

98:                                               ; preds = %90, %95
  %99 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %92, %90 ], [ %96, %95 ]
  %100 = phi i8* [ %71, %90 ], [ %97, %95 ]
  %101 = getelementptr inbounds i8, i8* %100, i64 %75
  store i8 0, i8* %101, align 1
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  %105 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = select i1 %104, i8* %106, i8* %71
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.243, i64 0, i64 0), i32 140, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.244, i64 0, i64 0), i8* %107) #19
  unreachable

108:                                              ; preds = %2, %6, %48, %34, %26, %19
  %109 = phi i64 [ %53, %48 ], [ %39, %34 ], [ %25, %19 ], [ %33, %26 ], [ %10, %6 ], [ 4, %2 ]
  ret i64 %109
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator19writeVarInitializerERKNS_8VariableERKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Variable"* nocapture readnone dereferenceable(64), %"class.SkSL::Expression"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %2, i32 17)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator19writeVarDeclarationERKNS_14VarDeclarationE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::VarDeclaration"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %1, i64 0, i32 1
  %6 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %6, i64 0, i32 2
  %8 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %7, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator14writeModifiersERKNS_9ModifiersE(%"class.SkSL::MetalCodeGenerator"* %0, %"struct.SkSL::Modifiers"* dereferenceable(80) %8)
  %9 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %5, align 8
  %10 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %9, i64 0, i32 0, i32 2
  %11 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %10, align 8
  %12 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %11) #17
  %13 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = select i1 %16, i8* %18, i8* %12
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %50, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %42, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i32 [ 0, %30 ], [ %39, %32 ]
  %34 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %31, align 8
  %35 = bitcast %"class.SkSL::OutputStream"* %34 to void (%"class.SkSL::OutputStream"*, i8*)***
  %36 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, i64 2
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %37, align 8
  call void %38(%"class.SkSL::OutputStream"* %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %39 = add nuw nsw i32 %33, 1
  %40 = load i32, i32* %27, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %32, label %42

42:                                               ; preds = %32, %26, %22
  %43 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %44 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %43, align 8
  %45 = bitcast %"class.SkSL::OutputStream"* %44 to void (%"class.SkSL::OutputStream"*, i8*)***
  %46 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %46, i64 2
  %48 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %47, align 8
  call void %48(%"class.SkSL::OutputStream"* %44, i8* %19) #17
  store i8 0, i8* %23, align 8
  %49 = load i8, i8* %14, align 1
  br label %50

50:                                               ; preds = %42, %2
  %51 = phi i8 [ %15, %2 ], [ %49, %42 ]
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %54) #18
  br label %55

55:                                               ; preds = %50, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #17
  %56 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %75, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i32 [ 0, %63 ], [ %72, %65 ]
  %67 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %64, align 8
  %68 = bitcast %"class.SkSL::OutputStream"* %67 to void (%"class.SkSL::OutputStream"*, i8*)***
  %69 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %69, i64 2
  %71 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %70, align 8
  call void %71(%"class.SkSL::OutputStream"* %67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %72 = add nuw nsw i32 %66, 1
  %73 = load i32, i32* %60, align 4
  %74 = icmp slt i32 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %55, %59
  %76 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %77 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %76, align 8
  %78 = bitcast %"class.SkSL::OutputStream"* %77 to void (%"class.SkSL::OutputStream"*, i8*)***
  %79 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, i64 2
  %81 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %80, align 8
  call void %81(%"class.SkSL::OutputStream"* %77, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %56, align 8
  %82 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #17
  %83 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %5, align 8
  %84 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %83, i64 0, i32 0, i32 1, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %83, i64 0, i32 0, i32 1, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = icmp ugt i64 %87, -17
  br i1 %88, label %89, label %91

89:                                               ; preds = %75
  %90 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %90) #19
  unreachable

91:                                               ; preds = %75
  %92 = icmp ult i64 %87, 23
  br i1 %92, label %102, label %93

93:                                               ; preds = %91
  %94 = add nuw i64 %87, 16
  %95 = and i64 %94, -16
  %96 = call i8* @_Znwm(i64 %95) #18
  %97 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %96, i8** %97, align 8
  %98 = or i64 %95, -9223372036854775808
  %99 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %87, i64* %100, align 8
  %101 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %107

102:                                              ; preds = %91
  %103 = trunc i64 %87 to i8
  %104 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  store i8 %103, i8* %105, align 1
  %106 = icmp eq i64 %87, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %102, %93
  %108 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %104, %102 ], [ %101, %93 ]
  %109 = phi i8* [ %82, %102 ], [ %96, %93 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* align 1 %85, i64 %87, i1 false) #17
  br label %110

110:                                              ; preds = %102, %107
  %111 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %104, %102 ], [ %108, %107 ]
  %112 = phi i8* [ %82, %102 ], [ %109, %107 ]
  %113 = getelementptr inbounds i8, i8* %112, i64 %87
  store i8 0, i8* %113, align 1
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4)
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %119) #18
  br label %120

120:                                              ; preds = %110, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #17
  %121 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %122 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %121, align 8
  %123 = icmp eq %"class.SkSL::Expression"* %122, null
  br i1 %123, label %148, label %124

124:                                              ; preds = %120
  %125 = load i8, i8* %56, align 8, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %141, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %129 = load i32, i32* %128, align 4
  %130 = icmp sgt i32 %129, 0
  br i1 %130, label %131, label %141

131:                                              ; preds = %127, %131
  %132 = phi i32 [ %138, %131 ], [ 0, %127 ]
  %133 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %76, align 8
  %134 = bitcast %"class.SkSL::OutputStream"* %133 to void (%"class.SkSL::OutputStream"*, i8*)***
  %135 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %135, i64 2
  %137 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %136, align 8
  call void %137(%"class.SkSL::OutputStream"* %133, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %138 = add nuw nsw i32 %132, 1
  %139 = load i32, i32* %128, align 4
  %140 = icmp slt i32 %138, %139
  br i1 %140, label %131, label %141

141:                                              ; preds = %131, %124, %127
  %142 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %76, align 8
  %143 = bitcast %"class.SkSL::OutputStream"* %142 to void (%"class.SkSL::OutputStream"*, i8*)***
  %144 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %144, i64 2
  %146 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %145, align 8
  call void %146(%"class.SkSL::OutputStream"* %142, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0)) #17
  store i8 0, i8* %56, align 8
  %147 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %121, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %147, i32 17) #17
  br label %148

148:                                              ; preds = %120, %141
  %149 = load i8, i8* %56, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %165, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %153 = load i32, i32* %152, align 4
  %154 = icmp sgt i32 %153, 0
  br i1 %154, label %155, label %165

155:                                              ; preds = %151, %155
  %156 = phi i32 [ %162, %155 ], [ 0, %151 ]
  %157 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %76, align 8
  %158 = bitcast %"class.SkSL::OutputStream"* %157 to void (%"class.SkSL::OutputStream"*, i8*)***
  %159 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %159, i64 2
  %161 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %160, align 8
  call void %161(%"class.SkSL::OutputStream"* %157, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %162 = add nuw nsw i32 %156, 1
  %163 = load i32, i32* %152, align 4
  %164 = icmp slt i32 %162, %163
  br i1 %164, label %155, label %165

165:                                              ; preds = %155, %148, %151
  %166 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %76, align 8
  %167 = bitcast %"class.SkSL::OutputStream"* %166 to void (%"class.SkSL::OutputStream"*, i8*)***
  %168 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %168, i64 2
  %170 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %169, align 8
  call void %170(%"class.SkSL::OutputStream"* %166, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #17
  store i8 0, i8* %56, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator10writeBlockERKNS_5BlockE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Block"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %31

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 16
  %8 = bitcast i8* %7 to %"class.std::__1::unique_ptr.221"**
  %9 = load %"class.std::__1::unique_ptr.221"*, %"class.std::__1::unique_ptr.221"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.221"* %9, null
  br i1 %10, label %31, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %14, 1
  %16 = and i64 %15, 2147483647
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %9, i64 %16
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %31, label %21

19:                                               ; preds = %21
  %20 = icmp eq %"class.std::__1::unique_ptr.221"* %30, %17
  br i1 %20, label %31, label %21

21:                                               ; preds = %11, %19
  %22 = phi %"class.std::__1::unique_ptr.221"* [ %30, %19 ], [ %9, %11 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %23, align 8
  %25 = bitcast %"class.SkSL::Statement"* %24 to i1 (%"class.SkSL::Statement"*)***
  %26 = load i1 (%"class.SkSL::Statement"*)**, i1 (%"class.SkSL::Statement"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %26, i64 3
  %28 = load i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.SkSL::Statement"* %24) #17
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %22, i64 1
  br i1 %29, label %19, label %68

31:                                               ; preds = %19, %2, %11, %6
  %32 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 0, %39 ], [ %48, %41 ]
  %43 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %40, align 8
  %44 = bitcast %"class.SkSL::OutputStream"* %43 to void (%"class.SkSL::OutputStream"*, i8*)***
  %45 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %45, i64 2
  %47 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %46, align 8
  tail call void %47(%"class.SkSL::OutputStream"* %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %48 = add nuw nsw i32 %42, 1
  %49 = load i32, i32* %36, align 4
  %50 = icmp slt i32 %48, %49
  br i1 %50, label %41, label %51

51:                                               ; preds = %41, %31, %35
  %52 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %53 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %52, align 8
  %54 = bitcast %"class.SkSL::OutputStream"* %53 to void (%"class.SkSL::OutputStream"*, i8*)***
  %55 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %55, i64 2
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %56, align 8
  tail call void %57(%"class.SkSL::OutputStream"* %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #17
  store i8 0, i8* %32, align 8
  %58 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %52, align 8
  %59 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.SkSL::OutputStream"* %58 to void (%"class.SkSL::OutputStream"*, i8*)***
  %62 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %62, i64 2
  %64 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, align 8
  tail call void %64(%"class.SkSL::OutputStream"* %58, i8* %60) #17
  store i8 1, i8* %32, align 8
  %65 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %66 = load i32, i32* %65, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %65, align 4
  br label %68

68:                                               ; preds = %21, %51
  %69 = phi i1 [ true, %51 ], [ false, %21 ]
  %70 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 16
  %71 = bitcast i8* %70 to %"class.std::__1::unique_ptr.221"**
  %72 = load %"class.std::__1::unique_ptr.221"*, %"class.std::__1::unique_ptr.221"** %71, align 8
  %73 = icmp eq %"class.std::__1::unique_ptr.221"* %72, null
  br i1 %73, label %86, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 24
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = lshr i64 %77, 1
  %79 = and i64 %78, 2147483647
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %72, i64 %79
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %84 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %85 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  br label %87

86:                                               ; preds = %107, %68, %74
  br i1 %69, label %110, label %138

87:                                               ; preds = %82, %107
  %88 = phi %"class.std::__1::unique_ptr.221"* [ %72, %82 ], [ %108, %107 ]
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %89, align 8
  %91 = bitcast %"class.SkSL::Statement"* %90 to i1 (%"class.SkSL::Statement"*)***
  %92 = load i1 (%"class.SkSL::Statement"*)**, i1 (%"class.SkSL::Statement"*)*** %91, align 8
  %93 = getelementptr inbounds i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %92, i64 3
  %94 = load i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %93, align 8
  %95 = tail call zeroext i1 %94(%"class.SkSL::Statement"* %90) #17
  br i1 %95, label %107, label %96

96:                                               ; preds = %87
  %97 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %89, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %97)
  %98 = load i8, i8* %83, align 8, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %107

100:                                              ; preds = %96
  %101 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %84, align 8
  %102 = load i8*, i8** %85, align 8
  %103 = bitcast %"class.SkSL::OutputStream"* %101 to void (%"class.SkSL::OutputStream"*, i8*)***
  %104 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %104, i64 2
  %106 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %105, align 8
  tail call void %106(%"class.SkSL::OutputStream"* %101, i8* %102) #17
  store i8 1, i8* %83, align 8
  br label %107

107:                                              ; preds = %100, %96, %87
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %88, i64 1
  %109 = icmp eq %"class.std::__1::unique_ptr.221"* %108, %80
  br i1 %109, label %86, label %87

110:                                              ; preds = %86
  %111 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %112 = load i32, i32* %111, align 4
  %113 = add nsw i32 %112, -1
  store i32 %113, i32* %111, align 4
  %114 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %115 = load i8, i8* %114, align 8, !range !2
  %116 = icmp ne i8 %115, 0
  %117 = icmp sgt i32 %113, 0
  %118 = and i1 %117, %116
  br i1 %118, label %119, label %131

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %121

121:                                              ; preds = %121, %119
  %122 = phi i32 [ 0, %119 ], [ %128, %121 ]
  %123 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %120, align 8
  %124 = bitcast %"class.SkSL::OutputStream"* %123 to void (%"class.SkSL::OutputStream"*, i8*)***
  %125 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %125, i64 2
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %126, align 8
  tail call void %127(%"class.SkSL::OutputStream"* %123, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %128 = add nuw nsw i32 %122, 1
  %129 = load i32, i32* %111, align 4
  %130 = icmp slt i32 %128, %129
  br i1 %130, label %121, label %131

131:                                              ; preds = %121, %110
  %132 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %133 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %132, align 8
  %134 = bitcast %"class.SkSL::OutputStream"* %133 to void (%"class.SkSL::OutputStream"*, i8*)***
  %135 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %135, i64 2
  %137 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %136, align 8
  tail call void %137(%"class.SkSL::OutputStream"* %133, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #17
  store i8 0, i8* %114, align 8
  br label %138

138:                                              ; preds = %131, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator20writeReturnStatementERKNS_15ReturnStatementE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::ReturnStatement"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 25
  %9 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %8, align 8
  %10 = icmp eq %"class.SkSL::FunctionDeclaration"* %9, null
  br i1 %10, label %168, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %9, i64 0, i32 6
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %168, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %16, align 8
  %18 = icmp eq %"class.SkSL::Expression"* %17, null
  br i1 %18, label %167, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.SkSL::Expression"* %17 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %21 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %21, i64 3
  %23 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %22, align 8
  %24 = tail call dereferenceable(184) %"class.SkSL::Type"* %23(%"class.SkSL::Expression"* nonnull %17) #17
  %25 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 7
  %26 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %25, align 8
  %27 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %26, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %28 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %27, align 8
  %29 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #17
  %30 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %24, i64 0, i32 0, i32 1, i32 0
  %31 = bitcast i8** %30 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  store <2 x i64> %32, <2 x i64>* %3, align 16
  %33 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %28, i64 0, i32 0, i32 1, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %28, i64 0, i32 0, i32 1, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %4, i8* %34, i64 %36) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #17
  br i1 %37, label %38, label %95

38:                                               ; preds = %19
  %39 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i32 [ 0, %46 ], [ %55, %48 ]
  %50 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %47, align 8
  %51 = bitcast %"class.SkSL::OutputStream"* %50 to void (%"class.SkSL::OutputStream"*, i8*)***
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %52, i64 2
  %54 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, align 8
  call void %54(%"class.SkSL::OutputStream"* %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %55 = add nuw nsw i32 %49, 1
  %56 = load i32, i32* %43, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %48, label %58

58:                                               ; preds = %48, %38, %42
  %59 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %60 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %59, align 8
  %61 = bitcast %"class.SkSL::OutputStream"* %60 to void (%"class.SkSL::OutputStream"*, i8*)***
  %62 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %62, i64 2
  %64 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, align 8
  call void %64(%"class.SkSL::OutputStream"* %60, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.218, i64 0, i64 0)) #17
  store i8 0, i8* %39, align 8
  %65 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %16, align 8
  call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %65, i32 17)
  %66 = load i8, i8* %39, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %58
  %69 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %72, label %82

72:                                               ; preds = %68, %72
  %73 = phi i32 [ %79, %72 ], [ 0, %68 ]
  %74 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %59, align 8
  %75 = bitcast %"class.SkSL::OutputStream"* %74 to void (%"class.SkSL::OutputStream"*, i8*)***
  %76 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %76, i64 2
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %77, align 8
  call void %78(%"class.SkSL::OutputStream"* %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %79 = add nuw nsw i32 %73, 1
  %80 = load i32, i32* %69, align 4
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %72, label %82

82:                                               ; preds = %72, %58, %68
  %83 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %59, align 8
  %84 = bitcast %"class.SkSL::OutputStream"* %83 to void (%"class.SkSL::OutputStream"*, i8*)***
  %85 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %85, i64 2
  %87 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %86, align 8
  call void %87(%"class.SkSL::OutputStream"* %83, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #17
  store i8 0, i8* %39, align 8
  %88 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %59, align 8
  %89 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %90 = load i8*, i8** %89, align 8
  %91 = bitcast %"class.SkSL::OutputStream"* %88 to void (%"class.SkSL::OutputStream"*, i8*)***
  %92 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %92, i64 2
  %94 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %93, align 8
  call void %94(%"class.SkSL::OutputStream"* %88, i8* %90) #17
  store i8 1, i8* %39, align 8
  br label %167

95:                                               ; preds = %19
  %96 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 2
  %97 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %96, align 8
  %98 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %1, i64 0, i32 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #17
  %101 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #17
  %102 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %16, align 8
  %103 = bitcast %"class.SkSL::Expression"* %102 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %104 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %103, align 8
  %105 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %104, i64 3
  %106 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %105, align 8
  %107 = call dereferenceable(184) %"class.SkSL::Type"* %106(%"class.SkSL::Expression"* %102) #17
  %108 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %107, i64 0, i32 18
  %109 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %108, align 8, !noalias !26
  %110 = icmp eq %"class.SkSL::Type"* %109, null
  %111 = select i1 %110, %"class.SkSL::Type"* %107, %"class.SkSL::Type"* %109
  %112 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %111, i64 0, i32 0, i32 1, i32 0
  %113 = load i8*, i8** %112, align 8, !noalias !26
  %114 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %111, i64 0, i32 0, i32 1, i32 1
  %115 = load i64, i64* %114, align 8, !noalias !26
  %116 = icmp ugt i64 %115, -17
  br i1 %116, label %117, label %119

117:                                              ; preds = %95
  %118 = bitcast %"class.SkSL::String"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %118) #19
  unreachable

119:                                              ; preds = %95
  %120 = icmp ult i64 %115, 23
  br i1 %120, label %129, label %121

121:                                              ; preds = %119
  %122 = add nuw i64 %115, 16
  %123 = and i64 %122, -16
  %124 = call i8* @_Znwm(i64 %123) #18
  %125 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %124, i8** %125, align 8, !alias.scope !26
  %126 = or i64 %123, -9223372036854775808
  %127 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %126, i64* %127, align 8, !alias.scope !26
  %128 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %115, i64* %128, align 8, !alias.scope !26
  br label %134

129:                                              ; preds = %119
  %130 = trunc i64 %115 to i8
  %131 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  store i8 %130, i8* %132, align 1, !alias.scope !26
  %133 = icmp eq i64 %115, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %129, %121
  %135 = phi i8* [ %124, %121 ], [ %101, %129 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %135, i8* align 1 %113, i64 %115, i1 false) #17
  br label %136

136:                                              ; preds = %129, %134
  %137 = phi i8* [ %101, %129 ], [ %135, %134 ]
  %138 = getelementptr inbounds i8, i8* %137, i64 %115
  store i8 0, i8* %138, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.219, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %7) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.220, i64 0, i64 0)) #17
  %139 = bitcast %"class.SkSL::ErrorReporter"* %97 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %140 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %140, i64 2
  %142 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %141, align 8
  call void %142(%"class.SkSL::ErrorReporter"* %97, i32 %99, %"class.SkSL::String"* nonnull %5) #17
  %143 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %136
  %148 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #18
  br label %150

150:                                              ; preds = %136, %147
  %151 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %151, i64 0, i32 1, i32 0
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  br i1 %154, label %155, label %158

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  call void @_ZdlPv(i8* %157) #18
  br label %158

158:                                              ; preds = %150, %155
  %159 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  call void @_ZdlPv(i8* %165) #18
  br label %166

166:                                              ; preds = %158, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #17
  br label %167

167:                                              ; preds = %15, %82, %166
  call void @_ZN4SkSL18MetalCodeGenerator28writeReturnStatementFromMainEv(%"class.SkSL::MetalCodeGenerator"* %0)
  br label %227

168:                                              ; preds = %11, %2
  %169 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %170 = load i8, i8* %169, align 8, !range !2
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %188, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %174 = load i32, i32* %173, align 4
  %175 = icmp sgt i32 %174, 0
  br i1 %175, label %176, label %188

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %178

178:                                              ; preds = %178, %176
  %179 = phi i32 [ 0, %176 ], [ %185, %178 ]
  %180 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %177, align 8
  %181 = bitcast %"class.SkSL::OutputStream"* %180 to void (%"class.SkSL::OutputStream"*, i8*)***
  %182 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %182, i64 2
  %184 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %183, align 8
  tail call void %184(%"class.SkSL::OutputStream"* %180, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %185 = add nuw nsw i32 %179, 1
  %186 = load i32, i32* %173, align 4
  %187 = icmp slt i32 %185, %186
  br i1 %187, label %178, label %188

188:                                              ; preds = %178, %168, %172
  %189 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %190 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %189, align 8
  %191 = bitcast %"class.SkSL::OutputStream"* %190 to void (%"class.SkSL::OutputStream"*, i8*)***
  %192 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %192, i64 2
  %194 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %193, align 8
  tail call void %194(%"class.SkSL::OutputStream"* %190, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.221, i64 0, i64 0)) #17
  store i8 0, i8* %169, align 8
  %195 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %196 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %195, align 8
  %197 = icmp eq %"class.SkSL::Expression"* %196, null
  br i1 %197, label %221, label %198

198:                                              ; preds = %188
  %199 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %189, align 8
  %200 = bitcast %"class.SkSL::OutputStream"* %199 to void (%"class.SkSL::OutputStream"*, i8*)***
  %201 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %200, align 8
  %202 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %201, i64 2
  %203 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %202, align 8
  tail call void %203(%"class.SkSL::OutputStream"* %199, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %169, align 8
  %204 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %195, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %204, i32 17)
  %205 = load i8, i8* %169, align 8
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %221, label %207

207:                                              ; preds = %198
  %208 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %209 = load i32, i32* %208, align 4
  %210 = icmp sgt i32 %209, 0
  br i1 %210, label %211, label %221

211:                                              ; preds = %207, %211
  %212 = phi i32 [ %218, %211 ], [ 0, %207 ]
  %213 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %189, align 8
  %214 = bitcast %"class.SkSL::OutputStream"* %213 to void (%"class.SkSL::OutputStream"*, i8*)***
  %215 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %215, i64 2
  %217 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %216, align 8
  tail call void %217(%"class.SkSL::OutputStream"* %213, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %218 = add nuw nsw i32 %212, 1
  %219 = load i32, i32* %208, align 4
  %220 = icmp slt i32 %218, %219
  br i1 %220, label %211, label %221

221:                                              ; preds = %211, %188, %198, %207
  %222 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %189, align 8
  %223 = bitcast %"class.SkSL::OutputStream"* %222 to void (%"class.SkSL::OutputStream"*, i8*)***
  %224 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %223, align 8
  %225 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %224, i64 2
  %226 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %225, align 8
  tail call void %226(%"class.SkSL::OutputStream"* %222, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #17
  store i8 0, i8* %169, align 8
  br label %227

227:                                              ; preds = %221, %167
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator16writeIfStatementERKNS_11IfStatementE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::IfStatement"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i32 [ 0, %10 ], [ %19, %12 ]
  %14 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %11, align 8
  %15 = bitcast %"class.SkSL::OutputStream"* %14 to void (%"class.SkSL::OutputStream"*, i8*)***
  %16 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %16, i64 2
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %17, align 8
  tail call void %18(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %19 = add nuw nsw i32 %13, 1
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %12, label %22

22:                                               ; preds = %12, %2, %6
  %23 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %24 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %25 = bitcast %"class.SkSL::OutputStream"* %24 to void (%"class.SkSL::OutputStream"*, i8*)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, i64 2
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, align 8
  tail call void %28(%"class.SkSL::OutputStream"* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.205, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  %29 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %29, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %30, i32 17)
  %31 = load i8, i8* %3, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %47

37:                                               ; preds = %33, %37
  %38 = phi i32 [ %44, %37 ], [ 0, %33 ]
  %39 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %40 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*)***
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %41, i64 2
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %42, align 8
  tail call void %43(%"class.SkSL::OutputStream"* %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %44 = add nuw nsw i32 %38, 1
  %45 = load i32, i32* %34, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %37, label %47

47:                                               ; preds = %37, %22, %33
  %48 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %49 = bitcast %"class.SkSL::OutputStream"* %48 to void (%"class.SkSL::OutputStream"*, i8*)***
  %50 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %50, i64 2
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %51, align 8
  tail call void %52(%"class.SkSL::OutputStream"* %48, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  %53 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %54 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %53, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %54)
  %55 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %55, align 8
  %57 = icmp eq %"class.SkSL::Statement"* %56, null
  br i1 %57, label %82, label %58

58:                                               ; preds = %47
  %59 = load i8, i8* %3, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %75, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %63 = load i32, i32* %62, align 4
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %61, %65
  %66 = phi i32 [ %72, %65 ], [ 0, %61 ]
  %67 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %68 = bitcast %"class.SkSL::OutputStream"* %67 to void (%"class.SkSL::OutputStream"*, i8*)***
  %69 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %69, i64 2
  %71 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %70, align 8
  tail call void %71(%"class.SkSL::OutputStream"* %67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %72 = add nuw nsw i32 %66, 1
  %73 = load i32, i32* %62, align 4
  %74 = icmp slt i32 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58, %61
  %76 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %77 = bitcast %"class.SkSL::OutputStream"* %76 to void (%"class.SkSL::OutputStream"*, i8*)***
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %78, i64 2
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, align 8
  tail call void %80(%"class.SkSL::OutputStream"* %76, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.207, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  %81 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %55, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %81)
  br label %82

82:                                               ; preds = %47, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator17writeForStatementERKNS_12ForStatementE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::ForStatement"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %6, label %64

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  %9 = icmp eq %"class.SkSL::Expression"* %8, null
  br i1 %9, label %64, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %11, align 8
  %13 = icmp eq %"class.SkSL::Expression"* %12, null
  br i1 %13, label %14, label %64

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i32 [ 0, %22 ], [ %31, %24 ]
  %26 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %27 = bitcast %"class.SkSL::OutputStream"* %26 to void (%"class.SkSL::OutputStream"*, i8*)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %28, i64 2
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %29, align 8
  tail call void %30(%"class.SkSL::OutputStream"* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %31 = add nuw nsw i32 %25, 1
  %32 = load i32, i32* %19, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %24, label %34

34:                                               ; preds = %24, %14, %18
  %35 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %36 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %37 = bitcast %"class.SkSL::OutputStream"* %36 to void (%"class.SkSL::OutputStream"*, i8*)***
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %38, i64 2
  %40 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %39, align 8
  tail call void %40(%"class.SkSL::OutputStream"* %36, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.208, i64 0, i64 0)) #17
  store i8 0, i8* %15, align 8
  %41 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %7, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %41, i32 17)
  %42 = load i8, i8* %15, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %58, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %58

48:                                               ; preds = %44, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %44 ]
  %50 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %51 = bitcast %"class.SkSL::OutputStream"* %50 to void (%"class.SkSL::OutputStream"*, i8*)***
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %52, i64 2
  %54 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, align 8
  tail call void %54(%"class.SkSL::OutputStream"* %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %55 = add nuw nsw i32 %49, 1
  %56 = load i32, i32* %45, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %48, label %58

58:                                               ; preds = %48, %34, %44
  %59 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %35, align 8
  %60 = bitcast %"class.SkSL::OutputStream"* %59 to void (%"class.SkSL::OutputStream"*, i8*)***
  %61 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %61, i64 2
  %63 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %62, align 8
  tail call void %63(%"class.SkSL::OutputStream"* %59, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0)) #17
  br label %178

64:                                               ; preds = %10, %6, %2
  %65 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %84, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi i32 [ 0, %72 ], [ %81, %74 ]
  %76 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %73, align 8
  %77 = bitcast %"class.SkSL::OutputStream"* %76 to void (%"class.SkSL::OutputStream"*, i8*)***
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %78, i64 2
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, align 8
  tail call void %80(%"class.SkSL::OutputStream"* %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %81 = add nuw nsw i32 %75, 1
  %82 = load i32, i32* %69, align 4
  %83 = icmp slt i32 %81, %82
  br i1 %83, label %74, label %84

84:                                               ; preds = %74, %64, %68
  %85 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %86 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %87 = bitcast %"class.SkSL::OutputStream"* %86 to void (%"class.SkSL::OutputStream"*, i8*)***
  %88 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %88, i64 2
  %90 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %89, align 8
  tail call void %90(%"class.SkSL::OutputStream"* %86, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.209, i64 0, i64 0)) #17
  store i8 0, i8* %65, align 8
  %91 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  %92 = icmp eq %"class.SkSL::Statement"* %91, null
  br i1 %92, label %118, label %93

93:                                               ; preds = %84
  %94 = bitcast %"class.SkSL::Statement"* %91 to i1 (%"class.SkSL::Statement"*)***
  %95 = load i1 (%"class.SkSL::Statement"*)**, i1 (%"class.SkSL::Statement"*)*** %94, align 8
  %96 = getelementptr inbounds i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %95, i64 3
  %97 = load i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.SkSL::Statement"* nonnull %91) #17
  br i1 %98, label %101, label %99

99:                                               ; preds = %93
  %100 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %100)
  br label %124

101:                                              ; preds = %93
  %102 = load i8, i8* %65, align 8
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %118, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %118

108:                                              ; preds = %104, %108
  %109 = phi i32 [ %115, %108 ], [ 0, %104 ]
  %110 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %111 = bitcast %"class.SkSL::OutputStream"* %110 to void (%"class.SkSL::OutputStream"*, i8*)***
  %112 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %112, i64 2
  %114 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %113, align 8
  tail call void %114(%"class.SkSL::OutputStream"* %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %115 = add nuw nsw i32 %109, 1
  %116 = load i32, i32* %105, align 4
  %117 = icmp slt i32 %115, %116
  br i1 %117, label %108, label %118

118:                                              ; preds = %108, %84, %101, %104
  %119 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %120 = bitcast %"class.SkSL::OutputStream"* %119 to void (%"class.SkSL::OutputStream"*, i8*)***
  %121 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %121, i64 2
  %123 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %122, align 8
  tail call void %123(%"class.SkSL::OutputStream"* %119, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.210, i64 0, i64 0)) #17
  store i8 0, i8* %65, align 8
  br label %124

124:                                              ; preds = %118, %99
  %125 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %126 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %125, align 8
  %127 = icmp eq %"class.SkSL::Expression"* %126, null
  br i1 %127, label %129, label %128

128:                                              ; preds = %124
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* nonnull dereferenceable(24) %126, i32 17)
  br label %129

129:                                              ; preds = %124, %128
  %130 = load i8, i8* %65, align 8, !range !2
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %146, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %136, label %146

136:                                              ; preds = %132, %136
  %137 = phi i32 [ %143, %136 ], [ 0, %132 ]
  %138 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %139 = bitcast %"class.SkSL::OutputStream"* %138 to void (%"class.SkSL::OutputStream"*, i8*)***
  %140 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %140, i64 2
  %142 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %141, align 8
  tail call void %142(%"class.SkSL::OutputStream"* %138, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %143 = add nuw nsw i32 %137, 1
  %144 = load i32, i32* %133, align 4
  %145 = icmp slt i32 %143, %144
  br i1 %145, label %136, label %146

146:                                              ; preds = %136, %129, %132
  %147 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %148 = bitcast %"class.SkSL::OutputStream"* %147 to void (%"class.SkSL::OutputStream"*, i8*)***
  %149 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %149, i64 2
  %151 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %150, align 8
  tail call void %151(%"class.SkSL::OutputStream"* %147, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.210, i64 0, i64 0)) #17
  store i8 0, i8* %65, align 8
  %152 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %152, align 8
  %154 = icmp eq %"class.SkSL::Expression"* %153, null
  br i1 %154, label %172, label %155

155:                                              ; preds = %146
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* nonnull dereferenceable(24) %153, i32 17)
  %156 = load i8, i8* %65, align 8
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %172, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %160 = load i32, i32* %159, align 4
  %161 = icmp sgt i32 %160, 0
  br i1 %161, label %162, label %172

162:                                              ; preds = %158, %162
  %163 = phi i32 [ %169, %162 ], [ 0, %158 ]
  %164 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %165 = bitcast %"class.SkSL::OutputStream"* %164 to void (%"class.SkSL::OutputStream"*, i8*)***
  %166 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %166, i64 2
  %168 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %167, align 8
  tail call void %168(%"class.SkSL::OutputStream"* %164, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %169 = add nuw nsw i32 %163, 1
  %170 = load i32, i32* %159, align 4
  %171 = icmp slt i32 %169, %170
  br i1 %171, label %162, label %172

172:                                              ; preds = %162, %146, %155, %158
  %173 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %85, align 8
  %174 = bitcast %"class.SkSL::OutputStream"* %173 to void (%"class.SkSL::OutputStream"*, i8*)***
  %175 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %175, i64 2
  %177 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %176, align 8
  tail call void %177(%"class.SkSL::OutputStream"* %173, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i64 0, i64 0)) #17
  br label %178

178:                                              ; preds = %172, %58
  %179 = phi i8* [ %65, %172 ], [ %15, %58 ]
  store i8 0, i8* %179, align 8
  %180 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %181 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %180, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %181)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator16writeDoStatementERKNS_11DoStatementE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::DoStatement"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i32 [ 0, %10 ], [ %19, %12 ]
  %14 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %11, align 8
  %15 = bitcast %"class.SkSL::OutputStream"* %14 to void (%"class.SkSL::OutputStream"*, i8*)***
  %16 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %16, i64 2
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %17, align 8
  tail call void %18(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %19 = add nuw nsw i32 %13, 1
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %12, label %22

22:                                               ; preds = %12, %2, %6
  %23 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %24 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %25 = bitcast %"class.SkSL::OutputStream"* %24 to void (%"class.SkSL::OutputStream"*, i8*)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, i64 2
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, align 8
  tail call void %28(%"class.SkSL::OutputStream"* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.211, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  %29 = getelementptr inbounds %"class.SkSL::DoStatement", %"class.SkSL::DoStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %29, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %30)
  %31 = load i8, i8* %3, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %47

37:                                               ; preds = %33, %37
  %38 = phi i32 [ %44, %37 ], [ 0, %33 ]
  %39 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %40 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*)***
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %41, i64 2
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %42, align 8
  tail call void %43(%"class.SkSL::OutputStream"* %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %44 = add nuw nsw i32 %38, 1
  %45 = load i32, i32* %34, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %37, label %47

47:                                               ; preds = %37, %22, %33
  %48 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %49 = bitcast %"class.SkSL::OutputStream"* %48 to void (%"class.SkSL::OutputStream"*, i8*)***
  %50 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %50, i64 2
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %51, align 8
  tail call void %52(%"class.SkSL::OutputStream"* %48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.212, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  %53 = getelementptr inbounds %"class.SkSL::DoStatement", %"class.SkSL::DoStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %54 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %53, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %54, i32 17)
  %55 = load i8, i8* %3, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %71, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %59 = load i32, i32* %58, align 4
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %61, label %71

61:                                               ; preds = %57, %61
  %62 = phi i32 [ %68, %61 ], [ 0, %57 ]
  %63 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %64 = bitcast %"class.SkSL::OutputStream"* %63 to void (%"class.SkSL::OutputStream"*, i8*)***
  %65 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %65, i64 2
  %67 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %66, align 8
  tail call void %67(%"class.SkSL::OutputStream"* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %68 = add nuw nsw i32 %62, 1
  %69 = load i32, i32* %58, align 4
  %70 = icmp slt i32 %68, %69
  br i1 %70, label %61, label %71

71:                                               ; preds = %61, %47, %57
  %72 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %73 = bitcast %"class.SkSL::OutputStream"* %72 to void (%"class.SkSL::OutputStream"*, i8*)***
  %74 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %74, i64 2
  %76 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %75, align 8
  tail call void %76(%"class.SkSL::OutputStream"* %72, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator20writeSwitchStatementERKNS_15SwitchStatementE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::SwitchStatement"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %12

12:                                               ; preds = %12, %10
  %13 = phi i32 [ 0, %10 ], [ %19, %12 ]
  %14 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %11, align 8
  %15 = bitcast %"class.SkSL::OutputStream"* %14 to void (%"class.SkSL::OutputStream"*, i8*)***
  %16 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %16, i64 2
  %18 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %17, align 8
  tail call void %18(%"class.SkSL::OutputStream"* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %19 = add nuw nsw i32 %13, 1
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %12, label %22

22:                                               ; preds = %12, %2, %6
  %23 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %24 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %25 = bitcast %"class.SkSL::OutputStream"* %24 to void (%"class.SkSL::OutputStream"*, i8*)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, i64 2
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, align 8
  tail call void %28(%"class.SkSL::OutputStream"* %24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.213, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  %29 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %29, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %30, i32 17)
  %31 = load i8, i8* %3, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %47

37:                                               ; preds = %33, %37
  %38 = phi i32 [ %44, %37 ], [ 0, %33 ]
  %39 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %40 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*)***
  %41 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %41, i64 2
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %42, align 8
  tail call void %43(%"class.SkSL::OutputStream"* %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %44 = add nuw nsw i32 %38, 1
  %45 = load i32, i32* %34, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %37, label %47

47:                                               ; preds = %37, %22, %33
  %48 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %49 = bitcast %"class.SkSL::OutputStream"* %48 to void (%"class.SkSL::OutputStream"*, i8*)***
  %50 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %50, i64 2
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %51, align 8
  tail call void %52(%"class.SkSL::OutputStream"* %48, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  %53 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %54 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %55 = load i8*, i8** %54, align 8
  %56 = bitcast %"class.SkSL::OutputStream"* %53 to void (%"class.SkSL::OutputStream"*, i8*)***
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %57, i64 2
  %59 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, align 8
  tail call void %59(%"class.SkSL::OutputStream"* %53, i8* %55) #17
  store i8 1, i8* %3, align 8
  %60 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %60, align 4
  %63 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 3, i32 0, i32 0, i64 16
  %64 = bitcast i8* %63 to %"class.std::__1::unique_ptr.221"**
  %65 = load %"class.std::__1::unique_ptr.221"*, %"class.std::__1::unique_ptr.221"** %64, align 8
  %66 = icmp eq %"class.std::__1::unique_ptr.221"* %65, null
  br i1 %66, label %79, label %67

67:                                               ; preds = %47
  %68 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 3, i32 0, i32 0, i64 24
  %69 = bitcast i8* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %65, i64 %72
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %79, label %101

75:                                               ; preds = %208
  %76 = load i32, i32* %60, align 4
  %77 = load i8, i8* %3, align 8, !range !2
  %78 = icmp ne i8 %77, 0
  br label %79

79:                                               ; preds = %47, %75, %67
  %80 = phi i1 [ %78, %75 ], [ true, %67 ], [ true, %47 ]
  %81 = phi i32 [ %76, %75 ], [ %62, %67 ], [ %62, %47 ]
  %82 = add nsw i32 %81, -1
  store i32 %82, i32* %60, align 4
  %83 = icmp sgt i32 %82, 0
  %84 = and i1 %83, %80
  br i1 %84, label %85, label %95

85:                                               ; preds = %79, %85
  %86 = phi i32 [ %92, %85 ], [ 0, %79 ]
  %87 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %88 = bitcast %"class.SkSL::OutputStream"* %87 to void (%"class.SkSL::OutputStream"*, i8*)***
  %89 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %89, i64 2
  %91 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %90, align 8
  tail call void %91(%"class.SkSL::OutputStream"* %87, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %92 = add nuw nsw i32 %86, 1
  %93 = load i32, i32* %60, align 4
  %94 = icmp slt i32 %92, %93
  br i1 %94, label %85, label %95

95:                                               ; preds = %85, %79
  %96 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %97 = bitcast %"class.SkSL::OutputStream"* %96 to void (%"class.SkSL::OutputStream"*, i8*)***
  %98 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %98, i64 2
  %100 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %99, align 8
  tail call void %100(%"class.SkSL::OutputStream"* %96, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  ret void

101:                                              ; preds = %67, %211
  %102 = phi i8 [ %212, %211 ], [ 1, %67 ]
  %103 = phi %"class.std::__1::unique_ptr.221"* [ %209, %211 ], [ %65, %67 ]
  %104 = bitcast %"class.std::__1::unique_ptr.221"* %103 to %"class.SkSL::SwitchCase"**
  %105 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %104, align 8
  %106 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %105, i64 0, i32 1, i32 0, i32 0, i32 0
  %107 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %106, align 8
  %108 = icmp eq %"class.SkSL::Expression"* %107, null
  %109 = icmp eq i8 %102, 0
  br i1 %108, label %158, label %110

110:                                              ; preds = %101
  br i1 %109, label %124, label %111

111:                                              ; preds = %110
  %112 = load i32, i32* %60, align 4
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %124

114:                                              ; preds = %111, %114
  %115 = phi i32 [ %121, %114 ], [ 0, %111 ]
  %116 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %117 = bitcast %"class.SkSL::OutputStream"* %116 to void (%"class.SkSL::OutputStream"*, i8*)***
  %118 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %118, i64 2
  %120 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %119, align 8
  tail call void %120(%"class.SkSL::OutputStream"* %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %121 = add nuw nsw i32 %115, 1
  %122 = load i32, i32* %60, align 4
  %123 = icmp slt i32 %121, %122
  br i1 %123, label %114, label %124

124:                                              ; preds = %114, %110, %111
  %125 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %126 = bitcast %"class.SkSL::OutputStream"* %125 to void (%"class.SkSL::OutputStream"*, i8*)***
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %127, i64 2
  %129 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %128, align 8
  tail call void %129(%"class.SkSL::OutputStream"* %125, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.214, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  %130 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %106, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %130, i32 17)
  %131 = load i8, i8* %3, align 8, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %146, label %133

133:                                              ; preds = %124
  %134 = load i32, i32* %60, align 4
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %136, label %146

136:                                              ; preds = %133, %136
  %137 = phi i32 [ %143, %136 ], [ 0, %133 ]
  %138 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %139 = bitcast %"class.SkSL::OutputStream"* %138 to void (%"class.SkSL::OutputStream"*, i8*)***
  %140 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %140, i64 2
  %142 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %141, align 8
  tail call void %142(%"class.SkSL::OutputStream"* %138, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %143 = add nuw nsw i32 %137, 1
  %144 = load i32, i32* %60, align 4
  %145 = icmp slt i32 %143, %144
  br i1 %145, label %136, label %146

146:                                              ; preds = %136, %124, %133
  %147 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %148 = bitcast %"class.SkSL::OutputStream"* %147 to void (%"class.SkSL::OutputStream"*, i8*)***
  %149 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %149, i64 2
  %151 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %150, align 8
  tail call void %151(%"class.SkSL::OutputStream"* %147, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.129, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  %152 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %153 = load i8*, i8** %54, align 8
  %154 = bitcast %"class.SkSL::OutputStream"* %152 to void (%"class.SkSL::OutputStream"*, i8*)***
  %155 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %155, i64 2
  %157 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %156, align 8
  tail call void %157(%"class.SkSL::OutputStream"* %152, i8* %153) #17
  br label %184

158:                                              ; preds = %101
  br i1 %109, label %172, label %159

159:                                              ; preds = %158
  %160 = load i32, i32* %60, align 4
  %161 = icmp sgt i32 %160, 0
  br i1 %161, label %162, label %172

162:                                              ; preds = %159, %162
  %163 = phi i32 [ %169, %162 ], [ 0, %159 ]
  %164 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %165 = bitcast %"class.SkSL::OutputStream"* %164 to void (%"class.SkSL::OutputStream"*, i8*)***
  %166 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %166, i64 2
  %168 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %167, align 8
  tail call void %168(%"class.SkSL::OutputStream"* %164, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %169 = add nuw nsw i32 %163, 1
  %170 = load i32, i32* %60, align 4
  %171 = icmp slt i32 %169, %170
  br i1 %171, label %162, label %172

172:                                              ; preds = %162, %158, %159
  %173 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %174 = bitcast %"class.SkSL::OutputStream"* %173 to void (%"class.SkSL::OutputStream"*, i8*)***
  %175 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %175, i64 2
  %177 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %176, align 8
  tail call void %177(%"class.SkSL::OutputStream"* %173, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.215, i64 0, i64 0)) #17
  store i8 0, i8* %3, align 8
  %178 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %179 = load i8*, i8** %54, align 8
  %180 = bitcast %"class.SkSL::OutputStream"* %178 to void (%"class.SkSL::OutputStream"*, i8*)***
  %181 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %181, i64 2
  %183 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %182, align 8
  tail call void %183(%"class.SkSL::OutputStream"* %178, i8* %179) #17
  br label %184

184:                                              ; preds = %172, %146
  store i8 1, i8* %3, align 8
  %185 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %105, i64 0, i32 2, i32 0, i32 0, i32 0
  %186 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %185, align 8
  %187 = bitcast %"class.SkSL::Statement"* %186 to i1 (%"class.SkSL::Statement"*)***
  %188 = load i1 (%"class.SkSL::Statement"*)**, i1 (%"class.SkSL::Statement"*)*** %187, align 8
  %189 = getelementptr inbounds i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %188, i64 3
  %190 = load i1 (%"class.SkSL::Statement"*)*, i1 (%"class.SkSL::Statement"*)** %189, align 8
  %191 = tail call zeroext i1 %190(%"class.SkSL::Statement"* %186) #17
  br i1 %191, label %208, label %192

192:                                              ; preds = %184
  %193 = load i32, i32* %60, align 4
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %60, align 4
  %195 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %185, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator14writeStatementERKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %195)
  %196 = load i8, i8* %3, align 8, !range !2
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %198, label %205

198:                                              ; preds = %192
  %199 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %23, align 8
  %200 = load i8*, i8** %54, align 8
  %201 = bitcast %"class.SkSL::OutputStream"* %199 to void (%"class.SkSL::OutputStream"*, i8*)***
  %202 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %202, i64 2
  %204 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %203, align 8
  tail call void %204(%"class.SkSL::OutputStream"* %199, i8* %200) #17
  store i8 1, i8* %3, align 8
  br label %205

205:                                              ; preds = %192, %198
  %206 = load i32, i32* %60, align 4
  %207 = add nsw i32 %206, -1
  store i32 %207, i32* %60, align 4
  br label %208

208:                                              ; preds = %205, %184
  %209 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %103, i64 1
  %210 = icmp eq %"class.std::__1::unique_ptr.221"* %209, %73
  br i1 %210, label %75, label %211

211:                                              ; preds = %208
  %212 = load i8, i8* %3, align 8, !range !2
  br label %101
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator11writeHeaderEv(%"class.SkSL::MetalCodeGenerator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i32 [ 0, %9 ], [ %18, %11 ]
  %13 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %10, align 8
  %14 = bitcast %"class.SkSL::OutputStream"* %13 to void (%"class.SkSL::OutputStream"*, i8*)***
  %15 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %15, i64 2
  %17 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %16, align 8
  tail call void %17(%"class.SkSL::OutputStream"* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %18 = add nuw nsw i32 %12, 1
  %19 = load i32, i32* %6, align 4
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %11, label %21

21:                                               ; preds = %11, %1, %5
  %22 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %23 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %22, align 8
  %24 = bitcast %"class.SkSL::OutputStream"* %23 to void (%"class.SkSL::OutputStream"*, i8*)***
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %25, i64 2
  %27 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, align 8
  tail call void %27(%"class.SkSL::OutputStream"* %23, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.222, i64 0, i64 0)) #17
  store i8 0, i8* %2, align 8
  %28 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %22, align 8
  %29 = bitcast %"class.SkSL::OutputStream"* %28 to void (%"class.SkSL::OutputStream"*, i8*)***
  %30 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %30, i64 2
  %32 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, align 8
  tail call void %32(%"class.SkSL::OutputStream"* %28, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.223, i64 0, i64 0)) #17
  store i8 0, i8* %2, align 8
  %33 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %22, align 8
  %34 = bitcast %"class.SkSL::OutputStream"* %33 to void (%"class.SkSL::OutputStream"*, i8*)***
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, i64 2
  %37 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, align 8
  tail call void %37(%"class.SkSL::OutputStream"* %33, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.224, i64 0, i64 0)) #17
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator18writeUniformStructEv(%"class.SkSL::MetalCodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %5 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %5, i64 0, i32 6
  %7 = bitcast %"class.std::__1::vector.62"* %6 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !31
  %9 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %5, i64 0, i32 6, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %5, i64 0, i32 7
  %11 = bitcast %"class.std::__1::vector.75"* %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !31
  %13 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %5, i64 0, i32 7, i32 0, i32 1
  %14 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %13, align 8, !noalias !31
  %15 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %9, align 8, !noalias !34
  %16 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 22
  %17 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %19 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %20 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %21 = bitcast %"class.SkSL::String"* %2 to i8*
  %22 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.SkSL::String"* %3 to i8*
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %28 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = inttoptr i64 %8 to %"class.std::__1::unique_ptr.64"*
  %32 = icmp eq %"class.std::__1::unique_ptr.64"* %15, %31
  %33 = inttoptr i64 %12 to %"class.SkSL::ProgramElement"**
  %34 = icmp eq %"class.SkSL::ProgramElement"** %14, %33
  %35 = and i1 %32, %34
  br i1 %35, label %36, label %39

36:                                               ; preds = %238, %1
  %37 = load i32, i32* %16, align 8
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %272, label %250

39:                                               ; preds = %1, %238
  %40 = phi i1 [ %248, %238 ], [ %34, %1 ]
  %41 = phi %"class.SkSL::ProgramElement"** [ %247, %238 ], [ %33, %1 ]
  %42 = phi %"class.std::__1::unique_ptr.64"* [ %245, %238 ], [ %31, %1 ]
  %43 = phi i64 [ %244, %238 ], [ %12, %1 ]
  %44 = phi i64 [ %243, %238 ], [ %8, %1 ]
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %42, i64 0, i32 0, i32 0, i32 0
  %46 = select i1 %40, %"class.SkSL::ProgramElement"** %45, %"class.SkSL::ProgramElement"** %41
  %47 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %46, align 8
  %48 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %47, i64 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 4
  br i1 %50, label %51, label %238

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %47, i64 1
  %53 = bitcast %"class.SkSL::ProgramElement"* %52 to %"class.SkSL::VarDeclaration"**
  %54 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %53, align 8
  %55 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %54, i64 0, i32 1
  %56 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %55, align 8
  %57 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %56, i64 0, i32 2
  %58 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %57, align 8
  %59 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %58, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %238, label %63

63:                                               ; preds = %51
  %64 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %56, i64 0, i32 0, i32 2
  %65 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %64, align 8
  %66 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %65, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 6
  br i1 %68, label %238, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %58, i64 0, i32 0, i32 5
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %71, -1
  br i1 %72, label %79, label %73

73:                                               ; preds = %69
  %74 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %4, align 8
  %75 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %74, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %75, align 8
  %77 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %76, i64 0, i32 1, i32 8
  %78 = load i32, i32* %77, align 4
  br label %79

79:                                               ; preds = %69, %73
  %80 = phi i32 [ %78, %73 ], [ %71, %69 ]
  %81 = load i32, i32* %16, align 8
  %82 = icmp eq i32 %81, -1
  br i1 %82, label %83, label %105

83:                                               ; preds = %79
  %84 = load i8, i8* %18, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = load i32, i32* %19, align 4
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %99

89:                                               ; preds = %86, %89
  %90 = phi i32 [ %96, %89 ], [ 0, %86 ]
  %91 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %92 = bitcast %"class.SkSL::OutputStream"* %91 to void (%"class.SkSL::OutputStream"*, i8*)***
  %93 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %93, i64 2
  %95 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %94, align 8
  call void %95(%"class.SkSL::OutputStream"* %91, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %96 = add nuw nsw i32 %90, 1
  %97 = load i32, i32* %19, align 4
  %98 = icmp slt i32 %96, %97
  br i1 %98, label %89, label %99

99:                                               ; preds = %89, %86, %83
  %100 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %101 = bitcast %"class.SkSL::OutputStream"* %100 to void (%"class.SkSL::OutputStream"*, i8*)***
  %102 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %102, i64 2
  %104 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %103, align 8
  call void %104(%"class.SkSL::OutputStream"* %100, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.225, i64 0, i64 0)) #17
  store i8 0, i8* %18, align 8
  store i32 %80, i32* %16, align 8
  br label %127

105:                                              ; preds = %79
  %106 = icmp eq i32 %80, %81
  br i1 %106, label %111, label %107

107:                                              ; preds = %105
  %108 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %17, align 8
  %109 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %47, i64 0, i32 0, i32 1
  %110 = load i32, i32* %109, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %108, i32 %110, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.226, i64 0, i64 0))
  br label %111

111:                                              ; preds = %105, %107
  %112 = load i8, i8* %18, align 8
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %127, label %114

114:                                              ; preds = %111
  %115 = load i32, i32* %19, align 4
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %117, label %127

117:                                              ; preds = %114, %117
  %118 = phi i32 [ %124, %117 ], [ 0, %114 ]
  %119 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %120 = bitcast %"class.SkSL::OutputStream"* %119 to void (%"class.SkSL::OutputStream"*, i8*)***
  %121 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %121, i64 2
  %123 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %122, align 8
  call void %123(%"class.SkSL::OutputStream"* %119, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %124 = add nuw nsw i32 %118, 1
  %125 = load i32, i32* %19, align 4
  %126 = icmp slt i32 %124, %125
  br i1 %126, label %117, label %127

127:                                              ; preds = %117, %99, %111, %114
  %128 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %129 = bitcast %"class.SkSL::OutputStream"* %128 to void (%"class.SkSL::OutputStream"*, i8*)***
  %130 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %130, i64 2
  %132 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %131, align 8
  call void %132(%"class.SkSL::OutputStream"* %128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  store i8 0, i8* %18, align 8
  %133 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %64, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %2, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %133) #17
  %134 = load i8, i8* %23, align 1
  %135 = icmp slt i8 %134, 0
  %136 = load i8*, i8** %24, align 8
  %137 = select i1 %135, i8* %136, i8* %21
  %138 = load i8, i8* %137, align 1
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %163, label %140

140:                                              ; preds = %127
  %141 = load i8, i8* %18, align 8, !range !2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %156, label %143

143:                                              ; preds = %140
  %144 = load i32, i32* %19, align 4
  %145 = icmp sgt i32 %144, 0
  br i1 %145, label %146, label %156

146:                                              ; preds = %143, %146
  %147 = phi i32 [ %153, %146 ], [ 0, %143 ]
  %148 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %149 = bitcast %"class.SkSL::OutputStream"* %148 to void (%"class.SkSL::OutputStream"*, i8*)***
  %150 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %150, i64 2
  %152 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %151, align 8
  call void %152(%"class.SkSL::OutputStream"* %148, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %153 = add nuw nsw i32 %147, 1
  %154 = load i32, i32* %19, align 4
  %155 = icmp slt i32 %153, %154
  br i1 %155, label %146, label %156

156:                                              ; preds = %146, %143, %140
  %157 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %158 = bitcast %"class.SkSL::OutputStream"* %157 to void (%"class.SkSL::OutputStream"*, i8*)***
  %159 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %159, i64 2
  %161 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %160, align 8
  call void %161(%"class.SkSL::OutputStream"* %157, i8* %137) #17
  store i8 0, i8* %18, align 8
  %162 = load i8, i8* %23, align 1
  br label %163

163:                                              ; preds = %156, %127
  %164 = phi i8 [ %134, %127 ], [ %162, %156 ]
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %163
  %167 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %167) #18
  br label %168

168:                                              ; preds = %163, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #17
  %169 = load i8, i8* %18, align 8, !range !2
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %184, label %171

171:                                              ; preds = %168
  %172 = load i32, i32* %19, align 4
  %173 = icmp sgt i32 %172, 0
  br i1 %173, label %174, label %184

174:                                              ; preds = %171, %174
  %175 = phi i32 [ %181, %174 ], [ 0, %171 ]
  %176 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %177 = bitcast %"class.SkSL::OutputStream"* %176 to void (%"class.SkSL::OutputStream"*, i8*)***
  %178 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %178, i64 2
  %180 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %179, align 8
  call void %180(%"class.SkSL::OutputStream"* %176, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %181 = add nuw nsw i32 %175, 1
  %182 = load i32, i32* %19, align 4
  %183 = icmp slt i32 %181, %182
  br i1 %183, label %174, label %184

184:                                              ; preds = %174, %168, %171
  %185 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %186 = bitcast %"class.SkSL::OutputStream"* %185 to void (%"class.SkSL::OutputStream"*, i8*)***
  %187 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %186, align 8
  %188 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %187, i64 2
  %189 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %188, align 8
  call void %189(%"class.SkSL::OutputStream"* %185, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #17
  %190 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %56, i64 0, i32 0, i32 1, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %56, i64 0, i32 0, i32 1, i32 1
  %193 = load i64, i64* %192, align 8
  %194 = icmp ugt i64 %193, -17
  br i1 %194, label %195, label %197

195:                                              ; preds = %184
  %196 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %196) #19
  unreachable

197:                                              ; preds = %184
  %198 = icmp ult i64 %193, 23
  br i1 %198, label %204, label %199

199:                                              ; preds = %197
  %200 = add nuw i64 %193, 16
  %201 = and i64 %200, -16
  %202 = call i8* @_Znwm(i64 %201) #18
  store i8* %202, i8** %26, align 8
  %203 = or i64 %201, -9223372036854775808
  store i64 %203, i64* %27, align 8
  store i64 %193, i64* %28, align 8
  br label %207

204:                                              ; preds = %197
  %205 = trunc i64 %193 to i8
  store i8 %205, i8* %30, align 1
  %206 = icmp eq i64 %193, 0
  br i1 %206, label %209, label %207

207:                                              ; preds = %204, %199
  %208 = phi i8* [ %202, %199 ], [ %25, %204 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %208, i8* align 1 %191, i64 %193, i1 false) #17
  br label %209

209:                                              ; preds = %204, %207
  %210 = phi i8* [ %25, %204 ], [ %208, %207 ]
  %211 = getelementptr inbounds i8, i8* %210, i64 %193
  store i8 0, i8* %211, align 1
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3)
  %212 = load i8, i8* %30, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %209
  %215 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %215) #18
  br label %216

216:                                              ; preds = %209, %214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #17
  %217 = load i8, i8* %18, align 8, !range !2
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %232, label %219

219:                                              ; preds = %216
  %220 = load i32, i32* %19, align 4
  %221 = icmp sgt i32 %220, 0
  br i1 %221, label %222, label %232

222:                                              ; preds = %219, %222
  %223 = phi i32 [ %229, %222 ], [ 0, %219 ]
  %224 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %225 = bitcast %"class.SkSL::OutputStream"* %224 to void (%"class.SkSL::OutputStream"*, i8*)***
  %226 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %225, align 8
  %227 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %226, i64 2
  %228 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %227, align 8
  call void %228(%"class.SkSL::OutputStream"* %224, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %229 = add nuw nsw i32 %223, 1
  %230 = load i32, i32* %19, align 4
  %231 = icmp slt i32 %229, %230
  br i1 %231, label %222, label %232

232:                                              ; preds = %222, %216, %219
  %233 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %234 = bitcast %"class.SkSL::OutputStream"* %233 to void (%"class.SkSL::OutputStream"*, i8*)***
  %235 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %234, align 8
  %236 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %235, i64 2
  %237 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %236, align 8
  call void %237(%"class.SkSL::OutputStream"* %233, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #17
  store i8 0, i8* %18, align 8
  br label %238

238:                                              ; preds = %232, %51, %63, %39
  %239 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %42, i64 1
  %240 = ptrtoint %"class.std::__1::unique_ptr.64"* %239 to i64
  %241 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %41, i64 1
  %242 = ptrtoint %"class.SkSL::ProgramElement"** %241 to i64
  %243 = select i1 %40, i64 %240, i64 %44
  %244 = select i1 %40, i64 %43, i64 %242
  %245 = inttoptr i64 %243 to %"class.std::__1::unique_ptr.64"*
  %246 = icmp eq %"class.std::__1::unique_ptr.64"* %15, %245
  %247 = inttoptr i64 %244 to %"class.SkSL::ProgramElement"**
  %248 = icmp eq %"class.SkSL::ProgramElement"** %14, %247
  %249 = and i1 %246, %248
  br i1 %249, label %36, label %39

250:                                              ; preds = %36
  %251 = load i8, i8* %18, align 8, !range !2
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %266, label %253

253:                                              ; preds = %250
  %254 = load i32, i32* %19, align 4
  %255 = icmp sgt i32 %254, 0
  br i1 %255, label %256, label %266

256:                                              ; preds = %253, %256
  %257 = phi i32 [ %263, %256 ], [ 0, %253 ]
  %258 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %259 = bitcast %"class.SkSL::OutputStream"* %258 to void (%"class.SkSL::OutputStream"*, i8*)***
  %260 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %259, align 8
  %261 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %260, i64 2
  %262 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %261, align 8
  call void %262(%"class.SkSL::OutputStream"* %258, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %263 = add nuw nsw i32 %257, 1
  %264 = load i32, i32* %19, align 4
  %265 = icmp slt i32 %263, %264
  br i1 %265, label %256, label %266

266:                                              ; preds = %256, %250, %253
  %267 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %268 = bitcast %"class.SkSL::OutputStream"* %267 to void (%"class.SkSL::OutputStream"*, i8*)***
  %269 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %268, align 8
  %270 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %269, i64 2
  %271 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %270, align 8
  call void %271(%"class.SkSL::OutputStream"* %267, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.227, i64 0, i64 0)) #17
  store i8 0, i8* %18, align 8
  br label %272

272:                                              ; preds = %36, %266
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator16writeInputStructEv(%"class.SkSL::MetalCodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i32 [ 0, %17 ], [ %26, %19 ]
  %21 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %18, align 8
  %22 = bitcast %"class.SkSL::OutputStream"* %21 to void (%"class.SkSL::OutputStream"*, i8*)***
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %23, i64 2
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, align 8
  tail call void %25(%"class.SkSL::OutputStream"* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %26 = add nuw nsw i32 %20, 1
  %27 = load i32, i32* %14, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %19, label %29

29:                                               ; preds = %19, %1, %13
  %30 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %31 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %32 = bitcast %"class.SkSL::OutputStream"* %31 to void (%"class.SkSL::OutputStream"*, i8*)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::OutputStream"* %31, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.228, i64 0, i64 0)) #17
  store i8 0, i8* %10, align 8
  %36 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %37 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %36, align 8
  %38 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %37, i64 0, i32 6
  %39 = bitcast %"class.std::__1::vector.62"* %38 to i64*
  %40 = load i64, i64* %39, align 8, !noalias !37
  %41 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %37, i64 0, i32 6, i32 0, i32 1
  %42 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %37, i64 0, i32 7
  %43 = bitcast %"class.std::__1::vector.75"* %42 to i64*
  %44 = load i64, i64* %43, align 8, !noalias !37
  %45 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %37, i64 0, i32 7, i32 0, i32 1
  %46 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %45, align 8, !noalias !37
  %47 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %41, align 8, !noalias !40
  %48 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %49 = bitcast %"class.SkSL::String"* %2 to i8*
  %50 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.SkSL::String"* %3 to i8*
  %54 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %56 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = bitcast %"class.SkSL::String"* %7 to i8*
  %60 = bitcast %"class.SkSL::String"* %8 to i8*
  %61 = bitcast %"class.SkSL::String"* %9 to i8*
  %62 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.SkSL::String"* %4 to i8*
  %72 = bitcast %"class.SkSL::String"* %5 to i8*
  %73 = bitcast %"class.SkSL::String"* %6 to i8*
  %74 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = inttoptr i64 %40 to %"class.std::__1::unique_ptr.64"*
  %84 = icmp eq %"class.std::__1::unique_ptr.64"* %47, %83
  %85 = inttoptr i64 %44 to %"class.SkSL::ProgramElement"**
  %86 = icmp eq %"class.SkSL::ProgramElement"** %46, %85
  %87 = and i1 %84, %86
  br i1 %87, label %88, label %94

88:                                               ; preds = %337, %29
  %89 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %90 = bitcast %"class.SkSL::OutputStream"* %89 to void (%"class.SkSL::OutputStream"*, i8*)***
  %91 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %91, i64 2
  %93 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %92, align 8
  call void %93(%"class.SkSL::OutputStream"* %89, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.227, i64 0, i64 0)) #17
  store i8 0, i8* %10, align 8
  ret void

94:                                               ; preds = %29, %337
  %95 = phi i1 [ %347, %337 ], [ %86, %29 ]
  %96 = phi %"class.SkSL::ProgramElement"** [ %346, %337 ], [ %85, %29 ]
  %97 = phi %"class.std::__1::unique_ptr.64"* [ %344, %337 ], [ %83, %29 ]
  %98 = phi i64 [ %343, %337 ], [ %44, %29 ]
  %99 = phi i64 [ %342, %337 ], [ %40, %29 ]
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %97, i64 0, i32 0, i32 0, i32 0
  %101 = select i1 %95, %"class.SkSL::ProgramElement"** %100, %"class.SkSL::ProgramElement"** %96
  %102 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %101, align 8
  %103 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %102, i64 0, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 4
  br i1 %105, label %106, label %337

106:                                              ; preds = %94
  %107 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %102, i64 1
  %108 = bitcast %"class.SkSL::ProgramElement"* %107 to %"class.SkSL::VarDeclaration"**
  %109 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %108, align 8
  %110 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %109, i64 0, i32 1
  %111 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %110, align 8
  %112 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %111, i64 0, i32 2
  %113 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %112, align 8
  %114 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %113, i64 0, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %337, label %118

118:                                              ; preds = %106
  %119 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %113, i64 0, i32 0, i32 6
  %120 = load i32, i32* %119, align 8
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %122, label %337

122:                                              ; preds = %118
  %123 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %124 = bitcast %"class.SkSL::OutputStream"* %123 to void (%"class.SkSL::OutputStream"*, i8*)***
  %125 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %125, i64 2
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %126, align 8
  call void %127(%"class.SkSL::OutputStream"* %123, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  store i8 0, i8* %10, align 8
  %128 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %111, i64 0, i32 0, i32 2
  %129 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %128, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %2, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %129) #17
  %130 = load i8, i8* %51, align 1
  %131 = icmp slt i8 %130, 0
  %132 = load i8*, i8** %52, align 8
  %133 = select i1 %131, i8* %132, i8* %49
  %134 = load i8, i8* %133, align 1
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %159, label %136

136:                                              ; preds = %122
  %137 = load i8, i8* %10, align 8, !range !2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %152, label %139

139:                                              ; preds = %136
  %140 = load i32, i32* %48, align 4
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %142, label %152

142:                                              ; preds = %139, %142
  %143 = phi i32 [ %149, %142 ], [ 0, %139 ]
  %144 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %145 = bitcast %"class.SkSL::OutputStream"* %144 to void (%"class.SkSL::OutputStream"*, i8*)***
  %146 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %146, i64 2
  %148 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %147, align 8
  call void %148(%"class.SkSL::OutputStream"* %144, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %149 = add nuw nsw i32 %143, 1
  %150 = load i32, i32* %48, align 4
  %151 = icmp slt i32 %149, %150
  br i1 %151, label %142, label %152

152:                                              ; preds = %142, %139, %136
  %153 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %154 = bitcast %"class.SkSL::OutputStream"* %153 to void (%"class.SkSL::OutputStream"*, i8*)***
  %155 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %155, i64 2
  %157 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %156, align 8
  call void %157(%"class.SkSL::OutputStream"* %153, i8* %133) #17
  store i8 0, i8* %10, align 8
  %158 = load i8, i8* %51, align 1
  br label %159

159:                                              ; preds = %152, %122
  %160 = phi i8 [ %130, %122 ], [ %158, %152 ]
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %164

162:                                              ; preds = %159
  %163 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %163) #18
  br label %164

164:                                              ; preds = %159, %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #17
  %165 = load i8, i8* %10, align 8, !range !2
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %180, label %167

167:                                              ; preds = %164
  %168 = load i32, i32* %48, align 4
  %169 = icmp sgt i32 %168, 0
  br i1 %169, label %170, label %180

170:                                              ; preds = %167, %170
  %171 = phi i32 [ %177, %170 ], [ 0, %167 ]
  %172 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %173 = bitcast %"class.SkSL::OutputStream"* %172 to void (%"class.SkSL::OutputStream"*, i8*)***
  %174 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %174, i64 2
  %176 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %175, align 8
  call void %176(%"class.SkSL::OutputStream"* %172, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %177 = add nuw nsw i32 %171, 1
  %178 = load i32, i32* %48, align 4
  %179 = icmp slt i32 %177, %178
  br i1 %179, label %170, label %180

180:                                              ; preds = %170, %164, %167
  %181 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %182 = bitcast %"class.SkSL::OutputStream"* %181 to void (%"class.SkSL::OutputStream"*, i8*)***
  %183 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %182, align 8
  %184 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %183, i64 2
  %185 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %184, align 8
  call void %185(%"class.SkSL::OutputStream"* %181, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #17
  %186 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %111, i64 0, i32 0, i32 1, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %111, i64 0, i32 0, i32 1, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = icmp ugt i64 %189, -17
  br i1 %190, label %191, label %193

191:                                              ; preds = %180
  %192 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %192) #19
  unreachable

193:                                              ; preds = %180
  %194 = icmp ult i64 %189, 23
  br i1 %194, label %200, label %195

195:                                              ; preds = %193
  %196 = add nuw i64 %189, 16
  %197 = and i64 %196, -16
  %198 = call i8* @_Znwm(i64 %197) #18
  store i8* %198, i8** %54, align 8
  %199 = or i64 %197, -9223372036854775808
  store i64 %199, i64* %55, align 8
  store i64 %189, i64* %56, align 8
  br label %203

200:                                              ; preds = %193
  %201 = trunc i64 %189 to i8
  store i8 %201, i8* %58, align 1
  %202 = icmp eq i64 %189, 0
  br i1 %202, label %205, label %203

203:                                              ; preds = %200, %195
  %204 = phi i8* [ %198, %195 ], [ %53, %200 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %204, i8* align 1 %187, i64 %189, i1 false) #17
  br label %205

205:                                              ; preds = %200, %203
  %206 = phi i8* [ %53, %200 ], [ %204, %203 ]
  %207 = getelementptr inbounds i8, i8* %206, i64 %189
  store i8 0, i8* %207, align 1
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3)
  %208 = load i8, i8* %58, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %212

210:                                              ; preds = %205
  %211 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %211) #18
  br label %212

212:                                              ; preds = %205, %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #17
  %213 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %112, align 8
  %214 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %213, i64 0, i32 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = icmp eq i32 %215, -1
  br i1 %216, label %315, label %217

217:                                              ; preds = %212
  %218 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %36, align 8
  %219 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %218, i64 0, i32 1, i32 0, i32 0, i32 0
  %220 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %219, align 8
  %221 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %220, i64 0, i32 0
  %222 = load i8, i8* %221, align 8
  switch i8 %222, label %315 [
    i8 1, label %223
    i8 0, label %269
  ]

223:                                              ; preds = %217
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #17
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %6, i32 %215) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.229, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i64 0, i64 0)) #17
  %224 = load i8, i8* %75, align 1
  %225 = icmp slt i8 %224, 0
  %226 = load i8*, i8** %76, align 8
  %227 = select i1 %225, i8* %226, i8* %71
  %228 = load i8, i8* %227, align 1
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %253, label %230

230:                                              ; preds = %223
  %231 = load i8, i8* %10, align 8, !range !2
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %246, label %233

233:                                              ; preds = %230
  %234 = load i32, i32* %48, align 4
  %235 = icmp sgt i32 %234, 0
  br i1 %235, label %236, label %246

236:                                              ; preds = %233, %236
  %237 = phi i32 [ %243, %236 ], [ 0, %233 ]
  %238 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %239 = bitcast %"class.SkSL::OutputStream"* %238 to void (%"class.SkSL::OutputStream"*, i8*)***
  %240 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %240, i64 2
  %242 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %241, align 8
  call void %242(%"class.SkSL::OutputStream"* %238, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %243 = add nuw nsw i32 %237, 1
  %244 = load i32, i32* %48, align 4
  %245 = icmp slt i32 %243, %244
  br i1 %245, label %236, label %246

246:                                              ; preds = %236, %233, %230
  %247 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %248 = bitcast %"class.SkSL::OutputStream"* %247 to void (%"class.SkSL::OutputStream"*, i8*)***
  %249 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %248, align 8
  %250 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %249, i64 2
  %251 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %250, align 8
  call void %251(%"class.SkSL::OutputStream"* %247, i8* %227) #17
  store i8 0, i8* %10, align 8
  %252 = load i8, i8* %75, align 1
  br label %253

253:                                              ; preds = %223, %246
  %254 = phi i8 [ %224, %223 ], [ %252, %246 ]
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %258

256:                                              ; preds = %253
  %257 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %257) #18
  br label %258

258:                                              ; preds = %253, %256
  %259 = load i8, i8* %78, align 1
  %260 = icmp slt i8 %259, 0
  br i1 %260, label %261, label %263

261:                                              ; preds = %258
  %262 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %262) #18
  br label %263

263:                                              ; preds = %258, %261
  %264 = load i8, i8* %81, align 1
  %265 = icmp slt i8 %264, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %263
  %267 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %267) #18
  br label %268

268:                                              ; preds = %263, %266
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #17
  br label %315

269:                                              ; preds = %217
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #17
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %9, i32 %215) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.230, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %9) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i64 0, i64 0)) #17
  %270 = load i8, i8* %63, align 1
  %271 = icmp slt i8 %270, 0
  %272 = load i8*, i8** %64, align 8
  %273 = select i1 %271, i8* %272, i8* %59
  %274 = load i8, i8* %273, align 1
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %299, label %276

276:                                              ; preds = %269
  %277 = load i8, i8* %10, align 8, !range !2
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %292, label %279

279:                                              ; preds = %276
  %280 = load i32, i32* %48, align 4
  %281 = icmp sgt i32 %280, 0
  br i1 %281, label %282, label %292

282:                                              ; preds = %279, %282
  %283 = phi i32 [ %289, %282 ], [ 0, %279 ]
  %284 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %285 = bitcast %"class.SkSL::OutputStream"* %284 to void (%"class.SkSL::OutputStream"*, i8*)***
  %286 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %285, align 8
  %287 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %286, i64 2
  %288 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %287, align 8
  call void %288(%"class.SkSL::OutputStream"* %284, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %289 = add nuw nsw i32 %283, 1
  %290 = load i32, i32* %48, align 4
  %291 = icmp slt i32 %289, %290
  br i1 %291, label %282, label %292

292:                                              ; preds = %282, %279, %276
  %293 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %294 = bitcast %"class.SkSL::OutputStream"* %293 to void (%"class.SkSL::OutputStream"*, i8*)***
  %295 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %294, align 8
  %296 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %295, i64 2
  %297 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %296, align 8
  call void %297(%"class.SkSL::OutputStream"* %293, i8* %273) #17
  store i8 0, i8* %10, align 8
  %298 = load i8, i8* %63, align 1
  br label %299

299:                                              ; preds = %269, %292
  %300 = phi i8 [ %270, %269 ], [ %298, %292 ]
  %301 = icmp slt i8 %300, 0
  br i1 %301, label %302, label %304

302:                                              ; preds = %299
  %303 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %303) #18
  br label %304

304:                                              ; preds = %299, %302
  %305 = load i8, i8* %66, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %309

307:                                              ; preds = %304
  %308 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %308) #18
  br label %309

309:                                              ; preds = %304, %307
  %310 = load i8, i8* %69, align 1
  %311 = icmp slt i8 %310, 0
  br i1 %311, label %312, label %314

312:                                              ; preds = %309
  %313 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %313) #18
  br label %314

314:                                              ; preds = %309, %312
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #17
  br label %315

315:                                              ; preds = %217, %212, %268, %314
  %316 = load i8, i8* %10, align 8, !range !2
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %331, label %318

318:                                              ; preds = %315
  %319 = load i32, i32* %48, align 4
  %320 = icmp sgt i32 %319, 0
  br i1 %320, label %321, label %331

321:                                              ; preds = %318, %321
  %322 = phi i32 [ %328, %321 ], [ 0, %318 ]
  %323 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %324 = bitcast %"class.SkSL::OutputStream"* %323 to void (%"class.SkSL::OutputStream"*, i8*)***
  %325 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %324, align 8
  %326 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %325, i64 2
  %327 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %326, align 8
  call void %327(%"class.SkSL::OutputStream"* %323, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %328 = add nuw nsw i32 %322, 1
  %329 = load i32, i32* %48, align 4
  %330 = icmp slt i32 %328, %329
  br i1 %330, label %321, label %331

331:                                              ; preds = %321, %315, %318
  %332 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %333 = bitcast %"class.SkSL::OutputStream"* %332 to void (%"class.SkSL::OutputStream"*, i8*)***
  %334 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %333, align 8
  %335 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %334, i64 2
  %336 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %335, align 8
  call void %336(%"class.SkSL::OutputStream"* %332, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #17
  store i8 0, i8* %10, align 8
  br label %337

337:                                              ; preds = %118, %331, %106, %94
  %338 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %97, i64 1
  %339 = ptrtoint %"class.std::__1::unique_ptr.64"* %338 to i64
  %340 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %96, i64 1
  %341 = ptrtoint %"class.SkSL::ProgramElement"** %340 to i64
  %342 = select i1 %95, i64 %339, i64 %99
  %343 = select i1 %95, i64 %98, i64 %341
  %344 = inttoptr i64 %342 to %"class.std::__1::unique_ptr.64"*
  %345 = icmp eq %"class.std::__1::unique_ptr.64"* %47, %344
  %346 = inttoptr i64 %343 to %"class.SkSL::ProgramElement"**
  %347 = icmp eq %"class.SkSL::ProgramElement"** %46, %346
  %348 = and i1 %345, %347
  br i1 %348, label %88, label %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator17writeOutputStructEv(%"class.SkSL::MetalCodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i32 [ 0, %20 ], [ %29, %22 ]
  %24 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %21, align 8
  %25 = bitcast %"class.SkSL::OutputStream"* %24 to void (%"class.SkSL::OutputStream"*, i8*)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, i64 2
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, align 8
  tail call void %28(%"class.SkSL::OutputStream"* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %29 = add nuw nsw i32 %23, 1
  %30 = load i32, i32* %17, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %22, label %32

32:                                               ; preds = %22, %1, %16
  %33 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %34 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %35 = bitcast %"class.SkSL::OutputStream"* %34 to void (%"class.SkSL::OutputStream"*, i8*)***
  %36 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, i64 2
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %37, align 8
  tail call void %38(%"class.SkSL::OutputStream"* %34, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.231, i64 0, i64 0)) #17
  store i8 0, i8* %13, align 8
  %39 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %40 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %39, align 8
  %41 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %40, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %41, align 8
  %43 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %42, i64 0, i32 0
  %44 = load i8, i8* %43, align 8
  switch i8 %44, label %58 [
    i8 1, label %45
    i8 0, label %51
  ]

45:                                               ; preds = %32
  %46 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %47 = bitcast %"class.SkSL::OutputStream"* %46 to void (%"class.SkSL::OutputStream"*, i8*)***
  %48 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %48, i64 2
  %50 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %49, align 8
  tail call void %50(%"class.SkSL::OutputStream"* %46, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.232, i64 0, i64 0)) #17
  br label %57

51:                                               ; preds = %32
  %52 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %53 = bitcast %"class.SkSL::OutputStream"* %52 to void (%"class.SkSL::OutputStream"*, i8*)***
  %54 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %54, i64 2
  %56 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %55, align 8
  tail call void %56(%"class.SkSL::OutputStream"* %52, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.233, i64 0, i64 0)) #17
  br label %57

57:                                               ; preds = %45, %51
  store i8 0, i8* %13, align 8
  br label %58

58:                                               ; preds = %57, %32
  %59 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %39, align 8
  %60 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %59, i64 0, i32 6
  %61 = bitcast %"class.std::__1::vector.62"* %60 to i64*
  %62 = load i64, i64* %61, align 8, !noalias !43
  %63 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %59, i64 0, i32 6, i32 0, i32 1
  %64 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %59, i64 0, i32 7
  %65 = bitcast %"class.std::__1::vector.75"* %64 to i64*
  %66 = load i64, i64* %65, align 8, !noalias !43
  %67 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %59, i64 0, i32 7, i32 0, i32 1
  %68 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %67, align 8, !noalias !43
  %69 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %63, align 8, !noalias !46
  %70 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %71 = bitcast %"class.SkSL::String"* %2 to i8*
  %72 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.SkSL::String"* %3 to i8*
  %76 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %78 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = bitcast %"class.SkSL::String"* %7 to i8*
  %82 = bitcast %"class.SkSL::String"* %8 to i8*
  %83 = bitcast %"class.SkSL::String"* %9 to i8*
  %84 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.SkSL::String"* %10 to i8*
  %94 = bitcast %"class.SkSL::String"* %11 to i8*
  %95 = bitcast %"class.SkSL::String"* %12 to i8*
  %96 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.SkSL::String"* %4 to i8*
  %106 = bitcast %"class.SkSL::String"* %5 to i8*
  %107 = bitcast %"class.SkSL::String"* %6 to i8*
  %108 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 2
  %118 = inttoptr i64 %62 to %"class.std::__1::unique_ptr.64"*
  %119 = icmp eq %"class.std::__1::unique_ptr.64"* %69, %118
  %120 = inttoptr i64 %66 to %"class.SkSL::ProgramElement"**
  %121 = icmp eq %"class.SkSL::ProgramElement"** %68, %120
  %122 = and i1 %119, %121
  br i1 %122, label %123, label %130

123:                                              ; preds = %449, %58
  %124 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %39, align 8
  %125 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %124, i64 0, i32 1, i32 0, i32 0, i32 0
  %126 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %125, align 8
  %127 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %126, i64 0, i32 0
  %128 = load i8, i8* %127, align 8
  %129 = icmp eq i8 %128, 1
  br i1 %129, label %461, label %467

130:                                              ; preds = %58, %449
  %131 = phi i1 [ %459, %449 ], [ %121, %58 ]
  %132 = phi %"class.SkSL::ProgramElement"** [ %458, %449 ], [ %120, %58 ]
  %133 = phi %"class.std::__1::unique_ptr.64"* [ %456, %449 ], [ %118, %58 ]
  %134 = phi i64 [ %455, %449 ], [ %66, %58 ]
  %135 = phi i64 [ %454, %449 ], [ %62, %58 ]
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %133, i64 0, i32 0, i32 0, i32 0
  %137 = select i1 %131, %"class.SkSL::ProgramElement"** %136, %"class.SkSL::ProgramElement"** %132
  %138 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %137, align 8
  %139 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %138, i64 0, i32 0, i32 2
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 4
  br i1 %141, label %142, label %449

142:                                              ; preds = %130
  %143 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %138, i64 1
  %144 = bitcast %"class.SkSL::ProgramElement"* %143 to %"class.SkSL::VarDeclaration"**
  %145 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %144, align 8
  %146 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %145, i64 0, i32 1
  %147 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %146, align 8
  %148 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %147, i64 0, i32 2
  %149 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %148, align 8
  %150 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %149, i64 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = and i32 %151, 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %449, label %154

154:                                              ; preds = %142
  %155 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %149, i64 0, i32 0, i32 6
  %156 = load i32, i32* %155, align 8
  %157 = icmp eq i32 %156, -1
  br i1 %157, label %158, label %449

158:                                              ; preds = %154
  %159 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %160 = bitcast %"class.SkSL::OutputStream"* %159 to void (%"class.SkSL::OutputStream"*, i8*)***
  %161 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %161, i64 2
  %163 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %162, align 8
  call void %163(%"class.SkSL::OutputStream"* %159, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  store i8 0, i8* %13, align 8
  %164 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %147, i64 0, i32 0, i32 2
  %165 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %164, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %2, %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %165) #17
  %166 = load i8, i8* %73, align 1
  %167 = icmp slt i8 %166, 0
  %168 = load i8*, i8** %74, align 8
  %169 = select i1 %167, i8* %168, i8* %71
  %170 = load i8, i8* %169, align 1
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %195, label %172

172:                                              ; preds = %158
  %173 = load i8, i8* %13, align 8, !range !2
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %188, label %175

175:                                              ; preds = %172
  %176 = load i32, i32* %70, align 4
  %177 = icmp sgt i32 %176, 0
  br i1 %177, label %178, label %188

178:                                              ; preds = %175, %178
  %179 = phi i32 [ %185, %178 ], [ 0, %175 ]
  %180 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %181 = bitcast %"class.SkSL::OutputStream"* %180 to void (%"class.SkSL::OutputStream"*, i8*)***
  %182 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %182, i64 2
  %184 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %183, align 8
  call void %184(%"class.SkSL::OutputStream"* %180, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %185 = add nuw nsw i32 %179, 1
  %186 = load i32, i32* %70, align 4
  %187 = icmp slt i32 %185, %186
  br i1 %187, label %178, label %188

188:                                              ; preds = %178, %175, %172
  %189 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %190 = bitcast %"class.SkSL::OutputStream"* %189 to void (%"class.SkSL::OutputStream"*, i8*)***
  %191 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %190, align 8
  %192 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %191, i64 2
  %193 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %192, align 8
  call void %193(%"class.SkSL::OutputStream"* %189, i8* %169) #17
  store i8 0, i8* %13, align 8
  %194 = load i8, i8* %73, align 1
  br label %195

195:                                              ; preds = %188, %158
  %196 = phi i8 [ %166, %158 ], [ %194, %188 ]
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %195
  %199 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %199) #18
  br label %200

200:                                              ; preds = %195, %198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #17
  %201 = load i8, i8* %13, align 8, !range !2
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %216, label %203

203:                                              ; preds = %200
  %204 = load i32, i32* %70, align 4
  %205 = icmp sgt i32 %204, 0
  br i1 %205, label %206, label %216

206:                                              ; preds = %203, %206
  %207 = phi i32 [ %213, %206 ], [ 0, %203 ]
  %208 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %209 = bitcast %"class.SkSL::OutputStream"* %208 to void (%"class.SkSL::OutputStream"*, i8*)***
  %210 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %210, i64 2
  %212 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %211, align 8
  call void %212(%"class.SkSL::OutputStream"* %208, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %213 = add nuw nsw i32 %207, 1
  %214 = load i32, i32* %70, align 4
  %215 = icmp slt i32 %213, %214
  br i1 %215, label %206, label %216

216:                                              ; preds = %206, %200, %203
  %217 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %218 = bitcast %"class.SkSL::OutputStream"* %217 to void (%"class.SkSL::OutputStream"*, i8*)***
  %219 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %218, align 8
  %220 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %219, i64 2
  %221 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %220, align 8
  call void %221(%"class.SkSL::OutputStream"* %217, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #17
  %222 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %147, i64 0, i32 0, i32 1, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %147, i64 0, i32 0, i32 1, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = icmp ugt i64 %225, -17
  br i1 %226, label %227, label %229

227:                                              ; preds = %216
  %228 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %228) #19
  unreachable

229:                                              ; preds = %216
  %230 = icmp ult i64 %225, 23
  br i1 %230, label %236, label %231

231:                                              ; preds = %229
  %232 = add nuw i64 %225, 16
  %233 = and i64 %232, -16
  %234 = call i8* @_Znwm(i64 %233) #18
  store i8* %234, i8** %76, align 8
  %235 = or i64 %233, -9223372036854775808
  store i64 %235, i64* %77, align 8
  store i64 %225, i64* %78, align 8
  br label %239

236:                                              ; preds = %229
  %237 = trunc i64 %225 to i8
  store i8 %237, i8* %80, align 1
  %238 = icmp eq i64 %225, 0
  br i1 %238, label %241, label %239

239:                                              ; preds = %236, %231
  %240 = phi i8* [ %234, %231 ], [ %75, %236 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %240, i8* align 1 %223, i64 %225, i1 false) #17
  br label %241

241:                                              ; preds = %236, %239
  %242 = phi i8* [ %75, %236 ], [ %240, %239 ]
  %243 = getelementptr inbounds i8, i8* %242, i64 %225
  store i8 0, i8* %243, align 1
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3)
  %244 = load i8, i8* %80, align 1
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %241
  %247 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %247) #18
  br label %248

248:                                              ; preds = %241, %246
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #17
  %249 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %148, align 8
  %250 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %249, i64 0, i32 0, i32 1
  %251 = load i32, i32* %250, align 4
  %252 = icmp slt i32 %251, 0
  br i1 %252, label %253, label %257

253:                                              ; preds = %248
  %254 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %117, align 8
  %255 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %147, i64 0, i32 0, i32 0, i32 1
  %256 = load i32, i32* %255, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %254, i32 %256, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.234, i64 0, i64 0))
  br label %427

257:                                              ; preds = %248
  %258 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %39, align 8
  %259 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %258, i64 0, i32 1, i32 0, i32 0, i32 0
  %260 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %259, align 8
  %261 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %260, i64 0, i32 0
  %262 = load i8, i8* %261, align 8
  switch i8 %262, label %427 [
    i8 1, label %263
    i8 0, label %309
  ]

263:                                              ; preds = %257
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #17
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %6, i32 %251) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.235, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i64 0, i64 0)) #17
  %264 = load i8, i8* %109, align 1
  %265 = icmp slt i8 %264, 0
  %266 = load i8*, i8** %110, align 8
  %267 = select i1 %265, i8* %266, i8* %105
  %268 = load i8, i8* %267, align 1
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %293, label %270

270:                                              ; preds = %263
  %271 = load i8, i8* %13, align 8, !range !2
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %286, label %273

273:                                              ; preds = %270
  %274 = load i32, i32* %70, align 4
  %275 = icmp sgt i32 %274, 0
  br i1 %275, label %276, label %286

276:                                              ; preds = %273, %276
  %277 = phi i32 [ %283, %276 ], [ 0, %273 ]
  %278 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %279 = bitcast %"class.SkSL::OutputStream"* %278 to void (%"class.SkSL::OutputStream"*, i8*)***
  %280 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %279, align 8
  %281 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %280, i64 2
  %282 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %281, align 8
  call void %282(%"class.SkSL::OutputStream"* %278, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %283 = add nuw nsw i32 %277, 1
  %284 = load i32, i32* %70, align 4
  %285 = icmp slt i32 %283, %284
  br i1 %285, label %276, label %286

286:                                              ; preds = %276, %273, %270
  %287 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %288 = bitcast %"class.SkSL::OutputStream"* %287 to void (%"class.SkSL::OutputStream"*, i8*)***
  %289 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %288, align 8
  %290 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %289, i64 2
  %291 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %290, align 8
  call void %291(%"class.SkSL::OutputStream"* %287, i8* %267) #17
  store i8 0, i8* %13, align 8
  %292 = load i8, i8* %109, align 1
  br label %293

293:                                              ; preds = %263, %286
  %294 = phi i8 [ %264, %263 ], [ %292, %286 ]
  %295 = icmp slt i8 %294, 0
  br i1 %295, label %296, label %298

296:                                              ; preds = %293
  %297 = load i8*, i8** %110, align 8
  call void @_ZdlPv(i8* %297) #18
  br label %298

298:                                              ; preds = %293, %296
  %299 = load i8, i8* %112, align 1
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %301, label %303

301:                                              ; preds = %298
  %302 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %302) #18
  br label %303

303:                                              ; preds = %298, %301
  %304 = load i8, i8* %115, align 1
  %305 = icmp slt i8 %304, 0
  br i1 %305, label %306, label %308

306:                                              ; preds = %303
  %307 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %307) #18
  br label %308

308:                                              ; preds = %303, %306
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #17
  br label %427

309:                                              ; preds = %257
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #17
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %9, i32 %251) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.236, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %9) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  %310 = load i8, i8* %85, align 1
  %311 = icmp slt i8 %310, 0
  %312 = load i8*, i8** %86, align 8
  %313 = select i1 %311, i8* %312, i8* %81
  %314 = load i8, i8* %313, align 1
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %339, label %316

316:                                              ; preds = %309
  %317 = load i8, i8* %13, align 8, !range !2
  %318 = icmp eq i8 %317, 0
  br i1 %318, label %332, label %319

319:                                              ; preds = %316
  %320 = load i32, i32* %70, align 4
  %321 = icmp sgt i32 %320, 0
  br i1 %321, label %322, label %332

322:                                              ; preds = %319, %322
  %323 = phi i32 [ %329, %322 ], [ 0, %319 ]
  %324 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %325 = bitcast %"class.SkSL::OutputStream"* %324 to void (%"class.SkSL::OutputStream"*, i8*)***
  %326 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %325, align 8
  %327 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %326, i64 2
  %328 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %327, align 8
  call void %328(%"class.SkSL::OutputStream"* %324, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %329 = add nuw nsw i32 %323, 1
  %330 = load i32, i32* %70, align 4
  %331 = icmp slt i32 %329, %330
  br i1 %331, label %322, label %332

332:                                              ; preds = %322, %319, %316
  %333 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %334 = bitcast %"class.SkSL::OutputStream"* %333 to void (%"class.SkSL::OutputStream"*, i8*)***
  %335 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %334, align 8
  %336 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %335, i64 2
  %337 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %336, align 8
  call void %337(%"class.SkSL::OutputStream"* %333, i8* %313) #17
  store i8 0, i8* %13, align 8
  %338 = load i8, i8* %85, align 1
  br label %339

339:                                              ; preds = %309, %332
  %340 = phi i8 [ %310, %309 ], [ %338, %332 ]
  %341 = icmp slt i8 %340, 0
  br i1 %341, label %342, label %344

342:                                              ; preds = %339
  %343 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %343) #18
  br label %344

344:                                              ; preds = %339, %342
  %345 = load i8, i8* %88, align 1
  %346 = icmp slt i8 %345, 0
  br i1 %346, label %347, label %349

347:                                              ; preds = %344
  %348 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %348) #18
  br label %349

349:                                              ; preds = %344, %347
  %350 = load i8, i8* %91, align 1
  %351 = icmp slt i8 %350, 0
  br i1 %351, label %352, label %354

352:                                              ; preds = %349
  %353 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %353) #18
  br label %354

354:                                              ; preds = %349, %352
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #17
  %355 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %148, align 8
  %356 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %355, i64 0, i32 0, i32 4
  %357 = load i32, i32* %356, align 8
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %405, label %359

359:                                              ; preds = %354
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #17
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %12, i32 %357) #17
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.237, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %12) #17
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::String"* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  %360 = load i8, i8* %97, align 1
  %361 = icmp slt i8 %360, 0
  %362 = load i8*, i8** %98, align 8
  %363 = select i1 %361, i8* %362, i8* %93
  %364 = load i8, i8* %363, align 1
  %365 = icmp eq i8 %364, 0
  br i1 %365, label %389, label %366

366:                                              ; preds = %359
  %367 = load i8, i8* %13, align 8, !range !2
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %382, label %369

369:                                              ; preds = %366
  %370 = load i32, i32* %70, align 4
  %371 = icmp sgt i32 %370, 0
  br i1 %371, label %372, label %382

372:                                              ; preds = %369, %372
  %373 = phi i32 [ %379, %372 ], [ 0, %369 ]
  %374 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %375 = bitcast %"class.SkSL::OutputStream"* %374 to void (%"class.SkSL::OutputStream"*, i8*)***
  %376 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %375, align 8
  %377 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %376, i64 2
  %378 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %377, align 8
  call void %378(%"class.SkSL::OutputStream"* %374, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %379 = add nuw nsw i32 %373, 1
  %380 = load i32, i32* %70, align 4
  %381 = icmp slt i32 %379, %380
  br i1 %381, label %372, label %382

382:                                              ; preds = %372, %369, %366
  %383 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %384 = bitcast %"class.SkSL::OutputStream"* %383 to void (%"class.SkSL::OutputStream"*, i8*)***
  %385 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %384, align 8
  %386 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %385, i64 2
  %387 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %386, align 8
  call void %387(%"class.SkSL::OutputStream"* %383, i8* %363) #17
  store i8 0, i8* %13, align 8
  %388 = load i8, i8* %97, align 1
  br label %389

389:                                              ; preds = %359, %382
  %390 = phi i8 [ %360, %359 ], [ %388, %382 ]
  %391 = icmp slt i8 %390, 0
  br i1 %391, label %392, label %394

392:                                              ; preds = %389
  %393 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %393) #18
  br label %394

394:                                              ; preds = %389, %392
  %395 = load i8, i8* %100, align 1
  %396 = icmp slt i8 %395, 0
  br i1 %396, label %397, label %399

397:                                              ; preds = %394
  %398 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %398) #18
  br label %399

399:                                              ; preds = %394, %397
  %400 = load i8, i8* %103, align 1
  %401 = icmp slt i8 %400, 0
  br i1 %401, label %402, label %404

402:                                              ; preds = %399
  %403 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %403) #18
  br label %404

404:                                              ; preds = %399, %402
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #17
  br label %405

405:                                              ; preds = %354, %404
  %406 = load i8, i8* %13, align 8, !range !2
  %407 = icmp eq i8 %406, 0
  br i1 %407, label %421, label %408

408:                                              ; preds = %405
  %409 = load i32, i32* %70, align 4
  %410 = icmp sgt i32 %409, 0
  br i1 %410, label %411, label %421

411:                                              ; preds = %408, %411
  %412 = phi i32 [ %418, %411 ], [ 0, %408 ]
  %413 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %414 = bitcast %"class.SkSL::OutputStream"* %413 to void (%"class.SkSL::OutputStream"*, i8*)***
  %415 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %414, align 8
  %416 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %415, i64 2
  %417 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %416, align 8
  call void %417(%"class.SkSL::OutputStream"* %413, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %418 = add nuw nsw i32 %412, 1
  %419 = load i32, i32* %70, align 4
  %420 = icmp slt i32 %418, %419
  br i1 %420, label %411, label %421

421:                                              ; preds = %411, %408, %405
  %422 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %423 = bitcast %"class.SkSL::OutputStream"* %422 to void (%"class.SkSL::OutputStream"*, i8*)***
  %424 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %423, align 8
  %425 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %424, i64 2
  %426 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %425, align 8
  call void %426(%"class.SkSL::OutputStream"* %422, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.238, i64 0, i64 0)) #17
  store i8 0, i8* %13, align 8
  br label %443

427:                                              ; preds = %257, %308, %253
  %428 = load i8, i8* %13, align 8
  %429 = icmp eq i8 %428, 0
  br i1 %429, label %443, label %430

430:                                              ; preds = %427
  %431 = load i32, i32* %70, align 4
  %432 = icmp sgt i32 %431, 0
  br i1 %432, label %433, label %443

433:                                              ; preds = %430, %433
  %434 = phi i32 [ %440, %433 ], [ 0, %430 ]
  %435 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %436 = bitcast %"class.SkSL::OutputStream"* %435 to void (%"class.SkSL::OutputStream"*, i8*)***
  %437 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %436, align 8
  %438 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %437, i64 2
  %439 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %438, align 8
  call void %439(%"class.SkSL::OutputStream"* %435, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %440 = add nuw nsw i32 %434, 1
  %441 = load i32, i32* %70, align 4
  %442 = icmp slt i32 %440, %441
  br i1 %442, label %433, label %443

443:                                              ; preds = %433, %421, %427, %430
  %444 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %445 = bitcast %"class.SkSL::OutputStream"* %444 to void (%"class.SkSL::OutputStream"*, i8*)***
  %446 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %445, align 8
  %447 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %446, i64 2
  %448 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %447, align 8
  call void %448(%"class.SkSL::OutputStream"* %444, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #17
  store i8 0, i8* %13, align 8
  br label %449

449:                                              ; preds = %154, %443, %142, %130
  %450 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %133, i64 1
  %451 = ptrtoint %"class.std::__1::unique_ptr.64"* %450 to i64
  %452 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %132, i64 1
  %453 = ptrtoint %"class.SkSL::ProgramElement"** %452 to i64
  %454 = select i1 %131, i64 %451, i64 %135
  %455 = select i1 %131, i64 %134, i64 %453
  %456 = inttoptr i64 %454 to %"class.std::__1::unique_ptr.64"*
  %457 = icmp eq %"class.std::__1::unique_ptr.64"* %69, %456
  %458 = inttoptr i64 %455 to %"class.SkSL::ProgramElement"**
  %459 = icmp eq %"class.SkSL::ProgramElement"** %68, %458
  %460 = and i1 %457, %459
  br i1 %460, label %123, label %130

461:                                              ; preds = %123
  %462 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %463 = bitcast %"class.SkSL::OutputStream"* %462 to void (%"class.SkSL::OutputStream"*, i8*)***
  %464 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %463, align 8
  %465 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %464, i64 2
  %466 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %465, align 8
  call void %466(%"class.SkSL::OutputStream"* %462, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.239, i64 0, i64 0)) #17
  store i8 0, i8* %13, align 8
  br label %467

467:                                              ; preds = %123, %461
  %468 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %469 = bitcast %"class.SkSL::OutputStream"* %468 to void (%"class.SkSL::OutputStream"*, i8*)***
  %470 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %469, align 8
  %471 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %470, i64 2
  %472 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %471, align 8
  call void %472(%"class.SkSL::OutputStream"* %468, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.227, i64 0, i64 0)) #17
  store i8 0, i8* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator20writeInterfaceBlocksEv(%"class.SkSL::MetalCodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %3 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %2, align 8
  %4 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 6
  %5 = bitcast %"class.std::__1::vector.62"* %4 to i64*
  %6 = load i64, i64* %5, align 8, !noalias !49
  %7 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 6, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 7
  %9 = bitcast %"class.std::__1::vector.75"* %8 to i64*
  %10 = load i64, i64* %9, align 8, !noalias !49
  %11 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 7, i32 0, i32 1
  %12 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %11, align 8, !noalias !49
  %13 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %7, align 8, !noalias !52
  %14 = inttoptr i64 %6 to %"class.std::__1::unique_ptr.64"*
  %15 = icmp eq %"class.std::__1::unique_ptr.64"* %13, %14
  %16 = inttoptr i64 %10 to %"class.SkSL::ProgramElement"**
  %17 = icmp eq %"class.SkSL::ProgramElement"** %12, %16
  %18 = and i1 %15, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %38, %1
  %20 = phi i8 [ 0, %1 ], [ %39, %38 ]
  %21 = and i8 %20, 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %51, label %139

23:                                               ; preds = %1, %38
  %24 = phi i1 [ %49, %38 ], [ %17, %1 ]
  %25 = phi %"class.SkSL::ProgramElement"** [ %48, %38 ], [ %16, %1 ]
  %26 = phi %"class.std::__1::unique_ptr.64"* [ %46, %38 ], [ %14, %1 ]
  %27 = phi i8 [ %39, %38 ], [ 0, %1 ]
  %28 = phi i64 [ %45, %38 ], [ %10, %1 ]
  %29 = phi i64 [ %44, %38 ], [ %6, %1 ]
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %26, i64 0, i32 0, i32 0, i32 0
  %31 = select i1 %24, %"class.SkSL::ProgramElement"** %30, %"class.SkSL::ProgramElement"** %25
  %32 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %31, align 8
  %33 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %32, i64 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 5
  br i1 %35, label %36, label %38

36:                                               ; preds = %23
  %37 = bitcast %"class.SkSL::ProgramElement"* %32 to %"class.SkSL::InterfaceBlock"*
  tail call void @_ZN4SkSL18MetalCodeGenerator19writeInterfaceBlockERKNS_14InterfaceBlockE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::InterfaceBlock"* dereferenceable(96) %37)
  br label %38

38:                                               ; preds = %36, %23
  %39 = phi i8 [ 1, %36 ], [ %27, %23 ]
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %26, i64 1
  %41 = ptrtoint %"class.std::__1::unique_ptr.64"* %40 to i64
  %42 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %25, i64 1
  %43 = ptrtoint %"class.SkSL::ProgramElement"** %42 to i64
  %44 = select i1 %24, i64 %41, i64 %29
  %45 = select i1 %24, i64 %28, i64 %43
  %46 = inttoptr i64 %44 to %"class.std::__1::unique_ptr.64"*
  %47 = icmp eq %"class.std::__1::unique_ptr.64"* %13, %46
  %48 = inttoptr i64 %45 to %"class.SkSL::ProgramElement"**
  %49 = icmp eq %"class.SkSL::ProgramElement"** %12, %48
  %50 = and i1 %47, %49
  br i1 %50, label %19, label %23

51:                                               ; preds = %19
  %52 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %2, align 8
  %53 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %52, i64 0, i32 5, i32 0
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %139, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %76, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %76

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i32 [ 0, %64 ], [ %73, %66 ]
  %68 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %65, align 8
  %69 = bitcast %"class.SkSL::OutputStream"* %68 to void (%"class.SkSL::OutputStream"*, i8*)***
  %70 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %70, i64 2
  %72 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %71, align 8
  tail call void %72(%"class.SkSL::OutputStream"* %68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %73 = add nuw nsw i32 %67, 1
  %74 = load i32, i32* %61, align 4
  %75 = icmp slt i32 %73, %74
  br i1 %75, label %66, label %76

76:                                               ; preds = %66, %60, %56
  %77 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %78 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %79 = bitcast %"class.SkSL::OutputStream"* %78 to void (%"class.SkSL::OutputStream"*, i8*)***
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %80, i64 2
  %82 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %81, align 8
  tail call void %82(%"class.SkSL::OutputStream"* %78, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.240, i64 0, i64 0)) #17
  store i8 0, i8* %57, align 8
  %83 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %84 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast %"class.SkSL::OutputStream"* %83 to void (%"class.SkSL::OutputStream"*, i8*)***
  %87 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %87, i64 2
  %89 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %88, align 8
  tail call void %89(%"class.SkSL::OutputStream"* %83, i8* %85) #17
  store i8 1, i8* %57, align 8
  %90 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %91 = load i32, i32* %90, align 4
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %93, label %103

93:                                               ; preds = %76, %93
  %94 = phi i32 [ %100, %93 ], [ 0, %76 ]
  %95 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %96 = bitcast %"class.SkSL::OutputStream"* %95 to void (%"class.SkSL::OutputStream"*, i8*)***
  %97 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %97, i64 2
  %99 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %98, align 8
  tail call void %99(%"class.SkSL::OutputStream"* %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %100 = add nuw nsw i32 %94, 1
  %101 = load i32, i32* %90, align 4
  %102 = icmp slt i32 %100, %101
  br i1 %102, label %93, label %103

103:                                              ; preds = %93, %76
  %104 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %105 = bitcast %"class.SkSL::OutputStream"* %104 to void (%"class.SkSL::OutputStream"*, i8*)***
  %106 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %106, i64 2
  %108 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %107, align 8
  tail call void %108(%"class.SkSL::OutputStream"* %104, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.241, i64 0, i64 0)) #17
  store i8 0, i8* %57, align 8
  %109 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %110 = load i8*, i8** %84, align 8
  %111 = bitcast %"class.SkSL::OutputStream"* %109 to void (%"class.SkSL::OutputStream"*, i8*)***
  %112 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %112, i64 2
  %114 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %113, align 8
  tail call void %114(%"class.SkSL::OutputStream"* %109, i8* %110) #17
  store i8 1, i8* %57, align 8
  %115 = load i32, i32* %90, align 4
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %117, label %127

117:                                              ; preds = %103, %117
  %118 = phi i32 [ %124, %117 ], [ 0, %103 ]
  %119 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %120 = bitcast %"class.SkSL::OutputStream"* %119 to void (%"class.SkSL::OutputStream"*, i8*)***
  %121 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %121, i64 2
  %123 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %122, align 8
  tail call void %123(%"class.SkSL::OutputStream"* %119, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %124 = add nuw nsw i32 %118, 1
  %125 = load i32, i32* %90, align 4
  %126 = icmp slt i32 %124, %125
  br i1 %126, label %117, label %127

127:                                              ; preds = %117, %103
  %128 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %129 = bitcast %"class.SkSL::OutputStream"* %128 to void (%"class.SkSL::OutputStream"*, i8*)***
  %130 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %130, i64 2
  %132 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %131, align 8
  tail call void %132(%"class.SkSL::OutputStream"* %128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #17
  store i8 0, i8* %57, align 8
  %133 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %77, align 8
  %134 = load i8*, i8** %84, align 8
  %135 = bitcast %"class.SkSL::OutputStream"* %133 to void (%"class.SkSL::OutputStream"*, i8*)***
  %136 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %136, i64 2
  %138 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %137, align 8
  tail call void %138(%"class.SkSL::OutputStream"* %133, i8* %134) #17
  store i8 1, i8* %57, align 8
  br label %139

139:                                              ; preds = %51, %19, %127
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator22writeStructDefinitionsEv(%"class.SkSL::MetalCodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %3 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %2, align 8
  %4 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 6
  %5 = bitcast %"class.std::__1::vector.62"* %4 to i64*
  %6 = load i64, i64* %5, align 8, !noalias !55
  %7 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 6, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 7
  %9 = bitcast %"class.std::__1::vector.75"* %8 to i64*
  %10 = load i64, i64* %9, align 8, !noalias !55
  %11 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %3, i64 0, i32 7, i32 0, i32 1
  %12 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %11, align 8, !noalias !55
  %13 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %7, align 8, !noalias !58
  %14 = inttoptr i64 %6 to %"class.std::__1::unique_ptr.64"*
  %15 = icmp eq %"class.std::__1::unique_ptr.64"* %13, %14
  %16 = inttoptr i64 %10 to %"class.SkSL::ProgramElement"**
  %17 = icmp eq %"class.SkSL::ProgramElement"** %12, %16
  %18 = and i1 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %34, %1
  ret void

20:                                               ; preds = %1, %34
  %21 = phi i1 [ %44, %34 ], [ %17, %1 ]
  %22 = phi %"class.SkSL::ProgramElement"** [ %43, %34 ], [ %16, %1 ]
  %23 = phi %"class.std::__1::unique_ptr.64"* [ %41, %34 ], [ %14, %1 ]
  %24 = phi i64 [ %40, %34 ], [ %10, %1 ]
  %25 = phi i64 [ %39, %34 ], [ %6, %1 ]
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %23, i64 0, i32 0, i32 0, i32 0
  %27 = select i1 %21, %"class.SkSL::ProgramElement"** %26, %"class.SkSL::ProgramElement"** %22
  %28 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %27, align 8
  %29 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %28, i64 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 8
  br i1 %31, label %32, label %34

32:                                               ; preds = %20
  %33 = bitcast %"class.SkSL::ProgramElement"* %28 to %"class.SkSL::StructDefinition"*
  tail call void @_ZN4SkSL18MetalCodeGenerator21writeStructDefinitionERKNS_16StructDefinitionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::StructDefinition"* dereferenceable(24) %33)
  br label %34

34:                                               ; preds = %32, %20
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %23, i64 1
  %36 = ptrtoint %"class.std::__1::unique_ptr.64"* %35 to i64
  %37 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %22, i64 1
  %38 = ptrtoint %"class.SkSL::ProgramElement"** %37 to i64
  %39 = select i1 %21, i64 %36, i64 %25
  %40 = select i1 %21, i64 %24, i64 %38
  %41 = inttoptr i64 %39 to %"class.std::__1::unique_ptr.64"*
  %42 = icmp eq %"class.std::__1::unique_ptr.64"* %13, %41
  %43 = inttoptr i64 %40 to %"class.SkSL::ProgramElement"**
  %44 = icmp eq %"class.SkSL::ProgramElement"** %12, %43
  %45 = and i1 %42, %44
  br i1 %45, label %19, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator17visitGlobalStructEPNS0_19GlobalStructVisitorE(%"class.SkSL::MetalCodeGenerator"* nocapture readonly, %"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = bitcast %"struct.std::__1::__hash_node_base.163"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"* %1 to void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::InterfaceBlock"*, %"class.SkSL::String"*)***
  br label %48

12:                                               ; preds = %48, %2
  %13 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %14 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %13, align 8
  %15 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %14, i64 0, i32 6
  %16 = bitcast %"class.std::__1::vector.62"* %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !61
  %18 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %14, i64 0, i32 6, i32 0, i32 1
  %19 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %14, i64 0, i32 7
  %20 = bitcast %"class.std::__1::vector.75"* %19 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !61
  %22 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %14, i64 0, i32 7, i32 0, i32 1
  %23 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %22, align 8, !noalias !61
  %24 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %18, align 8, !noalias !64
  %25 = bitcast %"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"* %1 to void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)***
  %26 = bitcast %"class.SkSL::String"* %3 to i8*
  %27 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = bitcast %"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"* %1 to void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Type"*, %"class.SkSL::String"*)***
  %33 = bitcast %"class.SkSL::String"* %4 to i8*
  %34 = bitcast %"class.SkSL::String"* %5 to i8*
  %35 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = inttoptr i64 %17 to %"class.std::__1::unique_ptr.64"*
  %44 = icmp eq %"class.std::__1::unique_ptr.64"* %24, %43
  %45 = inttoptr i64 %21 to %"class.SkSL::ProgramElement"**
  %46 = icmp eq %"class.SkSL::ProgramElement"** %23, %45
  %47 = and i1 %44, %46
  br i1 %47, label %60, label %61

48:                                               ; preds = %10, %48
  %49 = phi i64 [ %8, %10 ], [ %58, %48 ]
  %50 = inttoptr i64 %49 to %"struct.std::__1::__hash_node.371"*
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node.371", %"struct.std::__1::__hash_node.371"* %50, i64 0, i32 2, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node.371", %"struct.std::__1::__hash_node.371"* %50, i64 0, i32 2, i32 0, i32 1
  %53 = load %"class.SkSL::InterfaceBlock"*, %"class.SkSL::InterfaceBlock"** %51, align 8
  %54 = load void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::InterfaceBlock"*, %"class.SkSL::String"*)**, void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::InterfaceBlock"*, %"class.SkSL::String"*)*** %11, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::InterfaceBlock"*, %"class.SkSL::String"*)*, void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::InterfaceBlock"*, %"class.SkSL::String"*)** %54, i64 2
  %56 = load void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::InterfaceBlock"*, %"class.SkSL::String"*)*, void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::InterfaceBlock"*, %"class.SkSL::String"*)** %55, align 8
  tail call void %56(%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"* %1, %"class.SkSL::InterfaceBlock"* dereferenceable(96) %53, %"class.SkSL::String"* dereferenceable(24) %52) #17
  %57 = inttoptr i64 %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %12, label %48

60:                                               ; preds = %165, %12
  ret void

61:                                               ; preds = %12, %165
  %62 = phi i1 [ %175, %165 ], [ %46, %12 ]
  %63 = phi %"class.SkSL::ProgramElement"** [ %174, %165 ], [ %45, %12 ]
  %64 = phi %"class.std::__1::unique_ptr.64"* [ %172, %165 ], [ %43, %12 ]
  %65 = phi i64 [ %171, %165 ], [ %17, %12 ]
  %66 = phi i64 [ %170, %165 ], [ %21, %12 ]
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %64, i64 0, i32 0, i32 0, i32 0
  %68 = select i1 %62, %"class.SkSL::ProgramElement"** %67, %"class.SkSL::ProgramElement"** %63
  %69 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %68, align 8
  %70 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %69, i64 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 4
  br i1 %72, label %73, label %165

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %69, i64 1
  %75 = bitcast %"class.SkSL::ProgramElement"* %74 to %"class.SkSL::VarDeclaration"**
  %76 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %75, align 8
  %77 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %76, i64 0, i32 1
  %78 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %77, align 8
  %79 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %78, i64 0, i32 0, i32 2
  %80 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %79, align 8
  %81 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %80, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, 6
  br i1 %83, label %84, label %149

84:                                               ; preds = %73
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #17
  %85 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %78, i64 0, i32 0, i32 1, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %78, i64 0, i32 0, i32 1, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = icmp ugt i64 %88, -17
  br i1 %89, label %90, label %92

90:                                               ; preds = %84
  %91 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %91) #19
  unreachable

92:                                               ; preds = %84
  %93 = icmp ult i64 %88, 23
  br i1 %93, label %99, label %94

94:                                               ; preds = %92
  %95 = add nuw i64 %88, 16
  %96 = and i64 %95, -16
  %97 = call i8* @_Znwm(i64 %96) #18
  store i8* %97, i8** %27, align 8
  %98 = or i64 %96, -9223372036854775808
  store i64 %98, i64* %28, align 8
  store i64 %88, i64* %29, align 8
  br label %102

99:                                               ; preds = %92
  %100 = trunc i64 %88 to i8
  store i8 %100, i8* %31, align 1
  %101 = icmp eq i64 %88, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %99, %94
  %103 = phi i8* [ %97, %94 ], [ %26, %99 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %103, i8* align 1 %86, i64 %88, i1 false) #17
  br label %104

104:                                              ; preds = %99, %102
  %105 = phi i8* [ %26, %99 ], [ %103, %102 ]
  %106 = getelementptr inbounds i8, i8* %105, i64 %88
  store i8 0, i8* %106, align 1
  %107 = load void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Type"*, %"class.SkSL::String"*)**, void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Type"*, %"class.SkSL::String"*)*** %32, align 8
  %108 = getelementptr inbounds void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Type"*, %"class.SkSL::String"*)*, void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Type"*, %"class.SkSL::String"*)** %107, i64 3
  %109 = load void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Type"*, %"class.SkSL::String"*)*, void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Type"*, %"class.SkSL::String"*)** %108, align 8
  call void %109(%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"* %1, %"class.SkSL::Type"* dereferenceable(184) %80, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #17
  %110 = load i8, i8* %31, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %104
  %113 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %113) #18
  br label %114

114:                                              ; preds = %104, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #17
  %115 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %79, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #17
  %116 = load i8*, i8** %85, align 8
  %117 = load i64, i64* %87, align 8
  %118 = icmp ugt i64 %117, -17
  br i1 %118, label %119, label %121

119:                                              ; preds = %114
  %120 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %120) #19
  unreachable

121:                                              ; preds = %114
  %122 = icmp ult i64 %117, 23
  br i1 %122, label %128, label %123

123:                                              ; preds = %121
  %124 = add nuw i64 %117, 16
  %125 = and i64 %124, -16
  %126 = call i8* @_Znwm(i64 %125) #18
  store i8* %126, i8** %35, align 8
  %127 = or i64 %125, -9223372036854775808
  store i64 %127, i64* %36, align 8
  store i64 %117, i64* %37, align 8
  br label %131

128:                                              ; preds = %121
  %129 = trunc i64 %117 to i8
  store i8 %129, i8* %39, align 1
  %130 = icmp eq i64 %117, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %128, %123
  %132 = phi i8* [ %126, %123 ], [ %34, %128 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %132, i8* align 1 %116, i64 %117, i1 false) #17
  br label %133

133:                                              ; preds = %128, %131
  %134 = phi i8* [ %34, %128 ], [ %132, %131 ]
  %135 = getelementptr inbounds i8, i8* %134, i64 %117
  store i8 0, i8* %135, align 1
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0)) #17
  %136 = load void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Type"*, %"class.SkSL::String"*)**, void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Type"*, %"class.SkSL::String"*)*** %32, align 8
  %137 = getelementptr inbounds void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Type"*, %"class.SkSL::String"*)*, void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Type"*, %"class.SkSL::String"*)** %136, i64 4
  %138 = load void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Type"*, %"class.SkSL::String"*)*, void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Type"*, %"class.SkSL::String"*)** %137, align 8
  call void %138(%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"* %1, %"class.SkSL::Type"* dereferenceable(184) %115, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #17
  %139 = load i8, i8* %41, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %133
  %142 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %142) #18
  br label %143

143:                                              ; preds = %133, %141
  %144 = load i8, i8* %39, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %147) #18
  br label %148

148:                                              ; preds = %143, %146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #17
  br label %165

149:                                              ; preds = %73
  %150 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %78, i64 0, i32 2
  %151 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %150, align 8
  %152 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %151, i64 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = icmp ugt i32 %153, 1
  br i1 %154, label %165, label %155

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %151, i64 0, i32 0, i32 6
  %157 = load i32, i32* %156, align 8
  %158 = icmp eq i32 %157, -1
  br i1 %158, label %159, label %165

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %76, i64 0, i32 4, i32 0, i32 0, i32 0
  %161 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %160, align 8
  %162 = load void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)**, void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)*** %25, align 8
  %163 = getelementptr inbounds void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)*, void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)** %162, i64 5
  %164 = load void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)*, void (%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*)** %163, align 8
  call void %164(%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"* %1, %"class.SkSL::Variable"* dereferenceable(64) %78, %"class.SkSL::Expression"* %161) #17
  br label %165

165:                                              ; preds = %149, %155, %159, %148, %61
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %64, i64 1
  %167 = ptrtoint %"class.std::__1::unique_ptr.64"* %166 to i64
  %168 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %63, i64 1
  %169 = ptrtoint %"class.SkSL::ProgramElement"** %168 to i64
  %170 = select i1 %62, i64 %66, i64 %169
  %171 = select i1 %62, i64 %167, i64 %65
  %172 = inttoptr i64 %171 to %"class.std::__1::unique_ptr.64"*
  %173 = icmp eq %"class.std::__1::unique_ptr.64"* %24, %172
  %174 = inttoptr i64 %170 to %"class.SkSL::ProgramElement"**
  %175 = icmp eq %"class.SkSL::ProgramElement"** %23, %174
  %176 = and i1 %173, %175
  br i1 %176, label %60, label %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator17writeGlobalStructEv(%"class.SkSL::MetalCodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.anon.345, align 8
  %3 = bitcast %class.anon.345* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #17
  %4 = getelementptr inbounds %class.anon.345, %class.anon.345* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.anon.345, %class.anon.345* %2, i64 0, i32 1
  %6 = getelementptr inbounds %class.anon.345, %class.anon.345* %2, i64 0, i32 2
  %7 = bitcast %class.anon.345* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @"_ZTVZN4SkSL18MetalCodeGenerator17writeGlobalStructEvE3$_0", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store i8 1, i8* %6, align 8
  store %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::MetalCodeGenerator"** %5, align 8
  %8 = getelementptr inbounds %class.anon.345, %class.anon.345* %2, i64 0, i32 0
  call void @_ZN4SkSL18MetalCodeGenerator17visitGlobalStructEPNS0_19GlobalStructVisitorE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"* nonnull %8)
  %9 = load i8, i8* %6, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %46

11:                                               ; preds = %1
  %12 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %5, align 8
  %13 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %12, i64 0, i32 12
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %12, i64 0, i32 11
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %12, i64 0, i32 0, i32 3
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i32 [ 0, %20 ], [ %29, %22 ]
  %24 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %21, align 8
  %25 = bitcast %"class.SkSL::OutputStream"* %24 to void (%"class.SkSL::OutputStream"*, i8*)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, i64 2
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, align 8
  call void %28(%"class.SkSL::OutputStream"* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %29 = add nuw nsw i32 %23, 1
  %30 = load i32, i32* %17, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %22, label %32

32:                                               ; preds = %22, %16, %11
  %33 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %12, i64 0, i32 0, i32 3
  %34 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %35 = bitcast %"class.SkSL::OutputStream"* %34 to void (%"class.SkSL::OutputStream"*, i8*)***
  %36 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, i64 2
  %38 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %37, align 8
  call void %38(%"class.SkSL::OutputStream"* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #17
  store i8 0, i8* %13, align 8
  %39 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %33, align 8
  %40 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %12, i64 0, i32 6
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*)***
  %43 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %43, i64 2
  %45 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %44, align 8
  call void %45(%"class.SkSL::OutputStream"* %39, i8* %41) #17
  store i8 1, i8* %13, align 8
  store i8 1, i8* %6, align 8
  br label %46

46:                                               ; preds = %1, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18MetalCodeGenerator19GlobalStructVisitorD2Ev(%"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18MetalCodeGenerator19writeProgramElementERKNS_14ProgramElementE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::ProgramElement"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %82 [
    i32 6, label %45
    i32 3, label %7
    i32 2, label %5
  ]

5:                                                ; preds = %2
  %6 = bitcast %"class.SkSL::ProgramElement"* %1 to %"class.SkSL::FunctionDefinition"*
  tail call void @_ZN4SkSL18MetalCodeGenerator13writeFunctionERKNS_18FunctionDefinitionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionDefinition"* dereferenceable(88) %6)
  br label %82

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %1, i64 1
  %9 = bitcast %"class.SkSL::ProgramElement"* %8 to %"class.SkSL::FunctionDeclaration"**
  %10 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %9, align 8
  %11 = tail call zeroext i1 @_ZN4SkSL18MetalCodeGenerator24writeFunctionDeclarationERKNS_19FunctionDeclarationE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %10) #17
  %12 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %31, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i32 [ 0, %19 ], [ %28, %21 ]
  %23 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %24 = bitcast %"class.SkSL::OutputStream"* %23 to void (%"class.SkSL::OutputStream"*, i8*)***
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %25, i64 2
  %27 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, align 8
  tail call void %27(%"class.SkSL::OutputStream"* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %28 = add nuw nsw i32 %22, 1
  %29 = load i32, i32* %16, align 4
  %30 = icmp slt i32 %28, %29
  br i1 %30, label %21, label %31

31:                                               ; preds = %21, %7, %15
  %32 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %33 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %32, align 8
  %34 = bitcast %"class.SkSL::OutputStream"* %33 to void (%"class.SkSL::OutputStream"*, i8*)***
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, i64 2
  %37 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, align 8
  tail call void %37(%"class.SkSL::OutputStream"* %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #17
  store i8 0, i8* %12, align 8
  %38 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %32, align 8
  %39 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.SkSL::OutputStream"* %38 to void (%"class.SkSL::OutputStream"*, i8*)***
  %42 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %42, i64 2
  %44 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %43, align 8
  tail call void %44(%"class.SkSL::OutputStream"* %38, i8* %40) #17
  store i8 1, i8* %12, align 8
  br label %82

45:                                               ; preds = %2
  %46 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %1, i64 1
  %47 = bitcast %"class.SkSL::ProgramElement"* %46 to %"struct.SkSL::Modifiers"**
  %48 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %47, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator14writeModifiersERKNS_9ModifiersE(%"class.SkSL::MetalCodeGenerator"* %0, %"struct.SkSL::Modifiers"* dereferenceable(80) %48)
  %49 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %54 = load i32, i32* %53, align 4
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  br label %58

58:                                               ; preds = %58, %56
  %59 = phi i32 [ 0, %56 ], [ %65, %58 ]
  %60 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %57, align 8
  %61 = bitcast %"class.SkSL::OutputStream"* %60 to void (%"class.SkSL::OutputStream"*, i8*)***
  %62 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %62, i64 2
  %64 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, align 8
  tail call void %64(%"class.SkSL::OutputStream"* %60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %65 = add nuw nsw i32 %59, 1
  %66 = load i32, i32* %53, align 4
  %67 = icmp slt i32 %65, %66
  br i1 %67, label %58, label %68

68:                                               ; preds = %58, %45, %52
  %69 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %70 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %69, align 8
  %71 = bitcast %"class.SkSL::OutputStream"* %70 to void (%"class.SkSL::OutputStream"*, i8*)***
  %72 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %72, i64 2
  %74 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %73, align 8
  tail call void %74(%"class.SkSL::OutputStream"* %70, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #17
  store i8 0, i8* %49, align 8
  %75 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %69, align 8
  %76 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 6
  %77 = load i8*, i8** %76, align 8
  %78 = bitcast %"class.SkSL::OutputStream"* %75 to void (%"class.SkSL::OutputStream"*, i8*)***
  %79 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, i64 2
  %81 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %80, align 8
  tail call void %81(%"class.SkSL::OutputStream"* %75, i8* %77) #17
  store i8 1, i8* %49, align 8
  br label %82

82:                                               ; preds = %2, %68, %31, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Expression"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.SkSL::Expression"* %1, null
  br i1 %3, label %142, label %4

4:                                                ; preds = %2, %66
  %5 = phi %"class.SkSL::Expression"* [ %68, %66 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %142 [
    i32 47, label %8
    i32 34, label %35
    i32 35, label %35
    i32 33, label %35
    i32 36, label %35
    i32 38, label %35
    i32 39, label %35
    i32 40, label %35
    i32 44, label %55
    i32 52, label %63
    i32 30, label %70
    i32 48, label %80
    i32 49, label %90
    i32 50, label %93
    i32 53, label %96
    i32 55, label %111
  ]

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to %"class.SkSL::FunctionDeclaration"**
  %11 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %10, align 8
  %12 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsERKNS_19FunctionDeclarationE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %11)
  %13 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1, i32 0, i32 1
  %14 = getelementptr inbounds i32, i32* %13, i64 4
  %15 = bitcast i32* %14 to %"class.std::__1::unique_ptr.258"**
  %16 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %15, align 8
  %17 = icmp eq %"class.std::__1::unique_ptr.258"* %16, null
  br i1 %17, label %142, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds i32, i32* %13, i64 6
  %20 = bitcast i32* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = lshr i64 %21, 1
  %23 = and i64 %22, 2147483647
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %16, i64 %23
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %142, label %26

26:                                               ; preds = %18, %26
  %27 = phi i32 [ %32, %26 ], [ %12, %18 ]
  %28 = phi %"class.std::__1::unique_ptr.258"* [ %33, %26 ], [ %16, %18 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %29, align 8
  %31 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %30)
  %32 = or i32 %31, %27
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %28, i64 1
  %34 = icmp eq %"class.std::__1::unique_ptr.258"* %33, %24
  br i1 %34, label %142, label %26

35:                                               ; preds = %4, %4, %4, %4, %4, %4, %4
  %36 = tail call dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"* nonnull %5) #17
  %37 = bitcast %"class.SkSL::AnyConstructor"* %36 to { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %38 = load { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %37, align 8
  %39 = getelementptr inbounds { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)** %38, i64 12
  %40 = load { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.258"*, i64 } (%"class.SkSL::AnyConstructor"*)** %39, align 8
  %41 = tail call { %"class.std::__1::unique_ptr.258"*, i64 } %40(%"class.SkSL::AnyConstructor"* %36) #17
  %42 = extractvalue { %"class.std::__1::unique_ptr.258"*, i64 } %41, 0
  %43 = extractvalue { %"class.std::__1::unique_ptr.258"*, i64 } %41, 1
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %42, i64 %43
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %142, label %46

46:                                               ; preds = %35, %46
  %47 = phi %"class.std::__1::unique_ptr.258"* [ %53, %46 ], [ %42, %35 ]
  %48 = phi i32 [ %52, %46 ], [ 0, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %47, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %49, align 8
  %51 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %50)
  %52 = or i32 %51, %48
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %47, i64 1
  %54 = icmp eq %"class.std::__1::unique_ptr.258"* %53, %44
  br i1 %54, label %142, label %46

55:                                               ; preds = %4
  %56 = bitcast %"class.SkSL::Expression"* %5 to %"class.SkSL::FieldAccess"*
  %57 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %56, i64 0, i32 2
  %58 = load i8, i8* %57, align 4
  %59 = icmp eq i8 %58, 1
  br i1 %59, label %142, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1, i32 0, i32 1
  %62 = bitcast i32* %61 to %"class.SkSL::Expression"**
  br label %66

63:                                               ; preds = %4
  %64 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1
  %65 = bitcast %"class.SkSL::Expression"* %64 to %"class.SkSL::Expression"**
  br label %66

66:                                               ; preds = %63, %90, %93, %60
  %67 = phi %"class.SkSL::Expression"** [ %65, %63 ], [ %92, %90 ], [ %95, %93 ], [ %62, %60 ]
  %68 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %67, align 8
  %69 = icmp eq %"class.SkSL::Expression"* %68, null
  br i1 %69, label %142, label %4

70:                                               ; preds = %4
  %71 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1
  %72 = bitcast %"class.SkSL::Expression"* %71 to %"class.SkSL::Expression"**
  %73 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %72, align 8
  %74 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %73)
  %75 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1, i32 1
  %76 = bitcast %"class.SkSL::Type"** %75 to %"class.SkSL::Expression"**
  %77 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %76, align 8
  %78 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %77)
  %79 = or i32 %78, %74
  ret i32 %79

80:                                               ; preds = %4
  %81 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1
  %82 = bitcast %"class.SkSL::Expression"* %81 to %"class.SkSL::Expression"**
  %83 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %82, align 8
  %84 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %83)
  %85 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1, i32 0, i32 1
  %86 = bitcast i32* %85 to %"class.SkSL::Expression"**
  %87 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %86, align 8
  %88 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %87)
  %89 = or i32 %88, %84
  ret i32 %89

90:                                               ; preds = %4
  %91 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1, i32 0, i32 1
  %92 = bitcast i32* %91 to %"class.SkSL::Expression"**
  br label %66

93:                                               ; preds = %4
  %94 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1
  %95 = bitcast %"class.SkSL::Expression"* %94 to %"class.SkSL::Expression"**
  br label %66

96:                                               ; preds = %4
  %97 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1
  %98 = bitcast %"class.SkSL::Expression"* %97 to %"class.SkSL::Expression"**
  %99 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %98, align 8
  %100 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %99)
  %101 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1, i32 0, i32 1
  %102 = bitcast i32* %101 to %"class.SkSL::Expression"**
  %103 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %102, align 8
  %104 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %103)
  %105 = or i32 %104, %100
  %106 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1, i32 1
  %107 = bitcast %"class.SkSL::Type"** %106 to %"class.SkSL::Expression"**
  %108 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %107, align 8
  %109 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %108)
  %110 = or i32 %105, %109
  ret i32 %110

111:                                              ; preds = %4
  %112 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %5, i64 1
  %113 = bitcast %"class.SkSL::Expression"* %112 to %"class.SkSL::Variable"**
  %114 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %113, align 8
  %115 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %114, i64 0, i32 2
  %116 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %115, align 8
  %117 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %116, i64 0, i32 0, i32 6
  %118 = load i32, i32* %117, align 8
  %119 = icmp eq i32 %118, 15
  br i1 %119, label %142, label %120

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %114, i64 0, i32 3
  %122 = load i8, i8* %121, align 8
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %142

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %116, i64 0, i32 1
  %126 = load i32, i32* %125, align 8
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %142

129:                                              ; preds = %124
  %130 = and i32 %126, 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %142

132:                                              ; preds = %129
  %133 = and i32 %126, 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %141, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %114, i64 0, i32 0, i32 2
  %137 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %136, align 8
  %138 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %137, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 6
  br i1 %140, label %141, label %142

141:                                              ; preds = %135, %132
  br label %142

142:                                              ; preds = %66, %55, %4, %46, %26, %8, %2, %35, %18, %141, %120, %111, %124, %129, %135
  %143 = phi i32 [ 8, %141 ], [ 0, %120 ], [ 24, %111 ], [ 1, %124 ], [ 2, %129 ], [ 4, %135 ], [ %12, %18 ], [ 0, %35 ], [ 0, %2 ], [ %12, %8 ], [ %32, %26 ], [ %52, %46 ], [ 0, %66 ], [ 8, %55 ], [ 0, %4 ]
  ret i32 %143
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::Statement"* readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.SkSL::Statement"* %1, null
  br i1 %3, label %117, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %117 [
    i32 16, label %7
    i32 29, label %29
    i32 21, label %34
    i32 26, label %39
    i32 23, label %44
    i32 22, label %59
    i32 20, label %79
    i32 27, label %89
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 2
  %9 = bitcast %"class.SkSL::Statement"* %8 to %"class.std::__1::unique_ptr.221"**
  %10 = load %"class.std::__1::unique_ptr.221"*, %"class.std::__1::unique_ptr.221"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.221"* %10, null
  br i1 %11, label %117, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 2, i32 0, i32 1
  %14 = bitcast i32* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = and i64 %16, 2147483647
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %10, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %117, label %20

20:                                               ; preds = %12, %20
  %21 = phi i32 [ %26, %20 ], [ 0, %12 ]
  %22 = phi %"class.std::__1::unique_ptr.221"* [ %27, %20 ], [ %10, %12 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %23, align 8
  %25 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* %24)
  %26 = or i32 %25, %21
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %22, i64 1
  %28 = icmp eq %"class.std::__1::unique_ptr.221"* %27, %18
  br i1 %28, label %117, label %20

29:                                               ; preds = %4
  %30 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 2, i32 0, i32 1
  %31 = bitcast i32* %30 to %"class.SkSL::Expression"**
  %32 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %31, align 8
  %33 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %32)
  br label %117

34:                                               ; preds = %4
  %35 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %36 = bitcast %"class.SkSL::Statement"* %35 to %"class.SkSL::Expression"**
  %37 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %36, align 8
  %38 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %37)
  br label %117

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %41 = bitcast %"class.SkSL::Statement"* %40 to %"class.SkSL::Expression"**
  %42 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %41, align 8
  %43 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %42)
  br label %117

44:                                               ; preds = %4
  %45 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %46 = bitcast %"class.SkSL::Statement"* %45 to %"class.SkSL::Expression"**
  %47 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %46, align 8
  %48 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %47)
  %49 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1, i32 0, i32 1
  %50 = bitcast i32* %49 to %"class.SkSL::Statement"**
  %51 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %50, align 8
  %52 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* %51)
  %53 = or i32 %52, %48
  %54 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 2
  %55 = bitcast %"class.SkSL::Statement"* %54 to %"class.SkSL::Statement"**
  %56 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %55, align 8
  %57 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* %56)
  %58 = or i32 %53, %57
  ret i32 %58

59:                                               ; preds = %4
  %60 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 2
  %61 = bitcast %"class.SkSL::Statement"* %60 to %"class.SkSL::Statement"**
  %62 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %61, align 8
  %63 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* %62)
  %64 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 2, i32 0, i32 1
  %65 = bitcast i32* %64 to %"class.SkSL::Expression"**
  %66 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %65, align 8
  %67 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %66)
  %68 = or i32 %67, %63
  %69 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 3
  %70 = bitcast %"class.SkSL::Statement"* %69 to %"class.SkSL::Expression"**
  %71 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %70, align 8
  %72 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %71)
  %73 = or i32 %68, %72
  %74 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 3, i32 0, i32 1
  %75 = bitcast i32* %74 to %"class.SkSL::Statement"**
  %76 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %75, align 8
  %77 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* %76)
  %78 = or i32 %73, %77
  ret i32 %78

79:                                               ; preds = %4
  %80 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1, i32 0, i32 1
  %81 = bitcast i32* %80 to %"class.SkSL::Expression"**
  %82 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %81, align 8
  %83 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %82)
  %84 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %85 = bitcast %"class.SkSL::Statement"* %84 to %"class.SkSL::Statement"**
  %86 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %85, align 8
  %87 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* %86)
  %88 = or i32 %87, %83
  ret i32 %88

89:                                               ; preds = %4
  %90 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1, i32 0, i32 1
  %91 = bitcast i32* %90 to %"class.SkSL::Expression"**
  %92 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %91, align 8
  %93 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_10ExpressionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Expression"* %92)
  %94 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 3
  %95 = bitcast %"class.SkSL::Statement"* %94 to %"class.std::__1::unique_ptr.221"**
  %96 = load %"class.std::__1::unique_ptr.221"*, %"class.std::__1::unique_ptr.221"** %95, align 8
  %97 = icmp eq %"class.std::__1::unique_ptr.221"* %96, null
  br i1 %97, label %117, label %98

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 3, i32 0, i32 1
  %100 = bitcast i32* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = lshr i64 %101, 1
  %103 = and i64 %102, 2147483647
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %96, i64 %103
  %105 = icmp eq i64 %103, 0
  br i1 %105, label %117, label %106

106:                                              ; preds = %98, %106
  %107 = phi %"class.std::__1::unique_ptr.221"* [ %115, %106 ], [ %96, %98 ]
  %108 = phi i32 [ %114, %106 ], [ %93, %98 ]
  %109 = bitcast %"class.std::__1::unique_ptr.221"* %107 to %"class.SkSL::SwitchCase"**
  %110 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %109, align 8
  %111 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %110, i64 0, i32 2, i32 0, i32 0, i32 0
  %112 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %111, align 8
  %113 = tail call i32 @_ZN4SkSL18MetalCodeGenerator12requirementsEPKNS_9StatementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::Statement"* %112)
  %114 = or i32 %113, %108
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %107, i64 1
  %116 = icmp eq %"class.std::__1::unique_ptr.221"* %115, %104
  br i1 %116, label %117, label %106

117:                                              ; preds = %106, %20, %89, %7, %98, %12, %4, %2, %39, %34, %29
  %118 = phi i32 [ %43, %39 ], [ %38, %34 ], [ %33, %29 ], [ 0, %2 ], [ 0, %4 ], [ 0, %12 ], [ %93, %98 ], [ 0, %7 ], [ %93, %89 ], [ %26, %20 ], [ %114, %106 ]
  ret i32 %118
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL18MetalCodeGenerator12generateCodeEv(%"class.SkSL::MetalCodeGenerator"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.anon.345, align 8
  %3 = alloca %"class.SkSL::StringStream", align 16
  %4 = alloca %"class.SkSL::StringStream", align 16
  %5 = bitcast %"class.SkSL::StringStream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 0, i32 0
  %7 = bitcast %"class.SkSL::StringStream"* %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 16
  %8 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 1, i32 1
  %9 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #17
  %10 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 11
  %12 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 3
  %13 = bitcast %"class.SkSL::OutputStream"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i32* %11, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %1
  %17 = load i32, i32* %11, align 4
  br label %18

18:                                               ; preds = %1, %16
  %19 = phi i32 [ %17, %16 ], [ 0, %1 ]
  store %"class.SkSL::OutputStream"* %10, %"class.SkSL::OutputStream"** %12, align 8
  store i32 0, i32* %11, align 4
  %20 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 12
  %21 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 1, i32 0
  %22 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 4) to i1 (%class.SkWStream*, i8*, i64)**), align 8
  %23 = call zeroext i1 %22(%class.SkWStream* %21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.222, i64 0, i64 0), i64 24) #17
  store i8 0, i8* %20, align 8
  %24 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %12, align 8
  %25 = bitcast %"class.SkSL::OutputStream"* %24 to void (%"class.SkSL::OutputStream"*, i8*)***
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, i64 2
  %28 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %27, align 8
  call void %28(%"class.SkSL::OutputStream"* %24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.223, i64 0, i64 0)) #17
  store i8 0, i8* %20, align 8
  %29 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %12, align 8
  %30 = bitcast %"class.SkSL::OutputStream"* %29 to void (%"class.SkSL::OutputStream"*, i8*)***
  %31 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %31, i64 2
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %32, align 8
  call void %33(%"class.SkSL::OutputStream"* %29, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.224, i64 0, i64 0)) #17
  store i8 0, i8* %20, align 8
  %34 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 1
  %35 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %34, align 8
  %36 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %35, i64 0, i32 6
  %37 = bitcast %"class.std::__1::vector.62"* %36 to i64*
  %38 = load i64, i64* %37, align 8, !noalias !67
  %39 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %35, i64 0, i32 6, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %35, i64 0, i32 7
  %41 = bitcast %"class.std::__1::vector.75"* %40 to i64*
  %42 = load i64, i64* %41, align 8, !noalias !67
  %43 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %35, i64 0, i32 7, i32 0, i32 1
  %44 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %43, align 8, !noalias !67
  %45 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %39, align 8, !noalias !70
  %46 = inttoptr i64 %38 to %"class.std::__1::unique_ptr.64"*
  %47 = icmp eq %"class.std::__1::unique_ptr.64"* %45, %46
  %48 = inttoptr i64 %42 to %"class.SkSL::ProgramElement"**
  %49 = icmp eq %"class.SkSL::ProgramElement"** %44, %48
  %50 = and i1 %49, %47
  br i1 %50, label %77, label %51

51:                                               ; preds = %18, %65
  %52 = phi i1 [ %75, %65 ], [ %49, %18 ]
  %53 = phi %"class.SkSL::ProgramElement"** [ %74, %65 ], [ %48, %18 ]
  %54 = phi %"class.std::__1::unique_ptr.64"* [ %72, %65 ], [ %46, %18 ]
  %55 = phi i64 [ %71, %65 ], [ %42, %18 ]
  %56 = phi i64 [ %70, %65 ], [ %38, %18 ]
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %54, i64 0, i32 0, i32 0, i32 0
  %58 = select i1 %52, %"class.SkSL::ProgramElement"** %57, %"class.SkSL::ProgramElement"** %53
  %59 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %58, align 8
  %60 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %59, i64 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 8
  br i1 %62, label %63, label %65

63:                                               ; preds = %51
  %64 = bitcast %"class.SkSL::ProgramElement"* %59 to %"class.SkSL::StructDefinition"*
  call void @_ZN4SkSL18MetalCodeGenerator21writeStructDefinitionERKNS_16StructDefinitionE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::StructDefinition"* dereferenceable(24) %64) #17
  br label %65

65:                                               ; preds = %63, %51
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %54, i64 1
  %67 = ptrtoint %"class.std::__1::unique_ptr.64"* %66 to i64
  %68 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %53, i64 1
  %69 = ptrtoint %"class.SkSL::ProgramElement"** %68 to i64
  %70 = select i1 %52, i64 %67, i64 %56
  %71 = select i1 %52, i64 %55, i64 %69
  %72 = inttoptr i64 %70 to %"class.std::__1::unique_ptr.64"*
  %73 = icmp eq %"class.std::__1::unique_ptr.64"* %45, %72
  %74 = inttoptr i64 %71 to %"class.SkSL::ProgramElement"**
  %75 = icmp eq %"class.SkSL::ProgramElement"** %44, %74
  %76 = and i1 %75, %73
  br i1 %76, label %77, label %51

77:                                               ; preds = %65, %18
  call void @_ZN4SkSL18MetalCodeGenerator18writeUniformStructEv(%"class.SkSL::MetalCodeGenerator"* %0)
  call void @_ZN4SkSL18MetalCodeGenerator16writeInputStructEv(%"class.SkSL::MetalCodeGenerator"* %0)
  call void @_ZN4SkSL18MetalCodeGenerator17writeOutputStructEv(%"class.SkSL::MetalCodeGenerator"* %0)
  call void @_ZN4SkSL18MetalCodeGenerator20writeInterfaceBlocksEv(%"class.SkSL::MetalCodeGenerator"* %0)
  %78 = bitcast %class.anon.345* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #17
  %79 = getelementptr inbounds %class.anon.345, %class.anon.345* %2, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %class.anon.345, %class.anon.345* %2, i64 0, i32 1
  %81 = getelementptr inbounds %class.anon.345, %class.anon.345* %2, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 24, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @"_ZTVZN4SkSL18MetalCodeGenerator17writeGlobalStructEvE3$_0", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  store i8 1, i8* %81, align 8
  store %"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::MetalCodeGenerator"** %80, align 8
  %82 = getelementptr inbounds %class.anon.345, %class.anon.345* %2, i64 0, i32 0
  call void @_ZN4SkSL18MetalCodeGenerator17visitGlobalStructEPNS0_19GlobalStructVisitorE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::MetalCodeGenerator::GlobalStructVisitor"* nonnull %82) #17
  %83 = load i8, i8* %81, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %120

85:                                               ; preds = %77
  %86 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %80, align 8
  %87 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %86, i64 0, i32 12
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %106, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %86, i64 0, i32 11
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %86, i64 0, i32 0, i32 3
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i32 [ 0, %94 ], [ %103, %96 ]
  %98 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %95, align 8
  %99 = bitcast %"class.SkSL::OutputStream"* %98 to void (%"class.SkSL::OutputStream"*, i8*)***
  %100 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %100, i64 2
  %102 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %101, align 8
  call void %102(%"class.SkSL::OutputStream"* %98, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %103 = add nuw nsw i32 %97, 1
  %104 = load i32, i32* %91, align 4
  %105 = icmp slt i32 %103, %104
  br i1 %105, label %96, label %106

106:                                              ; preds = %96, %90, %85
  %107 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %86, i64 0, i32 0, i32 3
  %108 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %107, align 8
  %109 = bitcast %"class.SkSL::OutputStream"* %108 to void (%"class.SkSL::OutputStream"*, i8*)***
  %110 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %110, i64 2
  %112 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %111, align 8
  call void %112(%"class.SkSL::OutputStream"* %108, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #17
  store i8 0, i8* %87, align 8
  %113 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %107, align 8
  %114 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %86, i64 0, i32 6
  %115 = load i8*, i8** %114, align 8
  %116 = bitcast %"class.SkSL::OutputStream"* %113 to void (%"class.SkSL::OutputStream"*, i8*)***
  %117 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %117, i64 2
  %119 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %118, align 8
  call void %119(%"class.SkSL::OutputStream"* %113, i8* %115) #17
  store i8 1, i8* %87, align 8
  store i8 1, i8* %81, align 8
  br label %120

120:                                              ; preds = %77, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #17
  store i64 %14, i64* %13, align 8
  br i1 %15, label %122, label %121

121:                                              ; preds = %120
  store i32 %19, i32* %11, align 4
  br label %122

122:                                              ; preds = %120, %121
  %123 = bitcast %"class.SkSL::StringStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %123) #17
  %124 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 0, i32 0
  %125 = bitcast %"class.SkSL::StringStream"* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %125, align 16
  %126 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 1, i32 1
  %127 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %126 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 48, i1 false) #17
  %128 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 0
  br i1 %15, label %131, label %129

129:                                              ; preds = %122
  %130 = load i32, i32* %11, align 4
  br label %131

131:                                              ; preds = %122, %129
  %132 = phi i32 [ %130, %129 ], [ 0, %122 ]
  store %"class.SkSL::OutputStream"* %128, %"class.SkSL::OutputStream"** %12, align 8
  store i32 0, i32* %11, align 4
  %133 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %34, align 8
  %134 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %133, i64 0, i32 6
  %135 = bitcast %"class.std::__1::vector.62"* %134 to i64*
  %136 = load i64, i64* %135, align 8, !noalias !73
  %137 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %133, i64 0, i32 6, i32 0, i32 1
  %138 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %133, i64 0, i32 7
  %139 = bitcast %"class.std::__1::vector.75"* %138 to i64*
  %140 = load i64, i64* %139, align 8, !noalias !73
  %141 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %133, i64 0, i32 7, i32 0, i32 1
  %142 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %141, align 8, !noalias !73
  %143 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %137, align 8, !noalias !76
  %144 = inttoptr i64 %136 to %"class.std::__1::unique_ptr.64"*
  %145 = icmp eq %"class.std::__1::unique_ptr.64"* %143, %144
  %146 = inttoptr i64 %140 to %"class.SkSL::ProgramElement"**
  %147 = icmp eq %"class.SkSL::ProgramElement"** %142, %146
  %148 = and i1 %147, %145
  br i1 %148, label %149, label %184

149:                                              ; preds = %199, %131
  store i64 %14, i64* %13, align 8
  %150 = inttoptr i64 %14 to %"class.SkSL::OutputStream"*
  br i1 %15, label %152, label %151

151:                                              ; preds = %149
  store i32 %132, i32* %11, align 4
  br label %152

152:                                              ; preds = %149, %151
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* nonnull dereferenceable(64) %3, %"class.SkSL::OutputStream"* dereferenceable(8) %150) #17
  %153 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9
  %154 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %12, align 8
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64) %153, %"class.SkSL::OutputStream"* dereferenceable(8) %154) #17
  %155 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %12, align 8
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* nonnull dereferenceable(64) %4, %"class.SkSL::OutputStream"* dereferenceable(8) %155) #17
  %156 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 2
  %157 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %156, align 8
  %158 = bitcast %"class.SkSL::ErrorReporter"* %157 to i32 (%"class.SkSL::ErrorReporter"*)***
  %159 = load i32 (%"class.SkSL::ErrorReporter"*)**, i32 (%"class.SkSL::ErrorReporter"*)*** %158, align 8
  %160 = getelementptr inbounds i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %159, i64 3
  %161 = load i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %160, align 8
  %162 = call i32 %161(%"class.SkSL::ErrorReporter"* %157) #17
  %163 = icmp eq i32 %162, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %124, align 16
  %164 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 2, i32 0
  %165 = bitcast %"class.std::__1::basic_string"* %164 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %172

169:                                              ; preds = %152
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  call void @_ZdlPv(i8* %171) #18
  br label %172

172:                                              ; preds = %152, %169
  %173 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %4, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %173) #17
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %123) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 16
  %174 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 2, i32 0
  %175 = bitcast %"class.std::__1::basic_string"* %174 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load i8*, i8** %180, align 8
  call void @_ZdlPv(i8* %181) #18
  br label %182

182:                                              ; preds = %172, %179
  %183 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %3, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %183) #17
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #17
  ret i1 %163

184:                                              ; preds = %131, %199
  %185 = phi i1 [ %205, %199 ], [ %147, %131 ]
  %186 = phi %"class.SkSL::ProgramElement"** [ %204, %199 ], [ %146, %131 ]
  %187 = phi %"class.std::__1::unique_ptr.64"* [ %202, %199 ], [ %144, %131 ]
  %188 = phi i64 [ %201, %199 ], [ %136, %131 ]
  %189 = phi i64 [ %200, %199 ], [ %140, %131 ]
  br i1 %185, label %194, label %190

190:                                              ; preds = %184
  %191 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %186, align 8
  call void @_ZN4SkSL18MetalCodeGenerator19writeProgramElementERKNS_14ProgramElementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::ProgramElement"* dereferenceable(16) %191)
  %192 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %186, i64 1
  %193 = ptrtoint %"class.SkSL::ProgramElement"** %192 to i64
  br label %199

194:                                              ; preds = %184
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %187, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %195, align 8
  call void @_ZN4SkSL18MetalCodeGenerator19writeProgramElementERKNS_14ProgramElementE(%"class.SkSL::MetalCodeGenerator"* %0, %"class.SkSL::ProgramElement"* dereferenceable(16) %196)
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %187, i64 1
  %198 = ptrtoint %"class.std::__1::unique_ptr.64"* %197 to i64
  br label %199

199:                                              ; preds = %190, %194
  %200 = phi i64 [ %189, %194 ], [ %193, %190 ]
  %201 = phi i64 [ %198, %194 ], [ %188, %190 ]
  %202 = inttoptr i64 %201 to %"class.std::__1::unique_ptr.64"*
  %203 = icmp eq %"class.std::__1::unique_ptr.64"* %143, %202
  %204 = inttoptr i64 %200 to %"class.SkSL::ProgramElement"**
  %205 = icmp eq %"class.SkSL::ProgramElement"** %142, %204
  %206 = and i1 %205, %203
  br i1 %206, label %149, label %184
}

declare void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18MetalCodeGeneratorD2Ev(%"class.SkSL::MetalCodeGenerator"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18MetalCodeGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 24, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 21, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.114"* %13, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %11, %27
  %16 = phi %"struct.std::__1::__hash_node_base.114"* [ %18, %27 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %16, i64 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %16, i64 2
  %20 = bitcast %"struct.std::__1::__hash_node_base.114"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %15
  %25 = bitcast %"struct.std::__1::__hash_node_base.114"* %19 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %24, %15
  %28 = bitcast %"struct.std::__1::__hash_node_base.114"* %16 to i8*
  tail call void @_ZdlPv(i8* %28) #18
  %29 = icmp eq %"struct.std::__1::__hash_node_base.114"* %18, null
  br i1 %29, label %30, label %15

30:                                               ; preds = %27, %11
  %31 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %31, align 8
  store %"struct.std::__1::__hash_node_base.114"** null, %"struct.std::__1::__hash_node_base.114"*** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.114"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast %"struct.std::__1::__hash_node_base.114"** %32 to i8*
  tail call void @_ZdlPv(i8* %35) #18
  br label %36

36:                                               ; preds = %30, %34
  %37 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.198"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %40
  %41 = phi %"struct.std::__1::__hash_node_base.198"* [ %43, %40 ], [ %38, %36 ]
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %41, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %42, align 8
  %44 = bitcast %"struct.std::__1::__hash_node_base.198"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #18
  %45 = icmp eq %"struct.std::__1::__hash_node_base.198"* %43, null
  br i1 %45, label %46, label %40

46:                                               ; preds = %40, %36
  %47 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %47, align 8
  store %"struct.std::__1::__hash_node_base.198"** null, %"struct.std::__1::__hash_node_base.198"*** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.198"** %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = bitcast %"struct.std::__1::__hash_node_base.198"** %48 to i8*
  tail call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %46, %50
  %53 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 14, i32 0
  %54 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_node"**
  %56 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %55, align 8
  tail call void @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %53, %"class.std::__1::__tree_node"* %56) #17
  %57 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 2, i32 0
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %52, %63
  %67 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 9, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %67) #17
  %68 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 8, i32 0
  %69 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  tail call void @_ZdlPv(i8* %75) #18
  br label %76

76:                                               ; preds = %66, %73
  %77 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %77, align 8
  %79 = icmp eq %"struct.std::__1::__hash_node_base.163"* %78, null
  br i1 %79, label %95, label %80

80:                                               ; preds = %76, %92
  %81 = phi %"struct.std::__1::__hash_node_base.163"* [ %83, %92 ], [ %78, %76 ]
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %81, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %81, i64 3
  %85 = bitcast %"struct.std::__1::__hash_node_base.163"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %80
  %90 = bitcast %"struct.std::__1::__hash_node_base.163"* %84 to i8**
  %91 = load i8*, i8** %90, align 8
  tail call void @_ZdlPv(i8* %91) #18
  br label %92

92:                                               ; preds = %89, %80
  %93 = bitcast %"struct.std::__1::__hash_node_base.163"* %81 to i8*
  tail call void @_ZdlPv(i8* %93) #18
  %94 = icmp eq %"struct.std::__1::__hash_node_base.163"* %83, null
  br i1 %94, label %95, label %80

95:                                               ; preds = %92, %76
  %96 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %96, align 8
  store %"struct.std::__1::__hash_node_base.163"** null, %"struct.std::__1::__hash_node_base.163"*** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base.163"** %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = bitcast %"struct.std::__1::__hash_node_base.163"** %97 to i8*
  tail call void @_ZdlPv(i8* %100) #18
  br label %101

101:                                              ; preds = %95, %99
  %102 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %102, align 8
  %104 = icmp eq %"struct.std::__1::__hash_node_base.138"* %103, null
  br i1 %104, label %111, label %105

105:                                              ; preds = %101, %105
  %106 = phi %"struct.std::__1::__hash_node_base.138"* [ %108, %105 ], [ %103, %101 ]
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %106, i64 0, i32 0
  %108 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %107, align 8
  %109 = bitcast %"struct.std::__1::__hash_node_base.138"* %106 to i8*
  tail call void @_ZdlPv(i8* %109) #18
  %110 = icmp eq %"struct.std::__1::__hash_node_base.138"* %108, null
  br i1 %110, label %111, label %105

111:                                              ; preds = %105, %101
  %112 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %112, align 8
  store %"struct.std::__1::__hash_node_base.138"** null, %"struct.std::__1::__hash_node_base.138"*** %112, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base.138"** %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %111
  %116 = bitcast %"struct.std::__1::__hash_node_base.138"** %113 to i8*
  tail call void @_ZdlPv(i8* %116) #18
  br label %117

117:                                              ; preds = %111, %115
  %118 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.114"* %119, null
  br i1 %120, label %136, label %121

121:                                              ; preds = %117, %133
  %122 = phi %"struct.std::__1::__hash_node_base.114"* [ %124, %133 ], [ %119, %117 ]
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %122, i64 0, i32 0
  %124 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %122, i64 2
  %126 = bitcast %"struct.std::__1::__hash_node_base.114"* %125 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %121
  %131 = bitcast %"struct.std::__1::__hash_node_base.114"* %125 to i8**
  %132 = load i8*, i8** %131, align 8
  tail call void @_ZdlPv(i8* %132) #18
  br label %133

133:                                              ; preds = %130, %121
  %134 = bitcast %"struct.std::__1::__hash_node_base.114"* %122 to i8*
  tail call void @_ZdlPv(i8* %134) #18
  %135 = icmp eq %"struct.std::__1::__hash_node_base.114"* %124, null
  br i1 %135, label %136, label %121

136:                                              ; preds = %133, %117
  %137 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %137, align 8
  store %"struct.std::__1::__hash_node_base.114"** null, %"struct.std::__1::__hash_node_base.114"*** %137, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base.114"** %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %136
  %141 = bitcast %"struct.std::__1::__hash_node_base.114"** %138 to i8*
  tail call void @_ZdlPv(i8* %141) #18
  br label %142

142:                                              ; preds = %136, %140
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18MetalCodeGeneratorD0Ev(%"class.SkSL::MetalCodeGenerator"*) unnamed_addr #8 comdat align 2 {
  tail call void @_ZN4SkSL18MetalCodeGeneratorD2Ev(%"class.SkSL::MetalCodeGenerator"* %0) #17
  %2 = bitcast %"class.SkSL::MetalCodeGenerator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL12OutputStream7isValidEv(%"class.SkSL::OutputStream"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream6write8Eh(%"class.SkSL::StringStream"*, i8 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 %1, i8* %3, align 1
  %5 = bitcast %class.SkWStream* %4 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = call zeroext i1 %8(%class.SkWStream* %4, i8* nonnull %3, i64 1) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream5writeEPKvm(%"class.SkSL::StringStream"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %4, i8* %1, i64 %2) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStreamD0Ev(%"class.SkSL::StringStream"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %12) #17
  %13 = bitcast %"class.SkSL::StringStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #18
  ret void
}

declare zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream*, i8*, i64) unnamed_addr #1

declare void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp* sret, %class.SkDynamicMemoryWStream*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream*) unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4SkSL12MemoryLayout6strideERKNS_4TypeE(%"class.SkSL::MemoryLayout"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %52 [
    i32 4, label %5
    i32 0, label %23
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %7 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %6, align 8
  %8 = icmp eq %"class.SkSL::Type"* %7, null
  %9 = select i1 %8, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %7
  %10 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %9)
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 9
  %12 = load i32, i32* %11, align 4
  %13 = srem i32 %12, 2
  %14 = add nsw i32 %13, %12
  %15 = sext i32 %14 to i64
  %16 = mul i64 %10, %15
  %17 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %22 [
    i32 0, label %19
    i32 1, label %53
    i32 2, label %53
  ]

19:                                               ; preds = %5
  %20 = add i64 %16, 15
  %21 = and i64 %20, -16
  br label %53

22:                                               ; preds = %5
  tail call void @llvm.trap() #17
  unreachable

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %25 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %24, align 8
  %26 = icmp eq %"class.SkSL::Type"* %25, null
  %27 = select i1 %26, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %25
  %28 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %27)
  %29 = trunc i64 %28 to i32
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %48

31:                                               ; preds = %23
  %32 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %24, align 8
  %33 = icmp eq %"class.SkSL::Type"* %32, null
  %34 = select i1 %33, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %32
  %35 = tail call i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %34)
  %36 = trunc i64 %35 to i32
  %37 = add nsw i32 %29, -1
  %38 = add i32 %37, %36
  %39 = srem i32 %38, %36
  %40 = sub nsw i32 %38, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %0, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  switch i32 %43, label %47 [
    i32 0, label %44
    i32 1, label %48
    i32 2, label %48
  ]

44:                                               ; preds = %31
  %45 = add nsw i64 %41, 15
  %46 = and i64 %45, -16
  br label %48

47:                                               ; preds = %31
  tail call void @llvm.trap() #17
  unreachable

48:                                               ; preds = %44, %31, %31, %23
  %49 = phi i64 [ %28, %23 ], [ %46, %44 ], [ %41, %31 ], [ %41, %31 ]
  %50 = shl i64 %49, 32
  %51 = ashr exact i64 %50, 32
  br label %53

52:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.243, i64 0, i64 0), i32 98, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.245, i64 0, i64 0)) #19
  unreachable

53:                                               ; preds = %19, %5, %5, %48
  %54 = phi i64 [ %51, %48 ], [ %21, %19 ], [ %16, %5 ], [ %16, %5 ]
  ret i64 %54
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN4SkSL18MetalCodeGenerator17writeGlobalStructEvEN3$_0D0Ev"(%class.anon.345*) unnamed_addr #8 align 2 {
  %2 = bitcast %class.anon.345* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN4SkSL18MetalCodeGenerator17writeGlobalStructEvEN3$_019visitInterfaceBlockERKNS_14InterfaceBlockERKNS_6StringE"(%class.anon.345* nocapture, %"class.SkSL::InterfaceBlock"* dereferenceable(96), %"class.SkSL::String"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.anon.345, %class.anon.345* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %36, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.anon.345, %class.anon.345* %0, i64 0, i32 1
  %9 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %9, i64 0, i32 12
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %9, i64 0, i32 11
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %9, i64 0, i32 0, i32 3
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i32 [ 0, %17 ], [ %26, %19 ]
  %21 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %18, align 8
  %22 = bitcast %"class.SkSL::OutputStream"* %21 to void (%"class.SkSL::OutputStream"*, i8*)***
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %23, i64 2
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, align 8
  tail call void %25(%"class.SkSL::OutputStream"* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %26 = add nuw nsw i32 %20, 1
  %27 = load i32, i32* %14, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %19, label %29

29:                                               ; preds = %19, %13, %7
  %30 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %9, i64 0, i32 0, i32 3
  %31 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %32 = bitcast %"class.SkSL::OutputStream"* %31 to void (%"class.SkSL::OutputStream"*, i8*)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::OutputStream"* %31, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.248, i64 0, i64 0)) #17
  store i8 0, i8* %10, align 8
  store i8 0, i8* %4, align 8
  br label %36

36:                                               ; preds = %3, %29
  %37 = getelementptr inbounds %class.anon.345, %class.anon.345* %0, i64 0, i32 1
  %38 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %37, align 8
  %39 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %38, i64 0, i32 12
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %38, i64 0, i32 11
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %38, i64 0, i32 0, i32 3
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i32 [ 0, %46 ], [ %55, %48 ]
  %50 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %47, align 8
  %51 = bitcast %"class.SkSL::OutputStream"* %50 to void (%"class.SkSL::OutputStream"*, i8*)***
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %52, i64 2
  %54 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, align 8
  tail call void %54(%"class.SkSL::OutputStream"* %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %55 = add nuw nsw i32 %49, 1
  %56 = load i32, i32* %43, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %48, label %58

58:                                               ; preds = %48, %36, %42
  %59 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %38, i64 0, i32 0, i32 3
  %60 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %59, align 8
  %61 = bitcast %"class.SkSL::OutputStream"* %60 to void (%"class.SkSL::OutputStream"*, i8*)***
  %62 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %62, i64 2
  %64 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, align 8
  tail call void %64(%"class.SkSL::OutputStream"* %60, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.246, i64 0, i64 0)) #17
  store i8 0, i8* %39, align 8
  %65 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %37, align 8
  %66 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 2
  %67 = bitcast %"class.SkSL::String"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = bitcast %"class.SkSL::String"* %66 to i8*
  %74 = select i1 %70, i8* %72, i8* %73
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %105, label %77

77:                                               ; preds = %58
  %78 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %65, i64 0, i32 12
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %97, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %65, i64 0, i32 11
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %65, i64 0, i32 0, i32 3
  br label %87

87:                                               ; preds = %87, %85
  %88 = phi i32 [ 0, %85 ], [ %94, %87 ]
  %89 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %90 = bitcast %"class.SkSL::OutputStream"* %89 to void (%"class.SkSL::OutputStream"*, i8*)***
  %91 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %91, i64 2
  %93 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %92, align 8
  tail call void %93(%"class.SkSL::OutputStream"* %89, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %94 = add nuw nsw i32 %88, 1
  %95 = load i32, i32* %82, align 4
  %96 = icmp slt i32 %94, %95
  br i1 %96, label %87, label %97

97:                                               ; preds = %87, %81, %77
  %98 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %65, i64 0, i32 0, i32 3
  %99 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %98, align 8
  %100 = bitcast %"class.SkSL::OutputStream"* %99 to void (%"class.SkSL::OutputStream"*, i8*)***
  %101 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %101, i64 2
  %103 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %102, align 8
  tail call void %103(%"class.SkSL::OutputStream"* %99, i8* %74) #17
  store i8 0, i8* %78, align 8
  %104 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %37, align 8
  br label %105

105:                                              ; preds = %58, %97
  %106 = phi %"class.SkSL::MetalCodeGenerator"* [ %65, %58 ], [ %104, %97 ]
  %107 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %106, i64 0, i32 12
  %108 = load i8, i8* %107, align 8, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %126, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %106, i64 0, i32 11
  %112 = load i32, i32* %111, align 4
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %126

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %106, i64 0, i32 0, i32 3
  br label %116

116:                                              ; preds = %116, %114
  %117 = phi i32 [ 0, %114 ], [ %123, %116 ]
  %118 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %115, align 8
  %119 = bitcast %"class.SkSL::OutputStream"* %118 to void (%"class.SkSL::OutputStream"*, i8*)***
  %120 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %120, i64 2
  %122 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %121, align 8
  tail call void %122(%"class.SkSL::OutputStream"* %118, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %123 = add nuw nsw i32 %117, 1
  %124 = load i32, i32* %111, align 4
  %125 = icmp slt i32 %123, %124
  br i1 %125, label %116, label %126

126:                                              ; preds = %116, %105, %110
  %127 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %106, i64 0, i32 0, i32 3
  %128 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %127, align 8
  %129 = bitcast %"class.SkSL::OutputStream"* %128 to void (%"class.SkSL::OutputStream"*, i8*)***
  %130 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %130, i64 2
  %132 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %131, align 8
  tail call void %132(%"class.SkSL::OutputStream"* %128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.247, i64 0, i64 0)) #17
  store i8 0, i8* %107, align 8
  %133 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %37, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %133, %"class.SkSL::String"* dereferenceable(24) %2)
  %134 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %37, align 8
  %135 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %134, i64 0, i32 12
  %136 = load i8, i8* %135, align 8, !range !2
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %154, label %138

138:                                              ; preds = %126
  %139 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %134, i64 0, i32 11
  %140 = load i32, i32* %139, align 4
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %142, label %154

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %134, i64 0, i32 0, i32 3
  br label %144

144:                                              ; preds = %144, %142
  %145 = phi i32 [ 0, %142 ], [ %151, %144 ]
  %146 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %143, align 8
  %147 = bitcast %"class.SkSL::OutputStream"* %146 to void (%"class.SkSL::OutputStream"*, i8*)***
  %148 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %148, i64 2
  %150 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %149, align 8
  tail call void %150(%"class.SkSL::OutputStream"* %146, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %151 = add nuw nsw i32 %145, 1
  %152 = load i32, i32* %139, align 4
  %153 = icmp slt i32 %151, %152
  br i1 %153, label %144, label %154

154:                                              ; preds = %144, %126, %138
  %155 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %134, i64 0, i32 0, i32 3
  %156 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %155, align 8
  %157 = bitcast %"class.SkSL::OutputStream"* %156 to void (%"class.SkSL::OutputStream"*, i8*)***
  %158 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %158, i64 2
  %160 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %159, align 8
  tail call void %160(%"class.SkSL::OutputStream"* %156, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #17
  store i8 0, i8* %135, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN4SkSL18MetalCodeGenerator17writeGlobalStructEvEN3$_012visitTextureERKNS_4TypeERKNS_6StringE"(%class.anon.345* nocapture, %"class.SkSL::Type"* readonly dereferenceable(184), %"class.SkSL::String"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %class.anon.345, %class.anon.345* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.anon.345, %class.anon.345* %0, i64 0, i32 1
  %10 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %10, i64 0, i32 12
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %10, i64 0, i32 11
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %10, i64 0, i32 0, i32 3
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i32 [ 0, %18 ], [ %27, %20 ]
  %22 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %19, align 8
  %23 = bitcast %"class.SkSL::OutputStream"* %22 to void (%"class.SkSL::OutputStream"*, i8*)***
  %24 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, i64 2
  %26 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %25, align 8
  tail call void %26(%"class.SkSL::OutputStream"* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %27 = add nuw nsw i32 %21, 1
  %28 = load i32, i32* %15, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %20, label %30

30:                                               ; preds = %20, %14, %8
  %31 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %10, i64 0, i32 0, i32 3
  %32 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %31, align 8
  %33 = bitcast %"class.SkSL::OutputStream"* %32 to void (%"class.SkSL::OutputStream"*, i8*)***
  %34 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, i64 2
  %36 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, align 8
  tail call void %36(%"class.SkSL::OutputStream"* %32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.248, i64 0, i64 0)) #17
  store i8 0, i8* %11, align 8
  store i8 0, i8* %5, align 8
  br label %37

37:                                               ; preds = %3, %30
  %38 = getelementptr inbounds %class.anon.345, %class.anon.345* %0, i64 0, i32 1
  %39 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %38, align 8
  %40 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %39, i64 0, i32 12
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %59, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %39, i64 0, i32 11
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %39, i64 0, i32 0, i32 3
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i32 [ 0, %47 ], [ %56, %49 ]
  %51 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %48, align 8
  %52 = bitcast %"class.SkSL::OutputStream"* %51 to void (%"class.SkSL::OutputStream"*, i8*)***
  %53 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, i64 2
  %55 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %54, align 8
  tail call void %55(%"class.SkSL::OutputStream"* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %56 = add nuw nsw i32 %50, 1
  %57 = load i32, i32* %44, align 4
  %58 = icmp slt i32 %56, %57
  br i1 %58, label %49, label %59

59:                                               ; preds = %49, %37, %43
  %60 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %39, i64 0, i32 0, i32 3
  %61 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %60, align 8
  %62 = bitcast %"class.SkSL::OutputStream"* %61 to void (%"class.SkSL::OutputStream"*, i8*)***
  %63 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, i64 2
  %65 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %64, align 8
  tail call void %65(%"class.SkSL::OutputStream"* %61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  store i8 0, i8* %40, align 8
  %66 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %38, align 8
  %67 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::MetalCodeGenerator"* %66, %"class.SkSL::Type"* dereferenceable(184) %1) #17
  %68 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = select i1 %71, i8* %73, i8* %67
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %105, label %77

77:                                               ; preds = %59
  %78 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %66, i64 0, i32 12
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %97, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %66, i64 0, i32 11
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %66, i64 0, i32 0, i32 3
  br label %87

87:                                               ; preds = %87, %85
  %88 = phi i32 [ 0, %85 ], [ %94, %87 ]
  %89 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %90 = bitcast %"class.SkSL::OutputStream"* %89 to void (%"class.SkSL::OutputStream"*, i8*)***
  %91 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %91, i64 2
  %93 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %92, align 8
  call void %93(%"class.SkSL::OutputStream"* %89, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %94 = add nuw nsw i32 %88, 1
  %95 = load i32, i32* %82, align 4
  %96 = icmp slt i32 %94, %95
  br i1 %96, label %87, label %97

97:                                               ; preds = %87, %81, %77
  %98 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %66, i64 0, i32 0, i32 3
  %99 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %98, align 8
  %100 = bitcast %"class.SkSL::OutputStream"* %99 to void (%"class.SkSL::OutputStream"*, i8*)***
  %101 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %101, i64 2
  %103 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %102, align 8
  call void %103(%"class.SkSL::OutputStream"* %99, i8* %74) #17
  store i8 0, i8* %78, align 8
  %104 = load i8, i8* %69, align 1
  br label %105

105:                                              ; preds = %97, %59
  %106 = phi i8 [ %70, %59 ], [ %104, %97 ]
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %105
  %109 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %109) #18
  br label %110

110:                                              ; preds = %105, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #17
  %111 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %38, align 8
  %112 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %111, i64 0, i32 12
  %113 = load i8, i8* %112, align 8, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %111, i64 0, i32 11
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %111, i64 0, i32 0, i32 3
  br label %121

121:                                              ; preds = %121, %119
  %122 = phi i32 [ 0, %119 ], [ %128, %121 ]
  %123 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %120, align 8
  %124 = bitcast %"class.SkSL::OutputStream"* %123 to void (%"class.SkSL::OutputStream"*, i8*)***
  %125 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %125, i64 2
  %127 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %126, align 8
  call void %127(%"class.SkSL::OutputStream"* %123, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %128 = add nuw nsw i32 %122, 1
  %129 = load i32, i32* %116, align 4
  %130 = icmp slt i32 %128, %129
  br i1 %130, label %121, label %131

131:                                              ; preds = %121, %110, %115
  %132 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %111, i64 0, i32 0, i32 3
  %133 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %132, align 8
  %134 = bitcast %"class.SkSL::OutputStream"* %133 to void (%"class.SkSL::OutputStream"*, i8*)***
  %135 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %135, i64 2
  %137 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %136, align 8
  call void %137(%"class.SkSL::OutputStream"* %133, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %112, align 8
  %138 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %38, align 8
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %138, %"class.SkSL::String"* dereferenceable(24) %2)
  %139 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %38, align 8
  %140 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %139, i64 0, i32 12
  %141 = load i8, i8* %140, align 8, !range !2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %131
  %144 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %139, i64 0, i32 11
  %145 = load i32, i32* %144, align 4
  %146 = icmp sgt i32 %145, 0
  br i1 %146, label %147, label %159

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %139, i64 0, i32 0, i32 3
  br label %149

149:                                              ; preds = %149, %147
  %150 = phi i32 [ 0, %147 ], [ %156, %149 ]
  %151 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %148, align 8
  %152 = bitcast %"class.SkSL::OutputStream"* %151 to void (%"class.SkSL::OutputStream"*, i8*)***
  %153 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %153, i64 2
  %155 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %154, align 8
  call void %155(%"class.SkSL::OutputStream"* %151, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %156 = add nuw nsw i32 %150, 1
  %157 = load i32, i32* %144, align 4
  %158 = icmp slt i32 %156, %157
  br i1 %158, label %149, label %159

159:                                              ; preds = %149, %131, %143
  %160 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %139, i64 0, i32 0, i32 3
  %161 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %160, align 8
  %162 = bitcast %"class.SkSL::OutputStream"* %161 to void (%"class.SkSL::OutputStream"*, i8*)***
  %163 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %162, align 8
  %164 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %163, i64 2
  %165 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %164, align 8
  call void %165(%"class.SkSL::OutputStream"* %161, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #17
  store i8 0, i8* %140, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN4SkSL18MetalCodeGenerator17writeGlobalStructEvEN3$_012visitSamplerERKNS_4TypeERKNS_6StringE"(%class.anon.345* nocapture, %"class.SkSL::Type"* nocapture readnone dereferenceable(184), %"class.SkSL::String"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.anon.345, %class.anon.345* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %36, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.anon.345, %class.anon.345* %0, i64 0, i32 1
  %9 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %9, i64 0, i32 12
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %9, i64 0, i32 11
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %9, i64 0, i32 0, i32 3
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i32 [ 0, %17 ], [ %26, %19 ]
  %21 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %18, align 8
  %22 = bitcast %"class.SkSL::OutputStream"* %21 to void (%"class.SkSL::OutputStream"*, i8*)***
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %23, i64 2
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, align 8
  tail call void %25(%"class.SkSL::OutputStream"* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %26 = add nuw nsw i32 %20, 1
  %27 = load i32, i32* %14, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %19, label %29

29:                                               ; preds = %19, %13, %7
  %30 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %9, i64 0, i32 0, i32 3
  %31 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %32 = bitcast %"class.SkSL::OutputStream"* %31 to void (%"class.SkSL::OutputStream"*, i8*)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::OutputStream"* %31, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.248, i64 0, i64 0)) #17
  store i8 0, i8* %10, align 8
  store i8 0, i8* %4, align 8
  br label %36

36:                                               ; preds = %3, %29
  %37 = getelementptr inbounds %class.anon.345, %class.anon.345* %0, i64 0, i32 1
  %38 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %37, align 8
  %39 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %38, i64 0, i32 12
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %38, i64 0, i32 11
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %38, i64 0, i32 0, i32 3
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i32 [ 0, %46 ], [ %55, %48 ]
  %50 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %47, align 8
  %51 = bitcast %"class.SkSL::OutputStream"* %50 to void (%"class.SkSL::OutputStream"*, i8*)***
  %52 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %52, i64 2
  %54 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %53, align 8
  tail call void %54(%"class.SkSL::OutputStream"* %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %55 = add nuw nsw i32 %49, 1
  %56 = load i32, i32* %43, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %48, label %58

58:                                               ; preds = %48, %36, %42
  %59 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %38, i64 0, i32 0, i32 3
  %60 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %59, align 8
  %61 = bitcast %"class.SkSL::OutputStream"* %60 to void (%"class.SkSL::OutputStream"*, i8*)***
  %62 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %62, i64 2
  %64 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %63, align 8
  tail call void %64(%"class.SkSL::OutputStream"* %60, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.249, i64 0, i64 0)) #17
  store i8 0, i8* %39, align 8
  %65 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %37, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %65, %"class.SkSL::String"* dereferenceable(24) %2)
  %66 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %37, align 8
  %67 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %66, i64 0, i32 12
  %68 = load i8, i8* %67, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %66, i64 0, i32 11
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %66, i64 0, i32 0, i32 3
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i32 [ 0, %74 ], [ %83, %76 ]
  %78 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %75, align 8
  %79 = bitcast %"class.SkSL::OutputStream"* %78 to void (%"class.SkSL::OutputStream"*, i8*)***
  %80 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %80, i64 2
  %82 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %81, align 8
  tail call void %82(%"class.SkSL::OutputStream"* %78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %83 = add nuw nsw i32 %77, 1
  %84 = load i32, i32* %71, align 4
  %85 = icmp slt i32 %83, %84
  br i1 %85, label %76, label %86

86:                                               ; preds = %76, %58, %70
  %87 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %66, i64 0, i32 0, i32 3
  %88 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %87, align 8
  %89 = bitcast %"class.SkSL::OutputStream"* %88 to void (%"class.SkSL::OutputStream"*, i8*)***
  %90 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %90, i64 2
  %92 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %91, align 8
  tail call void %92(%"class.SkSL::OutputStream"* %88, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #17
  store i8 0, i8* %67, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN4SkSL18MetalCodeGenerator17writeGlobalStructEvEN3$_013visitVariableERKNS_8VariableEPKNS_10ExpressionE"(%class.anon.345* nocapture, %"class.SkSL::Variable"* nocapture readonly dereferenceable(64), %"class.SkSL::Expression"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %class.anon.345, %class.anon.345* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %38, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.anon.345, %class.anon.345* %0, i64 0, i32 1
  %11 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %11, i64 0, i32 12
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %11, i64 0, i32 11
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %11, i64 0, i32 0, i32 3
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i32 [ 0, %19 ], [ %28, %21 ]
  %23 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %20, align 8
  %24 = bitcast %"class.SkSL::OutputStream"* %23 to void (%"class.SkSL::OutputStream"*, i8*)***
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %25, i64 2
  %27 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %26, align 8
  tail call void %27(%"class.SkSL::OutputStream"* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %28 = add nuw nsw i32 %22, 1
  %29 = load i32, i32* %16, align 4
  %30 = icmp slt i32 %28, %29
  br i1 %30, label %21, label %31

31:                                               ; preds = %21, %15, %9
  %32 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %11, i64 0, i32 0, i32 3
  %33 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %32, align 8
  %34 = bitcast %"class.SkSL::OutputStream"* %33 to void (%"class.SkSL::OutputStream"*, i8*)***
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %35, i64 2
  %37 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %36, align 8
  tail call void %37(%"class.SkSL::OutputStream"* %33, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.248, i64 0, i64 0)) #17
  store i8 0, i8* %12, align 8
  store i8 0, i8* %6, align 8
  br label %38

38:                                               ; preds = %3, %31
  %39 = getelementptr inbounds %class.anon.345, %class.anon.345* %0, i64 0, i32 1
  %40 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %40, i64 0, i32 12
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %40, i64 0, i32 11
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %40, i64 0, i32 0, i32 3
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i32 [ 0, %48 ], [ %57, %50 ]
  %52 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %49, align 8
  %53 = bitcast %"class.SkSL::OutputStream"* %52 to void (%"class.SkSL::OutputStream"*, i8*)***
  %54 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %54, i64 2
  %56 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %55, align 8
  tail call void %56(%"class.SkSL::OutputStream"* %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %57 = add nuw nsw i32 %51, 1
  %58 = load i32, i32* %45, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %50, label %60

60:                                               ; preds = %50, %38, %44
  %61 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %40, i64 0, i32 0, i32 3
  %62 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %61, align 8
  %63 = bitcast %"class.SkSL::OutputStream"* %62 to void (%"class.SkSL::OutputStream"*, i8*)***
  %64 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %64, i64 2
  %66 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %65, align 8
  tail call void %66(%"class.SkSL::OutputStream"* %62, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  store i8 0, i8* %41, align 8
  %67 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %39, align 8
  %68 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 2
  %69 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %68, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator14writeModifiersERKNS_9ModifiersE(%"class.SkSL::MetalCodeGenerator"* %67, %"struct.SkSL::Modifiers"* dereferenceable(80) %69)
  %70 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %39, align 8
  %71 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 2
  %72 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %71, align 8
  %73 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #17
  call void @_ZN4SkSL18MetalCodeGenerator8typeNameERKNS_4TypeE(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::MetalCodeGenerator"* %70, %"class.SkSL::Type"* dereferenceable(184) %72) #17
  %74 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = select i1 %77, i8* %79, i8* %73
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %60
  %84 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %70, i64 0, i32 12
  %85 = load i8, i8* %84, align 8, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %103, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %70, i64 0, i32 11
  %89 = load i32, i32* %88, align 4
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %70, i64 0, i32 0, i32 3
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i32 [ 0, %91 ], [ %100, %93 ]
  %95 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %92, align 8
  %96 = bitcast %"class.SkSL::OutputStream"* %95 to void (%"class.SkSL::OutputStream"*, i8*)***
  %97 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %97, i64 2
  %99 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %98, align 8
  call void %99(%"class.SkSL::OutputStream"* %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %100 = add nuw nsw i32 %94, 1
  %101 = load i32, i32* %88, align 4
  %102 = icmp slt i32 %100, %101
  br i1 %102, label %93, label %103

103:                                              ; preds = %93, %87, %83
  %104 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %70, i64 0, i32 0, i32 3
  %105 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %104, align 8
  %106 = bitcast %"class.SkSL::OutputStream"* %105 to void (%"class.SkSL::OutputStream"*, i8*)***
  %107 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %107, i64 2
  %109 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %108, align 8
  call void %109(%"class.SkSL::OutputStream"* %105, i8* %80) #17
  store i8 0, i8* %84, align 8
  %110 = load i8, i8* %75, align 1
  br label %111

111:                                              ; preds = %103, %60
  %112 = phi i8 [ %76, %60 ], [ %110, %103 ]
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %115) #18
  br label %116

116:                                              ; preds = %111, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #17
  %117 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %39, align 8
  %118 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %117, i64 0, i32 12
  %119 = load i8, i8* %118, align 8, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %117, i64 0, i32 11
  %123 = load i32, i32* %122, align 4
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %125, label %137

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %117, i64 0, i32 0, i32 3
  br label %127

127:                                              ; preds = %127, %125
  %128 = phi i32 [ 0, %125 ], [ %134, %127 ]
  %129 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %126, align 8
  %130 = bitcast %"class.SkSL::OutputStream"* %129 to void (%"class.SkSL::OutputStream"*, i8*)***
  %131 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %131, i64 2
  %133 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %132, align 8
  call void %133(%"class.SkSL::OutputStream"* %129, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %134 = add nuw nsw i32 %128, 1
  %135 = load i32, i32* %122, align 4
  %136 = icmp slt i32 %134, %135
  br i1 %136, label %127, label %137

137:                                              ; preds = %127, %116, %121
  %138 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %117, i64 0, i32 0, i32 3
  %139 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %138, align 8
  %140 = bitcast %"class.SkSL::OutputStream"* %139 to void (%"class.SkSL::OutputStream"*, i8*)***
  %141 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %141, i64 2
  %143 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %142, align 8
  call void %143(%"class.SkSL::OutputStream"* %139, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #17
  store i8 0, i8* %118, align 8
  %144 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %39, align 8
  %145 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #17
  %146 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 1, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 1, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = icmp ugt i64 %149, -17
  br i1 %150, label %151, label %153

151:                                              ; preds = %137
  %152 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %152) #19
  unreachable

153:                                              ; preds = %137
  %154 = icmp ult i64 %149, 23
  br i1 %154, label %164, label %155

155:                                              ; preds = %153
  %156 = add nuw i64 %149, 16
  %157 = and i64 %156, -16
  %158 = call i8* @_Znwm(i64 %157) #18
  %159 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %158, i8** %159, align 8
  %160 = or i64 %157, -9223372036854775808
  %161 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %149, i64* %162, align 8
  %163 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %169

164:                                              ; preds = %153
  %165 = trunc i64 %149 to i8
  %166 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  store i8 %165, i8* %167, align 1
  %168 = icmp eq i64 %149, 0
  br i1 %168, label %172, label %169

169:                                              ; preds = %164, %155
  %170 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %166, %164 ], [ %163, %155 ]
  %171 = phi i8* [ %145, %164 ], [ %158, %155 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %171, i8* align 1 %147, i64 %149, i1 false) #17
  br label %172

172:                                              ; preds = %164, %169
  %173 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %166, %164 ], [ %170, %169 ]
  %174 = phi i8* [ %145, %164 ], [ %171, %169 ]
  %175 = getelementptr inbounds i8, i8* %174, i64 %149
  store i8 0, i8* %175, align 1
  call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %144, %"class.SkSL::String"* nonnull dereferenceable(24) %5)
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load i8*, i8** %180, align 8
  call void @_ZdlPv(i8* %181) #18
  br label %182

182:                                              ; preds = %172, %179
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #17
  %183 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %39, align 8
  %184 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %183, i64 0, i32 12
  %185 = load i8, i8* %184, align 8, !range !2
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %203, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %183, i64 0, i32 11
  %189 = load i32, i32* %188, align 4
  %190 = icmp sgt i32 %189, 0
  br i1 %190, label %191, label %203

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %183, i64 0, i32 0, i32 3
  br label %193

193:                                              ; preds = %193, %191
  %194 = phi i32 [ 0, %191 ], [ %200, %193 ]
  %195 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %192, align 8
  %196 = bitcast %"class.SkSL::OutputStream"* %195 to void (%"class.SkSL::OutputStream"*, i8*)***
  %197 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %197, i64 2
  %199 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %198, align 8
  call void %199(%"class.SkSL::OutputStream"* %195, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %200 = add nuw nsw i32 %194, 1
  %201 = load i32, i32* %188, align 4
  %202 = icmp slt i32 %200, %201
  br i1 %202, label %193, label %203

203:                                              ; preds = %193, %182, %187
  %204 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %183, i64 0, i32 0, i32 3
  %205 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %204, align 8
  %206 = bitcast %"class.SkSL::OutputStream"* %205 to void (%"class.SkSL::OutputStream"*, i8*)***
  %207 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %206, align 8
  %208 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %207, i64 2
  %209 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %208, align 8
  call void %209(%"class.SkSL::OutputStream"* %205, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #17
  store i8 0, i8* %184, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN4SkSL18MetalCodeGenerator15writeGlobalInitEvEN3$_1D0Ev"(%class.anon.346*) unnamed_addr #8 align 2 {
  %2 = bitcast %class.anon.346* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN4SkSL18MetalCodeGenerator15writeGlobalInitEvEN3$_119visitInterfaceBlockERKNS_14InterfaceBlockERKNS_6StringE"(%class.anon.346* nocapture, %"class.SkSL::InterfaceBlock"* nocapture readnone dereferenceable(96), %"class.SkSL::String"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.anon.346, %class.anon.346* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %class.anon.346, %class.anon.346* %0, i64 0, i32 1
  %8 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 12
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %6, label %36, label %12

12:                                               ; preds = %3
  br i1 %11, label %29, label %13

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 11
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i32 [ 0, %17 ], [ %26, %19 ]
  %21 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %18, align 8
  %22 = bitcast %"class.SkSL::OutputStream"* %21 to void (%"class.SkSL::OutputStream"*, i8*)***
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %23, i64 2
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, align 8
  tail call void %25(%"class.SkSL::OutputStream"* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %26 = add nuw nsw i32 %20, 1
  %27 = load i32, i32* %14, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %19, label %29

29:                                               ; preds = %19, %13, %12
  %30 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  %31 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %32 = bitcast %"class.SkSL::OutputStream"* %31 to void (%"class.SkSL::OutputStream"*, i8*)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::OutputStream"* %31, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.250, i64 0, i64 0)) #17
  store i8 0, i8* %9, align 8
  br label %60

36:                                               ; preds = %3
  br i1 %11, label %53, label %37

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 11
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 0, %41 ], [ %50, %43 ]
  %45 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %42, align 8
  %46 = bitcast %"class.SkSL::OutputStream"* %45 to void (%"class.SkSL::OutputStream"*, i8*)***
  %47 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %47, i64 2
  %49 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %48, align 8
  tail call void %49(%"class.SkSL::OutputStream"* %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %50 = add nuw nsw i32 %44, 1
  %51 = load i32, i32* %38, align 4
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %43, label %53

53:                                               ; preds = %43, %36, %37
  %54 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  %55 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %56 = bitcast %"class.SkSL::OutputStream"* %55 to void (%"class.SkSL::OutputStream"*, i8*)***
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %57, i64 2
  %59 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, align 8
  tail call void %59(%"class.SkSL::OutputStream"* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #17
  br label %60

60:                                               ; preds = %29, %53
  %61 = phi i8* [ %4, %29 ], [ %9, %53 ]
  store i8 0, i8* %61, align 8
  %62 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %7, align 8
  %63 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %62, i64 0, i32 12
  %64 = load i8, i8* %63, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %82, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %62, i64 0, i32 11
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %62, i64 0, i32 0, i32 3
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i32 [ 0, %70 ], [ %79, %72 ]
  %74 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %71, align 8
  %75 = bitcast %"class.SkSL::OutputStream"* %74 to void (%"class.SkSL::OutputStream"*, i8*)***
  %76 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %76, i64 2
  %78 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %77, align 8
  tail call void %78(%"class.SkSL::OutputStream"* %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %79 = add nuw nsw i32 %73, 1
  %80 = load i32, i32* %67, align 4
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %72, label %82

82:                                               ; preds = %72, %60, %66
  %83 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %62, i64 0, i32 0, i32 3
  %84 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %83, align 8
  %85 = bitcast %"class.SkSL::OutputStream"* %84 to void (%"class.SkSL::OutputStream"*, i8*)***
  %86 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %86, i64 2
  %88 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %87, align 8
  tail call void %88(%"class.SkSL::OutputStream"* %84, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #17
  store i8 0, i8* %63, align 8
  %89 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %7, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %89, %"class.SkSL::String"* dereferenceable(24) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN4SkSL18MetalCodeGenerator15writeGlobalInitEvEN3$_112visitTextureERKNS_4TypeERKNS_6StringE"(%class.anon.346* nocapture, %"class.SkSL::Type"* nocapture readnone dereferenceable(184), %"class.SkSL::String"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.anon.346, %class.anon.346* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %class.anon.346, %class.anon.346* %0, i64 0, i32 1
  %8 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 12
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %6, label %36, label %12

12:                                               ; preds = %3
  br i1 %11, label %29, label %13

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 11
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i32 [ 0, %17 ], [ %26, %19 ]
  %21 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %18, align 8
  %22 = bitcast %"class.SkSL::OutputStream"* %21 to void (%"class.SkSL::OutputStream"*, i8*)***
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %23, i64 2
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, align 8
  tail call void %25(%"class.SkSL::OutputStream"* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %26 = add nuw nsw i32 %20, 1
  %27 = load i32, i32* %14, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %19, label %29

29:                                               ; preds = %19, %13, %12
  %30 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  %31 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %32 = bitcast %"class.SkSL::OutputStream"* %31 to void (%"class.SkSL::OutputStream"*, i8*)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::OutputStream"* %31, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.250, i64 0, i64 0)) #17
  store i8 0, i8* %9, align 8
  br label %60

36:                                               ; preds = %3
  br i1 %11, label %53, label %37

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 11
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 0, %41 ], [ %50, %43 ]
  %45 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %42, align 8
  %46 = bitcast %"class.SkSL::OutputStream"* %45 to void (%"class.SkSL::OutputStream"*, i8*)***
  %47 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %47, i64 2
  %49 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %48, align 8
  tail call void %49(%"class.SkSL::OutputStream"* %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %50 = add nuw nsw i32 %44, 1
  %51 = load i32, i32* %38, align 4
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %43, label %53

53:                                               ; preds = %43, %36, %37
  %54 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  %55 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %56 = bitcast %"class.SkSL::OutputStream"* %55 to void (%"class.SkSL::OutputStream"*, i8*)***
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %57, i64 2
  %59 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, align 8
  tail call void %59(%"class.SkSL::OutputStream"* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #17
  br label %60

60:                                               ; preds = %29, %53
  %61 = phi i8* [ %4, %29 ], [ %9, %53 ]
  store i8 0, i8* %61, align 8
  %62 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %7, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %62, %"class.SkSL::String"* dereferenceable(24) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN4SkSL18MetalCodeGenerator15writeGlobalInitEvEN3$_112visitSamplerERKNS_4TypeERKNS_6StringE"(%class.anon.346* nocapture, %"class.SkSL::Type"* nocapture readnone dereferenceable(184), %"class.SkSL::String"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.anon.346, %class.anon.346* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %class.anon.346, %class.anon.346* %0, i64 0, i32 1
  %8 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 12
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %6, label %36, label %12

12:                                               ; preds = %3
  br i1 %11, label %29, label %13

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 11
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i32 [ 0, %17 ], [ %26, %19 ]
  %21 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %18, align 8
  %22 = bitcast %"class.SkSL::OutputStream"* %21 to void (%"class.SkSL::OutputStream"*, i8*)***
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %23, i64 2
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, align 8
  tail call void %25(%"class.SkSL::OutputStream"* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %26 = add nuw nsw i32 %20, 1
  %27 = load i32, i32* %14, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %19, label %29

29:                                               ; preds = %19, %13, %12
  %30 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  %31 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %32 = bitcast %"class.SkSL::OutputStream"* %31 to void (%"class.SkSL::OutputStream"*, i8*)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::OutputStream"* %31, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.250, i64 0, i64 0)) #17
  store i8 0, i8* %9, align 8
  br label %60

36:                                               ; preds = %3
  br i1 %11, label %53, label %37

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 11
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 0, %41 ], [ %50, %43 ]
  %45 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %42, align 8
  %46 = bitcast %"class.SkSL::OutputStream"* %45 to void (%"class.SkSL::OutputStream"*, i8*)***
  %47 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %47, i64 2
  %49 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %48, align 8
  tail call void %49(%"class.SkSL::OutputStream"* %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %50 = add nuw nsw i32 %44, 1
  %51 = load i32, i32* %38, align 4
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %43, label %53

53:                                               ; preds = %43, %36, %37
  %54 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  %55 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %56 = bitcast %"class.SkSL::OutputStream"* %55 to void (%"class.SkSL::OutputStream"*, i8*)***
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %57, i64 2
  %59 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, align 8
  tail call void %59(%"class.SkSL::OutputStream"* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #17
  br label %60

60:                                               ; preds = %29, %53
  %61 = phi i8* [ %4, %29 ], [ %9, %53 ]
  store i8 0, i8* %61, align 8
  %62 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %7, align 8
  tail call void @_ZN4SkSL18MetalCodeGenerator9writeNameERKNS_6StringE(%"class.SkSL::MetalCodeGenerator"* %62, %"class.SkSL::String"* dereferenceable(24) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN4SkSL18MetalCodeGenerator15writeGlobalInitEvEN3$_113visitVariableERKNS_8VariableEPKNS_10ExpressionE"(%class.anon.346* nocapture, %"class.SkSL::Variable"* nocapture readnone dereferenceable(64), %"class.SkSL::Expression"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.anon.346, %class.anon.346* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %class.anon.346, %class.anon.346* %0, i64 0, i32 1
  %8 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 12
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %6, label %36, label %12

12:                                               ; preds = %3
  br i1 %11, label %29, label %13

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 11
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i32 [ 0, %17 ], [ %26, %19 ]
  %21 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %18, align 8
  %22 = bitcast %"class.SkSL::OutputStream"* %21 to void (%"class.SkSL::OutputStream"*, i8*)***
  %23 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %23, i64 2
  %25 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %24, align 8
  tail call void %25(%"class.SkSL::OutputStream"* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %26 = add nuw nsw i32 %20, 1
  %27 = load i32, i32* %14, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %19, label %29

29:                                               ; preds = %19, %13, %12
  %30 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  %31 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %30, align 8
  %32 = bitcast %"class.SkSL::OutputStream"* %31 to void (%"class.SkSL::OutputStream"*, i8*)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %33, i64 2
  %35 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %34, align 8
  tail call void %35(%"class.SkSL::OutputStream"* %31, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.250, i64 0, i64 0)) #17
  store i8 0, i8* %9, align 8
  br label %60

36:                                               ; preds = %3
  br i1 %11, label %53, label %37

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 11
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 0, %41 ], [ %50, %43 ]
  %45 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %42, align 8
  %46 = bitcast %"class.SkSL::OutputStream"* %45 to void (%"class.SkSL::OutputStream"*, i8*)***
  %47 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %47, i64 2
  %49 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %48, align 8
  tail call void %49(%"class.SkSL::OutputStream"* %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %50 = add nuw nsw i32 %44, 1
  %51 = load i32, i32* %38, align 4
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %43, label %53

53:                                               ; preds = %43, %36, %37
  %54 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %8, i64 0, i32 0, i32 3
  %55 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %54, align 8
  %56 = bitcast %"class.SkSL::OutputStream"* %55 to void (%"class.SkSL::OutputStream"*, i8*)***
  %57 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %57, i64 2
  %59 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %58, align 8
  tail call void %59(%"class.SkSL::OutputStream"* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #17
  br label %60

60:                                               ; preds = %29, %53
  %61 = phi i8* [ %4, %29 ], [ %9, %53 ]
  store i8 0, i8* %61, align 8
  %62 = icmp eq %"class.SkSL::Expression"* %2, null
  %63 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %7, align 8
  br i1 %62, label %65, label %64

64:                                               ; preds = %60
  tail call void @_ZN4SkSL18MetalCodeGenerator15writeExpressionERKNS_10ExpressionENS_8Operator10PrecedenceE(%"class.SkSL::MetalCodeGenerator"* %63, %"class.SkSL::Expression"* nonnull dereferenceable(24) %2, i32 17) #17
  br label %92

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %63, i64 0, i32 12
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %85, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %63, i64 0, i32 11
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %63, i64 0, i32 0, i32 3
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i32 [ 0, %73 ], [ %82, %75 ]
  %77 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %74, align 8
  %78 = bitcast %"class.SkSL::OutputStream"* %77 to void (%"class.SkSL::OutputStream"*, i8*)***
  %79 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %79, i64 2
  %81 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %80, align 8
  tail call void %81(%"class.SkSL::OutputStream"* %77, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #17
  %82 = add nuw nsw i32 %76, 1
  %83 = load i32, i32* %70, align 4
  %84 = icmp slt i32 %82, %83
  br i1 %84, label %75, label %85

85:                                               ; preds = %75, %65, %69
  %86 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %63, i64 0, i32 0, i32 3
  %87 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %86, align 8
  %88 = bitcast %"class.SkSL::OutputStream"* %87 to void (%"class.SkSL::OutputStream"*, i8*)***
  %89 = load void (%"class.SkSL::OutputStream"*, i8*)**, void (%"class.SkSL::OutputStream"*, i8*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %89, i64 2
  %91 = load void (%"class.SkSL::OutputStream"*, i8*)*, void (%"class.SkSL::OutputStream"*, i8*)** %90, align 8
  tail call void %91(%"class.SkSL::OutputStream"* %87, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0)) #17
  store i8 0, i8* %66, align 8
  br label %92

92:                                               ; preds = %85, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #17
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #18
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.310"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL8VariableENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.306"*, %"class.SkSL::Variable"** dereferenceable(8), %"class.SkSL::Variable"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %1, align 8
  %5 = ptrtoint %"class.SkSL::Variable"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.306", %"class.std::__1::__hash_table.306"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #17, !range !19
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.306", %"class.std::__1::__hash_table.306"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.310"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.310"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.310"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.310"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.310"* %62 to %"class.SkSL::Variable"**
  %64 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %63, align 8
  %65 = icmp eq %"class.SkSL::Variable"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #18, !noalias !79
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.SkSL::Variable"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !79
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !79
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !79
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.310"**
  store %"struct.std::__1::__hash_node_base.310"* null, %"struct.std::__1::__hash_node_base.310"** %75, align 8, !noalias !79
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.306", %"class.std::__1::__hash_table.306"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.306", %"class.std::__1::__hash_table.306"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #17, !range !19
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #17
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL8VariableENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.306"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #17, !range !19
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.306", %"class.std::__1::__hash_table.306"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.310"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.306", %"class.std::__1::__hash_table.306"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.310"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.310"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.310"* %118, %"struct.std::__1::__hash_node_base.310"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.310"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.310"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #17, !range !19
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.310"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.310"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.310"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.310"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.310"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.310"*, i8 } undef, %"struct.std::__1::__hash_node_base.310"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.310"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.310"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN4SkSL8VariableENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.306"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !19
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.306", %"class.std::__1::__hash_table.306"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL8VariableENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.306"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !19
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.306", %"class.std::__1::__hash_table.306"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.306", %"class.std::__1::__hash_table.306"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !19
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL8VariableENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.306"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #8 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN4SkSL8VariableENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.306"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.306", %"class.std::__1::__hash_table.306"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #19
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.306", %"class.std::__1::__hash_table.306"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.306"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.310"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.310"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.312", %"class.std::__1::__bucket_list_deallocator.312"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.310"* null, %"struct.std::__1::__hash_node_base.310"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !82

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.306", %"class.std::__1::__hash_table.306"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.310"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.310"* null, %"struct.std::__1::__hash_node_base.310"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.310"* null, %"struct.std::__1::__hash_node_base.310"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.310"* null, %"struct.std::__1::__hash_node_base.310"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.310"* null, %"struct.std::__1::__hash_node_base.310"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.310"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !19
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.310"* %36, %"struct.std::__1::__hash_node_base.310"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.310"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.310"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.310"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.310"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.310"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.310"* %101 to %"class.SkSL::Variable"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.310"* %82, %"struct.std::__1::__hash_node_base.310"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.310"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.310"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.310"* %110 to %"class.SkSL::Variable"**
  %112 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %102, align 8
  %113 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %111, align 8
  %114 = icmp eq %"class.SkSL::Variable"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.310"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.310"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.310"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.310"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.310"* %80, %"struct.std::__1::__hash_node_base.310"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.310"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.310", %"struct.std::__1::__hash_node_base.310"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.310"*, %"struct.std::__1::__hash_node_base.310"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.310"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.306", %"class.std::__1::__hash_table.306"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.310"**, %"struct.std::__1::__hash_node_base.310"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.310"** null, %"struct.std::__1::__hash_node_base.310"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.310"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.310"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #18
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.312", %"class.std::__1::__bucket_list_deallocator.312"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIPN4SkSL17VariableReferenceELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.304*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.304, %class.SkTArray.304* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #17
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.304, %class.SkTArray.304* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.SkSL::VariableReference"**, %"class.SkSL::VariableReference"*** %49, align 8
  %55 = getelementptr inbounds %"class.SkSL::VariableReference"*, %"class.SkSL::VariableReference"** %54, i64 %51
  %56 = bitcast %"class.SkSL::VariableReference"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8* %53 to i64*
  store i64 %57, i64* %58, align 8
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.304* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #17
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.SkSL::String"* dereferenceable(24), %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.SkSL::String"* dereferenceable(24) %1)
  %7 = bitcast %"class.std::__1::__tree_node_base"** %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %10, label %49

10:                                               ; preds = %3
  %11 = call i8* @_Znwm(i64 56) #18, !noalias !83
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1, !noalias !83
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %18, i64 24, i1 false) #17, !noalias !83
  br label %25

19:                                               ; preds = %10
  %20 = bitcast i8* %12 to %"class.std::__1::basic_string"*
  %21 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !83
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !83
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %22, i64 %24) #17, !noalias !83
  br label %25

25:                                               ; preds = %17, %19
  %26 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %11 to %"class.std::__1::__tree_node"*
  %29 = bitcast i8* %11 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds i8, i8* %11, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #17
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8
  %32 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8**
  store i8* %11, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %25
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %36 to i64
  %40 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  br label %42

42:                                               ; preds = %38, %25
  %43 = phi %"class.std::__1::__tree_node_base"* [ %29, %25 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %45, %"class.std::__1::__tree_node_base"* %43) #17
  %46 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %42, %3
  %50 = phi i8 [ 1, %42 ], [ 0, %3 ]
  %51 = phi %"class.std::__1::__tree_node"* [ %28, %42 ], [ %8, %3 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %53 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %52, 0
  %54 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %53, i8 %50, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.SkSL::String"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.SkSL::String"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #17
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.SkSL::String"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #17
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.SkSL::String"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.SkSL::String"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #17
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #17
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.114"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.110"*, %"class.SkSL::String"* dereferenceable(24), %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.SkSL::String"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #17
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #17
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %65, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #17, !range !19
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.114"* %37, null
  br i1 %38, label %65, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.114"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.114"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.114"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %65

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.114"* %62 to %"class.SkSL::String"*
  %64 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %63, %"class.SkSL::String"* dereferenceable(24) %1) #17
  br i1 %64, label %163, label %41

65:                                               ; preds = %41, %58, %32, %3
  %66 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %67 = call i8* @_Znwm(i64 40) #18, !noalias !86
  %68 = getelementptr inbounds i8, i8* %67, i64 16
  %69 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1, !noalias !86
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %74, i64 24, i1 false) #17, !noalias !86
  br label %81

75:                                               ; preds = %65
  %76 = bitcast i8* %68 to %"class.std::__1::basic_string"*
  %77 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8, !noalias !86
  %79 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8, !noalias !86
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %76, i8* %78, i64 %80) #17, !noalias !86
  br label %81

81:                                               ; preds = %73, %75
  %82 = getelementptr inbounds i8, i8* %67, i64 8
  %83 = bitcast i8* %82 to i64*
  store i64 %18, i64* %83, align 8, !noalias !86
  %84 = bitcast i8* %67 to %"struct.std::__1::__hash_node_base.114"**
  store %"struct.std::__1::__hash_node_base.114"* null, %"struct.std::__1::__hash_node_base.114"** %84, align 8, !noalias !86
  %85 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 2, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  %88 = uitofp i64 %87 to float
  %89 = uitofp i64 %20 to float
  %90 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 3, i32 0, i32 0
  %91 = load float, float* %90, align 4
  %92 = fmul float %91, %89
  %93 = fcmp olt float %92, %88
  %94 = or i1 %21, %93
  br i1 %94, label %95, label %118

95:                                               ; preds = %81
  %96 = shl i64 %20, 1
  %97 = icmp ult i64 %20, 3
  %98 = call i64 @llvm.ctpop.i64(i64 %20) #17, !range !19
  %99 = icmp ugt i64 %98, 1
  %100 = or i1 %97, %99
  %101 = zext i1 %100 to i64
  %102 = or i64 %96, %101
  %103 = fdiv float %88, %91
  %104 = call float @llvm.ceil.f32(float %103) #17
  %105 = fptoui float %104 to i64
  %106 = icmp ult i64 %102, %105
  %107 = select i1 %106, i64 %105, i64 %102
  call void @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.110"* %0, i64 %107)
  %108 = load i64, i64* %19, align 8
  %109 = call i64 @llvm.ctpop.i64(i64 %108) #17, !range !19
  %110 = icmp ugt i64 %109, 1
  br i1 %110, label %114, label %111

111:                                              ; preds = %95
  %112 = add i64 %108, -1
  %113 = and i64 %112, %18
  br label %118

114:                                              ; preds = %95
  %115 = icmp ult i64 %18, %108
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = urem i64 %18, %108
  br label %118

118:                                              ; preds = %116, %114, %111, %81
  %119 = phi i64 [ %20, %81 ], [ %108, %111 ], [ %108, %114 ], [ %108, %116 ]
  %120 = phi i64 [ %66, %81 ], [ %113, %111 ], [ %18, %114 ], [ %117, %116 ]
  %121 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %121, align 8
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %122, i64 %120
  %124 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %123, align 8
  %125 = icmp eq %"struct.std::__1::__hash_node_base.114"* %124, null
  br i1 %125, label %126, label %152

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 1, i32 0, i32 0
  %128 = bitcast %"struct.std::__1::__hash_node_base.114"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i8* %67 to i64*
  store i64 %129, i64* %130, align 8
  %131 = bitcast %"struct.std::__1::__hash_node_base.114"* %127 to i8**
  store i8* %67, i8** %131, align 8
  store %"struct.std::__1::__hash_node_base.114"* %127, %"struct.std::__1::__hash_node_base.114"** %123, align 8
  %132 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %84, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.114"* %132, null
  br i1 %133, label %159, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.114"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = call i64 @llvm.ctpop.i64(i64 %119) #17, !range !19
  %139 = icmp ugt i64 %138, 1
  br i1 %139, label %143, label %140

140:                                              ; preds = %134
  %141 = add i64 %119, -1
  %142 = and i64 %137, %141
  br label %147

143:                                              ; preds = %134
  %144 = icmp ult i64 %137, %119
  br i1 %144, label %147, label %145

145:                                              ; preds = %143
  %146 = urem i64 %137, %119
  br label %147

147:                                              ; preds = %140, %143, %145
  %148 = phi i64 [ %142, %140 ], [ %146, %145 ], [ %137, %143 ]
  %149 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %121, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %149, i64 %148
  %151 = bitcast %"struct.std::__1::__hash_node_base.114"** %150 to i8**
  br label %157

152:                                              ; preds = %118
  %153 = bitcast %"struct.std::__1::__hash_node_base.114"* %124 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast i8* %67 to i64*
  store i64 %154, i64* %155, align 8
  %156 = bitcast %"struct.std::__1::__hash_node_base.114"* %124 to i8**
  br label %157

157:                                              ; preds = %147, %152
  %158 = phi i8** [ %156, %152 ], [ %151, %147 ]
  store i8* %67, i8** %158, align 8
  br label %159

159:                                              ; preds = %157, %126
  %160 = bitcast i8* %67 to %"struct.std::__1::__hash_node_base.114"*
  %161 = load i64, i64* %85, align 8
  %162 = add i64 %161, 1
  store i64 %162, i64* %85, align 8
  br label %163

163:                                              ; preds = %61, %159
  %164 = phi i8 [ 1, %159 ], [ 0, %61 ]
  %165 = phi %"struct.std::__1::__hash_node_base.114"* [ %160, %159 ], [ %44, %61 ]
  %166 = insertvalue { %"struct.std::__1::__hash_node_base.114"*, i8 } undef, %"struct.std::__1::__hash_node_base.114"* %165, 0
  %167 = insertvalue { %"struct.std::__1::__hash_node_base.114"*, i8 } %166, i8 %164, 1
  ret { %"struct.std::__1::__hash_node_base.114"*, i8 } %167
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.110"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !19
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.110"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !19
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !19
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.110"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.110"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %141, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #19
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.110"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.114"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.114"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.116", %"class.std::__1::__bucket_list_deallocator.116"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.114"* null, %"struct.std::__1::__hash_node_base.114"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !89

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.114"* %38, null
  br i1 %39, label %149, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.114"* null, %"struct.std::__1::__hash_node_base.114"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.114"* null, %"struct.std::__1::__hash_node_base.114"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.114"* null, %"struct.std::__1::__hash_node_base.114"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.114"* null, %"struct.std::__1::__hash_node_base.114"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.114"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !19
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.114"* %36, %"struct.std::__1::__hash_node_base.114"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.114"* %75, null
  br i1 %76, label %149, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %135
  %80 = phi %"struct.std::__1::__hash_node_base.114"* [ %75, %77 ], [ %139, %135 ]
  %81 = phi i64 [ %71, %77 ], [ %137, %135 ]
  %82 = phi %"struct.std::__1::__hash_node_base.114"* [ %38, %77 ], [ %136, %135 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.114"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %135, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.114"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.114"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.114"* %105 to %"class.SkSL::String"*
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %102, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base.114"* %107 to %"class.SkSL::String"*
  %109 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %108) #17
  br i1 %109, label %115, label %121

110:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.114"* %82, %"struct.std::__1::__hash_node_base.114"** %97, align 8
  br label %135

111:                                              ; preds = %115
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %119, i64 2
  %113 = bitcast %"struct.std::__1::__hash_node_base.114"* %112 to %"class.SkSL::String"*
  %114 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %113) #17
  br i1 %114, label %115, label %121

115:                                              ; preds = %104, %111
  %116 = phi %"struct.std::__1::__hash_node_base.114"** [ %118, %111 ], [ %101, %104 ]
  %117 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %117, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.114"* %119, null
  br i1 %120, label %121, label %111

121:                                              ; preds = %115, %111, %104, %100
  %122 = phi %"struct.std::__1::__hash_node_base.114"* [ %80, %100 ], [ %80, %104 ], [ %117, %111 ], [ %117, %115 ]
  %123 = bitcast %"struct.std::__1::__hash_node_base.114"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::__hash_node_base.114"* %82 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %11, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %126, i64 %93
  %128 = bitcast %"struct.std::__1::__hash_node_base.114"** %127 to i64**
  %129 = load i64*, i64** %128, align 8
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %123, align 8
  %131 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %11, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %131, i64 %93
  %133 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %133, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.114"* %80, %"struct.std::__1::__hash_node_base.114"** %134, align 8
  br label %135

135:                                              ; preds = %92, %121, %110
  %136 = phi %"struct.std::__1::__hash_node_base.114"* [ %80, %110 ], [ %82, %121 ], [ %80, %92 ]
  %137 = phi i64 [ %93, %110 ], [ %81, %121 ], [ %81, %92 ]
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %136, i64 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base.114"* %139, null
  br i1 %140, label %149, label %79

141:                                              ; preds = %2
  %142 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %142, align 8
  store %"struct.std::__1::__hash_node_base.114"** null, %"struct.std::__1::__hash_node_base.114"*** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.114"** %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = bitcast %"struct.std::__1::__hash_node_base.114"** %143 to i8*
  tail call void @_ZdlPv(i8* %146) #18
  br label %147

147:                                              ; preds = %141, %145
  %148 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.116", %"class.std::__1::__bucket_list_deallocator.116"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %148, align 8
  br label %149

149:                                              ; preds = %135, %70, %35, %147
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"*, %"struct.SkSL::Type::Field"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.407"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"struct.SkSL::Type::Field"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"struct.SkSL::Type::Field"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #17, !range !19
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.138"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.138"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.138"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.138"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.138"* %65 to %"struct.SkSL::Type::Field"**
  %67 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %66, align 8
  %68 = icmp eq %"struct.SkSL::Type::Field"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #18, !noalias !90
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !90
  %75 = load i64, i64* %74, align 8, !noalias !90
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !90
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.SkSL::InterfaceBlock"**
  store %"class.SkSL::InterfaceBlock"* null, %"class.SkSL::InterfaceBlock"** %78, align 8, !noalias !90
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !90
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.138"**
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %81, align 8, !noalias !90
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #17, !range !19
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #17
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE6rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #17, !range !19
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.138"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.138"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.138"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.138"* %124, %"struct.std::__1::__hash_node_base.138"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.138"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.138"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #17, !range !19
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.138"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.138"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.138"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.138"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.138"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } undef, %"struct.std::__1::__hash_node_base.138"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.138"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE6rehashEm(%"class.std::__1::__hash_table.134"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !19
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !19
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !19
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table.134"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #19
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.134"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.138"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.138"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.140", %"class.std::__1::__bucket_list_deallocator.140"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !93

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.138"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.138"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !19
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.138"* %36, %"struct.std::__1::__hash_node_base.138"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.138"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.138"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.138"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.138"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.138"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.138"* %101 to %"struct.SkSL::Type::Field"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.138"* %82, %"struct.std::__1::__hash_node_base.138"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.138"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.138"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.138"* %110 to %"struct.SkSL::Type::Field"**
  %112 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %102, align 8
  %113 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %111, align 8
  %114 = icmp eq %"struct.SkSL::Type::Field"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.138"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.138"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.138"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.138"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.138"* %80, %"struct.std::__1::__hash_node_base.138"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.138"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.138"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.138"** null, %"struct.std::__1::__hash_node_base.138"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.138"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.138"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #18
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.140", %"class.std::__1::__bucket_list_deallocator.140"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.163"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.159"*, %"class.SkSL::InterfaceBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.419"* dereferenceable(8), %"class.std::__1::tuple.407"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.SkSL::InterfaceBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.SkSL::InterfaceBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #17, !range !19
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.163"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.163"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.163"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.163"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.163"* %65 to %"class.SkSL::InterfaceBlock"**
  %67 = load %"class.SkSL::InterfaceBlock"*, %"class.SkSL::InterfaceBlock"** %66, align 8
  %68 = icmp eq %"class.SkSL::InterfaceBlock"* %67, %24
  br i1 %68, label %159, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 48) #18, !noalias !94
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.419"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !94
  %75 = load i64, i64* %74, align 8, !noalias !94
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !94
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #17, !noalias !94
  %78 = getelementptr inbounds i8, i8* %71, i64 8
  %79 = bitcast i8* %78 to i64*
  store i64 %20, i64* %79, align 8, !noalias !94
  %80 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.163"**
  store %"struct.std::__1::__hash_node_base.163"* null, %"struct.std::__1::__hash_node_base.163"** %80, align 8, !noalias !94
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  %84 = uitofp i64 %83 to float
  %85 = uitofp i64 %22 to float
  %86 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, %85
  %89 = fcmp olt float %88, %84
  %90 = or i1 %23, %89
  br i1 %90, label %91, label %114

91:                                               ; preds = %69
  %92 = shl i64 %22, 1
  %93 = icmp ult i64 %22, 3
  %94 = tail call i64 @llvm.ctpop.i64(i64 %22) #17, !range !19
  %95 = icmp ugt i64 %94, 1
  %96 = or i1 %93, %95
  %97 = zext i1 %96 to i64
  %98 = or i64 %92, %97
  %99 = fdiv float %84, %87
  %100 = tail call float @llvm.ceil.f32(float %99) #17
  %101 = fptoui float %100 to i64
  %102 = icmp ult i64 %98, %101
  %103 = select i1 %102, i64 %101, i64 %98
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.159"* %0, i64 %103)
  %104 = load i64, i64* %21, align 8
  %105 = tail call i64 @llvm.ctpop.i64(i64 %104) #17, !range !19
  %106 = icmp ugt i64 %105, 1
  br i1 %106, label %110, label %107

107:                                              ; preds = %91
  %108 = add i64 %104, -1
  %109 = and i64 %108, %20
  br label %114

110:                                              ; preds = %91
  %111 = icmp ult i64 %20, %104
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %20, %104
  br label %114

114:                                              ; preds = %112, %110, %107, %69
  %115 = phi i64 [ %22, %69 ], [ %104, %107 ], [ %104, %110 ], [ %104, %112 ]
  %116 = phi i64 [ %70, %69 ], [ %109, %107 ], [ %20, %110 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %118, i64 %116
  %120 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.163"* %120, null
  br i1 %121, label %122, label %148

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 1, i32 0, i32 0
  %124 = bitcast %"struct.std::__1::__hash_node_base.163"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast i8* %71 to i64*
  store i64 %125, i64* %126, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base.163"* %123 to i8**
  store i8* %71, i8** %127, align 8
  store %"struct.std::__1::__hash_node_base.163"* %123, %"struct.std::__1::__hash_node_base.163"** %119, align 8
  %128 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %80, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.163"* %128, null
  br i1 %129, label %155, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %128, i64 1
  %132 = bitcast %"struct.std::__1::__hash_node_base.163"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = tail call i64 @llvm.ctpop.i64(i64 %115) #17, !range !19
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  %137 = add i64 %115, -1
  %138 = and i64 %133, %137
  br label %143

139:                                              ; preds = %130
  %140 = icmp ult i64 %133, %115
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = urem i64 %133, %115
  br label %143

143:                                              ; preds = %136, %139, %141
  %144 = phi i64 [ %138, %136 ], [ %142, %141 ], [ %133, %139 ]
  %145 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %117, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %145, i64 %144
  %147 = bitcast %"struct.std::__1::__hash_node_base.163"** %146 to i8**
  br label %153

148:                                              ; preds = %114
  %149 = bitcast %"struct.std::__1::__hash_node_base.163"* %120 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast i8* %71 to i64*
  store i64 %150, i64* %151, align 8
  %152 = bitcast %"struct.std::__1::__hash_node_base.163"* %120 to i8**
  br label %153

153:                                              ; preds = %143, %148
  %154 = phi i8** [ %152, %148 ], [ %147, %143 ]
  store i8* %71, i8** %154, align 8
  br label %155

155:                                              ; preds = %153, %122
  %156 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.163"*
  %157 = load i64, i64* %81, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %81, align 8
  br label %159

159:                                              ; preds = %64, %155
  %160 = phi i8 [ 1, %155 ], [ 0, %64 ]
  %161 = phi %"struct.std::__1::__hash_node_base.163"* [ %156, %155 ], [ %47, %64 ]
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.163"*, i8 } undef, %"struct.std::__1::__hash_node_base.163"* %161, 0
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.163"*, i8 } %162, i8 %160, 1
  ret { %"struct.std::__1::__hash_node_base.163"*, i8 } %163
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.159"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !19
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.159"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !19
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !19
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.159"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.159"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #19
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.159"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.163"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.163"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.165", %"class.std::__1::__bucket_list_deallocator.165"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.163"* null, %"struct.std::__1::__hash_node_base.163"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !97

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.163"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.163"* null, %"struct.std::__1::__hash_node_base.163"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.163"* null, %"struct.std::__1::__hash_node_base.163"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.163"* null, %"struct.std::__1::__hash_node_base.163"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.163"* null, %"struct.std::__1::__hash_node_base.163"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.163"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !19
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.163"* %36, %"struct.std::__1::__hash_node_base.163"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.163"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.163"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.163"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.163"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.163"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.163"* %101 to %"class.SkSL::InterfaceBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.163"* %82, %"struct.std::__1::__hash_node_base.163"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.163"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.163"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.163"* %110 to %"class.SkSL::InterfaceBlock"**
  %112 = load %"class.SkSL::InterfaceBlock"*, %"class.SkSL::InterfaceBlock"** %102, align 8
  %113 = load %"class.SkSL::InterfaceBlock"*, %"class.SkSL::InterfaceBlock"** %111, align 8
  %114 = icmp eq %"class.SkSL::InterfaceBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.163"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.163"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.163"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.163"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.163"* %80, %"struct.std::__1::__hash_node_base.163"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.163"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.163"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.163"** null, %"struct.std::__1::__hash_node_base.163"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.163"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.163"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #18
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.165", %"class.std::__1::__bucket_list_deallocator.165"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.114"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.110"*, %"class.SkSL::String"* dereferenceable(24), %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.SkSL::String"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #17
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #17
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %65, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #17, !range !19
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.114"* %37, null
  br i1 %38, label %65, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.114"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.114"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.114"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %65

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.114"* %62 to %"class.SkSL::String"*
  %64 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %63, %"class.SkSL::String"* dereferenceable(24) %1) #17
  br i1 %64, label %151, label %41

65:                                               ; preds = %41, %58, %32, %3
  %66 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %67 = call i8* @_Znwm(i64 40) #18, !noalias !98
  %68 = getelementptr inbounds i8, i8* %67, i64 16
  %69 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 24, i1 false) #17, !noalias !98
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #17, !noalias !98
  %70 = getelementptr inbounds i8, i8* %67, i64 8
  %71 = bitcast i8* %70 to i64*
  store i64 %18, i64* %71, align 8, !noalias !98
  %72 = bitcast i8* %67 to %"struct.std::__1::__hash_node_base.114"**
  store %"struct.std::__1::__hash_node_base.114"* null, %"struct.std::__1::__hash_node_base.114"** %72, align 8, !noalias !98
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 2, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 1
  %76 = uitofp i64 %75 to float
  %77 = uitofp i64 %20 to float
  %78 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 3, i32 0, i32 0
  %79 = load float, float* %78, align 4
  %80 = fmul float %79, %77
  %81 = fcmp olt float %80, %76
  %82 = or i1 %21, %81
  br i1 %82, label %83, label %106

83:                                               ; preds = %65
  %84 = shl i64 %20, 1
  %85 = icmp ult i64 %20, 3
  %86 = call i64 @llvm.ctpop.i64(i64 %20) #17, !range !19
  %87 = icmp ugt i64 %86, 1
  %88 = or i1 %85, %87
  %89 = zext i1 %88 to i64
  %90 = or i64 %84, %89
  %91 = fdiv float %76, %79
  %92 = call float @llvm.ceil.f32(float %91) #17
  %93 = fptoui float %92 to i64
  %94 = icmp ult i64 %90, %93
  %95 = select i1 %94, i64 %93, i64 %90
  call void @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.110"* %0, i64 %95)
  %96 = load i64, i64* %19, align 8
  %97 = call i64 @llvm.ctpop.i64(i64 %96) #17, !range !19
  %98 = icmp ugt i64 %97, 1
  br i1 %98, label %102, label %99

99:                                               ; preds = %83
  %100 = add i64 %96, -1
  %101 = and i64 %100, %18
  br label %106

102:                                              ; preds = %83
  %103 = icmp ult i64 %18, %96
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = urem i64 %18, %96
  br label %106

106:                                              ; preds = %104, %102, %99, %65
  %107 = phi i64 [ %20, %65 ], [ %96, %99 ], [ %96, %102 ], [ %96, %104 ]
  %108 = phi i64 [ %66, %65 ], [ %101, %99 ], [ %18, %102 ], [ %105, %104 ]
  %109 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %110, i64 %108
  %112 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %111, align 8
  %113 = icmp eq %"struct.std::__1::__hash_node_base.114"* %112, null
  br i1 %113, label %114, label %140

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 1, i32 0, i32 0
  %116 = bitcast %"struct.std::__1::__hash_node_base.114"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast i8* %67 to i64*
  store i64 %117, i64* %118, align 8
  %119 = bitcast %"struct.std::__1::__hash_node_base.114"* %115 to i8**
  store i8* %67, i8** %119, align 8
  store %"struct.std::__1::__hash_node_base.114"* %115, %"struct.std::__1::__hash_node_base.114"** %111, align 8
  %120 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %72, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.114"* %120, null
  br i1 %121, label %147, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %120, i64 1
  %124 = bitcast %"struct.std::__1::__hash_node_base.114"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = call i64 @llvm.ctpop.i64(i64 %107) #17, !range !19
  %127 = icmp ugt i64 %126, 1
  br i1 %127, label %131, label %128

128:                                              ; preds = %122
  %129 = add i64 %107, -1
  %130 = and i64 %125, %129
  br label %135

131:                                              ; preds = %122
  %132 = icmp ult i64 %125, %107
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = urem i64 %125, %107
  br label %135

135:                                              ; preds = %128, %131, %133
  %136 = phi i64 [ %130, %128 ], [ %134, %133 ], [ %125, %131 ]
  %137 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %109, align 8
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %137, i64 %136
  %139 = bitcast %"struct.std::__1::__hash_node_base.114"** %138 to i8**
  br label %145

140:                                              ; preds = %106
  %141 = bitcast %"struct.std::__1::__hash_node_base.114"* %112 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast i8* %67 to i64*
  store i64 %142, i64* %143, align 8
  %144 = bitcast %"struct.std::__1::__hash_node_base.114"* %112 to i8**
  br label %145

145:                                              ; preds = %135, %140
  %146 = phi i8** [ %144, %140 ], [ %139, %135 ]
  store i8* %67, i8** %146, align 8
  br label %147

147:                                              ; preds = %145, %114
  %148 = bitcast i8* %67 to %"struct.std::__1::__hash_node_base.114"*
  %149 = load i64, i64* %73, align 8
  %150 = add i64 %149, 1
  store i64 %150, i64* %73, align 8
  br label %151

151:                                              ; preds = %61, %147
  %152 = phi i8 [ 1, %147 ], [ 0, %61 ]
  %153 = phi %"struct.std::__1::__hash_node_base.114"* [ %148, %147 ], [ %44, %61 ]
  %154 = insertvalue { %"struct.std::__1::__hash_node_base.114"*, i8 } undef, %"struct.std::__1::__hash_node_base.114"* %153, 0
  %155 = insertvalue { %"struct.std::__1::__hash_node_base.114"*, i8 } %154, i8 %152, 1
  ret { %"struct.std::__1::__hash_node_base.114"*, i8 } %155
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.163"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.159"*, %"class.SkSL::InterfaceBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.430"* dereferenceable(8), %"class.std::__1::tuple.407"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.SkSL::InterfaceBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.SkSL::InterfaceBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #17, !range !19
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.163"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.163"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.163"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.163"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.163"* %65 to %"class.SkSL::InterfaceBlock"**
  %67 = load %"class.SkSL::InterfaceBlock"*, %"class.SkSL::InterfaceBlock"** %66, align 8
  %68 = icmp eq %"class.SkSL::InterfaceBlock"* %67, %24
  br i1 %68, label %159, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 48) #18, !noalias !101
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.430"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !101
  %75 = load i64, i64* %74, align 8, !noalias !101
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !101
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #17, !noalias !101
  %78 = getelementptr inbounds i8, i8* %71, i64 8
  %79 = bitcast i8* %78 to i64*
  store i64 %20, i64* %79, align 8, !noalias !101
  %80 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.163"**
  store %"struct.std::__1::__hash_node_base.163"* null, %"struct.std::__1::__hash_node_base.163"** %80, align 8, !noalias !101
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  %84 = uitofp i64 %83 to float
  %85 = uitofp i64 %22 to float
  %86 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, %85
  %89 = fcmp olt float %88, %84
  %90 = or i1 %23, %89
  br i1 %90, label %91, label %114

91:                                               ; preds = %69
  %92 = shl i64 %22, 1
  %93 = icmp ult i64 %22, 3
  %94 = tail call i64 @llvm.ctpop.i64(i64 %22) #17, !range !19
  %95 = icmp ugt i64 %94, 1
  %96 = or i1 %93, %95
  %97 = zext i1 %96 to i64
  %98 = or i64 %92, %97
  %99 = fdiv float %84, %87
  %100 = tail call float @llvm.ceil.f32(float %99) #17
  %101 = fptoui float %100 to i64
  %102 = icmp ult i64 %98, %101
  %103 = select i1 %102, i64 %101, i64 %98
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.159"* %0, i64 %103)
  %104 = load i64, i64* %21, align 8
  %105 = tail call i64 @llvm.ctpop.i64(i64 %104) #17, !range !19
  %106 = icmp ugt i64 %105, 1
  br i1 %106, label %110, label %107

107:                                              ; preds = %91
  %108 = add i64 %104, -1
  %109 = and i64 %108, %20
  br label %114

110:                                              ; preds = %91
  %111 = icmp ult i64 %20, %104
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %20, %104
  br label %114

114:                                              ; preds = %112, %110, %107, %69
  %115 = phi i64 [ %22, %69 ], [ %104, %107 ], [ %104, %110 ], [ %104, %112 ]
  %116 = phi i64 [ %70, %69 ], [ %109, %107 ], [ %20, %110 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %118, i64 %116
  %120 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.163"* %120, null
  br i1 %121, label %122, label %148

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::__hash_table.159", %"class.std::__1::__hash_table.159"* %0, i64 0, i32 1, i32 0, i32 0
  %124 = bitcast %"struct.std::__1::__hash_node_base.163"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast i8* %71 to i64*
  store i64 %125, i64* %126, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base.163"* %123 to i8**
  store i8* %71, i8** %127, align 8
  store %"struct.std::__1::__hash_node_base.163"* %123, %"struct.std::__1::__hash_node_base.163"** %119, align 8
  %128 = load %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %80, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.163"* %128, null
  br i1 %129, label %155, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163", %"struct.std::__1::__hash_node_base.163"* %128, i64 1
  %132 = bitcast %"struct.std::__1::__hash_node_base.163"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = tail call i64 @llvm.ctpop.i64(i64 %115) #17, !range !19
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  %137 = add i64 %115, -1
  %138 = and i64 %133, %137
  br label %143

139:                                              ; preds = %130
  %140 = icmp ult i64 %133, %115
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = urem i64 %133, %115
  br label %143

143:                                              ; preds = %136, %139, %141
  %144 = phi i64 [ %138, %136 ], [ %142, %141 ], [ %133, %139 ]
  %145 = load %"struct.std::__1::__hash_node_base.163"**, %"struct.std::__1::__hash_node_base.163"*** %117, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.163"*, %"struct.std::__1::__hash_node_base.163"** %145, i64 %144
  %147 = bitcast %"struct.std::__1::__hash_node_base.163"** %146 to i8**
  br label %153

148:                                              ; preds = %114
  %149 = bitcast %"struct.std::__1::__hash_node_base.163"* %120 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast i8* %71 to i64*
  store i64 %150, i64* %151, align 8
  %152 = bitcast %"struct.std::__1::__hash_node_base.163"* %120 to i8**
  br label %153

153:                                              ; preds = %143, %148
  %154 = phi i8** [ %152, %148 ], [ %147, %143 ]
  store i8* %71, i8** %154, align 8
  br label %155

155:                                              ; preds = %153, %122
  %156 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.163"*
  %157 = load i64, i64* %81, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %81, align 8
  br label %159

159:                                              ; preds = %64, %155
  %160 = phi i8 [ 1, %155 ], [ 0, %64 ]
  %161 = phi %"struct.std::__1::__hash_node_base.163"* [ %156, %155 ], [ %47, %64 ]
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.163"*, i8 } undef, %"struct.std::__1::__hash_node_base.163"* %161, 0
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.163"*, i8 } %162, i8 %160, 1
  ret { %"struct.std::__1::__hash_node_base.163"*, i8 } %163
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN4SkSL18MetalCodeGenerator13writeFunctionERKNS6_18FunctionDefinitionEE3$_2S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #16 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.SkSL::MetalCodeGenerator"**
  %3 = load %"class.SkSL::MetalCodeGenerator"*, %"class.SkSL::MetalCodeGenerator"** %2, align 8
  %4 = getelementptr inbounds %"class.SkSL::MetalCodeGenerator", %"class.SkSL::MetalCodeGenerator"* %3, i64 0, i32 25
  store %"class.SkSL::FunctionDeclaration"* null, %"class.SkSL::FunctionDeclaration"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"*, %"struct.SkSL::Type::Field"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.434"* dereferenceable(8), %"class.std::__1::tuple.407"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"struct.SkSL::Type::Field"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"struct.SkSL::Type::Field"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #17, !range !19
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.138"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.138"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.138"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.138"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.138"* %65 to %"struct.SkSL::Type::Field"**
  %67 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %66, align 8
  %68 = icmp eq %"struct.SkSL::Type::Field"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #18, !noalias !104
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.434"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !104
  %75 = load i64, i64* %74, align 8, !noalias !104
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !104
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.SkSL::InterfaceBlock"**
  store %"class.SkSL::InterfaceBlock"* null, %"class.SkSL::InterfaceBlock"** %78, align 8, !noalias !104
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !104
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.138"**
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %81, align 8, !noalias !104
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #17, !range !19
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #17
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE6rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #17, !range !19
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.138"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.138"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.138"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.138"* %124, %"struct.std::__1::__hash_node_base.138"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.138"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.138"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #17, !range !19
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.138"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.138"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.138"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.138"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.138"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } undef, %"struct.std::__1::__hash_node_base.138"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.138"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.114"* @_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(%"class.std::__1::__hash_table.110"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.SkSL::String"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #17
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #17
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %68, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #17, !range !19
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.110", %"class.std::__1::__hash_table.110"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.114"**, %"struct.std::__1::__hash_node_base.114"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.114"* %36, null
  br i1 %37, label %68, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.114"* %40, null
  br i1 %41, label %68, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.114"* [ %40, %42 ], [ %66, %64 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.114"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %17
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %23, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %43
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %19
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %19
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %32
  br i1 %59, label %64, label %68

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.114"* %61 to %"class.SkSL::String"*
  %63 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %62, %"class.SkSL::String"* dereferenceable(24) %1) #17
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.114", %"struct.std::__1::__hash_node_base.114"* %45, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.114"*, %"struct.std::__1::__hash_node_base.114"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.114"* %66, null
  br i1 %67, label %68, label %44

68:                                               ; preds = %60, %64, %57, %38, %2, %31
  %69 = phi %"struct.std::__1::__hash_node_base.114"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %45, %60 ], [ null, %64 ], [ null, %57 ]
  ret %"struct.std::__1::__hash_node_base.114"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.198"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.194"*, %"class.SkSL::FunctionDeclaration"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.441"* dereferenceable(8), %"class.std::__1::tuple.407"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.194", %"class.std::__1::__hash_table.194"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.SkSL::FunctionDeclaration"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #17, !range !19
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.194", %"class.std::__1::__hash_table.194"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.198"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.198"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.198"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.198"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.198"* %65 to %"class.SkSL::FunctionDeclaration"**
  %67 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %66, align 8
  %68 = icmp eq %"class.SkSL::FunctionDeclaration"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #18, !noalias !107
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.441"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !107
  %75 = load i64, i64* %74, align 8, !noalias !107
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !107
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i32*
  store i32 0, i32* %78, align 8, !noalias !107
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !107
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.198"**
  store %"struct.std::__1::__hash_node_base.198"* null, %"struct.std::__1::__hash_node_base.198"** %81, align 8, !noalias !107
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.194", %"class.std::__1::__hash_table.194"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.194", %"class.std::__1::__hash_table.194"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #17, !range !19
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #17
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.194"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #17, !range !19
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.194", %"class.std::__1::__hash_table.194"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.198"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.194", %"class.std::__1::__hash_table.194"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.198"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.198"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.198"* %124, %"struct.std::__1::__hash_node_base.198"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.198"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.198"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #17, !range !19
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.198"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.198"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.198"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.198"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.198"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.198"*, i8 } undef, %"struct.std::__1::__hash_node_base.198"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.198"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.198"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.194"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !19
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.194", %"class.std::__1::__hash_table.194"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.194"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !19
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.194", %"class.std::__1::__hash_table.194"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.194", %"class.std::__1::__hash_table.194"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !19
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.194"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.194"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.194", %"class.std::__1::__hash_table.194"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #19
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.194", %"class.std::__1::__hash_table.194"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.194"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.198"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.198"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.200", %"class.std::__1::__bucket_list_deallocator.200"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.198"* null, %"struct.std::__1::__hash_node_base.198"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !110

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.194", %"class.std::__1::__hash_table.194"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.198"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.198"* null, %"struct.std::__1::__hash_node_base.198"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.198"* null, %"struct.std::__1::__hash_node_base.198"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.198"* null, %"struct.std::__1::__hash_node_base.198"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.198"* null, %"struct.std::__1::__hash_node_base.198"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.198"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !19
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.198"* %36, %"struct.std::__1::__hash_node_base.198"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.198"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.198"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.198"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.198"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.198"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.198"* %101 to %"class.SkSL::FunctionDeclaration"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.198"* %82, %"struct.std::__1::__hash_node_base.198"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.198"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.198"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.198"* %110 to %"class.SkSL::FunctionDeclaration"**
  %112 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %102, align 8
  %113 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %111, align 8
  %114 = icmp eq %"class.SkSL::FunctionDeclaration"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.198"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.198"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.198"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.198"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.198"* %80, %"struct.std::__1::__hash_node_base.198"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.198"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.198", %"struct.std::__1::__hash_node_base.198"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.198"*, %"struct.std::__1::__hash_node_base.198"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.198"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.194", %"class.std::__1::__hash_table.194"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.198"**, %"struct.std::__1::__hash_node_base.198"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.198"** null, %"struct.std::__1::__hash_node_base.198"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.198"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.198"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #18
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.200", %"class.std::__1::__bucket_list_deallocator.200"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }
attributes #20 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4SkSL4Type11displayNameEv"}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !13}
!17 = distinct !{!17, !13}
!18 = distinct !{!18, !13}
!19 = !{i64 0, i64 65}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!26 = !{!27, !29}
!27 = distinct !{!27, !28, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!28 = distinct !{!28, !"_ZNK4SkSL4Type11displayNameEv"}
!29 = distinct !{!29, !30, !"_ZNK4SkSL4Type11descriptionEv: argument 0"}
!30 = distinct !{!30, !"_ZNK4SkSL4Type11descriptionEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!36 = distinct !{!36, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!39 = distinct !{!39, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!42 = distinct !{!42, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!45 = distinct !{!45, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!48 = distinct !{!48, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!51 = distinct !{!51, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!54 = distinct !{!54, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!57 = distinct !{!57, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!60 = distinct !{!60, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!63 = distinct !{!63, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!66 = distinct !{!66, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!69 = distinct !{!69, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!72 = distinct !{!72, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!75 = distinct !{!75, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!78 = distinct !{!78, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZNSt3__112__hash_tableIPKN4SkSL8VariableENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!81 = distinct !{!81, !"_ZNSt3__112__hash_tableIPKN4SkSL8VariableENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_"}
!82 = distinct !{!82, !13}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__16__treeIN4SkSL6StringENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!88 = distinct !{!88, !"_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_"}
!89 = distinct !{!89, !13}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS6_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSJ_ISY_EEEEEEmOT_DpOT0_: argument 0"}
!92 = distinct !{!92, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS6_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSJ_ISY_EEEEEEmOT_DpOT0_"}
!93 = distinct !{!93, !13}
!94 = !{!95}
!95 = distinct !{!95, !96, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!96 = distinct !{!96, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_"}
!97 = distinct !{!97, !13}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!100 = distinct !{!100, !"_ZNSt3__112__hash_tableIN4SkSL6StringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISE_EEEEEEmOT_DpOT0_"}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!103 = distinct !{!103, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL14InterfaceBlockENS2_6StringEEENS_22__unordered_map_hasherIS5_S7_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISU_EEEEEEmOT_DpOT0_"}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS6_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSJ_ISX_EEEEEEmOT_DpOT0_: argument 0"}
!106 = distinct !{!106, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL4Type5FieldEPKNS2_14InterfaceBlockEEENS_22__unordered_map_hasherIS6_SA_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS6_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSJ_ISX_EEEEEEmOT_DpOT0_"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!109 = distinct !{!109, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!110 = distinct !{!110, !13}
