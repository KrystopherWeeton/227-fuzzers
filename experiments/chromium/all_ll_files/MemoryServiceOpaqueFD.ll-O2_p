; ModuleID = '../../third_party/dawn/src/dawn_native/vulkan/external_memory/MemoryServiceOpaqueFD.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/vulkan/external_memory/MemoryServiceOpaqueFD.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dawn_native::vulkan::external_memory::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.dawn_native::vulkan::Device" = type { %"class.dawn_native::DeviceBase", %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanDeviceInfo", %struct.VkDevice_T*, i32, %struct.VkQueue_T*, i32, %class.SerialQueue, %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::queue", %"class.std::__1::vector.124", %class.SerialQueue.131, %"class.std::__1::vector.141", %"struct.dawn_native::vulkan::CommandRecordingContext" }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.5", %class.Ref.11, %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %class.Ref.25, %"class.std::__1::unique_ptr.27", i32, %"struct.std::__1::array", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42" }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.dawn_native::AdapterBase" = type <{ i32 (...)**, %"struct.dawn_native::PCIInfo", i32, [4 x i8], %"class.std::__1::basic_string", %"struct.dawn_native::ExtensionsSet", %"class.dawn_native::InstanceBase"*, i32, [4 x i8] }>
%"struct.dawn_native::PCIInfo" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.11 = type { %class.RefBase.12 }
%class.RefBase.12 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.25 = type { %class.RefBase.26 }
%class.RefBase.26 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.33" }
%"struct.std::__1::array.33" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset.34" }
%"class.std::__1::bitset.34" = type { %"class.std::__1::__bitset.35" }
%"class.std::__1::__bitset.35" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%"struct.dawn_native::vulkan::VulkanFunctions" = type { void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void ()* (%struct.VkDevice_T*, i8*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, %struct.VkXlibSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct._XDisplay*, i64)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)*, void (%struct.VkCommandBuffer_T*, float*)*, void (%struct.VkCommandBuffer_T*, float, float, float)*, void (%struct.VkCommandBuffer_T*, float, float)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, float)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*)*, i32 (%struct.VkCommandBuffer_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)*, void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkFence_T*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)*, i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*)*, i32 (%struct.VkCommandBuffer_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)*, i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkInstance_T = type opaque
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkCommandBuffer_T = type opaque
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkDebugUtilsMessengerCreateInfoEXT = type { i32, i8*, i32, i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%struct.VkDebugUtilsMessengerCallbackDataEXT = type { i32, i8*, i32, i8*, i32, i8*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsObjectNameInfoEXT* }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkXlibSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct._XDisplay*, i64 }
%struct._XDisplay = type opaque
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkImage_T = type opaque
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkQueryPool_T = type opaque
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkEvent_T = type opaque
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineCache_T = type opaque
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"struct.dawn_native::vulkan::VulkanDeviceInfo" = type { %"struct.dawn_native::vulkan::VulkanDeviceKnobs", %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT, %"class.std::__1::vector", %"class.std::__1::vector.55", %"class.std::__1::vector.62", %"class.std::__1::vector.69" }
%"struct.dawn_native::vulkan::VulkanDeviceKnobs" = type { %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDevice16BitStorageFeatures, %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT, %"class.ityp::bitset" }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDevice16BitStorageFeatures = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT = type { i32, i8*, i32, i32 }
%"class.ityp::bitset" = type { %"class.std::__1::bitset.48" }
%"class.std::__1::bitset.48" = type { %"class.std::__1::__bitset.49" }
%"class.std::__1::__bitset.49" = type { i64 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT = type { i32, i8*, i32, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %struct.VkMemoryType*, %struct.VkMemoryType*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %struct.VkMemoryType* }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %struct.VkMemoryHeap*, %struct.VkMemoryHeap*, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %struct.VkMemoryHeap* }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %struct.VkLayerProperties* }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.SerialQueue = type { %class.SerialStorage }
%class.SerialStorage = type { %"class.std::__1::vector.76" }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.78" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.dawn_native::vulkan::FencedDeleter"* }
%"class.dawn_native::vulkan::FencedDeleter" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.dawn_native::vulkan::ResourceMemoryAllocator"* }
%"class.dawn_native::vulkan::ResourceMemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.dawn_native::vulkan::RenderPassCache"* }
%"class.dawn_native::vulkan::RenderPassCache" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.dawn_native::vulkan::external_memory::Service"* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.dawn_native::vulkan::external_semaphore::Service"* }
%"class.dawn_native::vulkan::external_semaphore::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.119" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.113"**, %"struct.std::__1::pair.113"**, %"struct.std::__1::pair.113"**, %"class.std::__1::__compressed_pair.114" }
%"struct.std::__1::pair.113" = type opaque
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::pair.113"** }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { i64 }
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"class.dawn_native::vulkan::detail::VkHandle"*, %"class.dawn_native::vulkan::detail::VkHandle"*, %"class.std::__1::__compressed_pair.126" }
%"class.dawn_native::vulkan::detail::VkHandle" = type { %struct.VkFence_T* }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.dawn_native::vulkan::detail::VkHandle"* }
%class.SerialQueue.131 = type { %class.SerialStorage.132 }
%class.SerialStorage.132 = type { %"class.std::__1::vector.133" }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"struct.std::__1::pair.135"*, %"struct.std::__1::pair.135"*, %"class.std::__1::__compressed_pair.136" }
%"struct.std::__1::pair.135" = type opaque
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::pair.135"* }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"class.std::__1::__compressed_pair.144" }
%"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer" = type { %"class.dawn_native::vulkan::detail::VkHandle.143", %struct.VkCommandBuffer_T* }
%"class.dawn_native::vulkan::detail::VkHandle.143" = type { %struct.VkCommandPool_T* }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"* }
%"struct.dawn_native::vulkan::CommandRecordingContext" = type <{ %struct.VkCommandBuffer_T*, %"class.std::__1::vector.149", %"class.std::__1::vector.149", %"class.std::__1::vector.157", %"class.dawn_native::vulkan::detail::VkHandle.143", i8, [7 x i8] }>
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"class.dawn_native::vulkan::detail::VkHandle.151"*, %"class.dawn_native::vulkan::detail::VkHandle.151"*, %"class.std::__1::__compressed_pair.152" }
%"class.dawn_native::vulkan::detail::VkHandle.151" = type { %struct.VkSemaphore_T* }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.dawn_native::vulkan::detail::VkHandle.151"* }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %class.Ref.159*, %class.Ref.159*, %"class.std::__1::__compressed_pair.160" }
%class.Ref.159 = type opaque
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %class.Ref.159* }
%struct.VkPhysicalDeviceExternalImageFormatInfo = type { i32, i8*, i32 }
%struct.VkExternalImageFormatProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%"class.dawn_native::vulkan::Adapter" = type { %"class.dawn_native::AdapterBase.base", %struct.VkPhysicalDevice_T*, %"class.dawn_native::vulkan::Backend"*, %"struct.dawn_native::vulkan::VulkanDeviceInfo" }
%"class.dawn_native::AdapterBase.base" = type <{ i32 (...)**, %"struct.dawn_native::PCIInfo", i32, [4 x i8], %"class.std::__1::basic_string", %"struct.dawn_native::ExtensionsSet", %"class.dawn_native::InstanceBase"*, i32 }>
%"class.dawn_native::vulkan::Backend" = type { %"class.dawn_native::BackendConnection.base", %class.DynamicLib, %"struct.dawn_native::vulkan::VulkanGlobalInfo", %struct.VkInstance_T*, %"struct.dawn_native::vulkan::VulkanFunctions", %"class.dawn_native::vulkan::detail::VkHandle.172", %"class.std::__1::vector.173" }
%"class.dawn_native::BackendConnection.base" = type <{ i32 (...)**, %"class.dawn_native::InstanceBase"*, i32 }>
%class.DynamicLib = type { i8* }
%"struct.dawn_native::vulkan::VulkanGlobalInfo" = type <{ %"struct.dawn_native::vulkan::VulkanGlobalKnobs", i32, [4 x i8] }>
%"struct.dawn_native::vulkan::VulkanGlobalKnobs" = type { %"class.ityp::bitset.165", %"class.ityp::array", %"class.ityp::bitset.169" }
%"class.ityp::bitset.165" = type { %"class.std::__1::bitset.166" }
%"class.std::__1::bitset.166" = type { %"class.std::__1::__bitset.167" }
%"class.std::__1::__bitset.167" = type { i64 }
%"class.ityp::array" = type { %"struct.std::__1::array.168" }
%"struct.std::__1::array.168" = type { [4 x %"class.ityp::bitset.169"] }
%"class.ityp::bitset.169" = type { %"class.std::__1::bitset.170" }
%"class.std::__1::bitset.170" = type { %"class.std::__1::__bitset.171" }
%"class.std::__1::__bitset.171" = type { i64 }
%"class.dawn_native::vulkan::detail::VkHandle.172" = type { %struct.VkDebugUtilsMessengerEXT_T* }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T**, %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %struct.VkPhysicalDevice_T** }
%"struct.dawn_native::ExternalImageDescriptor" = type <{ i32, [4 x i8], %struct.WGPUTextureDescriptor*, i8, [7 x i8] }>
%struct.WGPUTextureDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, %struct.WGPUExtent3D, i32, i32, i32 }
%struct.WGPUChainedStruct = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUExtent3D = type { i32, i32, i32 }
%class.Result = type { i32, %"class.std::__1::unique_ptr.181", %"struct.dawn_native::vulkan::external_memory::MemoryImportParams" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.184" }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.186" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"struct.dawn_native::vulkan::external_memory::MemoryImportParams" = type { i64, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.Result.201 = type { i32, %"class.std::__1::unique_ptr.181", %"class.dawn_native::vulkan::detail::VkHandle.202" }
%"class.dawn_native::vulkan::detail::VkHandle.202" = type { %struct.VkDeviceMemory_T* }
%struct.VkImportMemoryFdInfoKHR = type { i32, i8*, i32, i32 }
%class.Result.203 = type { %"class.std::__1::unique_ptr.181" }
%class.Result.204 = type { i32, %"class.std::__1::unique_ptr.181", %"class.dawn_native::vulkan::detail::VkHandle.180" }
%"class.dawn_native::vulkan::detail::VkHandle.180" = type { %struct.VkImage_T* }
%struct.VkExternalMemoryImageCreateInfo = type { i32, i8*, i32 }

@.str = private unnamed_addr constant [54 x i8] c"ExternalImageDescriptor is not an OpaqueFD descriptor\00", align 1
@.str.1 = private unnamed_addr constant [88 x i8] c"../../third_party/dawn/src/dawn_native/vulkan/external_memory/MemoryServiceOpaqueFD.cpp\00", align 1
@__func__._ZN11dawn_native6vulkan15external_memory7Service21GetMemoryImportParamsEPKNS_23ExternalImageDescriptorENS0_6detail8VkHandleINS0_12VkTagVkImageEP9VkImage_TEE = private unnamed_addr constant [22 x i8] c"GetMemoryImportParams\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"Trying to import memory with invalid handle\00", align 1
@__func__._ZN11dawn_native6vulkan15external_memory7Service12ImportMemoryEiRKNS1_18MemoryImportParamsENS0_6detail8VkHandleINS0_12VkTagVkImageEP9VkImage_TEE = private unnamed_addr constant [13 x i8] c"ImportMemory\00", align 1
@.str.3 = private unnamed_addr constant [49 x i8] c"Requested allocation size is too small for image\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"vkAllocateMemory\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"CreateImage\00", align 1

@_ZN11dawn_native6vulkan15external_memory7ServiceC1EPNS0_6DeviceE = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::external_memory::Service"*, %"class.dawn_native::vulkan::Device"*), void (%"class.dawn_native::vulkan::external_memory::Service"*, %"class.dawn_native::vulkan::Device"*)* @_ZN11dawn_native6vulkan15external_memory7ServiceC2EPNS0_6DeviceE
@_ZN11dawn_native6vulkan15external_memory7ServiceD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::external_memory::Service"*), void (%"class.dawn_native::vulkan::external_memory::Service"*)* @_ZN11dawn_native6vulkan15external_memory7ServiceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15external_memory7ServiceC2EPNS0_6DeviceE(%"class.dawn_native::vulkan::external_memory::Service"* nocapture, %"class.dawn_native::vulkan::Device"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::external_memory::Service", %"class.dawn_native::vulkan::external_memory::Service"* %0, i64 0, i32 0
  store %"class.dawn_native::vulkan::Device"* %1, %"class.dawn_native::vulkan::Device"** %3, align 8
  %4 = getelementptr inbounds %"class.dawn_native::vulkan::external_memory::Service", %"class.dawn_native::vulkan::external_memory::Service"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = tail call dereferenceable(1800) %"struct.dawn_native::vulkan::VulkanDeviceInfo"* @_ZNK11dawn_native6vulkan6Device13GetDeviceInfoEv(%"class.dawn_native::vulkan::Device"* %1) #7
  %6 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %5, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK11dawn_native6vulkan17VulkanDeviceKnobs6HasExtENS0_9DeviceExtE(%"struct.dawn_native::vulkan::VulkanDeviceKnobs"* %6, i32 14) #7
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %4, align 8
  ret void
}

declare dereferenceable(1800) %"struct.dawn_native::vulkan::VulkanDeviceInfo"* @_ZNK11dawn_native6vulkan6Device13GetDeviceInfoEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native6vulkan17VulkanDeviceKnobs6HasExtENS0_9DeviceExtE(%"struct.dawn_native::vulkan::VulkanDeviceKnobs"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15external_memory7ServiceD2Ev(%"class.dawn_native::vulkan::external_memory::Service"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11dawn_native6vulkan15external_memory7Service20SupportsImportMemoryE8VkFormat11VkImageType13VkImageTilingjj(%"class.dawn_native::vulkan::external_memory::Service"* nocapture readonly, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.VkPhysicalDeviceExternalImageFormatInfo, align 8
  %8 = alloca %struct.VkPhysicalDeviceImageFormatInfo2, align 8
  %9 = alloca %struct.VkExternalImageFormatProperties, align 8
  %10 = alloca %struct.VkImageFormatProperties2, align 8
  %11 = getelementptr inbounds %"class.dawn_native::vulkan::external_memory::Service", %"class.dawn_native::vulkan::external_memory::Service"* %0, i64 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %52, label %14

14:                                               ; preds = %6
  %15 = bitcast %struct.VkPhysicalDeviceExternalImageFormatInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  %16 = getelementptr inbounds %struct.VkPhysicalDeviceExternalImageFormatInfo, %struct.VkPhysicalDeviceExternalImageFormatInfo* %7, i64 0, i32 0
  store i32 1000071000, i32* %16, align 8
  %17 = getelementptr inbounds %struct.VkPhysicalDeviceExternalImageFormatInfo, %struct.VkPhysicalDeviceExternalImageFormatInfo* %7, i64 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = getelementptr inbounds %struct.VkPhysicalDeviceExternalImageFormatInfo, %struct.VkPhysicalDeviceExternalImageFormatInfo* %7, i64 0, i32 2
  store i32 1, i32* %18, align 8
  %19 = bitcast %struct.VkPhysicalDeviceImageFormatInfo2* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 40, i1 false)
  %20 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 0
  store i32 1000059004, i32* %20, align 8
  %21 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 1
  %22 = bitcast i8** %21 to %struct.VkPhysicalDeviceExternalImageFormatInfo**
  store %struct.VkPhysicalDeviceExternalImageFormatInfo* %7, %struct.VkPhysicalDeviceExternalImageFormatInfo** %22, align 8
  %23 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 2
  store i32 %1, i32* %23, align 8
  %24 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 3
  store i32 %2, i32* %24, align 4
  %25 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 4
  store i32 %3, i32* %25, align 8
  %26 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 5
  store i32 %4, i32* %26, align 4
  %27 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 6
  store i32 %5, i32* %27, align 8
  %28 = bitcast %struct.VkExternalImageFormatProperties* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 32, i1 false)
  %29 = getelementptr inbounds %struct.VkExternalImageFormatProperties, %struct.VkExternalImageFormatProperties* %9, i64 0, i32 0
  store i32 1000071001, i32* %29, align 8
  %30 = getelementptr inbounds %struct.VkExternalImageFormatProperties, %struct.VkExternalImageFormatProperties* %9, i64 0, i32 1
  store i8* null, i8** %30, align 8
  %31 = bitcast %struct.VkImageFormatProperties2* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 48, i1 false)
  %32 = getelementptr inbounds %struct.VkImageFormatProperties2, %struct.VkImageFormatProperties2* %10, i64 0, i32 0
  store i32 1000059003, i32* %32, align 8
  %33 = getelementptr inbounds %struct.VkImageFormatProperties2, %struct.VkImageFormatProperties2* %10, i64 0, i32 1
  %34 = bitcast i8** %33 to %struct.VkExternalImageFormatProperties**
  store %struct.VkExternalImageFormatProperties* %9, %struct.VkExternalImageFormatProperties** %34, align 8
  %35 = getelementptr inbounds %"class.dawn_native::vulkan::external_memory::Service", %"class.dawn_native::vulkan::external_memory::Service"* %0, i64 0, i32 0
  %36 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %35, align 8
  %37 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %36, i64 0, i32 1, i32 40
  %38 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)** %37, align 8
  %39 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %36, i64 0, i32 0
  %40 = call %"class.dawn_native::AdapterBase"* @_ZNK11dawn_native10DeviceBase10GetAdapterEv(%"class.dawn_native::DeviceBase"* %39) #7
  %41 = bitcast %"class.dawn_native::AdapterBase"* %40 to %"class.dawn_native::vulkan::Adapter"*
  %42 = call %struct.VkPhysicalDevice_T* @_ZNK11dawn_native6vulkan7Adapter17GetPhysicalDeviceEv(%"class.dawn_native::vulkan::Adapter"* %41) #7
  %43 = call i32 %38(%struct.VkPhysicalDevice_T* %42, %struct.VkPhysicalDeviceImageFormatInfo2* nonnull %8, %struct.VkImageFormatProperties2* nonnull %10) #7
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %14
  %46 = getelementptr inbounds %struct.VkExternalImageFormatProperties, %struct.VkExternalImageFormatProperties* %9, i64 0, i32 2, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 4
  %49 = icmp ne i32 %48, 0
  br label %50

50:                                               ; preds = %14, %45
  %51 = phi i1 [ %49, %45 ], [ false, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #7
  br label %52

52:                                               ; preds = %6, %50
  %53 = phi i1 [ %51, %50 ], [ false, %6 ]
  ret i1 %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare %"class.dawn_native::AdapterBase"* @_ZNK11dawn_native10DeviceBase10GetAdapterEv(%"class.dawn_native::DeviceBase"*) local_unnamed_addr #1

declare %struct.VkPhysicalDevice_T* @_ZNK11dawn_native6vulkan7Adapter17GetPhysicalDeviceEv(%"class.dawn_native::vulkan::Adapter"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN11dawn_native6vulkan15external_memory7Service19SupportsCreateImageEPKNS_23ExternalImageDescriptorE8VkFormatj(%"class.dawn_native::vulkan::external_memory::Service"* nocapture readonly, %"struct.dawn_native::ExternalImageDescriptor"* nocapture readnone, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.dawn_native::vulkan::external_memory::Service", %"class.dawn_native::vulkan::external_memory::Service"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15external_memory7Service21GetMemoryImportParamsEPKNS_23ExternalImageDescriptorENS0_6detail8VkHandleINS0_12VkTagVkImageEP9VkImage_TEE(%class.Result* noalias nocapture sret, %"class.dawn_native::vulkan::external_memory::Service"* nocapture readnone, %"struct.dawn_native::ExternalImageDescriptor"* nocapture readonly, %struct.VkImage_T* nocapture readnone) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"struct.dawn_native::ExternalImageDescriptor", %"struct.dawn_native::ExternalImageDescriptor"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %4
  %10 = tail call i8* @_Znwm(i64 64) #8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i64* %12 to <2 x i64>*
  store <2 x i64> <i64 53, i64 -9223372036854775744>, <2 x i64>* %13, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 1 getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i64 53, i1 false) #7
  %14 = getelementptr inbounds i8, i8* %10, i64 53
  store i8 0, i8* %14, align 1
  %15 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__._ZN11dawn_native6vulkan15external_memory7Service21GetMemoryImportParamsEPKNS_23ExternalImageDescriptorENS0_6detail8VkHandleINS0_12VkTagVkImageEP9VkImage_TEE, i64 0, i64 0), i32 87) #7
  %16 = ptrtoint %"class.dawn_native::ErrorData"* %15 to i64
  %17 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 1, i32* %17, align 8
  %18 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %19 = bitcast %"class.std::__1::unique_ptr.181"* %18 to i64*
  store i64 %16, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %42

24:                                               ; preds = %9
  %25 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %25) #8
  br label %42

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"struct.dawn_native::ExternalImageDescriptor", %"struct.dawn_native::ExternalImageDescriptor"* %2, i64 2, i32 2
  %28 = bitcast %struct.WGPUTextureDescriptor** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.dawn_native::ExternalImageDescriptor", %"struct.dawn_native::ExternalImageDescriptor"* %2, i64 2, i32 3
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.181"* %34 to i64*
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2
  %37 = bitcast %"struct.dawn_native::vulkan::external_memory::MemoryImportParams"* %36 to i8*
  %38 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2, i32 0
  store i64 %29, i64* %38, align 8
  %39 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2, i32 1
  store i32 %32, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %37, i64 12
  %41 = bitcast i8* %40 to i32*
  store i32 -1431655766, i32* %41, align 4
  br label %42

42:                                               ; preds = %24, %9, %26
  ret void
}

declare %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32, %"class.std::__1::basic_string"*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15external_memory7Service12ImportMemoryEiRKNS1_18MemoryImportParamsENS0_6detail8VkHandleINS0_12VkTagVkImageEP9VkImage_TEE(%class.Result.201* noalias nocapture sret, %"class.dawn_native::vulkan::external_memory::Service"* nocapture readonly, i32, %"struct.dawn_native::vulkan::external_memory::MemoryImportParams"* nocapture readonly dereferenceable(16), %struct.VkImage_T*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %struct.VkMemoryRequirements, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %struct.VkImportMemoryFdInfoKHR, align 8
  %10 = alloca %struct.VkMemoryAllocateInfo, align 8
  %11 = alloca %"class.dawn_native::vulkan::detail::VkHandle.202", align 8
  %12 = alloca %class.Result.203, align 8
  %13 = icmp slt i32 %2, 0
  br i1 %13, label %14, label %32

14:                                               ; preds = %5
  %15 = tail call i8* @_Znwm(i64 48) #8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 43, i64 -9223372036854775760>, <2 x i64>* %18, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i64 43, i1 false) #7
  %19 = getelementptr inbounds i8, i8* %15, i64 43
  store i8 0, i8* %19, align 1
  %20 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__._ZN11dawn_native6vulkan15external_memory7Service12ImportMemoryEiRKNS1_18MemoryImportParamsENS0_6detail8VkHandleINS0_12VkTagVkImageEP9VkImage_TEE, i64 0, i64 0), i32 101) #7
  %21 = ptrtoint %"class.dawn_native::ErrorData"* %20 to i64
  %22 = getelementptr inbounds %class.Result.201, %class.Result.201* %0, i64 0, i32 0
  store i32 1, i32* %22, align 8
  %23 = getelementptr inbounds %class.Result.201, %class.Result.201* %0, i64 0, i32 1
  %24 = bitcast %"class.std::__1::unique_ptr.181"* %23 to i64*
  store i64 %21, i64* %24, align 8
  %25 = getelementptr inbounds %class.Result.201, %class.Result.201* %0, i64 0, i32 2, i32 0
  store %struct.VkDeviceMemory_T* null, %struct.VkDeviceMemory_T** %25, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %127

30:                                               ; preds = %14
  %31 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %31) #8
  br label %127

32:                                               ; preds = %5
  %33 = bitcast %struct.VkMemoryRequirements* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  %34 = getelementptr inbounds %"class.dawn_native::vulkan::external_memory::Service", %"class.dawn_native::vulkan::external_memory::Service"* %1, i64 0, i32 0
  %35 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %34, align 8
  %36 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %35, i64 0, i32 1, i32 146
  %37 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)** %36, align 8
  %38 = tail call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %35) #7
  call void %37(%struct.VkDevice_T* %38, %struct.VkImage_T* %4, %struct.VkMemoryRequirements* nonnull %7) #7
  %39 = getelementptr inbounds %struct.VkMemoryRequirements, %struct.VkMemoryRequirements* %7, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.dawn_native::vulkan::external_memory::MemoryImportParams", %"struct.dawn_native::vulkan::external_memory::MemoryImportParams"* %3, i64 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %40, %42
  br i1 %43, label %44, label %62

44:                                               ; preds = %32
  %45 = call i8* @_Znwm(i64 64) #8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %45, i8** %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast i64* %47 to <2 x i64>*
  store <2 x i64> <i64 48, i64 -9223372036854775744>, <2 x i64>* %48, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i64 48, i1 false) #7
  %49 = getelementptr inbounds i8, i8* %45, i64 48
  store i8 0, i8* %49, align 1
  %50 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__._ZN11dawn_native6vulkan15external_memory7Service12ImportMemoryEiRKNS1_18MemoryImportParamsENS0_6detail8VkHandleINS0_12VkTagVkImageEP9VkImage_TEE, i64 0, i64 0), i32 107) #7
  %51 = ptrtoint %"class.dawn_native::ErrorData"* %50 to i64
  %52 = getelementptr inbounds %class.Result.201, %class.Result.201* %0, i64 0, i32 0
  store i32 1, i32* %52, align 8
  %53 = getelementptr inbounds %class.Result.201, %class.Result.201* %0, i64 0, i32 1
  %54 = bitcast %"class.std::__1::unique_ptr.181"* %53 to i64*
  store i64 %51, i64* %54, align 8
  %55 = getelementptr inbounds %class.Result.201, %class.Result.201* %0, i64 0, i32 2, i32 0
  store %struct.VkDeviceMemory_T* null, %struct.VkDeviceMemory_T** %55, align 8
  %56 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %126

60:                                               ; preds = %44
  %61 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %61) #8
  br label %126

62:                                               ; preds = %32
  %63 = bitcast %struct.VkImportMemoryFdInfoKHR* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #7
  %64 = bitcast %struct.VkImportMemoryFdInfoKHR* %9 to i64*
  store i64 -6148914691236517206, i64* %64, align 8
  %65 = getelementptr inbounds %struct.VkImportMemoryFdInfoKHR, %struct.VkImportMemoryFdInfoKHR* %9, i64 0, i32 0
  store i32 1000074000, i32* %65, align 8
  %66 = getelementptr inbounds %struct.VkImportMemoryFdInfoKHR, %struct.VkImportMemoryFdInfoKHR* %9, i64 0, i32 1
  store i8* null, i8** %66, align 8
  %67 = getelementptr inbounds %struct.VkImportMemoryFdInfoKHR, %struct.VkImportMemoryFdInfoKHR* %9, i64 0, i32 2
  store i32 1, i32* %67, align 8
  %68 = getelementptr inbounds %struct.VkImportMemoryFdInfoKHR, %struct.VkImportMemoryFdInfoKHR* %9, i64 0, i32 3
  store i32 %2, i32* %68, align 4
  %69 = bitcast %struct.VkMemoryAllocateInfo* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 32, i1 false)
  %70 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %10, i64 0, i32 0
  store i32 5, i32* %70, align 8
  %71 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %10, i64 0, i32 1
  %72 = bitcast i8** %71 to %struct.VkImportMemoryFdInfoKHR**
  store %struct.VkImportMemoryFdInfoKHR* %9, %struct.VkImportMemoryFdInfoKHR** %72, align 8
  %73 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %10, i64 0, i32 2
  store i64 %42, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.dawn_native::vulkan::external_memory::MemoryImportParams", %"struct.dawn_native::vulkan::external_memory::MemoryImportParams"* %3, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %10, i64 0, i32 3
  store i32 %75, i32* %76, align 8
  %77 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.202"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #7
  %78 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.202", %"class.dawn_native::vulkan::detail::VkHandle.202"* %11, i64 0, i32 0
  store %struct.VkDeviceMemory_T* null, %struct.VkDeviceMemory_T** %78, align 8
  %79 = bitcast %class.Result.203* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #7
  %80 = getelementptr inbounds %class.Result.203, %class.Result.203* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %80, align 8
  %81 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %34, align 8
  %82 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %81, i64 0, i32 1, i32 50
  %83 = load i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)** %82, align 8
  %84 = call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %81) #7
  %85 = call i32 %83(%struct.VkDevice_T* %84, %struct.VkMemoryAllocateInfo* nonnull %10, %struct.VkAllocationCallbacks* null, %struct.VkDeviceMemory_T** nonnull %78) #7
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.203* nonnull sret %12, i32 %85, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #7
  %86 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %80, align 8
  %87 = icmp eq %"class.dawn_native::ErrorData"* %86, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %80, align 8
  br i1 %87, label %117, label %88, !prof !3

88:                                               ; preds = %62
  %89 = ptrtoint %"class.dawn_native::ErrorData"* %86 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %86, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__._ZN11dawn_native6vulkan15external_memory7Service12ImportMemoryEiRKNS1_18MemoryImportParamsENS0_6detail8VkHandleINS0_12VkTagVkImageEP9VkImage_TEE, i64 0, i64 0), i32 125) #7
  %90 = getelementptr inbounds %class.Result.201, %class.Result.201* %0, i64 0, i32 0
  store i32 1, i32* %90, align 8
  %91 = getelementptr inbounds %class.Result.201, %class.Result.201* %0, i64 0, i32 1
  %92 = bitcast %"class.std::__1::unique_ptr.181"* %91 to i64*
  store i64 %89, i64* %92, align 8
  %93 = getelementptr inbounds %class.Result.201, %class.Result.201* %0, i64 0, i32 2, i32 0
  store %struct.VkDeviceMemory_T* null, %struct.VkDeviceMemory_T** %93, align 8
  %94 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %80, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %80, align 8
  %95 = icmp eq %"class.dawn_native::ErrorData"* %94, null
  br i1 %95, label %116, label %96

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %94, i64 0, i32 2, i32 0, i32 0
  %98 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %97, align 8
  %99 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %98 to i64
  %102 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %94, i64 0, i32 2, i32 0, i32 1
  %103 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %98 to i8*
  call void @_ZdlPv(i8* %104) #8
  br label %105

105:                                              ; preds = %100, %96
  %106 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %94, i64 0, i32 1
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #8
  br label %114

114:                                              ; preds = %111, %105
  %115 = bitcast %"class.dawn_native::ErrorData"* %94 to i8*
  call void @_ZdlPv(i8* %115) #8
  br label %116

116:                                              ; preds = %88, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #7
  br label %125

117:                                              ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #7
  %118 = getelementptr inbounds %class.Result.201, %class.Result.201* %0, i64 0, i32 0
  store i32 0, i32* %118, align 8
  %119 = getelementptr inbounds %class.Result.201, %class.Result.201* %0, i64 0, i32 1
  %120 = bitcast %"class.std::__1::unique_ptr.181"* %119 to i64*
  store i64 0, i64* %120, align 8
  %121 = getelementptr inbounds %class.Result.201, %class.Result.201* %0, i64 0, i32 2
  %122 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.202"* %11 to i64*
  %123 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.202"* %121 to i64*
  %124 = load i64, i64* %122, align 8
  store i64 %124, i64* %123, align 8
  br label %125

125:                                              ; preds = %116, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #7
  br label %126

126:                                              ; preds = %60, %44, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #7
  br label %127

127:                                              ; preds = %30, %14, %126
  ret void
}

declare %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #1

declare void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.203* sret, i32, i8*) local_unnamed_addr #1

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15external_memory7Service11CreateImageEPKNS_23ExternalImageDescriptorERK17VkImageCreateInfo(%class.Result.204* noalias nocapture sret, %"class.dawn_native::vulkan::external_memory::Service"* nocapture readonly, %"struct.dawn_native::ExternalImageDescriptor"* nocapture readnone, %struct.VkImageCreateInfo* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.VkExternalMemoryImageCreateInfo, align 8
  %6 = alloca %struct.VkImageCreateInfo, align 8
  %7 = alloca %"class.dawn_native::vulkan::detail::VkHandle.180", align 8
  %8 = alloca %class.Result.203, align 8
  %9 = bitcast %struct.VkExternalMemoryImageCreateInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = getelementptr inbounds %struct.VkExternalMemoryImageCreateInfo, %struct.VkExternalMemoryImageCreateInfo* %5, i64 0, i32 0
  store i32 1000072001, i32* %10, align 8
  %11 = getelementptr inbounds %struct.VkExternalMemoryImageCreateInfo, %struct.VkExternalMemoryImageCreateInfo* %5, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %struct.VkExternalMemoryImageCreateInfo, %struct.VkExternalMemoryImageCreateInfo* %5, i64 0, i32 2
  store i32 1, i32* %12, align 8
  %13 = bitcast %struct.VkImageCreateInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %13) #7
  %14 = bitcast %struct.VkImageCreateInfo* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %14, i64 88, i1 false)
  %15 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %6, i64 0, i32 1
  %16 = bitcast i8** %15 to %struct.VkExternalMemoryImageCreateInfo**
  store %struct.VkExternalMemoryImageCreateInfo* %5, %struct.VkExternalMemoryImageCreateInfo** %16, align 8
  %17 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %6, i64 0, i32 2
  store i32 1024, i32* %17, align 8
  %18 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %6, i64 0, i32 9
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %6, i64 0, i32 14
  store i32 0, i32* %19, align 8
  %20 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.180"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.180", %"class.dawn_native::vulkan::detail::VkHandle.180"* %7, i64 0, i32 0
  store %struct.VkImage_T* null, %struct.VkImage_T** %21, align 8
  %22 = bitcast %class.Result.203* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7
  %23 = getelementptr inbounds %class.Result.203, %class.Result.203* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %23, align 8
  %24 = getelementptr inbounds %"class.dawn_native::vulkan::external_memory::Service", %"class.dawn_native::vulkan::external_memory::Service"* %1, i64 0, i32 0
  %25 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %24, align 8
  %26 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %25, i64 0, i32 1, i32 108
  %27 = load i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)** %26, align 8
  %28 = call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %25) #7
  %29 = call i32 %27(%struct.VkDevice_T* %28, %struct.VkImageCreateInfo* nonnull %6, %struct.VkAllocationCallbacks* null, %struct.VkImage_T** nonnull %21) #7
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.203* nonnull sret %8, i32 %29, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0)) #7
  %30 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %23, align 8
  %31 = icmp eq %"class.dawn_native::ErrorData"* %30, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %23, align 8
  br i1 %31, label %61, label %32, !prof !3

32:                                               ; preds = %4
  %33 = ptrtoint %"class.dawn_native::ErrorData"* %30 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %30, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i32 147) #7
  %34 = getelementptr inbounds %class.Result.204, %class.Result.204* %0, i64 0, i32 0
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds %class.Result.204, %class.Result.204* %0, i64 0, i32 1
  %36 = bitcast %"class.std::__1::unique_ptr.181"* %35 to i64*
  store i64 %33, i64* %36, align 8
  %37 = getelementptr inbounds %class.Result.204, %class.Result.204* %0, i64 0, i32 2, i32 0
  store %struct.VkImage_T* null, %struct.VkImage_T** %37, align 8
  %38 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %23, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %23, align 8
  %39 = icmp eq %"class.dawn_native::ErrorData"* %38, null
  br i1 %39, label %60, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %38, i64 0, i32 2, i32 0, i32 0
  %42 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %41, align 8
  %43 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %42 to i64
  %46 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %38, i64 0, i32 2, i32 0, i32 1
  %47 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %42 to i8*
  call void @_ZdlPv(i8* %48) #8
  br label %49

49:                                               ; preds = %44, %40
  %50 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %38, i64 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #8
  br label %58

58:                                               ; preds = %55, %49
  %59 = bitcast %"class.dawn_native::ErrorData"* %38 to i8*
  call void @_ZdlPv(i8* %59) #8
  br label %60

60:                                               ; preds = %32, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  br label %69

61:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  %62 = getelementptr inbounds %class.Result.204, %class.Result.204* %0, i64 0, i32 0
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %class.Result.204, %class.Result.204* %0, i64 0, i32 1
  %64 = bitcast %"class.std::__1::unique_ptr.181"* %63 to i64*
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds %class.Result.204, %class.Result.204* %0, i64 0, i32 2
  %66 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.180"* %7 to i64*
  %67 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.180"* %65 to i64*
  %68 = load i64, i64* %66, align 8
  store i64 %68, i64* %67, align 8
  br label %69

69:                                               ; preds = %60, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
