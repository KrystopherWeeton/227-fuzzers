; ModuleID = '../../cc/trees/layer_tree_settings.cc'
source_filename = "../../cc/trees/layer_tree_settings.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.base::TimeDelta" = type { i64 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::SchedulerSettings" = type { i8, i8, i8, i8, i8, i8, i32 }

@_ZTVN2cc17LayerTreeSettingsE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::LayerTreeSettings"*)* @_ZN2cc17LayerTreeSettingsD2Ev to i8*), i8* bitcast (void (%"class.cc::LayerTreeSettings"*)* @_ZN2cc17LayerTreeSettingsD0Ev to i8*)] }, align 8
@_ZN2cc19ManagedMemoryPolicy25kDefaultNumResourcesLimitE = external local_unnamed_addr constant i64, align 8

@_ZN2cc17LayerTreeSettingsC1Ev = hidden unnamed_addr alias void (%"class.cc::LayerTreeSettings"*), void (%"class.cc::LayerTreeSettings"*)* @_ZN2cc17LayerTreeSettingsC2Ev
@_ZN2cc17LayerTreeSettingsC1ERKS0_ = hidden unnamed_addr alias void (%"class.cc::LayerTreeSettings"*, %"class.cc::LayerTreeSettings"*), void (%"class.cc::LayerTreeSettings"*, %"class.cc::LayerTreeSettings"*)* @_ZN2cc17LayerTreeSettingsC2ERKS0_
@_ZN2cc17LayerTreeSettingsD1Ev = hidden unnamed_addr alias void (%"class.cc::LayerTreeSettings"*), void (%"class.cc::LayerTreeSettings"*)* @_ZN2cc17LayerTreeSettingsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17LayerTreeSettingsC2Ev(%"class.cc::LayerTreeSettings"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2cc17LayerTreeSettingsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 1
  tail call void @_ZN3viz16ResourceSettingsC1Ev(%"class.viz::ResourceSettings"* %3) #6
  %4 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 2
  store i8 1, i8* %4, align 2
  %5 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 3
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 4
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 5
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 7
  store i32 3, i32* %8, align 8
  %9 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 8
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 9
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 10
  store i8 1, i8* %11, align 2
  %12 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 11
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 12
  store i32 -1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 13
  store float 0x3FC99999A0000000, float* %14, align 4
  %15 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 14
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 15
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 17
  %18 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 23
  %19 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 29, i1 false)
  store i32 -1, i32* %18, align 4
  %20 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 24, i32 0
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 25
  store i8 1, i8* %21, align 8
  %22 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 26
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 28
  store float 2.500000e-01, float* %23, align 4
  %24 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 29
  store float 5.000000e-01, float* %24, align 8
  %25 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 30
  store float 5.000000e-01, float* %25, align 4
  %26 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 31, i32 0
  %27 = bitcast i32* %26 to <4 x i32>*
  store <4 x i32> <i32 256, i32 256, i32 512, i32 512>, <4 x i32>* %27, align 4
  %28 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 33, i32 0
  %29 = bitcast i32* %28 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 256, i32 160>, <4 x i32>* %29, align 4
  %30 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 35, i32 1
  store i32 160, i32* %30, align 4
  %31 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 36
  store i32 3000, i32* %31, align 4
  %32 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 37
  store float 1.000000e+00, float* %32, align 8
  %33 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 38
  store i32 2000, i32* %33, align 4
  %34 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 39
  store i64 100, i64* %34, align 8
  %35 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 40
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 41
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 42
  store i8 0, i8* %37, align 2
  %38 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 44
  store i64 32, i64* %38, align 8
  %39 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 45
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 46
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 48
  store i32 33554432, i32* %41, align 4
  %42 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 49
  %43 = load i64, i64* @_ZN2cc19ManagedMemoryPolicy25kDefaultNumResourcesLimitE, align 8
  tail call void @_ZN2cc19ManagedMemoryPolicyC1EmN3gpu16MemoryAllocation14PriorityCutoffEm(%"struct.cc::ManagedMemoryPolicy"* %42, i64 67108864, i32 3, i64 %43) #6
  %44 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 50
  store i64 134217728, i64* %44, align 8
  %45 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 51
  store i32 1000, i32* %45, align 8
  %46 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 52
  %47 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 56
  %48 = bitcast i8* %46 to i32*
  store i32 0, i32* %48, align 4
  store i64 1048576, i64* %47, align 8
  %49 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 57
  store i8 0, i8* %49, align 8
  %50 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 59
  tail call void @_ZN2cc19LayerTreeDebugStateC1Ev(%"class.cc::LayerTreeDebugState"* %50) #6
  %51 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 60
  %52 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 64
  %53 = bitcast i8* %51 to i32*
  store i32 0, i32* %53, align 8
  store i8 1, i8* %52, align 4
  %54 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 65
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 66
  store i8 0, i8* %55, align 2
  %56 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 67
  store i8 1, i8* %56, align 1
  %57 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 68
  store i8 1, i8* %57, align 8
  %58 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 69
  store i8 1, i8* %58, align 1
  %59 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 70
  store i8 0, i8* %59, align 2
  %60 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 71
  store i8 1, i8* %60, align 1
  %61 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 72
  store i8 0, i8* %61, align 4
  %62 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 73
  store i8 1, i8* %62, align 1
  %63 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 74
  store i8 0, i8* %63, align 2
  %64 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 75
  store i8 1, i8* %64, align 1
  %65 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 76
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 77
  store i8 0, i8* %66, align 1
  ret void
}

declare void @_ZN3viz16ResourceSettingsC1Ev(%"class.viz::ResourceSettings"*) unnamed_addr #1

declare void @_ZN2cc19ManagedMemoryPolicyC1EmN3gpu16MemoryAllocation14PriorityCutoffEm(%"struct.cc::ManagedMemoryPolicy"*, i64, i32, i64) unnamed_addr #1

declare void @_ZN2cc19LayerTreeDebugStateC1Ev(%"class.cc::LayerTreeDebugState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17LayerTreeSettingsC2ERKS0_(%"class.cc::LayerTreeSettings"*, %"class.cc::LayerTreeSettings"* dereferenceable(296)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2cc17LayerTreeSettingsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %1, i64 0, i32 1
  tail call void @_ZN3viz16ResourceSettingsC1ERKS0_(%"class.viz::ResourceSettings"* %4, %"class.viz::ResourceSettings"* dereferenceable(2) %5) #6
  %6 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %1, i64 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %6, i8* align 2 %7, i64 215, i1 false)
  %8 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 59
  %9 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %1, i64 0, i32 59
  tail call void @_ZN2cc19LayerTreeDebugStateC1ERKS0_(%"class.cc::LayerTreeDebugState"* %8, %"class.cc::LayerTreeDebugState"* dereferenceable(40) %9) #6
  %10 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 60
  %11 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %1, i64 0, i32 60
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 18, i1 false)
  ret void
}

declare void @_ZN3viz16ResourceSettingsC1ERKS0_(%"class.viz::ResourceSettings"*, %"class.viz::ResourceSettings"* dereferenceable(2)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN2cc19LayerTreeDebugStateC1ERKS0_(%"class.cc::LayerTreeDebugState"*, %"class.cc::LayerTreeDebugState"* dereferenceable(40)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17LayerTreeSettingsD2Ev(%"class.cc::LayerTreeSettings"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2cc17LayerTreeSettingsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 59
  tail call void @_ZN2cc19LayerTreeDebugStateD1Ev(%"class.cc::LayerTreeDebugState"* %3) #6
  %4 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 1
  tail call void @_ZN3viz16ResourceSettingsD1Ev(%"class.viz::ResourceSettings"* %4) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc19LayerTreeDebugStateD1Ev(%"class.cc::LayerTreeDebugState"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3viz16ResourceSettingsD1Ev(%"class.viz::ResourceSettings"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17LayerTreeSettingsD0Ev(%"class.cc::LayerTreeSettings"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2cc17LayerTreeSettingsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 59
  tail call void @_ZN2cc19LayerTreeDebugStateD1Ev(%"class.cc::LayerTreeDebugState"* %3) #6
  %4 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 1
  tail call void @_ZN3viz16ResourceSettingsD1Ev(%"class.viz::ResourceSettings"* %4) #6
  %5 = bitcast %"class.cc::LayerTreeSettings"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc17LayerTreeSettings19ToSchedulerSettingsEv(%"class.cc::SchedulerSettings"* noalias sret, %"class.cc::LayerTreeSettings"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::SchedulerSettings", %"class.cc::SchedulerSettings"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 -86, i64 12, i1 false)
  tail call void @_ZN2cc17SchedulerSettingsC1Ev(%"class.cc::SchedulerSettings"* %0) #6
  %4 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %1, i64 0, i32 3
  %5 = load i8, i8* %4, align 1, !range !2
  store i8 %5, i8* %3, align 4
  %6 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %1, i64 0, i32 4
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = getelementptr inbounds %"class.cc::SchedulerSettings", %"class.cc::SchedulerSettings"* %0, i64 0, i32 2
  store i8 %7, i8* %8, align 2
  %9 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %1, i64 0, i32 8
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = getelementptr inbounds %"class.cc::SchedulerSettings", %"class.cc::SchedulerSettings"* %0, i64 0, i32 3
  store i8 %10, i8* %11, align 1
  %12 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %1, i64 0, i32 9
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = getelementptr inbounds %"class.cc::SchedulerSettings", %"class.cc::SchedulerSettings"* %0, i64 0, i32 4
  store i8 %13, i8* %14, align 4
  %15 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %1, i64 0, i32 62
  %16 = load i8, i8* %15, align 2, !range !2
  %17 = getelementptr inbounds %"class.cc::SchedulerSettings", %"class.cc::SchedulerSettings"* %0, i64 0, i32 5
  store i8 %16, i8* %17, align 1
  ret void
}

declare void @_ZN2cc17SchedulerSettingsC1Ev(%"class.cc::SchedulerSettings"*) unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK2cc17LayerTreeSettings21ToTileManagerSettingsEv(%"class.cc::LayerTreeSettings"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 41
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 54
  %5 = load i8, i8* %4, align 2, !range !2
  %6 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %0, i64 0, i32 56
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %5 to i64
  %9 = shl nuw nsw i64 %8, 8
  %10 = zext i8 %3 to i64
  %11 = or i64 %9, %10
  %12 = or i64 %11, -6148914691236560896
  %13 = insertvalue { i64, i64 } undef, i64 %12, 0
  %14 = insertvalue { i64, i64 } %13, i64 %7, 1
  ret { i64, i64 } %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
