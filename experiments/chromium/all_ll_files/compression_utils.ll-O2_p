; ModuleID = '../../third_party/zlib/google/compression_utils.cc'
source_filename = "../../third_party/zlib/google/compression_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11compression12GzipCompressEN4base4spanIKcLm18446744073709551615EEEPcmPmPFPvmEPFvS6_E(i64, i8*, i8*, i64, i64* nocapture, i8* (i64)*, void (i8*)*) local_unnamed_addr #0 {
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  store i64 %3, i64* %8, align 8
  %10 = call i32 @_ZN13zlib_internal18GzipCompressHelperEPhPmPKhmPFPvmEPFvS4_E(i8* %2, i64* nonnull %8, i8* %1, i64 %0, i8* (i64)* %5, void (i8*)* %6) #5
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = load i64, i64* %8, align 8
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi i1 [ true, %12 ], [ false, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  ret i1 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN13zlib_internal18GzipCompressHelperEPhPmPKhmPFPvmEPFvS4_E(i8*, i64*, i8*, i64, i8* (i64)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11compression12GzipCompressEN4base4spanIKcLm18446744073709551615EEEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i64, i8*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN11compression12GzipCompressEN4base4spanIKhLm18446744073709551615EEEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i64 %0, i8* %1, %"class.std::__1::basic_string"* %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11compression12GzipCompressEN4base4spanIKhLm18446744073709551615EEEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i64, i8*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = tail call i64 @_ZN13zlib_internal26GzipExpectedCompressedSizeEm(i64 %0) #5
  store i64 %7, i64* %4, align 8
  %8 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %9 = call zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64 %7, i8** nonnull %5) #5
  br i1 %9, label %10, label %166

10:                                               ; preds = %3
  %11 = load i8*, i8** %5, align 8
  %12 = call i32 @_ZN13zlib_internal18GzipCompressHelperEPhPmPKhmPFPvmEPFvS4_E(i8* %11, i64* nonnull %4, i8* %1, i64 %0, i8* (i64)* null, void (i8*)* null) #5
  %13 = icmp eq i32 %12, 0
  %14 = load i8*, i8** %5, align 8
  br i1 %13, label %15, label %163

15:                                               ; preds = %10
  %16 = load i64, i64* %4, align 8
  %17 = call i8* @realloc(i8* %14, i64 %16) #5
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = load i8*, i8** %5, align 8
  br label %163

21:                                               ; preds = %15
  %22 = load i64, i64* %4, align 8
  %23 = getelementptr inbounds i8, i8* %17, i64 %22
  %24 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 9223372036854775807
  %32 = add nsw i64 %31, -1
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %32, %28 ], [ 22, %21 ]
  %35 = icmp ugt i64 %22, %34
  br i1 %35, label %36, label %46

36:                                               ; preds = %33
  br i1 %27, label %37, label %40

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  br label %42

40:                                               ; preds = %36
  %41 = zext i8 %26 to i64
  br label %42

42:                                               ; preds = %40, %37
  %43 = phi i64 [ %39, %37 ], [ %41, %40 ]
  %44 = sub i64 %22, %34
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %34, i64 %44, i64 %43, i64 0, i64 %43, i64 0) #5
  %45 = load i8, i8* %25, align 1
  br label %46

46:                                               ; preds = %42, %33
  %47 = phi i8 [ %26, %33 ], [ %45, %42 ]
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  br label %54

52:                                               ; preds = %46
  %53 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %54

54:                                               ; preds = %52, %49
  %55 = phi i8* [ %51, %49 ], [ %53, %52 ]
  %56 = icmp eq i64 %22, 0
  br i1 %56, label %155, label %57

57:                                               ; preds = %54
  %58 = icmp ult i64 %22, 32
  br i1 %58, label %145, label %59

59:                                               ; preds = %57
  %60 = getelementptr i8, i8* %55, i64 %22
  %61 = icmp ult i8* %55, %23
  %62 = icmp ult i8* %17, %60
  %63 = and i1 %61, %62
  br i1 %63, label %145, label %64

64:                                               ; preds = %59
  %65 = and i64 %22, -32
  %66 = getelementptr i8, i8* %55, i64 %65
  %67 = getelementptr i8, i8* %17, i64 %65
  %68 = add i64 %65, -32
  %69 = lshr exact i64 %68, 5
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 96
  br i1 %72, label %124, label %73

73:                                               ; preds = %64
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %121, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %122, %75 ]
  %78 = getelementptr i8, i8* %55, i64 %76
  %79 = getelementptr i8, i8* %17, i64 %76
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !2
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !2
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !5, !noalias !2
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !5, !noalias !2
  %88 = or i64 %76, 32
  %89 = getelementptr i8, i8* %55, i64 %88
  %90 = getelementptr i8, i8* %17, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !2
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !2
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !5, !noalias !2
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !5, !noalias !2
  %99 = or i64 %76, 64
  %100 = getelementptr i8, i8* %55, i64 %99
  %101 = getelementptr i8, i8* %17, i64 %99
  %102 = bitcast i8* %101 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !alias.scope !2
  %104 = getelementptr i8, i8* %101, i64 16
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 1, !alias.scope !2
  %107 = bitcast i8* %100 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %107, align 1, !alias.scope !5, !noalias !2
  %108 = getelementptr i8, i8* %100, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %109, align 1, !alias.scope !5, !noalias !2
  %110 = or i64 %76, 96
  %111 = getelementptr i8, i8* %55, i64 %110
  %112 = getelementptr i8, i8* %17, i64 %110
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !2
  %115 = getelementptr i8, i8* %112, i64 16
  %116 = bitcast i8* %115 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 1, !alias.scope !2
  %118 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %118, align 1, !alias.scope !5, !noalias !2
  %119 = getelementptr i8, i8* %111, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  store <16 x i8> %117, <16 x i8>* %120, align 1, !alias.scope !5, !noalias !2
  %121 = add i64 %76, 128
  %122 = add i64 %77, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %75, !llvm.loop !7

124:                                              ; preds = %75, %64
  %125 = phi i64 [ 0, %64 ], [ %121, %75 ]
  %126 = icmp eq i64 %71, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %124, %127
  %128 = phi i64 [ %140, %127 ], [ %125, %124 ]
  %129 = phi i64 [ %141, %127 ], [ %71, %124 ]
  %130 = getelementptr i8, i8* %55, i64 %128
  %131 = getelementptr i8, i8* %17, i64 %128
  %132 = bitcast i8* %131 to <16 x i8>*
  %133 = load <16 x i8>, <16 x i8>* %132, align 1, !alias.scope !2
  %134 = getelementptr i8, i8* %131, i64 16
  %135 = bitcast i8* %134 to <16 x i8>*
  %136 = load <16 x i8>, <16 x i8>* %135, align 1, !alias.scope !2
  %137 = bitcast i8* %130 to <16 x i8>*
  store <16 x i8> %133, <16 x i8>* %137, align 1, !alias.scope !5, !noalias !2
  %138 = getelementptr i8, i8* %130, i64 16
  %139 = bitcast i8* %138 to <16 x i8>*
  store <16 x i8> %136, <16 x i8>* %139, align 1, !alias.scope !5, !noalias !2
  %140 = add i64 %128, 32
  %141 = add i64 %129, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %127, !llvm.loop !9

143:                                              ; preds = %127, %124
  %144 = icmp eq i64 %22, %65
  br i1 %144, label %155, label %145

145:                                              ; preds = %143, %59, %57
  %146 = phi i8* [ %55, %59 ], [ %55, %57 ], [ %66, %143 ]
  %147 = phi i8* [ %17, %59 ], [ %17, %57 ], [ %67, %143 ]
  br label %148

148:                                              ; preds = %145, %148
  %149 = phi i8* [ %153, %148 ], [ %146, %145 ]
  %150 = phi i8* [ %152, %148 ], [ %147, %145 ]
  %151 = load i8, i8* %150, align 1
  store i8 %151, i8* %149, align 1
  %152 = getelementptr inbounds i8, i8* %150, i64 1
  %153 = getelementptr inbounds i8, i8* %149, i64 1
  %154 = icmp eq i8* %152, %23
  br i1 %154, label %155, label %148, !llvm.loop !11

155:                                              ; preds = %148, %143, %54
  %156 = phi i8* [ %55, %54 ], [ %66, %143 ], [ %153, %148 ]
  store i8 0, i8* %156, align 1
  %157 = load i8, i8* %25, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %160, align 8
  br label %163

161:                                              ; preds = %155
  %162 = trunc i64 %22 to i8
  store i8 %162, i8* %25, align 1
  br label %163

163:                                              ; preds = %161, %159, %10, %19
  %164 = phi i8* [ %20, %19 ], [ %14, %10 ], [ %17, %159 ], [ %17, %161 ]
  %165 = phi i1 [ false, %19 ], [ false, %10 ], [ true, %159 ], [ true, %161 ]
  call void @free(i8* %164) #5
  br label %166

166:                                              ; preds = %163, %3
  %167 = phi i1 [ false, %3 ], [ %165, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  ret i1 %167
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @_ZN13zlib_internal26GzipExpectedCompressedSizeEm(i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64, i8**) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11compression14GzipUncompressERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 16
  %4 = alloca i64, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 24, i1 false) #5
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = select i1 %11, i8* %13, i8* %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %10 to i64
  %19 = select i1 %11, i64 %17, i64 %18
  %20 = tail call i32 @_ZN13zlib_internal23GetGzipUncompressedSizeEPKhm(i8* %15, i64 %19) #5
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %4, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* nonnull %3, i64 %21, i8 signext 0) #5
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %6, align 16
  %27 = select i1 %25, i8* %26, i8* %5
  %28 = load i8, i8* %9, align 1
  %29 = icmp slt i8 %28, 0
  %30 = load i8*, i8** %12, align 8
  %31 = load i64, i64* %16, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i8* %30, i8* %14
  %34 = select i1 %29, i64 %31, i64 %32
  %35 = call i32 @_ZN13zlib_internal20GzipUncompressHelperEPhPmPKhm(i8* %27, i64* nonnull %4, i8* %33, i64 %34) #5
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %2
  %38 = load i8, i8* %23, align 1
  br label %49

39:                                               ; preds = %2
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %41 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 16 %5, i64 24, i1 false) #5
  %46 = bitcast %"class.std::__1::basic_string"* %3 to <2 x i64>*
  store <2 x i64> %42, <2 x i64>* %46, align 16
  store i64 %44, i64* %40, align 16
  %47 = lshr i64 %44, 56
  %48 = trunc i64 %47 to i8
  br label %49

49:                                               ; preds = %37, %39
  %50 = phi i8 [ %48, %39 ], [ %38, %37 ]
  %51 = phi i1 [ true, %39 ], [ false, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  %52 = icmp slt i8 %50, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = load i8*, i8** %6, align 16
  call void @_ZdlPv(i8* %54) #6
  br label %55

55:                                               ; preds = %49, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11compression19GetUncompressedSizeEN4base4spanIKcLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #0 {
  %3 = tail call i32 @_ZN13zlib_internal23GetGzipUncompressedSizeEPKhm(i8* %1, i64 %0) #5
  ret i32 %3
}

declare i32 @_ZN13zlib_internal20GzipUncompressHelperEPhPmPKhm(i8*, i64*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11compression14GzipUncompressEN4base4spanIKcLm18446744073709551615EEES3_(i64, i8*, i64, i8*) local_unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = tail call i32 @_ZN13zlib_internal23GetGzipUncompressedSizeEPKhm(i8* %1, i64 %0) #5
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %5, align 8
  %9 = icmp ugt i64 %8, %2
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = call i32 @_ZN13zlib_internal20GzipUncompressHelperEPhPmPKhm(i8* %3, i64* nonnull %5, i8* %1, i64 %0) #5
  %12 = icmp eq i32 %11, 0
  br label %13

13:                                               ; preds = %4, %10
  %14 = phi i1 [ %12, %10 ], [ false, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11compression14GzipUncompressEN4base4spanIKhLm18446744073709551615EEES3_(i64, i8*, i64, i8*) local_unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = tail call i32 @_ZN13zlib_internal23GetGzipUncompressedSizeEPKhm(i8* %1, i64 %0) #5
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %5, align 8
  %9 = icmp ugt i64 %8, %2
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = call i32 @_ZN13zlib_internal20GzipUncompressHelperEPhPmPKhm(i8* %3, i64* nonnull %5, i8* %1, i64 %0) #5
  %12 = icmp eq i32 %11, 0
  br label %13

13:                                               ; preds = %4, %10
  %14 = phi i1 [ %12, %10 ], [ false, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11compression19GetUncompressedSizeEN4base4spanIKhLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #0 {
  %3 = tail call i32 @_ZN13zlib_internal23GetGzipUncompressedSizeEPKhm(i8* %1, i64 %0) #5
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11compression14GzipUncompressEN4base4spanIKcLm18446744073709551615EEEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i64, i8*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = tail call i32 @_ZN13zlib_internal23GetGzipUncompressedSizeEPKhm(i8* %1, i64 %0) #5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %4, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %2, i64 %7, i8 signext 0) #5
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  br label %17

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %17

17:                                               ; preds = %12, %15
  %18 = phi i8* [ %14, %12 ], [ %16, %15 ]
  %19 = call i32 @_ZN13zlib_internal20GzipUncompressHelperEPhPmPKhm(i8* %18, i64* nonnull %4, i8* %1, i64 %0) #5
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11compression14GzipUncompressEN4base4spanIKhLm18446744073709551615EEEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i64, i8*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = tail call i32 @_ZN13zlib_internal23GetGzipUncompressedSizeEPKhm(i8* %1, i64 %0) #5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %4, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %2, i64 %7, i8 signext 0) #5
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  br label %17

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %17

17:                                               ; preds = %12, %15
  %18 = phi i8* [ %14, %12 ], [ %16, %15 ]
  %19 = call i32 @_ZN13zlib_internal20GzipUncompressHelperEPhPmPKhm(i8* %18, i64* nonnull %4, i8* %1, i64 %0) #5
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  ret i1 %20
}

declare i32 @_ZN13zlib_internal23GetGzipUncompressedSizeEPKhm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
