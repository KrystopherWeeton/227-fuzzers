; ModuleID = '../../third_party/boringssl/src/crypto/x509v3/v3_cpols.c'
source_filename = "../../third_party/boringssl/src/crypto/x509v3/v3_cpols.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.v3_ext_method = type { i32, i32, %struct.ASN1_ITEM_st*, i8* ()*, void (i8*)*, i8* (i8*, i8**, i64)*, i32 (i8*, i8**)*, {}*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* }
%struct.stack_st_CONF_VALUE = type opaque
%struct.v3_ext_ctx = type { i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_req_st*, %struct.X509_crl_st*, %struct.X509V3_CONF_METHOD_st*, i8* }
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type { %struct.X509_POLICY_DATA_st*, %struct.stack_st_X509_POLICY_DATA*, i64, i64, i64 }
%struct.X509_POLICY_DATA_st = type { i32, %struct.asn1_object_st*, %struct.stack_st_POLICYQUALINFO*, %struct.stack_st_ASN1_OBJECT* }
%struct.stack_st_POLICYQUALINFO = type opaque
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.stack_st_X509_POLICY_DATA = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.X509_req_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type { %struct.DIST_POINT_NAME_st*, i32, i32, %struct.asn1_string_st*, i32, i32 }
%struct.DIST_POINT_NAME_st = type { i32, %union.anon.0, %struct.X509_name_st* }
%union.anon.0 = type { %struct.stack_st_GENERAL_NAME* }
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.X509V3_CONF_METHOD_st = type { i8* (i8*, i8*, i8*)*, %struct.stack_st_CONF_VALUE* (i8*, i8*)*, void (i8*, i8*)*, void (i8*, %struct.stack_st_CONF_VALUE*)* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.ASN1_ADB_st = type { i64, i64, %struct.asn1_must_be_null_st*, %struct.ASN1_ADB_TABLE_st*, i64, %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st* }
%struct.asn1_must_be_null_st = type opaque
%struct.ASN1_ADB_TABLE_st = type { i64, %struct.ASN1_TEMPLATE_st }
%struct.stack_st_POLICYINFO = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.ASN1_VALUE_st = type opaque
%struct.POLICYINFO_st = type { %struct.asn1_object_st*, %struct.stack_st_POLICYQUALINFO* }
%struct.POLICYQUALINFO_st = type { %struct.asn1_object_st*, %union.anon.1 }
%union.anon.1 = type { %struct.asn1_string_st* }
%struct.USERNOTICE_st = type { %struct.NOTICEREF_st*, %struct.asn1_string_st* }
%struct.NOTICEREF_st = type { %struct.asn1_string_st*, %struct.stack_st_ASN1_INTEGER* }
%struct.stack_st_ASN1_INTEGER = type opaque
%struct.X509_POLICY_NODE_st = type { %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_NODE_st*, i32 }
%struct.conf_value_st = type { i8*, i8*, i8* }

@CERTIFICATEPOLICIES_it = hidden constant %struct.ASN1_ITEM_st { i8 0, i64 -1, %struct.ASN1_TEMPLATE_st* @CERTIFICATEPOLICIES_item_tt, i64 0, i8* null, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0) }, align 8
@v3_cpols = hidden local_unnamed_addr constant { i32, i32, %struct.ASN1_ITEM_st*, i8* ()*, void (i8*)*, i8* (i8*, i8**, i64)*, i32 (i8*, i8**)*, i8* (%struct.v3_ext_method*, i8*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* } { i32 89, i32 0, %struct.ASN1_ITEM_st* @CERTIFICATEPOLICIES_it, i8* ()* null, void (i8*)* null, i8* (i8*, i8**, i64)* null, i32 (i8*, i8**)* null, i8* (%struct.v3_ext_method*, i8*)* null, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* null, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)* null, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)* null, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)* bitcast (i32 (%struct.v3_ext_method*, %struct.stack_st_POLICYINFO*, %struct.bio_st*, i32)* @i2r_certpol to i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*), i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* bitcast (%struct.stack_st_POLICYINFO* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* @r2i_certpol to i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*), i8* null }, align 8
@CERTIFICATEPOLICIES_item_tt = internal constant %struct.ASN1_TEMPLATE_st { i64 4, i64 0, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), %struct.ASN1_ITEM_st* @POLICYINFO_it }, align 8
@.str = private unnamed_addr constant [20 x i8] c"CERTIFICATEPOLICIES\00", align 1
@POLICYINFO_seq_tt = internal constant [2 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_OBJECT_it }, %struct.ASN1_TEMPLATE_st { i64 5, i64 0, i64 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), %struct.ASN1_ITEM_st* @POLICYQUALINFO_it }], align 16
@.str.1 = private unnamed_addr constant [11 x i8] c"POLICYINFO\00", align 1
@POLICYINFO_it = hidden constant %struct.ASN1_ITEM_st { i8 1, i64 16, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([2 x %struct.ASN1_TEMPLATE_st], [2 x %struct.ASN1_TEMPLATE_st]* @POLICYINFO_seq_tt, i32 0, i32 0), i64 2, i8* null, i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0) }, align 8
@POLICYQUALINFO_seq_tt = internal constant [2 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_OBJECT_it }, %struct.ASN1_TEMPLATE_st { i64 256, i64 -1, i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i32 0, i32 0), %struct.ASN1_ITEM_st* bitcast (%struct.ASN1_ADB_st* @POLICYQUALINFO_adb to %struct.ASN1_ITEM_st*) }], align 16
@.str.2 = private unnamed_addr constant [15 x i8] c"POLICYQUALINFO\00", align 1
@POLICYQUALINFO_it = hidden constant %struct.ASN1_ITEM_st { i8 1, i64 16, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([2 x %struct.ASN1_TEMPLATE_st], [2 x %struct.ASN1_TEMPLATE_st]* @POLICYQUALINFO_seq_tt, i32 0, i32 0), i64 2, i8* null, i64 16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i32 0, i32 0) }, align 8
@USERNOTICE_seq_tt = internal constant [2 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 1, i64 0, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), %struct.ASN1_ITEM_st* @NOTICEREF_it }, %struct.ASN1_TEMPLATE_st { i64 1, i64 0, i64 8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), %struct.ASN1_ITEM_st* @DISPLAYTEXT_it }], align 16
@.str.3 = private unnamed_addr constant [11 x i8] c"USERNOTICE\00", align 1
@USERNOTICE_it = hidden constant %struct.ASN1_ITEM_st { i8 1, i64 16, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([2 x %struct.ASN1_TEMPLATE_st], [2 x %struct.ASN1_TEMPLATE_st]* @USERNOTICE_seq_tt, i32 0, i32 0), i64 2, i8* null, i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0) }, align 8
@NOTICEREF_seq_tt = internal constant [2 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i32 0, i32 0), %struct.ASN1_ITEM_st* @DISPLAYTEXT_it }, %struct.ASN1_TEMPLATE_st { i64 4, i64 0, i64 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_INTEGER_it }], align 16
@.str.4 = private unnamed_addr constant [10 x i8] c"NOTICEREF\00", align 1
@NOTICEREF_it = hidden constant %struct.ASN1_ITEM_st { i8 1, i64 16, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([2 x %struct.ASN1_TEMPLATE_st], [2 x %struct.ASN1_TEMPLATE_st]* @NOTICEREF_seq_tt, i32 0, i32 0), i64 2, i8* null, i64 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0) }, align 8
@.str.5 = private unnamed_addr constant [12 x i8] c"%*sPolicy: \00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"%*s%s\0A\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"Critical\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"Non Critical\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"%*sNo Qualifiers\0A\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"policyid\00", align 1
@ASN1_OBJECT_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.13 = private unnamed_addr constant [11 x i8] c"qualifiers\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"pqualid\00", align 1
@POLICYQUALINFO_adb = internal constant %struct.ASN1_ADB_st { i64 0, i64 0, %struct.asn1_must_be_null_st* null, %struct.ASN1_ADB_TABLE_st* getelementptr inbounds ([2 x %struct.ASN1_ADB_TABLE_st], [2 x %struct.ASN1_ADB_TABLE_st]* @POLICYQUALINFO_adbtbl, i32 0, i32 0), i64 2, %struct.ASN1_TEMPLATE_st* @policydefault_tt, %struct.ASN1_TEMPLATE_st* null }, align 8
@POLICYQUALINFO_adbtbl = internal constant [2 x %struct.ASN1_ADB_TABLE_st] [%struct.ASN1_ADB_TABLE_st { i64 164, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_IA5STRING_it } }, %struct.ASN1_ADB_TABLE_st { i64 165, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i32 0, i32 0), %struct.ASN1_ITEM_st* @USERNOTICE_it } }], align 16
@policydefault_tt = internal constant %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_ANY_it }, align 8
@.str.15 = private unnamed_addr constant [9 x i8] c"d.cpsuri\00", align 1
@ASN1_IA5STRING_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.16 = private unnamed_addr constant [13 x i8] c"d.usernotice\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"d.other\00", align 1
@ASN1_ANY_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.18 = private unnamed_addr constant [10 x i8] c"noticeref\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"exptext\00", align 1
@DISPLAYTEXT_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.20 = private unnamed_addr constant [13 x i8] c"organization\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"noticenos\00", align 1
@ASN1_INTEGER_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.22 = private unnamed_addr constant [57 x i8] c"../../third_party/boringssl/src/crypto/x509v3/v3_cpols.c\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"section:\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c",name:\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c",value:\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"ia5org\00", align 1
@.str.27 = private unnamed_addr constant [17 x i8] c"policyIdentifier\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"CPS\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"userNotice\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"explicitText\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"noticeNumbers\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"%*sCPS: %s\0A\00", align 1
@.str.33 = private unnamed_addr constant [17 x i8] c"%*sUser Notice:\0A\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"%*sUnknown Qualifier: \00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"%*sOrganization: %s\0A\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"%*sNumber%s: \00", align 1
@.str.37 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"%*sExplicit Text: %s\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal i32 @i2r_certpol(%struct.v3_ext_method* nocapture readnone, %struct.stack_st_POLICYINFO*, %struct.bio_st*, i32) #0 {
  %5 = bitcast %struct.stack_st_POLICYINFO* %1 to %struct.stack_st*
  %6 = tail call i64 @sk_num(%struct.stack_st* %5) #5
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %4
  %9 = add nsw i32 %3, 2
  br label %10

10:                                               ; preds = %8, %23
  %11 = phi i64 [ 0, %8 ], [ %24, %23 ]
  %12 = tail call i8* @sk_value(%struct.stack_st* %5, i64 %11) #5
  %13 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i32 %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)) #5
  %14 = bitcast i8* %12 to %struct.asn1_object_st**
  %15 = load %struct.asn1_object_st*, %struct.asn1_object_st** %14, align 8
  %16 = tail call i32 @i2a_ASN1_OBJECT(%struct.bio_st* %2, %struct.asn1_object_st* %15) #5
  %17 = tail call i32 @BIO_puts(%struct.bio_st* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #5
  %18 = getelementptr inbounds i8, i8* %12, i64 8
  %19 = bitcast i8* %18 to %struct.stack_st_POLICYQUALINFO**
  %20 = load %struct.stack_st_POLICYQUALINFO*, %struct.stack_st_POLICYQUALINFO** %19, align 8
  %21 = icmp eq %struct.stack_st_POLICYQUALINFO* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %10
  tail call fastcc void @print_qualifiers(%struct.bio_st* %2, %struct.stack_st_POLICYQUALINFO* nonnull %20, i32 %9)
  br label %23

23:                                               ; preds = %10, %22
  %24 = add nuw i64 %11, 1
  %25 = tail call i64 @sk_num(%struct.stack_st* %5) #5
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %10, label %27

27:                                               ; preds = %23, %4
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.stack_st_POLICYINFO* @r2i_certpol(%struct.v3_ext_method* nocapture readnone, %struct.v3_ext_ctx*, i8*) #0 {
  %4 = tail call %struct.stack_st* @sk_new_null() #5
  %5 = bitcast %struct.stack_st* %4 to %struct.stack_st_POLICYINFO*
  %6 = icmp eq %struct.stack_st* %4, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 154) #5
  br label %365

8:                                                ; preds = %3
  %9 = tail call %struct.stack_st_CONF_VALUE* @X509V3_parse_list(i8* %2) #5
  %10 = icmp eq %struct.stack_st_CONF_VALUE* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %8
  %12 = bitcast %struct.stack_st_CONF_VALUE* %9 to %struct.stack_st*
  %13 = tail call i64 @sk_num(%struct.stack_st* nonnull %12) #5
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %362, label %16

15:                                               ; preds = %8
  tail call void @ERR_put_error(i32 20, i32 0, i32 20, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 159) #5
  br label %363

16:                                               ; preds = %11, %357
  %17 = phi i32 [ %358, %357 ], [ 0, %11 ]
  %18 = phi i64 [ %359, %357 ], [ 0, %11 ]
  %19 = tail call i8* @sk_value(%struct.stack_st* nonnull %12, i64 %18) #5
  %20 = getelementptr inbounds i8, i8* %19, i64 16
  %21 = bitcast i8* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %16
  %25 = getelementptr inbounds i8, i8* %19, i64 8
  %26 = bitcast i8* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %37

29:                                               ; preds = %16, %24
  %30 = bitcast i8* %20 to i8**
  tail call void @ERR_put_error(i32 20, i32 0, i32 131, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 166) #5
  %31 = bitcast i8* %19 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds i8, i8* %19, i64 8
  %34 = bitcast i8* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = load i8*, i8** %30, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i8* %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8* %36) #5
  br label %363

37:                                               ; preds = %24
  %38 = tail call i32 @strcmp(i8* nonnull %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0)) #6
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %357, label %40

40:                                               ; preds = %37
  %41 = load i8, i8* %27, align 1
  %42 = icmp eq i8 %41, 64
  br i1 %42, label %43, label %333

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %27, i64 1
  %45 = tail call %struct.stack_st_CONF_VALUE* @X509V3_get_section(%struct.v3_ext_ctx* %1, i8* %44) #5
  %46 = icmp eq %struct.stack_st_CONF_VALUE* %45, null
  br i1 %46, label %47, label %54

47:                                               ; preds = %43
  %48 = bitcast i8* %20 to i8**
  %49 = bitcast i8* %25 to i8**
  tail call void @ERR_put_error(i32 20, i32 0, i32 134, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 178) #5
  %50 = bitcast i8* %19 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = load i8*, i8** %49, align 8
  %53 = load i8*, i8** %48, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i8* %51, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8* %52, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8* %53) #5
  br label %363

54:                                               ; preds = %43
  %55 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @POLICYINFO_it) #5
  %56 = bitcast %struct.ASN1_VALUE_st* %55 to %struct.POLICYINFO_st*
  %57 = icmp eq %struct.ASN1_VALUE_st* %55, null
  br i1 %57, label %330, label %58

58:                                               ; preds = %54
  %59 = bitcast %struct.stack_st_CONF_VALUE* %45 to %struct.stack_st*
  %60 = tail call i64 @sk_num(%struct.stack_st* nonnull %59) #5
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  %63 = bitcast %struct.ASN1_VALUE_st* %55 to %struct.asn1_object_st**
  br label %325

64:                                               ; preds = %58
  %65 = icmp eq i32 %17, 0
  %66 = select i1 %65, i32 26, i32 22
  %67 = getelementptr inbounds %struct.POLICYINFO_st, %struct.POLICYINFO_st* %56, i64 0, i32 1
  %68 = bitcast %struct.stack_st_POLICYQUALINFO** %67 to %struct.stack_st**
  %69 = bitcast %struct.ASN1_VALUE_st* %55 to %struct.asn1_object_st**
  br label %70

70:                                               ; preds = %321, %64
  %71 = phi i64 [ 0, %64 ], [ %322, %321 ]
  %72 = tail call i8* @sk_value(%struct.stack_st* nonnull %59, i64 %71) #5
  %73 = getelementptr inbounds i8, i8* %72, i64 8
  %74 = bitcast i8* %73 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = tail call i32 @strcmp(i8* %75, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i64 0, i64 0)) #6
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %92

78:                                               ; preds = %70
  %79 = getelementptr inbounds i8, i8* %72, i64 16
  %80 = bitcast i8* %79 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = tail call %struct.asn1_object_st* @OBJ_txt2obj(i8* %81, i32 0) #5
  %83 = icmp eq %struct.asn1_object_st* %82, null
  br i1 %83, label %85, label %84

84:                                               ; preds = %78
  store %struct.asn1_object_st* %82, %struct.asn1_object_st** %69, align 8
  br label %321

85:                                               ; preds = %78
  %86 = bitcast i8* %73 to i8**
  %87 = bitcast i8* %79 to i8**
  tail call void @ERR_put_error(i32 20, i32 0, i32 129, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 229) #5
  %88 = bitcast i8* %72 to i8**
  %89 = load i8*, i8** %88, align 8
  %90 = load i8*, i8** %86, align 8
  %91 = load i8*, i8** %87, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i8* %89, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8* %90, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8* %91) #5
  br label %331

92:                                               ; preds = %70
  %93 = tail call i32 @x509v3_name_cmp(i8* %75, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0)) #5
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %126

95:                                               ; preds = %92
  %96 = load %struct.stack_st_POLICYQUALINFO*, %struct.stack_st_POLICYQUALINFO** %67, align 8
  %97 = icmp eq %struct.stack_st_POLICYQUALINFO* %96, null
  br i1 %97, label %98, label %100

98:                                               ; preds = %95
  %99 = tail call %struct.stack_st* @sk_new_null() #5
  store %struct.stack_st* %99, %struct.stack_st** %68, align 8
  br label %100

100:                                              ; preds = %98, %95
  %101 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @POLICYQUALINFO_it) #5
  %102 = bitcast %struct.ASN1_VALUE_st* %101 to %struct.POLICYQUALINFO_st*
  %103 = icmp eq %struct.ASN1_VALUE_st* %101, null
  br i1 %103, label %330, label %104

104:                                              ; preds = %100
  %105 = load %struct.stack_st*, %struct.stack_st** %68, align 8
  %106 = bitcast %struct.ASN1_VALUE_st* %101 to i8*
  %107 = tail call i64 @sk_push(%struct.stack_st* %105, i8* nonnull %106) #5
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %330, label %109

109:                                              ; preds = %104
  %110 = tail call %struct.asn1_object_st* @OBJ_nid2obj(i32 164) #5
  %111 = bitcast %struct.ASN1_VALUE_st* %101 to %struct.asn1_object_st**
  store %struct.asn1_object_st* %110, %struct.asn1_object_st** %111, align 8
  %112 = icmp eq %struct.asn1_object_st* %110, null
  br i1 %112, label %113, label %114

113:                                              ; preds = %109
  tail call void @ERR_put_error(i32 20, i32 0, i32 68, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 244) #5
  br label %331

114:                                              ; preds = %109
  %115 = tail call %struct.asn1_string_st* @ASN1_IA5STRING_new() #5
  %116 = getelementptr inbounds %struct.POLICYQUALINFO_st, %struct.POLICYQUALINFO_st* %102, i64 0, i32 1, i32 0
  store %struct.asn1_string_st* %115, %struct.asn1_string_st** %116, align 8
  %117 = icmp eq %struct.asn1_string_st* %115, null
  br i1 %117, label %331, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds i8, i8* %72, i64 16
  %120 = bitcast i8* %119 to i8**
  %121 = load i8*, i8** %120, align 8
  %122 = tail call i64 @strlen(i8* %121) #6
  %123 = trunc i64 %122 to i32
  %124 = tail call i32 @ASN1_STRING_set(%struct.asn1_string_st* nonnull %115, i8* %121, i32 %123) #5
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %330, label %321

126:                                              ; preds = %92
  %127 = load i8*, i8** %74, align 8
  %128 = tail call i32 @x509v3_name_cmp(i8* %127, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0)) #5
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %313

130:                                              ; preds = %126
  %131 = getelementptr inbounds i8, i8* %72, i64 16
  %132 = bitcast i8* %131 to i8**
  %133 = load i8*, i8** %132, align 8
  %134 = load i8, i8* %133, align 1
  %135 = icmp eq i8 %134, 64
  br i1 %135, label %143, label %136

136:                                              ; preds = %130
  %137 = bitcast i8* %73 to i8**
  %138 = bitcast i8* %131 to i8**
  tail call void @ERR_put_error(i32 20, i32 0, i32 111, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 257) #5
  %139 = bitcast i8* %72 to i8**
  %140 = load i8*, i8** %139, align 8
  %141 = load i8*, i8** %137, align 8
  %142 = load i8*, i8** %138, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i8* %140, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8* %141, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8* %142) #5
  br label %331

143:                                              ; preds = %130
  %144 = getelementptr inbounds i8, i8* %133, i64 1
  %145 = tail call %struct.stack_st_CONF_VALUE* @X509V3_get_section(%struct.v3_ext_ctx* %1, i8* %144) #5
  %146 = icmp eq %struct.stack_st_CONF_VALUE* %145, null
  br i1 %146, label %147, label %154

147:                                              ; preds = %143
  %148 = bitcast i8* %73 to i8**
  %149 = bitcast i8* %131 to i8**
  tail call void @ERR_put_error(i32 20, i32 0, i32 134, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 263) #5
  %150 = bitcast i8* %72 to i8**
  %151 = load i8*, i8** %150, align 8
  %152 = load i8*, i8** %148, align 8
  %153 = load i8*, i8** %149, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i8* %151, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8* %152, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8* %153) #5
  br label %331

154:                                              ; preds = %143
  %155 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @POLICYQUALINFO_it) #5
  %156 = bitcast %struct.ASN1_VALUE_st* %155 to %struct.POLICYQUALINFO_st*
  %157 = icmp eq %struct.ASN1_VALUE_st* %155, null
  br i1 %157, label %300, label %158

158:                                              ; preds = %154
  %159 = tail call %struct.asn1_object_st* @OBJ_nid2obj(i32 165) #5
  %160 = bitcast %struct.ASN1_VALUE_st* %155 to %struct.asn1_object_st**
  store %struct.asn1_object_st* %159, %struct.asn1_object_st** %160, align 8
  %161 = icmp eq %struct.asn1_object_st* %159, null
  br i1 %161, label %162, label %163

162:                                              ; preds = %158
  tail call void @ERR_put_error(i32 20, i32 0, i32 68, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 311) #5
  br label %301

163:                                              ; preds = %158
  %164 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @USERNOTICE_it) #5
  %165 = bitcast %struct.ASN1_VALUE_st* %164 to %struct.USERNOTICE_st*
  %166 = icmp eq %struct.ASN1_VALUE_st* %164, null
  br i1 %166, label %300, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %struct.POLICYQUALINFO_st, %struct.POLICYQUALINFO_st* %156, i64 0, i32 1
  %169 = bitcast %union.anon.1* %168 to %struct.ASN1_VALUE_st**
  store %struct.ASN1_VALUE_st* %164, %struct.ASN1_VALUE_st** %169, align 8
  %170 = bitcast %struct.stack_st_CONF_VALUE* %145 to %struct.stack_st*
  %171 = tail call i64 @sk_num(%struct.stack_st* nonnull %170) #5
  %172 = icmp eq i64 %171, 0
  %173 = bitcast %struct.ASN1_VALUE_st* %164 to %struct.NOTICEREF_st**
  br i1 %172, label %288, label %174

174:                                              ; preds = %167
  %175 = bitcast %struct.ASN1_VALUE_st* %164 to %struct.ASN1_VALUE_st**
  %176 = getelementptr inbounds %struct.USERNOTICE_st, %struct.USERNOTICE_st* %165, i64 0, i32 1
  br label %177

177:                                              ; preds = %284, %174
  %178 = phi i64 [ 0, %174 ], [ %285, %284 ]
  %179 = tail call i8* @sk_value(%struct.stack_st* nonnull %170, i64 %178) #5
  %180 = getelementptr inbounds i8, i8* %179, i64 8
  %181 = bitcast i8* %180 to i8**
  %182 = load i8*, i8** %181, align 8
  %183 = tail call i32 @strcmp(i8* %182, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0)) #6
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %196

185:                                              ; preds = %177
  %186 = tail call %struct.asn1_string_st* @ASN1_VISIBLESTRING_new() #5
  store %struct.asn1_string_st* %186, %struct.asn1_string_st** %176, align 8
  %187 = icmp eq %struct.asn1_string_st* %186, null
  br i1 %187, label %300, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds i8, i8* %179, i64 16
  %190 = bitcast i8* %189 to i8**
  %191 = load i8*, i8** %190, align 8
  %192 = tail call i64 @strlen(i8* %191) #6
  %193 = trunc i64 %192 to i32
  %194 = tail call i32 @ASN1_STRING_set(%struct.asn1_string_st* nonnull %186, i8* %191, i32 %193) #5
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %300, label %284

196:                                              ; preds = %177
  %197 = tail call i32 @strcmp(i8* %182, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0)) #6
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %220

199:                                              ; preds = %196
  %200 = load %struct.NOTICEREF_st*, %struct.NOTICEREF_st** %173, align 8
  %201 = icmp eq %struct.NOTICEREF_st* %200, null
  br i1 %201, label %202, label %207

202:                                              ; preds = %199
  %203 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @NOTICEREF_it) #5
  %204 = icmp eq %struct.ASN1_VALUE_st* %203, null
  br i1 %204, label %300, label %205

205:                                              ; preds = %202
  %206 = bitcast %struct.ASN1_VALUE_st* %203 to %struct.NOTICEREF_st*
  store %struct.ASN1_VALUE_st* %203, %struct.ASN1_VALUE_st** %175, align 8
  br label %207

207:                                              ; preds = %205, %199
  %208 = phi %struct.NOTICEREF_st* [ %206, %205 ], [ %200, %199 ]
  %209 = getelementptr inbounds %struct.NOTICEREF_st, %struct.NOTICEREF_st* %208, i64 0, i32 0
  %210 = load %struct.asn1_string_st*, %struct.asn1_string_st** %209, align 8
  %211 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %210, i64 0, i32 1
  store i32 %66, i32* %211, align 4
  %212 = load %struct.asn1_string_st*, %struct.asn1_string_st** %209, align 8
  %213 = getelementptr inbounds i8, i8* %179, i64 16
  %214 = bitcast i8* %213 to i8**
  %215 = load i8*, i8** %214, align 8
  %216 = tail call i64 @strlen(i8* %215) #6
  %217 = trunc i64 %216 to i32
  %218 = tail call i32 @ASN1_STRING_set(%struct.asn1_string_st* %212, i8* %215, i32 %217) #5
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %300, label %284

220:                                              ; preds = %196
  %221 = tail call i32 @strcmp(i8* %182, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0)) #6
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %276

223:                                              ; preds = %220
  %224 = load %struct.NOTICEREF_st*, %struct.NOTICEREF_st** %173, align 8
  %225 = icmp eq %struct.NOTICEREF_st* %224, null
  br i1 %225, label %226, label %231

226:                                              ; preds = %223
  %227 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @NOTICEREF_it) #5
  %228 = icmp eq %struct.ASN1_VALUE_st* %227, null
  br i1 %228, label %300, label %229

229:                                              ; preds = %226
  %230 = bitcast %struct.ASN1_VALUE_st* %227 to %struct.NOTICEREF_st*
  store %struct.ASN1_VALUE_st* %227, %struct.ASN1_VALUE_st** %175, align 8
  br label %231

231:                                              ; preds = %229, %223
  %232 = phi %struct.NOTICEREF_st* [ %230, %229 ], [ %224, %223 ]
  %233 = getelementptr inbounds i8, i8* %179, i64 16
  %234 = bitcast i8* %233 to i8**
  %235 = load i8*, i8** %234, align 8
  %236 = tail call %struct.stack_st_CONF_VALUE* @X509V3_parse_list(i8* %235) #5
  %237 = icmp eq %struct.stack_st_CONF_VALUE* %236, null
  br i1 %237, label %242, label %238

238:                                              ; preds = %231
  %239 = bitcast %struct.stack_st_CONF_VALUE* %236 to %struct.stack_st*
  %240 = tail call i64 @sk_num(%struct.stack_st* nonnull %239) #5
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %238, %231
  %243 = bitcast i8* %180 to i8**
  %244 = bitcast i8* %233 to i8**
  tail call void @ERR_put_error(i32 20, i32 0, i32 128, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 352) #5
  %245 = bitcast i8* %179 to i8**
  %246 = load i8*, i8** %245, align 8
  %247 = load i8*, i8** %243, align 8
  %248 = load i8*, i8** %244, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i8* %246, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8* %247, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8* %248) #5
  br label %301

249:                                              ; preds = %238
  %250 = getelementptr inbounds %struct.NOTICEREF_st, %struct.NOTICEREF_st* %232, i64 0, i32 1
  %251 = bitcast %struct.stack_st_ASN1_INTEGER** %250 to %struct.stack_st**
  %252 = load %struct.stack_st*, %struct.stack_st** %251, align 8
  %253 = tail call i64 @sk_num(%struct.stack_st* nonnull %239) #5
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %273, label %258

255:                                              ; preds = %267
  %256 = tail call i64 @sk_num(%struct.stack_st* nonnull %239) #5
  %257 = icmp ult i64 %271, %256
  br i1 %257, label %258, label %273

258:                                              ; preds = %249, %255
  %259 = phi i64 [ %271, %255 ], [ 0, %249 ]
  %260 = tail call i8* @sk_value(%struct.stack_st* nonnull %239, i64 %259) #5
  %261 = getelementptr inbounds i8, i8* %260, i64 8
  %262 = bitcast i8* %261 to i8**
  %263 = load i8*, i8** %262, align 8
  %264 = tail call %struct.asn1_string_st* @s2i_ASN1_INTEGER(%struct.v3_ext_method* null, i8* %263) #5
  %265 = icmp eq %struct.asn1_string_st* %264, null
  br i1 %265, label %266, label %267

266:                                              ; preds = %258
  tail call void @ERR_put_error(i32 20, i32 0, i32 127, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 393) #5
  br label %274

267:                                              ; preds = %258
  %268 = bitcast %struct.asn1_string_st* %264 to i8*
  %269 = tail call i64 @sk_push(%struct.stack_st* %252, i8* nonnull %268) #5
  %270 = icmp eq i64 %269, 0
  %271 = add nuw i64 %259, 1
  br i1 %270, label %272, label %255

272:                                              ; preds = %267
  tail call void @ASN1_INTEGER_free(%struct.asn1_string_st* nonnull %264) #5
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 403) #5
  br label %274

273:                                              ; preds = %255, %249
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %239, void (void (i8*)*, i8*)* nonnull @sk_CONF_VALUE_call_free_func, void (i8*)* bitcast (void (%struct.conf_value_st*)* @X509V3_conf_free to void (i8*)*)) #5
  br label %284

274:                                              ; preds = %272, %266
  %275 = bitcast %struct.stack_st_CONF_VALUE* %236 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %275, void (void (i8*)*, i8*)* nonnull @sk_CONF_VALUE_call_free_func, void (i8*)* bitcast (void (%struct.conf_value_st*)* @X509V3_conf_free to void (i8*)*)) #5
  br label %301

276:                                              ; preds = %220
  %277 = bitcast i8* %180 to i8**
  tail call void @ERR_put_error(i32 20, i32 0, i32 130, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 361) #5
  %278 = bitcast i8* %179 to i8**
  %279 = load i8*, i8** %278, align 8
  %280 = load i8*, i8** %277, align 8
  %281 = getelementptr inbounds i8, i8* %179, i64 16
  %282 = bitcast i8* %281 to i8**
  %283 = load i8*, i8** %282, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i8* %279, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8* %280, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8* %283) #5
  br label %301

284:                                              ; preds = %273, %207, %188
  %285 = add nuw i64 %178, 1
  %286 = tail call i64 @sk_num(%struct.stack_st* nonnull %170) #5
  %287 = icmp ult i64 %285, %286
  br i1 %287, label %177, label %288

288:                                              ; preds = %284, %167
  %289 = load %struct.NOTICEREF_st*, %struct.NOTICEREF_st** %173, align 8
  %290 = icmp eq %struct.NOTICEREF_st* %289, null
  br i1 %290, label %302, label %291

291:                                              ; preds = %288
  %292 = getelementptr inbounds %struct.NOTICEREF_st, %struct.NOTICEREF_st* %289, i64 0, i32 1
  %293 = load %struct.stack_st_ASN1_INTEGER*, %struct.stack_st_ASN1_INTEGER** %292, align 8
  %294 = icmp eq %struct.stack_st_ASN1_INTEGER* %293, null
  br i1 %294, label %299, label %295

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.NOTICEREF_st, %struct.NOTICEREF_st* %289, i64 0, i32 0
  %297 = load %struct.asn1_string_st*, %struct.asn1_string_st** %296, align 8
  %298 = icmp eq %struct.asn1_string_st* %297, null
  br i1 %298, label %299, label %302

299:                                              ; preds = %295, %291
  tail call void @ERR_put_error(i32 20, i32 0, i32 138, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 369) #5
  br label %301

300:                                              ; preds = %163, %154, %226, %207, %202, %188, %185
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 376) #5
  br label %301

301:                                              ; preds = %300, %299, %276, %274, %242, %162
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %155, %struct.ASN1_ITEM_st* nonnull @POLICYQUALINFO_it) #5
  tail call void @X509V3_section_free(%struct.v3_ext_ctx* %1, %struct.stack_st_CONF_VALUE* nonnull %145) #5
  br label %331

302:                                              ; preds = %295, %288
  tail call void @X509V3_section_free(%struct.v3_ext_ctx* %1, %struct.stack_st_CONF_VALUE* nonnull %145) #5
  %303 = load %struct.stack_st_POLICYQUALINFO*, %struct.stack_st_POLICYQUALINFO** %67, align 8
  %304 = icmp eq %struct.stack_st_POLICYQUALINFO* %303, null
  %305 = bitcast %struct.stack_st_POLICYQUALINFO* %303 to %struct.stack_st*
  br i1 %304, label %306, label %308

306:                                              ; preds = %302
  %307 = tail call %struct.stack_st* @sk_new_null() #5
  store %struct.stack_st* %307, %struct.stack_st** %68, align 8
  br label %308

308:                                              ; preds = %306, %302
  %309 = phi %struct.stack_st* [ %305, %302 ], [ %307, %306 ]
  %310 = bitcast %struct.ASN1_VALUE_st* %155 to i8*
  %311 = tail call i64 @sk_push(%struct.stack_st* %309, i8* nonnull %310) #5
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %330, label %321

313:                                              ; preds = %126
  %314 = bitcast i8* %73 to i8**
  tail call void @ERR_put_error(i32 20, i32 0, i32 130, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 277) #5
  %315 = bitcast i8* %72 to i8**
  %316 = load i8*, i8** %315, align 8
  %317 = load i8*, i8** %314, align 8
  %318 = getelementptr inbounds i8, i8* %72, i64 16
  %319 = bitcast i8* %318 to i8**
  %320 = load i8*, i8** %319, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i8* %316, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8* %317, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8* %320) #5
  br label %331

321:                                              ; preds = %308, %118, %84
  %322 = add nuw i64 %71, 1
  %323 = tail call i64 @sk_num(%struct.stack_st* nonnull %59) #5
  %324 = icmp ult i64 %322, %323
  br i1 %324, label %70, label %325

325:                                              ; preds = %321, %62
  %326 = phi %struct.asn1_object_st** [ %63, %62 ], [ %69, %321 ]
  %327 = load %struct.asn1_object_st*, %struct.asn1_object_st** %326, align 8
  %328 = icmp eq %struct.asn1_object_st* %327, null
  br i1 %328, label %329, label %332

329:                                              ; preds = %325
  tail call void @ERR_put_error(i32 20, i32 0, i32 142, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 284) #5
  br label %331

330:                                              ; preds = %54, %308, %118, %104, %100
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 291) #5
  br label %331

331:                                              ; preds = %114, %85, %113, %136, %147, %301, %313, %329, %330
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %55, %struct.ASN1_ITEM_st* nonnull @POLICYINFO_it) #5
  tail call void @X509V3_section_free(%struct.v3_ext_ctx* %1, %struct.stack_st_CONF_VALUE* nonnull %45) #5
  br label %363

332:                                              ; preds = %325
  tail call void @X509V3_section_free(%struct.v3_ext_ctx* %1, %struct.stack_st_CONF_VALUE* nonnull %45) #5
  br label %350

333:                                              ; preds = %40
  %334 = tail call %struct.asn1_object_st* @OBJ_txt2obj(i8* nonnull %27, i32 0) #5
  %335 = icmp eq %struct.asn1_object_st* %334, null
  br i1 %335, label %336, label %343

336:                                              ; preds = %333
  %337 = bitcast i8* %20 to i8**
  %338 = bitcast i8* %25 to i8**
  tail call void @ERR_put_error(i32 20, i32 0, i32 129, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 189) #5
  %339 = bitcast i8* %19 to i8**
  %340 = load i8*, i8** %339, align 8
  %341 = load i8*, i8** %338, align 8
  %342 = load i8*, i8** %337, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i8* %340, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8* %341, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8* %342) #5
  br label %363

343:                                              ; preds = %333
  %344 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @POLICYINFO_it) #5
  %345 = icmp eq %struct.ASN1_VALUE_st* %344, null
  br i1 %345, label %346, label %347

346:                                              ; preds = %343
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 195) #5
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* nonnull %334) #5
  br label %363

347:                                              ; preds = %343
  %348 = bitcast %struct.ASN1_VALUE_st* %344 to %struct.POLICYINFO_st*
  %349 = bitcast %struct.ASN1_VALUE_st* %344 to %struct.asn1_object_st**
  store %struct.asn1_object_st* %334, %struct.asn1_object_st** %349, align 8
  br label %350

350:                                              ; preds = %332, %347
  %351 = phi %struct.ASN1_VALUE_st* [ %344, %347 ], [ %55, %332 ]
  %352 = phi %struct.POLICYINFO_st* [ %348, %347 ], [ %56, %332 ]
  %353 = bitcast %struct.POLICYINFO_st* %352 to i8*
  %354 = tail call i64 @sk_push(%struct.stack_st* nonnull %4, i8* %353) #5
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %357

356:                                              ; preds = %350
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %351, %struct.ASN1_ITEM_st* nonnull @POLICYINFO_it) #5
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 203) #5
  br label %363

357:                                              ; preds = %37, %350
  %358 = phi i32 [ %17, %350 ], [ 1, %37 ]
  %359 = add nuw i64 %18, 1
  %360 = tail call i64 @sk_num(%struct.stack_st* nonnull %12) #5
  %361 = icmp ult i64 %359, %360
  br i1 %361, label %16, label %362

362:                                              ; preds = %357, %11
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %12, void (void (i8*)*, i8*)* nonnull @sk_CONF_VALUE_call_free_func, void (i8*)* bitcast (void (%struct.conf_value_st*)* @X509V3_conf_free to void (i8*)*)) #5
  br label %365

363:                                              ; preds = %331, %47, %356, %346, %336, %29, %15
  %364 = phi %struct.stack_st* [ %12, %331 ], [ %12, %47 ], [ %12, %356 ], [ %12, %346 ], [ %12, %336 ], [ %12, %29 ], [ null, %15 ]
  tail call void @sk_pop_free_ex(%struct.stack_st* %364, void (void (i8*)*, i8*)* nonnull @sk_CONF_VALUE_call_free_func, void (i8*)* bitcast (void (%struct.conf_value_st*)* @X509V3_conf_free to void (i8*)*)) #5
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %4, void (void (i8*)*, i8*)* nonnull @sk_POLICYINFO_call_free_func, void (i8*)* bitcast (void (%struct.POLICYINFO_st*)* @POLICYINFO_free to void (i8*)*)) #5
  br label %365

365:                                              ; preds = %363, %362, %7
  %366 = phi %struct.stack_st_POLICYINFO* [ null, %7 ], [ null, %363 ], [ %5, %362 ]
  ret %struct.stack_st_POLICYINFO* %366
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_POLICYINFO* @d2i_CERTIFICATEPOLICIES(%struct.stack_st_POLICYINFO**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.stack_st_POLICYINFO** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @CERTIFICATEPOLICIES_it) #5
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.stack_st_POLICYINFO*
  ret %struct.stack_st_POLICYINFO* %6
}

declare %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_CERTIFICATEPOLICIES(%struct.stack_st_POLICYINFO*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.stack_st_POLICYINFO* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @CERTIFICATEPOLICIES_it) #5
  ret i32 %4
}

declare i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st*, i8**, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_POLICYINFO* @CERTIFICATEPOLICIES_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @CERTIFICATEPOLICIES_it) #5
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.stack_st_POLICYINFO*
  ret %struct.stack_st_POLICYINFO* %2
}

declare %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @CERTIFICATEPOLICIES_free(%struct.stack_st_POLICYINFO*) local_unnamed_addr #0 {
  %2 = bitcast %struct.stack_st_POLICYINFO* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @CERTIFICATEPOLICIES_it) #5
  ret void
}

declare void @ASN1_item_free(%struct.ASN1_VALUE_st*, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.POLICYINFO_st* @d2i_POLICYINFO(%struct.POLICYINFO_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.POLICYINFO_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @POLICYINFO_it) #5
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.POLICYINFO_st*
  ret %struct.POLICYINFO_st* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_POLICYINFO(%struct.POLICYINFO_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.POLICYINFO_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @POLICYINFO_it) #5
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.POLICYINFO_st* @POLICYINFO_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @POLICYINFO_it) #5
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.POLICYINFO_st*
  ret %struct.POLICYINFO_st* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @POLICYINFO_free(%struct.POLICYINFO_st*) #0 {
  %2 = bitcast %struct.POLICYINFO_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @POLICYINFO_it) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.POLICYQUALINFO_st* @d2i_POLICYQUALINFO(%struct.POLICYQUALINFO_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.POLICYQUALINFO_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @POLICYQUALINFO_it) #5
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.POLICYQUALINFO_st*
  ret %struct.POLICYQUALINFO_st* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_POLICYQUALINFO(%struct.POLICYQUALINFO_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.POLICYQUALINFO_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @POLICYQUALINFO_it) #5
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.POLICYQUALINFO_st* @POLICYQUALINFO_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @POLICYQUALINFO_it) #5
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.POLICYQUALINFO_st*
  ret %struct.POLICYQUALINFO_st* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @POLICYQUALINFO_free(%struct.POLICYQUALINFO_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.POLICYQUALINFO_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @POLICYQUALINFO_it) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.USERNOTICE_st* @d2i_USERNOTICE(%struct.USERNOTICE_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.USERNOTICE_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @USERNOTICE_it) #5
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.USERNOTICE_st*
  ret %struct.USERNOTICE_st* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_USERNOTICE(%struct.USERNOTICE_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.USERNOTICE_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @USERNOTICE_it) #5
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.USERNOTICE_st* @USERNOTICE_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @USERNOTICE_it) #5
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.USERNOTICE_st*
  ret %struct.USERNOTICE_st* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @USERNOTICE_free(%struct.USERNOTICE_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.USERNOTICE_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @USERNOTICE_it) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.NOTICEREF_st* @d2i_NOTICEREF(%struct.NOTICEREF_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.NOTICEREF_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @NOTICEREF_it) #5
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.NOTICEREF_st*
  ret %struct.NOTICEREF_st* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_NOTICEREF(%struct.NOTICEREF_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.NOTICEREF_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @NOTICEREF_it) #5
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.NOTICEREF_st* @NOTICEREF_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @NOTICEREF_it) #5
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.NOTICEREF_st*
  ret %struct.NOTICEREF_st* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NOTICEREF_free(%struct.NOTICEREF_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.NOTICEREF_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @NOTICEREF_it) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_POLICY_NODE_print(%struct.bio_st*, %struct.X509_POLICY_NODE_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.X509_POLICY_NODE_st, %struct.X509_POLICY_NODE_st* %1, i64 0, i32 0
  %5 = load %struct.X509_POLICY_DATA_st*, %struct.X509_POLICY_DATA_st** %4, align 8
  %6 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i32 %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)) #5
  %7 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %5, i64 0, i32 1
  %8 = load %struct.asn1_object_st*, %struct.asn1_object_st** %7, align 8
  %9 = tail call i32 @i2a_ASN1_OBJECT(%struct.bio_st* %0, %struct.asn1_object_st* %8) #5
  %10 = tail call i32 @BIO_puts(%struct.bio_st* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #5
  %11 = add nsw i32 %2, 2
  %12 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 16
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0)
  %17 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i32 %11, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8* %16) #5
  %18 = getelementptr inbounds %struct.X509_POLICY_DATA_st, %struct.X509_POLICY_DATA_st* %5, i64 0, i32 2
  %19 = load %struct.stack_st_POLICYQUALINFO*, %struct.stack_st_POLICYQUALINFO** %18, align 8
  %20 = icmp eq %struct.stack_st_POLICYQUALINFO* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %3
  tail call fastcc void @print_qualifiers(%struct.bio_st* %0, %struct.stack_st_POLICYQUALINFO* nonnull %19, i32 %11)
  br label %24

22:                                               ; preds = %3
  %23 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i32 %11, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)) #5
  br label %24

24:                                               ; preds = %22, %21
  ret void
}

declare i32 @BIO_printf(%struct.bio_st*, i8*, ...) local_unnamed_addr #1

declare i32 @i2a_ASN1_OBJECT(%struct.bio_st*, %struct.asn1_object_st*) local_unnamed_addr #1

declare i32 @BIO_puts(%struct.bio_st*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @print_qualifiers(%struct.bio_st*, %struct.stack_st_POLICYQUALINFO*, i32) unnamed_addr #0 {
  %4 = bitcast %struct.stack_st_POLICYQUALINFO* %1 to %struct.stack_st*
  %5 = tail call i64 @sk_num(%struct.stack_st* %4) #5
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %87, label %7

7:                                                ; preds = %3
  %8 = add nsw i32 %2, 2
  br label %9

9:                                                ; preds = %7, %83
  %10 = phi i64 [ 0, %7 ], [ %84, %83 ]
  %11 = tail call i8* @sk_value(%struct.stack_st* %4, i64 %10) #5
  %12 = bitcast i8* %11 to %struct.asn1_object_st**
  %13 = load %struct.asn1_object_st*, %struct.asn1_object_st** %12, align 8
  %14 = tail call i32 @OBJ_obj2nid(%struct.asn1_object_st* %13) #5
  switch i32 %14, label %78 [
    i32 164, label %15
    i32 165, label %22
  ]

15:                                               ; preds = %9
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to %struct.asn1_string_st**
  %18 = load %struct.asn1_string_st*, %struct.asn1_string_st** %17, align 8
  %19 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %18, i64 0, i32 2
  %20 = load i8*, i8** %19, align 8
  %21 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i64 0, i64 0), i32 %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8* %20) #5
  br label %83

22:                                               ; preds = %9
  %23 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.33, i64 0, i64 0), i32 %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)) #5
  %24 = getelementptr inbounds i8, i8* %11, i64 8
  %25 = bitcast i8* %24 to %struct.USERNOTICE_st**
  %26 = load %struct.USERNOTICE_st*, %struct.USERNOTICE_st** %25, align 8
  %27 = getelementptr inbounds %struct.USERNOTICE_st, %struct.USERNOTICE_st* %26, i64 0, i32 0
  %28 = load %struct.NOTICEREF_st*, %struct.NOTICEREF_st** %27, align 8
  %29 = icmp eq %struct.NOTICEREF_st* %28, null
  br i1 %29, label %70, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.NOTICEREF_st, %struct.NOTICEREF_st* %28, i64 0, i32 0
  %32 = load %struct.asn1_string_st*, %struct.asn1_string_st** %31, align 8
  %33 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %32, i64 0, i32 2
  %34 = load i8*, i8** %33, align 8
  %35 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0), i32 %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8* %34) #5
  %36 = getelementptr inbounds %struct.NOTICEREF_st, %struct.NOTICEREF_st* %28, i64 0, i32 1
  %37 = bitcast %struct.stack_st_ASN1_INTEGER** %36 to %struct.stack_st**
  %38 = load %struct.stack_st*, %struct.stack_st** %37, align 8
  %39 = tail call i64 @sk_num(%struct.stack_st* %38) #5
  %40 = icmp ugt i64 %39, 1
  %41 = select i1 %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)
  %42 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i64 0, i64 0), i32 %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8* %41) #5
  %43 = load %struct.stack_st*, %struct.stack_st** %37, align 8
  %44 = tail call i64 @sk_num(%struct.stack_st* %43) #5
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %68, label %46

46:                                               ; preds = %30, %63
  %47 = phi i64 [ %64, %63 ], [ 0, %30 ]
  %48 = load %struct.stack_st*, %struct.stack_st** %37, align 8
  %49 = tail call i8* @sk_value(%struct.stack_st* %48, i64 %47) #5
  %50 = bitcast i8* %49 to %struct.asn1_string_st*
  %51 = icmp eq i64 %47, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = tail call i32 @BIO_puts(%struct.bio_st* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0)) #5
  br label %54

54:                                               ; preds = %52, %46
  %55 = icmp eq i8* %49, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = tail call i32 @BIO_puts(%struct.bio_st* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0)) #5
  br label %63

58:                                               ; preds = %54
  %59 = tail call i8* @i2s_ASN1_INTEGER(%struct.v3_ext_method* null, %struct.asn1_string_st* nonnull %50) #5
  %60 = icmp eq i8* %59, null
  br i1 %60, label %83, label %61

61:                                               ; preds = %58
  %62 = tail call i32 @BIO_puts(%struct.bio_st* %0, i8* nonnull %59) #5
  tail call void @OPENSSL_free(i8* nonnull %59) #5
  br label %63

63:                                               ; preds = %61, %56
  %64 = add nuw i64 %47, 1
  %65 = load %struct.stack_st*, %struct.stack_st** %37, align 8
  %66 = tail call i64 @sk_num(%struct.stack_st* %65) #5
  %67 = icmp ult i64 %64, %66
  br i1 %67, label %46, label %68

68:                                               ; preds = %63, %30
  %69 = tail call i32 @BIO_puts(%struct.bio_st* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #5
  br label %70

70:                                               ; preds = %68, %22
  %71 = getelementptr inbounds %struct.USERNOTICE_st, %struct.USERNOTICE_st* %26, i64 0, i32 1
  %72 = load %struct.asn1_string_st*, %struct.asn1_string_st** %71, align 8
  %73 = icmp eq %struct.asn1_string_st* %72, null
  br i1 %73, label %83, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %72, i64 0, i32 2
  %76 = load i8*, i8** %75, align 8
  %77 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i64 0, i64 0), i32 %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8* %76) #5
  br label %83

78:                                               ; preds = %9
  %79 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i32 %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)) #5
  %80 = load %struct.asn1_object_st*, %struct.asn1_object_st** %12, align 8
  %81 = tail call i32 @i2a_ASN1_OBJECT(%struct.bio_st* %0, %struct.asn1_object_st* %80) #5
  %82 = tail call i32 @BIO_puts(%struct.bio_st* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #5
  br label %83

83:                                               ; preds = %58, %74, %70, %15, %78
  %84 = add nuw i64 %10, 1
  %85 = tail call i64 @sk_num(%struct.stack_st* %4) #5
  %86 = icmp ult i64 %84, %85
  br i1 %86, label %9, label %87

87:                                               ; preds = %83, %3
  ret void
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare %struct.stack_st_CONF_VALUE* @X509V3_parse_list(i8*) local_unnamed_addr #1

declare void @ERR_add_error_data(i32, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

declare %struct.stack_st_CONF_VALUE* @X509V3_get_section(%struct.v3_ext_ctx*, i8*) local_unnamed_addr #1

declare void @X509V3_section_free(%struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*) local_unnamed_addr #1

declare %struct.asn1_object_st* @OBJ_txt2obj(i8*, i32) local_unnamed_addr #1

declare void @ASN1_OBJECT_free(%struct.asn1_object_st*) local_unnamed_addr #1

declare void @X509V3_conf_free(%struct.conf_value_st*) #1

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #1

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #1

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #1

declare i32 @x509v3_name_cmp(i8*, i8*) local_unnamed_addr #1

declare %struct.asn1_object_st* @OBJ_nid2obj(i32) local_unnamed_addr #1

declare %struct.asn1_string_st* @ASN1_IA5STRING_new() local_unnamed_addr #1

declare i32 @ASN1_STRING_set(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #1

declare %struct.asn1_string_st* @ASN1_VISIBLESTRING_new() local_unnamed_addr #1

declare %struct.asn1_string_st* @s2i_ASN1_INTEGER(%struct.v3_ext_method*, i8*) local_unnamed_addr #1

declare void @ASN1_INTEGER_free(%struct.asn1_string_st*) local_unnamed_addr #1

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_CONF_VALUE_call_free_func(void (i8*)* nocapture, i8*) #4 {
  %3 = bitcast void (i8*)* %0 to void (%struct.conf_value_st*)*
  %4 = bitcast i8* %1 to %struct.conf_value_st*
  tail call void %3(%struct.conf_value_st* %4) #5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_POLICYINFO_call_free_func(void (i8*)* nocapture, i8*) #4 {
  %3 = bitcast void (i8*)* %0 to void (%struct.POLICYINFO_st*)*
  %4 = bitcast i8* %1 to %struct.POLICYINFO_st*
  tail call void %3(%struct.POLICYINFO_st* %4) #5
  ret void
}

declare i32 @OBJ_obj2nid(%struct.asn1_object_st*) local_unnamed_addr #1

declare i8* @i2s_ASN1_INTEGER(%struct.v3_ext_method*, %struct.asn1_string_st*) local_unnamed_addr #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
