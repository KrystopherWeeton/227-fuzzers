; ModuleID = '../../chrome/browser/login_detection/oauth_login_detector.cc'
source_filename = "../../chrome/browser/login_detection/oauth_login_detector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo" = type { i64, %class.GURL, %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.login_detection::OAuthLoginDetector" = type { %"class.std::__1::set", %"class.std::__1::set", %"class.absl::optional", %"class.absl::optional.13" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.12 }
%union.anon.12 = type { %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo" }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { %class.GURL }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1

@_ZN15login_detection18OAuthLoginDetector18OAuthLoginFlowInfoC1ERK4GURLS4_ = hidden unnamed_addr alias void (%"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"*, %class.GURL*, %class.GURL*), void (%"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"*, %class.GURL*, %class.GURL*)* @_ZN15login_detection18OAuthLoginDetector18OAuthLoginFlowInfoC2ERK4GURLS4_
@_ZN15login_detection18OAuthLoginDetector18OAuthLoginFlowInfoC1ERKS1_ = hidden unnamed_addr alias void (%"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"*, %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"*), void (%"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"*, %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"*)* @_ZN15login_detection18OAuthLoginDetector18OAuthLoginFlowInfoC2ERKS1_
@_ZN15login_detection18OAuthLoginDetector18OAuthLoginFlowInfoD1Ev = hidden unnamed_addr alias void (%"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"*), void (%"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"*)* @_ZN15login_detection18OAuthLoginDetector18OAuthLoginFlowInfoD2Ev
@_ZN15login_detection18OAuthLoginDetectorC1Ev = hidden unnamed_addr alias void (%"class.login_detection::OAuthLoginDetector"*), void (%"class.login_detection::OAuthLoginDetector"*)* @_ZN15login_detection18OAuthLoginDetectorC2Ev
@_ZN15login_detection18OAuthLoginDetectorD1Ev = hidden unnamed_addr alias void (%"class.login_detection::OAuthLoginDetector"*), void (%"class.login_detection::OAuthLoginDetector"*)* @_ZN15login_detection18OAuthLoginDetectorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15login_detection18OAuthLoginDetector18OAuthLoginFlowInfoC2ERK4GURLS4_(%"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"*, %class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %0, i64 0, i32 0
  store i64 1, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %0, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %5, %class.GURL* dereferenceable(120) %1) #8
  %6 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %0, i64 0, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %2) #8
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15login_detection18OAuthLoginDetector18OAuthLoginFlowInfoC2ERKS1_(%"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"*, %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* dereferenceable(248)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %1, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %7) #8
  %8 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %1, i64 0, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %8, %class.GURL* dereferenceable(120) %9) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15login_detection18OAuthLoginDetector18OAuthLoginFlowInfoD2Ev(%"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %0, i64 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %2) #8
  %3 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %3) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15login_detection18OAuthLoginDetectorC2Ev(%"class.login_detection::OAuthLoginDetector"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 0
  tail call void @_ZN15login_detection29GetOAuthLoginStartQueryParamsEv(%"class.std::__1::set"* sret %2) #8
  %3 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 1
  tail call void @_ZN15login_detection32GetOAuthLoginCompleteQueryParamsEv(%"class.std::__1::set"* sret %3) #8
  %4 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %union.anon.17* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 120, i1 false) #8
  %8 = bitcast %union.anon.12* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 249, i1 false)
  ret void
}

declare void @_ZN15login_detection29GetOAuthLoginStartQueryParamsEv(%"class.std::__1::set"* sret) local_unnamed_addr #1

declare void @_ZN15login_detection32GetOAuthLoginCompleteQueryParamsEv(%"class.std::__1::set"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15login_detection18OAuthLoginDetectorD2Ev(%"class.login_detection::OAuthLoginDetector"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %6) #8
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %12) #8
  %13 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %13) #8
  store i8 0, i8* %8, align 8
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"**
  %18 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %15, %"class.std::__1::__tree_node"* %18) #8
  %19 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node"**
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %19, %"class.std::__1::__tree_node"* %22) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15login_detection18OAuthLoginDetector26GetSuccessfulLoginFlowSiteERK4GURLRKNSt3__16vectorIS1_NS4_9allocatorIS1_EEEE(%"class.absl::optional.13"* noalias sret, %"class.login_detection::OAuthLoginDetector"*, %class.GURL* dereferenceable(120), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %class.GURL, align 8
  %8 = alloca %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", align 8
  %9 = alloca %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", align 8
  %10 = alloca %class.GURL, align 8
  %11 = alloca %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", align 8
  %12 = alloca %class.GURL, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %14 = bitcast %class.GURL** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %15, %17
  br i1 %18, label %175, label %19

19:                                               ; preds = %4
  %20 = bitcast %class.GURL* %6 to i8*
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %class.GURL, %class.GURL* %6, i64 0, i32 2, i32 6, i32 1
  %24 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %8 to i8*
  %32 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %8, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %8, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %8, i64 0, i32 2
  %36 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %38 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %39 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 1
  %40 = bitcast %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %9 to i8*
  %41 = bitcast %class.GURL* %10 to i8*
  %42 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %9, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %9, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %9, i64 0, i32 2
  %45 = bitcast %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %11 to i8*
  %46 = bitcast %class.GURL* %12 to i8*
  %47 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %11, i64 0, i32 0
  %48 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %11, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo", %"struct.login_detection::OAuthLoginDetector::OAuthLoginFlowInfo"* %11, i64 0, i32 2
  br label %50

50:                                               ; preds = %19, %168
  %51 = phi i64 [ %17, %19 ], [ %171, %168 ]
  %52 = phi i64 [ 0, %19 ], [ %169, %168 ]
  %53 = inttoptr i64 %51 to %class.GURL*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 120, i1 false)
  %54 = getelementptr inbounds %class.GURL, %class.GURL* %53, i64 %52
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %6, %class.GURL* dereferenceable(120) %54) #8
  %55 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #8
  %56 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %55) #8
  %57 = load i8, i8* %22, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %56, label %65, label %59

59:                                               ; preds = %50
  br i1 %58, label %61, label %60

60:                                               ; preds = %59
  call void @_ZN4GURLD1Ev(%class.GURL* %38) #8
  call void @_ZN4GURLD1Ev(%class.GURL* %37) #8
  store i8 0, i8* %22, align 8
  br label %61

61:                                               ; preds = %59, %60
  %62 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %64 = bitcast %union.anon.17* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 120, i1 false) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %20) #8
  br label %187

65:                                               ; preds = %50
  br i1 %58, label %83, label %66

66:                                               ; preds = %65
  %67 = call zeroext i1 @_ZN15login_detection18OAuthLoginDetector30CheckSuccessfulLoginCompletionERK4GURL(%"class.login_detection::OAuthLoginDetector"* %1, %class.GURL* nonnull dereferenceable(120) %6)
  br i1 %67, label %68, label %80

68:                                               ; preds = %66
  %69 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %69) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 120, i1 false)
  %70 = load i8, i8* %22, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %73, !prof !3

72:                                               ; preds = %68
  call void @llvm.trap() #8
  unreachable

73:                                               ; preds = %68
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %7, %class.GURL* dereferenceable(120) %38) #8
  %74 = load i8, i8* %22, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  call void @_ZN4GURLD1Ev(%class.GURL* %38) #8
  call void @_ZN4GURLD1Ev(%class.GURL* %37) #8
  store i8 0, i8* %22, align 8
  br label %77

77:                                               ; preds = %73, %76
  %78 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %78, align 8
  %79 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4GURLC1EOS_(%class.GURL* %79, %class.GURL* nonnull dereferenceable(120) %7) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %69) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %20) #8
  br label %187

80:                                               ; preds = %66
  %81 = load i8, i8* %22, align 8
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %168

83:                                               ; preds = %80, %65
  %84 = load i32, i32* %23, align 4
  %85 = icmp sgt i32 %84, -1
  br i1 %85, label %86, label %168

86:                                               ; preds = %83
  %87 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %88 = icmp eq %"class.std::__1::__tree_end_node"* %87, %25
  br i1 %88, label %130, label %89

89:                                               ; preds = %86, %127
  %90 = phi %"class.std::__1::__tree_end_node"* [ %128, %127 ], [ %87, %86 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 4
  %92 = bitcast %"class.std::__1::__tree_end_node"* %91 to %"class.std::__1::basic_string"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #8
  %93 = call zeroext i1 @_ZN3net21GetValueForKeyInQueryERK4GURLRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPS9_(%class.GURL* nonnull dereferenceable(120) %6, %"class.std::__1::basic_string"* dereferenceable(24) %92, %"class.std::__1::basic_string"* nonnull %5) #8
  %94 = load i8, i8* %29, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %89
  %97 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %97) #9
  br label %98

98:                                               ; preds = %96, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8
  br i1 %93, label %99, label %168

99:                                               ; preds = %98
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 1, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, null
  br i1 %102, label %103, label %111

103:                                              ; preds = %99
  %104 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_node_base"*
  %105 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 2
  %106 = bitcast %"class.std::__1::__tree_end_node"* %105 to %"class.std::__1::__tree_end_node"**
  %107 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %107, i64 0, i32 0
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node_base"* %109, %104
  br i1 %110, label %127, label %118

111:                                              ; preds = %99, %111
  %112 = phi %"class.std::__1::__tree_node_base"* [ %114, %111 ], [ %101, %99 ]
  %113 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, null
  br i1 %115, label %116, label %111

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %112, i64 0, i32 0
  br label %127

118:                                              ; preds = %103, %118
  %119 = phi %"class.std::__1::__tree_end_node"** [ %122, %118 ], [ %106, %103 ]
  %120 = bitcast %"class.std::__1::__tree_end_node"** %119 to %"class.std::__1::__tree_node_base"**
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %121, i64 0, i32 2
  %123 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %123, i64 0, i32 0
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = icmp eq %"class.std::__1::__tree_node_base"* %125, %121
  br i1 %126, label %127, label %118

127:                                              ; preds = %118, %116, %103
  %128 = phi %"class.std::__1::__tree_end_node"* [ %117, %116 ], [ %107, %103 ], [ %123, %118 ]
  %129 = icmp eq %"class.std::__1::__tree_end_node"* %128, %25
  br i1 %129, label %130, label %89

130:                                              ; preds = %127, %86
  %131 = load i8, i8* %30, align 8, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %142, label %133

133:                                              ; preds = %130
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %31) #8
  store i64 1, i64* %33, align 8
  call void @_ZN4GURLC1ERKS_(%class.GURL* %34, %class.GURL* nonnull dereferenceable(120) %6) #8
  call void @_ZN4GURLC1ERKS_(%class.GURL* %35, %class.GURL* dereferenceable(120) %32) #8
  %134 = load i8, i8* %22, align 8, !range !2
  %135 = icmp eq i8 %134, 0
  %136 = load i64, i64* %33, align 8
  store i64 %136, i64* %36, align 8
  br i1 %135, label %140, label %137

137:                                              ; preds = %133
  %138 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %37, %class.GURL* dereferenceable(120) %34) #8
  %139 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %38, %class.GURL* dereferenceable(120) %35) #8
  br label %141

140:                                              ; preds = %133
  call void @_ZN4GURLC1ERKS_(%class.GURL* %37, %class.GURL* dereferenceable(120) %34) #8
  call void @_ZN4GURLC1ERKS_(%class.GURL* %38, %class.GURL* dereferenceable(120) %35) #8
  store i8 1, i8* %22, align 8
  br label %141

141:                                              ; preds = %137, %140
  call void @_ZN4GURLD1Ev(%class.GURL* %35) #8
  call void @_ZN4GURLD1Ev(%class.GURL* %34) #8
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %31) #8
  br label %168

142:                                              ; preds = %130
  %143 = load i8, i8* %39, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %142
  %146 = call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* %2) #8
  br i1 %146, label %147, label %156

147:                                              ; preds = %145
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %40) #8
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %41) #8
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %10, %class.GURL* %2) #8
  store i64 1, i64* %42, align 8
  call void @_ZN4GURLC1ERKS_(%class.GURL* %43, %class.GURL* nonnull dereferenceable(120) %6) #8
  call void @_ZN4GURLC1ERKS_(%class.GURL* %44, %class.GURL* nonnull dereferenceable(120) %10) #8
  %148 = load i8, i8* %22, align 8, !range !2
  %149 = icmp eq i8 %148, 0
  %150 = load i64, i64* %42, align 8
  store i64 %150, i64* %36, align 8
  br i1 %149, label %154, label %151

151:                                              ; preds = %147
  %152 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %37, %class.GURL* dereferenceable(120) %43) #8
  %153 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %38, %class.GURL* dereferenceable(120) %44) #8
  br label %155

154:                                              ; preds = %147
  call void @_ZN4GURLC1ERKS_(%class.GURL* %37, %class.GURL* dereferenceable(120) %43) #8
  call void @_ZN4GURLC1ERKS_(%class.GURL* %38, %class.GURL* dereferenceable(120) %44) #8
  store i8 1, i8* %22, align 8
  br label %155

155:                                              ; preds = %151, %154
  call void @_ZN4GURLD1Ev(%class.GURL* %44) #8
  call void @_ZN4GURLD1Ev(%class.GURL* %43) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %40) #8
  br label %168

156:                                              ; preds = %142, %145
  %157 = icmp eq i64 %52, 0
  br i1 %157, label %168, label %158

158:                                              ; preds = %156
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %45) #8
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %46) #8
  %159 = load %class.GURL*, %class.GURL** %21, align 8
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %12, %class.GURL* %159) #8
  store i64 1, i64* %47, align 8
  call void @_ZN4GURLC1ERKS_(%class.GURL* %48, %class.GURL* nonnull dereferenceable(120) %6) #8
  call void @_ZN4GURLC1ERKS_(%class.GURL* %49, %class.GURL* nonnull dereferenceable(120) %12) #8
  %160 = load i8, i8* %22, align 8, !range !2
  %161 = icmp eq i8 %160, 0
  %162 = load i64, i64* %47, align 8
  store i64 %162, i64* %36, align 8
  br i1 %161, label %166, label %163

163:                                              ; preds = %158
  %164 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %37, %class.GURL* dereferenceable(120) %48) #8
  %165 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %38, %class.GURL* dereferenceable(120) %49) #8
  br label %167

166:                                              ; preds = %158
  call void @_ZN4GURLC1ERKS_(%class.GURL* %37, %class.GURL* dereferenceable(120) %48) #8
  call void @_ZN4GURLC1ERKS_(%class.GURL* %38, %class.GURL* dereferenceable(120) %49) #8
  store i8 1, i8* %22, align 8
  br label %167

167:                                              ; preds = %163, %166
  call void @_ZN4GURLD1Ev(%class.GURL* %49) #8
  call void @_ZN4GURLD1Ev(%class.GURL* %48) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %45) #8
  br label %168

168:                                              ; preds = %98, %80, %83, %155, %167, %141, %156
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %20) #8
  %169 = add nuw i64 %52, 1
  %170 = load i64, i64* %14, align 8
  %171 = load i64, i64* %16, align 8
  %172 = sub i64 %170, %171
  %173 = sdiv exact i64 %172, 120
  %174 = icmp ult i64 %169, %173
  br i1 %174, label %50, label %175

175:                                              ; preds = %168, %4
  %176 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %177 = load i8, i8* %176, align 8, !range !2
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %183, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %181 = load i64, i64* %180, align 8
  %182 = add i64 %181, 1
  store i64 %182, i64* %180, align 8
  br label %183

183:                                              ; preds = %175, %179
  %184 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %184, align 8
  %185 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %186 = bitcast %union.anon.17* %185 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 120, i1 false) #8
  br label %187

187:                                              ; preds = %77, %61, %183
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15login_detection18OAuthLoginDetector30CheckSuccessfulLoginCompletionERK4GURL(%"class.login_detection::OAuthLoginDetector"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10, !prof !3

9:                                                ; preds = %2
  tail call void @llvm.trap() #8
  unreachable

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64 @_ZN15login_detection37GetOAuthLoginFlowStartToCompleteLimitEv() #8
  %14 = icmp ugt i64 %12, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = load i8, i8* %6, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %153, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %19) #8
  %20 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %20) #8
  store i8 0, i8* %6, align 8
  br label %153

21:                                               ; preds = %10
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8
  call void @_ZN15login_detection17GetSiteNameForURLERK4GURL(%"class.std::__1::basic_string"* nonnull sret %4, %class.GURL* dereferenceable(120) %1) #8
  %23 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #8
  %24 = load i8, i8* %6, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %21
  call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @_ZN15login_detection17GetSiteNameForURLERK4GURL(%"class.std::__1::basic_string"* nonnull sret %5, %class.GURL* dereferenceable(120) %28) #8
  %29 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %31 to i64
  %36 = select i1 %32, i64 %34, i64 %35
  %37 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %39 to i64
  %44 = select i1 %40, i64 %42, i64 %43
  %45 = icmp eq i64 %36, %44
  br i1 %45, label %46, label %76

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = select i1 %32, i8* %48, i8* %22
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = select i1 %40, i8* %51, i8* %23
  %53 = icmp eq i64 %36, 0
  br i1 %32, label %60, label %54

54:                                               ; preds = %46
  br i1 %53, label %76, label %55

55:                                               ; preds = %54
  %56 = ptrtoint i8* %48 to i64
  %57 = trunc i64 %56 to i8
  %58 = load i8, i8* %52, align 1
  %59 = icmp eq i8 %58, %57
  br i1 %59, label %64, label %76

60:                                               ; preds = %46
  br i1 %53, label %76, label %61

61:                                               ; preds = %60
  %62 = call i32 @bcmp(i8* %49, i8* %52, i64 %36) #8
  %63 = icmp eq i32 %62, 0
  br label %76

64:                                               ; preds = %55, %71
  %65 = phi i64 [ %68, %71 ], [ %35, %55 ]
  %66 = phi i8* [ %69, %71 ], [ %22, %55 ]
  %67 = phi i8* [ %72, %71 ], [ %52, %55 ]
  %68 = add i64 %65, -1
  %69 = getelementptr inbounds i8, i8* %66, i64 1
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds i8, i8* %67, i64 1
  %73 = load i8, i8* %69, align 1
  %74 = load i8, i8* %72, align 1
  %75 = icmp eq i8 %73, %74
  br i1 %75, label %64, label %76

76:                                               ; preds = %64, %71, %55, %27, %54, %60, %61
  %77 = phi i1 [ false, %27 ], [ %63, %61 ], [ true, %60 ], [ true, %54 ], [ false, %55 ], [ false, %71 ], [ true, %64 ]
  br i1 %40, label %78, label %82

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #9
  %81 = load i8, i8* %30, align 1
  br label %82

82:                                               ; preds = %76, %78
  %83 = phi i8 [ %31, %76 ], [ %81, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #9
  br label %88

88:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8
  br i1 %77, label %153, label %89

89:                                               ; preds = %88
  %90 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 6, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp sgt i32 %91, -1
  br i1 %92, label %93, label %144

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 1, i32 0, i32 0
  %95 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %96 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %97 = icmp eq %"class.std::__1::__tree_end_node"* %95, %96
  br i1 %97, label %153, label %98

98:                                               ; preds = %93
  %99 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  br label %103

103:                                              ; preds = %141, %98
  %104 = phi %"class.std::__1::__tree_end_node"* [ %95, %98 ], [ %142, %141 ]
  %105 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %104, i64 4
  %106 = bitcast %"class.std::__1::__tree_end_node"* %105 to %"class.std::__1::basic_string"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 0, i64 24, i1 false) #8
  %107 = call zeroext i1 @_ZN3net21GetValueForKeyInQueryERK4GURLRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPS9_(%class.GURL* dereferenceable(120) %1, %"class.std::__1::basic_string"* dereferenceable(24) %106, %"class.std::__1::basic_string"* nonnull %3) #8
  %108 = load i8, i8* %102, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %103
  %111 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %111) #9
  br label %112

112:                                              ; preds = %110, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #8
  br i1 %107, label %113, label %144

113:                                              ; preds = %112
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %104, i64 1, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, null
  br i1 %116, label %117, label %125

117:                                              ; preds = %113
  %118 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.std::__1::__tree_node_base"*
  %119 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %104, i64 2
  %120 = bitcast %"class.std::__1::__tree_end_node"* %119 to %"class.std::__1::__tree_end_node"**
  %121 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, %118
  br i1 %124, label %141, label %132

125:                                              ; preds = %113, %125
  %126 = phi %"class.std::__1::__tree_node_base"* [ %128, %125 ], [ %115, %113 ]
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %126, i64 0, i32 0, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  %129 = icmp eq %"class.std::__1::__tree_node_base"* %128, null
  br i1 %129, label %130, label %125

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %126, i64 0, i32 0
  br label %141

132:                                              ; preds = %117, %132
  %133 = phi %"class.std::__1::__tree_end_node"** [ %136, %132 ], [ %120, %117 ]
  %134 = bitcast %"class.std::__1::__tree_end_node"** %133 to %"class.std::__1::__tree_node_base"**
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %135, i64 0, i32 2
  %137 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %136, align 8
  %138 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %137, i64 0, i32 0
  %139 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %138, align 8
  %140 = icmp eq %"class.std::__1::__tree_node_base"* %139, %135
  br i1 %140, label %141, label %132

141:                                              ; preds = %132, %130, %117
  %142 = phi %"class.std::__1::__tree_end_node"* [ %131, %130 ], [ %121, %117 ], [ %137, %132 ]
  %143 = icmp eq %"class.std::__1::__tree_end_node"* %142, %96
  br i1 %143, label %153, label %103

144:                                              ; preds = %112, %89
  %145 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %146 = load i8, i8* %145, align 8, !range !2
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %153, label %148

148:                                              ; preds = %144
  %149 = load i8, i8* %6, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  call void @_ZN4GURLD1Ev(%class.GURL* %152) #8
  call void @_ZN4GURLD1Ev(%class.GURL* %28) #8
  store i8 0, i8* %6, align 8
  br label %153

153:                                              ; preds = %141, %144, %93, %151, %148, %18, %15, %88
  %154 = phi i1 [ false, %88 ], [ false, %144 ], [ false, %15 ], [ false, %18 ], [ false, %148 ], [ false, %151 ], [ true, %93 ], [ true, %141 ]
  ret i1 %154
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL*) local_unnamed_addr #1

declare void @_ZNK4GURL9GetOriginEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15login_detection18OAuthLoginDetector14DidOpenAsPopUpERK4GURL(%"class.login_detection::OAuthLoginDetector"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.GURL, align 8
  %4 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #8
  %9 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %8) #8
  br i1 %9, label %10, label %20

10:                                               ; preds = %7
  %11 = bitcast %class.GURL* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %11) #8
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %3, %class.GURL* %1) #8
  %12 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %14, label %18, label %16

16:                                               ; preds = %10
  %17 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %15, %class.GURL* nonnull dereferenceable(120) %3) #8
  br label %19

18:                                               ; preds = %10
  call void @_ZN4GURLC1EOS_(%class.GURL* %15, %class.GURL* nonnull dereferenceable(120) %3) #8
  store i8 1, i8* %12, align 8
  br label %19

19:                                               ; preds = %16, %18
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %11) #8
  br label %20

20:                                               ; preds = %2, %19, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15login_detection18OAuthLoginDetector21GetPopUpLoginFlowSiteEv(%"class.absl::optional.13"* noalias sret, %"class.login_detection::OAuthLoginDetector"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon.17* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 120, i1 false) #8
  br label %22

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %union.anon.17* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 120, i1 false) #8
  br label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.login_detection::OAuthLoginDetector", %"class.login_detection::OAuthLoginDetector"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %20 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %20, align 8
  %21 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %21, %class.GURL* dereferenceable(120) %19) #8
  br label %22

22:                                               ; preds = %18, %14, %6
  ret void
}

declare i64 @_ZN15login_detection37GetOAuthLoginFlowStartToCompleteLimitEv() local_unnamed_addr #1

declare void @_ZN15login_detection17GetSiteNameForURLERK4GURL(%"class.std::__1::basic_string"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

declare zeroext i1 @_ZN3net21GetValueForKeyInQueryERK4GURLRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPS9_(%class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #9
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
