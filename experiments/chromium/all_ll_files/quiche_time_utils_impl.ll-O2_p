; ModuleID = '../../net/third_party/quiche/overrides/quiche_platform_impl/quiche_time_utils_impl.cc'
source_filename = "../../net/third_party/quiche/overrides/quiche_platform_impl/quiche_time_utils_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Time::Exploded" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN6quiche35QuicheUtcDateTimeToUnixSecondsInnerEiiiiii(i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %7 = alloca %"struct.base::Time::Exploded", align 4
  %8 = alloca %"class.base::Time", align 8
  %9 = bitcast %"struct.base::Time::Exploded"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #3
  %10 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 4
  %15 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 5
  %16 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 6
  %17 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 7
  store i32 %0, i32* %10, align 4
  store i32 %1, i32* %11, align 4
  store i32 0, i32* %12, align 4
  store i32 %2, i32* %13, align 4
  store i32 %3, i32* %14, align 4
  store i32 %4, i32* %15, align 4
  store i32 %5, i32* %16, align 4
  store i32 0, i32* %17, align 4
  %18 = bitcast %"class.base::Time"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #3
  %19 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %8, i64 0, i32 0, i32 0
  store i64 0, i64* %19, align 8
  %20 = call zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext false, %"struct.base::Time::Exploded"* nonnull dereferenceable(32) %7, %"class.base::Time"* nonnull %8) #3
  br i1 %20, label %21, label %29

21:                                               ; preds = %6
  %22 = call i64 @_ZN4base4Time9UnixEpochEv() #3
  %23 = load i64, i64* %19, align 8
  %24 = sub nsw i64 %23, %22
  %25 = add i64 %24, -9223372036854775807
  %26 = icmp ult i64 %25, 2
  %27 = sdiv i64 %24, 1000000
  %28 = select i1 %26, i64 %24, i64 %27
  br label %29

29:                                               ; preds = %6, %21
  %30 = phi i8 [ 1, %21 ], [ 0, %6 ]
  %31 = phi i64 [ %28, %21 ], [ undef, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #3
  %32 = insertvalue { i8, i64 } undef, i8 %30, 0
  %33 = insertvalue { i8, i64 } %32, i64 %31, 1
  ret { i8, i64 } %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN6quiche34QuicheUtcDateTimeToUnixSecondsImplEiiiiii(i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %7 = alloca %"struct.base::Time::Exploded", align 4
  %8 = alloca %"class.base::Time", align 8
  %9 = alloca %"struct.base::Time::Exploded", align 4
  %10 = alloca %"class.base::Time", align 8
  %11 = icmp eq i32 %5, 60
  br i1 %11, label %12, label %34

12:                                               ; preds = %6
  %13 = bitcast %"struct.base::Time::Exploded"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #3
  %14 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %9, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %9, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %9, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %9, i64 0, i32 3
  %18 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %9, i64 0, i32 4
  %19 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %9, i64 0, i32 5
  %20 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %9, i64 0, i32 6
  %21 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %9, i64 0, i32 7
  store i32 %0, i32* %14, align 4
  store i32 %1, i32* %15, align 4
  store i32 0, i32* %16, align 4
  store i32 %2, i32* %17, align 4
  store i32 %3, i32* %18, align 4
  store i32 %4, i32* %19, align 4
  store i32 59, i32* %20, align 4
  store i32 0, i32* %21, align 4
  %22 = bitcast %"class.base::Time"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #3
  %23 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %10, i64 0, i32 0, i32 0
  store i64 0, i64* %23, align 8
  %24 = call zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext false, %"struct.base::Time::Exploded"* nonnull dereferenceable(32) %9, %"class.base::Time"* nonnull %10) #3
  br i1 %24, label %25, label %55

25:                                               ; preds = %12
  %26 = call i64 @_ZN4base4Time9UnixEpochEv() #3
  %27 = load i64, i64* %23, align 8
  %28 = sub nsw i64 %27, %26
  %29 = add i64 %28, -9223372036854775807
  %30 = icmp ult i64 %29, 2
  %31 = sdiv i64 %28, 1000000
  %32 = select i1 %30, i64 %28, i64 %31
  %33 = add i64 %32, 1
  br label %55

34:                                               ; preds = %6
  %35 = bitcast %"struct.base::Time::Exploded"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #3
  %36 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 2
  %39 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 3
  %40 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 4
  %41 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 5
  %42 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 6
  %43 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %7, i64 0, i32 7
  store i32 %0, i32* %36, align 4
  store i32 %1, i32* %37, align 4
  store i32 0, i32* %38, align 4
  store i32 %2, i32* %39, align 4
  store i32 %3, i32* %40, align 4
  store i32 %4, i32* %41, align 4
  store i32 %5, i32* %42, align 4
  store i32 0, i32* %43, align 4
  %44 = bitcast %"class.base::Time"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #3
  %45 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %8, i64 0, i32 0, i32 0
  store i64 0, i64* %45, align 8
  %46 = call zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext false, %"struct.base::Time::Exploded"* nonnull dereferenceable(32) %7, %"class.base::Time"* nonnull %8) #3
  br i1 %46, label %47, label %55

47:                                               ; preds = %34
  %48 = call i64 @_ZN4base4Time9UnixEpochEv() #3
  %49 = load i64, i64* %45, align 8
  %50 = sub nsw i64 %49, %48
  %51 = add i64 %50, -9223372036854775807
  %52 = icmp ult i64 %51, 2
  %53 = sdiv i64 %50, 1000000
  %54 = select i1 %52, i64 %50, i64 %53
  br label %55

55:                                               ; preds = %47, %34, %25, %12
  %56 = phi i8* [ %22, %12 ], [ %22, %25 ], [ %44, %34 ], [ %44, %47 ]
  %57 = phi i8* [ %13, %12 ], [ %13, %25 ], [ %35, %34 ], [ %35, %47 ]
  %58 = phi i8 [ 0, %12 ], [ 1, %25 ], [ 0, %34 ], [ 1, %47 ]
  %59 = phi i64 [ undef, %12 ], [ %33, %25 ], [ undef, %34 ], [ %54, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #3
  %60 = insertvalue { i8, i64 } undef, i8 %58, 0
  %61 = insertvalue { i8, i64 } %60, i64 %59, 1
  ret { i8, i64 } %61
}

declare zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext, %"struct.base::Time::Exploded"* dereferenceable(32), %"class.base::Time"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
