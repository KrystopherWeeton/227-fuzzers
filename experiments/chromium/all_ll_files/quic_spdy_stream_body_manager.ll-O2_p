; ModuleID = '../../net/third_party/quiche/src/quic/core/http/quic_spdy_stream_body_manager.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/http/quic_spdy_stream_body_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::QuicSpdyStreamBodyManager" = type { %"class.quiche::QuicheCircularDeque", i64 }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicSpdyStreamBodyManager::Fragment, 3, std::__1::allocator<quic::QuicSpdyStreamBodyManager::Fragment> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicSpdyStreamBodyManager::Fragment, 3, std::__1::allocator<quic::QuicSpdyStreamBodyManager::Fragment> >::AllocatorAndData" = type { %"struct.quic::QuicSpdyStreamBodyManager::Fragment"*, i64 }
%"struct.quic::QuicSpdyStreamBodyManager::Fragment" = type { %"class.absl::string_view", i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.iovec = type { i8*, i64 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN6quiche19QuicheCircularDequeIN4quic25QuicSpdyStreamBodyManager8FragmentELm3ENSt3__19allocatorIS3_EEE8RelocateEm = comdat any

@.str = private unnamed_addr constant [81 x i8] c"../../net/third_party/quiche/src/quic/core/http/quic_spdy_stream_body_manager.cc\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"Not enough available body to consume.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4quic25QuicSpdyStreamBodyManagerC1Ev = hidden unnamed_addr alias void (%"class.quic::QuicSpdyStreamBodyManager"*), void (%"class.quic::QuicSpdyStreamBodyManager"*)* @_ZN4quic25QuicSpdyStreamBodyManagerC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic25QuicSpdyStreamBodyManagerC2Ev(%"class.quic::QuicSpdyStreamBodyManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.quic::QuicSpdyStreamBodyManager"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = icmp eq i64 %6, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 2, i32 1
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %8, %10
  %14 = phi i64 [ %12, %10 ], [ %6, %8 ]
  %15 = add i64 %14, -1
  %16 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 2, i32 0
  %17 = load %"struct.quic::QuicSpdyStreamBodyManager::Fragment"*, %"struct.quic::QuicSpdyStreamBodyManager::Fragment"** %16, align 8
  %18 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %17, i64 %15, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, %1
  store i64 %20, i64* %18, align 8
  br label %21

21:                                               ; preds = %2, %13
  %22 = phi i64 [ 0, %13 ], [ %1, %2 ]
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic25QuicSpdyStreamBodyManager6OnBodyEN4absl11string_viewE(%"class.quic::QuicSpdyStreamBodyManager"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %5
  %9 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 2, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = select i1 %8, i64 %10, i64 0
  %12 = sub i64 1, %5
  %13 = add i64 %12, %7
  %14 = add i64 %13, %11
  %15 = icmp eq i64 %10, 0
  %16 = add i64 %10, -1
  %17 = select i1 %15, i64 0, i64 %16
  %18 = icmp ult i64 %17, %14
  br i1 %18, label %19, label %28

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0
  %21 = lshr i64 %17, 2
  %22 = icmp ugt i64 %21, 3
  %23 = select i1 %22, i64 %21, i64 3
  %24 = add i64 %23, %17
  %25 = icmp ult i64 %14, %24
  %26 = select i1 %25, i64 %24, i64 %14
  tail call void @_ZN6quiche19QuicheCircularDequeIN4quic25QuicSpdyStreamBodyManager8FragmentELm3ENSt3__19allocatorIS3_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque"* %20, i64 %26) #9
  %27 = load i64, i64* %6, align 8
  br label %28

28:                                               ; preds = %3, %19
  %29 = phi i64 [ %7, %3 ], [ %27, %19 ]
  %30 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 2, i32 0
  %31 = load %"struct.quic::QuicSpdyStreamBodyManager::Fragment"*, %"struct.quic::QuicSpdyStreamBodyManager::Fragment"** %30, align 8
  %32 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %31, i64 %29, i32 0, i32 0
  store i8* %1, i8** %32, align 8
  %33 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %31, i64 %29, i32 0, i32 1
  store i64 %2, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %31, i64 %29, i32 1
  store i64 0, i64* %34, align 8
  %35 = load i64, i64* %6, align 8
  %36 = load i64, i64* %9, align 8
  %37 = add i64 %36, -1
  %38 = icmp eq i64 %37, %35
  %39 = add i64 %35, 1
  %40 = select i1 %38, i64 0, i64 %39
  store i64 %40, i64* %6, align 8
  %41 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, %2
  store i64 %43, i64* %41, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4quic25QuicSpdyStreamBodyManager14OnBodyConsumedEm(%"class.quic::QuicSpdyStreamBodyManager"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %50, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 2, i32 0
  %9 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 2, i32 1
  %10 = load i64, i64* %6, align 8
  %11 = load i64, i64* %7, align 8
  br label %12

12:                                               ; preds = %5, %38
  %13 = phi i64 [ %10, %5 ], [ %48, %38 ]
  %14 = phi i64 [ 0, %5 ], [ %43, %38 ]
  %15 = phi i64 [ %1, %5 ], [ %39, %38 ]
  %16 = icmp eq i64 %13, %11
  br i1 %16, label %17, label %24

17:                                               ; preds = %12
  %18 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %18, label %19, label %50

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %20) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str, i64 0, i64 0), i32 44, i32 2) #9
  %21 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_ostringstream"* %21 to %"class.std::__1::basic_ostream"*
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %20) #9
  br label %50

24:                                               ; preds = %12
  %25 = load %"struct.quic::QuicSpdyStreamBodyManager::Fragment"*, %"struct.quic::QuicSpdyStreamBodyManager::Fragment"** %8, align 8
  %26 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %25, i64 %13, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %25, i64 %13, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %15, %29
  br i1 %30, label %31, label %38

31:                                               ; preds = %24
  %32 = sub i64 %29, %15
  %33 = icmp sgt i64 %32, -1
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %31
  tail call void @llvm.trap() #9
  unreachable

35:                                               ; preds = %31
  %36 = add i64 %14, %15
  %37 = getelementptr inbounds i8, i8* %27, i64 %15
  store i8* %37, i8** %26, align 8
  store i64 %32, i64* %28, align 8
  br label %50

38:                                               ; preds = %24
  %39 = sub i64 %15, %29
  %40 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %25, i64 %13, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %29, %14
  %43 = add i64 %42, %41
  %44 = load i64, i64* %9, align 8
  %45 = add i64 %44, -1
  %46 = icmp eq i64 %45, %13
  %47 = add i64 %13, 1
  %48 = select i1 %46, i64 0, i64 %47
  store i64 %48, i64* %6, align 8
  %49 = icmp eq i64 %39, 0
  br i1 %49, label %50, label %12

50:                                               ; preds = %38, %2, %35, %19, %17
  %51 = phi i64 [ 0, %17 ], [ 0, %19 ], [ %36, %35 ], [ 0, %2 ], [ %43, %38 ]
  ret i64 %51
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4quic25QuicSpdyStreamBodyManager8PeekBodyEP5iovecm(%"class.quic::QuicSpdyStreamBodyManager"* nocapture readonly, %struct.iovec* nocapture, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 2, i32 1
  %11 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 2, i32 0
  br label %14

12:                                               ; preds = %3
  %13 = bitcast %struct.iovec* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  br label %45

14:                                               ; preds = %9, %28
  %15 = phi i64 [ %42, %28 ], [ %7, %9 ]
  %16 = phi i64 [ %41, %28 ], [ %5, %9 ]
  %17 = phi i64 [ %40, %28 ], [ 0, %9 ]
  %18 = icmp ult i64 %15, %16
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = load i64, i64* %10, align 8
  %21 = add i64 %20, %15
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i64 [ %21, %19 ], [ %15, %14 ]
  %24 = sub i64 %23, %16
  %25 = icmp ult i64 %17, %24
  %26 = icmp ult i64 %17, %2
  %27 = and i1 %26, %25
  br i1 %27, label %28, label %43

28:                                               ; preds = %22
  %29 = add i64 %16, %17
  %30 = load i64, i64* %10, align 8
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i64 0, i64 %30
  %33 = sub i64 %29, %32
  %34 = load %"struct.quic::QuicSpdyStreamBodyManager::Fragment"*, %"struct.quic::QuicSpdyStreamBodyManager::Fragment"** %11, align 8
  %35 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %34, i64 %33
  %36 = bitcast %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %35 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  %38 = getelementptr inbounds %struct.iovec, %struct.iovec* %1, i64 %17, i32 0
  %39 = bitcast i8** %38 to <2 x i64>*
  store <2 x i64> %37, <2 x i64>* %39, align 8
  %40 = add nuw i64 %17, 1
  %41 = load i64, i64* %4, align 8
  %42 = load i64, i64* %6, align 8
  br label %14

43:                                               ; preds = %22
  %44 = trunc i64 %17 to i32
  br label %45

45:                                               ; preds = %43, %12
  %46 = phi i32 [ 0, %12 ], [ %44, %43 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4quic25QuicSpdyStreamBodyManager8ReadBodyEPK5iovecmPm(%"class.quic::QuicSpdyStreamBodyManager"* nocapture, %struct.iovec* nocapture readonly, i64, i64* nocapture) local_unnamed_addr #0 align 2 {
  store i64 0, i64* %3, align 8
  %5 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %70, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.iovec, %struct.iovec* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.iovec, %struct.iovec* %1, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 2, i32 0
  %16 = getelementptr inbounds %"class.quic::QuicSpdyStreamBodyManager", %"class.quic::QuicSpdyStreamBodyManager"* %0, i64 0, i32 0, i32 2, i32 1
  br label %17

17:                                               ; preds = %10, %63
  %18 = phi i64 [ %6, %10 ], [ %67, %63 ]
  %19 = phi i64 [ 0, %10 ], [ %50, %63 ]
  %20 = phi i64 [ 0, %10 ], [ %66, %63 ]
  %21 = phi i8* [ %14, %10 ], [ %65, %63 ]
  %22 = phi i64 [ %12, %10 ], [ %64, %63 ]
  %23 = load %"struct.quic::QuicSpdyStreamBodyManager::Fragment"*, %"struct.quic::QuicSpdyStreamBodyManager::Fragment"** %15, align 8
  %24 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %23, i64 %18, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %23, i64 %18, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %22, %27
  %29 = select i1 %28, i64 %22, i64 %27
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %25, i64 %29, i1 false)
  %30 = add i64 %29, %19
  %31 = load i64, i64* %3, align 8
  %32 = add i64 %31, %29
  store i64 %32, i64* %3, align 8
  br i1 %28, label %43, label %33

33:                                               ; preds = %17
  %34 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %23, i64 %18, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, %30
  %37 = load i64, i64* %5, align 8
  %38 = load i64, i64* %16, align 8
  %39 = add i64 %38, -1
  %40 = icmp eq i64 %39, %37
  %41 = add i64 %37, 1
  %42 = select i1 %40, i64 0, i64 %41
  store i64 %42, i64* %5, align 8
  br label %49

43:                                               ; preds = %17
  %44 = sub i64 %27, %29
  %45 = icmp sgt i64 %44, -1
  br i1 %45, label %47, label %46, !prof !2

46:                                               ; preds = %43
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %43
  %48 = getelementptr inbounds i8, i8* %25, i64 %29
  store i8* %48, i8** %24, align 8
  store i64 %44, i64* %26, align 8
  br label %49

49:                                               ; preds = %47, %33
  %50 = phi i64 [ %36, %33 ], [ %30, %47 ]
  %51 = icmp ugt i64 %22, %27
  br i1 %51, label %60, label %52

52:                                               ; preds = %49
  %53 = add i64 %20, 1
  %54 = icmp eq i64 %53, %2
  br i1 %54, label %70, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.iovec, %struct.iovec* %1, i64 %53, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %struct.iovec, %struct.iovec* %1, i64 %53, i32 1
  %59 = load i64, i64* %58, align 8
  br label %63

60:                                               ; preds = %49
  %61 = getelementptr inbounds i8, i8* %21, i64 %29
  %62 = sub i64 %22, %29
  br label %63

63:                                               ; preds = %55, %60
  %64 = phi i64 [ %62, %60 ], [ %59, %55 ]
  %65 = phi i8* [ %61, %60 ], [ %57, %55 ]
  %66 = phi i64 [ %20, %60 ], [ %53, %55 ]
  %67 = load i64, i64* %5, align 8
  %68 = load i64, i64* %7, align 8
  %69 = icmp eq i64 %67, %68
  br i1 %69, label %70, label %17

70:                                               ; preds = %63, %52, %4
  %71 = phi i64 [ 0, %4 ], [ %50, %52 ], [ %50, %63 ]
  ret i64 %71
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6quiche19QuicheCircularDequeIN4quic25QuicSpdyStreamBodyManager8FragmentELm3ENSt3__19allocatorIS3_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %6
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i64 [ %11, %8 ], [ %6, %2 ]
  %14 = sub i64 %13, %4
  %15 = add i64 %1, 1
  %16 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2
  %17 = icmp ugt i64 %15, 768614336404564650
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  tail call void @abort() #11
  unreachable

19:                                               ; preds = %12
  %20 = mul i64 %15, 24
  %21 = tail call i8* @_Znwm(i64 %20) #10
  %22 = bitcast i8* %21 to %"struct.quic::QuicSpdyStreamBodyManager::Fragment"*
  %23 = icmp ugt i64 %6, %4
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 0
  %26 = load %"struct.quic::QuicSpdyStreamBodyManager::Fragment"*, %"struct.quic::QuicSpdyStreamBodyManager::Fragment"** %25, align 8
  %27 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %26, i64 %4
  %28 = bitcast %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %27 to i8*
  %29 = sub i64 %6, %4
  %30 = mul i64 %29, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %28, i64 %30, i1 false) #9
  br label %45

31:                                               ; preds = %19
  br i1 %7, label %32, label %45

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %4
  %36 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 0
  %37 = load %"struct.quic::QuicSpdyStreamBodyManager::Fragment"*, %"struct.quic::QuicSpdyStreamBodyManager::Fragment"** %36, align 8
  %38 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %37, i64 %4
  %39 = bitcast %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %38 to i8*
  %40 = mul i64 %35, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %39, i64 %40, i1 false) #9
  %41 = getelementptr inbounds %"struct.quic::QuicSpdyStreamBodyManager::Fragment", %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %22, i64 %35
  %42 = bitcast %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %41 to i8*
  %43 = bitcast %"struct.quic::QuicSpdyStreamBodyManager::Fragment"* %37 to i8*
  %44 = mul i64 %6, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %44, i1 false) #9
  br label %45

45:                                               ; preds = %31, %32, %24
  %46 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  %49 = bitcast %"struct.quiche::QuicheCircularDeque<quic::QuicSpdyStreamBodyManager::Fragment, 3, std::__1::allocator<quic::QuicSpdyStreamBodyManager::Fragment> >::AllocatorAndData"* %16 to i8**
  br i1 %48, label %52, label %50

50:                                               ; preds = %45
  %51 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %45, %50
  store i8* %21, i8** %49, align 8
  store i64 %15, i64* %46, align 8
  store i64 0, i64* %3, align 8
  store i64 %14, i64* %5, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
