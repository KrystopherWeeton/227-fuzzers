; ModuleID = '../../third_party/libgav1/src/src/dsp/weight_mask.cc'
source_filename = "../../third_party/libgav1/src/src/dsp/weight_mask.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.libgav1::dsp::Dsp" = type { void (i8*, i8*, i32, i32, i8*, i64)*, void (i8*, i64, i8*, i32*)*, [2 x [3 x void (i16*, i64, i32, i32, i32, i32, i32, i8*, i64)*]], [19 x void (i8*, i64, [32 x i16]*, i32)*], [19 x [3 x void ([32 x i16]*, i32, i32, i8*, i64)*]], [2 x [2 x [2 x [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i8*, i64)*]]]], [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64)*], void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i64, i8*, i8*, i32, i32, i32, i32, i1, i1)*, void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i8*, i8, i8, i32, i32, i8*, i64)*, %"struct.libgav1::dsp::FilmGrainFuncs", void (i8*, i64, i8*, i8*, i8, i32, i32)*, [3 x void (i8*, i8*, i64, i8*, i64, i32, i32)*], void (i8*, i32, i32)*, void (i8*, i32)*, [19 x [10 x void (i8*, i64, i8*, i8*)*]], [4 x [5 x [2 x void (i8, i8, i32, i8*, i32, i32, i8*)*]]], [4 x [2 x void (i8*, i64, i32, i32, i32)*]], [2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*], [3 x [2 x void (i8*, i8*, i64, i8*, i64, i32, i32, i8*, i64)*]], void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*], [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*], [2 x void (i8*, i64, i32, i32, i8*, i64)*], void (i32, i32, i32, i8*)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, [6 x [6 x [2 x void (i8*, i8*, i8*, i64)*]]] }
%"struct.libgav1::dsp::FilmGrainFuncs" = type { [3 x void (%"struct.libgav1::FilmGrainParams"*, i8*)*], [2 x [4 x void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)*]], [2 x void (i8*, i32, i32, i32, i32, i32, i8*)*], void (i8*, i32, i32, i32, i32, i8*)*, void (i32, i8*, i8*, i8*)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, [2 x void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*] }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"struct.libgav1::RestorationUnitInfo" = type { i8, %"struct.libgav1::SgrProjInfo", [16 x i8], %"struct.libgav1::WienerInfo" }
%"struct.libgav1::SgrProjInfo" = type { i32, [2 x i32] }
%"struct.libgav1::WienerInfo" = type { [2 x i16], [28 x i8], [2 x [4 x i16]], [16 x i8] }
%"union.libgav1::RestorationBuffer" = type { %"struct.libgav1::SgrBuffer", [5024 x i8] }
%"struct.libgav1::SgrBuffer" = type { [1152 x i16], [1440 x i16], [1152 x i32], [1440 x i32], [1024 x i16], [768 x i16], [512 x i16], [1024 x i32], [768 x i32], [512 x i32], [288 x i8], [288 x i32] }
%"struct.libgav1::ReferenceInfo" = type { %"struct.std::__1::array", %"struct.std::__1::array.0", %"struct.std::__1::array.0", %"struct.std::__1::array.1", %"struct.std::__1::array.2", %"class.libgav1::Array2D", %"class.libgav1::Array2D.4" }
%"struct.std::__1::array" = type { [8 x i8] }
%"struct.std::__1::array.0" = type { [8 x i8] }
%"struct.std::__1::array.1" = type { [8 x i8] }
%"struct.std::__1::array.2" = type { [8 x i16] }
%"class.libgav1::Array2D" = type { %"class.std::__1::unique_ptr", i64, i64, %"class.libgav1::Array2DView" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.libgav1::Array2DView" = type { i32, i32, i8* }
%"class.libgav1::Array2D.4" = type { %"class.std::__1::unique_ptr.5", i64, i64, %"class.libgav1::Array2DView.11" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.libgav1::MotionVector"* }
%"struct.libgav1::MotionVector" = type { %union.anon }
%union.anon = type { i32 }
%"class.libgav1::Array2DView.11" = type { i32, i32, %"struct.libgav1::MotionVector"* }
%"struct.libgav1::TemporalMotionField" = type { %"class.libgav1::Array2D.4", %"class.libgav1::Array2D.12" }
%"class.libgav1::Array2D.12" = type { %"class.std::__1::unique_ptr.13", i64, i64, %"class.libgav1::Array2DView.19" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%"class.libgav1::Array2DView.19" = type { i32, i32, i8* }
%"union.libgav1::CompoundMotionVector" = type { i64 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav13dsp16WeightMaskInit_CEv() local_unnamed_addr #0 {
  %1 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32 8) #2
  %2 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 0, i64 0, i64 0
  %3 = bitcast void (i8*, i8*, i8*, i64)** %2 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi8ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi8ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %3, align 8
  %4 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 0, i64 1, i64 0
  %5 = bitcast void (i8*, i8*, i8*, i64)** %4 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi16ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi16ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %5, align 8
  %6 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 0, i64 2, i64 0
  %7 = bitcast void (i8*, i8*, i8*, i64)** %6 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi32ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi32ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %7, align 8
  %8 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 1, i64 0, i64 0
  %9 = bitcast void (i8*, i8*, i8*, i64)** %8 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi8ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi8ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %9, align 8
  %10 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 1, i64 1, i64 0
  %11 = bitcast void (i8*, i8*, i8*, i64)** %10 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi16ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi16ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %11, align 8
  %12 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 1, i64 2, i64 0
  %13 = bitcast void (i8*, i8*, i8*, i64)** %12 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi32ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi32ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %13, align 8
  %14 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 1, i64 3, i64 0
  %15 = bitcast void (i8*, i8*, i8*, i64)** %14 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi64ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi64ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %15, align 8
  %16 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 2, i64 0, i64 0
  %17 = bitcast void (i8*, i8*, i8*, i64)** %16 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi8ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi8ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %17, align 8
  %18 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 2, i64 1, i64 0
  %19 = bitcast void (i8*, i8*, i8*, i64)** %18 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi16ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi16ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %19, align 8
  %20 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 2, i64 2, i64 0
  %21 = bitcast void (i8*, i8*, i8*, i64)** %20 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi32ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi32ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %21, align 8
  %22 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 2, i64 3, i64 0
  %23 = bitcast void (i8*, i8*, i8*, i64)** %22 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi64ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi64ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %23, align 8
  %24 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 3, i64 1, i64 0
  %25 = bitcast void (i8*, i8*, i8*, i64)** %24 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi16ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi16ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %25, align 8
  %26 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 3, i64 2, i64 0
  %27 = bitcast void (i8*, i8*, i8*, i64)** %26 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi32ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi32ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %27, align 8
  %28 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 3, i64 3, i64 0
  %29 = bitcast void (i8*, i8*, i8*, i64)** %28 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi64ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi64ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %29, align 8
  %30 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 3, i64 4, i64 0
  %31 = bitcast void (i8*, i8*, i8*, i64)** %30 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi128ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi128ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %31, align 8
  %32 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 4, i64 3, i64 0
  %33 = bitcast void (i8*, i8*, i8*, i64)** %32 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi64ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi64ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %33, align 8
  %34 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 29, i64 4, i64 4, i64 0
  %35 = bitcast void (i8*, i8*, i8*, i64)** %34 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi128ELi8ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi128ELi8ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %35, align 8
  %36 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32 10) #2
  %37 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 0, i64 0, i64 0
  %38 = bitcast void (i8*, i8*, i8*, i64)** %37 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi8ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi8ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %38, align 8
  %39 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 0, i64 1, i64 0
  %40 = bitcast void (i8*, i8*, i8*, i64)** %39 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi16ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi16ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %40, align 8
  %41 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 0, i64 2, i64 0
  %42 = bitcast void (i8*, i8*, i8*, i64)** %41 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi32ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi32ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %42, align 8
  %43 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 1, i64 0, i64 0
  %44 = bitcast void (i8*, i8*, i8*, i64)** %43 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi8ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi8ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %44, align 8
  %45 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 1, i64 1, i64 0
  %46 = bitcast void (i8*, i8*, i8*, i64)** %45 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi16ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi16ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %46, align 8
  %47 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 1, i64 2, i64 0
  %48 = bitcast void (i8*, i8*, i8*, i64)** %47 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi32ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi32ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %48, align 8
  %49 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 1, i64 3, i64 0
  %50 = bitcast void (i8*, i8*, i8*, i64)** %49 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi64ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi64ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %50, align 8
  %51 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 2, i64 0, i64 0
  %52 = bitcast void (i8*, i8*, i8*, i64)** %51 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi8ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi8ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %52, align 8
  %53 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 2, i64 1, i64 0
  %54 = bitcast void (i8*, i8*, i8*, i64)** %53 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi16ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi16ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %54, align 8
  %55 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 2, i64 2, i64 0
  %56 = bitcast void (i8*, i8*, i8*, i64)** %55 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi32ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi32ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %56, align 8
  %57 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 2, i64 3, i64 0
  %58 = bitcast void (i8*, i8*, i8*, i64)** %57 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi64ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi64ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %58, align 8
  %59 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 3, i64 1, i64 0
  %60 = bitcast void (i8*, i8*, i8*, i64)** %59 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi16ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi16ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %60, align 8
  %61 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 3, i64 2, i64 0
  %62 = bitcast void (i8*, i8*, i8*, i64)** %61 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi32ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi32ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %62, align 8
  %63 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 3, i64 3, i64 0
  %64 = bitcast void (i8*, i8*, i8*, i64)** %63 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi64ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi64ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %64, align 8
  %65 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 3, i64 4, i64 0
  %66 = bitcast void (i8*, i8*, i8*, i64)** %65 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi128ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi128ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %66, align 8
  %67 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 4, i64 3, i64 0
  %68 = bitcast void (i8*, i8*, i8*, i64)** %67 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi64ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi64ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %68, align 8
  %69 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %36, i64 0, i32 29, i64 4, i64 4, i64 0
  %70 = bitcast void (i8*, i8*, i8*, i64)** %69 to <2 x void (i8*, i8*, i8*, i64)*>*
  store <2 x void (i8*, i8*, i8*, i64)*> <void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi128ELi10ELb0EEEvPKvS4_Phl, void (i8*, i8*, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi128ELi10ELb1EEEvPKvS4_Phl>, <2 x void (i8*, i8*, i8*, i64)*>* %70, align 8
  ret void
}

declare %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi8ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i8* [ %2, %4 ], [ %147, %7 ]
  %9 = phi i16* [ %5, %4 ], [ %145, %7 ]
  %10 = phi i32 [ 0, %4 ], [ %148, %7 ]
  %11 = phi i16* [ %6, %4 ], [ %146, %7 ]
  %12 = load i16, i16* %9, align 2
  %13 = sext i16 %12 to i32
  %14 = load i16, i16* %11, align 2
  %15 = sext i16 %14 to i32
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %16, 0
  %18 = sub nsw i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = add nuw nsw i32 %19, 8
  %21 = lshr i32 %20, 8
  %22 = icmp ult i32 %21, 26
  %23 = select i1 %22, i32 %21, i32 26
  %24 = trunc i32 %23 to i8
  %25 = add nuw nsw i8 %24, 38
  store i8 %25, i8* %8, align 1
  %26 = getelementptr inbounds i16, i16* %9, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i32
  %29 = getelementptr inbounds i16, i16* %11, i64 1
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = sub nsw i32 %28, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = add nuw nsw i32 %35, 8
  %37 = lshr i32 %36, 8
  %38 = icmp ult i32 %37, 26
  %39 = select i1 %38, i32 %37, i32 26
  %40 = trunc i32 %39 to i8
  %41 = add nuw nsw i8 %40, 38
  %42 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds i16, i16* %9, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %11, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i32
  %49 = sub nsw i32 %45, %48
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 0, %49
  %52 = select i1 %50, i32 %51, i32 %49
  %53 = add nuw nsw i32 %52, 8
  %54 = lshr i32 %53, 8
  %55 = icmp ult i32 %54, 26
  %56 = select i1 %55, i32 %54, i32 26
  %57 = trunc i32 %56 to i8
  %58 = add nuw nsw i8 %57, 38
  %59 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i16, i16* %9, i64 3
  %61 = load i16, i16* %60, align 2
  %62 = sext i16 %61 to i32
  %63 = getelementptr inbounds i16, i16* %11, i64 3
  %64 = load i16, i16* %63, align 2
  %65 = sext i16 %64 to i32
  %66 = sub nsw i32 %62, %65
  %67 = icmp slt i32 %66, 0
  %68 = sub nsw i32 0, %66
  %69 = select i1 %67, i32 %68, i32 %66
  %70 = add nuw nsw i32 %69, 8
  %71 = lshr i32 %70, 8
  %72 = icmp ult i32 %71, 26
  %73 = select i1 %72, i32 %71, i32 26
  %74 = trunc i32 %73 to i8
  %75 = add nuw nsw i8 %74, 38
  %76 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %75, i8* %76, align 1
  %77 = getelementptr inbounds i16, i16* %9, i64 4
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i32
  %80 = getelementptr inbounds i16, i16* %11, i64 4
  %81 = load i16, i16* %80, align 2
  %82 = sext i16 %81 to i32
  %83 = sub nsw i32 %79, %82
  %84 = icmp slt i32 %83, 0
  %85 = sub nsw i32 0, %83
  %86 = select i1 %84, i32 %85, i32 %83
  %87 = add nuw nsw i32 %86, 8
  %88 = lshr i32 %87, 8
  %89 = icmp ult i32 %88, 26
  %90 = select i1 %89, i32 %88, i32 26
  %91 = trunc i32 %90 to i8
  %92 = add nuw nsw i8 %91, 38
  %93 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds i16, i16* %9, i64 5
  %95 = load i16, i16* %94, align 2
  %96 = sext i16 %95 to i32
  %97 = getelementptr inbounds i16, i16* %11, i64 5
  %98 = load i16, i16* %97, align 2
  %99 = sext i16 %98 to i32
  %100 = sub nsw i32 %96, %99
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = add nuw nsw i32 %103, 8
  %105 = lshr i32 %104, 8
  %106 = icmp ult i32 %105, 26
  %107 = select i1 %106, i32 %105, i32 26
  %108 = trunc i32 %107 to i8
  %109 = add nuw nsw i8 %108, 38
  %110 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i16, i16* %9, i64 6
  %112 = load i16, i16* %111, align 2
  %113 = sext i16 %112 to i32
  %114 = getelementptr inbounds i16, i16* %11, i64 6
  %115 = load i16, i16* %114, align 2
  %116 = sext i16 %115 to i32
  %117 = sub nsw i32 %113, %116
  %118 = icmp slt i32 %117, 0
  %119 = sub nsw i32 0, %117
  %120 = select i1 %118, i32 %119, i32 %117
  %121 = add nuw nsw i32 %120, 8
  %122 = lshr i32 %121, 8
  %123 = icmp ult i32 %122, 26
  %124 = select i1 %123, i32 %122, i32 26
  %125 = trunc i32 %124 to i8
  %126 = add nuw nsw i8 %125, 38
  %127 = getelementptr inbounds i8, i8* %8, i64 6
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds i16, i16* %9, i64 7
  %129 = load i16, i16* %128, align 2
  %130 = sext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %11, i64 7
  %132 = load i16, i16* %131, align 2
  %133 = sext i16 %132 to i32
  %134 = sub nsw i32 %130, %133
  %135 = icmp slt i32 %134, 0
  %136 = sub nsw i32 0, %134
  %137 = select i1 %135, i32 %136, i32 %134
  %138 = add nuw nsw i32 %137, 8
  %139 = lshr i32 %138, 8
  %140 = icmp ult i32 %139, 26
  %141 = select i1 %140, i32 %139, i32 26
  %142 = trunc i32 %141 to i8
  %143 = add nuw nsw i8 %142, 38
  %144 = getelementptr inbounds i8, i8* %8, i64 7
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i16, i16* %9, i64 8
  %146 = getelementptr inbounds i16, i16* %11, i64 8
  %147 = getelementptr inbounds i8, i8* %8, i64 %3
  %148 = add nuw nsw i32 %10, 1
  %149 = icmp eq i32 %148, 8
  br i1 %149, label %150, label %7

150:                                              ; preds = %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi8ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i8* [ %2, %4 ], [ %147, %7 ]
  %9 = phi i16* [ %5, %4 ], [ %145, %7 ]
  %10 = phi i32 [ 0, %4 ], [ %148, %7 ]
  %11 = phi i16* [ %6, %4 ], [ %146, %7 ]
  %12 = load i16, i16* %9, align 2
  %13 = sext i16 %12 to i32
  %14 = load i16, i16* %11, align 2
  %15 = sext i16 %14 to i32
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %16, 0
  %18 = sub nsw i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = add nuw nsw i32 %19, 8
  %21 = lshr i32 %20, 8
  %22 = icmp ult i32 %21, 26
  %23 = select i1 %22, i32 %21, i32 26
  %24 = trunc i32 %23 to i8
  %25 = sub nuw nsw i8 26, %24
  store i8 %25, i8* %8, align 1
  %26 = getelementptr inbounds i16, i16* %9, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i32
  %29 = getelementptr inbounds i16, i16* %11, i64 1
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = sub nsw i32 %28, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = add nuw nsw i32 %35, 8
  %37 = lshr i32 %36, 8
  %38 = icmp ult i32 %37, 26
  %39 = select i1 %38, i32 %37, i32 26
  %40 = trunc i32 %39 to i8
  %41 = sub nuw nsw i8 26, %40
  %42 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds i16, i16* %9, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %11, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i32
  %49 = sub nsw i32 %45, %48
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 0, %49
  %52 = select i1 %50, i32 %51, i32 %49
  %53 = add nuw nsw i32 %52, 8
  %54 = lshr i32 %53, 8
  %55 = icmp ult i32 %54, 26
  %56 = select i1 %55, i32 %54, i32 26
  %57 = trunc i32 %56 to i8
  %58 = sub nuw nsw i8 26, %57
  %59 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i16, i16* %9, i64 3
  %61 = load i16, i16* %60, align 2
  %62 = sext i16 %61 to i32
  %63 = getelementptr inbounds i16, i16* %11, i64 3
  %64 = load i16, i16* %63, align 2
  %65 = sext i16 %64 to i32
  %66 = sub nsw i32 %62, %65
  %67 = icmp slt i32 %66, 0
  %68 = sub nsw i32 0, %66
  %69 = select i1 %67, i32 %68, i32 %66
  %70 = add nuw nsw i32 %69, 8
  %71 = lshr i32 %70, 8
  %72 = icmp ult i32 %71, 26
  %73 = select i1 %72, i32 %71, i32 26
  %74 = trunc i32 %73 to i8
  %75 = sub nuw nsw i8 26, %74
  %76 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %75, i8* %76, align 1
  %77 = getelementptr inbounds i16, i16* %9, i64 4
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i32
  %80 = getelementptr inbounds i16, i16* %11, i64 4
  %81 = load i16, i16* %80, align 2
  %82 = sext i16 %81 to i32
  %83 = sub nsw i32 %79, %82
  %84 = icmp slt i32 %83, 0
  %85 = sub nsw i32 0, %83
  %86 = select i1 %84, i32 %85, i32 %83
  %87 = add nuw nsw i32 %86, 8
  %88 = lshr i32 %87, 8
  %89 = icmp ult i32 %88, 26
  %90 = select i1 %89, i32 %88, i32 26
  %91 = trunc i32 %90 to i8
  %92 = sub nuw nsw i8 26, %91
  %93 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds i16, i16* %9, i64 5
  %95 = load i16, i16* %94, align 2
  %96 = sext i16 %95 to i32
  %97 = getelementptr inbounds i16, i16* %11, i64 5
  %98 = load i16, i16* %97, align 2
  %99 = sext i16 %98 to i32
  %100 = sub nsw i32 %96, %99
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = add nuw nsw i32 %103, 8
  %105 = lshr i32 %104, 8
  %106 = icmp ult i32 %105, 26
  %107 = select i1 %106, i32 %105, i32 26
  %108 = trunc i32 %107 to i8
  %109 = sub nuw nsw i8 26, %108
  %110 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i16, i16* %9, i64 6
  %112 = load i16, i16* %111, align 2
  %113 = sext i16 %112 to i32
  %114 = getelementptr inbounds i16, i16* %11, i64 6
  %115 = load i16, i16* %114, align 2
  %116 = sext i16 %115 to i32
  %117 = sub nsw i32 %113, %116
  %118 = icmp slt i32 %117, 0
  %119 = sub nsw i32 0, %117
  %120 = select i1 %118, i32 %119, i32 %117
  %121 = add nuw nsw i32 %120, 8
  %122 = lshr i32 %121, 8
  %123 = icmp ult i32 %122, 26
  %124 = select i1 %123, i32 %122, i32 26
  %125 = trunc i32 %124 to i8
  %126 = sub nuw nsw i8 26, %125
  %127 = getelementptr inbounds i8, i8* %8, i64 6
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds i16, i16* %9, i64 7
  %129 = load i16, i16* %128, align 2
  %130 = sext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %11, i64 7
  %132 = load i16, i16* %131, align 2
  %133 = sext i16 %132 to i32
  %134 = sub nsw i32 %130, %133
  %135 = icmp slt i32 %134, 0
  %136 = sub nsw i32 0, %134
  %137 = select i1 %135, i32 %136, i32 %134
  %138 = add nuw nsw i32 %137, 8
  %139 = lshr i32 %138, 8
  %140 = icmp ult i32 %139, 26
  %141 = select i1 %140, i32 %139, i32 26
  %142 = trunc i32 %141 to i8
  %143 = sub nuw nsw i8 26, %142
  %144 = getelementptr inbounds i8, i8* %8, i64 7
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i16, i16* %9, i64 8
  %146 = getelementptr inbounds i16, i16* %11, i64 8
  %147 = getelementptr inbounds i8, i8* %8, i64 %3
  %148 = add nuw nsw i32 %10, 1
  %149 = icmp eq i32 %148, 8
  br i1 %149, label %150, label %7

150:                                              ; preds = %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi16ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i8* [ %2, %4 ], [ %147, %7 ]
  %9 = phi i16* [ %5, %4 ], [ %145, %7 ]
  %10 = phi i32 [ 0, %4 ], [ %148, %7 ]
  %11 = phi i16* [ %6, %4 ], [ %146, %7 ]
  %12 = load i16, i16* %9, align 2
  %13 = sext i16 %12 to i32
  %14 = load i16, i16* %11, align 2
  %15 = sext i16 %14 to i32
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %16, 0
  %18 = sub nsw i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = add nuw nsw i32 %19, 8
  %21 = lshr i32 %20, 8
  %22 = icmp ult i32 %21, 26
  %23 = select i1 %22, i32 %21, i32 26
  %24 = trunc i32 %23 to i8
  %25 = add nuw nsw i8 %24, 38
  store i8 %25, i8* %8, align 1
  %26 = getelementptr inbounds i16, i16* %9, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i32
  %29 = getelementptr inbounds i16, i16* %11, i64 1
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = sub nsw i32 %28, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = add nuw nsw i32 %35, 8
  %37 = lshr i32 %36, 8
  %38 = icmp ult i32 %37, 26
  %39 = select i1 %38, i32 %37, i32 26
  %40 = trunc i32 %39 to i8
  %41 = add nuw nsw i8 %40, 38
  %42 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds i16, i16* %9, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %11, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i32
  %49 = sub nsw i32 %45, %48
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 0, %49
  %52 = select i1 %50, i32 %51, i32 %49
  %53 = add nuw nsw i32 %52, 8
  %54 = lshr i32 %53, 8
  %55 = icmp ult i32 %54, 26
  %56 = select i1 %55, i32 %54, i32 26
  %57 = trunc i32 %56 to i8
  %58 = add nuw nsw i8 %57, 38
  %59 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i16, i16* %9, i64 3
  %61 = load i16, i16* %60, align 2
  %62 = sext i16 %61 to i32
  %63 = getelementptr inbounds i16, i16* %11, i64 3
  %64 = load i16, i16* %63, align 2
  %65 = sext i16 %64 to i32
  %66 = sub nsw i32 %62, %65
  %67 = icmp slt i32 %66, 0
  %68 = sub nsw i32 0, %66
  %69 = select i1 %67, i32 %68, i32 %66
  %70 = add nuw nsw i32 %69, 8
  %71 = lshr i32 %70, 8
  %72 = icmp ult i32 %71, 26
  %73 = select i1 %72, i32 %71, i32 26
  %74 = trunc i32 %73 to i8
  %75 = add nuw nsw i8 %74, 38
  %76 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %75, i8* %76, align 1
  %77 = getelementptr inbounds i16, i16* %9, i64 4
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i32
  %80 = getelementptr inbounds i16, i16* %11, i64 4
  %81 = load i16, i16* %80, align 2
  %82 = sext i16 %81 to i32
  %83 = sub nsw i32 %79, %82
  %84 = icmp slt i32 %83, 0
  %85 = sub nsw i32 0, %83
  %86 = select i1 %84, i32 %85, i32 %83
  %87 = add nuw nsw i32 %86, 8
  %88 = lshr i32 %87, 8
  %89 = icmp ult i32 %88, 26
  %90 = select i1 %89, i32 %88, i32 26
  %91 = trunc i32 %90 to i8
  %92 = add nuw nsw i8 %91, 38
  %93 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds i16, i16* %9, i64 5
  %95 = load i16, i16* %94, align 2
  %96 = sext i16 %95 to i32
  %97 = getelementptr inbounds i16, i16* %11, i64 5
  %98 = load i16, i16* %97, align 2
  %99 = sext i16 %98 to i32
  %100 = sub nsw i32 %96, %99
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = add nuw nsw i32 %103, 8
  %105 = lshr i32 %104, 8
  %106 = icmp ult i32 %105, 26
  %107 = select i1 %106, i32 %105, i32 26
  %108 = trunc i32 %107 to i8
  %109 = add nuw nsw i8 %108, 38
  %110 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i16, i16* %9, i64 6
  %112 = load i16, i16* %111, align 2
  %113 = sext i16 %112 to i32
  %114 = getelementptr inbounds i16, i16* %11, i64 6
  %115 = load i16, i16* %114, align 2
  %116 = sext i16 %115 to i32
  %117 = sub nsw i32 %113, %116
  %118 = icmp slt i32 %117, 0
  %119 = sub nsw i32 0, %117
  %120 = select i1 %118, i32 %119, i32 %117
  %121 = add nuw nsw i32 %120, 8
  %122 = lshr i32 %121, 8
  %123 = icmp ult i32 %122, 26
  %124 = select i1 %123, i32 %122, i32 26
  %125 = trunc i32 %124 to i8
  %126 = add nuw nsw i8 %125, 38
  %127 = getelementptr inbounds i8, i8* %8, i64 6
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds i16, i16* %9, i64 7
  %129 = load i16, i16* %128, align 2
  %130 = sext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %11, i64 7
  %132 = load i16, i16* %131, align 2
  %133 = sext i16 %132 to i32
  %134 = sub nsw i32 %130, %133
  %135 = icmp slt i32 %134, 0
  %136 = sub nsw i32 0, %134
  %137 = select i1 %135, i32 %136, i32 %134
  %138 = add nuw nsw i32 %137, 8
  %139 = lshr i32 %138, 8
  %140 = icmp ult i32 %139, 26
  %141 = select i1 %140, i32 %139, i32 26
  %142 = trunc i32 %141 to i8
  %143 = add nuw nsw i8 %142, 38
  %144 = getelementptr inbounds i8, i8* %8, i64 7
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i16, i16* %9, i64 8
  %146 = getelementptr inbounds i16, i16* %11, i64 8
  %147 = getelementptr inbounds i8, i8* %8, i64 %3
  %148 = add nuw nsw i32 %10, 1
  %149 = icmp eq i32 %148, 16
  br i1 %149, label %150, label %7

150:                                              ; preds = %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi16ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i8* [ %2, %4 ], [ %147, %7 ]
  %9 = phi i16* [ %5, %4 ], [ %145, %7 ]
  %10 = phi i32 [ 0, %4 ], [ %148, %7 ]
  %11 = phi i16* [ %6, %4 ], [ %146, %7 ]
  %12 = load i16, i16* %9, align 2
  %13 = sext i16 %12 to i32
  %14 = load i16, i16* %11, align 2
  %15 = sext i16 %14 to i32
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %16, 0
  %18 = sub nsw i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = add nuw nsw i32 %19, 8
  %21 = lshr i32 %20, 8
  %22 = icmp ult i32 %21, 26
  %23 = select i1 %22, i32 %21, i32 26
  %24 = trunc i32 %23 to i8
  %25 = sub nuw nsw i8 26, %24
  store i8 %25, i8* %8, align 1
  %26 = getelementptr inbounds i16, i16* %9, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i32
  %29 = getelementptr inbounds i16, i16* %11, i64 1
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = sub nsw i32 %28, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = add nuw nsw i32 %35, 8
  %37 = lshr i32 %36, 8
  %38 = icmp ult i32 %37, 26
  %39 = select i1 %38, i32 %37, i32 26
  %40 = trunc i32 %39 to i8
  %41 = sub nuw nsw i8 26, %40
  %42 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds i16, i16* %9, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %11, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i32
  %49 = sub nsw i32 %45, %48
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 0, %49
  %52 = select i1 %50, i32 %51, i32 %49
  %53 = add nuw nsw i32 %52, 8
  %54 = lshr i32 %53, 8
  %55 = icmp ult i32 %54, 26
  %56 = select i1 %55, i32 %54, i32 26
  %57 = trunc i32 %56 to i8
  %58 = sub nuw nsw i8 26, %57
  %59 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i16, i16* %9, i64 3
  %61 = load i16, i16* %60, align 2
  %62 = sext i16 %61 to i32
  %63 = getelementptr inbounds i16, i16* %11, i64 3
  %64 = load i16, i16* %63, align 2
  %65 = sext i16 %64 to i32
  %66 = sub nsw i32 %62, %65
  %67 = icmp slt i32 %66, 0
  %68 = sub nsw i32 0, %66
  %69 = select i1 %67, i32 %68, i32 %66
  %70 = add nuw nsw i32 %69, 8
  %71 = lshr i32 %70, 8
  %72 = icmp ult i32 %71, 26
  %73 = select i1 %72, i32 %71, i32 26
  %74 = trunc i32 %73 to i8
  %75 = sub nuw nsw i8 26, %74
  %76 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %75, i8* %76, align 1
  %77 = getelementptr inbounds i16, i16* %9, i64 4
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i32
  %80 = getelementptr inbounds i16, i16* %11, i64 4
  %81 = load i16, i16* %80, align 2
  %82 = sext i16 %81 to i32
  %83 = sub nsw i32 %79, %82
  %84 = icmp slt i32 %83, 0
  %85 = sub nsw i32 0, %83
  %86 = select i1 %84, i32 %85, i32 %83
  %87 = add nuw nsw i32 %86, 8
  %88 = lshr i32 %87, 8
  %89 = icmp ult i32 %88, 26
  %90 = select i1 %89, i32 %88, i32 26
  %91 = trunc i32 %90 to i8
  %92 = sub nuw nsw i8 26, %91
  %93 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds i16, i16* %9, i64 5
  %95 = load i16, i16* %94, align 2
  %96 = sext i16 %95 to i32
  %97 = getelementptr inbounds i16, i16* %11, i64 5
  %98 = load i16, i16* %97, align 2
  %99 = sext i16 %98 to i32
  %100 = sub nsw i32 %96, %99
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = add nuw nsw i32 %103, 8
  %105 = lshr i32 %104, 8
  %106 = icmp ult i32 %105, 26
  %107 = select i1 %106, i32 %105, i32 26
  %108 = trunc i32 %107 to i8
  %109 = sub nuw nsw i8 26, %108
  %110 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i16, i16* %9, i64 6
  %112 = load i16, i16* %111, align 2
  %113 = sext i16 %112 to i32
  %114 = getelementptr inbounds i16, i16* %11, i64 6
  %115 = load i16, i16* %114, align 2
  %116 = sext i16 %115 to i32
  %117 = sub nsw i32 %113, %116
  %118 = icmp slt i32 %117, 0
  %119 = sub nsw i32 0, %117
  %120 = select i1 %118, i32 %119, i32 %117
  %121 = add nuw nsw i32 %120, 8
  %122 = lshr i32 %121, 8
  %123 = icmp ult i32 %122, 26
  %124 = select i1 %123, i32 %122, i32 26
  %125 = trunc i32 %124 to i8
  %126 = sub nuw nsw i8 26, %125
  %127 = getelementptr inbounds i8, i8* %8, i64 6
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds i16, i16* %9, i64 7
  %129 = load i16, i16* %128, align 2
  %130 = sext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %11, i64 7
  %132 = load i16, i16* %131, align 2
  %133 = sext i16 %132 to i32
  %134 = sub nsw i32 %130, %133
  %135 = icmp slt i32 %134, 0
  %136 = sub nsw i32 0, %134
  %137 = select i1 %135, i32 %136, i32 %134
  %138 = add nuw nsw i32 %137, 8
  %139 = lshr i32 %138, 8
  %140 = icmp ult i32 %139, 26
  %141 = select i1 %140, i32 %139, i32 26
  %142 = trunc i32 %141 to i8
  %143 = sub nuw nsw i8 26, %142
  %144 = getelementptr inbounds i8, i8* %8, i64 7
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i16, i16* %9, i64 8
  %146 = getelementptr inbounds i16, i16* %11, i64 8
  %147 = getelementptr inbounds i8, i8* %8, i64 %3
  %148 = add nuw nsw i32 %10, 1
  %149 = icmp eq i32 %148, 16
  br i1 %149, label %150, label %7

150:                                              ; preds = %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi32ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i8* [ %2, %4 ], [ %147, %7 ]
  %9 = phi i16* [ %5, %4 ], [ %145, %7 ]
  %10 = phi i32 [ 0, %4 ], [ %148, %7 ]
  %11 = phi i16* [ %6, %4 ], [ %146, %7 ]
  %12 = load i16, i16* %9, align 2
  %13 = sext i16 %12 to i32
  %14 = load i16, i16* %11, align 2
  %15 = sext i16 %14 to i32
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %16, 0
  %18 = sub nsw i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = add nuw nsw i32 %19, 8
  %21 = lshr i32 %20, 8
  %22 = icmp ult i32 %21, 26
  %23 = select i1 %22, i32 %21, i32 26
  %24 = trunc i32 %23 to i8
  %25 = add nuw nsw i8 %24, 38
  store i8 %25, i8* %8, align 1
  %26 = getelementptr inbounds i16, i16* %9, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i32
  %29 = getelementptr inbounds i16, i16* %11, i64 1
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = sub nsw i32 %28, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = add nuw nsw i32 %35, 8
  %37 = lshr i32 %36, 8
  %38 = icmp ult i32 %37, 26
  %39 = select i1 %38, i32 %37, i32 26
  %40 = trunc i32 %39 to i8
  %41 = add nuw nsw i8 %40, 38
  %42 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds i16, i16* %9, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %11, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i32
  %49 = sub nsw i32 %45, %48
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 0, %49
  %52 = select i1 %50, i32 %51, i32 %49
  %53 = add nuw nsw i32 %52, 8
  %54 = lshr i32 %53, 8
  %55 = icmp ult i32 %54, 26
  %56 = select i1 %55, i32 %54, i32 26
  %57 = trunc i32 %56 to i8
  %58 = add nuw nsw i8 %57, 38
  %59 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i16, i16* %9, i64 3
  %61 = load i16, i16* %60, align 2
  %62 = sext i16 %61 to i32
  %63 = getelementptr inbounds i16, i16* %11, i64 3
  %64 = load i16, i16* %63, align 2
  %65 = sext i16 %64 to i32
  %66 = sub nsw i32 %62, %65
  %67 = icmp slt i32 %66, 0
  %68 = sub nsw i32 0, %66
  %69 = select i1 %67, i32 %68, i32 %66
  %70 = add nuw nsw i32 %69, 8
  %71 = lshr i32 %70, 8
  %72 = icmp ult i32 %71, 26
  %73 = select i1 %72, i32 %71, i32 26
  %74 = trunc i32 %73 to i8
  %75 = add nuw nsw i8 %74, 38
  %76 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %75, i8* %76, align 1
  %77 = getelementptr inbounds i16, i16* %9, i64 4
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i32
  %80 = getelementptr inbounds i16, i16* %11, i64 4
  %81 = load i16, i16* %80, align 2
  %82 = sext i16 %81 to i32
  %83 = sub nsw i32 %79, %82
  %84 = icmp slt i32 %83, 0
  %85 = sub nsw i32 0, %83
  %86 = select i1 %84, i32 %85, i32 %83
  %87 = add nuw nsw i32 %86, 8
  %88 = lshr i32 %87, 8
  %89 = icmp ult i32 %88, 26
  %90 = select i1 %89, i32 %88, i32 26
  %91 = trunc i32 %90 to i8
  %92 = add nuw nsw i8 %91, 38
  %93 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds i16, i16* %9, i64 5
  %95 = load i16, i16* %94, align 2
  %96 = sext i16 %95 to i32
  %97 = getelementptr inbounds i16, i16* %11, i64 5
  %98 = load i16, i16* %97, align 2
  %99 = sext i16 %98 to i32
  %100 = sub nsw i32 %96, %99
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = add nuw nsw i32 %103, 8
  %105 = lshr i32 %104, 8
  %106 = icmp ult i32 %105, 26
  %107 = select i1 %106, i32 %105, i32 26
  %108 = trunc i32 %107 to i8
  %109 = add nuw nsw i8 %108, 38
  %110 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i16, i16* %9, i64 6
  %112 = load i16, i16* %111, align 2
  %113 = sext i16 %112 to i32
  %114 = getelementptr inbounds i16, i16* %11, i64 6
  %115 = load i16, i16* %114, align 2
  %116 = sext i16 %115 to i32
  %117 = sub nsw i32 %113, %116
  %118 = icmp slt i32 %117, 0
  %119 = sub nsw i32 0, %117
  %120 = select i1 %118, i32 %119, i32 %117
  %121 = add nuw nsw i32 %120, 8
  %122 = lshr i32 %121, 8
  %123 = icmp ult i32 %122, 26
  %124 = select i1 %123, i32 %122, i32 26
  %125 = trunc i32 %124 to i8
  %126 = add nuw nsw i8 %125, 38
  %127 = getelementptr inbounds i8, i8* %8, i64 6
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds i16, i16* %9, i64 7
  %129 = load i16, i16* %128, align 2
  %130 = sext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %11, i64 7
  %132 = load i16, i16* %131, align 2
  %133 = sext i16 %132 to i32
  %134 = sub nsw i32 %130, %133
  %135 = icmp slt i32 %134, 0
  %136 = sub nsw i32 0, %134
  %137 = select i1 %135, i32 %136, i32 %134
  %138 = add nuw nsw i32 %137, 8
  %139 = lshr i32 %138, 8
  %140 = icmp ult i32 %139, 26
  %141 = select i1 %140, i32 %139, i32 26
  %142 = trunc i32 %141 to i8
  %143 = add nuw nsw i8 %142, 38
  %144 = getelementptr inbounds i8, i8* %8, i64 7
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i16, i16* %9, i64 8
  %146 = getelementptr inbounds i16, i16* %11, i64 8
  %147 = getelementptr inbounds i8, i8* %8, i64 %3
  %148 = add nuw nsw i32 %10, 1
  %149 = icmp eq i32 %148, 32
  br i1 %149, label %150, label %7

150:                                              ; preds = %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi32ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i8* [ %2, %4 ], [ %147, %7 ]
  %9 = phi i16* [ %5, %4 ], [ %145, %7 ]
  %10 = phi i32 [ 0, %4 ], [ %148, %7 ]
  %11 = phi i16* [ %6, %4 ], [ %146, %7 ]
  %12 = load i16, i16* %9, align 2
  %13 = sext i16 %12 to i32
  %14 = load i16, i16* %11, align 2
  %15 = sext i16 %14 to i32
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %16, 0
  %18 = sub nsw i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = add nuw nsw i32 %19, 8
  %21 = lshr i32 %20, 8
  %22 = icmp ult i32 %21, 26
  %23 = select i1 %22, i32 %21, i32 26
  %24 = trunc i32 %23 to i8
  %25 = sub nuw nsw i8 26, %24
  store i8 %25, i8* %8, align 1
  %26 = getelementptr inbounds i16, i16* %9, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i32
  %29 = getelementptr inbounds i16, i16* %11, i64 1
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = sub nsw i32 %28, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = add nuw nsw i32 %35, 8
  %37 = lshr i32 %36, 8
  %38 = icmp ult i32 %37, 26
  %39 = select i1 %38, i32 %37, i32 26
  %40 = trunc i32 %39 to i8
  %41 = sub nuw nsw i8 26, %40
  %42 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds i16, i16* %9, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %11, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i32
  %49 = sub nsw i32 %45, %48
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 0, %49
  %52 = select i1 %50, i32 %51, i32 %49
  %53 = add nuw nsw i32 %52, 8
  %54 = lshr i32 %53, 8
  %55 = icmp ult i32 %54, 26
  %56 = select i1 %55, i32 %54, i32 26
  %57 = trunc i32 %56 to i8
  %58 = sub nuw nsw i8 26, %57
  %59 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i16, i16* %9, i64 3
  %61 = load i16, i16* %60, align 2
  %62 = sext i16 %61 to i32
  %63 = getelementptr inbounds i16, i16* %11, i64 3
  %64 = load i16, i16* %63, align 2
  %65 = sext i16 %64 to i32
  %66 = sub nsw i32 %62, %65
  %67 = icmp slt i32 %66, 0
  %68 = sub nsw i32 0, %66
  %69 = select i1 %67, i32 %68, i32 %66
  %70 = add nuw nsw i32 %69, 8
  %71 = lshr i32 %70, 8
  %72 = icmp ult i32 %71, 26
  %73 = select i1 %72, i32 %71, i32 26
  %74 = trunc i32 %73 to i8
  %75 = sub nuw nsw i8 26, %74
  %76 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %75, i8* %76, align 1
  %77 = getelementptr inbounds i16, i16* %9, i64 4
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i32
  %80 = getelementptr inbounds i16, i16* %11, i64 4
  %81 = load i16, i16* %80, align 2
  %82 = sext i16 %81 to i32
  %83 = sub nsw i32 %79, %82
  %84 = icmp slt i32 %83, 0
  %85 = sub nsw i32 0, %83
  %86 = select i1 %84, i32 %85, i32 %83
  %87 = add nuw nsw i32 %86, 8
  %88 = lshr i32 %87, 8
  %89 = icmp ult i32 %88, 26
  %90 = select i1 %89, i32 %88, i32 26
  %91 = trunc i32 %90 to i8
  %92 = sub nuw nsw i8 26, %91
  %93 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds i16, i16* %9, i64 5
  %95 = load i16, i16* %94, align 2
  %96 = sext i16 %95 to i32
  %97 = getelementptr inbounds i16, i16* %11, i64 5
  %98 = load i16, i16* %97, align 2
  %99 = sext i16 %98 to i32
  %100 = sub nsw i32 %96, %99
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = add nuw nsw i32 %103, 8
  %105 = lshr i32 %104, 8
  %106 = icmp ult i32 %105, 26
  %107 = select i1 %106, i32 %105, i32 26
  %108 = trunc i32 %107 to i8
  %109 = sub nuw nsw i8 26, %108
  %110 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i16, i16* %9, i64 6
  %112 = load i16, i16* %111, align 2
  %113 = sext i16 %112 to i32
  %114 = getelementptr inbounds i16, i16* %11, i64 6
  %115 = load i16, i16* %114, align 2
  %116 = sext i16 %115 to i32
  %117 = sub nsw i32 %113, %116
  %118 = icmp slt i32 %117, 0
  %119 = sub nsw i32 0, %117
  %120 = select i1 %118, i32 %119, i32 %117
  %121 = add nuw nsw i32 %120, 8
  %122 = lshr i32 %121, 8
  %123 = icmp ult i32 %122, 26
  %124 = select i1 %123, i32 %122, i32 26
  %125 = trunc i32 %124 to i8
  %126 = sub nuw nsw i8 26, %125
  %127 = getelementptr inbounds i8, i8* %8, i64 6
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds i16, i16* %9, i64 7
  %129 = load i16, i16* %128, align 2
  %130 = sext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %11, i64 7
  %132 = load i16, i16* %131, align 2
  %133 = sext i16 %132 to i32
  %134 = sub nsw i32 %130, %133
  %135 = icmp slt i32 %134, 0
  %136 = sub nsw i32 0, %134
  %137 = select i1 %135, i32 %136, i32 %134
  %138 = add nuw nsw i32 %137, 8
  %139 = lshr i32 %138, 8
  %140 = icmp ult i32 %139, 26
  %141 = select i1 %140, i32 %139, i32 26
  %142 = trunc i32 %141 to i8
  %143 = sub nuw nsw i8 26, %142
  %144 = getelementptr inbounds i8, i8* %8, i64 7
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i16, i16* %9, i64 8
  %146 = getelementptr inbounds i16, i16* %11, i64 8
  %147 = getelementptr inbounds i8, i8* %8, i64 %3
  %148 = add nuw nsw i32 %10, 1
  %149 = icmp eq i32 %148, 32
  br i1 %149, label %150, label %7

150:                                              ; preds = %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi8ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  %7 = getelementptr i8, i8* %2, i64 16
  %8 = getelementptr i8, i8* %0, i64 32
  %9 = getelementptr i8, i8* %1, i64 32
  %10 = icmp ugt i8* %8, %2
  %11 = icmp ugt i8* %7, %0
  %12 = and i1 %10, %11
  %13 = icmp ugt i8* %9, %2
  %14 = icmp ugt i8* %7, %1
  %15 = and i1 %13, %14
  %16 = or i1 %12, %15
  br i1 %16, label %110, label %17

17:                                               ; preds = %4
  %18 = bitcast i8* %0 to <8 x i16>*
  %19 = load <8 x i16>, <8 x i16>* %18, align 2, !alias.scope !2
  %20 = sext <8 x i16> %19 to <8 x i32>
  %21 = bitcast i8* %1 to <8 x i16>*
  %22 = load <8 x i16>, <8 x i16>* %21, align 2, !alias.scope !5
  %23 = sext <8 x i16> %22 to <8 x i32>
  %24 = sub nsw <8 x i32> %20, %23
  %25 = icmp slt <8 x i32> %24, zeroinitializer
  %26 = sub nsw <8 x i32> zeroinitializer, %24
  %27 = select <8 x i1> %25, <8 x i32> %26, <8 x i32> %24
  %28 = add nuw nsw <8 x i32> %27, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %29 = lshr <8 x i32> %28, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %30 = icmp ult <8 x i32> %29, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %31 = select <8 x i1> %30, <8 x i32> %29, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %32 = trunc <8 x i32> %31 to <8 x i8>
  %33 = add nuw nsw <8 x i8> %32, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %34 = bitcast i8* %2 to <8 x i8>*
  store <8 x i8> %33, <8 x i8>* %34, align 1, !alias.scope !7, !noalias !9
  %35 = getelementptr inbounds i8, i8* %0, i64 16
  %36 = bitcast i8* %35 to <8 x i16>*
  %37 = load <8 x i16>, <8 x i16>* %36, align 2, !alias.scope !2
  %38 = sext <8 x i16> %37 to <8 x i32>
  %39 = getelementptr inbounds i8, i8* %1, i64 16
  %40 = bitcast i8* %39 to <8 x i16>*
  %41 = load <8 x i16>, <8 x i16>* %40, align 2, !alias.scope !5
  %42 = sext <8 x i16> %41 to <8 x i32>
  %43 = sub nsw <8 x i32> %38, %42
  %44 = icmp slt <8 x i32> %43, zeroinitializer
  %45 = sub nsw <8 x i32> zeroinitializer, %43
  %46 = select <8 x i1> %44, <8 x i32> %45, <8 x i32> %43
  %47 = add nuw nsw <8 x i32> %46, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %48 = lshr <8 x i32> %47, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %49 = icmp ult <8 x i32> %48, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %50 = select <8 x i1> %49, <8 x i32> %48, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %51 = trunc <8 x i32> %50 to <8 x i8>
  %52 = add nuw nsw <8 x i8> %51, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %53 = getelementptr inbounds i8, i8* %2, i64 8
  %54 = bitcast i8* %53 to <8 x i8>*
  store <8 x i8> %52, <8 x i8>* %54, align 1, !alias.scope !7, !noalias !9
  br label %55

55:                                               ; preds = %110, %17
  %56 = getelementptr inbounds i8, i8* %0, i64 32
  %57 = bitcast i8* %56 to i16*
  %58 = getelementptr inbounds i8, i8* %1, i64 32
  %59 = bitcast i8* %58 to i16*
  %60 = getelementptr inbounds i8, i8* %2, i64 %3
  %61 = add i64 %3, 16
  %62 = getelementptr i8, i8* %2, i64 %61
  %63 = getelementptr i8, i8* %0, i64 64
  %64 = getelementptr i8, i8* %1, i64 64
  %65 = icmp ult i8* %60, %63
  %66 = icmp ult i8* %56, %62
  %67 = and i1 %65, %66
  %68 = icmp ult i8* %60, %64
  %69 = icmp ult i8* %58, %62
  %70 = and i1 %68, %69
  %71 = or i1 %67, %70
  br i1 %71, label %131, label %72

72:                                               ; preds = %55
  %73 = bitcast i8* %56 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !10
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = bitcast i8* %58 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !13
  %78 = sext <8 x i16> %77 to <8 x i32>
  %79 = sub nsw <8 x i32> %75, %78
  %80 = icmp slt <8 x i32> %79, zeroinitializer
  %81 = sub nsw <8 x i32> zeroinitializer, %79
  %82 = select <8 x i1> %80, <8 x i32> %81, <8 x i32> %79
  %83 = add nuw nsw <8 x i32> %82, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %84 = lshr <8 x i32> %83, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %85 = icmp ult <8 x i32> %84, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %86 = select <8 x i1> %85, <8 x i32> %84, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %87 = trunc <8 x i32> %86 to <8 x i8>
  %88 = add nuw nsw <8 x i8> %87, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %89 = bitcast i8* %60 to <8 x i8>*
  store <8 x i8> %88, <8 x i8>* %89, align 1, !alias.scope !15, !noalias !17
  %90 = getelementptr inbounds i8, i8* %0, i64 48
  %91 = bitcast i8* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !10
  %93 = sext <8 x i16> %92 to <8 x i32>
  %94 = getelementptr inbounds i8, i8* %1, i64 48
  %95 = bitcast i8* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !13
  %97 = sext <8 x i16> %96 to <8 x i32>
  %98 = sub nsw <8 x i32> %93, %97
  %99 = icmp slt <8 x i32> %98, zeroinitializer
  %100 = sub nsw <8 x i32> zeroinitializer, %98
  %101 = select <8 x i1> %99, <8 x i32> %100, <8 x i32> %98
  %102 = add nuw nsw <8 x i32> %101, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %103 = lshr <8 x i32> %102, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %104 = icmp ult <8 x i32> %103, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %105 = select <8 x i1> %104, <8 x i32> %103, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %106 = trunc <8 x i32> %105 to <8 x i8>
  %107 = add nuw nsw <8 x i8> %106, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %108 = getelementptr inbounds i8, i8* %60, i64 8
  %109 = bitcast i8* %108 to <8 x i8>*
  store <8 x i8> %107, <8 x i8>* %109, align 1, !alias.scope !15, !noalias !17
  br label %152

110:                                              ; preds = %4, %110
  %111 = phi i64 [ %129, %110 ], [ 0, %4 ]
  %112 = getelementptr inbounds i16, i16* %5, i64 %111
  %113 = load i16, i16* %112, align 2
  %114 = sext i16 %113 to i32
  %115 = getelementptr inbounds i16, i16* %6, i64 %111
  %116 = load i16, i16* %115, align 2
  %117 = sext i16 %116 to i32
  %118 = sub nsw i32 %114, %117
  %119 = icmp slt i32 %118, 0
  %120 = sub nsw i32 0, %118
  %121 = select i1 %119, i32 %120, i32 %118
  %122 = add nuw nsw i32 %121, 8
  %123 = lshr i32 %122, 8
  %124 = icmp ult i32 %123, 26
  %125 = select i1 %124, i32 %123, i32 26
  %126 = trunc i32 %125 to i8
  %127 = add nuw nsw i8 %126, 38
  %128 = getelementptr inbounds i8, i8* %2, i64 %111
  store i8 %127, i8* %128, align 1
  %129 = add nuw nsw i64 %111, 1
  %130 = icmp eq i64 %129, 16
  br i1 %130, label %55, label %110, !llvm.loop !18

131:                                              ; preds = %55, %131
  %132 = phi i64 [ %150, %131 ], [ 0, %55 ]
  %133 = getelementptr inbounds i16, i16* %57, i64 %132
  %134 = load i16, i16* %133, align 2
  %135 = sext i16 %134 to i32
  %136 = getelementptr inbounds i16, i16* %59, i64 %132
  %137 = load i16, i16* %136, align 2
  %138 = sext i16 %137 to i32
  %139 = sub nsw i32 %135, %138
  %140 = icmp slt i32 %139, 0
  %141 = sub nsw i32 0, %139
  %142 = select i1 %140, i32 %141, i32 %139
  %143 = add nuw nsw i32 %142, 8
  %144 = lshr i32 %143, 8
  %145 = icmp ult i32 %144, 26
  %146 = select i1 %145, i32 %144, i32 26
  %147 = trunc i32 %146 to i8
  %148 = add nuw nsw i8 %147, 38
  %149 = getelementptr inbounds i8, i8* %60, i64 %132
  store i8 %148, i8* %149, align 1
  %150 = add nuw nsw i64 %132, 1
  %151 = icmp eq i64 %150, 16
  br i1 %151, label %152, label %131, !llvm.loop !20

152:                                              ; preds = %131, %72
  %153 = getelementptr inbounds i8, i8* %0, i64 64
  %154 = bitcast i8* %153 to i16*
  %155 = getelementptr inbounds i8, i8* %1, i64 64
  %156 = bitcast i8* %155 to i16*
  %157 = getelementptr inbounds i8, i8* %60, i64 %3
  %158 = shl i64 %3, 1
  %159 = add i64 %158, 16
  %160 = getelementptr i8, i8* %2, i64 %159
  %161 = getelementptr i8, i8* %0, i64 96
  %162 = getelementptr i8, i8* %1, i64 96
  %163 = icmp ult i8* %157, %161
  %164 = icmp ult i8* %153, %160
  %165 = and i1 %163, %164
  %166 = icmp ult i8* %157, %162
  %167 = icmp ult i8* %155, %160
  %168 = and i1 %166, %167
  %169 = or i1 %165, %168
  br i1 %169, label %208, label %170

170:                                              ; preds = %152
  %171 = bitcast i8* %153 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !21
  %173 = sext <8 x i16> %172 to <8 x i32>
  %174 = bitcast i8* %155 to <8 x i16>*
  %175 = load <8 x i16>, <8 x i16>* %174, align 2, !alias.scope !24
  %176 = sext <8 x i16> %175 to <8 x i32>
  %177 = sub nsw <8 x i32> %173, %176
  %178 = icmp slt <8 x i32> %177, zeroinitializer
  %179 = sub nsw <8 x i32> zeroinitializer, %177
  %180 = select <8 x i1> %178, <8 x i32> %179, <8 x i32> %177
  %181 = add nuw nsw <8 x i32> %180, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %182 = lshr <8 x i32> %181, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %183 = icmp ult <8 x i32> %182, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = select <8 x i1> %183, <8 x i32> %182, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %185 = trunc <8 x i32> %184 to <8 x i8>
  %186 = add nuw nsw <8 x i8> %185, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %187 = bitcast i8* %157 to <8 x i8>*
  store <8 x i8> %186, <8 x i8>* %187, align 1, !alias.scope !26, !noalias !28
  %188 = getelementptr inbounds i8, i8* %0, i64 80
  %189 = bitcast i8* %188 to <8 x i16>*
  %190 = load <8 x i16>, <8 x i16>* %189, align 2, !alias.scope !21
  %191 = sext <8 x i16> %190 to <8 x i32>
  %192 = getelementptr inbounds i8, i8* %1, i64 80
  %193 = bitcast i8* %192 to <8 x i16>*
  %194 = load <8 x i16>, <8 x i16>* %193, align 2, !alias.scope !24
  %195 = sext <8 x i16> %194 to <8 x i32>
  %196 = sub nsw <8 x i32> %191, %195
  %197 = icmp slt <8 x i32> %196, zeroinitializer
  %198 = sub nsw <8 x i32> zeroinitializer, %196
  %199 = select <8 x i1> %197, <8 x i32> %198, <8 x i32> %196
  %200 = add nuw nsw <8 x i32> %199, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %201 = lshr <8 x i32> %200, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %202 = icmp ult <8 x i32> %201, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %203 = select <8 x i1> %202, <8 x i32> %201, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %204 = trunc <8 x i32> %203 to <8 x i8>
  %205 = add nuw nsw <8 x i8> %204, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %206 = getelementptr inbounds i8, i8* %157, i64 8
  %207 = bitcast i8* %206 to <8 x i8>*
  store <8 x i8> %205, <8 x i8>* %207, align 1, !alias.scope !26, !noalias !28
  br label %229

208:                                              ; preds = %152, %208
  %209 = phi i64 [ %227, %208 ], [ 0, %152 ]
  %210 = getelementptr inbounds i16, i16* %154, i64 %209
  %211 = load i16, i16* %210, align 2
  %212 = sext i16 %211 to i32
  %213 = getelementptr inbounds i16, i16* %156, i64 %209
  %214 = load i16, i16* %213, align 2
  %215 = sext i16 %214 to i32
  %216 = sub nsw i32 %212, %215
  %217 = icmp slt i32 %216, 0
  %218 = sub nsw i32 0, %216
  %219 = select i1 %217, i32 %218, i32 %216
  %220 = add nuw nsw i32 %219, 8
  %221 = lshr i32 %220, 8
  %222 = icmp ult i32 %221, 26
  %223 = select i1 %222, i32 %221, i32 26
  %224 = trunc i32 %223 to i8
  %225 = add nuw nsw i8 %224, 38
  %226 = getelementptr inbounds i8, i8* %157, i64 %209
  store i8 %225, i8* %226, align 1
  %227 = add nuw nsw i64 %209, 1
  %228 = icmp eq i64 %227, 16
  br i1 %228, label %229, label %208, !llvm.loop !29

229:                                              ; preds = %208, %170
  %230 = getelementptr inbounds i8, i8* %0, i64 96
  %231 = bitcast i8* %230 to i16*
  %232 = getelementptr inbounds i8, i8* %1, i64 96
  %233 = bitcast i8* %232 to i16*
  %234 = getelementptr inbounds i8, i8* %157, i64 %3
  %235 = mul i64 %3, 3
  %236 = add i64 %235, 16
  %237 = getelementptr i8, i8* %2, i64 %236
  %238 = getelementptr i8, i8* %0, i64 128
  %239 = getelementptr i8, i8* %1, i64 128
  %240 = icmp ult i8* %234, %238
  %241 = icmp ult i8* %230, %237
  %242 = and i1 %240, %241
  %243 = icmp ult i8* %234, %239
  %244 = icmp ult i8* %232, %237
  %245 = and i1 %243, %244
  %246 = or i1 %242, %245
  br i1 %246, label %285, label %247

247:                                              ; preds = %229
  %248 = bitcast i8* %230 to <8 x i16>*
  %249 = load <8 x i16>, <8 x i16>* %248, align 2, !alias.scope !30
  %250 = sext <8 x i16> %249 to <8 x i32>
  %251 = bitcast i8* %232 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !33
  %253 = sext <8 x i16> %252 to <8 x i32>
  %254 = sub nsw <8 x i32> %250, %253
  %255 = icmp slt <8 x i32> %254, zeroinitializer
  %256 = sub nsw <8 x i32> zeroinitializer, %254
  %257 = select <8 x i1> %255, <8 x i32> %256, <8 x i32> %254
  %258 = add nuw nsw <8 x i32> %257, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %259 = lshr <8 x i32> %258, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %260 = icmp ult <8 x i32> %259, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %261 = select <8 x i1> %260, <8 x i32> %259, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %262 = trunc <8 x i32> %261 to <8 x i8>
  %263 = add nuw nsw <8 x i8> %262, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %264 = bitcast i8* %234 to <8 x i8>*
  store <8 x i8> %263, <8 x i8>* %264, align 1, !alias.scope !35, !noalias !37
  %265 = getelementptr inbounds i8, i8* %0, i64 112
  %266 = bitcast i8* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !30
  %268 = sext <8 x i16> %267 to <8 x i32>
  %269 = getelementptr inbounds i8, i8* %1, i64 112
  %270 = bitcast i8* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !33
  %272 = sext <8 x i16> %271 to <8 x i32>
  %273 = sub nsw <8 x i32> %268, %272
  %274 = icmp slt <8 x i32> %273, zeroinitializer
  %275 = sub nsw <8 x i32> zeroinitializer, %273
  %276 = select <8 x i1> %274, <8 x i32> %275, <8 x i32> %273
  %277 = add nuw nsw <8 x i32> %276, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %278 = lshr <8 x i32> %277, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %279 = icmp ult <8 x i32> %278, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %280 = select <8 x i1> %279, <8 x i32> %278, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %281 = trunc <8 x i32> %280 to <8 x i8>
  %282 = add nuw nsw <8 x i8> %281, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %283 = getelementptr inbounds i8, i8* %234, i64 8
  %284 = bitcast i8* %283 to <8 x i8>*
  store <8 x i8> %282, <8 x i8>* %284, align 1, !alias.scope !35, !noalias !37
  br label %306

285:                                              ; preds = %229, %285
  %286 = phi i64 [ %304, %285 ], [ 0, %229 ]
  %287 = getelementptr inbounds i16, i16* %231, i64 %286
  %288 = load i16, i16* %287, align 2
  %289 = sext i16 %288 to i32
  %290 = getelementptr inbounds i16, i16* %233, i64 %286
  %291 = load i16, i16* %290, align 2
  %292 = sext i16 %291 to i32
  %293 = sub nsw i32 %289, %292
  %294 = icmp slt i32 %293, 0
  %295 = sub nsw i32 0, %293
  %296 = select i1 %294, i32 %295, i32 %293
  %297 = add nuw nsw i32 %296, 8
  %298 = lshr i32 %297, 8
  %299 = icmp ult i32 %298, 26
  %300 = select i1 %299, i32 %298, i32 26
  %301 = trunc i32 %300 to i8
  %302 = add nuw nsw i8 %301, 38
  %303 = getelementptr inbounds i8, i8* %234, i64 %286
  store i8 %302, i8* %303, align 1
  %304 = add nuw nsw i64 %286, 1
  %305 = icmp eq i64 %304, 16
  br i1 %305, label %306, label %285, !llvm.loop !38

306:                                              ; preds = %285, %247
  %307 = getelementptr inbounds i8, i8* %0, i64 128
  %308 = bitcast i8* %307 to i16*
  %309 = getelementptr inbounds i8, i8* %1, i64 128
  %310 = bitcast i8* %309 to i16*
  %311 = getelementptr inbounds i8, i8* %234, i64 %3
  %312 = shl i64 %3, 2
  %313 = add i64 %312, 16
  %314 = getelementptr i8, i8* %2, i64 %313
  %315 = getelementptr i8, i8* %0, i64 160
  %316 = getelementptr i8, i8* %1, i64 160
  %317 = icmp ult i8* %311, %315
  %318 = icmp ult i8* %307, %314
  %319 = and i1 %317, %318
  %320 = icmp ult i8* %311, %316
  %321 = icmp ult i8* %309, %314
  %322 = and i1 %320, %321
  %323 = or i1 %319, %322
  br i1 %323, label %362, label %324

324:                                              ; preds = %306
  %325 = bitcast i8* %307 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !39
  %327 = sext <8 x i16> %326 to <8 x i32>
  %328 = bitcast i8* %309 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !42
  %330 = sext <8 x i16> %329 to <8 x i32>
  %331 = sub nsw <8 x i32> %327, %330
  %332 = icmp slt <8 x i32> %331, zeroinitializer
  %333 = sub nsw <8 x i32> zeroinitializer, %331
  %334 = select <8 x i1> %332, <8 x i32> %333, <8 x i32> %331
  %335 = add nuw nsw <8 x i32> %334, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %336 = lshr <8 x i32> %335, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %337 = icmp ult <8 x i32> %336, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %338 = select <8 x i1> %337, <8 x i32> %336, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %339 = trunc <8 x i32> %338 to <8 x i8>
  %340 = add nuw nsw <8 x i8> %339, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %341 = bitcast i8* %311 to <8 x i8>*
  store <8 x i8> %340, <8 x i8>* %341, align 1, !alias.scope !44, !noalias !46
  %342 = getelementptr inbounds i8, i8* %0, i64 144
  %343 = bitcast i8* %342 to <8 x i16>*
  %344 = load <8 x i16>, <8 x i16>* %343, align 2, !alias.scope !39
  %345 = sext <8 x i16> %344 to <8 x i32>
  %346 = getelementptr inbounds i8, i8* %1, i64 144
  %347 = bitcast i8* %346 to <8 x i16>*
  %348 = load <8 x i16>, <8 x i16>* %347, align 2, !alias.scope !42
  %349 = sext <8 x i16> %348 to <8 x i32>
  %350 = sub nsw <8 x i32> %345, %349
  %351 = icmp slt <8 x i32> %350, zeroinitializer
  %352 = sub nsw <8 x i32> zeroinitializer, %350
  %353 = select <8 x i1> %351, <8 x i32> %352, <8 x i32> %350
  %354 = add nuw nsw <8 x i32> %353, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %355 = lshr <8 x i32> %354, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %356 = icmp ult <8 x i32> %355, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %357 = select <8 x i1> %356, <8 x i32> %355, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %358 = trunc <8 x i32> %357 to <8 x i8>
  %359 = add nuw nsw <8 x i8> %358, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %360 = getelementptr inbounds i8, i8* %311, i64 8
  %361 = bitcast i8* %360 to <8 x i8>*
  store <8 x i8> %359, <8 x i8>* %361, align 1, !alias.scope !44, !noalias !46
  br label %383

362:                                              ; preds = %306, %362
  %363 = phi i64 [ %381, %362 ], [ 0, %306 ]
  %364 = getelementptr inbounds i16, i16* %308, i64 %363
  %365 = load i16, i16* %364, align 2
  %366 = sext i16 %365 to i32
  %367 = getelementptr inbounds i16, i16* %310, i64 %363
  %368 = load i16, i16* %367, align 2
  %369 = sext i16 %368 to i32
  %370 = sub nsw i32 %366, %369
  %371 = icmp slt i32 %370, 0
  %372 = sub nsw i32 0, %370
  %373 = select i1 %371, i32 %372, i32 %370
  %374 = add nuw nsw i32 %373, 8
  %375 = lshr i32 %374, 8
  %376 = icmp ult i32 %375, 26
  %377 = select i1 %376, i32 %375, i32 26
  %378 = trunc i32 %377 to i8
  %379 = add nuw nsw i8 %378, 38
  %380 = getelementptr inbounds i8, i8* %311, i64 %363
  store i8 %379, i8* %380, align 1
  %381 = add nuw nsw i64 %363, 1
  %382 = icmp eq i64 %381, 16
  br i1 %382, label %383, label %362, !llvm.loop !47

383:                                              ; preds = %362, %324
  %384 = getelementptr inbounds i8, i8* %0, i64 160
  %385 = bitcast i8* %384 to i16*
  %386 = getelementptr inbounds i8, i8* %1, i64 160
  %387 = bitcast i8* %386 to i16*
  %388 = getelementptr inbounds i8, i8* %311, i64 %3
  %389 = mul i64 %3, 5
  %390 = add i64 %389, 16
  %391 = getelementptr i8, i8* %2, i64 %390
  %392 = getelementptr i8, i8* %0, i64 192
  %393 = getelementptr i8, i8* %1, i64 192
  %394 = icmp ult i8* %388, %392
  %395 = icmp ult i8* %384, %391
  %396 = and i1 %394, %395
  %397 = icmp ult i8* %388, %393
  %398 = icmp ult i8* %386, %391
  %399 = and i1 %397, %398
  %400 = or i1 %396, %399
  br i1 %400, label %439, label %401

401:                                              ; preds = %383
  %402 = bitcast i8* %384 to <8 x i16>*
  %403 = load <8 x i16>, <8 x i16>* %402, align 2, !alias.scope !48
  %404 = sext <8 x i16> %403 to <8 x i32>
  %405 = bitcast i8* %386 to <8 x i16>*
  %406 = load <8 x i16>, <8 x i16>* %405, align 2, !alias.scope !51
  %407 = sext <8 x i16> %406 to <8 x i32>
  %408 = sub nsw <8 x i32> %404, %407
  %409 = icmp slt <8 x i32> %408, zeroinitializer
  %410 = sub nsw <8 x i32> zeroinitializer, %408
  %411 = select <8 x i1> %409, <8 x i32> %410, <8 x i32> %408
  %412 = add nuw nsw <8 x i32> %411, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %413 = lshr <8 x i32> %412, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %414 = icmp ult <8 x i32> %413, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %415 = select <8 x i1> %414, <8 x i32> %413, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %416 = trunc <8 x i32> %415 to <8 x i8>
  %417 = add nuw nsw <8 x i8> %416, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %418 = bitcast i8* %388 to <8 x i8>*
  store <8 x i8> %417, <8 x i8>* %418, align 1, !alias.scope !53, !noalias !55
  %419 = getelementptr inbounds i8, i8* %0, i64 176
  %420 = bitcast i8* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !48
  %422 = sext <8 x i16> %421 to <8 x i32>
  %423 = getelementptr inbounds i8, i8* %1, i64 176
  %424 = bitcast i8* %423 to <8 x i16>*
  %425 = load <8 x i16>, <8 x i16>* %424, align 2, !alias.scope !51
  %426 = sext <8 x i16> %425 to <8 x i32>
  %427 = sub nsw <8 x i32> %422, %426
  %428 = icmp slt <8 x i32> %427, zeroinitializer
  %429 = sub nsw <8 x i32> zeroinitializer, %427
  %430 = select <8 x i1> %428, <8 x i32> %429, <8 x i32> %427
  %431 = add nuw nsw <8 x i32> %430, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %432 = lshr <8 x i32> %431, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %433 = icmp ult <8 x i32> %432, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %434 = select <8 x i1> %433, <8 x i32> %432, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %435 = trunc <8 x i32> %434 to <8 x i8>
  %436 = add nuw nsw <8 x i8> %435, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %437 = getelementptr inbounds i8, i8* %388, i64 8
  %438 = bitcast i8* %437 to <8 x i8>*
  store <8 x i8> %436, <8 x i8>* %438, align 1, !alias.scope !53, !noalias !55
  br label %460

439:                                              ; preds = %383, %439
  %440 = phi i64 [ %458, %439 ], [ 0, %383 ]
  %441 = getelementptr inbounds i16, i16* %385, i64 %440
  %442 = load i16, i16* %441, align 2
  %443 = sext i16 %442 to i32
  %444 = getelementptr inbounds i16, i16* %387, i64 %440
  %445 = load i16, i16* %444, align 2
  %446 = sext i16 %445 to i32
  %447 = sub nsw i32 %443, %446
  %448 = icmp slt i32 %447, 0
  %449 = sub nsw i32 0, %447
  %450 = select i1 %448, i32 %449, i32 %447
  %451 = add nuw nsw i32 %450, 8
  %452 = lshr i32 %451, 8
  %453 = icmp ult i32 %452, 26
  %454 = select i1 %453, i32 %452, i32 26
  %455 = trunc i32 %454 to i8
  %456 = add nuw nsw i8 %455, 38
  %457 = getelementptr inbounds i8, i8* %388, i64 %440
  store i8 %456, i8* %457, align 1
  %458 = add nuw nsw i64 %440, 1
  %459 = icmp eq i64 %458, 16
  br i1 %459, label %460, label %439, !llvm.loop !56

460:                                              ; preds = %439, %401
  %461 = getelementptr inbounds i8, i8* %0, i64 192
  %462 = bitcast i8* %461 to i16*
  %463 = getelementptr inbounds i8, i8* %1, i64 192
  %464 = bitcast i8* %463 to i16*
  %465 = getelementptr inbounds i8, i8* %388, i64 %3
  %466 = mul i64 %3, 6
  %467 = add i64 %466, 16
  %468 = getelementptr i8, i8* %2, i64 %467
  %469 = getelementptr i8, i8* %0, i64 224
  %470 = getelementptr i8, i8* %1, i64 224
  %471 = icmp ult i8* %465, %469
  %472 = icmp ult i8* %461, %468
  %473 = and i1 %471, %472
  %474 = icmp ult i8* %465, %470
  %475 = icmp ult i8* %463, %468
  %476 = and i1 %474, %475
  %477 = or i1 %473, %476
  br i1 %477, label %516, label %478

478:                                              ; preds = %460
  %479 = bitcast i8* %461 to <8 x i16>*
  %480 = load <8 x i16>, <8 x i16>* %479, align 2, !alias.scope !57
  %481 = sext <8 x i16> %480 to <8 x i32>
  %482 = bitcast i8* %463 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !60
  %484 = sext <8 x i16> %483 to <8 x i32>
  %485 = sub nsw <8 x i32> %481, %484
  %486 = icmp slt <8 x i32> %485, zeroinitializer
  %487 = sub nsw <8 x i32> zeroinitializer, %485
  %488 = select <8 x i1> %486, <8 x i32> %487, <8 x i32> %485
  %489 = add nuw nsw <8 x i32> %488, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %490 = lshr <8 x i32> %489, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %491 = icmp ult <8 x i32> %490, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %492 = select <8 x i1> %491, <8 x i32> %490, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %493 = trunc <8 x i32> %492 to <8 x i8>
  %494 = add nuw nsw <8 x i8> %493, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %495 = bitcast i8* %465 to <8 x i8>*
  store <8 x i8> %494, <8 x i8>* %495, align 1, !alias.scope !62, !noalias !64
  %496 = getelementptr inbounds i8, i8* %0, i64 208
  %497 = bitcast i8* %496 to <8 x i16>*
  %498 = load <8 x i16>, <8 x i16>* %497, align 2, !alias.scope !57
  %499 = sext <8 x i16> %498 to <8 x i32>
  %500 = getelementptr inbounds i8, i8* %1, i64 208
  %501 = bitcast i8* %500 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !60
  %503 = sext <8 x i16> %502 to <8 x i32>
  %504 = sub nsw <8 x i32> %499, %503
  %505 = icmp slt <8 x i32> %504, zeroinitializer
  %506 = sub nsw <8 x i32> zeroinitializer, %504
  %507 = select <8 x i1> %505, <8 x i32> %506, <8 x i32> %504
  %508 = add nuw nsw <8 x i32> %507, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %509 = lshr <8 x i32> %508, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %510 = icmp ult <8 x i32> %509, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %511 = select <8 x i1> %510, <8 x i32> %509, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %512 = trunc <8 x i32> %511 to <8 x i8>
  %513 = add nuw nsw <8 x i8> %512, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %514 = getelementptr inbounds i8, i8* %465, i64 8
  %515 = bitcast i8* %514 to <8 x i8>*
  store <8 x i8> %513, <8 x i8>* %515, align 1, !alias.scope !62, !noalias !64
  br label %537

516:                                              ; preds = %460, %516
  %517 = phi i64 [ %535, %516 ], [ 0, %460 ]
  %518 = getelementptr inbounds i16, i16* %462, i64 %517
  %519 = load i16, i16* %518, align 2
  %520 = sext i16 %519 to i32
  %521 = getelementptr inbounds i16, i16* %464, i64 %517
  %522 = load i16, i16* %521, align 2
  %523 = sext i16 %522 to i32
  %524 = sub nsw i32 %520, %523
  %525 = icmp slt i32 %524, 0
  %526 = sub nsw i32 0, %524
  %527 = select i1 %525, i32 %526, i32 %524
  %528 = add nuw nsw i32 %527, 8
  %529 = lshr i32 %528, 8
  %530 = icmp ult i32 %529, 26
  %531 = select i1 %530, i32 %529, i32 26
  %532 = trunc i32 %531 to i8
  %533 = add nuw nsw i8 %532, 38
  %534 = getelementptr inbounds i8, i8* %465, i64 %517
  store i8 %533, i8* %534, align 1
  %535 = add nuw nsw i64 %517, 1
  %536 = icmp eq i64 %535, 16
  br i1 %536, label %537, label %516, !llvm.loop !65

537:                                              ; preds = %516, %478
  %538 = getelementptr inbounds i8, i8* %0, i64 224
  %539 = bitcast i8* %538 to i16*
  %540 = getelementptr inbounds i8, i8* %1, i64 224
  %541 = bitcast i8* %540 to i16*
  %542 = getelementptr inbounds i8, i8* %465, i64 %3
  %543 = mul i64 %3, 7
  %544 = add i64 %543, 16
  %545 = getelementptr i8, i8* %2, i64 %544
  %546 = getelementptr i8, i8* %0, i64 256
  %547 = getelementptr i8, i8* %1, i64 256
  %548 = icmp ult i8* %542, %546
  %549 = icmp ult i8* %538, %545
  %550 = and i1 %548, %549
  %551 = icmp ult i8* %542, %547
  %552 = icmp ult i8* %540, %545
  %553 = and i1 %551, %552
  %554 = or i1 %550, %553
  br i1 %554, label %593, label %555

555:                                              ; preds = %537
  %556 = bitcast i8* %538 to <8 x i16>*
  %557 = load <8 x i16>, <8 x i16>* %556, align 2, !alias.scope !66
  %558 = sext <8 x i16> %557 to <8 x i32>
  %559 = bitcast i8* %540 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !69
  %561 = sext <8 x i16> %560 to <8 x i32>
  %562 = sub nsw <8 x i32> %558, %561
  %563 = icmp slt <8 x i32> %562, zeroinitializer
  %564 = sub nsw <8 x i32> zeroinitializer, %562
  %565 = select <8 x i1> %563, <8 x i32> %564, <8 x i32> %562
  %566 = add nuw nsw <8 x i32> %565, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %567 = lshr <8 x i32> %566, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %568 = icmp ult <8 x i32> %567, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %569 = select <8 x i1> %568, <8 x i32> %567, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %570 = trunc <8 x i32> %569 to <8 x i8>
  %571 = add nuw nsw <8 x i8> %570, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %572 = bitcast i8* %542 to <8 x i8>*
  store <8 x i8> %571, <8 x i8>* %572, align 1, !alias.scope !71, !noalias !73
  %573 = getelementptr inbounds i8, i8* %0, i64 240
  %574 = bitcast i8* %573 to <8 x i16>*
  %575 = load <8 x i16>, <8 x i16>* %574, align 2, !alias.scope !66
  %576 = sext <8 x i16> %575 to <8 x i32>
  %577 = getelementptr inbounds i8, i8* %1, i64 240
  %578 = bitcast i8* %577 to <8 x i16>*
  %579 = load <8 x i16>, <8 x i16>* %578, align 2, !alias.scope !69
  %580 = sext <8 x i16> %579 to <8 x i32>
  %581 = sub nsw <8 x i32> %576, %580
  %582 = icmp slt <8 x i32> %581, zeroinitializer
  %583 = sub nsw <8 x i32> zeroinitializer, %581
  %584 = select <8 x i1> %582, <8 x i32> %583, <8 x i32> %581
  %585 = add nuw nsw <8 x i32> %584, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %586 = lshr <8 x i32> %585, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %587 = icmp ult <8 x i32> %586, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %588 = select <8 x i1> %587, <8 x i32> %586, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %589 = trunc <8 x i32> %588 to <8 x i8>
  %590 = add nuw nsw <8 x i8> %589, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %591 = getelementptr inbounds i8, i8* %542, i64 8
  %592 = bitcast i8* %591 to <8 x i8>*
  store <8 x i8> %590, <8 x i8>* %592, align 1, !alias.scope !71, !noalias !73
  br label %614

593:                                              ; preds = %537, %593
  %594 = phi i64 [ %612, %593 ], [ 0, %537 ]
  %595 = getelementptr inbounds i16, i16* %539, i64 %594
  %596 = load i16, i16* %595, align 2
  %597 = sext i16 %596 to i32
  %598 = getelementptr inbounds i16, i16* %541, i64 %594
  %599 = load i16, i16* %598, align 2
  %600 = sext i16 %599 to i32
  %601 = sub nsw i32 %597, %600
  %602 = icmp slt i32 %601, 0
  %603 = sub nsw i32 0, %601
  %604 = select i1 %602, i32 %603, i32 %601
  %605 = add nuw nsw i32 %604, 8
  %606 = lshr i32 %605, 8
  %607 = icmp ult i32 %606, 26
  %608 = select i1 %607, i32 %606, i32 26
  %609 = trunc i32 %608 to i8
  %610 = add nuw nsw i8 %609, 38
  %611 = getelementptr inbounds i8, i8* %542, i64 %594
  store i8 %610, i8* %611, align 1
  %612 = add nuw nsw i64 %594, 1
  %613 = icmp eq i64 %612, 16
  br i1 %613, label %614, label %593, !llvm.loop !74

614:                                              ; preds = %593, %555
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi8ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  %7 = getelementptr i8, i8* %2, i64 16
  %8 = getelementptr i8, i8* %0, i64 32
  %9 = getelementptr i8, i8* %1, i64 32
  %10 = icmp ugt i8* %8, %2
  %11 = icmp ugt i8* %7, %0
  %12 = and i1 %10, %11
  %13 = icmp ugt i8* %9, %2
  %14 = icmp ugt i8* %7, %1
  %15 = and i1 %13, %14
  %16 = or i1 %12, %15
  br i1 %16, label %110, label %17

17:                                               ; preds = %4
  %18 = bitcast i8* %0 to <8 x i16>*
  %19 = load <8 x i16>, <8 x i16>* %18, align 2, !alias.scope !75
  %20 = sext <8 x i16> %19 to <8 x i32>
  %21 = bitcast i8* %1 to <8 x i16>*
  %22 = load <8 x i16>, <8 x i16>* %21, align 2, !alias.scope !78
  %23 = sext <8 x i16> %22 to <8 x i32>
  %24 = sub nsw <8 x i32> %20, %23
  %25 = icmp slt <8 x i32> %24, zeroinitializer
  %26 = sub nsw <8 x i32> zeroinitializer, %24
  %27 = select <8 x i1> %25, <8 x i32> %26, <8 x i32> %24
  %28 = add nuw nsw <8 x i32> %27, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %29 = lshr <8 x i32> %28, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %30 = icmp ult <8 x i32> %29, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %31 = select <8 x i1> %30, <8 x i32> %29, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %32 = trunc <8 x i32> %31 to <8 x i8>
  %33 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %32
  %34 = bitcast i8* %2 to <8 x i8>*
  store <8 x i8> %33, <8 x i8>* %34, align 1, !alias.scope !80, !noalias !82
  %35 = getelementptr inbounds i8, i8* %0, i64 16
  %36 = bitcast i8* %35 to <8 x i16>*
  %37 = load <8 x i16>, <8 x i16>* %36, align 2, !alias.scope !75
  %38 = sext <8 x i16> %37 to <8 x i32>
  %39 = getelementptr inbounds i8, i8* %1, i64 16
  %40 = bitcast i8* %39 to <8 x i16>*
  %41 = load <8 x i16>, <8 x i16>* %40, align 2, !alias.scope !78
  %42 = sext <8 x i16> %41 to <8 x i32>
  %43 = sub nsw <8 x i32> %38, %42
  %44 = icmp slt <8 x i32> %43, zeroinitializer
  %45 = sub nsw <8 x i32> zeroinitializer, %43
  %46 = select <8 x i1> %44, <8 x i32> %45, <8 x i32> %43
  %47 = add nuw nsw <8 x i32> %46, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %48 = lshr <8 x i32> %47, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %49 = icmp ult <8 x i32> %48, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %50 = select <8 x i1> %49, <8 x i32> %48, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %51 = trunc <8 x i32> %50 to <8 x i8>
  %52 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %51
  %53 = getelementptr inbounds i8, i8* %2, i64 8
  %54 = bitcast i8* %53 to <8 x i8>*
  store <8 x i8> %52, <8 x i8>* %54, align 1, !alias.scope !80, !noalias !82
  br label %55

55:                                               ; preds = %110, %17
  %56 = getelementptr inbounds i8, i8* %0, i64 32
  %57 = bitcast i8* %56 to i16*
  %58 = getelementptr inbounds i8, i8* %1, i64 32
  %59 = bitcast i8* %58 to i16*
  %60 = getelementptr inbounds i8, i8* %2, i64 %3
  %61 = add i64 %3, 16
  %62 = getelementptr i8, i8* %2, i64 %61
  %63 = getelementptr i8, i8* %0, i64 64
  %64 = getelementptr i8, i8* %1, i64 64
  %65 = icmp ult i8* %60, %63
  %66 = icmp ult i8* %56, %62
  %67 = and i1 %65, %66
  %68 = icmp ult i8* %60, %64
  %69 = icmp ult i8* %58, %62
  %70 = and i1 %68, %69
  %71 = or i1 %67, %70
  br i1 %71, label %131, label %72

72:                                               ; preds = %55
  %73 = bitcast i8* %56 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !83
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = bitcast i8* %58 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !86
  %78 = sext <8 x i16> %77 to <8 x i32>
  %79 = sub nsw <8 x i32> %75, %78
  %80 = icmp slt <8 x i32> %79, zeroinitializer
  %81 = sub nsw <8 x i32> zeroinitializer, %79
  %82 = select <8 x i1> %80, <8 x i32> %81, <8 x i32> %79
  %83 = add nuw nsw <8 x i32> %82, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %84 = lshr <8 x i32> %83, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %85 = icmp ult <8 x i32> %84, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %86 = select <8 x i1> %85, <8 x i32> %84, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %87 = trunc <8 x i32> %86 to <8 x i8>
  %88 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %87
  %89 = bitcast i8* %60 to <8 x i8>*
  store <8 x i8> %88, <8 x i8>* %89, align 1, !alias.scope !88, !noalias !90
  %90 = getelementptr inbounds i8, i8* %0, i64 48
  %91 = bitcast i8* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !83
  %93 = sext <8 x i16> %92 to <8 x i32>
  %94 = getelementptr inbounds i8, i8* %1, i64 48
  %95 = bitcast i8* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !86
  %97 = sext <8 x i16> %96 to <8 x i32>
  %98 = sub nsw <8 x i32> %93, %97
  %99 = icmp slt <8 x i32> %98, zeroinitializer
  %100 = sub nsw <8 x i32> zeroinitializer, %98
  %101 = select <8 x i1> %99, <8 x i32> %100, <8 x i32> %98
  %102 = add nuw nsw <8 x i32> %101, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %103 = lshr <8 x i32> %102, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %104 = icmp ult <8 x i32> %103, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %105 = select <8 x i1> %104, <8 x i32> %103, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %106 = trunc <8 x i32> %105 to <8 x i8>
  %107 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %106
  %108 = getelementptr inbounds i8, i8* %60, i64 8
  %109 = bitcast i8* %108 to <8 x i8>*
  store <8 x i8> %107, <8 x i8>* %109, align 1, !alias.scope !88, !noalias !90
  br label %152

110:                                              ; preds = %4, %110
  %111 = phi i64 [ %129, %110 ], [ 0, %4 ]
  %112 = getelementptr inbounds i16, i16* %5, i64 %111
  %113 = load i16, i16* %112, align 2
  %114 = sext i16 %113 to i32
  %115 = getelementptr inbounds i16, i16* %6, i64 %111
  %116 = load i16, i16* %115, align 2
  %117 = sext i16 %116 to i32
  %118 = sub nsw i32 %114, %117
  %119 = icmp slt i32 %118, 0
  %120 = sub nsw i32 0, %118
  %121 = select i1 %119, i32 %120, i32 %118
  %122 = add nuw nsw i32 %121, 8
  %123 = lshr i32 %122, 8
  %124 = icmp ult i32 %123, 26
  %125 = select i1 %124, i32 %123, i32 26
  %126 = trunc i32 %125 to i8
  %127 = sub nuw nsw i8 26, %126
  %128 = getelementptr inbounds i8, i8* %2, i64 %111
  store i8 %127, i8* %128, align 1
  %129 = add nuw nsw i64 %111, 1
  %130 = icmp eq i64 %129, 16
  br i1 %130, label %55, label %110, !llvm.loop !91

131:                                              ; preds = %55, %131
  %132 = phi i64 [ %150, %131 ], [ 0, %55 ]
  %133 = getelementptr inbounds i16, i16* %57, i64 %132
  %134 = load i16, i16* %133, align 2
  %135 = sext i16 %134 to i32
  %136 = getelementptr inbounds i16, i16* %59, i64 %132
  %137 = load i16, i16* %136, align 2
  %138 = sext i16 %137 to i32
  %139 = sub nsw i32 %135, %138
  %140 = icmp slt i32 %139, 0
  %141 = sub nsw i32 0, %139
  %142 = select i1 %140, i32 %141, i32 %139
  %143 = add nuw nsw i32 %142, 8
  %144 = lshr i32 %143, 8
  %145 = icmp ult i32 %144, 26
  %146 = select i1 %145, i32 %144, i32 26
  %147 = trunc i32 %146 to i8
  %148 = sub nuw nsw i8 26, %147
  %149 = getelementptr inbounds i8, i8* %60, i64 %132
  store i8 %148, i8* %149, align 1
  %150 = add nuw nsw i64 %132, 1
  %151 = icmp eq i64 %150, 16
  br i1 %151, label %152, label %131, !llvm.loop !92

152:                                              ; preds = %131, %72
  %153 = getelementptr inbounds i8, i8* %0, i64 64
  %154 = bitcast i8* %153 to i16*
  %155 = getelementptr inbounds i8, i8* %1, i64 64
  %156 = bitcast i8* %155 to i16*
  %157 = getelementptr inbounds i8, i8* %60, i64 %3
  %158 = shl i64 %3, 1
  %159 = add i64 %158, 16
  %160 = getelementptr i8, i8* %2, i64 %159
  %161 = getelementptr i8, i8* %0, i64 96
  %162 = getelementptr i8, i8* %1, i64 96
  %163 = icmp ult i8* %157, %161
  %164 = icmp ult i8* %153, %160
  %165 = and i1 %163, %164
  %166 = icmp ult i8* %157, %162
  %167 = icmp ult i8* %155, %160
  %168 = and i1 %166, %167
  %169 = or i1 %165, %168
  br i1 %169, label %208, label %170

170:                                              ; preds = %152
  %171 = bitcast i8* %153 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !93
  %173 = sext <8 x i16> %172 to <8 x i32>
  %174 = bitcast i8* %155 to <8 x i16>*
  %175 = load <8 x i16>, <8 x i16>* %174, align 2, !alias.scope !96
  %176 = sext <8 x i16> %175 to <8 x i32>
  %177 = sub nsw <8 x i32> %173, %176
  %178 = icmp slt <8 x i32> %177, zeroinitializer
  %179 = sub nsw <8 x i32> zeroinitializer, %177
  %180 = select <8 x i1> %178, <8 x i32> %179, <8 x i32> %177
  %181 = add nuw nsw <8 x i32> %180, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %182 = lshr <8 x i32> %181, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %183 = icmp ult <8 x i32> %182, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = select <8 x i1> %183, <8 x i32> %182, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %185 = trunc <8 x i32> %184 to <8 x i8>
  %186 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %185
  %187 = bitcast i8* %157 to <8 x i8>*
  store <8 x i8> %186, <8 x i8>* %187, align 1, !alias.scope !98, !noalias !100
  %188 = getelementptr inbounds i8, i8* %0, i64 80
  %189 = bitcast i8* %188 to <8 x i16>*
  %190 = load <8 x i16>, <8 x i16>* %189, align 2, !alias.scope !93
  %191 = sext <8 x i16> %190 to <8 x i32>
  %192 = getelementptr inbounds i8, i8* %1, i64 80
  %193 = bitcast i8* %192 to <8 x i16>*
  %194 = load <8 x i16>, <8 x i16>* %193, align 2, !alias.scope !96
  %195 = sext <8 x i16> %194 to <8 x i32>
  %196 = sub nsw <8 x i32> %191, %195
  %197 = icmp slt <8 x i32> %196, zeroinitializer
  %198 = sub nsw <8 x i32> zeroinitializer, %196
  %199 = select <8 x i1> %197, <8 x i32> %198, <8 x i32> %196
  %200 = add nuw nsw <8 x i32> %199, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %201 = lshr <8 x i32> %200, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %202 = icmp ult <8 x i32> %201, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %203 = select <8 x i1> %202, <8 x i32> %201, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %204 = trunc <8 x i32> %203 to <8 x i8>
  %205 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %204
  %206 = getelementptr inbounds i8, i8* %157, i64 8
  %207 = bitcast i8* %206 to <8 x i8>*
  store <8 x i8> %205, <8 x i8>* %207, align 1, !alias.scope !98, !noalias !100
  br label %229

208:                                              ; preds = %152, %208
  %209 = phi i64 [ %227, %208 ], [ 0, %152 ]
  %210 = getelementptr inbounds i16, i16* %154, i64 %209
  %211 = load i16, i16* %210, align 2
  %212 = sext i16 %211 to i32
  %213 = getelementptr inbounds i16, i16* %156, i64 %209
  %214 = load i16, i16* %213, align 2
  %215 = sext i16 %214 to i32
  %216 = sub nsw i32 %212, %215
  %217 = icmp slt i32 %216, 0
  %218 = sub nsw i32 0, %216
  %219 = select i1 %217, i32 %218, i32 %216
  %220 = add nuw nsw i32 %219, 8
  %221 = lshr i32 %220, 8
  %222 = icmp ult i32 %221, 26
  %223 = select i1 %222, i32 %221, i32 26
  %224 = trunc i32 %223 to i8
  %225 = sub nuw nsw i8 26, %224
  %226 = getelementptr inbounds i8, i8* %157, i64 %209
  store i8 %225, i8* %226, align 1
  %227 = add nuw nsw i64 %209, 1
  %228 = icmp eq i64 %227, 16
  br i1 %228, label %229, label %208, !llvm.loop !101

229:                                              ; preds = %208, %170
  %230 = getelementptr inbounds i8, i8* %0, i64 96
  %231 = bitcast i8* %230 to i16*
  %232 = getelementptr inbounds i8, i8* %1, i64 96
  %233 = bitcast i8* %232 to i16*
  %234 = getelementptr inbounds i8, i8* %157, i64 %3
  %235 = mul i64 %3, 3
  %236 = add i64 %235, 16
  %237 = getelementptr i8, i8* %2, i64 %236
  %238 = getelementptr i8, i8* %0, i64 128
  %239 = getelementptr i8, i8* %1, i64 128
  %240 = icmp ult i8* %234, %238
  %241 = icmp ult i8* %230, %237
  %242 = and i1 %240, %241
  %243 = icmp ult i8* %234, %239
  %244 = icmp ult i8* %232, %237
  %245 = and i1 %243, %244
  %246 = or i1 %242, %245
  br i1 %246, label %285, label %247

247:                                              ; preds = %229
  %248 = bitcast i8* %230 to <8 x i16>*
  %249 = load <8 x i16>, <8 x i16>* %248, align 2, !alias.scope !102
  %250 = sext <8 x i16> %249 to <8 x i32>
  %251 = bitcast i8* %232 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !105
  %253 = sext <8 x i16> %252 to <8 x i32>
  %254 = sub nsw <8 x i32> %250, %253
  %255 = icmp slt <8 x i32> %254, zeroinitializer
  %256 = sub nsw <8 x i32> zeroinitializer, %254
  %257 = select <8 x i1> %255, <8 x i32> %256, <8 x i32> %254
  %258 = add nuw nsw <8 x i32> %257, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %259 = lshr <8 x i32> %258, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %260 = icmp ult <8 x i32> %259, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %261 = select <8 x i1> %260, <8 x i32> %259, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %262 = trunc <8 x i32> %261 to <8 x i8>
  %263 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %262
  %264 = bitcast i8* %234 to <8 x i8>*
  store <8 x i8> %263, <8 x i8>* %264, align 1, !alias.scope !107, !noalias !109
  %265 = getelementptr inbounds i8, i8* %0, i64 112
  %266 = bitcast i8* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !102
  %268 = sext <8 x i16> %267 to <8 x i32>
  %269 = getelementptr inbounds i8, i8* %1, i64 112
  %270 = bitcast i8* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !105
  %272 = sext <8 x i16> %271 to <8 x i32>
  %273 = sub nsw <8 x i32> %268, %272
  %274 = icmp slt <8 x i32> %273, zeroinitializer
  %275 = sub nsw <8 x i32> zeroinitializer, %273
  %276 = select <8 x i1> %274, <8 x i32> %275, <8 x i32> %273
  %277 = add nuw nsw <8 x i32> %276, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %278 = lshr <8 x i32> %277, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %279 = icmp ult <8 x i32> %278, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %280 = select <8 x i1> %279, <8 x i32> %278, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %281 = trunc <8 x i32> %280 to <8 x i8>
  %282 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %281
  %283 = getelementptr inbounds i8, i8* %234, i64 8
  %284 = bitcast i8* %283 to <8 x i8>*
  store <8 x i8> %282, <8 x i8>* %284, align 1, !alias.scope !107, !noalias !109
  br label %306

285:                                              ; preds = %229, %285
  %286 = phi i64 [ %304, %285 ], [ 0, %229 ]
  %287 = getelementptr inbounds i16, i16* %231, i64 %286
  %288 = load i16, i16* %287, align 2
  %289 = sext i16 %288 to i32
  %290 = getelementptr inbounds i16, i16* %233, i64 %286
  %291 = load i16, i16* %290, align 2
  %292 = sext i16 %291 to i32
  %293 = sub nsw i32 %289, %292
  %294 = icmp slt i32 %293, 0
  %295 = sub nsw i32 0, %293
  %296 = select i1 %294, i32 %295, i32 %293
  %297 = add nuw nsw i32 %296, 8
  %298 = lshr i32 %297, 8
  %299 = icmp ult i32 %298, 26
  %300 = select i1 %299, i32 %298, i32 26
  %301 = trunc i32 %300 to i8
  %302 = sub nuw nsw i8 26, %301
  %303 = getelementptr inbounds i8, i8* %234, i64 %286
  store i8 %302, i8* %303, align 1
  %304 = add nuw nsw i64 %286, 1
  %305 = icmp eq i64 %304, 16
  br i1 %305, label %306, label %285, !llvm.loop !110

306:                                              ; preds = %285, %247
  %307 = getelementptr inbounds i8, i8* %0, i64 128
  %308 = bitcast i8* %307 to i16*
  %309 = getelementptr inbounds i8, i8* %1, i64 128
  %310 = bitcast i8* %309 to i16*
  %311 = getelementptr inbounds i8, i8* %234, i64 %3
  %312 = shl i64 %3, 2
  %313 = add i64 %312, 16
  %314 = getelementptr i8, i8* %2, i64 %313
  %315 = getelementptr i8, i8* %0, i64 160
  %316 = getelementptr i8, i8* %1, i64 160
  %317 = icmp ult i8* %311, %315
  %318 = icmp ult i8* %307, %314
  %319 = and i1 %317, %318
  %320 = icmp ult i8* %311, %316
  %321 = icmp ult i8* %309, %314
  %322 = and i1 %320, %321
  %323 = or i1 %319, %322
  br i1 %323, label %362, label %324

324:                                              ; preds = %306
  %325 = bitcast i8* %307 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !111
  %327 = sext <8 x i16> %326 to <8 x i32>
  %328 = bitcast i8* %309 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !114
  %330 = sext <8 x i16> %329 to <8 x i32>
  %331 = sub nsw <8 x i32> %327, %330
  %332 = icmp slt <8 x i32> %331, zeroinitializer
  %333 = sub nsw <8 x i32> zeroinitializer, %331
  %334 = select <8 x i1> %332, <8 x i32> %333, <8 x i32> %331
  %335 = add nuw nsw <8 x i32> %334, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %336 = lshr <8 x i32> %335, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %337 = icmp ult <8 x i32> %336, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %338 = select <8 x i1> %337, <8 x i32> %336, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %339 = trunc <8 x i32> %338 to <8 x i8>
  %340 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %339
  %341 = bitcast i8* %311 to <8 x i8>*
  store <8 x i8> %340, <8 x i8>* %341, align 1, !alias.scope !116, !noalias !118
  %342 = getelementptr inbounds i8, i8* %0, i64 144
  %343 = bitcast i8* %342 to <8 x i16>*
  %344 = load <8 x i16>, <8 x i16>* %343, align 2, !alias.scope !111
  %345 = sext <8 x i16> %344 to <8 x i32>
  %346 = getelementptr inbounds i8, i8* %1, i64 144
  %347 = bitcast i8* %346 to <8 x i16>*
  %348 = load <8 x i16>, <8 x i16>* %347, align 2, !alias.scope !114
  %349 = sext <8 x i16> %348 to <8 x i32>
  %350 = sub nsw <8 x i32> %345, %349
  %351 = icmp slt <8 x i32> %350, zeroinitializer
  %352 = sub nsw <8 x i32> zeroinitializer, %350
  %353 = select <8 x i1> %351, <8 x i32> %352, <8 x i32> %350
  %354 = add nuw nsw <8 x i32> %353, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %355 = lshr <8 x i32> %354, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %356 = icmp ult <8 x i32> %355, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %357 = select <8 x i1> %356, <8 x i32> %355, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %358 = trunc <8 x i32> %357 to <8 x i8>
  %359 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %358
  %360 = getelementptr inbounds i8, i8* %311, i64 8
  %361 = bitcast i8* %360 to <8 x i8>*
  store <8 x i8> %359, <8 x i8>* %361, align 1, !alias.scope !116, !noalias !118
  br label %383

362:                                              ; preds = %306, %362
  %363 = phi i64 [ %381, %362 ], [ 0, %306 ]
  %364 = getelementptr inbounds i16, i16* %308, i64 %363
  %365 = load i16, i16* %364, align 2
  %366 = sext i16 %365 to i32
  %367 = getelementptr inbounds i16, i16* %310, i64 %363
  %368 = load i16, i16* %367, align 2
  %369 = sext i16 %368 to i32
  %370 = sub nsw i32 %366, %369
  %371 = icmp slt i32 %370, 0
  %372 = sub nsw i32 0, %370
  %373 = select i1 %371, i32 %372, i32 %370
  %374 = add nuw nsw i32 %373, 8
  %375 = lshr i32 %374, 8
  %376 = icmp ult i32 %375, 26
  %377 = select i1 %376, i32 %375, i32 26
  %378 = trunc i32 %377 to i8
  %379 = sub nuw nsw i8 26, %378
  %380 = getelementptr inbounds i8, i8* %311, i64 %363
  store i8 %379, i8* %380, align 1
  %381 = add nuw nsw i64 %363, 1
  %382 = icmp eq i64 %381, 16
  br i1 %382, label %383, label %362, !llvm.loop !119

383:                                              ; preds = %362, %324
  %384 = getelementptr inbounds i8, i8* %0, i64 160
  %385 = bitcast i8* %384 to i16*
  %386 = getelementptr inbounds i8, i8* %1, i64 160
  %387 = bitcast i8* %386 to i16*
  %388 = getelementptr inbounds i8, i8* %311, i64 %3
  %389 = mul i64 %3, 5
  %390 = add i64 %389, 16
  %391 = getelementptr i8, i8* %2, i64 %390
  %392 = getelementptr i8, i8* %0, i64 192
  %393 = getelementptr i8, i8* %1, i64 192
  %394 = icmp ult i8* %388, %392
  %395 = icmp ult i8* %384, %391
  %396 = and i1 %394, %395
  %397 = icmp ult i8* %388, %393
  %398 = icmp ult i8* %386, %391
  %399 = and i1 %397, %398
  %400 = or i1 %396, %399
  br i1 %400, label %439, label %401

401:                                              ; preds = %383
  %402 = bitcast i8* %384 to <8 x i16>*
  %403 = load <8 x i16>, <8 x i16>* %402, align 2, !alias.scope !120
  %404 = sext <8 x i16> %403 to <8 x i32>
  %405 = bitcast i8* %386 to <8 x i16>*
  %406 = load <8 x i16>, <8 x i16>* %405, align 2, !alias.scope !123
  %407 = sext <8 x i16> %406 to <8 x i32>
  %408 = sub nsw <8 x i32> %404, %407
  %409 = icmp slt <8 x i32> %408, zeroinitializer
  %410 = sub nsw <8 x i32> zeroinitializer, %408
  %411 = select <8 x i1> %409, <8 x i32> %410, <8 x i32> %408
  %412 = add nuw nsw <8 x i32> %411, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %413 = lshr <8 x i32> %412, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %414 = icmp ult <8 x i32> %413, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %415 = select <8 x i1> %414, <8 x i32> %413, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %416 = trunc <8 x i32> %415 to <8 x i8>
  %417 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %416
  %418 = bitcast i8* %388 to <8 x i8>*
  store <8 x i8> %417, <8 x i8>* %418, align 1, !alias.scope !125, !noalias !127
  %419 = getelementptr inbounds i8, i8* %0, i64 176
  %420 = bitcast i8* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !120
  %422 = sext <8 x i16> %421 to <8 x i32>
  %423 = getelementptr inbounds i8, i8* %1, i64 176
  %424 = bitcast i8* %423 to <8 x i16>*
  %425 = load <8 x i16>, <8 x i16>* %424, align 2, !alias.scope !123
  %426 = sext <8 x i16> %425 to <8 x i32>
  %427 = sub nsw <8 x i32> %422, %426
  %428 = icmp slt <8 x i32> %427, zeroinitializer
  %429 = sub nsw <8 x i32> zeroinitializer, %427
  %430 = select <8 x i1> %428, <8 x i32> %429, <8 x i32> %427
  %431 = add nuw nsw <8 x i32> %430, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %432 = lshr <8 x i32> %431, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %433 = icmp ult <8 x i32> %432, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %434 = select <8 x i1> %433, <8 x i32> %432, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %435 = trunc <8 x i32> %434 to <8 x i8>
  %436 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %435
  %437 = getelementptr inbounds i8, i8* %388, i64 8
  %438 = bitcast i8* %437 to <8 x i8>*
  store <8 x i8> %436, <8 x i8>* %438, align 1, !alias.scope !125, !noalias !127
  br label %460

439:                                              ; preds = %383, %439
  %440 = phi i64 [ %458, %439 ], [ 0, %383 ]
  %441 = getelementptr inbounds i16, i16* %385, i64 %440
  %442 = load i16, i16* %441, align 2
  %443 = sext i16 %442 to i32
  %444 = getelementptr inbounds i16, i16* %387, i64 %440
  %445 = load i16, i16* %444, align 2
  %446 = sext i16 %445 to i32
  %447 = sub nsw i32 %443, %446
  %448 = icmp slt i32 %447, 0
  %449 = sub nsw i32 0, %447
  %450 = select i1 %448, i32 %449, i32 %447
  %451 = add nuw nsw i32 %450, 8
  %452 = lshr i32 %451, 8
  %453 = icmp ult i32 %452, 26
  %454 = select i1 %453, i32 %452, i32 26
  %455 = trunc i32 %454 to i8
  %456 = sub nuw nsw i8 26, %455
  %457 = getelementptr inbounds i8, i8* %388, i64 %440
  store i8 %456, i8* %457, align 1
  %458 = add nuw nsw i64 %440, 1
  %459 = icmp eq i64 %458, 16
  br i1 %459, label %460, label %439, !llvm.loop !128

460:                                              ; preds = %439, %401
  %461 = getelementptr inbounds i8, i8* %0, i64 192
  %462 = bitcast i8* %461 to i16*
  %463 = getelementptr inbounds i8, i8* %1, i64 192
  %464 = bitcast i8* %463 to i16*
  %465 = getelementptr inbounds i8, i8* %388, i64 %3
  %466 = mul i64 %3, 6
  %467 = add i64 %466, 16
  %468 = getelementptr i8, i8* %2, i64 %467
  %469 = getelementptr i8, i8* %0, i64 224
  %470 = getelementptr i8, i8* %1, i64 224
  %471 = icmp ult i8* %465, %469
  %472 = icmp ult i8* %461, %468
  %473 = and i1 %471, %472
  %474 = icmp ult i8* %465, %470
  %475 = icmp ult i8* %463, %468
  %476 = and i1 %474, %475
  %477 = or i1 %473, %476
  br i1 %477, label %516, label %478

478:                                              ; preds = %460
  %479 = bitcast i8* %461 to <8 x i16>*
  %480 = load <8 x i16>, <8 x i16>* %479, align 2, !alias.scope !129
  %481 = sext <8 x i16> %480 to <8 x i32>
  %482 = bitcast i8* %463 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !132
  %484 = sext <8 x i16> %483 to <8 x i32>
  %485 = sub nsw <8 x i32> %481, %484
  %486 = icmp slt <8 x i32> %485, zeroinitializer
  %487 = sub nsw <8 x i32> zeroinitializer, %485
  %488 = select <8 x i1> %486, <8 x i32> %487, <8 x i32> %485
  %489 = add nuw nsw <8 x i32> %488, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %490 = lshr <8 x i32> %489, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %491 = icmp ult <8 x i32> %490, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %492 = select <8 x i1> %491, <8 x i32> %490, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %493 = trunc <8 x i32> %492 to <8 x i8>
  %494 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %493
  %495 = bitcast i8* %465 to <8 x i8>*
  store <8 x i8> %494, <8 x i8>* %495, align 1, !alias.scope !134, !noalias !136
  %496 = getelementptr inbounds i8, i8* %0, i64 208
  %497 = bitcast i8* %496 to <8 x i16>*
  %498 = load <8 x i16>, <8 x i16>* %497, align 2, !alias.scope !129
  %499 = sext <8 x i16> %498 to <8 x i32>
  %500 = getelementptr inbounds i8, i8* %1, i64 208
  %501 = bitcast i8* %500 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !132
  %503 = sext <8 x i16> %502 to <8 x i32>
  %504 = sub nsw <8 x i32> %499, %503
  %505 = icmp slt <8 x i32> %504, zeroinitializer
  %506 = sub nsw <8 x i32> zeroinitializer, %504
  %507 = select <8 x i1> %505, <8 x i32> %506, <8 x i32> %504
  %508 = add nuw nsw <8 x i32> %507, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %509 = lshr <8 x i32> %508, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %510 = icmp ult <8 x i32> %509, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %511 = select <8 x i1> %510, <8 x i32> %509, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %512 = trunc <8 x i32> %511 to <8 x i8>
  %513 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %512
  %514 = getelementptr inbounds i8, i8* %465, i64 8
  %515 = bitcast i8* %514 to <8 x i8>*
  store <8 x i8> %513, <8 x i8>* %515, align 1, !alias.scope !134, !noalias !136
  br label %537

516:                                              ; preds = %460, %516
  %517 = phi i64 [ %535, %516 ], [ 0, %460 ]
  %518 = getelementptr inbounds i16, i16* %462, i64 %517
  %519 = load i16, i16* %518, align 2
  %520 = sext i16 %519 to i32
  %521 = getelementptr inbounds i16, i16* %464, i64 %517
  %522 = load i16, i16* %521, align 2
  %523 = sext i16 %522 to i32
  %524 = sub nsw i32 %520, %523
  %525 = icmp slt i32 %524, 0
  %526 = sub nsw i32 0, %524
  %527 = select i1 %525, i32 %526, i32 %524
  %528 = add nuw nsw i32 %527, 8
  %529 = lshr i32 %528, 8
  %530 = icmp ult i32 %529, 26
  %531 = select i1 %530, i32 %529, i32 26
  %532 = trunc i32 %531 to i8
  %533 = sub nuw nsw i8 26, %532
  %534 = getelementptr inbounds i8, i8* %465, i64 %517
  store i8 %533, i8* %534, align 1
  %535 = add nuw nsw i64 %517, 1
  %536 = icmp eq i64 %535, 16
  br i1 %536, label %537, label %516, !llvm.loop !137

537:                                              ; preds = %516, %478
  %538 = getelementptr inbounds i8, i8* %0, i64 224
  %539 = bitcast i8* %538 to i16*
  %540 = getelementptr inbounds i8, i8* %1, i64 224
  %541 = bitcast i8* %540 to i16*
  %542 = getelementptr inbounds i8, i8* %465, i64 %3
  %543 = mul i64 %3, 7
  %544 = add i64 %543, 16
  %545 = getelementptr i8, i8* %2, i64 %544
  %546 = getelementptr i8, i8* %0, i64 256
  %547 = getelementptr i8, i8* %1, i64 256
  %548 = icmp ult i8* %542, %546
  %549 = icmp ult i8* %538, %545
  %550 = and i1 %548, %549
  %551 = icmp ult i8* %542, %547
  %552 = icmp ult i8* %540, %545
  %553 = and i1 %551, %552
  %554 = or i1 %550, %553
  br i1 %554, label %593, label %555

555:                                              ; preds = %537
  %556 = bitcast i8* %538 to <8 x i16>*
  %557 = load <8 x i16>, <8 x i16>* %556, align 2, !alias.scope !138
  %558 = sext <8 x i16> %557 to <8 x i32>
  %559 = bitcast i8* %540 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !141
  %561 = sext <8 x i16> %560 to <8 x i32>
  %562 = sub nsw <8 x i32> %558, %561
  %563 = icmp slt <8 x i32> %562, zeroinitializer
  %564 = sub nsw <8 x i32> zeroinitializer, %562
  %565 = select <8 x i1> %563, <8 x i32> %564, <8 x i32> %562
  %566 = add nuw nsw <8 x i32> %565, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %567 = lshr <8 x i32> %566, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %568 = icmp ult <8 x i32> %567, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %569 = select <8 x i1> %568, <8 x i32> %567, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %570 = trunc <8 x i32> %569 to <8 x i8>
  %571 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %570
  %572 = bitcast i8* %542 to <8 x i8>*
  store <8 x i8> %571, <8 x i8>* %572, align 1, !alias.scope !143, !noalias !145
  %573 = getelementptr inbounds i8, i8* %0, i64 240
  %574 = bitcast i8* %573 to <8 x i16>*
  %575 = load <8 x i16>, <8 x i16>* %574, align 2, !alias.scope !138
  %576 = sext <8 x i16> %575 to <8 x i32>
  %577 = getelementptr inbounds i8, i8* %1, i64 240
  %578 = bitcast i8* %577 to <8 x i16>*
  %579 = load <8 x i16>, <8 x i16>* %578, align 2, !alias.scope !141
  %580 = sext <8 x i16> %579 to <8 x i32>
  %581 = sub nsw <8 x i32> %576, %580
  %582 = icmp slt <8 x i32> %581, zeroinitializer
  %583 = sub nsw <8 x i32> zeroinitializer, %581
  %584 = select <8 x i1> %582, <8 x i32> %583, <8 x i32> %581
  %585 = add nuw nsw <8 x i32> %584, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %586 = lshr <8 x i32> %585, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %587 = icmp ult <8 x i32> %586, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %588 = select <8 x i1> %587, <8 x i32> %586, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %589 = trunc <8 x i32> %588 to <8 x i8>
  %590 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %589
  %591 = getelementptr inbounds i8, i8* %542, i64 8
  %592 = bitcast i8* %591 to <8 x i8>*
  store <8 x i8> %590, <8 x i8>* %592, align 1, !alias.scope !143, !noalias !145
  br label %614

593:                                              ; preds = %537, %593
  %594 = phi i64 [ %612, %593 ], [ 0, %537 ]
  %595 = getelementptr inbounds i16, i16* %539, i64 %594
  %596 = load i16, i16* %595, align 2
  %597 = sext i16 %596 to i32
  %598 = getelementptr inbounds i16, i16* %541, i64 %594
  %599 = load i16, i16* %598, align 2
  %600 = sext i16 %599 to i32
  %601 = sub nsw i32 %597, %600
  %602 = icmp slt i32 %601, 0
  %603 = sub nsw i32 0, %601
  %604 = select i1 %602, i32 %603, i32 %601
  %605 = add nuw nsw i32 %604, 8
  %606 = lshr i32 %605, 8
  %607 = icmp ult i32 %606, 26
  %608 = select i1 %607, i32 %606, i32 26
  %609 = trunc i32 %608 to i8
  %610 = sub nuw nsw i8 26, %609
  %611 = getelementptr inbounds i8, i8* %542, i64 %594
  store i8 %610, i8* %611, align 1
  %612 = add nuw nsw i64 %594, 1
  %613 = icmp eq i64 %612, 16
  br i1 %613, label %614, label %593, !llvm.loop !146

614:                                              ; preds = %593, %555
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi16ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %69, %4
  %8 = phi i64 [ %75, %69 ], [ 0, %4 ]
  %9 = phi i8* [ %72, %69 ], [ %2, %4 ]
  %10 = phi i16* [ %70, %69 ], [ %5, %4 ]
  %11 = phi i32 [ %73, %69 ], [ 0, %4 ]
  %12 = phi i16* [ %71, %69 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 16
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 5
  %18 = add i64 %17, 32
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !147
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !150
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !152, !noalias !154
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !147
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !150
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !152, !noalias !154
  br label %69

68:                                               ; preds = %69
  ret void

69:                                               ; preds = %76, %30
  %70 = getelementptr inbounds i16, i16* %10, i64 16
  %71 = getelementptr inbounds i16, i16* %12, i64 16
  %72 = getelementptr inbounds i8, i8* %9, i64 %3
  %73 = add nuw nsw i32 %11, 1
  %74 = icmp eq i32 %73, 16
  %75 = add i64 %8, 1
  br i1 %74, label %68, label %7

76:                                               ; preds = %7, %76
  %77 = phi i64 [ %95, %76 ], [ 0, %7 ]
  %78 = getelementptr inbounds i16, i16* %10, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = getelementptr inbounds i16, i16* %12, i64 %77
  %82 = load i16, i16* %81, align 2
  %83 = sext i16 %82 to i32
  %84 = sub nsw i32 %80, %83
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 0, %84
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = add nuw nsw i32 %87, 8
  %89 = lshr i32 %88, 8
  %90 = icmp ult i32 %89, 26
  %91 = select i1 %90, i32 %89, i32 26
  %92 = trunc i32 %91 to i8
  %93 = add nuw nsw i8 %92, 38
  %94 = getelementptr inbounds i8, i8* %9, i64 %77
  store i8 %93, i8* %94, align 1
  %95 = add nuw nsw i64 %77, 1
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %69, label %76, !llvm.loop !155
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi16ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %69, %4
  %8 = phi i64 [ %75, %69 ], [ 0, %4 ]
  %9 = phi i8* [ %72, %69 ], [ %2, %4 ]
  %10 = phi i16* [ %70, %69 ], [ %5, %4 ]
  %11 = phi i32 [ %73, %69 ], [ 0, %4 ]
  %12 = phi i16* [ %71, %69 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 16
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 5
  %18 = add i64 %17, 32
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !156
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !159
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !161, !noalias !163
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !156
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !159
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !161, !noalias !163
  br label %69

68:                                               ; preds = %69
  ret void

69:                                               ; preds = %76, %30
  %70 = getelementptr inbounds i16, i16* %10, i64 16
  %71 = getelementptr inbounds i16, i16* %12, i64 16
  %72 = getelementptr inbounds i8, i8* %9, i64 %3
  %73 = add nuw nsw i32 %11, 1
  %74 = icmp eq i32 %73, 16
  %75 = add i64 %8, 1
  br i1 %74, label %68, label %7

76:                                               ; preds = %7, %76
  %77 = phi i64 [ %95, %76 ], [ 0, %7 ]
  %78 = getelementptr inbounds i16, i16* %10, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = getelementptr inbounds i16, i16* %12, i64 %77
  %82 = load i16, i16* %81, align 2
  %83 = sext i16 %82 to i32
  %84 = sub nsw i32 %80, %83
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 0, %84
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = add nuw nsw i32 %87, 8
  %89 = lshr i32 %88, 8
  %90 = icmp ult i32 %89, 26
  %91 = select i1 %90, i32 %89, i32 26
  %92 = trunc i32 %91 to i8
  %93 = sub nuw nsw i8 26, %92
  %94 = getelementptr inbounds i8, i8* %9, i64 %77
  store i8 %93, i8* %94, align 1
  %95 = add nuw nsw i64 %77, 1
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %69, label %76, !llvm.loop !164
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi32ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %69, %4
  %8 = phi i64 [ %75, %69 ], [ 0, %4 ]
  %9 = phi i8* [ %72, %69 ], [ %2, %4 ]
  %10 = phi i16* [ %70, %69 ], [ %5, %4 ]
  %11 = phi i32 [ %73, %69 ], [ 0, %4 ]
  %12 = phi i16* [ %71, %69 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 16
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 5
  %18 = add i64 %17, 32
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !165
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !168
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !170, !noalias !172
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !165
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !168
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !170, !noalias !172
  br label %69

68:                                               ; preds = %69
  ret void

69:                                               ; preds = %76, %30
  %70 = getelementptr inbounds i16, i16* %10, i64 16
  %71 = getelementptr inbounds i16, i16* %12, i64 16
  %72 = getelementptr inbounds i8, i8* %9, i64 %3
  %73 = add nuw nsw i32 %11, 1
  %74 = icmp eq i32 %73, 32
  %75 = add i64 %8, 1
  br i1 %74, label %68, label %7

76:                                               ; preds = %7, %76
  %77 = phi i64 [ %95, %76 ], [ 0, %7 ]
  %78 = getelementptr inbounds i16, i16* %10, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = getelementptr inbounds i16, i16* %12, i64 %77
  %82 = load i16, i16* %81, align 2
  %83 = sext i16 %82 to i32
  %84 = sub nsw i32 %80, %83
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 0, %84
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = add nuw nsw i32 %87, 8
  %89 = lshr i32 %88, 8
  %90 = icmp ult i32 %89, 26
  %91 = select i1 %90, i32 %89, i32 26
  %92 = trunc i32 %91 to i8
  %93 = add nuw nsw i8 %92, 38
  %94 = getelementptr inbounds i8, i8* %9, i64 %77
  store i8 %93, i8* %94, align 1
  %95 = add nuw nsw i64 %77, 1
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %69, label %76, !llvm.loop !173
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi32ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %69, %4
  %8 = phi i64 [ %75, %69 ], [ 0, %4 ]
  %9 = phi i8* [ %72, %69 ], [ %2, %4 ]
  %10 = phi i16* [ %70, %69 ], [ %5, %4 ]
  %11 = phi i32 [ %73, %69 ], [ 0, %4 ]
  %12 = phi i16* [ %71, %69 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 16
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 5
  %18 = add i64 %17, 32
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !174
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !177
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !179, !noalias !181
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !174
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !177
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !179, !noalias !181
  br label %69

68:                                               ; preds = %69
  ret void

69:                                               ; preds = %76, %30
  %70 = getelementptr inbounds i16, i16* %10, i64 16
  %71 = getelementptr inbounds i16, i16* %12, i64 16
  %72 = getelementptr inbounds i8, i8* %9, i64 %3
  %73 = add nuw nsw i32 %11, 1
  %74 = icmp eq i32 %73, 32
  %75 = add i64 %8, 1
  br i1 %74, label %68, label %7

76:                                               ; preds = %7, %76
  %77 = phi i64 [ %95, %76 ], [ 0, %7 ]
  %78 = getelementptr inbounds i16, i16* %10, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = getelementptr inbounds i16, i16* %12, i64 %77
  %82 = load i16, i16* %81, align 2
  %83 = sext i16 %82 to i32
  %84 = sub nsw i32 %80, %83
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 0, %84
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = add nuw nsw i32 %87, 8
  %89 = lshr i32 %88, 8
  %90 = icmp ult i32 %89, 26
  %91 = select i1 %90, i32 %89, i32 26
  %92 = trunc i32 %91 to i8
  %93 = sub nuw nsw i8 26, %92
  %94 = getelementptr inbounds i8, i8* %9, i64 %77
  store i8 %93, i8* %94, align 1
  %95 = add nuw nsw i64 %77, 1
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %69, label %76, !llvm.loop !182
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi64ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %69, %4
  %8 = phi i64 [ %75, %69 ], [ 0, %4 ]
  %9 = phi i8* [ %72, %69 ], [ %2, %4 ]
  %10 = phi i16* [ %70, %69 ], [ %5, %4 ]
  %11 = phi i32 [ %73, %69 ], [ 0, %4 ]
  %12 = phi i16* [ %71, %69 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 16
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 5
  %18 = add i64 %17, 32
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !183
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !186
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !188, !noalias !190
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !183
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !186
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !188, !noalias !190
  br label %69

68:                                               ; preds = %69
  ret void

69:                                               ; preds = %76, %30
  %70 = getelementptr inbounds i16, i16* %10, i64 16
  %71 = getelementptr inbounds i16, i16* %12, i64 16
  %72 = getelementptr inbounds i8, i8* %9, i64 %3
  %73 = add nuw nsw i32 %11, 1
  %74 = icmp eq i32 %73, 64
  %75 = add i64 %8, 1
  br i1 %74, label %68, label %7

76:                                               ; preds = %7, %76
  %77 = phi i64 [ %95, %76 ], [ 0, %7 ]
  %78 = getelementptr inbounds i16, i16* %10, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = getelementptr inbounds i16, i16* %12, i64 %77
  %82 = load i16, i16* %81, align 2
  %83 = sext i16 %82 to i32
  %84 = sub nsw i32 %80, %83
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 0, %84
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = add nuw nsw i32 %87, 8
  %89 = lshr i32 %88, 8
  %90 = icmp ult i32 %89, 26
  %91 = select i1 %90, i32 %89, i32 26
  %92 = trunc i32 %91 to i8
  %93 = add nuw nsw i8 %92, 38
  %94 = getelementptr inbounds i8, i8* %9, i64 %77
  store i8 %93, i8* %94, align 1
  %95 = add nuw nsw i64 %77, 1
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %69, label %76, !llvm.loop !191
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi64ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %69, %4
  %8 = phi i64 [ %75, %69 ], [ 0, %4 ]
  %9 = phi i8* [ %72, %69 ], [ %2, %4 ]
  %10 = phi i16* [ %70, %69 ], [ %5, %4 ]
  %11 = phi i32 [ %73, %69 ], [ 0, %4 ]
  %12 = phi i16* [ %71, %69 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 16
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 5
  %18 = add i64 %17, 32
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !192
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !195
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !197, !noalias !199
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !192
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !195
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !197, !noalias !199
  br label %69

68:                                               ; preds = %69
  ret void

69:                                               ; preds = %76, %30
  %70 = getelementptr inbounds i16, i16* %10, i64 16
  %71 = getelementptr inbounds i16, i16* %12, i64 16
  %72 = getelementptr inbounds i8, i8* %9, i64 %3
  %73 = add nuw nsw i32 %11, 1
  %74 = icmp eq i32 %73, 64
  %75 = add i64 %8, 1
  br i1 %74, label %68, label %7

76:                                               ; preds = %7, %76
  %77 = phi i64 [ %95, %76 ], [ 0, %7 ]
  %78 = getelementptr inbounds i16, i16* %10, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = getelementptr inbounds i16, i16* %12, i64 %77
  %82 = load i16, i16* %81, align 2
  %83 = sext i16 %82 to i32
  %84 = sub nsw i32 %80, %83
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 0, %84
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = add nuw nsw i32 %87, 8
  %89 = lshr i32 %88, 8
  %90 = icmp ult i32 %89, 26
  %91 = select i1 %90, i32 %89, i32 26
  %92 = trunc i32 %91 to i8
  %93 = sub nuw nsw i8 26, %92
  %94 = getelementptr inbounds i8, i8* %9, i64 %77
  store i8 %93, i8* %94, align 1
  %95 = add nuw nsw i64 %77, 1
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %69, label %76, !llvm.loop !200
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi8ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  %7 = getelementptr i8, i8* %2, i64 32
  %8 = getelementptr i8, i8* %0, i64 64
  %9 = getelementptr i8, i8* %1, i64 64
  %10 = icmp ugt i8* %8, %2
  %11 = icmp ugt i8* %7, %0
  %12 = and i1 %10, %11
  %13 = icmp ugt i8* %9, %2
  %14 = icmp ugt i8* %7, %1
  %15 = and i1 %13, %14
  %16 = or i1 %12, %15
  br i1 %16, label %190, label %17

17:                                               ; preds = %4
  %18 = bitcast i8* %0 to <8 x i16>*
  %19 = load <8 x i16>, <8 x i16>* %18, align 2, !alias.scope !201
  %20 = sext <8 x i16> %19 to <8 x i32>
  %21 = bitcast i8* %1 to <8 x i16>*
  %22 = load <8 x i16>, <8 x i16>* %21, align 2, !alias.scope !204
  %23 = sext <8 x i16> %22 to <8 x i32>
  %24 = sub nsw <8 x i32> %20, %23
  %25 = icmp slt <8 x i32> %24, zeroinitializer
  %26 = sub nsw <8 x i32> zeroinitializer, %24
  %27 = select <8 x i1> %25, <8 x i32> %26, <8 x i32> %24
  %28 = add nuw nsw <8 x i32> %27, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %29 = lshr <8 x i32> %28, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %30 = icmp ult <8 x i32> %29, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %31 = select <8 x i1> %30, <8 x i32> %29, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %32 = trunc <8 x i32> %31 to <8 x i8>
  %33 = add nuw nsw <8 x i8> %32, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %34 = bitcast i8* %2 to <8 x i8>*
  store <8 x i8> %33, <8 x i8>* %34, align 1, !alias.scope !206, !noalias !208
  %35 = getelementptr inbounds i8, i8* %0, i64 16
  %36 = bitcast i8* %35 to <8 x i16>*
  %37 = load <8 x i16>, <8 x i16>* %36, align 2, !alias.scope !201
  %38 = sext <8 x i16> %37 to <8 x i32>
  %39 = getelementptr inbounds i8, i8* %1, i64 16
  %40 = bitcast i8* %39 to <8 x i16>*
  %41 = load <8 x i16>, <8 x i16>* %40, align 2, !alias.scope !204
  %42 = sext <8 x i16> %41 to <8 x i32>
  %43 = sub nsw <8 x i32> %38, %42
  %44 = icmp slt <8 x i32> %43, zeroinitializer
  %45 = sub nsw <8 x i32> zeroinitializer, %43
  %46 = select <8 x i1> %44, <8 x i32> %45, <8 x i32> %43
  %47 = add nuw nsw <8 x i32> %46, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %48 = lshr <8 x i32> %47, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %49 = icmp ult <8 x i32> %48, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %50 = select <8 x i1> %49, <8 x i32> %48, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %51 = trunc <8 x i32> %50 to <8 x i8>
  %52 = add nuw nsw <8 x i8> %51, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %53 = getelementptr inbounds i8, i8* %2, i64 8
  %54 = bitcast i8* %53 to <8 x i8>*
  store <8 x i8> %52, <8 x i8>* %54, align 1, !alias.scope !206, !noalias !208
  %55 = getelementptr inbounds i8, i8* %0, i64 32
  %56 = bitcast i8* %55 to <8 x i16>*
  %57 = load <8 x i16>, <8 x i16>* %56, align 2, !alias.scope !201
  %58 = sext <8 x i16> %57 to <8 x i32>
  %59 = getelementptr inbounds i8, i8* %1, i64 32
  %60 = bitcast i8* %59 to <8 x i16>*
  %61 = load <8 x i16>, <8 x i16>* %60, align 2, !alias.scope !204
  %62 = sext <8 x i16> %61 to <8 x i32>
  %63 = sub nsw <8 x i32> %58, %62
  %64 = icmp slt <8 x i32> %63, zeroinitializer
  %65 = sub nsw <8 x i32> zeroinitializer, %63
  %66 = select <8 x i1> %64, <8 x i32> %65, <8 x i32> %63
  %67 = add nuw nsw <8 x i32> %66, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %68 = lshr <8 x i32> %67, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %69 = icmp ult <8 x i32> %68, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %70 = select <8 x i1> %69, <8 x i32> %68, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %71 = trunc <8 x i32> %70 to <8 x i8>
  %72 = add nuw nsw <8 x i8> %71, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %73 = getelementptr inbounds i8, i8* %2, i64 16
  %74 = bitcast i8* %73 to <8 x i8>*
  store <8 x i8> %72, <8 x i8>* %74, align 1, !alias.scope !206, !noalias !208
  %75 = getelementptr inbounds i8, i8* %0, i64 48
  %76 = bitcast i8* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !201
  %78 = sext <8 x i16> %77 to <8 x i32>
  %79 = getelementptr inbounds i8, i8* %1, i64 48
  %80 = bitcast i8* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !204
  %82 = sext <8 x i16> %81 to <8 x i32>
  %83 = sub nsw <8 x i32> %78, %82
  %84 = icmp slt <8 x i32> %83, zeroinitializer
  %85 = sub nsw <8 x i32> zeroinitializer, %83
  %86 = select <8 x i1> %84, <8 x i32> %85, <8 x i32> %83
  %87 = add nuw nsw <8 x i32> %86, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %88 = lshr <8 x i32> %87, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %89 = icmp ult <8 x i32> %88, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %90 = select <8 x i1> %89, <8 x i32> %88, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %91 = trunc <8 x i32> %90 to <8 x i8>
  %92 = add nuw nsw <8 x i8> %91, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %93 = getelementptr inbounds i8, i8* %2, i64 24
  %94 = bitcast i8* %93 to <8 x i8>*
  store <8 x i8> %92, <8 x i8>* %94, align 1, !alias.scope !206, !noalias !208
  br label %95

95:                                               ; preds = %190, %17
  %96 = getelementptr inbounds i8, i8* %0, i64 64
  %97 = bitcast i8* %96 to i16*
  %98 = getelementptr inbounds i8, i8* %1, i64 64
  %99 = bitcast i8* %98 to i16*
  %100 = getelementptr inbounds i8, i8* %2, i64 %3
  %101 = add i64 %3, 32
  %102 = getelementptr i8, i8* %2, i64 %101
  %103 = getelementptr i8, i8* %0, i64 128
  %104 = getelementptr i8, i8* %1, i64 128
  %105 = icmp ult i8* %100, %103
  %106 = icmp ult i8* %96, %102
  %107 = and i1 %105, %106
  %108 = icmp ult i8* %100, %104
  %109 = icmp ult i8* %98, %102
  %110 = and i1 %108, %109
  %111 = or i1 %107, %110
  br i1 %111, label %211, label %112

112:                                              ; preds = %95
  %113 = bitcast i8* %96 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !209
  %115 = sext <8 x i16> %114 to <8 x i32>
  %116 = bitcast i8* %98 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !212
  %118 = sext <8 x i16> %117 to <8 x i32>
  %119 = sub nsw <8 x i32> %115, %118
  %120 = icmp slt <8 x i32> %119, zeroinitializer
  %121 = sub nsw <8 x i32> zeroinitializer, %119
  %122 = select <8 x i1> %120, <8 x i32> %121, <8 x i32> %119
  %123 = add nuw nsw <8 x i32> %122, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %124 = lshr <8 x i32> %123, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %125 = icmp ult <8 x i32> %124, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %126 = select <8 x i1> %125, <8 x i32> %124, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %127 = trunc <8 x i32> %126 to <8 x i8>
  %128 = add nuw nsw <8 x i8> %127, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %129 = bitcast i8* %100 to <8 x i8>*
  store <8 x i8> %128, <8 x i8>* %129, align 1, !alias.scope !214, !noalias !216
  %130 = getelementptr inbounds i8, i8* %0, i64 80
  %131 = bitcast i8* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !209
  %133 = sext <8 x i16> %132 to <8 x i32>
  %134 = getelementptr inbounds i8, i8* %1, i64 80
  %135 = bitcast i8* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !212
  %137 = sext <8 x i16> %136 to <8 x i32>
  %138 = sub nsw <8 x i32> %133, %137
  %139 = icmp slt <8 x i32> %138, zeroinitializer
  %140 = sub nsw <8 x i32> zeroinitializer, %138
  %141 = select <8 x i1> %139, <8 x i32> %140, <8 x i32> %138
  %142 = add nuw nsw <8 x i32> %141, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %143 = lshr <8 x i32> %142, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %144 = icmp ult <8 x i32> %143, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %145 = select <8 x i1> %144, <8 x i32> %143, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %146 = trunc <8 x i32> %145 to <8 x i8>
  %147 = add nuw nsw <8 x i8> %146, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %148 = getelementptr inbounds i8, i8* %100, i64 8
  %149 = bitcast i8* %148 to <8 x i8>*
  store <8 x i8> %147, <8 x i8>* %149, align 1, !alias.scope !214, !noalias !216
  %150 = getelementptr inbounds i8, i8* %0, i64 96
  %151 = bitcast i8* %150 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !209
  %153 = sext <8 x i16> %152 to <8 x i32>
  %154 = getelementptr inbounds i8, i8* %1, i64 96
  %155 = bitcast i8* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !212
  %157 = sext <8 x i16> %156 to <8 x i32>
  %158 = sub nsw <8 x i32> %153, %157
  %159 = icmp slt <8 x i32> %158, zeroinitializer
  %160 = sub nsw <8 x i32> zeroinitializer, %158
  %161 = select <8 x i1> %159, <8 x i32> %160, <8 x i32> %158
  %162 = add nuw nsw <8 x i32> %161, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %163 = lshr <8 x i32> %162, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %164 = icmp ult <8 x i32> %163, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %165 = select <8 x i1> %164, <8 x i32> %163, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %166 = trunc <8 x i32> %165 to <8 x i8>
  %167 = add nuw nsw <8 x i8> %166, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %168 = getelementptr inbounds i8, i8* %100, i64 16
  %169 = bitcast i8* %168 to <8 x i8>*
  store <8 x i8> %167, <8 x i8>* %169, align 1, !alias.scope !214, !noalias !216
  %170 = getelementptr inbounds i8, i8* %0, i64 112
  %171 = bitcast i8* %170 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !209
  %173 = sext <8 x i16> %172 to <8 x i32>
  %174 = getelementptr inbounds i8, i8* %1, i64 112
  %175 = bitcast i8* %174 to <8 x i16>*
  %176 = load <8 x i16>, <8 x i16>* %175, align 2, !alias.scope !212
  %177 = sext <8 x i16> %176 to <8 x i32>
  %178 = sub nsw <8 x i32> %173, %177
  %179 = icmp slt <8 x i32> %178, zeroinitializer
  %180 = sub nsw <8 x i32> zeroinitializer, %178
  %181 = select <8 x i1> %179, <8 x i32> %180, <8 x i32> %178
  %182 = add nuw nsw <8 x i32> %181, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %183 = lshr <8 x i32> %182, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %184 = icmp ult <8 x i32> %183, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %185 = select <8 x i1> %184, <8 x i32> %183, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %186 = trunc <8 x i32> %185 to <8 x i8>
  %187 = add nuw nsw <8 x i8> %186, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %188 = getelementptr inbounds i8, i8* %100, i64 24
  %189 = bitcast i8* %188 to <8 x i8>*
  store <8 x i8> %187, <8 x i8>* %189, align 1, !alias.scope !214, !noalias !216
  br label %232

190:                                              ; preds = %4, %190
  %191 = phi i64 [ %209, %190 ], [ 0, %4 ]
  %192 = getelementptr inbounds i16, i16* %5, i64 %191
  %193 = load i16, i16* %192, align 2
  %194 = sext i16 %193 to i32
  %195 = getelementptr inbounds i16, i16* %6, i64 %191
  %196 = load i16, i16* %195, align 2
  %197 = sext i16 %196 to i32
  %198 = sub nsw i32 %194, %197
  %199 = icmp slt i32 %198, 0
  %200 = sub nsw i32 0, %198
  %201 = select i1 %199, i32 %200, i32 %198
  %202 = add nuw nsw i32 %201, 8
  %203 = lshr i32 %202, 8
  %204 = icmp ult i32 %203, 26
  %205 = select i1 %204, i32 %203, i32 26
  %206 = trunc i32 %205 to i8
  %207 = add nuw nsw i8 %206, 38
  %208 = getelementptr inbounds i8, i8* %2, i64 %191
  store i8 %207, i8* %208, align 1
  %209 = add nuw nsw i64 %191, 1
  %210 = icmp eq i64 %209, 32
  br i1 %210, label %95, label %190, !llvm.loop !217

211:                                              ; preds = %95, %211
  %212 = phi i64 [ %230, %211 ], [ 0, %95 ]
  %213 = getelementptr inbounds i16, i16* %97, i64 %212
  %214 = load i16, i16* %213, align 2
  %215 = sext i16 %214 to i32
  %216 = getelementptr inbounds i16, i16* %99, i64 %212
  %217 = load i16, i16* %216, align 2
  %218 = sext i16 %217 to i32
  %219 = sub nsw i32 %215, %218
  %220 = icmp slt i32 %219, 0
  %221 = sub nsw i32 0, %219
  %222 = select i1 %220, i32 %221, i32 %219
  %223 = add nuw nsw i32 %222, 8
  %224 = lshr i32 %223, 8
  %225 = icmp ult i32 %224, 26
  %226 = select i1 %225, i32 %224, i32 26
  %227 = trunc i32 %226 to i8
  %228 = add nuw nsw i8 %227, 38
  %229 = getelementptr inbounds i8, i8* %100, i64 %212
  store i8 %228, i8* %229, align 1
  %230 = add nuw nsw i64 %212, 1
  %231 = icmp eq i64 %230, 32
  br i1 %231, label %232, label %211, !llvm.loop !218

232:                                              ; preds = %211, %112
  %233 = getelementptr inbounds i8, i8* %0, i64 128
  %234 = bitcast i8* %233 to i16*
  %235 = getelementptr inbounds i8, i8* %1, i64 128
  %236 = bitcast i8* %235 to i16*
  %237 = getelementptr inbounds i8, i8* %100, i64 %3
  %238 = shl i64 %3, 1
  %239 = add i64 %238, 32
  %240 = getelementptr i8, i8* %2, i64 %239
  %241 = getelementptr i8, i8* %0, i64 192
  %242 = getelementptr i8, i8* %1, i64 192
  %243 = icmp ult i8* %237, %241
  %244 = icmp ult i8* %233, %240
  %245 = and i1 %243, %244
  %246 = icmp ult i8* %237, %242
  %247 = icmp ult i8* %235, %240
  %248 = and i1 %246, %247
  %249 = or i1 %245, %248
  br i1 %249, label %328, label %250

250:                                              ; preds = %232
  %251 = bitcast i8* %233 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !219
  %253 = sext <8 x i16> %252 to <8 x i32>
  %254 = bitcast i8* %235 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !222
  %256 = sext <8 x i16> %255 to <8 x i32>
  %257 = sub nsw <8 x i32> %253, %256
  %258 = icmp slt <8 x i32> %257, zeroinitializer
  %259 = sub nsw <8 x i32> zeroinitializer, %257
  %260 = select <8 x i1> %258, <8 x i32> %259, <8 x i32> %257
  %261 = add nuw nsw <8 x i32> %260, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %262 = lshr <8 x i32> %261, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %263 = icmp ult <8 x i32> %262, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %264 = select <8 x i1> %263, <8 x i32> %262, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %265 = trunc <8 x i32> %264 to <8 x i8>
  %266 = add nuw nsw <8 x i8> %265, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %267 = bitcast i8* %237 to <8 x i8>*
  store <8 x i8> %266, <8 x i8>* %267, align 1, !alias.scope !224, !noalias !226
  %268 = getelementptr inbounds i8, i8* %0, i64 144
  %269 = bitcast i8* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !219
  %271 = sext <8 x i16> %270 to <8 x i32>
  %272 = getelementptr inbounds i8, i8* %1, i64 144
  %273 = bitcast i8* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !222
  %275 = sext <8 x i16> %274 to <8 x i32>
  %276 = sub nsw <8 x i32> %271, %275
  %277 = icmp slt <8 x i32> %276, zeroinitializer
  %278 = sub nsw <8 x i32> zeroinitializer, %276
  %279 = select <8 x i1> %277, <8 x i32> %278, <8 x i32> %276
  %280 = add nuw nsw <8 x i32> %279, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %281 = lshr <8 x i32> %280, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %282 = icmp ult <8 x i32> %281, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %283 = select <8 x i1> %282, <8 x i32> %281, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %284 = trunc <8 x i32> %283 to <8 x i8>
  %285 = add nuw nsw <8 x i8> %284, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %286 = getelementptr inbounds i8, i8* %237, i64 8
  %287 = bitcast i8* %286 to <8 x i8>*
  store <8 x i8> %285, <8 x i8>* %287, align 1, !alias.scope !224, !noalias !226
  %288 = getelementptr inbounds i8, i8* %0, i64 160
  %289 = bitcast i8* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !219
  %291 = sext <8 x i16> %290 to <8 x i32>
  %292 = getelementptr inbounds i8, i8* %1, i64 160
  %293 = bitcast i8* %292 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !222
  %295 = sext <8 x i16> %294 to <8 x i32>
  %296 = sub nsw <8 x i32> %291, %295
  %297 = icmp slt <8 x i32> %296, zeroinitializer
  %298 = sub nsw <8 x i32> zeroinitializer, %296
  %299 = select <8 x i1> %297, <8 x i32> %298, <8 x i32> %296
  %300 = add nuw nsw <8 x i32> %299, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %301 = lshr <8 x i32> %300, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %302 = icmp ult <8 x i32> %301, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %303 = select <8 x i1> %302, <8 x i32> %301, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %304 = trunc <8 x i32> %303 to <8 x i8>
  %305 = add nuw nsw <8 x i8> %304, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %306 = getelementptr inbounds i8, i8* %237, i64 16
  %307 = bitcast i8* %306 to <8 x i8>*
  store <8 x i8> %305, <8 x i8>* %307, align 1, !alias.scope !224, !noalias !226
  %308 = getelementptr inbounds i8, i8* %0, i64 176
  %309 = bitcast i8* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !219
  %311 = sext <8 x i16> %310 to <8 x i32>
  %312 = getelementptr inbounds i8, i8* %1, i64 176
  %313 = bitcast i8* %312 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !222
  %315 = sext <8 x i16> %314 to <8 x i32>
  %316 = sub nsw <8 x i32> %311, %315
  %317 = icmp slt <8 x i32> %316, zeroinitializer
  %318 = sub nsw <8 x i32> zeroinitializer, %316
  %319 = select <8 x i1> %317, <8 x i32> %318, <8 x i32> %316
  %320 = add nuw nsw <8 x i32> %319, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %321 = lshr <8 x i32> %320, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %322 = icmp ult <8 x i32> %321, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %323 = select <8 x i1> %322, <8 x i32> %321, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %324 = trunc <8 x i32> %323 to <8 x i8>
  %325 = add nuw nsw <8 x i8> %324, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %326 = getelementptr inbounds i8, i8* %237, i64 24
  %327 = bitcast i8* %326 to <8 x i8>*
  store <8 x i8> %325, <8 x i8>* %327, align 1, !alias.scope !224, !noalias !226
  br label %349

328:                                              ; preds = %232, %328
  %329 = phi i64 [ %347, %328 ], [ 0, %232 ]
  %330 = getelementptr inbounds i16, i16* %234, i64 %329
  %331 = load i16, i16* %330, align 2
  %332 = sext i16 %331 to i32
  %333 = getelementptr inbounds i16, i16* %236, i64 %329
  %334 = load i16, i16* %333, align 2
  %335 = sext i16 %334 to i32
  %336 = sub nsw i32 %332, %335
  %337 = icmp slt i32 %336, 0
  %338 = sub nsw i32 0, %336
  %339 = select i1 %337, i32 %338, i32 %336
  %340 = add nuw nsw i32 %339, 8
  %341 = lshr i32 %340, 8
  %342 = icmp ult i32 %341, 26
  %343 = select i1 %342, i32 %341, i32 26
  %344 = trunc i32 %343 to i8
  %345 = add nuw nsw i8 %344, 38
  %346 = getelementptr inbounds i8, i8* %237, i64 %329
  store i8 %345, i8* %346, align 1
  %347 = add nuw nsw i64 %329, 1
  %348 = icmp eq i64 %347, 32
  br i1 %348, label %349, label %328, !llvm.loop !227

349:                                              ; preds = %328, %250
  %350 = getelementptr inbounds i8, i8* %0, i64 192
  %351 = bitcast i8* %350 to i16*
  %352 = getelementptr inbounds i8, i8* %1, i64 192
  %353 = bitcast i8* %352 to i16*
  %354 = getelementptr inbounds i8, i8* %237, i64 %3
  %355 = mul i64 %3, 3
  %356 = add i64 %355, 32
  %357 = getelementptr i8, i8* %2, i64 %356
  %358 = getelementptr i8, i8* %0, i64 256
  %359 = getelementptr i8, i8* %1, i64 256
  %360 = icmp ult i8* %354, %358
  %361 = icmp ult i8* %350, %357
  %362 = and i1 %360, %361
  %363 = icmp ult i8* %354, %359
  %364 = icmp ult i8* %352, %357
  %365 = and i1 %363, %364
  %366 = or i1 %362, %365
  br i1 %366, label %445, label %367

367:                                              ; preds = %349
  %368 = bitcast i8* %350 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !228
  %370 = sext <8 x i16> %369 to <8 x i32>
  %371 = bitcast i8* %352 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !231
  %373 = sext <8 x i16> %372 to <8 x i32>
  %374 = sub nsw <8 x i32> %370, %373
  %375 = icmp slt <8 x i32> %374, zeroinitializer
  %376 = sub nsw <8 x i32> zeroinitializer, %374
  %377 = select <8 x i1> %375, <8 x i32> %376, <8 x i32> %374
  %378 = add nuw nsw <8 x i32> %377, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %379 = lshr <8 x i32> %378, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %380 = icmp ult <8 x i32> %379, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %381 = select <8 x i1> %380, <8 x i32> %379, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %382 = trunc <8 x i32> %381 to <8 x i8>
  %383 = add nuw nsw <8 x i8> %382, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %384 = bitcast i8* %354 to <8 x i8>*
  store <8 x i8> %383, <8 x i8>* %384, align 1, !alias.scope !233, !noalias !235
  %385 = getelementptr inbounds i8, i8* %0, i64 208
  %386 = bitcast i8* %385 to <8 x i16>*
  %387 = load <8 x i16>, <8 x i16>* %386, align 2, !alias.scope !228
  %388 = sext <8 x i16> %387 to <8 x i32>
  %389 = getelementptr inbounds i8, i8* %1, i64 208
  %390 = bitcast i8* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !231
  %392 = sext <8 x i16> %391 to <8 x i32>
  %393 = sub nsw <8 x i32> %388, %392
  %394 = icmp slt <8 x i32> %393, zeroinitializer
  %395 = sub nsw <8 x i32> zeroinitializer, %393
  %396 = select <8 x i1> %394, <8 x i32> %395, <8 x i32> %393
  %397 = add nuw nsw <8 x i32> %396, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %398 = lshr <8 x i32> %397, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %399 = icmp ult <8 x i32> %398, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %400 = select <8 x i1> %399, <8 x i32> %398, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %401 = trunc <8 x i32> %400 to <8 x i8>
  %402 = add nuw nsw <8 x i8> %401, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %403 = getelementptr inbounds i8, i8* %354, i64 8
  %404 = bitcast i8* %403 to <8 x i8>*
  store <8 x i8> %402, <8 x i8>* %404, align 1, !alias.scope !233, !noalias !235
  %405 = getelementptr inbounds i8, i8* %0, i64 224
  %406 = bitcast i8* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !228
  %408 = sext <8 x i16> %407 to <8 x i32>
  %409 = getelementptr inbounds i8, i8* %1, i64 224
  %410 = bitcast i8* %409 to <8 x i16>*
  %411 = load <8 x i16>, <8 x i16>* %410, align 2, !alias.scope !231
  %412 = sext <8 x i16> %411 to <8 x i32>
  %413 = sub nsw <8 x i32> %408, %412
  %414 = icmp slt <8 x i32> %413, zeroinitializer
  %415 = sub nsw <8 x i32> zeroinitializer, %413
  %416 = select <8 x i1> %414, <8 x i32> %415, <8 x i32> %413
  %417 = add nuw nsw <8 x i32> %416, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %418 = lshr <8 x i32> %417, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %419 = icmp ult <8 x i32> %418, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %420 = select <8 x i1> %419, <8 x i32> %418, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %421 = trunc <8 x i32> %420 to <8 x i8>
  %422 = add nuw nsw <8 x i8> %421, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %423 = getelementptr inbounds i8, i8* %354, i64 16
  %424 = bitcast i8* %423 to <8 x i8>*
  store <8 x i8> %422, <8 x i8>* %424, align 1, !alias.scope !233, !noalias !235
  %425 = getelementptr inbounds i8, i8* %0, i64 240
  %426 = bitcast i8* %425 to <8 x i16>*
  %427 = load <8 x i16>, <8 x i16>* %426, align 2, !alias.scope !228
  %428 = sext <8 x i16> %427 to <8 x i32>
  %429 = getelementptr inbounds i8, i8* %1, i64 240
  %430 = bitcast i8* %429 to <8 x i16>*
  %431 = load <8 x i16>, <8 x i16>* %430, align 2, !alias.scope !231
  %432 = sext <8 x i16> %431 to <8 x i32>
  %433 = sub nsw <8 x i32> %428, %432
  %434 = icmp slt <8 x i32> %433, zeroinitializer
  %435 = sub nsw <8 x i32> zeroinitializer, %433
  %436 = select <8 x i1> %434, <8 x i32> %435, <8 x i32> %433
  %437 = add nuw nsw <8 x i32> %436, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %438 = lshr <8 x i32> %437, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %439 = icmp ult <8 x i32> %438, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %440 = select <8 x i1> %439, <8 x i32> %438, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %441 = trunc <8 x i32> %440 to <8 x i8>
  %442 = add nuw nsw <8 x i8> %441, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %443 = getelementptr inbounds i8, i8* %354, i64 24
  %444 = bitcast i8* %443 to <8 x i8>*
  store <8 x i8> %442, <8 x i8>* %444, align 1, !alias.scope !233, !noalias !235
  br label %466

445:                                              ; preds = %349, %445
  %446 = phi i64 [ %464, %445 ], [ 0, %349 ]
  %447 = getelementptr inbounds i16, i16* %351, i64 %446
  %448 = load i16, i16* %447, align 2
  %449 = sext i16 %448 to i32
  %450 = getelementptr inbounds i16, i16* %353, i64 %446
  %451 = load i16, i16* %450, align 2
  %452 = sext i16 %451 to i32
  %453 = sub nsw i32 %449, %452
  %454 = icmp slt i32 %453, 0
  %455 = sub nsw i32 0, %453
  %456 = select i1 %454, i32 %455, i32 %453
  %457 = add nuw nsw i32 %456, 8
  %458 = lshr i32 %457, 8
  %459 = icmp ult i32 %458, 26
  %460 = select i1 %459, i32 %458, i32 26
  %461 = trunc i32 %460 to i8
  %462 = add nuw nsw i8 %461, 38
  %463 = getelementptr inbounds i8, i8* %354, i64 %446
  store i8 %462, i8* %463, align 1
  %464 = add nuw nsw i64 %446, 1
  %465 = icmp eq i64 %464, 32
  br i1 %465, label %466, label %445, !llvm.loop !236

466:                                              ; preds = %445, %367
  %467 = getelementptr inbounds i8, i8* %0, i64 256
  %468 = bitcast i8* %467 to i16*
  %469 = getelementptr inbounds i8, i8* %1, i64 256
  %470 = bitcast i8* %469 to i16*
  %471 = getelementptr inbounds i8, i8* %354, i64 %3
  %472 = shl i64 %3, 2
  %473 = add i64 %472, 32
  %474 = getelementptr i8, i8* %2, i64 %473
  %475 = getelementptr i8, i8* %0, i64 320
  %476 = getelementptr i8, i8* %1, i64 320
  %477 = icmp ult i8* %471, %475
  %478 = icmp ult i8* %467, %474
  %479 = and i1 %477, %478
  %480 = icmp ult i8* %471, %476
  %481 = icmp ult i8* %469, %474
  %482 = and i1 %480, %481
  %483 = or i1 %479, %482
  br i1 %483, label %562, label %484

484:                                              ; preds = %466
  %485 = bitcast i8* %467 to <8 x i16>*
  %486 = load <8 x i16>, <8 x i16>* %485, align 2, !alias.scope !237
  %487 = sext <8 x i16> %486 to <8 x i32>
  %488 = bitcast i8* %469 to <8 x i16>*
  %489 = load <8 x i16>, <8 x i16>* %488, align 2, !alias.scope !240
  %490 = sext <8 x i16> %489 to <8 x i32>
  %491 = sub nsw <8 x i32> %487, %490
  %492 = icmp slt <8 x i32> %491, zeroinitializer
  %493 = sub nsw <8 x i32> zeroinitializer, %491
  %494 = select <8 x i1> %492, <8 x i32> %493, <8 x i32> %491
  %495 = add nuw nsw <8 x i32> %494, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %496 = lshr <8 x i32> %495, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %497 = icmp ult <8 x i32> %496, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %498 = select <8 x i1> %497, <8 x i32> %496, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %499 = trunc <8 x i32> %498 to <8 x i8>
  %500 = add nuw nsw <8 x i8> %499, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %501 = bitcast i8* %471 to <8 x i8>*
  store <8 x i8> %500, <8 x i8>* %501, align 1, !alias.scope !242, !noalias !244
  %502 = getelementptr inbounds i8, i8* %0, i64 272
  %503 = bitcast i8* %502 to <8 x i16>*
  %504 = load <8 x i16>, <8 x i16>* %503, align 2, !alias.scope !237
  %505 = sext <8 x i16> %504 to <8 x i32>
  %506 = getelementptr inbounds i8, i8* %1, i64 272
  %507 = bitcast i8* %506 to <8 x i16>*
  %508 = load <8 x i16>, <8 x i16>* %507, align 2, !alias.scope !240
  %509 = sext <8 x i16> %508 to <8 x i32>
  %510 = sub nsw <8 x i32> %505, %509
  %511 = icmp slt <8 x i32> %510, zeroinitializer
  %512 = sub nsw <8 x i32> zeroinitializer, %510
  %513 = select <8 x i1> %511, <8 x i32> %512, <8 x i32> %510
  %514 = add nuw nsw <8 x i32> %513, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %515 = lshr <8 x i32> %514, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %516 = icmp ult <8 x i32> %515, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %517 = select <8 x i1> %516, <8 x i32> %515, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %518 = trunc <8 x i32> %517 to <8 x i8>
  %519 = add nuw nsw <8 x i8> %518, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %520 = getelementptr inbounds i8, i8* %471, i64 8
  %521 = bitcast i8* %520 to <8 x i8>*
  store <8 x i8> %519, <8 x i8>* %521, align 1, !alias.scope !242, !noalias !244
  %522 = getelementptr inbounds i8, i8* %0, i64 288
  %523 = bitcast i8* %522 to <8 x i16>*
  %524 = load <8 x i16>, <8 x i16>* %523, align 2, !alias.scope !237
  %525 = sext <8 x i16> %524 to <8 x i32>
  %526 = getelementptr inbounds i8, i8* %1, i64 288
  %527 = bitcast i8* %526 to <8 x i16>*
  %528 = load <8 x i16>, <8 x i16>* %527, align 2, !alias.scope !240
  %529 = sext <8 x i16> %528 to <8 x i32>
  %530 = sub nsw <8 x i32> %525, %529
  %531 = icmp slt <8 x i32> %530, zeroinitializer
  %532 = sub nsw <8 x i32> zeroinitializer, %530
  %533 = select <8 x i1> %531, <8 x i32> %532, <8 x i32> %530
  %534 = add nuw nsw <8 x i32> %533, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %535 = lshr <8 x i32> %534, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %536 = icmp ult <8 x i32> %535, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %537 = select <8 x i1> %536, <8 x i32> %535, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %538 = trunc <8 x i32> %537 to <8 x i8>
  %539 = add nuw nsw <8 x i8> %538, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %540 = getelementptr inbounds i8, i8* %471, i64 16
  %541 = bitcast i8* %540 to <8 x i8>*
  store <8 x i8> %539, <8 x i8>* %541, align 1, !alias.scope !242, !noalias !244
  %542 = getelementptr inbounds i8, i8* %0, i64 304
  %543 = bitcast i8* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !237
  %545 = sext <8 x i16> %544 to <8 x i32>
  %546 = getelementptr inbounds i8, i8* %1, i64 304
  %547 = bitcast i8* %546 to <8 x i16>*
  %548 = load <8 x i16>, <8 x i16>* %547, align 2, !alias.scope !240
  %549 = sext <8 x i16> %548 to <8 x i32>
  %550 = sub nsw <8 x i32> %545, %549
  %551 = icmp slt <8 x i32> %550, zeroinitializer
  %552 = sub nsw <8 x i32> zeroinitializer, %550
  %553 = select <8 x i1> %551, <8 x i32> %552, <8 x i32> %550
  %554 = add nuw nsw <8 x i32> %553, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %555 = lshr <8 x i32> %554, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %556 = icmp ult <8 x i32> %555, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %557 = select <8 x i1> %556, <8 x i32> %555, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %558 = trunc <8 x i32> %557 to <8 x i8>
  %559 = add nuw nsw <8 x i8> %558, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %560 = getelementptr inbounds i8, i8* %471, i64 24
  %561 = bitcast i8* %560 to <8 x i8>*
  store <8 x i8> %559, <8 x i8>* %561, align 1, !alias.scope !242, !noalias !244
  br label %583

562:                                              ; preds = %466, %562
  %563 = phi i64 [ %581, %562 ], [ 0, %466 ]
  %564 = getelementptr inbounds i16, i16* %468, i64 %563
  %565 = load i16, i16* %564, align 2
  %566 = sext i16 %565 to i32
  %567 = getelementptr inbounds i16, i16* %470, i64 %563
  %568 = load i16, i16* %567, align 2
  %569 = sext i16 %568 to i32
  %570 = sub nsw i32 %566, %569
  %571 = icmp slt i32 %570, 0
  %572 = sub nsw i32 0, %570
  %573 = select i1 %571, i32 %572, i32 %570
  %574 = add nuw nsw i32 %573, 8
  %575 = lshr i32 %574, 8
  %576 = icmp ult i32 %575, 26
  %577 = select i1 %576, i32 %575, i32 26
  %578 = trunc i32 %577 to i8
  %579 = add nuw nsw i8 %578, 38
  %580 = getelementptr inbounds i8, i8* %471, i64 %563
  store i8 %579, i8* %580, align 1
  %581 = add nuw nsw i64 %563, 1
  %582 = icmp eq i64 %581, 32
  br i1 %582, label %583, label %562, !llvm.loop !245

583:                                              ; preds = %562, %484
  %584 = getelementptr inbounds i8, i8* %0, i64 320
  %585 = bitcast i8* %584 to i16*
  %586 = getelementptr inbounds i8, i8* %1, i64 320
  %587 = bitcast i8* %586 to i16*
  %588 = getelementptr inbounds i8, i8* %471, i64 %3
  %589 = mul i64 %3, 5
  %590 = add i64 %589, 32
  %591 = getelementptr i8, i8* %2, i64 %590
  %592 = getelementptr i8, i8* %0, i64 384
  %593 = getelementptr i8, i8* %1, i64 384
  %594 = icmp ult i8* %588, %592
  %595 = icmp ult i8* %584, %591
  %596 = and i1 %594, %595
  %597 = icmp ult i8* %588, %593
  %598 = icmp ult i8* %586, %591
  %599 = and i1 %597, %598
  %600 = or i1 %596, %599
  br i1 %600, label %679, label %601

601:                                              ; preds = %583
  %602 = bitcast i8* %584 to <8 x i16>*
  %603 = load <8 x i16>, <8 x i16>* %602, align 2, !alias.scope !246
  %604 = sext <8 x i16> %603 to <8 x i32>
  %605 = bitcast i8* %586 to <8 x i16>*
  %606 = load <8 x i16>, <8 x i16>* %605, align 2, !alias.scope !249
  %607 = sext <8 x i16> %606 to <8 x i32>
  %608 = sub nsw <8 x i32> %604, %607
  %609 = icmp slt <8 x i32> %608, zeroinitializer
  %610 = sub nsw <8 x i32> zeroinitializer, %608
  %611 = select <8 x i1> %609, <8 x i32> %610, <8 x i32> %608
  %612 = add nuw nsw <8 x i32> %611, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %613 = lshr <8 x i32> %612, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %614 = icmp ult <8 x i32> %613, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %615 = select <8 x i1> %614, <8 x i32> %613, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %616 = trunc <8 x i32> %615 to <8 x i8>
  %617 = add nuw nsw <8 x i8> %616, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %618 = bitcast i8* %588 to <8 x i8>*
  store <8 x i8> %617, <8 x i8>* %618, align 1, !alias.scope !251, !noalias !253
  %619 = getelementptr inbounds i8, i8* %0, i64 336
  %620 = bitcast i8* %619 to <8 x i16>*
  %621 = load <8 x i16>, <8 x i16>* %620, align 2, !alias.scope !246
  %622 = sext <8 x i16> %621 to <8 x i32>
  %623 = getelementptr inbounds i8, i8* %1, i64 336
  %624 = bitcast i8* %623 to <8 x i16>*
  %625 = load <8 x i16>, <8 x i16>* %624, align 2, !alias.scope !249
  %626 = sext <8 x i16> %625 to <8 x i32>
  %627 = sub nsw <8 x i32> %622, %626
  %628 = icmp slt <8 x i32> %627, zeroinitializer
  %629 = sub nsw <8 x i32> zeroinitializer, %627
  %630 = select <8 x i1> %628, <8 x i32> %629, <8 x i32> %627
  %631 = add nuw nsw <8 x i32> %630, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %632 = lshr <8 x i32> %631, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %633 = icmp ult <8 x i32> %632, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %634 = select <8 x i1> %633, <8 x i32> %632, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %635 = trunc <8 x i32> %634 to <8 x i8>
  %636 = add nuw nsw <8 x i8> %635, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %637 = getelementptr inbounds i8, i8* %588, i64 8
  %638 = bitcast i8* %637 to <8 x i8>*
  store <8 x i8> %636, <8 x i8>* %638, align 1, !alias.scope !251, !noalias !253
  %639 = getelementptr inbounds i8, i8* %0, i64 352
  %640 = bitcast i8* %639 to <8 x i16>*
  %641 = load <8 x i16>, <8 x i16>* %640, align 2, !alias.scope !246
  %642 = sext <8 x i16> %641 to <8 x i32>
  %643 = getelementptr inbounds i8, i8* %1, i64 352
  %644 = bitcast i8* %643 to <8 x i16>*
  %645 = load <8 x i16>, <8 x i16>* %644, align 2, !alias.scope !249
  %646 = sext <8 x i16> %645 to <8 x i32>
  %647 = sub nsw <8 x i32> %642, %646
  %648 = icmp slt <8 x i32> %647, zeroinitializer
  %649 = sub nsw <8 x i32> zeroinitializer, %647
  %650 = select <8 x i1> %648, <8 x i32> %649, <8 x i32> %647
  %651 = add nuw nsw <8 x i32> %650, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %652 = lshr <8 x i32> %651, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %653 = icmp ult <8 x i32> %652, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %654 = select <8 x i1> %653, <8 x i32> %652, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %655 = trunc <8 x i32> %654 to <8 x i8>
  %656 = add nuw nsw <8 x i8> %655, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %657 = getelementptr inbounds i8, i8* %588, i64 16
  %658 = bitcast i8* %657 to <8 x i8>*
  store <8 x i8> %656, <8 x i8>* %658, align 1, !alias.scope !251, !noalias !253
  %659 = getelementptr inbounds i8, i8* %0, i64 368
  %660 = bitcast i8* %659 to <8 x i16>*
  %661 = load <8 x i16>, <8 x i16>* %660, align 2, !alias.scope !246
  %662 = sext <8 x i16> %661 to <8 x i32>
  %663 = getelementptr inbounds i8, i8* %1, i64 368
  %664 = bitcast i8* %663 to <8 x i16>*
  %665 = load <8 x i16>, <8 x i16>* %664, align 2, !alias.scope !249
  %666 = sext <8 x i16> %665 to <8 x i32>
  %667 = sub nsw <8 x i32> %662, %666
  %668 = icmp slt <8 x i32> %667, zeroinitializer
  %669 = sub nsw <8 x i32> zeroinitializer, %667
  %670 = select <8 x i1> %668, <8 x i32> %669, <8 x i32> %667
  %671 = add nuw nsw <8 x i32> %670, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %672 = lshr <8 x i32> %671, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %673 = icmp ult <8 x i32> %672, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %674 = select <8 x i1> %673, <8 x i32> %672, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %675 = trunc <8 x i32> %674 to <8 x i8>
  %676 = add nuw nsw <8 x i8> %675, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %677 = getelementptr inbounds i8, i8* %588, i64 24
  %678 = bitcast i8* %677 to <8 x i8>*
  store <8 x i8> %676, <8 x i8>* %678, align 1, !alias.scope !251, !noalias !253
  br label %700

679:                                              ; preds = %583, %679
  %680 = phi i64 [ %698, %679 ], [ 0, %583 ]
  %681 = getelementptr inbounds i16, i16* %585, i64 %680
  %682 = load i16, i16* %681, align 2
  %683 = sext i16 %682 to i32
  %684 = getelementptr inbounds i16, i16* %587, i64 %680
  %685 = load i16, i16* %684, align 2
  %686 = sext i16 %685 to i32
  %687 = sub nsw i32 %683, %686
  %688 = icmp slt i32 %687, 0
  %689 = sub nsw i32 0, %687
  %690 = select i1 %688, i32 %689, i32 %687
  %691 = add nuw nsw i32 %690, 8
  %692 = lshr i32 %691, 8
  %693 = icmp ult i32 %692, 26
  %694 = select i1 %693, i32 %692, i32 26
  %695 = trunc i32 %694 to i8
  %696 = add nuw nsw i8 %695, 38
  %697 = getelementptr inbounds i8, i8* %588, i64 %680
  store i8 %696, i8* %697, align 1
  %698 = add nuw nsw i64 %680, 1
  %699 = icmp eq i64 %698, 32
  br i1 %699, label %700, label %679, !llvm.loop !254

700:                                              ; preds = %679, %601
  %701 = getelementptr inbounds i8, i8* %0, i64 384
  %702 = bitcast i8* %701 to i16*
  %703 = getelementptr inbounds i8, i8* %1, i64 384
  %704 = bitcast i8* %703 to i16*
  %705 = getelementptr inbounds i8, i8* %588, i64 %3
  %706 = mul i64 %3, 6
  %707 = add i64 %706, 32
  %708 = getelementptr i8, i8* %2, i64 %707
  %709 = getelementptr i8, i8* %0, i64 448
  %710 = getelementptr i8, i8* %1, i64 448
  %711 = icmp ult i8* %705, %709
  %712 = icmp ult i8* %701, %708
  %713 = and i1 %711, %712
  %714 = icmp ult i8* %705, %710
  %715 = icmp ult i8* %703, %708
  %716 = and i1 %714, %715
  %717 = or i1 %713, %716
  br i1 %717, label %796, label %718

718:                                              ; preds = %700
  %719 = bitcast i8* %701 to <8 x i16>*
  %720 = load <8 x i16>, <8 x i16>* %719, align 2, !alias.scope !255
  %721 = sext <8 x i16> %720 to <8 x i32>
  %722 = bitcast i8* %703 to <8 x i16>*
  %723 = load <8 x i16>, <8 x i16>* %722, align 2, !alias.scope !258
  %724 = sext <8 x i16> %723 to <8 x i32>
  %725 = sub nsw <8 x i32> %721, %724
  %726 = icmp slt <8 x i32> %725, zeroinitializer
  %727 = sub nsw <8 x i32> zeroinitializer, %725
  %728 = select <8 x i1> %726, <8 x i32> %727, <8 x i32> %725
  %729 = add nuw nsw <8 x i32> %728, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %730 = lshr <8 x i32> %729, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %731 = icmp ult <8 x i32> %730, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %732 = select <8 x i1> %731, <8 x i32> %730, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %733 = trunc <8 x i32> %732 to <8 x i8>
  %734 = add nuw nsw <8 x i8> %733, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %735 = bitcast i8* %705 to <8 x i8>*
  store <8 x i8> %734, <8 x i8>* %735, align 1, !alias.scope !260, !noalias !262
  %736 = getelementptr inbounds i8, i8* %0, i64 400
  %737 = bitcast i8* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !255
  %739 = sext <8 x i16> %738 to <8 x i32>
  %740 = getelementptr inbounds i8, i8* %1, i64 400
  %741 = bitcast i8* %740 to <8 x i16>*
  %742 = load <8 x i16>, <8 x i16>* %741, align 2, !alias.scope !258
  %743 = sext <8 x i16> %742 to <8 x i32>
  %744 = sub nsw <8 x i32> %739, %743
  %745 = icmp slt <8 x i32> %744, zeroinitializer
  %746 = sub nsw <8 x i32> zeroinitializer, %744
  %747 = select <8 x i1> %745, <8 x i32> %746, <8 x i32> %744
  %748 = add nuw nsw <8 x i32> %747, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %749 = lshr <8 x i32> %748, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %750 = icmp ult <8 x i32> %749, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %751 = select <8 x i1> %750, <8 x i32> %749, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %752 = trunc <8 x i32> %751 to <8 x i8>
  %753 = add nuw nsw <8 x i8> %752, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %754 = getelementptr inbounds i8, i8* %705, i64 8
  %755 = bitcast i8* %754 to <8 x i8>*
  store <8 x i8> %753, <8 x i8>* %755, align 1, !alias.scope !260, !noalias !262
  %756 = getelementptr inbounds i8, i8* %0, i64 416
  %757 = bitcast i8* %756 to <8 x i16>*
  %758 = load <8 x i16>, <8 x i16>* %757, align 2, !alias.scope !255
  %759 = sext <8 x i16> %758 to <8 x i32>
  %760 = getelementptr inbounds i8, i8* %1, i64 416
  %761 = bitcast i8* %760 to <8 x i16>*
  %762 = load <8 x i16>, <8 x i16>* %761, align 2, !alias.scope !258
  %763 = sext <8 x i16> %762 to <8 x i32>
  %764 = sub nsw <8 x i32> %759, %763
  %765 = icmp slt <8 x i32> %764, zeroinitializer
  %766 = sub nsw <8 x i32> zeroinitializer, %764
  %767 = select <8 x i1> %765, <8 x i32> %766, <8 x i32> %764
  %768 = add nuw nsw <8 x i32> %767, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %769 = lshr <8 x i32> %768, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %770 = icmp ult <8 x i32> %769, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %771 = select <8 x i1> %770, <8 x i32> %769, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %772 = trunc <8 x i32> %771 to <8 x i8>
  %773 = add nuw nsw <8 x i8> %772, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %774 = getelementptr inbounds i8, i8* %705, i64 16
  %775 = bitcast i8* %774 to <8 x i8>*
  store <8 x i8> %773, <8 x i8>* %775, align 1, !alias.scope !260, !noalias !262
  %776 = getelementptr inbounds i8, i8* %0, i64 432
  %777 = bitcast i8* %776 to <8 x i16>*
  %778 = load <8 x i16>, <8 x i16>* %777, align 2, !alias.scope !255
  %779 = sext <8 x i16> %778 to <8 x i32>
  %780 = getelementptr inbounds i8, i8* %1, i64 432
  %781 = bitcast i8* %780 to <8 x i16>*
  %782 = load <8 x i16>, <8 x i16>* %781, align 2, !alias.scope !258
  %783 = sext <8 x i16> %782 to <8 x i32>
  %784 = sub nsw <8 x i32> %779, %783
  %785 = icmp slt <8 x i32> %784, zeroinitializer
  %786 = sub nsw <8 x i32> zeroinitializer, %784
  %787 = select <8 x i1> %785, <8 x i32> %786, <8 x i32> %784
  %788 = add nuw nsw <8 x i32> %787, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %789 = lshr <8 x i32> %788, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %790 = icmp ult <8 x i32> %789, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %791 = select <8 x i1> %790, <8 x i32> %789, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %792 = trunc <8 x i32> %791 to <8 x i8>
  %793 = add nuw nsw <8 x i8> %792, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %794 = getelementptr inbounds i8, i8* %705, i64 24
  %795 = bitcast i8* %794 to <8 x i8>*
  store <8 x i8> %793, <8 x i8>* %795, align 1, !alias.scope !260, !noalias !262
  br label %817

796:                                              ; preds = %700, %796
  %797 = phi i64 [ %815, %796 ], [ 0, %700 ]
  %798 = getelementptr inbounds i16, i16* %702, i64 %797
  %799 = load i16, i16* %798, align 2
  %800 = sext i16 %799 to i32
  %801 = getelementptr inbounds i16, i16* %704, i64 %797
  %802 = load i16, i16* %801, align 2
  %803 = sext i16 %802 to i32
  %804 = sub nsw i32 %800, %803
  %805 = icmp slt i32 %804, 0
  %806 = sub nsw i32 0, %804
  %807 = select i1 %805, i32 %806, i32 %804
  %808 = add nuw nsw i32 %807, 8
  %809 = lshr i32 %808, 8
  %810 = icmp ult i32 %809, 26
  %811 = select i1 %810, i32 %809, i32 26
  %812 = trunc i32 %811 to i8
  %813 = add nuw nsw i8 %812, 38
  %814 = getelementptr inbounds i8, i8* %705, i64 %797
  store i8 %813, i8* %814, align 1
  %815 = add nuw nsw i64 %797, 1
  %816 = icmp eq i64 %815, 32
  br i1 %816, label %817, label %796, !llvm.loop !263

817:                                              ; preds = %796, %718
  %818 = getelementptr inbounds i8, i8* %0, i64 448
  %819 = bitcast i8* %818 to i16*
  %820 = getelementptr inbounds i8, i8* %1, i64 448
  %821 = bitcast i8* %820 to i16*
  %822 = getelementptr inbounds i8, i8* %705, i64 %3
  %823 = mul i64 %3, 7
  %824 = add i64 %823, 32
  %825 = getelementptr i8, i8* %2, i64 %824
  %826 = getelementptr i8, i8* %0, i64 512
  %827 = getelementptr i8, i8* %1, i64 512
  %828 = icmp ult i8* %822, %826
  %829 = icmp ult i8* %818, %825
  %830 = and i1 %828, %829
  %831 = icmp ult i8* %822, %827
  %832 = icmp ult i8* %820, %825
  %833 = and i1 %831, %832
  %834 = or i1 %830, %833
  br i1 %834, label %913, label %835

835:                                              ; preds = %817
  %836 = bitcast i8* %818 to <8 x i16>*
  %837 = load <8 x i16>, <8 x i16>* %836, align 2, !alias.scope !264
  %838 = sext <8 x i16> %837 to <8 x i32>
  %839 = bitcast i8* %820 to <8 x i16>*
  %840 = load <8 x i16>, <8 x i16>* %839, align 2, !alias.scope !267
  %841 = sext <8 x i16> %840 to <8 x i32>
  %842 = sub nsw <8 x i32> %838, %841
  %843 = icmp slt <8 x i32> %842, zeroinitializer
  %844 = sub nsw <8 x i32> zeroinitializer, %842
  %845 = select <8 x i1> %843, <8 x i32> %844, <8 x i32> %842
  %846 = add nuw nsw <8 x i32> %845, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %847 = lshr <8 x i32> %846, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %848 = icmp ult <8 x i32> %847, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %849 = select <8 x i1> %848, <8 x i32> %847, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %850 = trunc <8 x i32> %849 to <8 x i8>
  %851 = add nuw nsw <8 x i8> %850, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %852 = bitcast i8* %822 to <8 x i8>*
  store <8 x i8> %851, <8 x i8>* %852, align 1, !alias.scope !269, !noalias !271
  %853 = getelementptr inbounds i8, i8* %0, i64 464
  %854 = bitcast i8* %853 to <8 x i16>*
  %855 = load <8 x i16>, <8 x i16>* %854, align 2, !alias.scope !264
  %856 = sext <8 x i16> %855 to <8 x i32>
  %857 = getelementptr inbounds i8, i8* %1, i64 464
  %858 = bitcast i8* %857 to <8 x i16>*
  %859 = load <8 x i16>, <8 x i16>* %858, align 2, !alias.scope !267
  %860 = sext <8 x i16> %859 to <8 x i32>
  %861 = sub nsw <8 x i32> %856, %860
  %862 = icmp slt <8 x i32> %861, zeroinitializer
  %863 = sub nsw <8 x i32> zeroinitializer, %861
  %864 = select <8 x i1> %862, <8 x i32> %863, <8 x i32> %861
  %865 = add nuw nsw <8 x i32> %864, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %866 = lshr <8 x i32> %865, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %867 = icmp ult <8 x i32> %866, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %868 = select <8 x i1> %867, <8 x i32> %866, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %869 = trunc <8 x i32> %868 to <8 x i8>
  %870 = add nuw nsw <8 x i8> %869, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %871 = getelementptr inbounds i8, i8* %822, i64 8
  %872 = bitcast i8* %871 to <8 x i8>*
  store <8 x i8> %870, <8 x i8>* %872, align 1, !alias.scope !269, !noalias !271
  %873 = getelementptr inbounds i8, i8* %0, i64 480
  %874 = bitcast i8* %873 to <8 x i16>*
  %875 = load <8 x i16>, <8 x i16>* %874, align 2, !alias.scope !264
  %876 = sext <8 x i16> %875 to <8 x i32>
  %877 = getelementptr inbounds i8, i8* %1, i64 480
  %878 = bitcast i8* %877 to <8 x i16>*
  %879 = load <8 x i16>, <8 x i16>* %878, align 2, !alias.scope !267
  %880 = sext <8 x i16> %879 to <8 x i32>
  %881 = sub nsw <8 x i32> %876, %880
  %882 = icmp slt <8 x i32> %881, zeroinitializer
  %883 = sub nsw <8 x i32> zeroinitializer, %881
  %884 = select <8 x i1> %882, <8 x i32> %883, <8 x i32> %881
  %885 = add nuw nsw <8 x i32> %884, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %886 = lshr <8 x i32> %885, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %887 = icmp ult <8 x i32> %886, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %888 = select <8 x i1> %887, <8 x i32> %886, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %889 = trunc <8 x i32> %888 to <8 x i8>
  %890 = add nuw nsw <8 x i8> %889, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %891 = getelementptr inbounds i8, i8* %822, i64 16
  %892 = bitcast i8* %891 to <8 x i8>*
  store <8 x i8> %890, <8 x i8>* %892, align 1, !alias.scope !269, !noalias !271
  %893 = getelementptr inbounds i8, i8* %0, i64 496
  %894 = bitcast i8* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !264
  %896 = sext <8 x i16> %895 to <8 x i32>
  %897 = getelementptr inbounds i8, i8* %1, i64 496
  %898 = bitcast i8* %897 to <8 x i16>*
  %899 = load <8 x i16>, <8 x i16>* %898, align 2, !alias.scope !267
  %900 = sext <8 x i16> %899 to <8 x i32>
  %901 = sub nsw <8 x i32> %896, %900
  %902 = icmp slt <8 x i32> %901, zeroinitializer
  %903 = sub nsw <8 x i32> zeroinitializer, %901
  %904 = select <8 x i1> %902, <8 x i32> %903, <8 x i32> %901
  %905 = add nuw nsw <8 x i32> %904, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %906 = lshr <8 x i32> %905, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %907 = icmp ult <8 x i32> %906, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %908 = select <8 x i1> %907, <8 x i32> %906, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %909 = trunc <8 x i32> %908 to <8 x i8>
  %910 = add nuw nsw <8 x i8> %909, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %911 = getelementptr inbounds i8, i8* %822, i64 24
  %912 = bitcast i8* %911 to <8 x i8>*
  store <8 x i8> %910, <8 x i8>* %912, align 1, !alias.scope !269, !noalias !271
  br label %934

913:                                              ; preds = %817, %913
  %914 = phi i64 [ %932, %913 ], [ 0, %817 ]
  %915 = getelementptr inbounds i16, i16* %819, i64 %914
  %916 = load i16, i16* %915, align 2
  %917 = sext i16 %916 to i32
  %918 = getelementptr inbounds i16, i16* %821, i64 %914
  %919 = load i16, i16* %918, align 2
  %920 = sext i16 %919 to i32
  %921 = sub nsw i32 %917, %920
  %922 = icmp slt i32 %921, 0
  %923 = sub nsw i32 0, %921
  %924 = select i1 %922, i32 %923, i32 %921
  %925 = add nuw nsw i32 %924, 8
  %926 = lshr i32 %925, 8
  %927 = icmp ult i32 %926, 26
  %928 = select i1 %927, i32 %926, i32 26
  %929 = trunc i32 %928 to i8
  %930 = add nuw nsw i8 %929, 38
  %931 = getelementptr inbounds i8, i8* %822, i64 %914
  store i8 %930, i8* %931, align 1
  %932 = add nuw nsw i64 %914, 1
  %933 = icmp eq i64 %932, 32
  br i1 %933, label %934, label %913, !llvm.loop !272

934:                                              ; preds = %913, %835
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi8ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  %7 = getelementptr i8, i8* %2, i64 32
  %8 = getelementptr i8, i8* %0, i64 64
  %9 = getelementptr i8, i8* %1, i64 64
  %10 = icmp ugt i8* %8, %2
  %11 = icmp ugt i8* %7, %0
  %12 = and i1 %10, %11
  %13 = icmp ugt i8* %9, %2
  %14 = icmp ugt i8* %7, %1
  %15 = and i1 %13, %14
  %16 = or i1 %12, %15
  br i1 %16, label %190, label %17

17:                                               ; preds = %4
  %18 = bitcast i8* %0 to <8 x i16>*
  %19 = load <8 x i16>, <8 x i16>* %18, align 2, !alias.scope !273
  %20 = sext <8 x i16> %19 to <8 x i32>
  %21 = bitcast i8* %1 to <8 x i16>*
  %22 = load <8 x i16>, <8 x i16>* %21, align 2, !alias.scope !276
  %23 = sext <8 x i16> %22 to <8 x i32>
  %24 = sub nsw <8 x i32> %20, %23
  %25 = icmp slt <8 x i32> %24, zeroinitializer
  %26 = sub nsw <8 x i32> zeroinitializer, %24
  %27 = select <8 x i1> %25, <8 x i32> %26, <8 x i32> %24
  %28 = add nuw nsw <8 x i32> %27, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %29 = lshr <8 x i32> %28, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %30 = icmp ult <8 x i32> %29, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %31 = select <8 x i1> %30, <8 x i32> %29, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %32 = trunc <8 x i32> %31 to <8 x i8>
  %33 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %32
  %34 = bitcast i8* %2 to <8 x i8>*
  store <8 x i8> %33, <8 x i8>* %34, align 1, !alias.scope !278, !noalias !280
  %35 = getelementptr inbounds i8, i8* %0, i64 16
  %36 = bitcast i8* %35 to <8 x i16>*
  %37 = load <8 x i16>, <8 x i16>* %36, align 2, !alias.scope !273
  %38 = sext <8 x i16> %37 to <8 x i32>
  %39 = getelementptr inbounds i8, i8* %1, i64 16
  %40 = bitcast i8* %39 to <8 x i16>*
  %41 = load <8 x i16>, <8 x i16>* %40, align 2, !alias.scope !276
  %42 = sext <8 x i16> %41 to <8 x i32>
  %43 = sub nsw <8 x i32> %38, %42
  %44 = icmp slt <8 x i32> %43, zeroinitializer
  %45 = sub nsw <8 x i32> zeroinitializer, %43
  %46 = select <8 x i1> %44, <8 x i32> %45, <8 x i32> %43
  %47 = add nuw nsw <8 x i32> %46, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %48 = lshr <8 x i32> %47, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %49 = icmp ult <8 x i32> %48, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %50 = select <8 x i1> %49, <8 x i32> %48, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %51 = trunc <8 x i32> %50 to <8 x i8>
  %52 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %51
  %53 = getelementptr inbounds i8, i8* %2, i64 8
  %54 = bitcast i8* %53 to <8 x i8>*
  store <8 x i8> %52, <8 x i8>* %54, align 1, !alias.scope !278, !noalias !280
  %55 = getelementptr inbounds i8, i8* %0, i64 32
  %56 = bitcast i8* %55 to <8 x i16>*
  %57 = load <8 x i16>, <8 x i16>* %56, align 2, !alias.scope !273
  %58 = sext <8 x i16> %57 to <8 x i32>
  %59 = getelementptr inbounds i8, i8* %1, i64 32
  %60 = bitcast i8* %59 to <8 x i16>*
  %61 = load <8 x i16>, <8 x i16>* %60, align 2, !alias.scope !276
  %62 = sext <8 x i16> %61 to <8 x i32>
  %63 = sub nsw <8 x i32> %58, %62
  %64 = icmp slt <8 x i32> %63, zeroinitializer
  %65 = sub nsw <8 x i32> zeroinitializer, %63
  %66 = select <8 x i1> %64, <8 x i32> %65, <8 x i32> %63
  %67 = add nuw nsw <8 x i32> %66, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %68 = lshr <8 x i32> %67, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %69 = icmp ult <8 x i32> %68, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %70 = select <8 x i1> %69, <8 x i32> %68, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %71 = trunc <8 x i32> %70 to <8 x i8>
  %72 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %71
  %73 = getelementptr inbounds i8, i8* %2, i64 16
  %74 = bitcast i8* %73 to <8 x i8>*
  store <8 x i8> %72, <8 x i8>* %74, align 1, !alias.scope !278, !noalias !280
  %75 = getelementptr inbounds i8, i8* %0, i64 48
  %76 = bitcast i8* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !273
  %78 = sext <8 x i16> %77 to <8 x i32>
  %79 = getelementptr inbounds i8, i8* %1, i64 48
  %80 = bitcast i8* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !276
  %82 = sext <8 x i16> %81 to <8 x i32>
  %83 = sub nsw <8 x i32> %78, %82
  %84 = icmp slt <8 x i32> %83, zeroinitializer
  %85 = sub nsw <8 x i32> zeroinitializer, %83
  %86 = select <8 x i1> %84, <8 x i32> %85, <8 x i32> %83
  %87 = add nuw nsw <8 x i32> %86, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %88 = lshr <8 x i32> %87, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %89 = icmp ult <8 x i32> %88, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %90 = select <8 x i1> %89, <8 x i32> %88, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %91 = trunc <8 x i32> %90 to <8 x i8>
  %92 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %91
  %93 = getelementptr inbounds i8, i8* %2, i64 24
  %94 = bitcast i8* %93 to <8 x i8>*
  store <8 x i8> %92, <8 x i8>* %94, align 1, !alias.scope !278, !noalias !280
  br label %95

95:                                               ; preds = %190, %17
  %96 = getelementptr inbounds i8, i8* %0, i64 64
  %97 = bitcast i8* %96 to i16*
  %98 = getelementptr inbounds i8, i8* %1, i64 64
  %99 = bitcast i8* %98 to i16*
  %100 = getelementptr inbounds i8, i8* %2, i64 %3
  %101 = add i64 %3, 32
  %102 = getelementptr i8, i8* %2, i64 %101
  %103 = getelementptr i8, i8* %0, i64 128
  %104 = getelementptr i8, i8* %1, i64 128
  %105 = icmp ult i8* %100, %103
  %106 = icmp ult i8* %96, %102
  %107 = and i1 %105, %106
  %108 = icmp ult i8* %100, %104
  %109 = icmp ult i8* %98, %102
  %110 = and i1 %108, %109
  %111 = or i1 %107, %110
  br i1 %111, label %211, label %112

112:                                              ; preds = %95
  %113 = bitcast i8* %96 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !281
  %115 = sext <8 x i16> %114 to <8 x i32>
  %116 = bitcast i8* %98 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !284
  %118 = sext <8 x i16> %117 to <8 x i32>
  %119 = sub nsw <8 x i32> %115, %118
  %120 = icmp slt <8 x i32> %119, zeroinitializer
  %121 = sub nsw <8 x i32> zeroinitializer, %119
  %122 = select <8 x i1> %120, <8 x i32> %121, <8 x i32> %119
  %123 = add nuw nsw <8 x i32> %122, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %124 = lshr <8 x i32> %123, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %125 = icmp ult <8 x i32> %124, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %126 = select <8 x i1> %125, <8 x i32> %124, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %127 = trunc <8 x i32> %126 to <8 x i8>
  %128 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %127
  %129 = bitcast i8* %100 to <8 x i8>*
  store <8 x i8> %128, <8 x i8>* %129, align 1, !alias.scope !286, !noalias !288
  %130 = getelementptr inbounds i8, i8* %0, i64 80
  %131 = bitcast i8* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !281
  %133 = sext <8 x i16> %132 to <8 x i32>
  %134 = getelementptr inbounds i8, i8* %1, i64 80
  %135 = bitcast i8* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !284
  %137 = sext <8 x i16> %136 to <8 x i32>
  %138 = sub nsw <8 x i32> %133, %137
  %139 = icmp slt <8 x i32> %138, zeroinitializer
  %140 = sub nsw <8 x i32> zeroinitializer, %138
  %141 = select <8 x i1> %139, <8 x i32> %140, <8 x i32> %138
  %142 = add nuw nsw <8 x i32> %141, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %143 = lshr <8 x i32> %142, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %144 = icmp ult <8 x i32> %143, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %145 = select <8 x i1> %144, <8 x i32> %143, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %146 = trunc <8 x i32> %145 to <8 x i8>
  %147 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %146
  %148 = getelementptr inbounds i8, i8* %100, i64 8
  %149 = bitcast i8* %148 to <8 x i8>*
  store <8 x i8> %147, <8 x i8>* %149, align 1, !alias.scope !286, !noalias !288
  %150 = getelementptr inbounds i8, i8* %0, i64 96
  %151 = bitcast i8* %150 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !281
  %153 = sext <8 x i16> %152 to <8 x i32>
  %154 = getelementptr inbounds i8, i8* %1, i64 96
  %155 = bitcast i8* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !284
  %157 = sext <8 x i16> %156 to <8 x i32>
  %158 = sub nsw <8 x i32> %153, %157
  %159 = icmp slt <8 x i32> %158, zeroinitializer
  %160 = sub nsw <8 x i32> zeroinitializer, %158
  %161 = select <8 x i1> %159, <8 x i32> %160, <8 x i32> %158
  %162 = add nuw nsw <8 x i32> %161, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %163 = lshr <8 x i32> %162, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %164 = icmp ult <8 x i32> %163, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %165 = select <8 x i1> %164, <8 x i32> %163, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %166 = trunc <8 x i32> %165 to <8 x i8>
  %167 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %166
  %168 = getelementptr inbounds i8, i8* %100, i64 16
  %169 = bitcast i8* %168 to <8 x i8>*
  store <8 x i8> %167, <8 x i8>* %169, align 1, !alias.scope !286, !noalias !288
  %170 = getelementptr inbounds i8, i8* %0, i64 112
  %171 = bitcast i8* %170 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !281
  %173 = sext <8 x i16> %172 to <8 x i32>
  %174 = getelementptr inbounds i8, i8* %1, i64 112
  %175 = bitcast i8* %174 to <8 x i16>*
  %176 = load <8 x i16>, <8 x i16>* %175, align 2, !alias.scope !284
  %177 = sext <8 x i16> %176 to <8 x i32>
  %178 = sub nsw <8 x i32> %173, %177
  %179 = icmp slt <8 x i32> %178, zeroinitializer
  %180 = sub nsw <8 x i32> zeroinitializer, %178
  %181 = select <8 x i1> %179, <8 x i32> %180, <8 x i32> %178
  %182 = add nuw nsw <8 x i32> %181, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %183 = lshr <8 x i32> %182, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %184 = icmp ult <8 x i32> %183, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %185 = select <8 x i1> %184, <8 x i32> %183, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %186 = trunc <8 x i32> %185 to <8 x i8>
  %187 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %186
  %188 = getelementptr inbounds i8, i8* %100, i64 24
  %189 = bitcast i8* %188 to <8 x i8>*
  store <8 x i8> %187, <8 x i8>* %189, align 1, !alias.scope !286, !noalias !288
  br label %232

190:                                              ; preds = %4, %190
  %191 = phi i64 [ %209, %190 ], [ 0, %4 ]
  %192 = getelementptr inbounds i16, i16* %5, i64 %191
  %193 = load i16, i16* %192, align 2
  %194 = sext i16 %193 to i32
  %195 = getelementptr inbounds i16, i16* %6, i64 %191
  %196 = load i16, i16* %195, align 2
  %197 = sext i16 %196 to i32
  %198 = sub nsw i32 %194, %197
  %199 = icmp slt i32 %198, 0
  %200 = sub nsw i32 0, %198
  %201 = select i1 %199, i32 %200, i32 %198
  %202 = add nuw nsw i32 %201, 8
  %203 = lshr i32 %202, 8
  %204 = icmp ult i32 %203, 26
  %205 = select i1 %204, i32 %203, i32 26
  %206 = trunc i32 %205 to i8
  %207 = sub nuw nsw i8 26, %206
  %208 = getelementptr inbounds i8, i8* %2, i64 %191
  store i8 %207, i8* %208, align 1
  %209 = add nuw nsw i64 %191, 1
  %210 = icmp eq i64 %209, 32
  br i1 %210, label %95, label %190, !llvm.loop !289

211:                                              ; preds = %95, %211
  %212 = phi i64 [ %230, %211 ], [ 0, %95 ]
  %213 = getelementptr inbounds i16, i16* %97, i64 %212
  %214 = load i16, i16* %213, align 2
  %215 = sext i16 %214 to i32
  %216 = getelementptr inbounds i16, i16* %99, i64 %212
  %217 = load i16, i16* %216, align 2
  %218 = sext i16 %217 to i32
  %219 = sub nsw i32 %215, %218
  %220 = icmp slt i32 %219, 0
  %221 = sub nsw i32 0, %219
  %222 = select i1 %220, i32 %221, i32 %219
  %223 = add nuw nsw i32 %222, 8
  %224 = lshr i32 %223, 8
  %225 = icmp ult i32 %224, 26
  %226 = select i1 %225, i32 %224, i32 26
  %227 = trunc i32 %226 to i8
  %228 = sub nuw nsw i8 26, %227
  %229 = getelementptr inbounds i8, i8* %100, i64 %212
  store i8 %228, i8* %229, align 1
  %230 = add nuw nsw i64 %212, 1
  %231 = icmp eq i64 %230, 32
  br i1 %231, label %232, label %211, !llvm.loop !290

232:                                              ; preds = %211, %112
  %233 = getelementptr inbounds i8, i8* %0, i64 128
  %234 = bitcast i8* %233 to i16*
  %235 = getelementptr inbounds i8, i8* %1, i64 128
  %236 = bitcast i8* %235 to i16*
  %237 = getelementptr inbounds i8, i8* %100, i64 %3
  %238 = shl i64 %3, 1
  %239 = add i64 %238, 32
  %240 = getelementptr i8, i8* %2, i64 %239
  %241 = getelementptr i8, i8* %0, i64 192
  %242 = getelementptr i8, i8* %1, i64 192
  %243 = icmp ult i8* %237, %241
  %244 = icmp ult i8* %233, %240
  %245 = and i1 %243, %244
  %246 = icmp ult i8* %237, %242
  %247 = icmp ult i8* %235, %240
  %248 = and i1 %246, %247
  %249 = or i1 %245, %248
  br i1 %249, label %328, label %250

250:                                              ; preds = %232
  %251 = bitcast i8* %233 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !291
  %253 = sext <8 x i16> %252 to <8 x i32>
  %254 = bitcast i8* %235 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !294
  %256 = sext <8 x i16> %255 to <8 x i32>
  %257 = sub nsw <8 x i32> %253, %256
  %258 = icmp slt <8 x i32> %257, zeroinitializer
  %259 = sub nsw <8 x i32> zeroinitializer, %257
  %260 = select <8 x i1> %258, <8 x i32> %259, <8 x i32> %257
  %261 = add nuw nsw <8 x i32> %260, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %262 = lshr <8 x i32> %261, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %263 = icmp ult <8 x i32> %262, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %264 = select <8 x i1> %263, <8 x i32> %262, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %265 = trunc <8 x i32> %264 to <8 x i8>
  %266 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %265
  %267 = bitcast i8* %237 to <8 x i8>*
  store <8 x i8> %266, <8 x i8>* %267, align 1, !alias.scope !296, !noalias !298
  %268 = getelementptr inbounds i8, i8* %0, i64 144
  %269 = bitcast i8* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !291
  %271 = sext <8 x i16> %270 to <8 x i32>
  %272 = getelementptr inbounds i8, i8* %1, i64 144
  %273 = bitcast i8* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !294
  %275 = sext <8 x i16> %274 to <8 x i32>
  %276 = sub nsw <8 x i32> %271, %275
  %277 = icmp slt <8 x i32> %276, zeroinitializer
  %278 = sub nsw <8 x i32> zeroinitializer, %276
  %279 = select <8 x i1> %277, <8 x i32> %278, <8 x i32> %276
  %280 = add nuw nsw <8 x i32> %279, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %281 = lshr <8 x i32> %280, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %282 = icmp ult <8 x i32> %281, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %283 = select <8 x i1> %282, <8 x i32> %281, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %284 = trunc <8 x i32> %283 to <8 x i8>
  %285 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %284
  %286 = getelementptr inbounds i8, i8* %237, i64 8
  %287 = bitcast i8* %286 to <8 x i8>*
  store <8 x i8> %285, <8 x i8>* %287, align 1, !alias.scope !296, !noalias !298
  %288 = getelementptr inbounds i8, i8* %0, i64 160
  %289 = bitcast i8* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !291
  %291 = sext <8 x i16> %290 to <8 x i32>
  %292 = getelementptr inbounds i8, i8* %1, i64 160
  %293 = bitcast i8* %292 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !294
  %295 = sext <8 x i16> %294 to <8 x i32>
  %296 = sub nsw <8 x i32> %291, %295
  %297 = icmp slt <8 x i32> %296, zeroinitializer
  %298 = sub nsw <8 x i32> zeroinitializer, %296
  %299 = select <8 x i1> %297, <8 x i32> %298, <8 x i32> %296
  %300 = add nuw nsw <8 x i32> %299, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %301 = lshr <8 x i32> %300, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %302 = icmp ult <8 x i32> %301, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %303 = select <8 x i1> %302, <8 x i32> %301, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %304 = trunc <8 x i32> %303 to <8 x i8>
  %305 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %304
  %306 = getelementptr inbounds i8, i8* %237, i64 16
  %307 = bitcast i8* %306 to <8 x i8>*
  store <8 x i8> %305, <8 x i8>* %307, align 1, !alias.scope !296, !noalias !298
  %308 = getelementptr inbounds i8, i8* %0, i64 176
  %309 = bitcast i8* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !291
  %311 = sext <8 x i16> %310 to <8 x i32>
  %312 = getelementptr inbounds i8, i8* %1, i64 176
  %313 = bitcast i8* %312 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !294
  %315 = sext <8 x i16> %314 to <8 x i32>
  %316 = sub nsw <8 x i32> %311, %315
  %317 = icmp slt <8 x i32> %316, zeroinitializer
  %318 = sub nsw <8 x i32> zeroinitializer, %316
  %319 = select <8 x i1> %317, <8 x i32> %318, <8 x i32> %316
  %320 = add nuw nsw <8 x i32> %319, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %321 = lshr <8 x i32> %320, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %322 = icmp ult <8 x i32> %321, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %323 = select <8 x i1> %322, <8 x i32> %321, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %324 = trunc <8 x i32> %323 to <8 x i8>
  %325 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %324
  %326 = getelementptr inbounds i8, i8* %237, i64 24
  %327 = bitcast i8* %326 to <8 x i8>*
  store <8 x i8> %325, <8 x i8>* %327, align 1, !alias.scope !296, !noalias !298
  br label %349

328:                                              ; preds = %232, %328
  %329 = phi i64 [ %347, %328 ], [ 0, %232 ]
  %330 = getelementptr inbounds i16, i16* %234, i64 %329
  %331 = load i16, i16* %330, align 2
  %332 = sext i16 %331 to i32
  %333 = getelementptr inbounds i16, i16* %236, i64 %329
  %334 = load i16, i16* %333, align 2
  %335 = sext i16 %334 to i32
  %336 = sub nsw i32 %332, %335
  %337 = icmp slt i32 %336, 0
  %338 = sub nsw i32 0, %336
  %339 = select i1 %337, i32 %338, i32 %336
  %340 = add nuw nsw i32 %339, 8
  %341 = lshr i32 %340, 8
  %342 = icmp ult i32 %341, 26
  %343 = select i1 %342, i32 %341, i32 26
  %344 = trunc i32 %343 to i8
  %345 = sub nuw nsw i8 26, %344
  %346 = getelementptr inbounds i8, i8* %237, i64 %329
  store i8 %345, i8* %346, align 1
  %347 = add nuw nsw i64 %329, 1
  %348 = icmp eq i64 %347, 32
  br i1 %348, label %349, label %328, !llvm.loop !299

349:                                              ; preds = %328, %250
  %350 = getelementptr inbounds i8, i8* %0, i64 192
  %351 = bitcast i8* %350 to i16*
  %352 = getelementptr inbounds i8, i8* %1, i64 192
  %353 = bitcast i8* %352 to i16*
  %354 = getelementptr inbounds i8, i8* %237, i64 %3
  %355 = mul i64 %3, 3
  %356 = add i64 %355, 32
  %357 = getelementptr i8, i8* %2, i64 %356
  %358 = getelementptr i8, i8* %0, i64 256
  %359 = getelementptr i8, i8* %1, i64 256
  %360 = icmp ult i8* %354, %358
  %361 = icmp ult i8* %350, %357
  %362 = and i1 %360, %361
  %363 = icmp ult i8* %354, %359
  %364 = icmp ult i8* %352, %357
  %365 = and i1 %363, %364
  %366 = or i1 %362, %365
  br i1 %366, label %445, label %367

367:                                              ; preds = %349
  %368 = bitcast i8* %350 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !300
  %370 = sext <8 x i16> %369 to <8 x i32>
  %371 = bitcast i8* %352 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !303
  %373 = sext <8 x i16> %372 to <8 x i32>
  %374 = sub nsw <8 x i32> %370, %373
  %375 = icmp slt <8 x i32> %374, zeroinitializer
  %376 = sub nsw <8 x i32> zeroinitializer, %374
  %377 = select <8 x i1> %375, <8 x i32> %376, <8 x i32> %374
  %378 = add nuw nsw <8 x i32> %377, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %379 = lshr <8 x i32> %378, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %380 = icmp ult <8 x i32> %379, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %381 = select <8 x i1> %380, <8 x i32> %379, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %382 = trunc <8 x i32> %381 to <8 x i8>
  %383 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %382
  %384 = bitcast i8* %354 to <8 x i8>*
  store <8 x i8> %383, <8 x i8>* %384, align 1, !alias.scope !305, !noalias !307
  %385 = getelementptr inbounds i8, i8* %0, i64 208
  %386 = bitcast i8* %385 to <8 x i16>*
  %387 = load <8 x i16>, <8 x i16>* %386, align 2, !alias.scope !300
  %388 = sext <8 x i16> %387 to <8 x i32>
  %389 = getelementptr inbounds i8, i8* %1, i64 208
  %390 = bitcast i8* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !303
  %392 = sext <8 x i16> %391 to <8 x i32>
  %393 = sub nsw <8 x i32> %388, %392
  %394 = icmp slt <8 x i32> %393, zeroinitializer
  %395 = sub nsw <8 x i32> zeroinitializer, %393
  %396 = select <8 x i1> %394, <8 x i32> %395, <8 x i32> %393
  %397 = add nuw nsw <8 x i32> %396, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %398 = lshr <8 x i32> %397, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %399 = icmp ult <8 x i32> %398, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %400 = select <8 x i1> %399, <8 x i32> %398, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %401 = trunc <8 x i32> %400 to <8 x i8>
  %402 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %401
  %403 = getelementptr inbounds i8, i8* %354, i64 8
  %404 = bitcast i8* %403 to <8 x i8>*
  store <8 x i8> %402, <8 x i8>* %404, align 1, !alias.scope !305, !noalias !307
  %405 = getelementptr inbounds i8, i8* %0, i64 224
  %406 = bitcast i8* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !300
  %408 = sext <8 x i16> %407 to <8 x i32>
  %409 = getelementptr inbounds i8, i8* %1, i64 224
  %410 = bitcast i8* %409 to <8 x i16>*
  %411 = load <8 x i16>, <8 x i16>* %410, align 2, !alias.scope !303
  %412 = sext <8 x i16> %411 to <8 x i32>
  %413 = sub nsw <8 x i32> %408, %412
  %414 = icmp slt <8 x i32> %413, zeroinitializer
  %415 = sub nsw <8 x i32> zeroinitializer, %413
  %416 = select <8 x i1> %414, <8 x i32> %415, <8 x i32> %413
  %417 = add nuw nsw <8 x i32> %416, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %418 = lshr <8 x i32> %417, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %419 = icmp ult <8 x i32> %418, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %420 = select <8 x i1> %419, <8 x i32> %418, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %421 = trunc <8 x i32> %420 to <8 x i8>
  %422 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %421
  %423 = getelementptr inbounds i8, i8* %354, i64 16
  %424 = bitcast i8* %423 to <8 x i8>*
  store <8 x i8> %422, <8 x i8>* %424, align 1, !alias.scope !305, !noalias !307
  %425 = getelementptr inbounds i8, i8* %0, i64 240
  %426 = bitcast i8* %425 to <8 x i16>*
  %427 = load <8 x i16>, <8 x i16>* %426, align 2, !alias.scope !300
  %428 = sext <8 x i16> %427 to <8 x i32>
  %429 = getelementptr inbounds i8, i8* %1, i64 240
  %430 = bitcast i8* %429 to <8 x i16>*
  %431 = load <8 x i16>, <8 x i16>* %430, align 2, !alias.scope !303
  %432 = sext <8 x i16> %431 to <8 x i32>
  %433 = sub nsw <8 x i32> %428, %432
  %434 = icmp slt <8 x i32> %433, zeroinitializer
  %435 = sub nsw <8 x i32> zeroinitializer, %433
  %436 = select <8 x i1> %434, <8 x i32> %435, <8 x i32> %433
  %437 = add nuw nsw <8 x i32> %436, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %438 = lshr <8 x i32> %437, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %439 = icmp ult <8 x i32> %438, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %440 = select <8 x i1> %439, <8 x i32> %438, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %441 = trunc <8 x i32> %440 to <8 x i8>
  %442 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %441
  %443 = getelementptr inbounds i8, i8* %354, i64 24
  %444 = bitcast i8* %443 to <8 x i8>*
  store <8 x i8> %442, <8 x i8>* %444, align 1, !alias.scope !305, !noalias !307
  br label %466

445:                                              ; preds = %349, %445
  %446 = phi i64 [ %464, %445 ], [ 0, %349 ]
  %447 = getelementptr inbounds i16, i16* %351, i64 %446
  %448 = load i16, i16* %447, align 2
  %449 = sext i16 %448 to i32
  %450 = getelementptr inbounds i16, i16* %353, i64 %446
  %451 = load i16, i16* %450, align 2
  %452 = sext i16 %451 to i32
  %453 = sub nsw i32 %449, %452
  %454 = icmp slt i32 %453, 0
  %455 = sub nsw i32 0, %453
  %456 = select i1 %454, i32 %455, i32 %453
  %457 = add nuw nsw i32 %456, 8
  %458 = lshr i32 %457, 8
  %459 = icmp ult i32 %458, 26
  %460 = select i1 %459, i32 %458, i32 26
  %461 = trunc i32 %460 to i8
  %462 = sub nuw nsw i8 26, %461
  %463 = getelementptr inbounds i8, i8* %354, i64 %446
  store i8 %462, i8* %463, align 1
  %464 = add nuw nsw i64 %446, 1
  %465 = icmp eq i64 %464, 32
  br i1 %465, label %466, label %445, !llvm.loop !308

466:                                              ; preds = %445, %367
  %467 = getelementptr inbounds i8, i8* %0, i64 256
  %468 = bitcast i8* %467 to i16*
  %469 = getelementptr inbounds i8, i8* %1, i64 256
  %470 = bitcast i8* %469 to i16*
  %471 = getelementptr inbounds i8, i8* %354, i64 %3
  %472 = shl i64 %3, 2
  %473 = add i64 %472, 32
  %474 = getelementptr i8, i8* %2, i64 %473
  %475 = getelementptr i8, i8* %0, i64 320
  %476 = getelementptr i8, i8* %1, i64 320
  %477 = icmp ult i8* %471, %475
  %478 = icmp ult i8* %467, %474
  %479 = and i1 %477, %478
  %480 = icmp ult i8* %471, %476
  %481 = icmp ult i8* %469, %474
  %482 = and i1 %480, %481
  %483 = or i1 %479, %482
  br i1 %483, label %562, label %484

484:                                              ; preds = %466
  %485 = bitcast i8* %467 to <8 x i16>*
  %486 = load <8 x i16>, <8 x i16>* %485, align 2, !alias.scope !309
  %487 = sext <8 x i16> %486 to <8 x i32>
  %488 = bitcast i8* %469 to <8 x i16>*
  %489 = load <8 x i16>, <8 x i16>* %488, align 2, !alias.scope !312
  %490 = sext <8 x i16> %489 to <8 x i32>
  %491 = sub nsw <8 x i32> %487, %490
  %492 = icmp slt <8 x i32> %491, zeroinitializer
  %493 = sub nsw <8 x i32> zeroinitializer, %491
  %494 = select <8 x i1> %492, <8 x i32> %493, <8 x i32> %491
  %495 = add nuw nsw <8 x i32> %494, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %496 = lshr <8 x i32> %495, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %497 = icmp ult <8 x i32> %496, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %498 = select <8 x i1> %497, <8 x i32> %496, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %499 = trunc <8 x i32> %498 to <8 x i8>
  %500 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %499
  %501 = bitcast i8* %471 to <8 x i8>*
  store <8 x i8> %500, <8 x i8>* %501, align 1, !alias.scope !314, !noalias !316
  %502 = getelementptr inbounds i8, i8* %0, i64 272
  %503 = bitcast i8* %502 to <8 x i16>*
  %504 = load <8 x i16>, <8 x i16>* %503, align 2, !alias.scope !309
  %505 = sext <8 x i16> %504 to <8 x i32>
  %506 = getelementptr inbounds i8, i8* %1, i64 272
  %507 = bitcast i8* %506 to <8 x i16>*
  %508 = load <8 x i16>, <8 x i16>* %507, align 2, !alias.scope !312
  %509 = sext <8 x i16> %508 to <8 x i32>
  %510 = sub nsw <8 x i32> %505, %509
  %511 = icmp slt <8 x i32> %510, zeroinitializer
  %512 = sub nsw <8 x i32> zeroinitializer, %510
  %513 = select <8 x i1> %511, <8 x i32> %512, <8 x i32> %510
  %514 = add nuw nsw <8 x i32> %513, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %515 = lshr <8 x i32> %514, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %516 = icmp ult <8 x i32> %515, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %517 = select <8 x i1> %516, <8 x i32> %515, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %518 = trunc <8 x i32> %517 to <8 x i8>
  %519 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %518
  %520 = getelementptr inbounds i8, i8* %471, i64 8
  %521 = bitcast i8* %520 to <8 x i8>*
  store <8 x i8> %519, <8 x i8>* %521, align 1, !alias.scope !314, !noalias !316
  %522 = getelementptr inbounds i8, i8* %0, i64 288
  %523 = bitcast i8* %522 to <8 x i16>*
  %524 = load <8 x i16>, <8 x i16>* %523, align 2, !alias.scope !309
  %525 = sext <8 x i16> %524 to <8 x i32>
  %526 = getelementptr inbounds i8, i8* %1, i64 288
  %527 = bitcast i8* %526 to <8 x i16>*
  %528 = load <8 x i16>, <8 x i16>* %527, align 2, !alias.scope !312
  %529 = sext <8 x i16> %528 to <8 x i32>
  %530 = sub nsw <8 x i32> %525, %529
  %531 = icmp slt <8 x i32> %530, zeroinitializer
  %532 = sub nsw <8 x i32> zeroinitializer, %530
  %533 = select <8 x i1> %531, <8 x i32> %532, <8 x i32> %530
  %534 = add nuw nsw <8 x i32> %533, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %535 = lshr <8 x i32> %534, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %536 = icmp ult <8 x i32> %535, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %537 = select <8 x i1> %536, <8 x i32> %535, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %538 = trunc <8 x i32> %537 to <8 x i8>
  %539 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %538
  %540 = getelementptr inbounds i8, i8* %471, i64 16
  %541 = bitcast i8* %540 to <8 x i8>*
  store <8 x i8> %539, <8 x i8>* %541, align 1, !alias.scope !314, !noalias !316
  %542 = getelementptr inbounds i8, i8* %0, i64 304
  %543 = bitcast i8* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !309
  %545 = sext <8 x i16> %544 to <8 x i32>
  %546 = getelementptr inbounds i8, i8* %1, i64 304
  %547 = bitcast i8* %546 to <8 x i16>*
  %548 = load <8 x i16>, <8 x i16>* %547, align 2, !alias.scope !312
  %549 = sext <8 x i16> %548 to <8 x i32>
  %550 = sub nsw <8 x i32> %545, %549
  %551 = icmp slt <8 x i32> %550, zeroinitializer
  %552 = sub nsw <8 x i32> zeroinitializer, %550
  %553 = select <8 x i1> %551, <8 x i32> %552, <8 x i32> %550
  %554 = add nuw nsw <8 x i32> %553, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %555 = lshr <8 x i32> %554, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %556 = icmp ult <8 x i32> %555, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %557 = select <8 x i1> %556, <8 x i32> %555, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %558 = trunc <8 x i32> %557 to <8 x i8>
  %559 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %558
  %560 = getelementptr inbounds i8, i8* %471, i64 24
  %561 = bitcast i8* %560 to <8 x i8>*
  store <8 x i8> %559, <8 x i8>* %561, align 1, !alias.scope !314, !noalias !316
  br label %583

562:                                              ; preds = %466, %562
  %563 = phi i64 [ %581, %562 ], [ 0, %466 ]
  %564 = getelementptr inbounds i16, i16* %468, i64 %563
  %565 = load i16, i16* %564, align 2
  %566 = sext i16 %565 to i32
  %567 = getelementptr inbounds i16, i16* %470, i64 %563
  %568 = load i16, i16* %567, align 2
  %569 = sext i16 %568 to i32
  %570 = sub nsw i32 %566, %569
  %571 = icmp slt i32 %570, 0
  %572 = sub nsw i32 0, %570
  %573 = select i1 %571, i32 %572, i32 %570
  %574 = add nuw nsw i32 %573, 8
  %575 = lshr i32 %574, 8
  %576 = icmp ult i32 %575, 26
  %577 = select i1 %576, i32 %575, i32 26
  %578 = trunc i32 %577 to i8
  %579 = sub nuw nsw i8 26, %578
  %580 = getelementptr inbounds i8, i8* %471, i64 %563
  store i8 %579, i8* %580, align 1
  %581 = add nuw nsw i64 %563, 1
  %582 = icmp eq i64 %581, 32
  br i1 %582, label %583, label %562, !llvm.loop !317

583:                                              ; preds = %562, %484
  %584 = getelementptr inbounds i8, i8* %0, i64 320
  %585 = bitcast i8* %584 to i16*
  %586 = getelementptr inbounds i8, i8* %1, i64 320
  %587 = bitcast i8* %586 to i16*
  %588 = getelementptr inbounds i8, i8* %471, i64 %3
  %589 = mul i64 %3, 5
  %590 = add i64 %589, 32
  %591 = getelementptr i8, i8* %2, i64 %590
  %592 = getelementptr i8, i8* %0, i64 384
  %593 = getelementptr i8, i8* %1, i64 384
  %594 = icmp ult i8* %588, %592
  %595 = icmp ult i8* %584, %591
  %596 = and i1 %594, %595
  %597 = icmp ult i8* %588, %593
  %598 = icmp ult i8* %586, %591
  %599 = and i1 %597, %598
  %600 = or i1 %596, %599
  br i1 %600, label %679, label %601

601:                                              ; preds = %583
  %602 = bitcast i8* %584 to <8 x i16>*
  %603 = load <8 x i16>, <8 x i16>* %602, align 2, !alias.scope !318
  %604 = sext <8 x i16> %603 to <8 x i32>
  %605 = bitcast i8* %586 to <8 x i16>*
  %606 = load <8 x i16>, <8 x i16>* %605, align 2, !alias.scope !321
  %607 = sext <8 x i16> %606 to <8 x i32>
  %608 = sub nsw <8 x i32> %604, %607
  %609 = icmp slt <8 x i32> %608, zeroinitializer
  %610 = sub nsw <8 x i32> zeroinitializer, %608
  %611 = select <8 x i1> %609, <8 x i32> %610, <8 x i32> %608
  %612 = add nuw nsw <8 x i32> %611, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %613 = lshr <8 x i32> %612, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %614 = icmp ult <8 x i32> %613, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %615 = select <8 x i1> %614, <8 x i32> %613, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %616 = trunc <8 x i32> %615 to <8 x i8>
  %617 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %616
  %618 = bitcast i8* %588 to <8 x i8>*
  store <8 x i8> %617, <8 x i8>* %618, align 1, !alias.scope !323, !noalias !325
  %619 = getelementptr inbounds i8, i8* %0, i64 336
  %620 = bitcast i8* %619 to <8 x i16>*
  %621 = load <8 x i16>, <8 x i16>* %620, align 2, !alias.scope !318
  %622 = sext <8 x i16> %621 to <8 x i32>
  %623 = getelementptr inbounds i8, i8* %1, i64 336
  %624 = bitcast i8* %623 to <8 x i16>*
  %625 = load <8 x i16>, <8 x i16>* %624, align 2, !alias.scope !321
  %626 = sext <8 x i16> %625 to <8 x i32>
  %627 = sub nsw <8 x i32> %622, %626
  %628 = icmp slt <8 x i32> %627, zeroinitializer
  %629 = sub nsw <8 x i32> zeroinitializer, %627
  %630 = select <8 x i1> %628, <8 x i32> %629, <8 x i32> %627
  %631 = add nuw nsw <8 x i32> %630, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %632 = lshr <8 x i32> %631, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %633 = icmp ult <8 x i32> %632, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %634 = select <8 x i1> %633, <8 x i32> %632, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %635 = trunc <8 x i32> %634 to <8 x i8>
  %636 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %635
  %637 = getelementptr inbounds i8, i8* %588, i64 8
  %638 = bitcast i8* %637 to <8 x i8>*
  store <8 x i8> %636, <8 x i8>* %638, align 1, !alias.scope !323, !noalias !325
  %639 = getelementptr inbounds i8, i8* %0, i64 352
  %640 = bitcast i8* %639 to <8 x i16>*
  %641 = load <8 x i16>, <8 x i16>* %640, align 2, !alias.scope !318
  %642 = sext <8 x i16> %641 to <8 x i32>
  %643 = getelementptr inbounds i8, i8* %1, i64 352
  %644 = bitcast i8* %643 to <8 x i16>*
  %645 = load <8 x i16>, <8 x i16>* %644, align 2, !alias.scope !321
  %646 = sext <8 x i16> %645 to <8 x i32>
  %647 = sub nsw <8 x i32> %642, %646
  %648 = icmp slt <8 x i32> %647, zeroinitializer
  %649 = sub nsw <8 x i32> zeroinitializer, %647
  %650 = select <8 x i1> %648, <8 x i32> %649, <8 x i32> %647
  %651 = add nuw nsw <8 x i32> %650, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %652 = lshr <8 x i32> %651, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %653 = icmp ult <8 x i32> %652, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %654 = select <8 x i1> %653, <8 x i32> %652, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %655 = trunc <8 x i32> %654 to <8 x i8>
  %656 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %655
  %657 = getelementptr inbounds i8, i8* %588, i64 16
  %658 = bitcast i8* %657 to <8 x i8>*
  store <8 x i8> %656, <8 x i8>* %658, align 1, !alias.scope !323, !noalias !325
  %659 = getelementptr inbounds i8, i8* %0, i64 368
  %660 = bitcast i8* %659 to <8 x i16>*
  %661 = load <8 x i16>, <8 x i16>* %660, align 2, !alias.scope !318
  %662 = sext <8 x i16> %661 to <8 x i32>
  %663 = getelementptr inbounds i8, i8* %1, i64 368
  %664 = bitcast i8* %663 to <8 x i16>*
  %665 = load <8 x i16>, <8 x i16>* %664, align 2, !alias.scope !321
  %666 = sext <8 x i16> %665 to <8 x i32>
  %667 = sub nsw <8 x i32> %662, %666
  %668 = icmp slt <8 x i32> %667, zeroinitializer
  %669 = sub nsw <8 x i32> zeroinitializer, %667
  %670 = select <8 x i1> %668, <8 x i32> %669, <8 x i32> %667
  %671 = add nuw nsw <8 x i32> %670, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %672 = lshr <8 x i32> %671, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %673 = icmp ult <8 x i32> %672, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %674 = select <8 x i1> %673, <8 x i32> %672, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %675 = trunc <8 x i32> %674 to <8 x i8>
  %676 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %675
  %677 = getelementptr inbounds i8, i8* %588, i64 24
  %678 = bitcast i8* %677 to <8 x i8>*
  store <8 x i8> %676, <8 x i8>* %678, align 1, !alias.scope !323, !noalias !325
  br label %700

679:                                              ; preds = %583, %679
  %680 = phi i64 [ %698, %679 ], [ 0, %583 ]
  %681 = getelementptr inbounds i16, i16* %585, i64 %680
  %682 = load i16, i16* %681, align 2
  %683 = sext i16 %682 to i32
  %684 = getelementptr inbounds i16, i16* %587, i64 %680
  %685 = load i16, i16* %684, align 2
  %686 = sext i16 %685 to i32
  %687 = sub nsw i32 %683, %686
  %688 = icmp slt i32 %687, 0
  %689 = sub nsw i32 0, %687
  %690 = select i1 %688, i32 %689, i32 %687
  %691 = add nuw nsw i32 %690, 8
  %692 = lshr i32 %691, 8
  %693 = icmp ult i32 %692, 26
  %694 = select i1 %693, i32 %692, i32 26
  %695 = trunc i32 %694 to i8
  %696 = sub nuw nsw i8 26, %695
  %697 = getelementptr inbounds i8, i8* %588, i64 %680
  store i8 %696, i8* %697, align 1
  %698 = add nuw nsw i64 %680, 1
  %699 = icmp eq i64 %698, 32
  br i1 %699, label %700, label %679, !llvm.loop !326

700:                                              ; preds = %679, %601
  %701 = getelementptr inbounds i8, i8* %0, i64 384
  %702 = bitcast i8* %701 to i16*
  %703 = getelementptr inbounds i8, i8* %1, i64 384
  %704 = bitcast i8* %703 to i16*
  %705 = getelementptr inbounds i8, i8* %588, i64 %3
  %706 = mul i64 %3, 6
  %707 = add i64 %706, 32
  %708 = getelementptr i8, i8* %2, i64 %707
  %709 = getelementptr i8, i8* %0, i64 448
  %710 = getelementptr i8, i8* %1, i64 448
  %711 = icmp ult i8* %705, %709
  %712 = icmp ult i8* %701, %708
  %713 = and i1 %711, %712
  %714 = icmp ult i8* %705, %710
  %715 = icmp ult i8* %703, %708
  %716 = and i1 %714, %715
  %717 = or i1 %713, %716
  br i1 %717, label %796, label %718

718:                                              ; preds = %700
  %719 = bitcast i8* %701 to <8 x i16>*
  %720 = load <8 x i16>, <8 x i16>* %719, align 2, !alias.scope !327
  %721 = sext <8 x i16> %720 to <8 x i32>
  %722 = bitcast i8* %703 to <8 x i16>*
  %723 = load <8 x i16>, <8 x i16>* %722, align 2, !alias.scope !330
  %724 = sext <8 x i16> %723 to <8 x i32>
  %725 = sub nsw <8 x i32> %721, %724
  %726 = icmp slt <8 x i32> %725, zeroinitializer
  %727 = sub nsw <8 x i32> zeroinitializer, %725
  %728 = select <8 x i1> %726, <8 x i32> %727, <8 x i32> %725
  %729 = add nuw nsw <8 x i32> %728, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %730 = lshr <8 x i32> %729, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %731 = icmp ult <8 x i32> %730, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %732 = select <8 x i1> %731, <8 x i32> %730, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %733 = trunc <8 x i32> %732 to <8 x i8>
  %734 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %733
  %735 = bitcast i8* %705 to <8 x i8>*
  store <8 x i8> %734, <8 x i8>* %735, align 1, !alias.scope !332, !noalias !334
  %736 = getelementptr inbounds i8, i8* %0, i64 400
  %737 = bitcast i8* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !327
  %739 = sext <8 x i16> %738 to <8 x i32>
  %740 = getelementptr inbounds i8, i8* %1, i64 400
  %741 = bitcast i8* %740 to <8 x i16>*
  %742 = load <8 x i16>, <8 x i16>* %741, align 2, !alias.scope !330
  %743 = sext <8 x i16> %742 to <8 x i32>
  %744 = sub nsw <8 x i32> %739, %743
  %745 = icmp slt <8 x i32> %744, zeroinitializer
  %746 = sub nsw <8 x i32> zeroinitializer, %744
  %747 = select <8 x i1> %745, <8 x i32> %746, <8 x i32> %744
  %748 = add nuw nsw <8 x i32> %747, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %749 = lshr <8 x i32> %748, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %750 = icmp ult <8 x i32> %749, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %751 = select <8 x i1> %750, <8 x i32> %749, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %752 = trunc <8 x i32> %751 to <8 x i8>
  %753 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %752
  %754 = getelementptr inbounds i8, i8* %705, i64 8
  %755 = bitcast i8* %754 to <8 x i8>*
  store <8 x i8> %753, <8 x i8>* %755, align 1, !alias.scope !332, !noalias !334
  %756 = getelementptr inbounds i8, i8* %0, i64 416
  %757 = bitcast i8* %756 to <8 x i16>*
  %758 = load <8 x i16>, <8 x i16>* %757, align 2, !alias.scope !327
  %759 = sext <8 x i16> %758 to <8 x i32>
  %760 = getelementptr inbounds i8, i8* %1, i64 416
  %761 = bitcast i8* %760 to <8 x i16>*
  %762 = load <8 x i16>, <8 x i16>* %761, align 2, !alias.scope !330
  %763 = sext <8 x i16> %762 to <8 x i32>
  %764 = sub nsw <8 x i32> %759, %763
  %765 = icmp slt <8 x i32> %764, zeroinitializer
  %766 = sub nsw <8 x i32> zeroinitializer, %764
  %767 = select <8 x i1> %765, <8 x i32> %766, <8 x i32> %764
  %768 = add nuw nsw <8 x i32> %767, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %769 = lshr <8 x i32> %768, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %770 = icmp ult <8 x i32> %769, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %771 = select <8 x i1> %770, <8 x i32> %769, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %772 = trunc <8 x i32> %771 to <8 x i8>
  %773 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %772
  %774 = getelementptr inbounds i8, i8* %705, i64 16
  %775 = bitcast i8* %774 to <8 x i8>*
  store <8 x i8> %773, <8 x i8>* %775, align 1, !alias.scope !332, !noalias !334
  %776 = getelementptr inbounds i8, i8* %0, i64 432
  %777 = bitcast i8* %776 to <8 x i16>*
  %778 = load <8 x i16>, <8 x i16>* %777, align 2, !alias.scope !327
  %779 = sext <8 x i16> %778 to <8 x i32>
  %780 = getelementptr inbounds i8, i8* %1, i64 432
  %781 = bitcast i8* %780 to <8 x i16>*
  %782 = load <8 x i16>, <8 x i16>* %781, align 2, !alias.scope !330
  %783 = sext <8 x i16> %782 to <8 x i32>
  %784 = sub nsw <8 x i32> %779, %783
  %785 = icmp slt <8 x i32> %784, zeroinitializer
  %786 = sub nsw <8 x i32> zeroinitializer, %784
  %787 = select <8 x i1> %785, <8 x i32> %786, <8 x i32> %784
  %788 = add nuw nsw <8 x i32> %787, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %789 = lshr <8 x i32> %788, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %790 = icmp ult <8 x i32> %789, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %791 = select <8 x i1> %790, <8 x i32> %789, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %792 = trunc <8 x i32> %791 to <8 x i8>
  %793 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %792
  %794 = getelementptr inbounds i8, i8* %705, i64 24
  %795 = bitcast i8* %794 to <8 x i8>*
  store <8 x i8> %793, <8 x i8>* %795, align 1, !alias.scope !332, !noalias !334
  br label %817

796:                                              ; preds = %700, %796
  %797 = phi i64 [ %815, %796 ], [ 0, %700 ]
  %798 = getelementptr inbounds i16, i16* %702, i64 %797
  %799 = load i16, i16* %798, align 2
  %800 = sext i16 %799 to i32
  %801 = getelementptr inbounds i16, i16* %704, i64 %797
  %802 = load i16, i16* %801, align 2
  %803 = sext i16 %802 to i32
  %804 = sub nsw i32 %800, %803
  %805 = icmp slt i32 %804, 0
  %806 = sub nsw i32 0, %804
  %807 = select i1 %805, i32 %806, i32 %804
  %808 = add nuw nsw i32 %807, 8
  %809 = lshr i32 %808, 8
  %810 = icmp ult i32 %809, 26
  %811 = select i1 %810, i32 %809, i32 26
  %812 = trunc i32 %811 to i8
  %813 = sub nuw nsw i8 26, %812
  %814 = getelementptr inbounds i8, i8* %705, i64 %797
  store i8 %813, i8* %814, align 1
  %815 = add nuw nsw i64 %797, 1
  %816 = icmp eq i64 %815, 32
  br i1 %816, label %817, label %796, !llvm.loop !335

817:                                              ; preds = %796, %718
  %818 = getelementptr inbounds i8, i8* %0, i64 448
  %819 = bitcast i8* %818 to i16*
  %820 = getelementptr inbounds i8, i8* %1, i64 448
  %821 = bitcast i8* %820 to i16*
  %822 = getelementptr inbounds i8, i8* %705, i64 %3
  %823 = mul i64 %3, 7
  %824 = add i64 %823, 32
  %825 = getelementptr i8, i8* %2, i64 %824
  %826 = getelementptr i8, i8* %0, i64 512
  %827 = getelementptr i8, i8* %1, i64 512
  %828 = icmp ult i8* %822, %826
  %829 = icmp ult i8* %818, %825
  %830 = and i1 %828, %829
  %831 = icmp ult i8* %822, %827
  %832 = icmp ult i8* %820, %825
  %833 = and i1 %831, %832
  %834 = or i1 %830, %833
  br i1 %834, label %913, label %835

835:                                              ; preds = %817
  %836 = bitcast i8* %818 to <8 x i16>*
  %837 = load <8 x i16>, <8 x i16>* %836, align 2, !alias.scope !336
  %838 = sext <8 x i16> %837 to <8 x i32>
  %839 = bitcast i8* %820 to <8 x i16>*
  %840 = load <8 x i16>, <8 x i16>* %839, align 2, !alias.scope !339
  %841 = sext <8 x i16> %840 to <8 x i32>
  %842 = sub nsw <8 x i32> %838, %841
  %843 = icmp slt <8 x i32> %842, zeroinitializer
  %844 = sub nsw <8 x i32> zeroinitializer, %842
  %845 = select <8 x i1> %843, <8 x i32> %844, <8 x i32> %842
  %846 = add nuw nsw <8 x i32> %845, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %847 = lshr <8 x i32> %846, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %848 = icmp ult <8 x i32> %847, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %849 = select <8 x i1> %848, <8 x i32> %847, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %850 = trunc <8 x i32> %849 to <8 x i8>
  %851 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %850
  %852 = bitcast i8* %822 to <8 x i8>*
  store <8 x i8> %851, <8 x i8>* %852, align 1, !alias.scope !341, !noalias !343
  %853 = getelementptr inbounds i8, i8* %0, i64 464
  %854 = bitcast i8* %853 to <8 x i16>*
  %855 = load <8 x i16>, <8 x i16>* %854, align 2, !alias.scope !336
  %856 = sext <8 x i16> %855 to <8 x i32>
  %857 = getelementptr inbounds i8, i8* %1, i64 464
  %858 = bitcast i8* %857 to <8 x i16>*
  %859 = load <8 x i16>, <8 x i16>* %858, align 2, !alias.scope !339
  %860 = sext <8 x i16> %859 to <8 x i32>
  %861 = sub nsw <8 x i32> %856, %860
  %862 = icmp slt <8 x i32> %861, zeroinitializer
  %863 = sub nsw <8 x i32> zeroinitializer, %861
  %864 = select <8 x i1> %862, <8 x i32> %863, <8 x i32> %861
  %865 = add nuw nsw <8 x i32> %864, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %866 = lshr <8 x i32> %865, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %867 = icmp ult <8 x i32> %866, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %868 = select <8 x i1> %867, <8 x i32> %866, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %869 = trunc <8 x i32> %868 to <8 x i8>
  %870 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %869
  %871 = getelementptr inbounds i8, i8* %822, i64 8
  %872 = bitcast i8* %871 to <8 x i8>*
  store <8 x i8> %870, <8 x i8>* %872, align 1, !alias.scope !341, !noalias !343
  %873 = getelementptr inbounds i8, i8* %0, i64 480
  %874 = bitcast i8* %873 to <8 x i16>*
  %875 = load <8 x i16>, <8 x i16>* %874, align 2, !alias.scope !336
  %876 = sext <8 x i16> %875 to <8 x i32>
  %877 = getelementptr inbounds i8, i8* %1, i64 480
  %878 = bitcast i8* %877 to <8 x i16>*
  %879 = load <8 x i16>, <8 x i16>* %878, align 2, !alias.scope !339
  %880 = sext <8 x i16> %879 to <8 x i32>
  %881 = sub nsw <8 x i32> %876, %880
  %882 = icmp slt <8 x i32> %881, zeroinitializer
  %883 = sub nsw <8 x i32> zeroinitializer, %881
  %884 = select <8 x i1> %882, <8 x i32> %883, <8 x i32> %881
  %885 = add nuw nsw <8 x i32> %884, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %886 = lshr <8 x i32> %885, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %887 = icmp ult <8 x i32> %886, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %888 = select <8 x i1> %887, <8 x i32> %886, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %889 = trunc <8 x i32> %888 to <8 x i8>
  %890 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %889
  %891 = getelementptr inbounds i8, i8* %822, i64 16
  %892 = bitcast i8* %891 to <8 x i8>*
  store <8 x i8> %890, <8 x i8>* %892, align 1, !alias.scope !341, !noalias !343
  %893 = getelementptr inbounds i8, i8* %0, i64 496
  %894 = bitcast i8* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !336
  %896 = sext <8 x i16> %895 to <8 x i32>
  %897 = getelementptr inbounds i8, i8* %1, i64 496
  %898 = bitcast i8* %897 to <8 x i16>*
  %899 = load <8 x i16>, <8 x i16>* %898, align 2, !alias.scope !339
  %900 = sext <8 x i16> %899 to <8 x i32>
  %901 = sub nsw <8 x i32> %896, %900
  %902 = icmp slt <8 x i32> %901, zeroinitializer
  %903 = sub nsw <8 x i32> zeroinitializer, %901
  %904 = select <8 x i1> %902, <8 x i32> %903, <8 x i32> %901
  %905 = add nuw nsw <8 x i32> %904, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %906 = lshr <8 x i32> %905, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %907 = icmp ult <8 x i32> %906, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %908 = select <8 x i1> %907, <8 x i32> %906, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %909 = trunc <8 x i32> %908 to <8 x i8>
  %910 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %909
  %911 = getelementptr inbounds i8, i8* %822, i64 24
  %912 = bitcast i8* %911 to <8 x i8>*
  store <8 x i8> %910, <8 x i8>* %912, align 1, !alias.scope !341, !noalias !343
  br label %934

913:                                              ; preds = %817, %913
  %914 = phi i64 [ %932, %913 ], [ 0, %817 ]
  %915 = getelementptr inbounds i16, i16* %819, i64 %914
  %916 = load i16, i16* %915, align 2
  %917 = sext i16 %916 to i32
  %918 = getelementptr inbounds i16, i16* %821, i64 %914
  %919 = load i16, i16* %918, align 2
  %920 = sext i16 %919 to i32
  %921 = sub nsw i32 %917, %920
  %922 = icmp slt i32 %921, 0
  %923 = sub nsw i32 0, %921
  %924 = select i1 %922, i32 %923, i32 %921
  %925 = add nuw nsw i32 %924, 8
  %926 = lshr i32 %925, 8
  %927 = icmp ult i32 %926, 26
  %928 = select i1 %927, i32 %926, i32 26
  %929 = trunc i32 %928 to i8
  %930 = sub nuw nsw i8 26, %929
  %931 = getelementptr inbounds i8, i8* %822, i64 %914
  store i8 %930, i8* %931, align 1
  %932 = add nuw nsw i64 %914, 1
  %933 = icmp eq i64 %932, 32
  br i1 %933, label %934, label %913, !llvm.loop !344

934:                                              ; preds = %913, %835
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi16ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %109, %4
  %8 = phi i64 [ %115, %109 ], [ 0, %4 ]
  %9 = phi i8* [ %112, %109 ], [ %2, %4 ]
  %10 = phi i16* [ %110, %109 ], [ %5, %4 ]
  %11 = phi i32 [ %113, %109 ], [ 0, %4 ]
  %12 = phi i16* [ %111, %109 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 32
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 6
  %18 = add i64 %17, 64
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %116, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !345
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !348
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !350, !noalias !352
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !345
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !348
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !350, !noalias !352
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !345
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !348
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !350, !noalias !352
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !345
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !348
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !350, !noalias !352
  br label %109

108:                                              ; preds = %109
  ret void

109:                                              ; preds = %116, %30
  %110 = getelementptr inbounds i16, i16* %10, i64 32
  %111 = getelementptr inbounds i16, i16* %12, i64 32
  %112 = getelementptr inbounds i8, i8* %9, i64 %3
  %113 = add nuw nsw i32 %11, 1
  %114 = icmp eq i32 %113, 16
  %115 = add i64 %8, 1
  br i1 %114, label %108, label %7

116:                                              ; preds = %7, %116
  %117 = phi i64 [ %135, %116 ], [ 0, %7 ]
  %118 = getelementptr inbounds i16, i16* %10, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = sext i16 %119 to i32
  %121 = getelementptr inbounds i16, i16* %12, i64 %117
  %122 = load i16, i16* %121, align 2
  %123 = sext i16 %122 to i32
  %124 = sub nsw i32 %120, %123
  %125 = icmp slt i32 %124, 0
  %126 = sub nsw i32 0, %124
  %127 = select i1 %125, i32 %126, i32 %124
  %128 = add nuw nsw i32 %127, 8
  %129 = lshr i32 %128, 8
  %130 = icmp ult i32 %129, 26
  %131 = select i1 %130, i32 %129, i32 26
  %132 = trunc i32 %131 to i8
  %133 = add nuw nsw i8 %132, 38
  %134 = getelementptr inbounds i8, i8* %9, i64 %117
  store i8 %133, i8* %134, align 1
  %135 = add nuw nsw i64 %117, 1
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %109, label %116, !llvm.loop !353
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi16ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %109, %4
  %8 = phi i64 [ %115, %109 ], [ 0, %4 ]
  %9 = phi i8* [ %112, %109 ], [ %2, %4 ]
  %10 = phi i16* [ %110, %109 ], [ %5, %4 ]
  %11 = phi i32 [ %113, %109 ], [ 0, %4 ]
  %12 = phi i16* [ %111, %109 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 32
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 6
  %18 = add i64 %17, 64
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %116, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !354
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !357
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !359, !noalias !361
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !354
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !357
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !359, !noalias !361
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !354
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !357
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !359, !noalias !361
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !354
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !357
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !359, !noalias !361
  br label %109

108:                                              ; preds = %109
  ret void

109:                                              ; preds = %116, %30
  %110 = getelementptr inbounds i16, i16* %10, i64 32
  %111 = getelementptr inbounds i16, i16* %12, i64 32
  %112 = getelementptr inbounds i8, i8* %9, i64 %3
  %113 = add nuw nsw i32 %11, 1
  %114 = icmp eq i32 %113, 16
  %115 = add i64 %8, 1
  br i1 %114, label %108, label %7

116:                                              ; preds = %7, %116
  %117 = phi i64 [ %135, %116 ], [ 0, %7 ]
  %118 = getelementptr inbounds i16, i16* %10, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = sext i16 %119 to i32
  %121 = getelementptr inbounds i16, i16* %12, i64 %117
  %122 = load i16, i16* %121, align 2
  %123 = sext i16 %122 to i32
  %124 = sub nsw i32 %120, %123
  %125 = icmp slt i32 %124, 0
  %126 = sub nsw i32 0, %124
  %127 = select i1 %125, i32 %126, i32 %124
  %128 = add nuw nsw i32 %127, 8
  %129 = lshr i32 %128, 8
  %130 = icmp ult i32 %129, 26
  %131 = select i1 %130, i32 %129, i32 26
  %132 = trunc i32 %131 to i8
  %133 = sub nuw nsw i8 26, %132
  %134 = getelementptr inbounds i8, i8* %9, i64 %117
  store i8 %133, i8* %134, align 1
  %135 = add nuw nsw i64 %117, 1
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %109, label %116, !llvm.loop !362
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi32ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %109, %4
  %8 = phi i64 [ %115, %109 ], [ 0, %4 ]
  %9 = phi i8* [ %112, %109 ], [ %2, %4 ]
  %10 = phi i16* [ %110, %109 ], [ %5, %4 ]
  %11 = phi i32 [ %113, %109 ], [ 0, %4 ]
  %12 = phi i16* [ %111, %109 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 32
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 6
  %18 = add i64 %17, 64
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %116, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !363
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !366
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !368, !noalias !370
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !363
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !366
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !368, !noalias !370
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !363
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !366
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !368, !noalias !370
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !363
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !366
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !368, !noalias !370
  br label %109

108:                                              ; preds = %109
  ret void

109:                                              ; preds = %116, %30
  %110 = getelementptr inbounds i16, i16* %10, i64 32
  %111 = getelementptr inbounds i16, i16* %12, i64 32
  %112 = getelementptr inbounds i8, i8* %9, i64 %3
  %113 = add nuw nsw i32 %11, 1
  %114 = icmp eq i32 %113, 32
  %115 = add i64 %8, 1
  br i1 %114, label %108, label %7

116:                                              ; preds = %7, %116
  %117 = phi i64 [ %135, %116 ], [ 0, %7 ]
  %118 = getelementptr inbounds i16, i16* %10, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = sext i16 %119 to i32
  %121 = getelementptr inbounds i16, i16* %12, i64 %117
  %122 = load i16, i16* %121, align 2
  %123 = sext i16 %122 to i32
  %124 = sub nsw i32 %120, %123
  %125 = icmp slt i32 %124, 0
  %126 = sub nsw i32 0, %124
  %127 = select i1 %125, i32 %126, i32 %124
  %128 = add nuw nsw i32 %127, 8
  %129 = lshr i32 %128, 8
  %130 = icmp ult i32 %129, 26
  %131 = select i1 %130, i32 %129, i32 26
  %132 = trunc i32 %131 to i8
  %133 = add nuw nsw i8 %132, 38
  %134 = getelementptr inbounds i8, i8* %9, i64 %117
  store i8 %133, i8* %134, align 1
  %135 = add nuw nsw i64 %117, 1
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %109, label %116, !llvm.loop !371
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi32ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %109, %4
  %8 = phi i64 [ %115, %109 ], [ 0, %4 ]
  %9 = phi i8* [ %112, %109 ], [ %2, %4 ]
  %10 = phi i16* [ %110, %109 ], [ %5, %4 ]
  %11 = phi i32 [ %113, %109 ], [ 0, %4 ]
  %12 = phi i16* [ %111, %109 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 32
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 6
  %18 = add i64 %17, 64
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %116, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !372
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !375
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !377, !noalias !379
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !372
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !375
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !377, !noalias !379
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !372
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !375
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !377, !noalias !379
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !372
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !375
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !377, !noalias !379
  br label %109

108:                                              ; preds = %109
  ret void

109:                                              ; preds = %116, %30
  %110 = getelementptr inbounds i16, i16* %10, i64 32
  %111 = getelementptr inbounds i16, i16* %12, i64 32
  %112 = getelementptr inbounds i8, i8* %9, i64 %3
  %113 = add nuw nsw i32 %11, 1
  %114 = icmp eq i32 %113, 32
  %115 = add i64 %8, 1
  br i1 %114, label %108, label %7

116:                                              ; preds = %7, %116
  %117 = phi i64 [ %135, %116 ], [ 0, %7 ]
  %118 = getelementptr inbounds i16, i16* %10, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = sext i16 %119 to i32
  %121 = getelementptr inbounds i16, i16* %12, i64 %117
  %122 = load i16, i16* %121, align 2
  %123 = sext i16 %122 to i32
  %124 = sub nsw i32 %120, %123
  %125 = icmp slt i32 %124, 0
  %126 = sub nsw i32 0, %124
  %127 = select i1 %125, i32 %126, i32 %124
  %128 = add nuw nsw i32 %127, 8
  %129 = lshr i32 %128, 8
  %130 = icmp ult i32 %129, 26
  %131 = select i1 %130, i32 %129, i32 26
  %132 = trunc i32 %131 to i8
  %133 = sub nuw nsw i8 26, %132
  %134 = getelementptr inbounds i8, i8* %9, i64 %117
  store i8 %133, i8* %134, align 1
  %135 = add nuw nsw i64 %117, 1
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %109, label %116, !llvm.loop !380
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi64ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %109, %4
  %8 = phi i64 [ %115, %109 ], [ 0, %4 ]
  %9 = phi i8* [ %112, %109 ], [ %2, %4 ]
  %10 = phi i16* [ %110, %109 ], [ %5, %4 ]
  %11 = phi i32 [ %113, %109 ], [ 0, %4 ]
  %12 = phi i16* [ %111, %109 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 32
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 6
  %18 = add i64 %17, 64
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %116, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !381
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !384
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !386, !noalias !388
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !381
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !384
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !386, !noalias !388
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !381
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !384
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !386, !noalias !388
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !381
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !384
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !386, !noalias !388
  br label %109

108:                                              ; preds = %109
  ret void

109:                                              ; preds = %116, %30
  %110 = getelementptr inbounds i16, i16* %10, i64 32
  %111 = getelementptr inbounds i16, i16* %12, i64 32
  %112 = getelementptr inbounds i8, i8* %9, i64 %3
  %113 = add nuw nsw i32 %11, 1
  %114 = icmp eq i32 %113, 64
  %115 = add i64 %8, 1
  br i1 %114, label %108, label %7

116:                                              ; preds = %7, %116
  %117 = phi i64 [ %135, %116 ], [ 0, %7 ]
  %118 = getelementptr inbounds i16, i16* %10, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = sext i16 %119 to i32
  %121 = getelementptr inbounds i16, i16* %12, i64 %117
  %122 = load i16, i16* %121, align 2
  %123 = sext i16 %122 to i32
  %124 = sub nsw i32 %120, %123
  %125 = icmp slt i32 %124, 0
  %126 = sub nsw i32 0, %124
  %127 = select i1 %125, i32 %126, i32 %124
  %128 = add nuw nsw i32 %127, 8
  %129 = lshr i32 %128, 8
  %130 = icmp ult i32 %129, 26
  %131 = select i1 %130, i32 %129, i32 26
  %132 = trunc i32 %131 to i8
  %133 = add nuw nsw i8 %132, 38
  %134 = getelementptr inbounds i8, i8* %9, i64 %117
  store i8 %133, i8* %134, align 1
  %135 = add nuw nsw i64 %117, 1
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %109, label %116, !llvm.loop !389
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi64ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %109, %4
  %8 = phi i64 [ %115, %109 ], [ 0, %4 ]
  %9 = phi i8* [ %112, %109 ], [ %2, %4 ]
  %10 = phi i16* [ %110, %109 ], [ %5, %4 ]
  %11 = phi i32 [ %113, %109 ], [ 0, %4 ]
  %12 = phi i16* [ %111, %109 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 32
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 6
  %18 = add i64 %17, 64
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %116, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !390
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !393
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !395, !noalias !397
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !390
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !393
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !395, !noalias !397
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !390
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !393
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !395, !noalias !397
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !390
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !393
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !395, !noalias !397
  br label %109

108:                                              ; preds = %109
  ret void

109:                                              ; preds = %116, %30
  %110 = getelementptr inbounds i16, i16* %10, i64 32
  %111 = getelementptr inbounds i16, i16* %12, i64 32
  %112 = getelementptr inbounds i8, i8* %9, i64 %3
  %113 = add nuw nsw i32 %11, 1
  %114 = icmp eq i32 %113, 64
  %115 = add i64 %8, 1
  br i1 %114, label %108, label %7

116:                                              ; preds = %7, %116
  %117 = phi i64 [ %135, %116 ], [ 0, %7 ]
  %118 = getelementptr inbounds i16, i16* %10, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = sext i16 %119 to i32
  %121 = getelementptr inbounds i16, i16* %12, i64 %117
  %122 = load i16, i16* %121, align 2
  %123 = sext i16 %122 to i32
  %124 = sub nsw i32 %120, %123
  %125 = icmp slt i32 %124, 0
  %126 = sub nsw i32 0, %124
  %127 = select i1 %125, i32 %126, i32 %124
  %128 = add nuw nsw i32 %127, 8
  %129 = lshr i32 %128, 8
  %130 = icmp ult i32 %129, 26
  %131 = select i1 %130, i32 %129, i32 26
  %132 = trunc i32 %131 to i8
  %133 = sub nuw nsw i8 26, %132
  %134 = getelementptr inbounds i8, i8* %9, i64 %117
  store i8 %133, i8* %134, align 1
  %135 = add nuw nsw i64 %117, 1
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %109, label %116, !llvm.loop !398
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi16ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !399
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !402
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !404, !noalias !406
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !399
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !402
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !404, !noalias !406
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !399
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !402
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !404, !noalias !406
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !399
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !402
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !404, !noalias !406
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !399
  %111 = sext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !402
  %115 = sext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %121 = lshr <8 x i32> %120, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = add nuw nsw <8 x i8> %124, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !404, !noalias !406
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !399
  %131 = sext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !402
  %135 = sext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %141 = lshr <8 x i32> %140, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = add nuw nsw <8 x i8> %144, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !404, !noalias !406
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !399
  %151 = sext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !402
  %155 = sext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %161 = lshr <8 x i32> %160, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = add nuw nsw <8 x i8> %164, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !404, !noalias !406
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !399
  %171 = sext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !402
  %175 = sext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %181 = lshr <8 x i32> %180, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = add nuw nsw <8 x i8> %184, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !404, !noalias !406
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 16
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = sext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = sext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 8
  %209 = lshr i32 %208, 8
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = add nuw nsw i8 %212, 38
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !407
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi16ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !408
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !411
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !413, !noalias !415
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !408
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !411
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !413, !noalias !415
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !408
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !411
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !413, !noalias !415
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !408
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !411
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !413, !noalias !415
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !408
  %111 = sext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !411
  %115 = sext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %121 = lshr <8 x i32> %120, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %124
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !413, !noalias !415
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !408
  %131 = sext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !411
  %135 = sext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %141 = lshr <8 x i32> %140, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %144
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !413, !noalias !415
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !408
  %151 = sext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !411
  %155 = sext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %161 = lshr <8 x i32> %160, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %164
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !413, !noalias !415
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !408
  %171 = sext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !411
  %175 = sext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %181 = lshr <8 x i32> %180, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %184
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !413, !noalias !415
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 16
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = sext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = sext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 8
  %209 = lshr i32 %208, 8
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = sub nuw nsw i8 26, %212
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !416
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi32ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !417
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !420
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !422, !noalias !424
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !417
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !420
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !422, !noalias !424
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !417
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !420
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !422, !noalias !424
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !417
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !420
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !422, !noalias !424
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !417
  %111 = sext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !420
  %115 = sext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %121 = lshr <8 x i32> %120, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = add nuw nsw <8 x i8> %124, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !422, !noalias !424
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !417
  %131 = sext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !420
  %135 = sext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %141 = lshr <8 x i32> %140, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = add nuw nsw <8 x i8> %144, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !422, !noalias !424
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !417
  %151 = sext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !420
  %155 = sext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %161 = lshr <8 x i32> %160, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = add nuw nsw <8 x i8> %164, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !422, !noalias !424
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !417
  %171 = sext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !420
  %175 = sext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %181 = lshr <8 x i32> %180, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = add nuw nsw <8 x i8> %184, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !422, !noalias !424
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 32
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = sext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = sext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 8
  %209 = lshr i32 %208, 8
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = add nuw nsw i8 %212, 38
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !425
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi32ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !426
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !429
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !431, !noalias !433
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !426
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !429
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !431, !noalias !433
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !426
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !429
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !431, !noalias !433
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !426
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !429
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !431, !noalias !433
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !426
  %111 = sext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !429
  %115 = sext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %121 = lshr <8 x i32> %120, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %124
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !431, !noalias !433
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !426
  %131 = sext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !429
  %135 = sext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %141 = lshr <8 x i32> %140, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %144
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !431, !noalias !433
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !426
  %151 = sext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !429
  %155 = sext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %161 = lshr <8 x i32> %160, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %164
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !431, !noalias !433
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !426
  %171 = sext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !429
  %175 = sext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %181 = lshr <8 x i32> %180, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %184
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !431, !noalias !433
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 32
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = sext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = sext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 8
  %209 = lshr i32 %208, 8
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = sub nuw nsw i8 26, %212
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !434
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi64ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !435
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !438
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !440, !noalias !442
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !435
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !438
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !440, !noalias !442
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !435
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !438
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !440, !noalias !442
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !435
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !438
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !440, !noalias !442
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !435
  %111 = sext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !438
  %115 = sext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %121 = lshr <8 x i32> %120, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = add nuw nsw <8 x i8> %124, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !440, !noalias !442
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !435
  %131 = sext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !438
  %135 = sext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %141 = lshr <8 x i32> %140, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = add nuw nsw <8 x i8> %144, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !440, !noalias !442
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !435
  %151 = sext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !438
  %155 = sext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %161 = lshr <8 x i32> %160, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = add nuw nsw <8 x i8> %164, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !440, !noalias !442
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !435
  %171 = sext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !438
  %175 = sext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %181 = lshr <8 x i32> %180, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = add nuw nsw <8 x i8> %184, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !440, !noalias !442
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 64
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = sext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = sext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 8
  %209 = lshr i32 %208, 8
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = add nuw nsw i8 %212, 38
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !443
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi64ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !444
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !447
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !449, !noalias !451
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !444
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !447
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !449, !noalias !451
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !444
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !447
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !449, !noalias !451
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !444
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !447
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !449, !noalias !451
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !444
  %111 = sext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !447
  %115 = sext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %121 = lshr <8 x i32> %120, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %124
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !449, !noalias !451
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !444
  %131 = sext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !447
  %135 = sext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %141 = lshr <8 x i32> %140, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %144
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !449, !noalias !451
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !444
  %151 = sext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !447
  %155 = sext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %161 = lshr <8 x i32> %160, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %164
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !449, !noalias !451
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !444
  %171 = sext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !447
  %175 = sext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %181 = lshr <8 x i32> %180, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %184
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !449, !noalias !451
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 64
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = sext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = sext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 8
  %209 = lshr i32 %208, 8
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = sub nuw nsw i8 26, %212
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !452
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi128ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !453
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !456
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !458, !noalias !460
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !453
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !456
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !458, !noalias !460
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !453
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !456
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !458, !noalias !460
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !453
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !456
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !458, !noalias !460
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !453
  %111 = sext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !456
  %115 = sext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %121 = lshr <8 x i32> %120, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = add nuw nsw <8 x i8> %124, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !458, !noalias !460
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !453
  %131 = sext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !456
  %135 = sext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %141 = lshr <8 x i32> %140, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = add nuw nsw <8 x i8> %144, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !458, !noalias !460
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !453
  %151 = sext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !456
  %155 = sext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %161 = lshr <8 x i32> %160, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = add nuw nsw <8 x i8> %164, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !458, !noalias !460
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !453
  %171 = sext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !456
  %175 = sext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %181 = lshr <8 x i32> %180, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = add nuw nsw <8 x i8> %184, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !458, !noalias !460
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 128
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = sext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = sext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 8
  %209 = lshr i32 %208, 8
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = add nuw nsw i8 %212, 38
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !461
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi128ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !462
  %33 = sext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !465
  %36 = sext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %42 = lshr <8 x i32> %41, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !467, !noalias !469
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !462
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !465
  %55 = sext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !467, !noalias !469
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !462
  %71 = sext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !465
  %75 = sext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %81 = lshr <8 x i32> %80, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !467, !noalias !469
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !462
  %91 = sext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !465
  %95 = sext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %101 = lshr <8 x i32> %100, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !467, !noalias !469
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !462
  %111 = sext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !465
  %115 = sext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %121 = lshr <8 x i32> %120, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %124
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !467, !noalias !469
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !462
  %131 = sext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !465
  %135 = sext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %141 = lshr <8 x i32> %140, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %144
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !467, !noalias !469
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !462
  %151 = sext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !465
  %155 = sext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %161 = lshr <8 x i32> %160, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %164
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !467, !noalias !469
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !462
  %171 = sext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !465
  %175 = sext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %181 = lshr <8 x i32> %180, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %184
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !467, !noalias !469
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 128
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = sext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = sext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 8
  %209 = lshr i32 %208, 8
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = sub nuw nsw i8 26, %212
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !470
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi64ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %55, %4
  %8 = phi i64 [ %61, %55 ], [ 0, %4 ]
  %9 = phi i8* [ %58, %55 ], [ %2, %4 ]
  %10 = phi i16* [ %56, %55 ], [ %5, %4 ]
  %11 = phi i32 [ %59, %55 ], [ 0, %4 ]
  %12 = phi i16* [ %57, %55 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 128
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 8
  %18 = add i64 %17, 256
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %62, label %30

30:                                               ; preds = %7, %30
  %31 = phi i64 [ %52, %30 ], [ 0, %7 ]
  %32 = getelementptr inbounds i16, i16* %10, i64 %31
  %33 = bitcast i16* %32 to <8 x i16>*
  %34 = load <8 x i16>, <8 x i16>* %33, align 2, !alias.scope !471
  %35 = sext <8 x i16> %34 to <8 x i32>
  %36 = getelementptr inbounds i16, i16* %12, i64 %31
  %37 = bitcast i16* %36 to <8 x i16>*
  %38 = load <8 x i16>, <8 x i16>* %37, align 2, !alias.scope !474
  %39 = sext <8 x i16> %38 to <8 x i32>
  %40 = sub nsw <8 x i32> %35, %39
  %41 = icmp slt <8 x i32> %40, zeroinitializer
  %42 = sub nsw <8 x i32> zeroinitializer, %40
  %43 = select <8 x i1> %41, <8 x i32> %42, <8 x i32> %40
  %44 = add nuw nsw <8 x i32> %43, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %45 = lshr <8 x i32> %44, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %46 = icmp ult <8 x i32> %45, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %47 = select <8 x i1> %46, <8 x i32> %45, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %48 = trunc <8 x i32> %47 to <8 x i8>
  %49 = add nuw nsw <8 x i8> %48, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %50 = getelementptr inbounds i8, i8* %9, i64 %31
  %51 = bitcast i8* %50 to <8 x i8>*
  store <8 x i8> %49, <8 x i8>* %51, align 1, !alias.scope !476, !noalias !478
  %52 = add i64 %31, 8
  %53 = icmp eq i64 %52, 128
  br i1 %53, label %55, label %30, !llvm.loop !479

54:                                               ; preds = %55
  ret void

55:                                               ; preds = %30, %62
  %56 = getelementptr inbounds i16, i16* %10, i64 128
  %57 = getelementptr inbounds i16, i16* %12, i64 128
  %58 = getelementptr inbounds i8, i8* %9, i64 %3
  %59 = add nuw nsw i32 %11, 1
  %60 = icmp eq i32 %59, 64
  %61 = add i64 %8, 1
  br i1 %60, label %54, label %7

62:                                               ; preds = %7, %62
  %63 = phi i64 [ %81, %62 ], [ 0, %7 ]
  %64 = getelementptr inbounds i16, i16* %10, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = sext i16 %65 to i32
  %67 = getelementptr inbounds i16, i16* %12, i64 %63
  %68 = load i16, i16* %67, align 2
  %69 = sext i16 %68 to i32
  %70 = sub nsw i32 %66, %69
  %71 = icmp slt i32 %70, 0
  %72 = sub nsw i32 0, %70
  %73 = select i1 %71, i32 %72, i32 %70
  %74 = add nuw nsw i32 %73, 8
  %75 = lshr i32 %74, 8
  %76 = icmp ult i32 %75, 26
  %77 = select i1 %76, i32 %75, i32 26
  %78 = trunc i32 %77 to i8
  %79 = add nuw nsw i8 %78, 38
  %80 = getelementptr inbounds i8, i8* %9, i64 %63
  store i8 %79, i8* %80, align 1
  %81 = add nuw nsw i64 %63, 1
  %82 = icmp eq i64 %81, 128
  br i1 %82, label %55, label %62, !llvm.loop !480
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi64ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %55, %4
  %8 = phi i64 [ %61, %55 ], [ 0, %4 ]
  %9 = phi i8* [ %58, %55 ], [ %2, %4 ]
  %10 = phi i16* [ %56, %55 ], [ %5, %4 ]
  %11 = phi i32 [ %59, %55 ], [ 0, %4 ]
  %12 = phi i16* [ %57, %55 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 128
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 8
  %18 = add i64 %17, 256
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %62, label %30

30:                                               ; preds = %7, %30
  %31 = phi i64 [ %52, %30 ], [ 0, %7 ]
  %32 = getelementptr inbounds i16, i16* %10, i64 %31
  %33 = bitcast i16* %32 to <8 x i16>*
  %34 = load <8 x i16>, <8 x i16>* %33, align 2, !alias.scope !481
  %35 = sext <8 x i16> %34 to <8 x i32>
  %36 = getelementptr inbounds i16, i16* %12, i64 %31
  %37 = bitcast i16* %36 to <8 x i16>*
  %38 = load <8 x i16>, <8 x i16>* %37, align 2, !alias.scope !484
  %39 = sext <8 x i16> %38 to <8 x i32>
  %40 = sub nsw <8 x i32> %35, %39
  %41 = icmp slt <8 x i32> %40, zeroinitializer
  %42 = sub nsw <8 x i32> zeroinitializer, %40
  %43 = select <8 x i1> %41, <8 x i32> %42, <8 x i32> %40
  %44 = add nuw nsw <8 x i32> %43, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %45 = lshr <8 x i32> %44, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %46 = icmp ult <8 x i32> %45, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %47 = select <8 x i1> %46, <8 x i32> %45, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %48 = trunc <8 x i32> %47 to <8 x i8>
  %49 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %48
  %50 = getelementptr inbounds i8, i8* %9, i64 %31
  %51 = bitcast i8* %50 to <8 x i8>*
  store <8 x i8> %49, <8 x i8>* %51, align 1, !alias.scope !486, !noalias !488
  %52 = add i64 %31, 8
  %53 = icmp eq i64 %52, 128
  br i1 %53, label %55, label %30, !llvm.loop !489

54:                                               ; preds = %55
  ret void

55:                                               ; preds = %30, %62
  %56 = getelementptr inbounds i16, i16* %10, i64 128
  %57 = getelementptr inbounds i16, i16* %12, i64 128
  %58 = getelementptr inbounds i8, i8* %9, i64 %3
  %59 = add nuw nsw i32 %11, 1
  %60 = icmp eq i32 %59, 64
  %61 = add i64 %8, 1
  br i1 %60, label %54, label %7

62:                                               ; preds = %7, %62
  %63 = phi i64 [ %81, %62 ], [ 0, %7 ]
  %64 = getelementptr inbounds i16, i16* %10, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = sext i16 %65 to i32
  %67 = getelementptr inbounds i16, i16* %12, i64 %63
  %68 = load i16, i16* %67, align 2
  %69 = sext i16 %68 to i32
  %70 = sub nsw i32 %66, %69
  %71 = icmp slt i32 %70, 0
  %72 = sub nsw i32 0, %70
  %73 = select i1 %71, i32 %72, i32 %70
  %74 = add nuw nsw i32 %73, 8
  %75 = lshr i32 %74, 8
  %76 = icmp ult i32 %75, 26
  %77 = select i1 %76, i32 %75, i32 26
  %78 = trunc i32 %77 to i8
  %79 = sub nuw nsw i8 26, %78
  %80 = getelementptr inbounds i8, i8* %9, i64 %63
  store i8 %79, i8* %80, align 1
  %81 = add nuw nsw i64 %63, 1
  %82 = icmp eq i64 %81, 128
  br i1 %82, label %55, label %62, !llvm.loop !490
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi128ELi8ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %55, %4
  %8 = phi i64 [ %61, %55 ], [ 0, %4 ]
  %9 = phi i8* [ %58, %55 ], [ %2, %4 ]
  %10 = phi i16* [ %56, %55 ], [ %5, %4 ]
  %11 = phi i32 [ %59, %55 ], [ 0, %4 ]
  %12 = phi i16* [ %57, %55 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 128
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 8
  %18 = add i64 %17, 256
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %62, label %30

30:                                               ; preds = %7, %30
  %31 = phi i64 [ %52, %30 ], [ 0, %7 ]
  %32 = getelementptr inbounds i16, i16* %10, i64 %31
  %33 = bitcast i16* %32 to <8 x i16>*
  %34 = load <8 x i16>, <8 x i16>* %33, align 2, !alias.scope !491
  %35 = sext <8 x i16> %34 to <8 x i32>
  %36 = getelementptr inbounds i16, i16* %12, i64 %31
  %37 = bitcast i16* %36 to <8 x i16>*
  %38 = load <8 x i16>, <8 x i16>* %37, align 2, !alias.scope !494
  %39 = sext <8 x i16> %38 to <8 x i32>
  %40 = sub nsw <8 x i32> %35, %39
  %41 = icmp slt <8 x i32> %40, zeroinitializer
  %42 = sub nsw <8 x i32> zeroinitializer, %40
  %43 = select <8 x i1> %41, <8 x i32> %42, <8 x i32> %40
  %44 = add nuw nsw <8 x i32> %43, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %45 = lshr <8 x i32> %44, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %46 = icmp ult <8 x i32> %45, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %47 = select <8 x i1> %46, <8 x i32> %45, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %48 = trunc <8 x i32> %47 to <8 x i8>
  %49 = add nuw nsw <8 x i8> %48, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %50 = getelementptr inbounds i8, i8* %9, i64 %31
  %51 = bitcast i8* %50 to <8 x i8>*
  store <8 x i8> %49, <8 x i8>* %51, align 1, !alias.scope !496, !noalias !498
  %52 = add i64 %31, 8
  %53 = icmp eq i64 %52, 128
  br i1 %53, label %55, label %30, !llvm.loop !499

54:                                               ; preds = %55
  ret void

55:                                               ; preds = %30, %62
  %56 = getelementptr inbounds i16, i16* %10, i64 128
  %57 = getelementptr inbounds i16, i16* %12, i64 128
  %58 = getelementptr inbounds i8, i8* %9, i64 %3
  %59 = add nuw nsw i32 %11, 1
  %60 = icmp eq i32 %59, 128
  %61 = add i64 %8, 1
  br i1 %60, label %54, label %7

62:                                               ; preds = %7, %62
  %63 = phi i64 [ %81, %62 ], [ 0, %7 ]
  %64 = getelementptr inbounds i16, i16* %10, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = sext i16 %65 to i32
  %67 = getelementptr inbounds i16, i16* %12, i64 %63
  %68 = load i16, i16* %67, align 2
  %69 = sext i16 %68 to i32
  %70 = sub nsw i32 %66, %69
  %71 = icmp slt i32 %70, 0
  %72 = sub nsw i32 0, %70
  %73 = select i1 %71, i32 %72, i32 %70
  %74 = add nuw nsw i32 %73, 8
  %75 = lshr i32 %74, 8
  %76 = icmp ult i32 %75, 26
  %77 = select i1 %76, i32 %75, i32 26
  %78 = trunc i32 %77 to i8
  %79 = add nuw nsw i8 %78, 38
  %80 = getelementptr inbounds i8, i8* %9, i64 %63
  store i8 %79, i8* %80, align 1
  %81 = add nuw nsw i64 %63, 1
  %82 = icmp eq i64 %81, 128
  br i1 %82, label %55, label %62, !llvm.loop !500
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi128ELi8ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %55, %4
  %8 = phi i64 [ %61, %55 ], [ 0, %4 ]
  %9 = phi i8* [ %58, %55 ], [ %2, %4 ]
  %10 = phi i16* [ %56, %55 ], [ %5, %4 ]
  %11 = phi i32 [ %59, %55 ], [ 0, %4 ]
  %12 = phi i16* [ %57, %55 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 128
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 8
  %18 = add i64 %17, 256
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %62, label %30

30:                                               ; preds = %7, %30
  %31 = phi i64 [ %52, %30 ], [ 0, %7 ]
  %32 = getelementptr inbounds i16, i16* %10, i64 %31
  %33 = bitcast i16* %32 to <8 x i16>*
  %34 = load <8 x i16>, <8 x i16>* %33, align 2, !alias.scope !501
  %35 = sext <8 x i16> %34 to <8 x i32>
  %36 = getelementptr inbounds i16, i16* %12, i64 %31
  %37 = bitcast i16* %36 to <8 x i16>*
  %38 = load <8 x i16>, <8 x i16>* %37, align 2, !alias.scope !504
  %39 = sext <8 x i16> %38 to <8 x i32>
  %40 = sub nsw <8 x i32> %35, %39
  %41 = icmp slt <8 x i32> %40, zeroinitializer
  %42 = sub nsw <8 x i32> zeroinitializer, %40
  %43 = select <8 x i1> %41, <8 x i32> %42, <8 x i32> %40
  %44 = add nuw nsw <8 x i32> %43, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %45 = lshr <8 x i32> %44, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %46 = icmp ult <8 x i32> %45, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %47 = select <8 x i1> %46, <8 x i32> %45, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %48 = trunc <8 x i32> %47 to <8 x i8>
  %49 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %48
  %50 = getelementptr inbounds i8, i8* %9, i64 %31
  %51 = bitcast i8* %50 to <8 x i8>*
  store <8 x i8> %49, <8 x i8>* %51, align 1, !alias.scope !506, !noalias !508
  %52 = add i64 %31, 8
  %53 = icmp eq i64 %52, 128
  br i1 %53, label %55, label %30, !llvm.loop !509

54:                                               ; preds = %55
  ret void

55:                                               ; preds = %30, %62
  %56 = getelementptr inbounds i16, i16* %10, i64 128
  %57 = getelementptr inbounds i16, i16* %12, i64 128
  %58 = getelementptr inbounds i8, i8* %9, i64 %3
  %59 = add nuw nsw i32 %11, 1
  %60 = icmp eq i32 %59, 128
  %61 = add i64 %8, 1
  br i1 %60, label %54, label %7

62:                                               ; preds = %7, %62
  %63 = phi i64 [ %81, %62 ], [ 0, %7 ]
  %64 = getelementptr inbounds i16, i16* %10, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = sext i16 %65 to i32
  %67 = getelementptr inbounds i16, i16* %12, i64 %63
  %68 = load i16, i16* %67, align 2
  %69 = sext i16 %68 to i32
  %70 = sub nsw i32 %66, %69
  %71 = icmp slt i32 %70, 0
  %72 = sub nsw i32 0, %70
  %73 = select i1 %71, i32 %72, i32 %70
  %74 = add nuw nsw i32 %73, 8
  %75 = lshr i32 %74, 8
  %76 = icmp ult i32 %75, 26
  %77 = select i1 %76, i32 %75, i32 26
  %78 = trunc i32 %77 to i8
  %79 = sub nuw nsw i8 26, %78
  %80 = getelementptr inbounds i8, i8* %9, i64 %63
  store i8 %79, i8* %80, align 1
  %81 = add nuw nsw i64 %63, 1
  %82 = icmp eq i64 %81, 128
  br i1 %82, label %55, label %62, !llvm.loop !510
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi8ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i8* [ %2, %4 ], [ %147, %7 ]
  %9 = phi i16* [ %5, %4 ], [ %145, %7 ]
  %10 = phi i32 [ 0, %4 ], [ %148, %7 ]
  %11 = phi i16* [ %6, %4 ], [ %146, %7 ]
  %12 = load i16, i16* %9, align 2
  %13 = zext i16 %12 to i32
  %14 = load i16, i16* %11, align 2
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %16, 0
  %18 = sub nsw i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = add nuw nsw i32 %19, 32
  %21 = lshr i32 %20, 10
  %22 = icmp ult i32 %21, 26
  %23 = select i1 %22, i32 %21, i32 26
  %24 = trunc i32 %23 to i8
  %25 = add nuw nsw i8 %24, 38
  store i8 %25, i8* %8, align 1
  %26 = getelementptr inbounds i16, i16* %9, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = getelementptr inbounds i16, i16* %11, i64 1
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = sub nsw i32 %28, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = add nuw nsw i32 %35, 32
  %37 = lshr i32 %36, 10
  %38 = icmp ult i32 %37, 26
  %39 = select i1 %38, i32 %37, i32 26
  %40 = trunc i32 %39 to i8
  %41 = add nuw nsw i8 %40, 38
  %42 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds i16, i16* %9, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %11, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = sub nsw i32 %45, %48
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 0, %49
  %52 = select i1 %50, i32 %51, i32 %49
  %53 = add nuw nsw i32 %52, 32
  %54 = lshr i32 %53, 10
  %55 = icmp ult i32 %54, 26
  %56 = select i1 %55, i32 %54, i32 26
  %57 = trunc i32 %56 to i8
  %58 = add nuw nsw i8 %57, 38
  %59 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i16, i16* %9, i64 3
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = getelementptr inbounds i16, i16* %11, i64 3
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = sub nsw i32 %62, %65
  %67 = icmp slt i32 %66, 0
  %68 = sub nsw i32 0, %66
  %69 = select i1 %67, i32 %68, i32 %66
  %70 = add nuw nsw i32 %69, 32
  %71 = lshr i32 %70, 10
  %72 = icmp ult i32 %71, 26
  %73 = select i1 %72, i32 %71, i32 26
  %74 = trunc i32 %73 to i8
  %75 = add nuw nsw i8 %74, 38
  %76 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %75, i8* %76, align 1
  %77 = getelementptr inbounds i16, i16* %9, i64 4
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = getelementptr inbounds i16, i16* %11, i64 4
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = sub nsw i32 %79, %82
  %84 = icmp slt i32 %83, 0
  %85 = sub nsw i32 0, %83
  %86 = select i1 %84, i32 %85, i32 %83
  %87 = add nuw nsw i32 %86, 32
  %88 = lshr i32 %87, 10
  %89 = icmp ult i32 %88, 26
  %90 = select i1 %89, i32 %88, i32 26
  %91 = trunc i32 %90 to i8
  %92 = add nuw nsw i8 %91, 38
  %93 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds i16, i16* %9, i64 5
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = getelementptr inbounds i16, i16* %11, i64 5
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = sub nsw i32 %96, %99
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = add nuw nsw i32 %103, 32
  %105 = lshr i32 %104, 10
  %106 = icmp ult i32 %105, 26
  %107 = select i1 %106, i32 %105, i32 26
  %108 = trunc i32 %107 to i8
  %109 = add nuw nsw i8 %108, 38
  %110 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i16, i16* %9, i64 6
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = getelementptr inbounds i16, i16* %11, i64 6
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = sub nsw i32 %113, %116
  %118 = icmp slt i32 %117, 0
  %119 = sub nsw i32 0, %117
  %120 = select i1 %118, i32 %119, i32 %117
  %121 = add nuw nsw i32 %120, 32
  %122 = lshr i32 %121, 10
  %123 = icmp ult i32 %122, 26
  %124 = select i1 %123, i32 %122, i32 26
  %125 = trunc i32 %124 to i8
  %126 = add nuw nsw i8 %125, 38
  %127 = getelementptr inbounds i8, i8* %8, i64 6
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds i16, i16* %9, i64 7
  %129 = load i16, i16* %128, align 2
  %130 = zext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %11, i64 7
  %132 = load i16, i16* %131, align 2
  %133 = zext i16 %132 to i32
  %134 = sub nsw i32 %130, %133
  %135 = icmp slt i32 %134, 0
  %136 = sub nsw i32 0, %134
  %137 = select i1 %135, i32 %136, i32 %134
  %138 = add nuw nsw i32 %137, 32
  %139 = lshr i32 %138, 10
  %140 = icmp ult i32 %139, 26
  %141 = select i1 %140, i32 %139, i32 26
  %142 = trunc i32 %141 to i8
  %143 = add nuw nsw i8 %142, 38
  %144 = getelementptr inbounds i8, i8* %8, i64 7
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i16, i16* %9, i64 8
  %146 = getelementptr inbounds i16, i16* %11, i64 8
  %147 = getelementptr inbounds i8, i8* %8, i64 %3
  %148 = add nuw nsw i32 %10, 1
  %149 = icmp eq i32 %148, 8
  br i1 %149, label %150, label %7

150:                                              ; preds = %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi8ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i8* [ %2, %4 ], [ %147, %7 ]
  %9 = phi i16* [ %5, %4 ], [ %145, %7 ]
  %10 = phi i32 [ 0, %4 ], [ %148, %7 ]
  %11 = phi i16* [ %6, %4 ], [ %146, %7 ]
  %12 = load i16, i16* %9, align 2
  %13 = zext i16 %12 to i32
  %14 = load i16, i16* %11, align 2
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %16, 0
  %18 = sub nsw i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = add nuw nsw i32 %19, 32
  %21 = lshr i32 %20, 10
  %22 = icmp ult i32 %21, 26
  %23 = select i1 %22, i32 %21, i32 26
  %24 = trunc i32 %23 to i8
  %25 = sub nuw nsw i8 26, %24
  store i8 %25, i8* %8, align 1
  %26 = getelementptr inbounds i16, i16* %9, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = getelementptr inbounds i16, i16* %11, i64 1
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = sub nsw i32 %28, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = add nuw nsw i32 %35, 32
  %37 = lshr i32 %36, 10
  %38 = icmp ult i32 %37, 26
  %39 = select i1 %38, i32 %37, i32 26
  %40 = trunc i32 %39 to i8
  %41 = sub nuw nsw i8 26, %40
  %42 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds i16, i16* %9, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %11, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = sub nsw i32 %45, %48
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 0, %49
  %52 = select i1 %50, i32 %51, i32 %49
  %53 = add nuw nsw i32 %52, 32
  %54 = lshr i32 %53, 10
  %55 = icmp ult i32 %54, 26
  %56 = select i1 %55, i32 %54, i32 26
  %57 = trunc i32 %56 to i8
  %58 = sub nuw nsw i8 26, %57
  %59 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i16, i16* %9, i64 3
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = getelementptr inbounds i16, i16* %11, i64 3
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = sub nsw i32 %62, %65
  %67 = icmp slt i32 %66, 0
  %68 = sub nsw i32 0, %66
  %69 = select i1 %67, i32 %68, i32 %66
  %70 = add nuw nsw i32 %69, 32
  %71 = lshr i32 %70, 10
  %72 = icmp ult i32 %71, 26
  %73 = select i1 %72, i32 %71, i32 26
  %74 = trunc i32 %73 to i8
  %75 = sub nuw nsw i8 26, %74
  %76 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %75, i8* %76, align 1
  %77 = getelementptr inbounds i16, i16* %9, i64 4
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = getelementptr inbounds i16, i16* %11, i64 4
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = sub nsw i32 %79, %82
  %84 = icmp slt i32 %83, 0
  %85 = sub nsw i32 0, %83
  %86 = select i1 %84, i32 %85, i32 %83
  %87 = add nuw nsw i32 %86, 32
  %88 = lshr i32 %87, 10
  %89 = icmp ult i32 %88, 26
  %90 = select i1 %89, i32 %88, i32 26
  %91 = trunc i32 %90 to i8
  %92 = sub nuw nsw i8 26, %91
  %93 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds i16, i16* %9, i64 5
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = getelementptr inbounds i16, i16* %11, i64 5
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = sub nsw i32 %96, %99
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = add nuw nsw i32 %103, 32
  %105 = lshr i32 %104, 10
  %106 = icmp ult i32 %105, 26
  %107 = select i1 %106, i32 %105, i32 26
  %108 = trunc i32 %107 to i8
  %109 = sub nuw nsw i8 26, %108
  %110 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i16, i16* %9, i64 6
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = getelementptr inbounds i16, i16* %11, i64 6
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = sub nsw i32 %113, %116
  %118 = icmp slt i32 %117, 0
  %119 = sub nsw i32 0, %117
  %120 = select i1 %118, i32 %119, i32 %117
  %121 = add nuw nsw i32 %120, 32
  %122 = lshr i32 %121, 10
  %123 = icmp ult i32 %122, 26
  %124 = select i1 %123, i32 %122, i32 26
  %125 = trunc i32 %124 to i8
  %126 = sub nuw nsw i8 26, %125
  %127 = getelementptr inbounds i8, i8* %8, i64 6
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds i16, i16* %9, i64 7
  %129 = load i16, i16* %128, align 2
  %130 = zext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %11, i64 7
  %132 = load i16, i16* %131, align 2
  %133 = zext i16 %132 to i32
  %134 = sub nsw i32 %130, %133
  %135 = icmp slt i32 %134, 0
  %136 = sub nsw i32 0, %134
  %137 = select i1 %135, i32 %136, i32 %134
  %138 = add nuw nsw i32 %137, 32
  %139 = lshr i32 %138, 10
  %140 = icmp ult i32 %139, 26
  %141 = select i1 %140, i32 %139, i32 26
  %142 = trunc i32 %141 to i8
  %143 = sub nuw nsw i8 26, %142
  %144 = getelementptr inbounds i8, i8* %8, i64 7
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i16, i16* %9, i64 8
  %146 = getelementptr inbounds i16, i16* %11, i64 8
  %147 = getelementptr inbounds i8, i8* %8, i64 %3
  %148 = add nuw nsw i32 %10, 1
  %149 = icmp eq i32 %148, 8
  br i1 %149, label %150, label %7

150:                                              ; preds = %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi16ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i8* [ %2, %4 ], [ %147, %7 ]
  %9 = phi i16* [ %5, %4 ], [ %145, %7 ]
  %10 = phi i32 [ 0, %4 ], [ %148, %7 ]
  %11 = phi i16* [ %6, %4 ], [ %146, %7 ]
  %12 = load i16, i16* %9, align 2
  %13 = zext i16 %12 to i32
  %14 = load i16, i16* %11, align 2
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %16, 0
  %18 = sub nsw i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = add nuw nsw i32 %19, 32
  %21 = lshr i32 %20, 10
  %22 = icmp ult i32 %21, 26
  %23 = select i1 %22, i32 %21, i32 26
  %24 = trunc i32 %23 to i8
  %25 = add nuw nsw i8 %24, 38
  store i8 %25, i8* %8, align 1
  %26 = getelementptr inbounds i16, i16* %9, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = getelementptr inbounds i16, i16* %11, i64 1
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = sub nsw i32 %28, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = add nuw nsw i32 %35, 32
  %37 = lshr i32 %36, 10
  %38 = icmp ult i32 %37, 26
  %39 = select i1 %38, i32 %37, i32 26
  %40 = trunc i32 %39 to i8
  %41 = add nuw nsw i8 %40, 38
  %42 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds i16, i16* %9, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %11, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = sub nsw i32 %45, %48
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 0, %49
  %52 = select i1 %50, i32 %51, i32 %49
  %53 = add nuw nsw i32 %52, 32
  %54 = lshr i32 %53, 10
  %55 = icmp ult i32 %54, 26
  %56 = select i1 %55, i32 %54, i32 26
  %57 = trunc i32 %56 to i8
  %58 = add nuw nsw i8 %57, 38
  %59 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i16, i16* %9, i64 3
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = getelementptr inbounds i16, i16* %11, i64 3
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = sub nsw i32 %62, %65
  %67 = icmp slt i32 %66, 0
  %68 = sub nsw i32 0, %66
  %69 = select i1 %67, i32 %68, i32 %66
  %70 = add nuw nsw i32 %69, 32
  %71 = lshr i32 %70, 10
  %72 = icmp ult i32 %71, 26
  %73 = select i1 %72, i32 %71, i32 26
  %74 = trunc i32 %73 to i8
  %75 = add nuw nsw i8 %74, 38
  %76 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %75, i8* %76, align 1
  %77 = getelementptr inbounds i16, i16* %9, i64 4
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = getelementptr inbounds i16, i16* %11, i64 4
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = sub nsw i32 %79, %82
  %84 = icmp slt i32 %83, 0
  %85 = sub nsw i32 0, %83
  %86 = select i1 %84, i32 %85, i32 %83
  %87 = add nuw nsw i32 %86, 32
  %88 = lshr i32 %87, 10
  %89 = icmp ult i32 %88, 26
  %90 = select i1 %89, i32 %88, i32 26
  %91 = trunc i32 %90 to i8
  %92 = add nuw nsw i8 %91, 38
  %93 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds i16, i16* %9, i64 5
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = getelementptr inbounds i16, i16* %11, i64 5
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = sub nsw i32 %96, %99
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = add nuw nsw i32 %103, 32
  %105 = lshr i32 %104, 10
  %106 = icmp ult i32 %105, 26
  %107 = select i1 %106, i32 %105, i32 26
  %108 = trunc i32 %107 to i8
  %109 = add nuw nsw i8 %108, 38
  %110 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i16, i16* %9, i64 6
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = getelementptr inbounds i16, i16* %11, i64 6
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = sub nsw i32 %113, %116
  %118 = icmp slt i32 %117, 0
  %119 = sub nsw i32 0, %117
  %120 = select i1 %118, i32 %119, i32 %117
  %121 = add nuw nsw i32 %120, 32
  %122 = lshr i32 %121, 10
  %123 = icmp ult i32 %122, 26
  %124 = select i1 %123, i32 %122, i32 26
  %125 = trunc i32 %124 to i8
  %126 = add nuw nsw i8 %125, 38
  %127 = getelementptr inbounds i8, i8* %8, i64 6
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds i16, i16* %9, i64 7
  %129 = load i16, i16* %128, align 2
  %130 = zext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %11, i64 7
  %132 = load i16, i16* %131, align 2
  %133 = zext i16 %132 to i32
  %134 = sub nsw i32 %130, %133
  %135 = icmp slt i32 %134, 0
  %136 = sub nsw i32 0, %134
  %137 = select i1 %135, i32 %136, i32 %134
  %138 = add nuw nsw i32 %137, 32
  %139 = lshr i32 %138, 10
  %140 = icmp ult i32 %139, 26
  %141 = select i1 %140, i32 %139, i32 26
  %142 = trunc i32 %141 to i8
  %143 = add nuw nsw i8 %142, 38
  %144 = getelementptr inbounds i8, i8* %8, i64 7
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i16, i16* %9, i64 8
  %146 = getelementptr inbounds i16, i16* %11, i64 8
  %147 = getelementptr inbounds i8, i8* %8, i64 %3
  %148 = add nuw nsw i32 %10, 1
  %149 = icmp eq i32 %148, 16
  br i1 %149, label %150, label %7

150:                                              ; preds = %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi16ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i8* [ %2, %4 ], [ %147, %7 ]
  %9 = phi i16* [ %5, %4 ], [ %145, %7 ]
  %10 = phi i32 [ 0, %4 ], [ %148, %7 ]
  %11 = phi i16* [ %6, %4 ], [ %146, %7 ]
  %12 = load i16, i16* %9, align 2
  %13 = zext i16 %12 to i32
  %14 = load i16, i16* %11, align 2
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %16, 0
  %18 = sub nsw i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = add nuw nsw i32 %19, 32
  %21 = lshr i32 %20, 10
  %22 = icmp ult i32 %21, 26
  %23 = select i1 %22, i32 %21, i32 26
  %24 = trunc i32 %23 to i8
  %25 = sub nuw nsw i8 26, %24
  store i8 %25, i8* %8, align 1
  %26 = getelementptr inbounds i16, i16* %9, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = getelementptr inbounds i16, i16* %11, i64 1
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = sub nsw i32 %28, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = add nuw nsw i32 %35, 32
  %37 = lshr i32 %36, 10
  %38 = icmp ult i32 %37, 26
  %39 = select i1 %38, i32 %37, i32 26
  %40 = trunc i32 %39 to i8
  %41 = sub nuw nsw i8 26, %40
  %42 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds i16, i16* %9, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %11, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = sub nsw i32 %45, %48
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 0, %49
  %52 = select i1 %50, i32 %51, i32 %49
  %53 = add nuw nsw i32 %52, 32
  %54 = lshr i32 %53, 10
  %55 = icmp ult i32 %54, 26
  %56 = select i1 %55, i32 %54, i32 26
  %57 = trunc i32 %56 to i8
  %58 = sub nuw nsw i8 26, %57
  %59 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i16, i16* %9, i64 3
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = getelementptr inbounds i16, i16* %11, i64 3
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = sub nsw i32 %62, %65
  %67 = icmp slt i32 %66, 0
  %68 = sub nsw i32 0, %66
  %69 = select i1 %67, i32 %68, i32 %66
  %70 = add nuw nsw i32 %69, 32
  %71 = lshr i32 %70, 10
  %72 = icmp ult i32 %71, 26
  %73 = select i1 %72, i32 %71, i32 26
  %74 = trunc i32 %73 to i8
  %75 = sub nuw nsw i8 26, %74
  %76 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %75, i8* %76, align 1
  %77 = getelementptr inbounds i16, i16* %9, i64 4
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = getelementptr inbounds i16, i16* %11, i64 4
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = sub nsw i32 %79, %82
  %84 = icmp slt i32 %83, 0
  %85 = sub nsw i32 0, %83
  %86 = select i1 %84, i32 %85, i32 %83
  %87 = add nuw nsw i32 %86, 32
  %88 = lshr i32 %87, 10
  %89 = icmp ult i32 %88, 26
  %90 = select i1 %89, i32 %88, i32 26
  %91 = trunc i32 %90 to i8
  %92 = sub nuw nsw i8 26, %91
  %93 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds i16, i16* %9, i64 5
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = getelementptr inbounds i16, i16* %11, i64 5
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = sub nsw i32 %96, %99
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = add nuw nsw i32 %103, 32
  %105 = lshr i32 %104, 10
  %106 = icmp ult i32 %105, 26
  %107 = select i1 %106, i32 %105, i32 26
  %108 = trunc i32 %107 to i8
  %109 = sub nuw nsw i8 26, %108
  %110 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i16, i16* %9, i64 6
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = getelementptr inbounds i16, i16* %11, i64 6
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = sub nsw i32 %113, %116
  %118 = icmp slt i32 %117, 0
  %119 = sub nsw i32 0, %117
  %120 = select i1 %118, i32 %119, i32 %117
  %121 = add nuw nsw i32 %120, 32
  %122 = lshr i32 %121, 10
  %123 = icmp ult i32 %122, 26
  %124 = select i1 %123, i32 %122, i32 26
  %125 = trunc i32 %124 to i8
  %126 = sub nuw nsw i8 26, %125
  %127 = getelementptr inbounds i8, i8* %8, i64 6
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds i16, i16* %9, i64 7
  %129 = load i16, i16* %128, align 2
  %130 = zext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %11, i64 7
  %132 = load i16, i16* %131, align 2
  %133 = zext i16 %132 to i32
  %134 = sub nsw i32 %130, %133
  %135 = icmp slt i32 %134, 0
  %136 = sub nsw i32 0, %134
  %137 = select i1 %135, i32 %136, i32 %134
  %138 = add nuw nsw i32 %137, 32
  %139 = lshr i32 %138, 10
  %140 = icmp ult i32 %139, 26
  %141 = select i1 %140, i32 %139, i32 26
  %142 = trunc i32 %141 to i8
  %143 = sub nuw nsw i8 26, %142
  %144 = getelementptr inbounds i8, i8* %8, i64 7
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i16, i16* %9, i64 8
  %146 = getelementptr inbounds i16, i16* %11, i64 8
  %147 = getelementptr inbounds i8, i8* %8, i64 %3
  %148 = add nuw nsw i32 %10, 1
  %149 = icmp eq i32 %148, 16
  br i1 %149, label %150, label %7

150:                                              ; preds = %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi32ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i8* [ %2, %4 ], [ %147, %7 ]
  %9 = phi i16* [ %5, %4 ], [ %145, %7 ]
  %10 = phi i32 [ 0, %4 ], [ %148, %7 ]
  %11 = phi i16* [ %6, %4 ], [ %146, %7 ]
  %12 = load i16, i16* %9, align 2
  %13 = zext i16 %12 to i32
  %14 = load i16, i16* %11, align 2
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %16, 0
  %18 = sub nsw i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = add nuw nsw i32 %19, 32
  %21 = lshr i32 %20, 10
  %22 = icmp ult i32 %21, 26
  %23 = select i1 %22, i32 %21, i32 26
  %24 = trunc i32 %23 to i8
  %25 = add nuw nsw i8 %24, 38
  store i8 %25, i8* %8, align 1
  %26 = getelementptr inbounds i16, i16* %9, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = getelementptr inbounds i16, i16* %11, i64 1
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = sub nsw i32 %28, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = add nuw nsw i32 %35, 32
  %37 = lshr i32 %36, 10
  %38 = icmp ult i32 %37, 26
  %39 = select i1 %38, i32 %37, i32 26
  %40 = trunc i32 %39 to i8
  %41 = add nuw nsw i8 %40, 38
  %42 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds i16, i16* %9, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %11, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = sub nsw i32 %45, %48
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 0, %49
  %52 = select i1 %50, i32 %51, i32 %49
  %53 = add nuw nsw i32 %52, 32
  %54 = lshr i32 %53, 10
  %55 = icmp ult i32 %54, 26
  %56 = select i1 %55, i32 %54, i32 26
  %57 = trunc i32 %56 to i8
  %58 = add nuw nsw i8 %57, 38
  %59 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i16, i16* %9, i64 3
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = getelementptr inbounds i16, i16* %11, i64 3
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = sub nsw i32 %62, %65
  %67 = icmp slt i32 %66, 0
  %68 = sub nsw i32 0, %66
  %69 = select i1 %67, i32 %68, i32 %66
  %70 = add nuw nsw i32 %69, 32
  %71 = lshr i32 %70, 10
  %72 = icmp ult i32 %71, 26
  %73 = select i1 %72, i32 %71, i32 26
  %74 = trunc i32 %73 to i8
  %75 = add nuw nsw i8 %74, 38
  %76 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %75, i8* %76, align 1
  %77 = getelementptr inbounds i16, i16* %9, i64 4
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = getelementptr inbounds i16, i16* %11, i64 4
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = sub nsw i32 %79, %82
  %84 = icmp slt i32 %83, 0
  %85 = sub nsw i32 0, %83
  %86 = select i1 %84, i32 %85, i32 %83
  %87 = add nuw nsw i32 %86, 32
  %88 = lshr i32 %87, 10
  %89 = icmp ult i32 %88, 26
  %90 = select i1 %89, i32 %88, i32 26
  %91 = trunc i32 %90 to i8
  %92 = add nuw nsw i8 %91, 38
  %93 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds i16, i16* %9, i64 5
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = getelementptr inbounds i16, i16* %11, i64 5
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = sub nsw i32 %96, %99
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = add nuw nsw i32 %103, 32
  %105 = lshr i32 %104, 10
  %106 = icmp ult i32 %105, 26
  %107 = select i1 %106, i32 %105, i32 26
  %108 = trunc i32 %107 to i8
  %109 = add nuw nsw i8 %108, 38
  %110 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i16, i16* %9, i64 6
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = getelementptr inbounds i16, i16* %11, i64 6
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = sub nsw i32 %113, %116
  %118 = icmp slt i32 %117, 0
  %119 = sub nsw i32 0, %117
  %120 = select i1 %118, i32 %119, i32 %117
  %121 = add nuw nsw i32 %120, 32
  %122 = lshr i32 %121, 10
  %123 = icmp ult i32 %122, 26
  %124 = select i1 %123, i32 %122, i32 26
  %125 = trunc i32 %124 to i8
  %126 = add nuw nsw i8 %125, 38
  %127 = getelementptr inbounds i8, i8* %8, i64 6
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds i16, i16* %9, i64 7
  %129 = load i16, i16* %128, align 2
  %130 = zext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %11, i64 7
  %132 = load i16, i16* %131, align 2
  %133 = zext i16 %132 to i32
  %134 = sub nsw i32 %130, %133
  %135 = icmp slt i32 %134, 0
  %136 = sub nsw i32 0, %134
  %137 = select i1 %135, i32 %136, i32 %134
  %138 = add nuw nsw i32 %137, 32
  %139 = lshr i32 %138, 10
  %140 = icmp ult i32 %139, 26
  %141 = select i1 %140, i32 %139, i32 26
  %142 = trunc i32 %141 to i8
  %143 = add nuw nsw i8 %142, 38
  %144 = getelementptr inbounds i8, i8* %8, i64 7
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i16, i16* %9, i64 8
  %146 = getelementptr inbounds i16, i16* %11, i64 8
  %147 = getelementptr inbounds i8, i8* %8, i64 %3
  %148 = add nuw nsw i32 %10, 1
  %149 = icmp eq i32 %148, 32
  br i1 %149, label %150, label %7

150:                                              ; preds = %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi8ELi32ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i8* [ %2, %4 ], [ %147, %7 ]
  %9 = phi i16* [ %5, %4 ], [ %145, %7 ]
  %10 = phi i32 [ 0, %4 ], [ %148, %7 ]
  %11 = phi i16* [ %6, %4 ], [ %146, %7 ]
  %12 = load i16, i16* %9, align 2
  %13 = zext i16 %12 to i32
  %14 = load i16, i16* %11, align 2
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %16, 0
  %18 = sub nsw i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = add nuw nsw i32 %19, 32
  %21 = lshr i32 %20, 10
  %22 = icmp ult i32 %21, 26
  %23 = select i1 %22, i32 %21, i32 26
  %24 = trunc i32 %23 to i8
  %25 = sub nuw nsw i8 26, %24
  store i8 %25, i8* %8, align 1
  %26 = getelementptr inbounds i16, i16* %9, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = getelementptr inbounds i16, i16* %11, i64 1
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = sub nsw i32 %28, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = add nuw nsw i32 %35, 32
  %37 = lshr i32 %36, 10
  %38 = icmp ult i32 %37, 26
  %39 = select i1 %38, i32 %37, i32 26
  %40 = trunc i32 %39 to i8
  %41 = sub nuw nsw i8 26, %40
  %42 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds i16, i16* %9, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds i16, i16* %11, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = sub nsw i32 %45, %48
  %50 = icmp slt i32 %49, 0
  %51 = sub nsw i32 0, %49
  %52 = select i1 %50, i32 %51, i32 %49
  %53 = add nuw nsw i32 %52, 32
  %54 = lshr i32 %53, 10
  %55 = icmp ult i32 %54, 26
  %56 = select i1 %55, i32 %54, i32 26
  %57 = trunc i32 %56 to i8
  %58 = sub nuw nsw i8 26, %57
  %59 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i16, i16* %9, i64 3
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = getelementptr inbounds i16, i16* %11, i64 3
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = sub nsw i32 %62, %65
  %67 = icmp slt i32 %66, 0
  %68 = sub nsw i32 0, %66
  %69 = select i1 %67, i32 %68, i32 %66
  %70 = add nuw nsw i32 %69, 32
  %71 = lshr i32 %70, 10
  %72 = icmp ult i32 %71, 26
  %73 = select i1 %72, i32 %71, i32 26
  %74 = trunc i32 %73 to i8
  %75 = sub nuw nsw i8 26, %74
  %76 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %75, i8* %76, align 1
  %77 = getelementptr inbounds i16, i16* %9, i64 4
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = getelementptr inbounds i16, i16* %11, i64 4
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = sub nsw i32 %79, %82
  %84 = icmp slt i32 %83, 0
  %85 = sub nsw i32 0, %83
  %86 = select i1 %84, i32 %85, i32 %83
  %87 = add nuw nsw i32 %86, 32
  %88 = lshr i32 %87, 10
  %89 = icmp ult i32 %88, 26
  %90 = select i1 %89, i32 %88, i32 26
  %91 = trunc i32 %90 to i8
  %92 = sub nuw nsw i8 26, %91
  %93 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds i16, i16* %9, i64 5
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = getelementptr inbounds i16, i16* %11, i64 5
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = sub nsw i32 %96, %99
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = add nuw nsw i32 %103, 32
  %105 = lshr i32 %104, 10
  %106 = icmp ult i32 %105, 26
  %107 = select i1 %106, i32 %105, i32 26
  %108 = trunc i32 %107 to i8
  %109 = sub nuw nsw i8 26, %108
  %110 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i16, i16* %9, i64 6
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = getelementptr inbounds i16, i16* %11, i64 6
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = sub nsw i32 %113, %116
  %118 = icmp slt i32 %117, 0
  %119 = sub nsw i32 0, %117
  %120 = select i1 %118, i32 %119, i32 %117
  %121 = add nuw nsw i32 %120, 32
  %122 = lshr i32 %121, 10
  %123 = icmp ult i32 %122, 26
  %124 = select i1 %123, i32 %122, i32 26
  %125 = trunc i32 %124 to i8
  %126 = sub nuw nsw i8 26, %125
  %127 = getelementptr inbounds i8, i8* %8, i64 6
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds i16, i16* %9, i64 7
  %129 = load i16, i16* %128, align 2
  %130 = zext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %11, i64 7
  %132 = load i16, i16* %131, align 2
  %133 = zext i16 %132 to i32
  %134 = sub nsw i32 %130, %133
  %135 = icmp slt i32 %134, 0
  %136 = sub nsw i32 0, %134
  %137 = select i1 %135, i32 %136, i32 %134
  %138 = add nuw nsw i32 %137, 32
  %139 = lshr i32 %138, 10
  %140 = icmp ult i32 %139, 26
  %141 = select i1 %140, i32 %139, i32 26
  %142 = trunc i32 %141 to i8
  %143 = sub nuw nsw i8 26, %142
  %144 = getelementptr inbounds i8, i8* %8, i64 7
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i16, i16* %9, i64 8
  %146 = getelementptr inbounds i16, i16* %11, i64 8
  %147 = getelementptr inbounds i8, i8* %8, i64 %3
  %148 = add nuw nsw i32 %10, 1
  %149 = icmp eq i32 %148, 32
  br i1 %149, label %150, label %7

150:                                              ; preds = %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi8ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  %7 = getelementptr i8, i8* %2, i64 16
  %8 = getelementptr i8, i8* %0, i64 32
  %9 = getelementptr i8, i8* %1, i64 32
  %10 = icmp ugt i8* %8, %2
  %11 = icmp ugt i8* %7, %0
  %12 = and i1 %10, %11
  %13 = icmp ugt i8* %9, %2
  %14 = icmp ugt i8* %7, %1
  %15 = and i1 %13, %14
  %16 = or i1 %12, %15
  br i1 %16, label %110, label %17

17:                                               ; preds = %4
  %18 = bitcast i8* %0 to <8 x i16>*
  %19 = load <8 x i16>, <8 x i16>* %18, align 2, !alias.scope !511
  %20 = zext <8 x i16> %19 to <8 x i32>
  %21 = bitcast i8* %1 to <8 x i16>*
  %22 = load <8 x i16>, <8 x i16>* %21, align 2, !alias.scope !514
  %23 = zext <8 x i16> %22 to <8 x i32>
  %24 = sub nsw <8 x i32> %20, %23
  %25 = icmp slt <8 x i32> %24, zeroinitializer
  %26 = sub nsw <8 x i32> zeroinitializer, %24
  %27 = select <8 x i1> %25, <8 x i32> %26, <8 x i32> %24
  %28 = add nuw nsw <8 x i32> %27, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %29 = lshr <8 x i32> %28, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %30 = icmp ult <8 x i32> %29, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %31 = select <8 x i1> %30, <8 x i32> %29, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %32 = trunc <8 x i32> %31 to <8 x i8>
  %33 = add nuw nsw <8 x i8> %32, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %34 = bitcast i8* %2 to <8 x i8>*
  store <8 x i8> %33, <8 x i8>* %34, align 1, !alias.scope !516, !noalias !518
  %35 = getelementptr inbounds i8, i8* %0, i64 16
  %36 = bitcast i8* %35 to <8 x i16>*
  %37 = load <8 x i16>, <8 x i16>* %36, align 2, !alias.scope !511
  %38 = zext <8 x i16> %37 to <8 x i32>
  %39 = getelementptr inbounds i8, i8* %1, i64 16
  %40 = bitcast i8* %39 to <8 x i16>*
  %41 = load <8 x i16>, <8 x i16>* %40, align 2, !alias.scope !514
  %42 = zext <8 x i16> %41 to <8 x i32>
  %43 = sub nsw <8 x i32> %38, %42
  %44 = icmp slt <8 x i32> %43, zeroinitializer
  %45 = sub nsw <8 x i32> zeroinitializer, %43
  %46 = select <8 x i1> %44, <8 x i32> %45, <8 x i32> %43
  %47 = add nuw nsw <8 x i32> %46, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %48 = lshr <8 x i32> %47, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %49 = icmp ult <8 x i32> %48, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %50 = select <8 x i1> %49, <8 x i32> %48, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %51 = trunc <8 x i32> %50 to <8 x i8>
  %52 = add nuw nsw <8 x i8> %51, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %53 = getelementptr inbounds i8, i8* %2, i64 8
  %54 = bitcast i8* %53 to <8 x i8>*
  store <8 x i8> %52, <8 x i8>* %54, align 1, !alias.scope !516, !noalias !518
  br label %55

55:                                               ; preds = %110, %17
  %56 = getelementptr inbounds i8, i8* %0, i64 32
  %57 = bitcast i8* %56 to i16*
  %58 = getelementptr inbounds i8, i8* %1, i64 32
  %59 = bitcast i8* %58 to i16*
  %60 = getelementptr inbounds i8, i8* %2, i64 %3
  %61 = add i64 %3, 16
  %62 = getelementptr i8, i8* %2, i64 %61
  %63 = getelementptr i8, i8* %0, i64 64
  %64 = getelementptr i8, i8* %1, i64 64
  %65 = icmp ult i8* %60, %63
  %66 = icmp ult i8* %56, %62
  %67 = and i1 %65, %66
  %68 = icmp ult i8* %60, %64
  %69 = icmp ult i8* %58, %62
  %70 = and i1 %68, %69
  %71 = or i1 %67, %70
  br i1 %71, label %131, label %72

72:                                               ; preds = %55
  %73 = bitcast i8* %56 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !519
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = bitcast i8* %58 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !522
  %78 = zext <8 x i16> %77 to <8 x i32>
  %79 = sub nsw <8 x i32> %75, %78
  %80 = icmp slt <8 x i32> %79, zeroinitializer
  %81 = sub nsw <8 x i32> zeroinitializer, %79
  %82 = select <8 x i1> %80, <8 x i32> %81, <8 x i32> %79
  %83 = add nuw nsw <8 x i32> %82, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %84 = lshr <8 x i32> %83, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %85 = icmp ult <8 x i32> %84, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %86 = select <8 x i1> %85, <8 x i32> %84, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %87 = trunc <8 x i32> %86 to <8 x i8>
  %88 = add nuw nsw <8 x i8> %87, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %89 = bitcast i8* %60 to <8 x i8>*
  store <8 x i8> %88, <8 x i8>* %89, align 1, !alias.scope !524, !noalias !526
  %90 = getelementptr inbounds i8, i8* %0, i64 48
  %91 = bitcast i8* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !519
  %93 = zext <8 x i16> %92 to <8 x i32>
  %94 = getelementptr inbounds i8, i8* %1, i64 48
  %95 = bitcast i8* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !522
  %97 = zext <8 x i16> %96 to <8 x i32>
  %98 = sub nsw <8 x i32> %93, %97
  %99 = icmp slt <8 x i32> %98, zeroinitializer
  %100 = sub nsw <8 x i32> zeroinitializer, %98
  %101 = select <8 x i1> %99, <8 x i32> %100, <8 x i32> %98
  %102 = add nuw nsw <8 x i32> %101, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %103 = lshr <8 x i32> %102, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %104 = icmp ult <8 x i32> %103, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %105 = select <8 x i1> %104, <8 x i32> %103, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %106 = trunc <8 x i32> %105 to <8 x i8>
  %107 = add nuw nsw <8 x i8> %106, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %108 = getelementptr inbounds i8, i8* %60, i64 8
  %109 = bitcast i8* %108 to <8 x i8>*
  store <8 x i8> %107, <8 x i8>* %109, align 1, !alias.scope !524, !noalias !526
  br label %152

110:                                              ; preds = %4, %110
  %111 = phi i64 [ %129, %110 ], [ 0, %4 ]
  %112 = getelementptr inbounds i16, i16* %5, i64 %111
  %113 = load i16, i16* %112, align 2
  %114 = zext i16 %113 to i32
  %115 = getelementptr inbounds i16, i16* %6, i64 %111
  %116 = load i16, i16* %115, align 2
  %117 = zext i16 %116 to i32
  %118 = sub nsw i32 %114, %117
  %119 = icmp slt i32 %118, 0
  %120 = sub nsw i32 0, %118
  %121 = select i1 %119, i32 %120, i32 %118
  %122 = add nuw nsw i32 %121, 32
  %123 = lshr i32 %122, 10
  %124 = icmp ult i32 %123, 26
  %125 = select i1 %124, i32 %123, i32 26
  %126 = trunc i32 %125 to i8
  %127 = add nuw nsw i8 %126, 38
  %128 = getelementptr inbounds i8, i8* %2, i64 %111
  store i8 %127, i8* %128, align 1
  %129 = add nuw nsw i64 %111, 1
  %130 = icmp eq i64 %129, 16
  br i1 %130, label %55, label %110, !llvm.loop !527

131:                                              ; preds = %55, %131
  %132 = phi i64 [ %150, %131 ], [ 0, %55 ]
  %133 = getelementptr inbounds i16, i16* %57, i64 %132
  %134 = load i16, i16* %133, align 2
  %135 = zext i16 %134 to i32
  %136 = getelementptr inbounds i16, i16* %59, i64 %132
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  %139 = sub nsw i32 %135, %138
  %140 = icmp slt i32 %139, 0
  %141 = sub nsw i32 0, %139
  %142 = select i1 %140, i32 %141, i32 %139
  %143 = add nuw nsw i32 %142, 32
  %144 = lshr i32 %143, 10
  %145 = icmp ult i32 %144, 26
  %146 = select i1 %145, i32 %144, i32 26
  %147 = trunc i32 %146 to i8
  %148 = add nuw nsw i8 %147, 38
  %149 = getelementptr inbounds i8, i8* %60, i64 %132
  store i8 %148, i8* %149, align 1
  %150 = add nuw nsw i64 %132, 1
  %151 = icmp eq i64 %150, 16
  br i1 %151, label %152, label %131, !llvm.loop !528

152:                                              ; preds = %131, %72
  %153 = getelementptr inbounds i8, i8* %0, i64 64
  %154 = bitcast i8* %153 to i16*
  %155 = getelementptr inbounds i8, i8* %1, i64 64
  %156 = bitcast i8* %155 to i16*
  %157 = getelementptr inbounds i8, i8* %60, i64 %3
  %158 = shl i64 %3, 1
  %159 = add i64 %158, 16
  %160 = getelementptr i8, i8* %2, i64 %159
  %161 = getelementptr i8, i8* %0, i64 96
  %162 = getelementptr i8, i8* %1, i64 96
  %163 = icmp ult i8* %157, %161
  %164 = icmp ult i8* %153, %160
  %165 = and i1 %163, %164
  %166 = icmp ult i8* %157, %162
  %167 = icmp ult i8* %155, %160
  %168 = and i1 %166, %167
  %169 = or i1 %165, %168
  br i1 %169, label %208, label %170

170:                                              ; preds = %152
  %171 = bitcast i8* %153 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !529
  %173 = zext <8 x i16> %172 to <8 x i32>
  %174 = bitcast i8* %155 to <8 x i16>*
  %175 = load <8 x i16>, <8 x i16>* %174, align 2, !alias.scope !532
  %176 = zext <8 x i16> %175 to <8 x i32>
  %177 = sub nsw <8 x i32> %173, %176
  %178 = icmp slt <8 x i32> %177, zeroinitializer
  %179 = sub nsw <8 x i32> zeroinitializer, %177
  %180 = select <8 x i1> %178, <8 x i32> %179, <8 x i32> %177
  %181 = add nuw nsw <8 x i32> %180, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %182 = lshr <8 x i32> %181, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %183 = icmp ult <8 x i32> %182, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = select <8 x i1> %183, <8 x i32> %182, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %185 = trunc <8 x i32> %184 to <8 x i8>
  %186 = add nuw nsw <8 x i8> %185, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %187 = bitcast i8* %157 to <8 x i8>*
  store <8 x i8> %186, <8 x i8>* %187, align 1, !alias.scope !534, !noalias !536
  %188 = getelementptr inbounds i8, i8* %0, i64 80
  %189 = bitcast i8* %188 to <8 x i16>*
  %190 = load <8 x i16>, <8 x i16>* %189, align 2, !alias.scope !529
  %191 = zext <8 x i16> %190 to <8 x i32>
  %192 = getelementptr inbounds i8, i8* %1, i64 80
  %193 = bitcast i8* %192 to <8 x i16>*
  %194 = load <8 x i16>, <8 x i16>* %193, align 2, !alias.scope !532
  %195 = zext <8 x i16> %194 to <8 x i32>
  %196 = sub nsw <8 x i32> %191, %195
  %197 = icmp slt <8 x i32> %196, zeroinitializer
  %198 = sub nsw <8 x i32> zeroinitializer, %196
  %199 = select <8 x i1> %197, <8 x i32> %198, <8 x i32> %196
  %200 = add nuw nsw <8 x i32> %199, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %201 = lshr <8 x i32> %200, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %202 = icmp ult <8 x i32> %201, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %203 = select <8 x i1> %202, <8 x i32> %201, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %204 = trunc <8 x i32> %203 to <8 x i8>
  %205 = add nuw nsw <8 x i8> %204, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %206 = getelementptr inbounds i8, i8* %157, i64 8
  %207 = bitcast i8* %206 to <8 x i8>*
  store <8 x i8> %205, <8 x i8>* %207, align 1, !alias.scope !534, !noalias !536
  br label %229

208:                                              ; preds = %152, %208
  %209 = phi i64 [ %227, %208 ], [ 0, %152 ]
  %210 = getelementptr inbounds i16, i16* %154, i64 %209
  %211 = load i16, i16* %210, align 2
  %212 = zext i16 %211 to i32
  %213 = getelementptr inbounds i16, i16* %156, i64 %209
  %214 = load i16, i16* %213, align 2
  %215 = zext i16 %214 to i32
  %216 = sub nsw i32 %212, %215
  %217 = icmp slt i32 %216, 0
  %218 = sub nsw i32 0, %216
  %219 = select i1 %217, i32 %218, i32 %216
  %220 = add nuw nsw i32 %219, 32
  %221 = lshr i32 %220, 10
  %222 = icmp ult i32 %221, 26
  %223 = select i1 %222, i32 %221, i32 26
  %224 = trunc i32 %223 to i8
  %225 = add nuw nsw i8 %224, 38
  %226 = getelementptr inbounds i8, i8* %157, i64 %209
  store i8 %225, i8* %226, align 1
  %227 = add nuw nsw i64 %209, 1
  %228 = icmp eq i64 %227, 16
  br i1 %228, label %229, label %208, !llvm.loop !537

229:                                              ; preds = %208, %170
  %230 = getelementptr inbounds i8, i8* %0, i64 96
  %231 = bitcast i8* %230 to i16*
  %232 = getelementptr inbounds i8, i8* %1, i64 96
  %233 = bitcast i8* %232 to i16*
  %234 = getelementptr inbounds i8, i8* %157, i64 %3
  %235 = mul i64 %3, 3
  %236 = add i64 %235, 16
  %237 = getelementptr i8, i8* %2, i64 %236
  %238 = getelementptr i8, i8* %0, i64 128
  %239 = getelementptr i8, i8* %1, i64 128
  %240 = icmp ult i8* %234, %238
  %241 = icmp ult i8* %230, %237
  %242 = and i1 %240, %241
  %243 = icmp ult i8* %234, %239
  %244 = icmp ult i8* %232, %237
  %245 = and i1 %243, %244
  %246 = or i1 %242, %245
  br i1 %246, label %285, label %247

247:                                              ; preds = %229
  %248 = bitcast i8* %230 to <8 x i16>*
  %249 = load <8 x i16>, <8 x i16>* %248, align 2, !alias.scope !538
  %250 = zext <8 x i16> %249 to <8 x i32>
  %251 = bitcast i8* %232 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !541
  %253 = zext <8 x i16> %252 to <8 x i32>
  %254 = sub nsw <8 x i32> %250, %253
  %255 = icmp slt <8 x i32> %254, zeroinitializer
  %256 = sub nsw <8 x i32> zeroinitializer, %254
  %257 = select <8 x i1> %255, <8 x i32> %256, <8 x i32> %254
  %258 = add nuw nsw <8 x i32> %257, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %259 = lshr <8 x i32> %258, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %260 = icmp ult <8 x i32> %259, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %261 = select <8 x i1> %260, <8 x i32> %259, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %262 = trunc <8 x i32> %261 to <8 x i8>
  %263 = add nuw nsw <8 x i8> %262, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %264 = bitcast i8* %234 to <8 x i8>*
  store <8 x i8> %263, <8 x i8>* %264, align 1, !alias.scope !543, !noalias !545
  %265 = getelementptr inbounds i8, i8* %0, i64 112
  %266 = bitcast i8* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !538
  %268 = zext <8 x i16> %267 to <8 x i32>
  %269 = getelementptr inbounds i8, i8* %1, i64 112
  %270 = bitcast i8* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !541
  %272 = zext <8 x i16> %271 to <8 x i32>
  %273 = sub nsw <8 x i32> %268, %272
  %274 = icmp slt <8 x i32> %273, zeroinitializer
  %275 = sub nsw <8 x i32> zeroinitializer, %273
  %276 = select <8 x i1> %274, <8 x i32> %275, <8 x i32> %273
  %277 = add nuw nsw <8 x i32> %276, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %278 = lshr <8 x i32> %277, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %279 = icmp ult <8 x i32> %278, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %280 = select <8 x i1> %279, <8 x i32> %278, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %281 = trunc <8 x i32> %280 to <8 x i8>
  %282 = add nuw nsw <8 x i8> %281, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %283 = getelementptr inbounds i8, i8* %234, i64 8
  %284 = bitcast i8* %283 to <8 x i8>*
  store <8 x i8> %282, <8 x i8>* %284, align 1, !alias.scope !543, !noalias !545
  br label %306

285:                                              ; preds = %229, %285
  %286 = phi i64 [ %304, %285 ], [ 0, %229 ]
  %287 = getelementptr inbounds i16, i16* %231, i64 %286
  %288 = load i16, i16* %287, align 2
  %289 = zext i16 %288 to i32
  %290 = getelementptr inbounds i16, i16* %233, i64 %286
  %291 = load i16, i16* %290, align 2
  %292 = zext i16 %291 to i32
  %293 = sub nsw i32 %289, %292
  %294 = icmp slt i32 %293, 0
  %295 = sub nsw i32 0, %293
  %296 = select i1 %294, i32 %295, i32 %293
  %297 = add nuw nsw i32 %296, 32
  %298 = lshr i32 %297, 10
  %299 = icmp ult i32 %298, 26
  %300 = select i1 %299, i32 %298, i32 26
  %301 = trunc i32 %300 to i8
  %302 = add nuw nsw i8 %301, 38
  %303 = getelementptr inbounds i8, i8* %234, i64 %286
  store i8 %302, i8* %303, align 1
  %304 = add nuw nsw i64 %286, 1
  %305 = icmp eq i64 %304, 16
  br i1 %305, label %306, label %285, !llvm.loop !546

306:                                              ; preds = %285, %247
  %307 = getelementptr inbounds i8, i8* %0, i64 128
  %308 = bitcast i8* %307 to i16*
  %309 = getelementptr inbounds i8, i8* %1, i64 128
  %310 = bitcast i8* %309 to i16*
  %311 = getelementptr inbounds i8, i8* %234, i64 %3
  %312 = shl i64 %3, 2
  %313 = add i64 %312, 16
  %314 = getelementptr i8, i8* %2, i64 %313
  %315 = getelementptr i8, i8* %0, i64 160
  %316 = getelementptr i8, i8* %1, i64 160
  %317 = icmp ult i8* %311, %315
  %318 = icmp ult i8* %307, %314
  %319 = and i1 %317, %318
  %320 = icmp ult i8* %311, %316
  %321 = icmp ult i8* %309, %314
  %322 = and i1 %320, %321
  %323 = or i1 %319, %322
  br i1 %323, label %362, label %324

324:                                              ; preds = %306
  %325 = bitcast i8* %307 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !547
  %327 = zext <8 x i16> %326 to <8 x i32>
  %328 = bitcast i8* %309 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !550
  %330 = zext <8 x i16> %329 to <8 x i32>
  %331 = sub nsw <8 x i32> %327, %330
  %332 = icmp slt <8 x i32> %331, zeroinitializer
  %333 = sub nsw <8 x i32> zeroinitializer, %331
  %334 = select <8 x i1> %332, <8 x i32> %333, <8 x i32> %331
  %335 = add nuw nsw <8 x i32> %334, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %336 = lshr <8 x i32> %335, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %337 = icmp ult <8 x i32> %336, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %338 = select <8 x i1> %337, <8 x i32> %336, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %339 = trunc <8 x i32> %338 to <8 x i8>
  %340 = add nuw nsw <8 x i8> %339, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %341 = bitcast i8* %311 to <8 x i8>*
  store <8 x i8> %340, <8 x i8>* %341, align 1, !alias.scope !552, !noalias !554
  %342 = getelementptr inbounds i8, i8* %0, i64 144
  %343 = bitcast i8* %342 to <8 x i16>*
  %344 = load <8 x i16>, <8 x i16>* %343, align 2, !alias.scope !547
  %345 = zext <8 x i16> %344 to <8 x i32>
  %346 = getelementptr inbounds i8, i8* %1, i64 144
  %347 = bitcast i8* %346 to <8 x i16>*
  %348 = load <8 x i16>, <8 x i16>* %347, align 2, !alias.scope !550
  %349 = zext <8 x i16> %348 to <8 x i32>
  %350 = sub nsw <8 x i32> %345, %349
  %351 = icmp slt <8 x i32> %350, zeroinitializer
  %352 = sub nsw <8 x i32> zeroinitializer, %350
  %353 = select <8 x i1> %351, <8 x i32> %352, <8 x i32> %350
  %354 = add nuw nsw <8 x i32> %353, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %355 = lshr <8 x i32> %354, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %356 = icmp ult <8 x i32> %355, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %357 = select <8 x i1> %356, <8 x i32> %355, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %358 = trunc <8 x i32> %357 to <8 x i8>
  %359 = add nuw nsw <8 x i8> %358, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %360 = getelementptr inbounds i8, i8* %311, i64 8
  %361 = bitcast i8* %360 to <8 x i8>*
  store <8 x i8> %359, <8 x i8>* %361, align 1, !alias.scope !552, !noalias !554
  br label %383

362:                                              ; preds = %306, %362
  %363 = phi i64 [ %381, %362 ], [ 0, %306 ]
  %364 = getelementptr inbounds i16, i16* %308, i64 %363
  %365 = load i16, i16* %364, align 2
  %366 = zext i16 %365 to i32
  %367 = getelementptr inbounds i16, i16* %310, i64 %363
  %368 = load i16, i16* %367, align 2
  %369 = zext i16 %368 to i32
  %370 = sub nsw i32 %366, %369
  %371 = icmp slt i32 %370, 0
  %372 = sub nsw i32 0, %370
  %373 = select i1 %371, i32 %372, i32 %370
  %374 = add nuw nsw i32 %373, 32
  %375 = lshr i32 %374, 10
  %376 = icmp ult i32 %375, 26
  %377 = select i1 %376, i32 %375, i32 26
  %378 = trunc i32 %377 to i8
  %379 = add nuw nsw i8 %378, 38
  %380 = getelementptr inbounds i8, i8* %311, i64 %363
  store i8 %379, i8* %380, align 1
  %381 = add nuw nsw i64 %363, 1
  %382 = icmp eq i64 %381, 16
  br i1 %382, label %383, label %362, !llvm.loop !555

383:                                              ; preds = %362, %324
  %384 = getelementptr inbounds i8, i8* %0, i64 160
  %385 = bitcast i8* %384 to i16*
  %386 = getelementptr inbounds i8, i8* %1, i64 160
  %387 = bitcast i8* %386 to i16*
  %388 = getelementptr inbounds i8, i8* %311, i64 %3
  %389 = mul i64 %3, 5
  %390 = add i64 %389, 16
  %391 = getelementptr i8, i8* %2, i64 %390
  %392 = getelementptr i8, i8* %0, i64 192
  %393 = getelementptr i8, i8* %1, i64 192
  %394 = icmp ult i8* %388, %392
  %395 = icmp ult i8* %384, %391
  %396 = and i1 %394, %395
  %397 = icmp ult i8* %388, %393
  %398 = icmp ult i8* %386, %391
  %399 = and i1 %397, %398
  %400 = or i1 %396, %399
  br i1 %400, label %439, label %401

401:                                              ; preds = %383
  %402 = bitcast i8* %384 to <8 x i16>*
  %403 = load <8 x i16>, <8 x i16>* %402, align 2, !alias.scope !556
  %404 = zext <8 x i16> %403 to <8 x i32>
  %405 = bitcast i8* %386 to <8 x i16>*
  %406 = load <8 x i16>, <8 x i16>* %405, align 2, !alias.scope !559
  %407 = zext <8 x i16> %406 to <8 x i32>
  %408 = sub nsw <8 x i32> %404, %407
  %409 = icmp slt <8 x i32> %408, zeroinitializer
  %410 = sub nsw <8 x i32> zeroinitializer, %408
  %411 = select <8 x i1> %409, <8 x i32> %410, <8 x i32> %408
  %412 = add nuw nsw <8 x i32> %411, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %413 = lshr <8 x i32> %412, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %414 = icmp ult <8 x i32> %413, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %415 = select <8 x i1> %414, <8 x i32> %413, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %416 = trunc <8 x i32> %415 to <8 x i8>
  %417 = add nuw nsw <8 x i8> %416, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %418 = bitcast i8* %388 to <8 x i8>*
  store <8 x i8> %417, <8 x i8>* %418, align 1, !alias.scope !561, !noalias !563
  %419 = getelementptr inbounds i8, i8* %0, i64 176
  %420 = bitcast i8* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !556
  %422 = zext <8 x i16> %421 to <8 x i32>
  %423 = getelementptr inbounds i8, i8* %1, i64 176
  %424 = bitcast i8* %423 to <8 x i16>*
  %425 = load <8 x i16>, <8 x i16>* %424, align 2, !alias.scope !559
  %426 = zext <8 x i16> %425 to <8 x i32>
  %427 = sub nsw <8 x i32> %422, %426
  %428 = icmp slt <8 x i32> %427, zeroinitializer
  %429 = sub nsw <8 x i32> zeroinitializer, %427
  %430 = select <8 x i1> %428, <8 x i32> %429, <8 x i32> %427
  %431 = add nuw nsw <8 x i32> %430, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %432 = lshr <8 x i32> %431, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %433 = icmp ult <8 x i32> %432, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %434 = select <8 x i1> %433, <8 x i32> %432, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %435 = trunc <8 x i32> %434 to <8 x i8>
  %436 = add nuw nsw <8 x i8> %435, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %437 = getelementptr inbounds i8, i8* %388, i64 8
  %438 = bitcast i8* %437 to <8 x i8>*
  store <8 x i8> %436, <8 x i8>* %438, align 1, !alias.scope !561, !noalias !563
  br label %460

439:                                              ; preds = %383, %439
  %440 = phi i64 [ %458, %439 ], [ 0, %383 ]
  %441 = getelementptr inbounds i16, i16* %385, i64 %440
  %442 = load i16, i16* %441, align 2
  %443 = zext i16 %442 to i32
  %444 = getelementptr inbounds i16, i16* %387, i64 %440
  %445 = load i16, i16* %444, align 2
  %446 = zext i16 %445 to i32
  %447 = sub nsw i32 %443, %446
  %448 = icmp slt i32 %447, 0
  %449 = sub nsw i32 0, %447
  %450 = select i1 %448, i32 %449, i32 %447
  %451 = add nuw nsw i32 %450, 32
  %452 = lshr i32 %451, 10
  %453 = icmp ult i32 %452, 26
  %454 = select i1 %453, i32 %452, i32 26
  %455 = trunc i32 %454 to i8
  %456 = add nuw nsw i8 %455, 38
  %457 = getelementptr inbounds i8, i8* %388, i64 %440
  store i8 %456, i8* %457, align 1
  %458 = add nuw nsw i64 %440, 1
  %459 = icmp eq i64 %458, 16
  br i1 %459, label %460, label %439, !llvm.loop !564

460:                                              ; preds = %439, %401
  %461 = getelementptr inbounds i8, i8* %0, i64 192
  %462 = bitcast i8* %461 to i16*
  %463 = getelementptr inbounds i8, i8* %1, i64 192
  %464 = bitcast i8* %463 to i16*
  %465 = getelementptr inbounds i8, i8* %388, i64 %3
  %466 = mul i64 %3, 6
  %467 = add i64 %466, 16
  %468 = getelementptr i8, i8* %2, i64 %467
  %469 = getelementptr i8, i8* %0, i64 224
  %470 = getelementptr i8, i8* %1, i64 224
  %471 = icmp ult i8* %465, %469
  %472 = icmp ult i8* %461, %468
  %473 = and i1 %471, %472
  %474 = icmp ult i8* %465, %470
  %475 = icmp ult i8* %463, %468
  %476 = and i1 %474, %475
  %477 = or i1 %473, %476
  br i1 %477, label %516, label %478

478:                                              ; preds = %460
  %479 = bitcast i8* %461 to <8 x i16>*
  %480 = load <8 x i16>, <8 x i16>* %479, align 2, !alias.scope !565
  %481 = zext <8 x i16> %480 to <8 x i32>
  %482 = bitcast i8* %463 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !568
  %484 = zext <8 x i16> %483 to <8 x i32>
  %485 = sub nsw <8 x i32> %481, %484
  %486 = icmp slt <8 x i32> %485, zeroinitializer
  %487 = sub nsw <8 x i32> zeroinitializer, %485
  %488 = select <8 x i1> %486, <8 x i32> %487, <8 x i32> %485
  %489 = add nuw nsw <8 x i32> %488, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %490 = lshr <8 x i32> %489, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %491 = icmp ult <8 x i32> %490, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %492 = select <8 x i1> %491, <8 x i32> %490, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %493 = trunc <8 x i32> %492 to <8 x i8>
  %494 = add nuw nsw <8 x i8> %493, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %495 = bitcast i8* %465 to <8 x i8>*
  store <8 x i8> %494, <8 x i8>* %495, align 1, !alias.scope !570, !noalias !572
  %496 = getelementptr inbounds i8, i8* %0, i64 208
  %497 = bitcast i8* %496 to <8 x i16>*
  %498 = load <8 x i16>, <8 x i16>* %497, align 2, !alias.scope !565
  %499 = zext <8 x i16> %498 to <8 x i32>
  %500 = getelementptr inbounds i8, i8* %1, i64 208
  %501 = bitcast i8* %500 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !568
  %503 = zext <8 x i16> %502 to <8 x i32>
  %504 = sub nsw <8 x i32> %499, %503
  %505 = icmp slt <8 x i32> %504, zeroinitializer
  %506 = sub nsw <8 x i32> zeroinitializer, %504
  %507 = select <8 x i1> %505, <8 x i32> %506, <8 x i32> %504
  %508 = add nuw nsw <8 x i32> %507, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %509 = lshr <8 x i32> %508, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %510 = icmp ult <8 x i32> %509, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %511 = select <8 x i1> %510, <8 x i32> %509, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %512 = trunc <8 x i32> %511 to <8 x i8>
  %513 = add nuw nsw <8 x i8> %512, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %514 = getelementptr inbounds i8, i8* %465, i64 8
  %515 = bitcast i8* %514 to <8 x i8>*
  store <8 x i8> %513, <8 x i8>* %515, align 1, !alias.scope !570, !noalias !572
  br label %537

516:                                              ; preds = %460, %516
  %517 = phi i64 [ %535, %516 ], [ 0, %460 ]
  %518 = getelementptr inbounds i16, i16* %462, i64 %517
  %519 = load i16, i16* %518, align 2
  %520 = zext i16 %519 to i32
  %521 = getelementptr inbounds i16, i16* %464, i64 %517
  %522 = load i16, i16* %521, align 2
  %523 = zext i16 %522 to i32
  %524 = sub nsw i32 %520, %523
  %525 = icmp slt i32 %524, 0
  %526 = sub nsw i32 0, %524
  %527 = select i1 %525, i32 %526, i32 %524
  %528 = add nuw nsw i32 %527, 32
  %529 = lshr i32 %528, 10
  %530 = icmp ult i32 %529, 26
  %531 = select i1 %530, i32 %529, i32 26
  %532 = trunc i32 %531 to i8
  %533 = add nuw nsw i8 %532, 38
  %534 = getelementptr inbounds i8, i8* %465, i64 %517
  store i8 %533, i8* %534, align 1
  %535 = add nuw nsw i64 %517, 1
  %536 = icmp eq i64 %535, 16
  br i1 %536, label %537, label %516, !llvm.loop !573

537:                                              ; preds = %516, %478
  %538 = getelementptr inbounds i8, i8* %0, i64 224
  %539 = bitcast i8* %538 to i16*
  %540 = getelementptr inbounds i8, i8* %1, i64 224
  %541 = bitcast i8* %540 to i16*
  %542 = getelementptr inbounds i8, i8* %465, i64 %3
  %543 = mul i64 %3, 7
  %544 = add i64 %543, 16
  %545 = getelementptr i8, i8* %2, i64 %544
  %546 = getelementptr i8, i8* %0, i64 256
  %547 = getelementptr i8, i8* %1, i64 256
  %548 = icmp ult i8* %542, %546
  %549 = icmp ult i8* %538, %545
  %550 = and i1 %548, %549
  %551 = icmp ult i8* %542, %547
  %552 = icmp ult i8* %540, %545
  %553 = and i1 %551, %552
  %554 = or i1 %550, %553
  br i1 %554, label %593, label %555

555:                                              ; preds = %537
  %556 = bitcast i8* %538 to <8 x i16>*
  %557 = load <8 x i16>, <8 x i16>* %556, align 2, !alias.scope !574
  %558 = zext <8 x i16> %557 to <8 x i32>
  %559 = bitcast i8* %540 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !577
  %561 = zext <8 x i16> %560 to <8 x i32>
  %562 = sub nsw <8 x i32> %558, %561
  %563 = icmp slt <8 x i32> %562, zeroinitializer
  %564 = sub nsw <8 x i32> zeroinitializer, %562
  %565 = select <8 x i1> %563, <8 x i32> %564, <8 x i32> %562
  %566 = add nuw nsw <8 x i32> %565, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %567 = lshr <8 x i32> %566, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %568 = icmp ult <8 x i32> %567, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %569 = select <8 x i1> %568, <8 x i32> %567, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %570 = trunc <8 x i32> %569 to <8 x i8>
  %571 = add nuw nsw <8 x i8> %570, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %572 = bitcast i8* %542 to <8 x i8>*
  store <8 x i8> %571, <8 x i8>* %572, align 1, !alias.scope !579, !noalias !581
  %573 = getelementptr inbounds i8, i8* %0, i64 240
  %574 = bitcast i8* %573 to <8 x i16>*
  %575 = load <8 x i16>, <8 x i16>* %574, align 2, !alias.scope !574
  %576 = zext <8 x i16> %575 to <8 x i32>
  %577 = getelementptr inbounds i8, i8* %1, i64 240
  %578 = bitcast i8* %577 to <8 x i16>*
  %579 = load <8 x i16>, <8 x i16>* %578, align 2, !alias.scope !577
  %580 = zext <8 x i16> %579 to <8 x i32>
  %581 = sub nsw <8 x i32> %576, %580
  %582 = icmp slt <8 x i32> %581, zeroinitializer
  %583 = sub nsw <8 x i32> zeroinitializer, %581
  %584 = select <8 x i1> %582, <8 x i32> %583, <8 x i32> %581
  %585 = add nuw nsw <8 x i32> %584, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %586 = lshr <8 x i32> %585, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %587 = icmp ult <8 x i32> %586, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %588 = select <8 x i1> %587, <8 x i32> %586, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %589 = trunc <8 x i32> %588 to <8 x i8>
  %590 = add nuw nsw <8 x i8> %589, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %591 = getelementptr inbounds i8, i8* %542, i64 8
  %592 = bitcast i8* %591 to <8 x i8>*
  store <8 x i8> %590, <8 x i8>* %592, align 1, !alias.scope !579, !noalias !581
  br label %614

593:                                              ; preds = %537, %593
  %594 = phi i64 [ %612, %593 ], [ 0, %537 ]
  %595 = getelementptr inbounds i16, i16* %539, i64 %594
  %596 = load i16, i16* %595, align 2
  %597 = zext i16 %596 to i32
  %598 = getelementptr inbounds i16, i16* %541, i64 %594
  %599 = load i16, i16* %598, align 2
  %600 = zext i16 %599 to i32
  %601 = sub nsw i32 %597, %600
  %602 = icmp slt i32 %601, 0
  %603 = sub nsw i32 0, %601
  %604 = select i1 %602, i32 %603, i32 %601
  %605 = add nuw nsw i32 %604, 32
  %606 = lshr i32 %605, 10
  %607 = icmp ult i32 %606, 26
  %608 = select i1 %607, i32 %606, i32 26
  %609 = trunc i32 %608 to i8
  %610 = add nuw nsw i8 %609, 38
  %611 = getelementptr inbounds i8, i8* %542, i64 %594
  store i8 %610, i8* %611, align 1
  %612 = add nuw nsw i64 %594, 1
  %613 = icmp eq i64 %612, 16
  br i1 %613, label %614, label %593, !llvm.loop !582

614:                                              ; preds = %593, %555
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi8ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  %7 = getelementptr i8, i8* %2, i64 16
  %8 = getelementptr i8, i8* %0, i64 32
  %9 = getelementptr i8, i8* %1, i64 32
  %10 = icmp ugt i8* %8, %2
  %11 = icmp ugt i8* %7, %0
  %12 = and i1 %10, %11
  %13 = icmp ugt i8* %9, %2
  %14 = icmp ugt i8* %7, %1
  %15 = and i1 %13, %14
  %16 = or i1 %12, %15
  br i1 %16, label %110, label %17

17:                                               ; preds = %4
  %18 = bitcast i8* %0 to <8 x i16>*
  %19 = load <8 x i16>, <8 x i16>* %18, align 2, !alias.scope !583
  %20 = zext <8 x i16> %19 to <8 x i32>
  %21 = bitcast i8* %1 to <8 x i16>*
  %22 = load <8 x i16>, <8 x i16>* %21, align 2, !alias.scope !586
  %23 = zext <8 x i16> %22 to <8 x i32>
  %24 = sub nsw <8 x i32> %20, %23
  %25 = icmp slt <8 x i32> %24, zeroinitializer
  %26 = sub nsw <8 x i32> zeroinitializer, %24
  %27 = select <8 x i1> %25, <8 x i32> %26, <8 x i32> %24
  %28 = add nuw nsw <8 x i32> %27, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %29 = lshr <8 x i32> %28, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %30 = icmp ult <8 x i32> %29, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %31 = select <8 x i1> %30, <8 x i32> %29, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %32 = trunc <8 x i32> %31 to <8 x i8>
  %33 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %32
  %34 = bitcast i8* %2 to <8 x i8>*
  store <8 x i8> %33, <8 x i8>* %34, align 1, !alias.scope !588, !noalias !590
  %35 = getelementptr inbounds i8, i8* %0, i64 16
  %36 = bitcast i8* %35 to <8 x i16>*
  %37 = load <8 x i16>, <8 x i16>* %36, align 2, !alias.scope !583
  %38 = zext <8 x i16> %37 to <8 x i32>
  %39 = getelementptr inbounds i8, i8* %1, i64 16
  %40 = bitcast i8* %39 to <8 x i16>*
  %41 = load <8 x i16>, <8 x i16>* %40, align 2, !alias.scope !586
  %42 = zext <8 x i16> %41 to <8 x i32>
  %43 = sub nsw <8 x i32> %38, %42
  %44 = icmp slt <8 x i32> %43, zeroinitializer
  %45 = sub nsw <8 x i32> zeroinitializer, %43
  %46 = select <8 x i1> %44, <8 x i32> %45, <8 x i32> %43
  %47 = add nuw nsw <8 x i32> %46, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %48 = lshr <8 x i32> %47, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %49 = icmp ult <8 x i32> %48, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %50 = select <8 x i1> %49, <8 x i32> %48, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %51 = trunc <8 x i32> %50 to <8 x i8>
  %52 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %51
  %53 = getelementptr inbounds i8, i8* %2, i64 8
  %54 = bitcast i8* %53 to <8 x i8>*
  store <8 x i8> %52, <8 x i8>* %54, align 1, !alias.scope !588, !noalias !590
  br label %55

55:                                               ; preds = %110, %17
  %56 = getelementptr inbounds i8, i8* %0, i64 32
  %57 = bitcast i8* %56 to i16*
  %58 = getelementptr inbounds i8, i8* %1, i64 32
  %59 = bitcast i8* %58 to i16*
  %60 = getelementptr inbounds i8, i8* %2, i64 %3
  %61 = add i64 %3, 16
  %62 = getelementptr i8, i8* %2, i64 %61
  %63 = getelementptr i8, i8* %0, i64 64
  %64 = getelementptr i8, i8* %1, i64 64
  %65 = icmp ult i8* %60, %63
  %66 = icmp ult i8* %56, %62
  %67 = and i1 %65, %66
  %68 = icmp ult i8* %60, %64
  %69 = icmp ult i8* %58, %62
  %70 = and i1 %68, %69
  %71 = or i1 %67, %70
  br i1 %71, label %131, label %72

72:                                               ; preds = %55
  %73 = bitcast i8* %56 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !591
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = bitcast i8* %58 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !594
  %78 = zext <8 x i16> %77 to <8 x i32>
  %79 = sub nsw <8 x i32> %75, %78
  %80 = icmp slt <8 x i32> %79, zeroinitializer
  %81 = sub nsw <8 x i32> zeroinitializer, %79
  %82 = select <8 x i1> %80, <8 x i32> %81, <8 x i32> %79
  %83 = add nuw nsw <8 x i32> %82, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %84 = lshr <8 x i32> %83, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %85 = icmp ult <8 x i32> %84, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %86 = select <8 x i1> %85, <8 x i32> %84, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %87 = trunc <8 x i32> %86 to <8 x i8>
  %88 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %87
  %89 = bitcast i8* %60 to <8 x i8>*
  store <8 x i8> %88, <8 x i8>* %89, align 1, !alias.scope !596, !noalias !598
  %90 = getelementptr inbounds i8, i8* %0, i64 48
  %91 = bitcast i8* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !591
  %93 = zext <8 x i16> %92 to <8 x i32>
  %94 = getelementptr inbounds i8, i8* %1, i64 48
  %95 = bitcast i8* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !594
  %97 = zext <8 x i16> %96 to <8 x i32>
  %98 = sub nsw <8 x i32> %93, %97
  %99 = icmp slt <8 x i32> %98, zeroinitializer
  %100 = sub nsw <8 x i32> zeroinitializer, %98
  %101 = select <8 x i1> %99, <8 x i32> %100, <8 x i32> %98
  %102 = add nuw nsw <8 x i32> %101, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %103 = lshr <8 x i32> %102, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %104 = icmp ult <8 x i32> %103, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %105 = select <8 x i1> %104, <8 x i32> %103, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %106 = trunc <8 x i32> %105 to <8 x i8>
  %107 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %106
  %108 = getelementptr inbounds i8, i8* %60, i64 8
  %109 = bitcast i8* %108 to <8 x i8>*
  store <8 x i8> %107, <8 x i8>* %109, align 1, !alias.scope !596, !noalias !598
  br label %152

110:                                              ; preds = %4, %110
  %111 = phi i64 [ %129, %110 ], [ 0, %4 ]
  %112 = getelementptr inbounds i16, i16* %5, i64 %111
  %113 = load i16, i16* %112, align 2
  %114 = zext i16 %113 to i32
  %115 = getelementptr inbounds i16, i16* %6, i64 %111
  %116 = load i16, i16* %115, align 2
  %117 = zext i16 %116 to i32
  %118 = sub nsw i32 %114, %117
  %119 = icmp slt i32 %118, 0
  %120 = sub nsw i32 0, %118
  %121 = select i1 %119, i32 %120, i32 %118
  %122 = add nuw nsw i32 %121, 32
  %123 = lshr i32 %122, 10
  %124 = icmp ult i32 %123, 26
  %125 = select i1 %124, i32 %123, i32 26
  %126 = trunc i32 %125 to i8
  %127 = sub nuw nsw i8 26, %126
  %128 = getelementptr inbounds i8, i8* %2, i64 %111
  store i8 %127, i8* %128, align 1
  %129 = add nuw nsw i64 %111, 1
  %130 = icmp eq i64 %129, 16
  br i1 %130, label %55, label %110, !llvm.loop !599

131:                                              ; preds = %55, %131
  %132 = phi i64 [ %150, %131 ], [ 0, %55 ]
  %133 = getelementptr inbounds i16, i16* %57, i64 %132
  %134 = load i16, i16* %133, align 2
  %135 = zext i16 %134 to i32
  %136 = getelementptr inbounds i16, i16* %59, i64 %132
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  %139 = sub nsw i32 %135, %138
  %140 = icmp slt i32 %139, 0
  %141 = sub nsw i32 0, %139
  %142 = select i1 %140, i32 %141, i32 %139
  %143 = add nuw nsw i32 %142, 32
  %144 = lshr i32 %143, 10
  %145 = icmp ult i32 %144, 26
  %146 = select i1 %145, i32 %144, i32 26
  %147 = trunc i32 %146 to i8
  %148 = sub nuw nsw i8 26, %147
  %149 = getelementptr inbounds i8, i8* %60, i64 %132
  store i8 %148, i8* %149, align 1
  %150 = add nuw nsw i64 %132, 1
  %151 = icmp eq i64 %150, 16
  br i1 %151, label %152, label %131, !llvm.loop !600

152:                                              ; preds = %131, %72
  %153 = getelementptr inbounds i8, i8* %0, i64 64
  %154 = bitcast i8* %153 to i16*
  %155 = getelementptr inbounds i8, i8* %1, i64 64
  %156 = bitcast i8* %155 to i16*
  %157 = getelementptr inbounds i8, i8* %60, i64 %3
  %158 = shl i64 %3, 1
  %159 = add i64 %158, 16
  %160 = getelementptr i8, i8* %2, i64 %159
  %161 = getelementptr i8, i8* %0, i64 96
  %162 = getelementptr i8, i8* %1, i64 96
  %163 = icmp ult i8* %157, %161
  %164 = icmp ult i8* %153, %160
  %165 = and i1 %163, %164
  %166 = icmp ult i8* %157, %162
  %167 = icmp ult i8* %155, %160
  %168 = and i1 %166, %167
  %169 = or i1 %165, %168
  br i1 %169, label %208, label %170

170:                                              ; preds = %152
  %171 = bitcast i8* %153 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !601
  %173 = zext <8 x i16> %172 to <8 x i32>
  %174 = bitcast i8* %155 to <8 x i16>*
  %175 = load <8 x i16>, <8 x i16>* %174, align 2, !alias.scope !604
  %176 = zext <8 x i16> %175 to <8 x i32>
  %177 = sub nsw <8 x i32> %173, %176
  %178 = icmp slt <8 x i32> %177, zeroinitializer
  %179 = sub nsw <8 x i32> zeroinitializer, %177
  %180 = select <8 x i1> %178, <8 x i32> %179, <8 x i32> %177
  %181 = add nuw nsw <8 x i32> %180, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %182 = lshr <8 x i32> %181, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %183 = icmp ult <8 x i32> %182, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = select <8 x i1> %183, <8 x i32> %182, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %185 = trunc <8 x i32> %184 to <8 x i8>
  %186 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %185
  %187 = bitcast i8* %157 to <8 x i8>*
  store <8 x i8> %186, <8 x i8>* %187, align 1, !alias.scope !606, !noalias !608
  %188 = getelementptr inbounds i8, i8* %0, i64 80
  %189 = bitcast i8* %188 to <8 x i16>*
  %190 = load <8 x i16>, <8 x i16>* %189, align 2, !alias.scope !601
  %191 = zext <8 x i16> %190 to <8 x i32>
  %192 = getelementptr inbounds i8, i8* %1, i64 80
  %193 = bitcast i8* %192 to <8 x i16>*
  %194 = load <8 x i16>, <8 x i16>* %193, align 2, !alias.scope !604
  %195 = zext <8 x i16> %194 to <8 x i32>
  %196 = sub nsw <8 x i32> %191, %195
  %197 = icmp slt <8 x i32> %196, zeroinitializer
  %198 = sub nsw <8 x i32> zeroinitializer, %196
  %199 = select <8 x i1> %197, <8 x i32> %198, <8 x i32> %196
  %200 = add nuw nsw <8 x i32> %199, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %201 = lshr <8 x i32> %200, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %202 = icmp ult <8 x i32> %201, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %203 = select <8 x i1> %202, <8 x i32> %201, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %204 = trunc <8 x i32> %203 to <8 x i8>
  %205 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %204
  %206 = getelementptr inbounds i8, i8* %157, i64 8
  %207 = bitcast i8* %206 to <8 x i8>*
  store <8 x i8> %205, <8 x i8>* %207, align 1, !alias.scope !606, !noalias !608
  br label %229

208:                                              ; preds = %152, %208
  %209 = phi i64 [ %227, %208 ], [ 0, %152 ]
  %210 = getelementptr inbounds i16, i16* %154, i64 %209
  %211 = load i16, i16* %210, align 2
  %212 = zext i16 %211 to i32
  %213 = getelementptr inbounds i16, i16* %156, i64 %209
  %214 = load i16, i16* %213, align 2
  %215 = zext i16 %214 to i32
  %216 = sub nsw i32 %212, %215
  %217 = icmp slt i32 %216, 0
  %218 = sub nsw i32 0, %216
  %219 = select i1 %217, i32 %218, i32 %216
  %220 = add nuw nsw i32 %219, 32
  %221 = lshr i32 %220, 10
  %222 = icmp ult i32 %221, 26
  %223 = select i1 %222, i32 %221, i32 26
  %224 = trunc i32 %223 to i8
  %225 = sub nuw nsw i8 26, %224
  %226 = getelementptr inbounds i8, i8* %157, i64 %209
  store i8 %225, i8* %226, align 1
  %227 = add nuw nsw i64 %209, 1
  %228 = icmp eq i64 %227, 16
  br i1 %228, label %229, label %208, !llvm.loop !609

229:                                              ; preds = %208, %170
  %230 = getelementptr inbounds i8, i8* %0, i64 96
  %231 = bitcast i8* %230 to i16*
  %232 = getelementptr inbounds i8, i8* %1, i64 96
  %233 = bitcast i8* %232 to i16*
  %234 = getelementptr inbounds i8, i8* %157, i64 %3
  %235 = mul i64 %3, 3
  %236 = add i64 %235, 16
  %237 = getelementptr i8, i8* %2, i64 %236
  %238 = getelementptr i8, i8* %0, i64 128
  %239 = getelementptr i8, i8* %1, i64 128
  %240 = icmp ult i8* %234, %238
  %241 = icmp ult i8* %230, %237
  %242 = and i1 %240, %241
  %243 = icmp ult i8* %234, %239
  %244 = icmp ult i8* %232, %237
  %245 = and i1 %243, %244
  %246 = or i1 %242, %245
  br i1 %246, label %285, label %247

247:                                              ; preds = %229
  %248 = bitcast i8* %230 to <8 x i16>*
  %249 = load <8 x i16>, <8 x i16>* %248, align 2, !alias.scope !610
  %250 = zext <8 x i16> %249 to <8 x i32>
  %251 = bitcast i8* %232 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !613
  %253 = zext <8 x i16> %252 to <8 x i32>
  %254 = sub nsw <8 x i32> %250, %253
  %255 = icmp slt <8 x i32> %254, zeroinitializer
  %256 = sub nsw <8 x i32> zeroinitializer, %254
  %257 = select <8 x i1> %255, <8 x i32> %256, <8 x i32> %254
  %258 = add nuw nsw <8 x i32> %257, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %259 = lshr <8 x i32> %258, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %260 = icmp ult <8 x i32> %259, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %261 = select <8 x i1> %260, <8 x i32> %259, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %262 = trunc <8 x i32> %261 to <8 x i8>
  %263 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %262
  %264 = bitcast i8* %234 to <8 x i8>*
  store <8 x i8> %263, <8 x i8>* %264, align 1, !alias.scope !615, !noalias !617
  %265 = getelementptr inbounds i8, i8* %0, i64 112
  %266 = bitcast i8* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !610
  %268 = zext <8 x i16> %267 to <8 x i32>
  %269 = getelementptr inbounds i8, i8* %1, i64 112
  %270 = bitcast i8* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !613
  %272 = zext <8 x i16> %271 to <8 x i32>
  %273 = sub nsw <8 x i32> %268, %272
  %274 = icmp slt <8 x i32> %273, zeroinitializer
  %275 = sub nsw <8 x i32> zeroinitializer, %273
  %276 = select <8 x i1> %274, <8 x i32> %275, <8 x i32> %273
  %277 = add nuw nsw <8 x i32> %276, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %278 = lshr <8 x i32> %277, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %279 = icmp ult <8 x i32> %278, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %280 = select <8 x i1> %279, <8 x i32> %278, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %281 = trunc <8 x i32> %280 to <8 x i8>
  %282 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %281
  %283 = getelementptr inbounds i8, i8* %234, i64 8
  %284 = bitcast i8* %283 to <8 x i8>*
  store <8 x i8> %282, <8 x i8>* %284, align 1, !alias.scope !615, !noalias !617
  br label %306

285:                                              ; preds = %229, %285
  %286 = phi i64 [ %304, %285 ], [ 0, %229 ]
  %287 = getelementptr inbounds i16, i16* %231, i64 %286
  %288 = load i16, i16* %287, align 2
  %289 = zext i16 %288 to i32
  %290 = getelementptr inbounds i16, i16* %233, i64 %286
  %291 = load i16, i16* %290, align 2
  %292 = zext i16 %291 to i32
  %293 = sub nsw i32 %289, %292
  %294 = icmp slt i32 %293, 0
  %295 = sub nsw i32 0, %293
  %296 = select i1 %294, i32 %295, i32 %293
  %297 = add nuw nsw i32 %296, 32
  %298 = lshr i32 %297, 10
  %299 = icmp ult i32 %298, 26
  %300 = select i1 %299, i32 %298, i32 26
  %301 = trunc i32 %300 to i8
  %302 = sub nuw nsw i8 26, %301
  %303 = getelementptr inbounds i8, i8* %234, i64 %286
  store i8 %302, i8* %303, align 1
  %304 = add nuw nsw i64 %286, 1
  %305 = icmp eq i64 %304, 16
  br i1 %305, label %306, label %285, !llvm.loop !618

306:                                              ; preds = %285, %247
  %307 = getelementptr inbounds i8, i8* %0, i64 128
  %308 = bitcast i8* %307 to i16*
  %309 = getelementptr inbounds i8, i8* %1, i64 128
  %310 = bitcast i8* %309 to i16*
  %311 = getelementptr inbounds i8, i8* %234, i64 %3
  %312 = shl i64 %3, 2
  %313 = add i64 %312, 16
  %314 = getelementptr i8, i8* %2, i64 %313
  %315 = getelementptr i8, i8* %0, i64 160
  %316 = getelementptr i8, i8* %1, i64 160
  %317 = icmp ult i8* %311, %315
  %318 = icmp ult i8* %307, %314
  %319 = and i1 %317, %318
  %320 = icmp ult i8* %311, %316
  %321 = icmp ult i8* %309, %314
  %322 = and i1 %320, %321
  %323 = or i1 %319, %322
  br i1 %323, label %362, label %324

324:                                              ; preds = %306
  %325 = bitcast i8* %307 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !619
  %327 = zext <8 x i16> %326 to <8 x i32>
  %328 = bitcast i8* %309 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !622
  %330 = zext <8 x i16> %329 to <8 x i32>
  %331 = sub nsw <8 x i32> %327, %330
  %332 = icmp slt <8 x i32> %331, zeroinitializer
  %333 = sub nsw <8 x i32> zeroinitializer, %331
  %334 = select <8 x i1> %332, <8 x i32> %333, <8 x i32> %331
  %335 = add nuw nsw <8 x i32> %334, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %336 = lshr <8 x i32> %335, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %337 = icmp ult <8 x i32> %336, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %338 = select <8 x i1> %337, <8 x i32> %336, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %339 = trunc <8 x i32> %338 to <8 x i8>
  %340 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %339
  %341 = bitcast i8* %311 to <8 x i8>*
  store <8 x i8> %340, <8 x i8>* %341, align 1, !alias.scope !624, !noalias !626
  %342 = getelementptr inbounds i8, i8* %0, i64 144
  %343 = bitcast i8* %342 to <8 x i16>*
  %344 = load <8 x i16>, <8 x i16>* %343, align 2, !alias.scope !619
  %345 = zext <8 x i16> %344 to <8 x i32>
  %346 = getelementptr inbounds i8, i8* %1, i64 144
  %347 = bitcast i8* %346 to <8 x i16>*
  %348 = load <8 x i16>, <8 x i16>* %347, align 2, !alias.scope !622
  %349 = zext <8 x i16> %348 to <8 x i32>
  %350 = sub nsw <8 x i32> %345, %349
  %351 = icmp slt <8 x i32> %350, zeroinitializer
  %352 = sub nsw <8 x i32> zeroinitializer, %350
  %353 = select <8 x i1> %351, <8 x i32> %352, <8 x i32> %350
  %354 = add nuw nsw <8 x i32> %353, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %355 = lshr <8 x i32> %354, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %356 = icmp ult <8 x i32> %355, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %357 = select <8 x i1> %356, <8 x i32> %355, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %358 = trunc <8 x i32> %357 to <8 x i8>
  %359 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %358
  %360 = getelementptr inbounds i8, i8* %311, i64 8
  %361 = bitcast i8* %360 to <8 x i8>*
  store <8 x i8> %359, <8 x i8>* %361, align 1, !alias.scope !624, !noalias !626
  br label %383

362:                                              ; preds = %306, %362
  %363 = phi i64 [ %381, %362 ], [ 0, %306 ]
  %364 = getelementptr inbounds i16, i16* %308, i64 %363
  %365 = load i16, i16* %364, align 2
  %366 = zext i16 %365 to i32
  %367 = getelementptr inbounds i16, i16* %310, i64 %363
  %368 = load i16, i16* %367, align 2
  %369 = zext i16 %368 to i32
  %370 = sub nsw i32 %366, %369
  %371 = icmp slt i32 %370, 0
  %372 = sub nsw i32 0, %370
  %373 = select i1 %371, i32 %372, i32 %370
  %374 = add nuw nsw i32 %373, 32
  %375 = lshr i32 %374, 10
  %376 = icmp ult i32 %375, 26
  %377 = select i1 %376, i32 %375, i32 26
  %378 = trunc i32 %377 to i8
  %379 = sub nuw nsw i8 26, %378
  %380 = getelementptr inbounds i8, i8* %311, i64 %363
  store i8 %379, i8* %380, align 1
  %381 = add nuw nsw i64 %363, 1
  %382 = icmp eq i64 %381, 16
  br i1 %382, label %383, label %362, !llvm.loop !627

383:                                              ; preds = %362, %324
  %384 = getelementptr inbounds i8, i8* %0, i64 160
  %385 = bitcast i8* %384 to i16*
  %386 = getelementptr inbounds i8, i8* %1, i64 160
  %387 = bitcast i8* %386 to i16*
  %388 = getelementptr inbounds i8, i8* %311, i64 %3
  %389 = mul i64 %3, 5
  %390 = add i64 %389, 16
  %391 = getelementptr i8, i8* %2, i64 %390
  %392 = getelementptr i8, i8* %0, i64 192
  %393 = getelementptr i8, i8* %1, i64 192
  %394 = icmp ult i8* %388, %392
  %395 = icmp ult i8* %384, %391
  %396 = and i1 %394, %395
  %397 = icmp ult i8* %388, %393
  %398 = icmp ult i8* %386, %391
  %399 = and i1 %397, %398
  %400 = or i1 %396, %399
  br i1 %400, label %439, label %401

401:                                              ; preds = %383
  %402 = bitcast i8* %384 to <8 x i16>*
  %403 = load <8 x i16>, <8 x i16>* %402, align 2, !alias.scope !628
  %404 = zext <8 x i16> %403 to <8 x i32>
  %405 = bitcast i8* %386 to <8 x i16>*
  %406 = load <8 x i16>, <8 x i16>* %405, align 2, !alias.scope !631
  %407 = zext <8 x i16> %406 to <8 x i32>
  %408 = sub nsw <8 x i32> %404, %407
  %409 = icmp slt <8 x i32> %408, zeroinitializer
  %410 = sub nsw <8 x i32> zeroinitializer, %408
  %411 = select <8 x i1> %409, <8 x i32> %410, <8 x i32> %408
  %412 = add nuw nsw <8 x i32> %411, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %413 = lshr <8 x i32> %412, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %414 = icmp ult <8 x i32> %413, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %415 = select <8 x i1> %414, <8 x i32> %413, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %416 = trunc <8 x i32> %415 to <8 x i8>
  %417 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %416
  %418 = bitcast i8* %388 to <8 x i8>*
  store <8 x i8> %417, <8 x i8>* %418, align 1, !alias.scope !633, !noalias !635
  %419 = getelementptr inbounds i8, i8* %0, i64 176
  %420 = bitcast i8* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !628
  %422 = zext <8 x i16> %421 to <8 x i32>
  %423 = getelementptr inbounds i8, i8* %1, i64 176
  %424 = bitcast i8* %423 to <8 x i16>*
  %425 = load <8 x i16>, <8 x i16>* %424, align 2, !alias.scope !631
  %426 = zext <8 x i16> %425 to <8 x i32>
  %427 = sub nsw <8 x i32> %422, %426
  %428 = icmp slt <8 x i32> %427, zeroinitializer
  %429 = sub nsw <8 x i32> zeroinitializer, %427
  %430 = select <8 x i1> %428, <8 x i32> %429, <8 x i32> %427
  %431 = add nuw nsw <8 x i32> %430, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %432 = lshr <8 x i32> %431, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %433 = icmp ult <8 x i32> %432, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %434 = select <8 x i1> %433, <8 x i32> %432, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %435 = trunc <8 x i32> %434 to <8 x i8>
  %436 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %435
  %437 = getelementptr inbounds i8, i8* %388, i64 8
  %438 = bitcast i8* %437 to <8 x i8>*
  store <8 x i8> %436, <8 x i8>* %438, align 1, !alias.scope !633, !noalias !635
  br label %460

439:                                              ; preds = %383, %439
  %440 = phi i64 [ %458, %439 ], [ 0, %383 ]
  %441 = getelementptr inbounds i16, i16* %385, i64 %440
  %442 = load i16, i16* %441, align 2
  %443 = zext i16 %442 to i32
  %444 = getelementptr inbounds i16, i16* %387, i64 %440
  %445 = load i16, i16* %444, align 2
  %446 = zext i16 %445 to i32
  %447 = sub nsw i32 %443, %446
  %448 = icmp slt i32 %447, 0
  %449 = sub nsw i32 0, %447
  %450 = select i1 %448, i32 %449, i32 %447
  %451 = add nuw nsw i32 %450, 32
  %452 = lshr i32 %451, 10
  %453 = icmp ult i32 %452, 26
  %454 = select i1 %453, i32 %452, i32 26
  %455 = trunc i32 %454 to i8
  %456 = sub nuw nsw i8 26, %455
  %457 = getelementptr inbounds i8, i8* %388, i64 %440
  store i8 %456, i8* %457, align 1
  %458 = add nuw nsw i64 %440, 1
  %459 = icmp eq i64 %458, 16
  br i1 %459, label %460, label %439, !llvm.loop !636

460:                                              ; preds = %439, %401
  %461 = getelementptr inbounds i8, i8* %0, i64 192
  %462 = bitcast i8* %461 to i16*
  %463 = getelementptr inbounds i8, i8* %1, i64 192
  %464 = bitcast i8* %463 to i16*
  %465 = getelementptr inbounds i8, i8* %388, i64 %3
  %466 = mul i64 %3, 6
  %467 = add i64 %466, 16
  %468 = getelementptr i8, i8* %2, i64 %467
  %469 = getelementptr i8, i8* %0, i64 224
  %470 = getelementptr i8, i8* %1, i64 224
  %471 = icmp ult i8* %465, %469
  %472 = icmp ult i8* %461, %468
  %473 = and i1 %471, %472
  %474 = icmp ult i8* %465, %470
  %475 = icmp ult i8* %463, %468
  %476 = and i1 %474, %475
  %477 = or i1 %473, %476
  br i1 %477, label %516, label %478

478:                                              ; preds = %460
  %479 = bitcast i8* %461 to <8 x i16>*
  %480 = load <8 x i16>, <8 x i16>* %479, align 2, !alias.scope !637
  %481 = zext <8 x i16> %480 to <8 x i32>
  %482 = bitcast i8* %463 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !640
  %484 = zext <8 x i16> %483 to <8 x i32>
  %485 = sub nsw <8 x i32> %481, %484
  %486 = icmp slt <8 x i32> %485, zeroinitializer
  %487 = sub nsw <8 x i32> zeroinitializer, %485
  %488 = select <8 x i1> %486, <8 x i32> %487, <8 x i32> %485
  %489 = add nuw nsw <8 x i32> %488, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %490 = lshr <8 x i32> %489, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %491 = icmp ult <8 x i32> %490, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %492 = select <8 x i1> %491, <8 x i32> %490, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %493 = trunc <8 x i32> %492 to <8 x i8>
  %494 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %493
  %495 = bitcast i8* %465 to <8 x i8>*
  store <8 x i8> %494, <8 x i8>* %495, align 1, !alias.scope !642, !noalias !644
  %496 = getelementptr inbounds i8, i8* %0, i64 208
  %497 = bitcast i8* %496 to <8 x i16>*
  %498 = load <8 x i16>, <8 x i16>* %497, align 2, !alias.scope !637
  %499 = zext <8 x i16> %498 to <8 x i32>
  %500 = getelementptr inbounds i8, i8* %1, i64 208
  %501 = bitcast i8* %500 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !640
  %503 = zext <8 x i16> %502 to <8 x i32>
  %504 = sub nsw <8 x i32> %499, %503
  %505 = icmp slt <8 x i32> %504, zeroinitializer
  %506 = sub nsw <8 x i32> zeroinitializer, %504
  %507 = select <8 x i1> %505, <8 x i32> %506, <8 x i32> %504
  %508 = add nuw nsw <8 x i32> %507, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %509 = lshr <8 x i32> %508, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %510 = icmp ult <8 x i32> %509, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %511 = select <8 x i1> %510, <8 x i32> %509, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %512 = trunc <8 x i32> %511 to <8 x i8>
  %513 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %512
  %514 = getelementptr inbounds i8, i8* %465, i64 8
  %515 = bitcast i8* %514 to <8 x i8>*
  store <8 x i8> %513, <8 x i8>* %515, align 1, !alias.scope !642, !noalias !644
  br label %537

516:                                              ; preds = %460, %516
  %517 = phi i64 [ %535, %516 ], [ 0, %460 ]
  %518 = getelementptr inbounds i16, i16* %462, i64 %517
  %519 = load i16, i16* %518, align 2
  %520 = zext i16 %519 to i32
  %521 = getelementptr inbounds i16, i16* %464, i64 %517
  %522 = load i16, i16* %521, align 2
  %523 = zext i16 %522 to i32
  %524 = sub nsw i32 %520, %523
  %525 = icmp slt i32 %524, 0
  %526 = sub nsw i32 0, %524
  %527 = select i1 %525, i32 %526, i32 %524
  %528 = add nuw nsw i32 %527, 32
  %529 = lshr i32 %528, 10
  %530 = icmp ult i32 %529, 26
  %531 = select i1 %530, i32 %529, i32 26
  %532 = trunc i32 %531 to i8
  %533 = sub nuw nsw i8 26, %532
  %534 = getelementptr inbounds i8, i8* %465, i64 %517
  store i8 %533, i8* %534, align 1
  %535 = add nuw nsw i64 %517, 1
  %536 = icmp eq i64 %535, 16
  br i1 %536, label %537, label %516, !llvm.loop !645

537:                                              ; preds = %516, %478
  %538 = getelementptr inbounds i8, i8* %0, i64 224
  %539 = bitcast i8* %538 to i16*
  %540 = getelementptr inbounds i8, i8* %1, i64 224
  %541 = bitcast i8* %540 to i16*
  %542 = getelementptr inbounds i8, i8* %465, i64 %3
  %543 = mul i64 %3, 7
  %544 = add i64 %543, 16
  %545 = getelementptr i8, i8* %2, i64 %544
  %546 = getelementptr i8, i8* %0, i64 256
  %547 = getelementptr i8, i8* %1, i64 256
  %548 = icmp ult i8* %542, %546
  %549 = icmp ult i8* %538, %545
  %550 = and i1 %548, %549
  %551 = icmp ult i8* %542, %547
  %552 = icmp ult i8* %540, %545
  %553 = and i1 %551, %552
  %554 = or i1 %550, %553
  br i1 %554, label %593, label %555

555:                                              ; preds = %537
  %556 = bitcast i8* %538 to <8 x i16>*
  %557 = load <8 x i16>, <8 x i16>* %556, align 2, !alias.scope !646
  %558 = zext <8 x i16> %557 to <8 x i32>
  %559 = bitcast i8* %540 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !649
  %561 = zext <8 x i16> %560 to <8 x i32>
  %562 = sub nsw <8 x i32> %558, %561
  %563 = icmp slt <8 x i32> %562, zeroinitializer
  %564 = sub nsw <8 x i32> zeroinitializer, %562
  %565 = select <8 x i1> %563, <8 x i32> %564, <8 x i32> %562
  %566 = add nuw nsw <8 x i32> %565, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %567 = lshr <8 x i32> %566, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %568 = icmp ult <8 x i32> %567, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %569 = select <8 x i1> %568, <8 x i32> %567, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %570 = trunc <8 x i32> %569 to <8 x i8>
  %571 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %570
  %572 = bitcast i8* %542 to <8 x i8>*
  store <8 x i8> %571, <8 x i8>* %572, align 1, !alias.scope !651, !noalias !653
  %573 = getelementptr inbounds i8, i8* %0, i64 240
  %574 = bitcast i8* %573 to <8 x i16>*
  %575 = load <8 x i16>, <8 x i16>* %574, align 2, !alias.scope !646
  %576 = zext <8 x i16> %575 to <8 x i32>
  %577 = getelementptr inbounds i8, i8* %1, i64 240
  %578 = bitcast i8* %577 to <8 x i16>*
  %579 = load <8 x i16>, <8 x i16>* %578, align 2, !alias.scope !649
  %580 = zext <8 x i16> %579 to <8 x i32>
  %581 = sub nsw <8 x i32> %576, %580
  %582 = icmp slt <8 x i32> %581, zeroinitializer
  %583 = sub nsw <8 x i32> zeroinitializer, %581
  %584 = select <8 x i1> %582, <8 x i32> %583, <8 x i32> %581
  %585 = add nuw nsw <8 x i32> %584, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %586 = lshr <8 x i32> %585, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %587 = icmp ult <8 x i32> %586, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %588 = select <8 x i1> %587, <8 x i32> %586, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %589 = trunc <8 x i32> %588 to <8 x i8>
  %590 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %589
  %591 = getelementptr inbounds i8, i8* %542, i64 8
  %592 = bitcast i8* %591 to <8 x i8>*
  store <8 x i8> %590, <8 x i8>* %592, align 1, !alias.scope !651, !noalias !653
  br label %614

593:                                              ; preds = %537, %593
  %594 = phi i64 [ %612, %593 ], [ 0, %537 ]
  %595 = getelementptr inbounds i16, i16* %539, i64 %594
  %596 = load i16, i16* %595, align 2
  %597 = zext i16 %596 to i32
  %598 = getelementptr inbounds i16, i16* %541, i64 %594
  %599 = load i16, i16* %598, align 2
  %600 = zext i16 %599 to i32
  %601 = sub nsw i32 %597, %600
  %602 = icmp slt i32 %601, 0
  %603 = sub nsw i32 0, %601
  %604 = select i1 %602, i32 %603, i32 %601
  %605 = add nuw nsw i32 %604, 32
  %606 = lshr i32 %605, 10
  %607 = icmp ult i32 %606, 26
  %608 = select i1 %607, i32 %606, i32 26
  %609 = trunc i32 %608 to i8
  %610 = sub nuw nsw i8 26, %609
  %611 = getelementptr inbounds i8, i8* %542, i64 %594
  store i8 %610, i8* %611, align 1
  %612 = add nuw nsw i64 %594, 1
  %613 = icmp eq i64 %612, 16
  br i1 %613, label %614, label %593, !llvm.loop !654

614:                                              ; preds = %593, %555
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi16ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %69, %4
  %8 = phi i64 [ %75, %69 ], [ 0, %4 ]
  %9 = phi i8* [ %72, %69 ], [ %2, %4 ]
  %10 = phi i16* [ %70, %69 ], [ %5, %4 ]
  %11 = phi i32 [ %73, %69 ], [ 0, %4 ]
  %12 = phi i16* [ %71, %69 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 16
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 5
  %18 = add i64 %17, 32
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !655
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !658
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !660, !noalias !662
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !655
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !658
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !660, !noalias !662
  br label %69

68:                                               ; preds = %69
  ret void

69:                                               ; preds = %76, %30
  %70 = getelementptr inbounds i16, i16* %10, i64 16
  %71 = getelementptr inbounds i16, i16* %12, i64 16
  %72 = getelementptr inbounds i8, i8* %9, i64 %3
  %73 = add nuw nsw i32 %11, 1
  %74 = icmp eq i32 %73, 16
  %75 = add i64 %8, 1
  br i1 %74, label %68, label %7

76:                                               ; preds = %7, %76
  %77 = phi i64 [ %95, %76 ], [ 0, %7 ]
  %78 = getelementptr inbounds i16, i16* %10, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = getelementptr inbounds i16, i16* %12, i64 %77
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = sub nsw i32 %80, %83
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 0, %84
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = add nuw nsw i32 %87, 32
  %89 = lshr i32 %88, 10
  %90 = icmp ult i32 %89, 26
  %91 = select i1 %90, i32 %89, i32 26
  %92 = trunc i32 %91 to i8
  %93 = add nuw nsw i8 %92, 38
  %94 = getelementptr inbounds i8, i8* %9, i64 %77
  store i8 %93, i8* %94, align 1
  %95 = add nuw nsw i64 %77, 1
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %69, label %76, !llvm.loop !663
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi16ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %69, %4
  %8 = phi i64 [ %75, %69 ], [ 0, %4 ]
  %9 = phi i8* [ %72, %69 ], [ %2, %4 ]
  %10 = phi i16* [ %70, %69 ], [ %5, %4 ]
  %11 = phi i32 [ %73, %69 ], [ 0, %4 ]
  %12 = phi i16* [ %71, %69 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 16
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 5
  %18 = add i64 %17, 32
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !664
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !667
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !669, !noalias !671
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !664
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !667
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !669, !noalias !671
  br label %69

68:                                               ; preds = %69
  ret void

69:                                               ; preds = %76, %30
  %70 = getelementptr inbounds i16, i16* %10, i64 16
  %71 = getelementptr inbounds i16, i16* %12, i64 16
  %72 = getelementptr inbounds i8, i8* %9, i64 %3
  %73 = add nuw nsw i32 %11, 1
  %74 = icmp eq i32 %73, 16
  %75 = add i64 %8, 1
  br i1 %74, label %68, label %7

76:                                               ; preds = %7, %76
  %77 = phi i64 [ %95, %76 ], [ 0, %7 ]
  %78 = getelementptr inbounds i16, i16* %10, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = getelementptr inbounds i16, i16* %12, i64 %77
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = sub nsw i32 %80, %83
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 0, %84
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = add nuw nsw i32 %87, 32
  %89 = lshr i32 %88, 10
  %90 = icmp ult i32 %89, 26
  %91 = select i1 %90, i32 %89, i32 26
  %92 = trunc i32 %91 to i8
  %93 = sub nuw nsw i8 26, %92
  %94 = getelementptr inbounds i8, i8* %9, i64 %77
  store i8 %93, i8* %94, align 1
  %95 = add nuw nsw i64 %77, 1
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %69, label %76, !llvm.loop !672
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi32ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %69, %4
  %8 = phi i64 [ %75, %69 ], [ 0, %4 ]
  %9 = phi i8* [ %72, %69 ], [ %2, %4 ]
  %10 = phi i16* [ %70, %69 ], [ %5, %4 ]
  %11 = phi i32 [ %73, %69 ], [ 0, %4 ]
  %12 = phi i16* [ %71, %69 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 16
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 5
  %18 = add i64 %17, 32
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !673
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !676
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !678, !noalias !680
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !673
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !676
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !678, !noalias !680
  br label %69

68:                                               ; preds = %69
  ret void

69:                                               ; preds = %76, %30
  %70 = getelementptr inbounds i16, i16* %10, i64 16
  %71 = getelementptr inbounds i16, i16* %12, i64 16
  %72 = getelementptr inbounds i8, i8* %9, i64 %3
  %73 = add nuw nsw i32 %11, 1
  %74 = icmp eq i32 %73, 32
  %75 = add i64 %8, 1
  br i1 %74, label %68, label %7

76:                                               ; preds = %7, %76
  %77 = phi i64 [ %95, %76 ], [ 0, %7 ]
  %78 = getelementptr inbounds i16, i16* %10, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = getelementptr inbounds i16, i16* %12, i64 %77
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = sub nsw i32 %80, %83
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 0, %84
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = add nuw nsw i32 %87, 32
  %89 = lshr i32 %88, 10
  %90 = icmp ult i32 %89, 26
  %91 = select i1 %90, i32 %89, i32 26
  %92 = trunc i32 %91 to i8
  %93 = add nuw nsw i8 %92, 38
  %94 = getelementptr inbounds i8, i8* %9, i64 %77
  store i8 %93, i8* %94, align 1
  %95 = add nuw nsw i64 %77, 1
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %69, label %76, !llvm.loop !681
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi32ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %69, %4
  %8 = phi i64 [ %75, %69 ], [ 0, %4 ]
  %9 = phi i8* [ %72, %69 ], [ %2, %4 ]
  %10 = phi i16* [ %70, %69 ], [ %5, %4 ]
  %11 = phi i32 [ %73, %69 ], [ 0, %4 ]
  %12 = phi i16* [ %71, %69 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 16
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 5
  %18 = add i64 %17, 32
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !682
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !685
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !687, !noalias !689
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !682
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !685
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !687, !noalias !689
  br label %69

68:                                               ; preds = %69
  ret void

69:                                               ; preds = %76, %30
  %70 = getelementptr inbounds i16, i16* %10, i64 16
  %71 = getelementptr inbounds i16, i16* %12, i64 16
  %72 = getelementptr inbounds i8, i8* %9, i64 %3
  %73 = add nuw nsw i32 %11, 1
  %74 = icmp eq i32 %73, 32
  %75 = add i64 %8, 1
  br i1 %74, label %68, label %7

76:                                               ; preds = %7, %76
  %77 = phi i64 [ %95, %76 ], [ 0, %7 ]
  %78 = getelementptr inbounds i16, i16* %10, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = getelementptr inbounds i16, i16* %12, i64 %77
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = sub nsw i32 %80, %83
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 0, %84
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = add nuw nsw i32 %87, 32
  %89 = lshr i32 %88, 10
  %90 = icmp ult i32 %89, 26
  %91 = select i1 %90, i32 %89, i32 26
  %92 = trunc i32 %91 to i8
  %93 = sub nuw nsw i8 26, %92
  %94 = getelementptr inbounds i8, i8* %9, i64 %77
  store i8 %93, i8* %94, align 1
  %95 = add nuw nsw i64 %77, 1
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %69, label %76, !llvm.loop !690
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi64ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %69, %4
  %8 = phi i64 [ %75, %69 ], [ 0, %4 ]
  %9 = phi i8* [ %72, %69 ], [ %2, %4 ]
  %10 = phi i16* [ %70, %69 ], [ %5, %4 ]
  %11 = phi i32 [ %73, %69 ], [ 0, %4 ]
  %12 = phi i16* [ %71, %69 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 16
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 5
  %18 = add i64 %17, 32
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !691
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !694
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !696, !noalias !698
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !691
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !694
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !696, !noalias !698
  br label %69

68:                                               ; preds = %69
  ret void

69:                                               ; preds = %76, %30
  %70 = getelementptr inbounds i16, i16* %10, i64 16
  %71 = getelementptr inbounds i16, i16* %12, i64 16
  %72 = getelementptr inbounds i8, i8* %9, i64 %3
  %73 = add nuw nsw i32 %11, 1
  %74 = icmp eq i32 %73, 64
  %75 = add i64 %8, 1
  br i1 %74, label %68, label %7

76:                                               ; preds = %7, %76
  %77 = phi i64 [ %95, %76 ], [ 0, %7 ]
  %78 = getelementptr inbounds i16, i16* %10, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = getelementptr inbounds i16, i16* %12, i64 %77
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = sub nsw i32 %80, %83
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 0, %84
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = add nuw nsw i32 %87, 32
  %89 = lshr i32 %88, 10
  %90 = icmp ult i32 %89, 26
  %91 = select i1 %90, i32 %89, i32 26
  %92 = trunc i32 %91 to i8
  %93 = add nuw nsw i8 %92, 38
  %94 = getelementptr inbounds i8, i8* %9, i64 %77
  store i8 %93, i8* %94, align 1
  %95 = add nuw nsw i64 %77, 1
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %69, label %76, !llvm.loop !699
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi16ELi64ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %69, %4
  %8 = phi i64 [ %75, %69 ], [ 0, %4 ]
  %9 = phi i8* [ %72, %69 ], [ %2, %4 ]
  %10 = phi i16* [ %70, %69 ], [ %5, %4 ]
  %11 = phi i32 [ %73, %69 ], [ 0, %4 ]
  %12 = phi i16* [ %71, %69 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 16
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 5
  %18 = add i64 %17, 32
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !700
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !703
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !705, !noalias !707
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !700
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !703
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !705, !noalias !707
  br label %69

68:                                               ; preds = %69
  ret void

69:                                               ; preds = %76, %30
  %70 = getelementptr inbounds i16, i16* %10, i64 16
  %71 = getelementptr inbounds i16, i16* %12, i64 16
  %72 = getelementptr inbounds i8, i8* %9, i64 %3
  %73 = add nuw nsw i32 %11, 1
  %74 = icmp eq i32 %73, 64
  %75 = add i64 %8, 1
  br i1 %74, label %68, label %7

76:                                               ; preds = %7, %76
  %77 = phi i64 [ %95, %76 ], [ 0, %7 ]
  %78 = getelementptr inbounds i16, i16* %10, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = getelementptr inbounds i16, i16* %12, i64 %77
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = sub nsw i32 %80, %83
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 0, %84
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = add nuw nsw i32 %87, 32
  %89 = lshr i32 %88, 10
  %90 = icmp ult i32 %89, 26
  %91 = select i1 %90, i32 %89, i32 26
  %92 = trunc i32 %91 to i8
  %93 = sub nuw nsw i8 26, %92
  %94 = getelementptr inbounds i8, i8* %9, i64 %77
  store i8 %93, i8* %94, align 1
  %95 = add nuw nsw i64 %77, 1
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %69, label %76, !llvm.loop !708
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi8ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  %7 = getelementptr i8, i8* %2, i64 32
  %8 = getelementptr i8, i8* %0, i64 64
  %9 = getelementptr i8, i8* %1, i64 64
  %10 = icmp ugt i8* %8, %2
  %11 = icmp ugt i8* %7, %0
  %12 = and i1 %10, %11
  %13 = icmp ugt i8* %9, %2
  %14 = icmp ugt i8* %7, %1
  %15 = and i1 %13, %14
  %16 = or i1 %12, %15
  br i1 %16, label %190, label %17

17:                                               ; preds = %4
  %18 = bitcast i8* %0 to <8 x i16>*
  %19 = load <8 x i16>, <8 x i16>* %18, align 2, !alias.scope !709
  %20 = zext <8 x i16> %19 to <8 x i32>
  %21 = bitcast i8* %1 to <8 x i16>*
  %22 = load <8 x i16>, <8 x i16>* %21, align 2, !alias.scope !712
  %23 = zext <8 x i16> %22 to <8 x i32>
  %24 = sub nsw <8 x i32> %20, %23
  %25 = icmp slt <8 x i32> %24, zeroinitializer
  %26 = sub nsw <8 x i32> zeroinitializer, %24
  %27 = select <8 x i1> %25, <8 x i32> %26, <8 x i32> %24
  %28 = add nuw nsw <8 x i32> %27, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %29 = lshr <8 x i32> %28, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %30 = icmp ult <8 x i32> %29, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %31 = select <8 x i1> %30, <8 x i32> %29, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %32 = trunc <8 x i32> %31 to <8 x i8>
  %33 = add nuw nsw <8 x i8> %32, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %34 = bitcast i8* %2 to <8 x i8>*
  store <8 x i8> %33, <8 x i8>* %34, align 1, !alias.scope !714, !noalias !716
  %35 = getelementptr inbounds i8, i8* %0, i64 16
  %36 = bitcast i8* %35 to <8 x i16>*
  %37 = load <8 x i16>, <8 x i16>* %36, align 2, !alias.scope !709
  %38 = zext <8 x i16> %37 to <8 x i32>
  %39 = getelementptr inbounds i8, i8* %1, i64 16
  %40 = bitcast i8* %39 to <8 x i16>*
  %41 = load <8 x i16>, <8 x i16>* %40, align 2, !alias.scope !712
  %42 = zext <8 x i16> %41 to <8 x i32>
  %43 = sub nsw <8 x i32> %38, %42
  %44 = icmp slt <8 x i32> %43, zeroinitializer
  %45 = sub nsw <8 x i32> zeroinitializer, %43
  %46 = select <8 x i1> %44, <8 x i32> %45, <8 x i32> %43
  %47 = add nuw nsw <8 x i32> %46, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %48 = lshr <8 x i32> %47, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %49 = icmp ult <8 x i32> %48, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %50 = select <8 x i1> %49, <8 x i32> %48, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %51 = trunc <8 x i32> %50 to <8 x i8>
  %52 = add nuw nsw <8 x i8> %51, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %53 = getelementptr inbounds i8, i8* %2, i64 8
  %54 = bitcast i8* %53 to <8 x i8>*
  store <8 x i8> %52, <8 x i8>* %54, align 1, !alias.scope !714, !noalias !716
  %55 = getelementptr inbounds i8, i8* %0, i64 32
  %56 = bitcast i8* %55 to <8 x i16>*
  %57 = load <8 x i16>, <8 x i16>* %56, align 2, !alias.scope !709
  %58 = zext <8 x i16> %57 to <8 x i32>
  %59 = getelementptr inbounds i8, i8* %1, i64 32
  %60 = bitcast i8* %59 to <8 x i16>*
  %61 = load <8 x i16>, <8 x i16>* %60, align 2, !alias.scope !712
  %62 = zext <8 x i16> %61 to <8 x i32>
  %63 = sub nsw <8 x i32> %58, %62
  %64 = icmp slt <8 x i32> %63, zeroinitializer
  %65 = sub nsw <8 x i32> zeroinitializer, %63
  %66 = select <8 x i1> %64, <8 x i32> %65, <8 x i32> %63
  %67 = add nuw nsw <8 x i32> %66, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %68 = lshr <8 x i32> %67, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %69 = icmp ult <8 x i32> %68, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %70 = select <8 x i1> %69, <8 x i32> %68, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %71 = trunc <8 x i32> %70 to <8 x i8>
  %72 = add nuw nsw <8 x i8> %71, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %73 = getelementptr inbounds i8, i8* %2, i64 16
  %74 = bitcast i8* %73 to <8 x i8>*
  store <8 x i8> %72, <8 x i8>* %74, align 1, !alias.scope !714, !noalias !716
  %75 = getelementptr inbounds i8, i8* %0, i64 48
  %76 = bitcast i8* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !709
  %78 = zext <8 x i16> %77 to <8 x i32>
  %79 = getelementptr inbounds i8, i8* %1, i64 48
  %80 = bitcast i8* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !712
  %82 = zext <8 x i16> %81 to <8 x i32>
  %83 = sub nsw <8 x i32> %78, %82
  %84 = icmp slt <8 x i32> %83, zeroinitializer
  %85 = sub nsw <8 x i32> zeroinitializer, %83
  %86 = select <8 x i1> %84, <8 x i32> %85, <8 x i32> %83
  %87 = add nuw nsw <8 x i32> %86, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %88 = lshr <8 x i32> %87, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %89 = icmp ult <8 x i32> %88, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %90 = select <8 x i1> %89, <8 x i32> %88, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %91 = trunc <8 x i32> %90 to <8 x i8>
  %92 = add nuw nsw <8 x i8> %91, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %93 = getelementptr inbounds i8, i8* %2, i64 24
  %94 = bitcast i8* %93 to <8 x i8>*
  store <8 x i8> %92, <8 x i8>* %94, align 1, !alias.scope !714, !noalias !716
  br label %95

95:                                               ; preds = %190, %17
  %96 = getelementptr inbounds i8, i8* %0, i64 64
  %97 = bitcast i8* %96 to i16*
  %98 = getelementptr inbounds i8, i8* %1, i64 64
  %99 = bitcast i8* %98 to i16*
  %100 = getelementptr inbounds i8, i8* %2, i64 %3
  %101 = add i64 %3, 32
  %102 = getelementptr i8, i8* %2, i64 %101
  %103 = getelementptr i8, i8* %0, i64 128
  %104 = getelementptr i8, i8* %1, i64 128
  %105 = icmp ult i8* %100, %103
  %106 = icmp ult i8* %96, %102
  %107 = and i1 %105, %106
  %108 = icmp ult i8* %100, %104
  %109 = icmp ult i8* %98, %102
  %110 = and i1 %108, %109
  %111 = or i1 %107, %110
  br i1 %111, label %211, label %112

112:                                              ; preds = %95
  %113 = bitcast i8* %96 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !717
  %115 = zext <8 x i16> %114 to <8 x i32>
  %116 = bitcast i8* %98 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !720
  %118 = zext <8 x i16> %117 to <8 x i32>
  %119 = sub nsw <8 x i32> %115, %118
  %120 = icmp slt <8 x i32> %119, zeroinitializer
  %121 = sub nsw <8 x i32> zeroinitializer, %119
  %122 = select <8 x i1> %120, <8 x i32> %121, <8 x i32> %119
  %123 = add nuw nsw <8 x i32> %122, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %124 = lshr <8 x i32> %123, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %125 = icmp ult <8 x i32> %124, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %126 = select <8 x i1> %125, <8 x i32> %124, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %127 = trunc <8 x i32> %126 to <8 x i8>
  %128 = add nuw nsw <8 x i8> %127, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %129 = bitcast i8* %100 to <8 x i8>*
  store <8 x i8> %128, <8 x i8>* %129, align 1, !alias.scope !722, !noalias !724
  %130 = getelementptr inbounds i8, i8* %0, i64 80
  %131 = bitcast i8* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !717
  %133 = zext <8 x i16> %132 to <8 x i32>
  %134 = getelementptr inbounds i8, i8* %1, i64 80
  %135 = bitcast i8* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !720
  %137 = zext <8 x i16> %136 to <8 x i32>
  %138 = sub nsw <8 x i32> %133, %137
  %139 = icmp slt <8 x i32> %138, zeroinitializer
  %140 = sub nsw <8 x i32> zeroinitializer, %138
  %141 = select <8 x i1> %139, <8 x i32> %140, <8 x i32> %138
  %142 = add nuw nsw <8 x i32> %141, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %143 = lshr <8 x i32> %142, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %144 = icmp ult <8 x i32> %143, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %145 = select <8 x i1> %144, <8 x i32> %143, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %146 = trunc <8 x i32> %145 to <8 x i8>
  %147 = add nuw nsw <8 x i8> %146, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %148 = getelementptr inbounds i8, i8* %100, i64 8
  %149 = bitcast i8* %148 to <8 x i8>*
  store <8 x i8> %147, <8 x i8>* %149, align 1, !alias.scope !722, !noalias !724
  %150 = getelementptr inbounds i8, i8* %0, i64 96
  %151 = bitcast i8* %150 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !717
  %153 = zext <8 x i16> %152 to <8 x i32>
  %154 = getelementptr inbounds i8, i8* %1, i64 96
  %155 = bitcast i8* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !720
  %157 = zext <8 x i16> %156 to <8 x i32>
  %158 = sub nsw <8 x i32> %153, %157
  %159 = icmp slt <8 x i32> %158, zeroinitializer
  %160 = sub nsw <8 x i32> zeroinitializer, %158
  %161 = select <8 x i1> %159, <8 x i32> %160, <8 x i32> %158
  %162 = add nuw nsw <8 x i32> %161, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %163 = lshr <8 x i32> %162, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %164 = icmp ult <8 x i32> %163, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %165 = select <8 x i1> %164, <8 x i32> %163, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %166 = trunc <8 x i32> %165 to <8 x i8>
  %167 = add nuw nsw <8 x i8> %166, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %168 = getelementptr inbounds i8, i8* %100, i64 16
  %169 = bitcast i8* %168 to <8 x i8>*
  store <8 x i8> %167, <8 x i8>* %169, align 1, !alias.scope !722, !noalias !724
  %170 = getelementptr inbounds i8, i8* %0, i64 112
  %171 = bitcast i8* %170 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !717
  %173 = zext <8 x i16> %172 to <8 x i32>
  %174 = getelementptr inbounds i8, i8* %1, i64 112
  %175 = bitcast i8* %174 to <8 x i16>*
  %176 = load <8 x i16>, <8 x i16>* %175, align 2, !alias.scope !720
  %177 = zext <8 x i16> %176 to <8 x i32>
  %178 = sub nsw <8 x i32> %173, %177
  %179 = icmp slt <8 x i32> %178, zeroinitializer
  %180 = sub nsw <8 x i32> zeroinitializer, %178
  %181 = select <8 x i1> %179, <8 x i32> %180, <8 x i32> %178
  %182 = add nuw nsw <8 x i32> %181, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %183 = lshr <8 x i32> %182, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %184 = icmp ult <8 x i32> %183, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %185 = select <8 x i1> %184, <8 x i32> %183, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %186 = trunc <8 x i32> %185 to <8 x i8>
  %187 = add nuw nsw <8 x i8> %186, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %188 = getelementptr inbounds i8, i8* %100, i64 24
  %189 = bitcast i8* %188 to <8 x i8>*
  store <8 x i8> %187, <8 x i8>* %189, align 1, !alias.scope !722, !noalias !724
  br label %232

190:                                              ; preds = %4, %190
  %191 = phi i64 [ %209, %190 ], [ 0, %4 ]
  %192 = getelementptr inbounds i16, i16* %5, i64 %191
  %193 = load i16, i16* %192, align 2
  %194 = zext i16 %193 to i32
  %195 = getelementptr inbounds i16, i16* %6, i64 %191
  %196 = load i16, i16* %195, align 2
  %197 = zext i16 %196 to i32
  %198 = sub nsw i32 %194, %197
  %199 = icmp slt i32 %198, 0
  %200 = sub nsw i32 0, %198
  %201 = select i1 %199, i32 %200, i32 %198
  %202 = add nuw nsw i32 %201, 32
  %203 = lshr i32 %202, 10
  %204 = icmp ult i32 %203, 26
  %205 = select i1 %204, i32 %203, i32 26
  %206 = trunc i32 %205 to i8
  %207 = add nuw nsw i8 %206, 38
  %208 = getelementptr inbounds i8, i8* %2, i64 %191
  store i8 %207, i8* %208, align 1
  %209 = add nuw nsw i64 %191, 1
  %210 = icmp eq i64 %209, 32
  br i1 %210, label %95, label %190, !llvm.loop !725

211:                                              ; preds = %95, %211
  %212 = phi i64 [ %230, %211 ], [ 0, %95 ]
  %213 = getelementptr inbounds i16, i16* %97, i64 %212
  %214 = load i16, i16* %213, align 2
  %215 = zext i16 %214 to i32
  %216 = getelementptr inbounds i16, i16* %99, i64 %212
  %217 = load i16, i16* %216, align 2
  %218 = zext i16 %217 to i32
  %219 = sub nsw i32 %215, %218
  %220 = icmp slt i32 %219, 0
  %221 = sub nsw i32 0, %219
  %222 = select i1 %220, i32 %221, i32 %219
  %223 = add nuw nsw i32 %222, 32
  %224 = lshr i32 %223, 10
  %225 = icmp ult i32 %224, 26
  %226 = select i1 %225, i32 %224, i32 26
  %227 = trunc i32 %226 to i8
  %228 = add nuw nsw i8 %227, 38
  %229 = getelementptr inbounds i8, i8* %100, i64 %212
  store i8 %228, i8* %229, align 1
  %230 = add nuw nsw i64 %212, 1
  %231 = icmp eq i64 %230, 32
  br i1 %231, label %232, label %211, !llvm.loop !726

232:                                              ; preds = %211, %112
  %233 = getelementptr inbounds i8, i8* %0, i64 128
  %234 = bitcast i8* %233 to i16*
  %235 = getelementptr inbounds i8, i8* %1, i64 128
  %236 = bitcast i8* %235 to i16*
  %237 = getelementptr inbounds i8, i8* %100, i64 %3
  %238 = shl i64 %3, 1
  %239 = add i64 %238, 32
  %240 = getelementptr i8, i8* %2, i64 %239
  %241 = getelementptr i8, i8* %0, i64 192
  %242 = getelementptr i8, i8* %1, i64 192
  %243 = icmp ult i8* %237, %241
  %244 = icmp ult i8* %233, %240
  %245 = and i1 %243, %244
  %246 = icmp ult i8* %237, %242
  %247 = icmp ult i8* %235, %240
  %248 = and i1 %246, %247
  %249 = or i1 %245, %248
  br i1 %249, label %328, label %250

250:                                              ; preds = %232
  %251 = bitcast i8* %233 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !727
  %253 = zext <8 x i16> %252 to <8 x i32>
  %254 = bitcast i8* %235 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !730
  %256 = zext <8 x i16> %255 to <8 x i32>
  %257 = sub nsw <8 x i32> %253, %256
  %258 = icmp slt <8 x i32> %257, zeroinitializer
  %259 = sub nsw <8 x i32> zeroinitializer, %257
  %260 = select <8 x i1> %258, <8 x i32> %259, <8 x i32> %257
  %261 = add nuw nsw <8 x i32> %260, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %262 = lshr <8 x i32> %261, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %263 = icmp ult <8 x i32> %262, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %264 = select <8 x i1> %263, <8 x i32> %262, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %265 = trunc <8 x i32> %264 to <8 x i8>
  %266 = add nuw nsw <8 x i8> %265, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %267 = bitcast i8* %237 to <8 x i8>*
  store <8 x i8> %266, <8 x i8>* %267, align 1, !alias.scope !732, !noalias !734
  %268 = getelementptr inbounds i8, i8* %0, i64 144
  %269 = bitcast i8* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !727
  %271 = zext <8 x i16> %270 to <8 x i32>
  %272 = getelementptr inbounds i8, i8* %1, i64 144
  %273 = bitcast i8* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !730
  %275 = zext <8 x i16> %274 to <8 x i32>
  %276 = sub nsw <8 x i32> %271, %275
  %277 = icmp slt <8 x i32> %276, zeroinitializer
  %278 = sub nsw <8 x i32> zeroinitializer, %276
  %279 = select <8 x i1> %277, <8 x i32> %278, <8 x i32> %276
  %280 = add nuw nsw <8 x i32> %279, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %281 = lshr <8 x i32> %280, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %282 = icmp ult <8 x i32> %281, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %283 = select <8 x i1> %282, <8 x i32> %281, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %284 = trunc <8 x i32> %283 to <8 x i8>
  %285 = add nuw nsw <8 x i8> %284, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %286 = getelementptr inbounds i8, i8* %237, i64 8
  %287 = bitcast i8* %286 to <8 x i8>*
  store <8 x i8> %285, <8 x i8>* %287, align 1, !alias.scope !732, !noalias !734
  %288 = getelementptr inbounds i8, i8* %0, i64 160
  %289 = bitcast i8* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !727
  %291 = zext <8 x i16> %290 to <8 x i32>
  %292 = getelementptr inbounds i8, i8* %1, i64 160
  %293 = bitcast i8* %292 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !730
  %295 = zext <8 x i16> %294 to <8 x i32>
  %296 = sub nsw <8 x i32> %291, %295
  %297 = icmp slt <8 x i32> %296, zeroinitializer
  %298 = sub nsw <8 x i32> zeroinitializer, %296
  %299 = select <8 x i1> %297, <8 x i32> %298, <8 x i32> %296
  %300 = add nuw nsw <8 x i32> %299, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %301 = lshr <8 x i32> %300, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %302 = icmp ult <8 x i32> %301, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %303 = select <8 x i1> %302, <8 x i32> %301, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %304 = trunc <8 x i32> %303 to <8 x i8>
  %305 = add nuw nsw <8 x i8> %304, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %306 = getelementptr inbounds i8, i8* %237, i64 16
  %307 = bitcast i8* %306 to <8 x i8>*
  store <8 x i8> %305, <8 x i8>* %307, align 1, !alias.scope !732, !noalias !734
  %308 = getelementptr inbounds i8, i8* %0, i64 176
  %309 = bitcast i8* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !727
  %311 = zext <8 x i16> %310 to <8 x i32>
  %312 = getelementptr inbounds i8, i8* %1, i64 176
  %313 = bitcast i8* %312 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !730
  %315 = zext <8 x i16> %314 to <8 x i32>
  %316 = sub nsw <8 x i32> %311, %315
  %317 = icmp slt <8 x i32> %316, zeroinitializer
  %318 = sub nsw <8 x i32> zeroinitializer, %316
  %319 = select <8 x i1> %317, <8 x i32> %318, <8 x i32> %316
  %320 = add nuw nsw <8 x i32> %319, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %321 = lshr <8 x i32> %320, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %322 = icmp ult <8 x i32> %321, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %323 = select <8 x i1> %322, <8 x i32> %321, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %324 = trunc <8 x i32> %323 to <8 x i8>
  %325 = add nuw nsw <8 x i8> %324, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %326 = getelementptr inbounds i8, i8* %237, i64 24
  %327 = bitcast i8* %326 to <8 x i8>*
  store <8 x i8> %325, <8 x i8>* %327, align 1, !alias.scope !732, !noalias !734
  br label %349

328:                                              ; preds = %232, %328
  %329 = phi i64 [ %347, %328 ], [ 0, %232 ]
  %330 = getelementptr inbounds i16, i16* %234, i64 %329
  %331 = load i16, i16* %330, align 2
  %332 = zext i16 %331 to i32
  %333 = getelementptr inbounds i16, i16* %236, i64 %329
  %334 = load i16, i16* %333, align 2
  %335 = zext i16 %334 to i32
  %336 = sub nsw i32 %332, %335
  %337 = icmp slt i32 %336, 0
  %338 = sub nsw i32 0, %336
  %339 = select i1 %337, i32 %338, i32 %336
  %340 = add nuw nsw i32 %339, 32
  %341 = lshr i32 %340, 10
  %342 = icmp ult i32 %341, 26
  %343 = select i1 %342, i32 %341, i32 26
  %344 = trunc i32 %343 to i8
  %345 = add nuw nsw i8 %344, 38
  %346 = getelementptr inbounds i8, i8* %237, i64 %329
  store i8 %345, i8* %346, align 1
  %347 = add nuw nsw i64 %329, 1
  %348 = icmp eq i64 %347, 32
  br i1 %348, label %349, label %328, !llvm.loop !735

349:                                              ; preds = %328, %250
  %350 = getelementptr inbounds i8, i8* %0, i64 192
  %351 = bitcast i8* %350 to i16*
  %352 = getelementptr inbounds i8, i8* %1, i64 192
  %353 = bitcast i8* %352 to i16*
  %354 = getelementptr inbounds i8, i8* %237, i64 %3
  %355 = mul i64 %3, 3
  %356 = add i64 %355, 32
  %357 = getelementptr i8, i8* %2, i64 %356
  %358 = getelementptr i8, i8* %0, i64 256
  %359 = getelementptr i8, i8* %1, i64 256
  %360 = icmp ult i8* %354, %358
  %361 = icmp ult i8* %350, %357
  %362 = and i1 %360, %361
  %363 = icmp ult i8* %354, %359
  %364 = icmp ult i8* %352, %357
  %365 = and i1 %363, %364
  %366 = or i1 %362, %365
  br i1 %366, label %445, label %367

367:                                              ; preds = %349
  %368 = bitcast i8* %350 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !736
  %370 = zext <8 x i16> %369 to <8 x i32>
  %371 = bitcast i8* %352 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !739
  %373 = zext <8 x i16> %372 to <8 x i32>
  %374 = sub nsw <8 x i32> %370, %373
  %375 = icmp slt <8 x i32> %374, zeroinitializer
  %376 = sub nsw <8 x i32> zeroinitializer, %374
  %377 = select <8 x i1> %375, <8 x i32> %376, <8 x i32> %374
  %378 = add nuw nsw <8 x i32> %377, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %379 = lshr <8 x i32> %378, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %380 = icmp ult <8 x i32> %379, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %381 = select <8 x i1> %380, <8 x i32> %379, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %382 = trunc <8 x i32> %381 to <8 x i8>
  %383 = add nuw nsw <8 x i8> %382, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %384 = bitcast i8* %354 to <8 x i8>*
  store <8 x i8> %383, <8 x i8>* %384, align 1, !alias.scope !741, !noalias !743
  %385 = getelementptr inbounds i8, i8* %0, i64 208
  %386 = bitcast i8* %385 to <8 x i16>*
  %387 = load <8 x i16>, <8 x i16>* %386, align 2, !alias.scope !736
  %388 = zext <8 x i16> %387 to <8 x i32>
  %389 = getelementptr inbounds i8, i8* %1, i64 208
  %390 = bitcast i8* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !739
  %392 = zext <8 x i16> %391 to <8 x i32>
  %393 = sub nsw <8 x i32> %388, %392
  %394 = icmp slt <8 x i32> %393, zeroinitializer
  %395 = sub nsw <8 x i32> zeroinitializer, %393
  %396 = select <8 x i1> %394, <8 x i32> %395, <8 x i32> %393
  %397 = add nuw nsw <8 x i32> %396, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %398 = lshr <8 x i32> %397, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %399 = icmp ult <8 x i32> %398, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %400 = select <8 x i1> %399, <8 x i32> %398, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %401 = trunc <8 x i32> %400 to <8 x i8>
  %402 = add nuw nsw <8 x i8> %401, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %403 = getelementptr inbounds i8, i8* %354, i64 8
  %404 = bitcast i8* %403 to <8 x i8>*
  store <8 x i8> %402, <8 x i8>* %404, align 1, !alias.scope !741, !noalias !743
  %405 = getelementptr inbounds i8, i8* %0, i64 224
  %406 = bitcast i8* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !736
  %408 = zext <8 x i16> %407 to <8 x i32>
  %409 = getelementptr inbounds i8, i8* %1, i64 224
  %410 = bitcast i8* %409 to <8 x i16>*
  %411 = load <8 x i16>, <8 x i16>* %410, align 2, !alias.scope !739
  %412 = zext <8 x i16> %411 to <8 x i32>
  %413 = sub nsw <8 x i32> %408, %412
  %414 = icmp slt <8 x i32> %413, zeroinitializer
  %415 = sub nsw <8 x i32> zeroinitializer, %413
  %416 = select <8 x i1> %414, <8 x i32> %415, <8 x i32> %413
  %417 = add nuw nsw <8 x i32> %416, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %418 = lshr <8 x i32> %417, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %419 = icmp ult <8 x i32> %418, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %420 = select <8 x i1> %419, <8 x i32> %418, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %421 = trunc <8 x i32> %420 to <8 x i8>
  %422 = add nuw nsw <8 x i8> %421, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %423 = getelementptr inbounds i8, i8* %354, i64 16
  %424 = bitcast i8* %423 to <8 x i8>*
  store <8 x i8> %422, <8 x i8>* %424, align 1, !alias.scope !741, !noalias !743
  %425 = getelementptr inbounds i8, i8* %0, i64 240
  %426 = bitcast i8* %425 to <8 x i16>*
  %427 = load <8 x i16>, <8 x i16>* %426, align 2, !alias.scope !736
  %428 = zext <8 x i16> %427 to <8 x i32>
  %429 = getelementptr inbounds i8, i8* %1, i64 240
  %430 = bitcast i8* %429 to <8 x i16>*
  %431 = load <8 x i16>, <8 x i16>* %430, align 2, !alias.scope !739
  %432 = zext <8 x i16> %431 to <8 x i32>
  %433 = sub nsw <8 x i32> %428, %432
  %434 = icmp slt <8 x i32> %433, zeroinitializer
  %435 = sub nsw <8 x i32> zeroinitializer, %433
  %436 = select <8 x i1> %434, <8 x i32> %435, <8 x i32> %433
  %437 = add nuw nsw <8 x i32> %436, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %438 = lshr <8 x i32> %437, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %439 = icmp ult <8 x i32> %438, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %440 = select <8 x i1> %439, <8 x i32> %438, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %441 = trunc <8 x i32> %440 to <8 x i8>
  %442 = add nuw nsw <8 x i8> %441, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %443 = getelementptr inbounds i8, i8* %354, i64 24
  %444 = bitcast i8* %443 to <8 x i8>*
  store <8 x i8> %442, <8 x i8>* %444, align 1, !alias.scope !741, !noalias !743
  br label %466

445:                                              ; preds = %349, %445
  %446 = phi i64 [ %464, %445 ], [ 0, %349 ]
  %447 = getelementptr inbounds i16, i16* %351, i64 %446
  %448 = load i16, i16* %447, align 2
  %449 = zext i16 %448 to i32
  %450 = getelementptr inbounds i16, i16* %353, i64 %446
  %451 = load i16, i16* %450, align 2
  %452 = zext i16 %451 to i32
  %453 = sub nsw i32 %449, %452
  %454 = icmp slt i32 %453, 0
  %455 = sub nsw i32 0, %453
  %456 = select i1 %454, i32 %455, i32 %453
  %457 = add nuw nsw i32 %456, 32
  %458 = lshr i32 %457, 10
  %459 = icmp ult i32 %458, 26
  %460 = select i1 %459, i32 %458, i32 26
  %461 = trunc i32 %460 to i8
  %462 = add nuw nsw i8 %461, 38
  %463 = getelementptr inbounds i8, i8* %354, i64 %446
  store i8 %462, i8* %463, align 1
  %464 = add nuw nsw i64 %446, 1
  %465 = icmp eq i64 %464, 32
  br i1 %465, label %466, label %445, !llvm.loop !744

466:                                              ; preds = %445, %367
  %467 = getelementptr inbounds i8, i8* %0, i64 256
  %468 = bitcast i8* %467 to i16*
  %469 = getelementptr inbounds i8, i8* %1, i64 256
  %470 = bitcast i8* %469 to i16*
  %471 = getelementptr inbounds i8, i8* %354, i64 %3
  %472 = shl i64 %3, 2
  %473 = add i64 %472, 32
  %474 = getelementptr i8, i8* %2, i64 %473
  %475 = getelementptr i8, i8* %0, i64 320
  %476 = getelementptr i8, i8* %1, i64 320
  %477 = icmp ult i8* %471, %475
  %478 = icmp ult i8* %467, %474
  %479 = and i1 %477, %478
  %480 = icmp ult i8* %471, %476
  %481 = icmp ult i8* %469, %474
  %482 = and i1 %480, %481
  %483 = or i1 %479, %482
  br i1 %483, label %562, label %484

484:                                              ; preds = %466
  %485 = bitcast i8* %467 to <8 x i16>*
  %486 = load <8 x i16>, <8 x i16>* %485, align 2, !alias.scope !745
  %487 = zext <8 x i16> %486 to <8 x i32>
  %488 = bitcast i8* %469 to <8 x i16>*
  %489 = load <8 x i16>, <8 x i16>* %488, align 2, !alias.scope !748
  %490 = zext <8 x i16> %489 to <8 x i32>
  %491 = sub nsw <8 x i32> %487, %490
  %492 = icmp slt <8 x i32> %491, zeroinitializer
  %493 = sub nsw <8 x i32> zeroinitializer, %491
  %494 = select <8 x i1> %492, <8 x i32> %493, <8 x i32> %491
  %495 = add nuw nsw <8 x i32> %494, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %496 = lshr <8 x i32> %495, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %497 = icmp ult <8 x i32> %496, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %498 = select <8 x i1> %497, <8 x i32> %496, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %499 = trunc <8 x i32> %498 to <8 x i8>
  %500 = add nuw nsw <8 x i8> %499, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %501 = bitcast i8* %471 to <8 x i8>*
  store <8 x i8> %500, <8 x i8>* %501, align 1, !alias.scope !750, !noalias !752
  %502 = getelementptr inbounds i8, i8* %0, i64 272
  %503 = bitcast i8* %502 to <8 x i16>*
  %504 = load <8 x i16>, <8 x i16>* %503, align 2, !alias.scope !745
  %505 = zext <8 x i16> %504 to <8 x i32>
  %506 = getelementptr inbounds i8, i8* %1, i64 272
  %507 = bitcast i8* %506 to <8 x i16>*
  %508 = load <8 x i16>, <8 x i16>* %507, align 2, !alias.scope !748
  %509 = zext <8 x i16> %508 to <8 x i32>
  %510 = sub nsw <8 x i32> %505, %509
  %511 = icmp slt <8 x i32> %510, zeroinitializer
  %512 = sub nsw <8 x i32> zeroinitializer, %510
  %513 = select <8 x i1> %511, <8 x i32> %512, <8 x i32> %510
  %514 = add nuw nsw <8 x i32> %513, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %515 = lshr <8 x i32> %514, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %516 = icmp ult <8 x i32> %515, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %517 = select <8 x i1> %516, <8 x i32> %515, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %518 = trunc <8 x i32> %517 to <8 x i8>
  %519 = add nuw nsw <8 x i8> %518, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %520 = getelementptr inbounds i8, i8* %471, i64 8
  %521 = bitcast i8* %520 to <8 x i8>*
  store <8 x i8> %519, <8 x i8>* %521, align 1, !alias.scope !750, !noalias !752
  %522 = getelementptr inbounds i8, i8* %0, i64 288
  %523 = bitcast i8* %522 to <8 x i16>*
  %524 = load <8 x i16>, <8 x i16>* %523, align 2, !alias.scope !745
  %525 = zext <8 x i16> %524 to <8 x i32>
  %526 = getelementptr inbounds i8, i8* %1, i64 288
  %527 = bitcast i8* %526 to <8 x i16>*
  %528 = load <8 x i16>, <8 x i16>* %527, align 2, !alias.scope !748
  %529 = zext <8 x i16> %528 to <8 x i32>
  %530 = sub nsw <8 x i32> %525, %529
  %531 = icmp slt <8 x i32> %530, zeroinitializer
  %532 = sub nsw <8 x i32> zeroinitializer, %530
  %533 = select <8 x i1> %531, <8 x i32> %532, <8 x i32> %530
  %534 = add nuw nsw <8 x i32> %533, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %535 = lshr <8 x i32> %534, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %536 = icmp ult <8 x i32> %535, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %537 = select <8 x i1> %536, <8 x i32> %535, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %538 = trunc <8 x i32> %537 to <8 x i8>
  %539 = add nuw nsw <8 x i8> %538, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %540 = getelementptr inbounds i8, i8* %471, i64 16
  %541 = bitcast i8* %540 to <8 x i8>*
  store <8 x i8> %539, <8 x i8>* %541, align 1, !alias.scope !750, !noalias !752
  %542 = getelementptr inbounds i8, i8* %0, i64 304
  %543 = bitcast i8* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !745
  %545 = zext <8 x i16> %544 to <8 x i32>
  %546 = getelementptr inbounds i8, i8* %1, i64 304
  %547 = bitcast i8* %546 to <8 x i16>*
  %548 = load <8 x i16>, <8 x i16>* %547, align 2, !alias.scope !748
  %549 = zext <8 x i16> %548 to <8 x i32>
  %550 = sub nsw <8 x i32> %545, %549
  %551 = icmp slt <8 x i32> %550, zeroinitializer
  %552 = sub nsw <8 x i32> zeroinitializer, %550
  %553 = select <8 x i1> %551, <8 x i32> %552, <8 x i32> %550
  %554 = add nuw nsw <8 x i32> %553, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %555 = lshr <8 x i32> %554, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %556 = icmp ult <8 x i32> %555, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %557 = select <8 x i1> %556, <8 x i32> %555, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %558 = trunc <8 x i32> %557 to <8 x i8>
  %559 = add nuw nsw <8 x i8> %558, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %560 = getelementptr inbounds i8, i8* %471, i64 24
  %561 = bitcast i8* %560 to <8 x i8>*
  store <8 x i8> %559, <8 x i8>* %561, align 1, !alias.scope !750, !noalias !752
  br label %583

562:                                              ; preds = %466, %562
  %563 = phi i64 [ %581, %562 ], [ 0, %466 ]
  %564 = getelementptr inbounds i16, i16* %468, i64 %563
  %565 = load i16, i16* %564, align 2
  %566 = zext i16 %565 to i32
  %567 = getelementptr inbounds i16, i16* %470, i64 %563
  %568 = load i16, i16* %567, align 2
  %569 = zext i16 %568 to i32
  %570 = sub nsw i32 %566, %569
  %571 = icmp slt i32 %570, 0
  %572 = sub nsw i32 0, %570
  %573 = select i1 %571, i32 %572, i32 %570
  %574 = add nuw nsw i32 %573, 32
  %575 = lshr i32 %574, 10
  %576 = icmp ult i32 %575, 26
  %577 = select i1 %576, i32 %575, i32 26
  %578 = trunc i32 %577 to i8
  %579 = add nuw nsw i8 %578, 38
  %580 = getelementptr inbounds i8, i8* %471, i64 %563
  store i8 %579, i8* %580, align 1
  %581 = add nuw nsw i64 %563, 1
  %582 = icmp eq i64 %581, 32
  br i1 %582, label %583, label %562, !llvm.loop !753

583:                                              ; preds = %562, %484
  %584 = getelementptr inbounds i8, i8* %0, i64 320
  %585 = bitcast i8* %584 to i16*
  %586 = getelementptr inbounds i8, i8* %1, i64 320
  %587 = bitcast i8* %586 to i16*
  %588 = getelementptr inbounds i8, i8* %471, i64 %3
  %589 = mul i64 %3, 5
  %590 = add i64 %589, 32
  %591 = getelementptr i8, i8* %2, i64 %590
  %592 = getelementptr i8, i8* %0, i64 384
  %593 = getelementptr i8, i8* %1, i64 384
  %594 = icmp ult i8* %588, %592
  %595 = icmp ult i8* %584, %591
  %596 = and i1 %594, %595
  %597 = icmp ult i8* %588, %593
  %598 = icmp ult i8* %586, %591
  %599 = and i1 %597, %598
  %600 = or i1 %596, %599
  br i1 %600, label %679, label %601

601:                                              ; preds = %583
  %602 = bitcast i8* %584 to <8 x i16>*
  %603 = load <8 x i16>, <8 x i16>* %602, align 2, !alias.scope !754
  %604 = zext <8 x i16> %603 to <8 x i32>
  %605 = bitcast i8* %586 to <8 x i16>*
  %606 = load <8 x i16>, <8 x i16>* %605, align 2, !alias.scope !757
  %607 = zext <8 x i16> %606 to <8 x i32>
  %608 = sub nsw <8 x i32> %604, %607
  %609 = icmp slt <8 x i32> %608, zeroinitializer
  %610 = sub nsw <8 x i32> zeroinitializer, %608
  %611 = select <8 x i1> %609, <8 x i32> %610, <8 x i32> %608
  %612 = add nuw nsw <8 x i32> %611, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %613 = lshr <8 x i32> %612, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %614 = icmp ult <8 x i32> %613, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %615 = select <8 x i1> %614, <8 x i32> %613, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %616 = trunc <8 x i32> %615 to <8 x i8>
  %617 = add nuw nsw <8 x i8> %616, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %618 = bitcast i8* %588 to <8 x i8>*
  store <8 x i8> %617, <8 x i8>* %618, align 1, !alias.scope !759, !noalias !761
  %619 = getelementptr inbounds i8, i8* %0, i64 336
  %620 = bitcast i8* %619 to <8 x i16>*
  %621 = load <8 x i16>, <8 x i16>* %620, align 2, !alias.scope !754
  %622 = zext <8 x i16> %621 to <8 x i32>
  %623 = getelementptr inbounds i8, i8* %1, i64 336
  %624 = bitcast i8* %623 to <8 x i16>*
  %625 = load <8 x i16>, <8 x i16>* %624, align 2, !alias.scope !757
  %626 = zext <8 x i16> %625 to <8 x i32>
  %627 = sub nsw <8 x i32> %622, %626
  %628 = icmp slt <8 x i32> %627, zeroinitializer
  %629 = sub nsw <8 x i32> zeroinitializer, %627
  %630 = select <8 x i1> %628, <8 x i32> %629, <8 x i32> %627
  %631 = add nuw nsw <8 x i32> %630, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %632 = lshr <8 x i32> %631, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %633 = icmp ult <8 x i32> %632, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %634 = select <8 x i1> %633, <8 x i32> %632, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %635 = trunc <8 x i32> %634 to <8 x i8>
  %636 = add nuw nsw <8 x i8> %635, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %637 = getelementptr inbounds i8, i8* %588, i64 8
  %638 = bitcast i8* %637 to <8 x i8>*
  store <8 x i8> %636, <8 x i8>* %638, align 1, !alias.scope !759, !noalias !761
  %639 = getelementptr inbounds i8, i8* %0, i64 352
  %640 = bitcast i8* %639 to <8 x i16>*
  %641 = load <8 x i16>, <8 x i16>* %640, align 2, !alias.scope !754
  %642 = zext <8 x i16> %641 to <8 x i32>
  %643 = getelementptr inbounds i8, i8* %1, i64 352
  %644 = bitcast i8* %643 to <8 x i16>*
  %645 = load <8 x i16>, <8 x i16>* %644, align 2, !alias.scope !757
  %646 = zext <8 x i16> %645 to <8 x i32>
  %647 = sub nsw <8 x i32> %642, %646
  %648 = icmp slt <8 x i32> %647, zeroinitializer
  %649 = sub nsw <8 x i32> zeroinitializer, %647
  %650 = select <8 x i1> %648, <8 x i32> %649, <8 x i32> %647
  %651 = add nuw nsw <8 x i32> %650, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %652 = lshr <8 x i32> %651, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %653 = icmp ult <8 x i32> %652, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %654 = select <8 x i1> %653, <8 x i32> %652, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %655 = trunc <8 x i32> %654 to <8 x i8>
  %656 = add nuw nsw <8 x i8> %655, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %657 = getelementptr inbounds i8, i8* %588, i64 16
  %658 = bitcast i8* %657 to <8 x i8>*
  store <8 x i8> %656, <8 x i8>* %658, align 1, !alias.scope !759, !noalias !761
  %659 = getelementptr inbounds i8, i8* %0, i64 368
  %660 = bitcast i8* %659 to <8 x i16>*
  %661 = load <8 x i16>, <8 x i16>* %660, align 2, !alias.scope !754
  %662 = zext <8 x i16> %661 to <8 x i32>
  %663 = getelementptr inbounds i8, i8* %1, i64 368
  %664 = bitcast i8* %663 to <8 x i16>*
  %665 = load <8 x i16>, <8 x i16>* %664, align 2, !alias.scope !757
  %666 = zext <8 x i16> %665 to <8 x i32>
  %667 = sub nsw <8 x i32> %662, %666
  %668 = icmp slt <8 x i32> %667, zeroinitializer
  %669 = sub nsw <8 x i32> zeroinitializer, %667
  %670 = select <8 x i1> %668, <8 x i32> %669, <8 x i32> %667
  %671 = add nuw nsw <8 x i32> %670, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %672 = lshr <8 x i32> %671, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %673 = icmp ult <8 x i32> %672, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %674 = select <8 x i1> %673, <8 x i32> %672, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %675 = trunc <8 x i32> %674 to <8 x i8>
  %676 = add nuw nsw <8 x i8> %675, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %677 = getelementptr inbounds i8, i8* %588, i64 24
  %678 = bitcast i8* %677 to <8 x i8>*
  store <8 x i8> %676, <8 x i8>* %678, align 1, !alias.scope !759, !noalias !761
  br label %700

679:                                              ; preds = %583, %679
  %680 = phi i64 [ %698, %679 ], [ 0, %583 ]
  %681 = getelementptr inbounds i16, i16* %585, i64 %680
  %682 = load i16, i16* %681, align 2
  %683 = zext i16 %682 to i32
  %684 = getelementptr inbounds i16, i16* %587, i64 %680
  %685 = load i16, i16* %684, align 2
  %686 = zext i16 %685 to i32
  %687 = sub nsw i32 %683, %686
  %688 = icmp slt i32 %687, 0
  %689 = sub nsw i32 0, %687
  %690 = select i1 %688, i32 %689, i32 %687
  %691 = add nuw nsw i32 %690, 32
  %692 = lshr i32 %691, 10
  %693 = icmp ult i32 %692, 26
  %694 = select i1 %693, i32 %692, i32 26
  %695 = trunc i32 %694 to i8
  %696 = add nuw nsw i8 %695, 38
  %697 = getelementptr inbounds i8, i8* %588, i64 %680
  store i8 %696, i8* %697, align 1
  %698 = add nuw nsw i64 %680, 1
  %699 = icmp eq i64 %698, 32
  br i1 %699, label %700, label %679, !llvm.loop !762

700:                                              ; preds = %679, %601
  %701 = getelementptr inbounds i8, i8* %0, i64 384
  %702 = bitcast i8* %701 to i16*
  %703 = getelementptr inbounds i8, i8* %1, i64 384
  %704 = bitcast i8* %703 to i16*
  %705 = getelementptr inbounds i8, i8* %588, i64 %3
  %706 = mul i64 %3, 6
  %707 = add i64 %706, 32
  %708 = getelementptr i8, i8* %2, i64 %707
  %709 = getelementptr i8, i8* %0, i64 448
  %710 = getelementptr i8, i8* %1, i64 448
  %711 = icmp ult i8* %705, %709
  %712 = icmp ult i8* %701, %708
  %713 = and i1 %711, %712
  %714 = icmp ult i8* %705, %710
  %715 = icmp ult i8* %703, %708
  %716 = and i1 %714, %715
  %717 = or i1 %713, %716
  br i1 %717, label %796, label %718

718:                                              ; preds = %700
  %719 = bitcast i8* %701 to <8 x i16>*
  %720 = load <8 x i16>, <8 x i16>* %719, align 2, !alias.scope !763
  %721 = zext <8 x i16> %720 to <8 x i32>
  %722 = bitcast i8* %703 to <8 x i16>*
  %723 = load <8 x i16>, <8 x i16>* %722, align 2, !alias.scope !766
  %724 = zext <8 x i16> %723 to <8 x i32>
  %725 = sub nsw <8 x i32> %721, %724
  %726 = icmp slt <8 x i32> %725, zeroinitializer
  %727 = sub nsw <8 x i32> zeroinitializer, %725
  %728 = select <8 x i1> %726, <8 x i32> %727, <8 x i32> %725
  %729 = add nuw nsw <8 x i32> %728, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %730 = lshr <8 x i32> %729, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %731 = icmp ult <8 x i32> %730, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %732 = select <8 x i1> %731, <8 x i32> %730, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %733 = trunc <8 x i32> %732 to <8 x i8>
  %734 = add nuw nsw <8 x i8> %733, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %735 = bitcast i8* %705 to <8 x i8>*
  store <8 x i8> %734, <8 x i8>* %735, align 1, !alias.scope !768, !noalias !770
  %736 = getelementptr inbounds i8, i8* %0, i64 400
  %737 = bitcast i8* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !763
  %739 = zext <8 x i16> %738 to <8 x i32>
  %740 = getelementptr inbounds i8, i8* %1, i64 400
  %741 = bitcast i8* %740 to <8 x i16>*
  %742 = load <8 x i16>, <8 x i16>* %741, align 2, !alias.scope !766
  %743 = zext <8 x i16> %742 to <8 x i32>
  %744 = sub nsw <8 x i32> %739, %743
  %745 = icmp slt <8 x i32> %744, zeroinitializer
  %746 = sub nsw <8 x i32> zeroinitializer, %744
  %747 = select <8 x i1> %745, <8 x i32> %746, <8 x i32> %744
  %748 = add nuw nsw <8 x i32> %747, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %749 = lshr <8 x i32> %748, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %750 = icmp ult <8 x i32> %749, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %751 = select <8 x i1> %750, <8 x i32> %749, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %752 = trunc <8 x i32> %751 to <8 x i8>
  %753 = add nuw nsw <8 x i8> %752, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %754 = getelementptr inbounds i8, i8* %705, i64 8
  %755 = bitcast i8* %754 to <8 x i8>*
  store <8 x i8> %753, <8 x i8>* %755, align 1, !alias.scope !768, !noalias !770
  %756 = getelementptr inbounds i8, i8* %0, i64 416
  %757 = bitcast i8* %756 to <8 x i16>*
  %758 = load <8 x i16>, <8 x i16>* %757, align 2, !alias.scope !763
  %759 = zext <8 x i16> %758 to <8 x i32>
  %760 = getelementptr inbounds i8, i8* %1, i64 416
  %761 = bitcast i8* %760 to <8 x i16>*
  %762 = load <8 x i16>, <8 x i16>* %761, align 2, !alias.scope !766
  %763 = zext <8 x i16> %762 to <8 x i32>
  %764 = sub nsw <8 x i32> %759, %763
  %765 = icmp slt <8 x i32> %764, zeroinitializer
  %766 = sub nsw <8 x i32> zeroinitializer, %764
  %767 = select <8 x i1> %765, <8 x i32> %766, <8 x i32> %764
  %768 = add nuw nsw <8 x i32> %767, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %769 = lshr <8 x i32> %768, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %770 = icmp ult <8 x i32> %769, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %771 = select <8 x i1> %770, <8 x i32> %769, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %772 = trunc <8 x i32> %771 to <8 x i8>
  %773 = add nuw nsw <8 x i8> %772, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %774 = getelementptr inbounds i8, i8* %705, i64 16
  %775 = bitcast i8* %774 to <8 x i8>*
  store <8 x i8> %773, <8 x i8>* %775, align 1, !alias.scope !768, !noalias !770
  %776 = getelementptr inbounds i8, i8* %0, i64 432
  %777 = bitcast i8* %776 to <8 x i16>*
  %778 = load <8 x i16>, <8 x i16>* %777, align 2, !alias.scope !763
  %779 = zext <8 x i16> %778 to <8 x i32>
  %780 = getelementptr inbounds i8, i8* %1, i64 432
  %781 = bitcast i8* %780 to <8 x i16>*
  %782 = load <8 x i16>, <8 x i16>* %781, align 2, !alias.scope !766
  %783 = zext <8 x i16> %782 to <8 x i32>
  %784 = sub nsw <8 x i32> %779, %783
  %785 = icmp slt <8 x i32> %784, zeroinitializer
  %786 = sub nsw <8 x i32> zeroinitializer, %784
  %787 = select <8 x i1> %785, <8 x i32> %786, <8 x i32> %784
  %788 = add nuw nsw <8 x i32> %787, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %789 = lshr <8 x i32> %788, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %790 = icmp ult <8 x i32> %789, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %791 = select <8 x i1> %790, <8 x i32> %789, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %792 = trunc <8 x i32> %791 to <8 x i8>
  %793 = add nuw nsw <8 x i8> %792, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %794 = getelementptr inbounds i8, i8* %705, i64 24
  %795 = bitcast i8* %794 to <8 x i8>*
  store <8 x i8> %793, <8 x i8>* %795, align 1, !alias.scope !768, !noalias !770
  br label %817

796:                                              ; preds = %700, %796
  %797 = phi i64 [ %815, %796 ], [ 0, %700 ]
  %798 = getelementptr inbounds i16, i16* %702, i64 %797
  %799 = load i16, i16* %798, align 2
  %800 = zext i16 %799 to i32
  %801 = getelementptr inbounds i16, i16* %704, i64 %797
  %802 = load i16, i16* %801, align 2
  %803 = zext i16 %802 to i32
  %804 = sub nsw i32 %800, %803
  %805 = icmp slt i32 %804, 0
  %806 = sub nsw i32 0, %804
  %807 = select i1 %805, i32 %806, i32 %804
  %808 = add nuw nsw i32 %807, 32
  %809 = lshr i32 %808, 10
  %810 = icmp ult i32 %809, 26
  %811 = select i1 %810, i32 %809, i32 26
  %812 = trunc i32 %811 to i8
  %813 = add nuw nsw i8 %812, 38
  %814 = getelementptr inbounds i8, i8* %705, i64 %797
  store i8 %813, i8* %814, align 1
  %815 = add nuw nsw i64 %797, 1
  %816 = icmp eq i64 %815, 32
  br i1 %816, label %817, label %796, !llvm.loop !771

817:                                              ; preds = %796, %718
  %818 = getelementptr inbounds i8, i8* %0, i64 448
  %819 = bitcast i8* %818 to i16*
  %820 = getelementptr inbounds i8, i8* %1, i64 448
  %821 = bitcast i8* %820 to i16*
  %822 = getelementptr inbounds i8, i8* %705, i64 %3
  %823 = mul i64 %3, 7
  %824 = add i64 %823, 32
  %825 = getelementptr i8, i8* %2, i64 %824
  %826 = getelementptr i8, i8* %0, i64 512
  %827 = getelementptr i8, i8* %1, i64 512
  %828 = icmp ult i8* %822, %826
  %829 = icmp ult i8* %818, %825
  %830 = and i1 %828, %829
  %831 = icmp ult i8* %822, %827
  %832 = icmp ult i8* %820, %825
  %833 = and i1 %831, %832
  %834 = or i1 %830, %833
  br i1 %834, label %913, label %835

835:                                              ; preds = %817
  %836 = bitcast i8* %818 to <8 x i16>*
  %837 = load <8 x i16>, <8 x i16>* %836, align 2, !alias.scope !772
  %838 = zext <8 x i16> %837 to <8 x i32>
  %839 = bitcast i8* %820 to <8 x i16>*
  %840 = load <8 x i16>, <8 x i16>* %839, align 2, !alias.scope !775
  %841 = zext <8 x i16> %840 to <8 x i32>
  %842 = sub nsw <8 x i32> %838, %841
  %843 = icmp slt <8 x i32> %842, zeroinitializer
  %844 = sub nsw <8 x i32> zeroinitializer, %842
  %845 = select <8 x i1> %843, <8 x i32> %844, <8 x i32> %842
  %846 = add nuw nsw <8 x i32> %845, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %847 = lshr <8 x i32> %846, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %848 = icmp ult <8 x i32> %847, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %849 = select <8 x i1> %848, <8 x i32> %847, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %850 = trunc <8 x i32> %849 to <8 x i8>
  %851 = add nuw nsw <8 x i8> %850, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %852 = bitcast i8* %822 to <8 x i8>*
  store <8 x i8> %851, <8 x i8>* %852, align 1, !alias.scope !777, !noalias !779
  %853 = getelementptr inbounds i8, i8* %0, i64 464
  %854 = bitcast i8* %853 to <8 x i16>*
  %855 = load <8 x i16>, <8 x i16>* %854, align 2, !alias.scope !772
  %856 = zext <8 x i16> %855 to <8 x i32>
  %857 = getelementptr inbounds i8, i8* %1, i64 464
  %858 = bitcast i8* %857 to <8 x i16>*
  %859 = load <8 x i16>, <8 x i16>* %858, align 2, !alias.scope !775
  %860 = zext <8 x i16> %859 to <8 x i32>
  %861 = sub nsw <8 x i32> %856, %860
  %862 = icmp slt <8 x i32> %861, zeroinitializer
  %863 = sub nsw <8 x i32> zeroinitializer, %861
  %864 = select <8 x i1> %862, <8 x i32> %863, <8 x i32> %861
  %865 = add nuw nsw <8 x i32> %864, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %866 = lshr <8 x i32> %865, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %867 = icmp ult <8 x i32> %866, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %868 = select <8 x i1> %867, <8 x i32> %866, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %869 = trunc <8 x i32> %868 to <8 x i8>
  %870 = add nuw nsw <8 x i8> %869, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %871 = getelementptr inbounds i8, i8* %822, i64 8
  %872 = bitcast i8* %871 to <8 x i8>*
  store <8 x i8> %870, <8 x i8>* %872, align 1, !alias.scope !777, !noalias !779
  %873 = getelementptr inbounds i8, i8* %0, i64 480
  %874 = bitcast i8* %873 to <8 x i16>*
  %875 = load <8 x i16>, <8 x i16>* %874, align 2, !alias.scope !772
  %876 = zext <8 x i16> %875 to <8 x i32>
  %877 = getelementptr inbounds i8, i8* %1, i64 480
  %878 = bitcast i8* %877 to <8 x i16>*
  %879 = load <8 x i16>, <8 x i16>* %878, align 2, !alias.scope !775
  %880 = zext <8 x i16> %879 to <8 x i32>
  %881 = sub nsw <8 x i32> %876, %880
  %882 = icmp slt <8 x i32> %881, zeroinitializer
  %883 = sub nsw <8 x i32> zeroinitializer, %881
  %884 = select <8 x i1> %882, <8 x i32> %883, <8 x i32> %881
  %885 = add nuw nsw <8 x i32> %884, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %886 = lshr <8 x i32> %885, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %887 = icmp ult <8 x i32> %886, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %888 = select <8 x i1> %887, <8 x i32> %886, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %889 = trunc <8 x i32> %888 to <8 x i8>
  %890 = add nuw nsw <8 x i8> %889, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %891 = getelementptr inbounds i8, i8* %822, i64 16
  %892 = bitcast i8* %891 to <8 x i8>*
  store <8 x i8> %890, <8 x i8>* %892, align 1, !alias.scope !777, !noalias !779
  %893 = getelementptr inbounds i8, i8* %0, i64 496
  %894 = bitcast i8* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !772
  %896 = zext <8 x i16> %895 to <8 x i32>
  %897 = getelementptr inbounds i8, i8* %1, i64 496
  %898 = bitcast i8* %897 to <8 x i16>*
  %899 = load <8 x i16>, <8 x i16>* %898, align 2, !alias.scope !775
  %900 = zext <8 x i16> %899 to <8 x i32>
  %901 = sub nsw <8 x i32> %896, %900
  %902 = icmp slt <8 x i32> %901, zeroinitializer
  %903 = sub nsw <8 x i32> zeroinitializer, %901
  %904 = select <8 x i1> %902, <8 x i32> %903, <8 x i32> %901
  %905 = add nuw nsw <8 x i32> %904, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %906 = lshr <8 x i32> %905, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %907 = icmp ult <8 x i32> %906, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %908 = select <8 x i1> %907, <8 x i32> %906, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %909 = trunc <8 x i32> %908 to <8 x i8>
  %910 = add nuw nsw <8 x i8> %909, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %911 = getelementptr inbounds i8, i8* %822, i64 24
  %912 = bitcast i8* %911 to <8 x i8>*
  store <8 x i8> %910, <8 x i8>* %912, align 1, !alias.scope !777, !noalias !779
  br label %934

913:                                              ; preds = %817, %913
  %914 = phi i64 [ %932, %913 ], [ 0, %817 ]
  %915 = getelementptr inbounds i16, i16* %819, i64 %914
  %916 = load i16, i16* %915, align 2
  %917 = zext i16 %916 to i32
  %918 = getelementptr inbounds i16, i16* %821, i64 %914
  %919 = load i16, i16* %918, align 2
  %920 = zext i16 %919 to i32
  %921 = sub nsw i32 %917, %920
  %922 = icmp slt i32 %921, 0
  %923 = sub nsw i32 0, %921
  %924 = select i1 %922, i32 %923, i32 %921
  %925 = add nuw nsw i32 %924, 32
  %926 = lshr i32 %925, 10
  %927 = icmp ult i32 %926, 26
  %928 = select i1 %927, i32 %926, i32 26
  %929 = trunc i32 %928 to i8
  %930 = add nuw nsw i8 %929, 38
  %931 = getelementptr inbounds i8, i8* %822, i64 %914
  store i8 %930, i8* %931, align 1
  %932 = add nuw nsw i64 %914, 1
  %933 = icmp eq i64 %932, 32
  br i1 %933, label %934, label %913, !llvm.loop !780

934:                                              ; preds = %913, %835
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi8ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  %7 = getelementptr i8, i8* %2, i64 32
  %8 = getelementptr i8, i8* %0, i64 64
  %9 = getelementptr i8, i8* %1, i64 64
  %10 = icmp ugt i8* %8, %2
  %11 = icmp ugt i8* %7, %0
  %12 = and i1 %10, %11
  %13 = icmp ugt i8* %9, %2
  %14 = icmp ugt i8* %7, %1
  %15 = and i1 %13, %14
  %16 = or i1 %12, %15
  br i1 %16, label %190, label %17

17:                                               ; preds = %4
  %18 = bitcast i8* %0 to <8 x i16>*
  %19 = load <8 x i16>, <8 x i16>* %18, align 2, !alias.scope !781
  %20 = zext <8 x i16> %19 to <8 x i32>
  %21 = bitcast i8* %1 to <8 x i16>*
  %22 = load <8 x i16>, <8 x i16>* %21, align 2, !alias.scope !784
  %23 = zext <8 x i16> %22 to <8 x i32>
  %24 = sub nsw <8 x i32> %20, %23
  %25 = icmp slt <8 x i32> %24, zeroinitializer
  %26 = sub nsw <8 x i32> zeroinitializer, %24
  %27 = select <8 x i1> %25, <8 x i32> %26, <8 x i32> %24
  %28 = add nuw nsw <8 x i32> %27, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %29 = lshr <8 x i32> %28, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %30 = icmp ult <8 x i32> %29, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %31 = select <8 x i1> %30, <8 x i32> %29, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %32 = trunc <8 x i32> %31 to <8 x i8>
  %33 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %32
  %34 = bitcast i8* %2 to <8 x i8>*
  store <8 x i8> %33, <8 x i8>* %34, align 1, !alias.scope !786, !noalias !788
  %35 = getelementptr inbounds i8, i8* %0, i64 16
  %36 = bitcast i8* %35 to <8 x i16>*
  %37 = load <8 x i16>, <8 x i16>* %36, align 2, !alias.scope !781
  %38 = zext <8 x i16> %37 to <8 x i32>
  %39 = getelementptr inbounds i8, i8* %1, i64 16
  %40 = bitcast i8* %39 to <8 x i16>*
  %41 = load <8 x i16>, <8 x i16>* %40, align 2, !alias.scope !784
  %42 = zext <8 x i16> %41 to <8 x i32>
  %43 = sub nsw <8 x i32> %38, %42
  %44 = icmp slt <8 x i32> %43, zeroinitializer
  %45 = sub nsw <8 x i32> zeroinitializer, %43
  %46 = select <8 x i1> %44, <8 x i32> %45, <8 x i32> %43
  %47 = add nuw nsw <8 x i32> %46, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %48 = lshr <8 x i32> %47, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %49 = icmp ult <8 x i32> %48, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %50 = select <8 x i1> %49, <8 x i32> %48, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %51 = trunc <8 x i32> %50 to <8 x i8>
  %52 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %51
  %53 = getelementptr inbounds i8, i8* %2, i64 8
  %54 = bitcast i8* %53 to <8 x i8>*
  store <8 x i8> %52, <8 x i8>* %54, align 1, !alias.scope !786, !noalias !788
  %55 = getelementptr inbounds i8, i8* %0, i64 32
  %56 = bitcast i8* %55 to <8 x i16>*
  %57 = load <8 x i16>, <8 x i16>* %56, align 2, !alias.scope !781
  %58 = zext <8 x i16> %57 to <8 x i32>
  %59 = getelementptr inbounds i8, i8* %1, i64 32
  %60 = bitcast i8* %59 to <8 x i16>*
  %61 = load <8 x i16>, <8 x i16>* %60, align 2, !alias.scope !784
  %62 = zext <8 x i16> %61 to <8 x i32>
  %63 = sub nsw <8 x i32> %58, %62
  %64 = icmp slt <8 x i32> %63, zeroinitializer
  %65 = sub nsw <8 x i32> zeroinitializer, %63
  %66 = select <8 x i1> %64, <8 x i32> %65, <8 x i32> %63
  %67 = add nuw nsw <8 x i32> %66, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %68 = lshr <8 x i32> %67, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %69 = icmp ult <8 x i32> %68, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %70 = select <8 x i1> %69, <8 x i32> %68, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %71 = trunc <8 x i32> %70 to <8 x i8>
  %72 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %71
  %73 = getelementptr inbounds i8, i8* %2, i64 16
  %74 = bitcast i8* %73 to <8 x i8>*
  store <8 x i8> %72, <8 x i8>* %74, align 1, !alias.scope !786, !noalias !788
  %75 = getelementptr inbounds i8, i8* %0, i64 48
  %76 = bitcast i8* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !781
  %78 = zext <8 x i16> %77 to <8 x i32>
  %79 = getelementptr inbounds i8, i8* %1, i64 48
  %80 = bitcast i8* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !784
  %82 = zext <8 x i16> %81 to <8 x i32>
  %83 = sub nsw <8 x i32> %78, %82
  %84 = icmp slt <8 x i32> %83, zeroinitializer
  %85 = sub nsw <8 x i32> zeroinitializer, %83
  %86 = select <8 x i1> %84, <8 x i32> %85, <8 x i32> %83
  %87 = add nuw nsw <8 x i32> %86, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %88 = lshr <8 x i32> %87, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %89 = icmp ult <8 x i32> %88, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %90 = select <8 x i1> %89, <8 x i32> %88, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %91 = trunc <8 x i32> %90 to <8 x i8>
  %92 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %91
  %93 = getelementptr inbounds i8, i8* %2, i64 24
  %94 = bitcast i8* %93 to <8 x i8>*
  store <8 x i8> %92, <8 x i8>* %94, align 1, !alias.scope !786, !noalias !788
  br label %95

95:                                               ; preds = %190, %17
  %96 = getelementptr inbounds i8, i8* %0, i64 64
  %97 = bitcast i8* %96 to i16*
  %98 = getelementptr inbounds i8, i8* %1, i64 64
  %99 = bitcast i8* %98 to i16*
  %100 = getelementptr inbounds i8, i8* %2, i64 %3
  %101 = add i64 %3, 32
  %102 = getelementptr i8, i8* %2, i64 %101
  %103 = getelementptr i8, i8* %0, i64 128
  %104 = getelementptr i8, i8* %1, i64 128
  %105 = icmp ult i8* %100, %103
  %106 = icmp ult i8* %96, %102
  %107 = and i1 %105, %106
  %108 = icmp ult i8* %100, %104
  %109 = icmp ult i8* %98, %102
  %110 = and i1 %108, %109
  %111 = or i1 %107, %110
  br i1 %111, label %211, label %112

112:                                              ; preds = %95
  %113 = bitcast i8* %96 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !789
  %115 = zext <8 x i16> %114 to <8 x i32>
  %116 = bitcast i8* %98 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !792
  %118 = zext <8 x i16> %117 to <8 x i32>
  %119 = sub nsw <8 x i32> %115, %118
  %120 = icmp slt <8 x i32> %119, zeroinitializer
  %121 = sub nsw <8 x i32> zeroinitializer, %119
  %122 = select <8 x i1> %120, <8 x i32> %121, <8 x i32> %119
  %123 = add nuw nsw <8 x i32> %122, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %124 = lshr <8 x i32> %123, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %125 = icmp ult <8 x i32> %124, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %126 = select <8 x i1> %125, <8 x i32> %124, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %127 = trunc <8 x i32> %126 to <8 x i8>
  %128 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %127
  %129 = bitcast i8* %100 to <8 x i8>*
  store <8 x i8> %128, <8 x i8>* %129, align 1, !alias.scope !794, !noalias !796
  %130 = getelementptr inbounds i8, i8* %0, i64 80
  %131 = bitcast i8* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !789
  %133 = zext <8 x i16> %132 to <8 x i32>
  %134 = getelementptr inbounds i8, i8* %1, i64 80
  %135 = bitcast i8* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !792
  %137 = zext <8 x i16> %136 to <8 x i32>
  %138 = sub nsw <8 x i32> %133, %137
  %139 = icmp slt <8 x i32> %138, zeroinitializer
  %140 = sub nsw <8 x i32> zeroinitializer, %138
  %141 = select <8 x i1> %139, <8 x i32> %140, <8 x i32> %138
  %142 = add nuw nsw <8 x i32> %141, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %143 = lshr <8 x i32> %142, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %144 = icmp ult <8 x i32> %143, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %145 = select <8 x i1> %144, <8 x i32> %143, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %146 = trunc <8 x i32> %145 to <8 x i8>
  %147 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %146
  %148 = getelementptr inbounds i8, i8* %100, i64 8
  %149 = bitcast i8* %148 to <8 x i8>*
  store <8 x i8> %147, <8 x i8>* %149, align 1, !alias.scope !794, !noalias !796
  %150 = getelementptr inbounds i8, i8* %0, i64 96
  %151 = bitcast i8* %150 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !789
  %153 = zext <8 x i16> %152 to <8 x i32>
  %154 = getelementptr inbounds i8, i8* %1, i64 96
  %155 = bitcast i8* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !792
  %157 = zext <8 x i16> %156 to <8 x i32>
  %158 = sub nsw <8 x i32> %153, %157
  %159 = icmp slt <8 x i32> %158, zeroinitializer
  %160 = sub nsw <8 x i32> zeroinitializer, %158
  %161 = select <8 x i1> %159, <8 x i32> %160, <8 x i32> %158
  %162 = add nuw nsw <8 x i32> %161, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %163 = lshr <8 x i32> %162, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %164 = icmp ult <8 x i32> %163, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %165 = select <8 x i1> %164, <8 x i32> %163, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %166 = trunc <8 x i32> %165 to <8 x i8>
  %167 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %166
  %168 = getelementptr inbounds i8, i8* %100, i64 16
  %169 = bitcast i8* %168 to <8 x i8>*
  store <8 x i8> %167, <8 x i8>* %169, align 1, !alias.scope !794, !noalias !796
  %170 = getelementptr inbounds i8, i8* %0, i64 112
  %171 = bitcast i8* %170 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !789
  %173 = zext <8 x i16> %172 to <8 x i32>
  %174 = getelementptr inbounds i8, i8* %1, i64 112
  %175 = bitcast i8* %174 to <8 x i16>*
  %176 = load <8 x i16>, <8 x i16>* %175, align 2, !alias.scope !792
  %177 = zext <8 x i16> %176 to <8 x i32>
  %178 = sub nsw <8 x i32> %173, %177
  %179 = icmp slt <8 x i32> %178, zeroinitializer
  %180 = sub nsw <8 x i32> zeroinitializer, %178
  %181 = select <8 x i1> %179, <8 x i32> %180, <8 x i32> %178
  %182 = add nuw nsw <8 x i32> %181, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %183 = lshr <8 x i32> %182, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %184 = icmp ult <8 x i32> %183, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %185 = select <8 x i1> %184, <8 x i32> %183, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %186 = trunc <8 x i32> %185 to <8 x i8>
  %187 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %186
  %188 = getelementptr inbounds i8, i8* %100, i64 24
  %189 = bitcast i8* %188 to <8 x i8>*
  store <8 x i8> %187, <8 x i8>* %189, align 1, !alias.scope !794, !noalias !796
  br label %232

190:                                              ; preds = %4, %190
  %191 = phi i64 [ %209, %190 ], [ 0, %4 ]
  %192 = getelementptr inbounds i16, i16* %5, i64 %191
  %193 = load i16, i16* %192, align 2
  %194 = zext i16 %193 to i32
  %195 = getelementptr inbounds i16, i16* %6, i64 %191
  %196 = load i16, i16* %195, align 2
  %197 = zext i16 %196 to i32
  %198 = sub nsw i32 %194, %197
  %199 = icmp slt i32 %198, 0
  %200 = sub nsw i32 0, %198
  %201 = select i1 %199, i32 %200, i32 %198
  %202 = add nuw nsw i32 %201, 32
  %203 = lshr i32 %202, 10
  %204 = icmp ult i32 %203, 26
  %205 = select i1 %204, i32 %203, i32 26
  %206 = trunc i32 %205 to i8
  %207 = sub nuw nsw i8 26, %206
  %208 = getelementptr inbounds i8, i8* %2, i64 %191
  store i8 %207, i8* %208, align 1
  %209 = add nuw nsw i64 %191, 1
  %210 = icmp eq i64 %209, 32
  br i1 %210, label %95, label %190, !llvm.loop !797

211:                                              ; preds = %95, %211
  %212 = phi i64 [ %230, %211 ], [ 0, %95 ]
  %213 = getelementptr inbounds i16, i16* %97, i64 %212
  %214 = load i16, i16* %213, align 2
  %215 = zext i16 %214 to i32
  %216 = getelementptr inbounds i16, i16* %99, i64 %212
  %217 = load i16, i16* %216, align 2
  %218 = zext i16 %217 to i32
  %219 = sub nsw i32 %215, %218
  %220 = icmp slt i32 %219, 0
  %221 = sub nsw i32 0, %219
  %222 = select i1 %220, i32 %221, i32 %219
  %223 = add nuw nsw i32 %222, 32
  %224 = lshr i32 %223, 10
  %225 = icmp ult i32 %224, 26
  %226 = select i1 %225, i32 %224, i32 26
  %227 = trunc i32 %226 to i8
  %228 = sub nuw nsw i8 26, %227
  %229 = getelementptr inbounds i8, i8* %100, i64 %212
  store i8 %228, i8* %229, align 1
  %230 = add nuw nsw i64 %212, 1
  %231 = icmp eq i64 %230, 32
  br i1 %231, label %232, label %211, !llvm.loop !798

232:                                              ; preds = %211, %112
  %233 = getelementptr inbounds i8, i8* %0, i64 128
  %234 = bitcast i8* %233 to i16*
  %235 = getelementptr inbounds i8, i8* %1, i64 128
  %236 = bitcast i8* %235 to i16*
  %237 = getelementptr inbounds i8, i8* %100, i64 %3
  %238 = shl i64 %3, 1
  %239 = add i64 %238, 32
  %240 = getelementptr i8, i8* %2, i64 %239
  %241 = getelementptr i8, i8* %0, i64 192
  %242 = getelementptr i8, i8* %1, i64 192
  %243 = icmp ult i8* %237, %241
  %244 = icmp ult i8* %233, %240
  %245 = and i1 %243, %244
  %246 = icmp ult i8* %237, %242
  %247 = icmp ult i8* %235, %240
  %248 = and i1 %246, %247
  %249 = or i1 %245, %248
  br i1 %249, label %328, label %250

250:                                              ; preds = %232
  %251 = bitcast i8* %233 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !799
  %253 = zext <8 x i16> %252 to <8 x i32>
  %254 = bitcast i8* %235 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !802
  %256 = zext <8 x i16> %255 to <8 x i32>
  %257 = sub nsw <8 x i32> %253, %256
  %258 = icmp slt <8 x i32> %257, zeroinitializer
  %259 = sub nsw <8 x i32> zeroinitializer, %257
  %260 = select <8 x i1> %258, <8 x i32> %259, <8 x i32> %257
  %261 = add nuw nsw <8 x i32> %260, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %262 = lshr <8 x i32> %261, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %263 = icmp ult <8 x i32> %262, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %264 = select <8 x i1> %263, <8 x i32> %262, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %265 = trunc <8 x i32> %264 to <8 x i8>
  %266 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %265
  %267 = bitcast i8* %237 to <8 x i8>*
  store <8 x i8> %266, <8 x i8>* %267, align 1, !alias.scope !804, !noalias !806
  %268 = getelementptr inbounds i8, i8* %0, i64 144
  %269 = bitcast i8* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !799
  %271 = zext <8 x i16> %270 to <8 x i32>
  %272 = getelementptr inbounds i8, i8* %1, i64 144
  %273 = bitcast i8* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !802
  %275 = zext <8 x i16> %274 to <8 x i32>
  %276 = sub nsw <8 x i32> %271, %275
  %277 = icmp slt <8 x i32> %276, zeroinitializer
  %278 = sub nsw <8 x i32> zeroinitializer, %276
  %279 = select <8 x i1> %277, <8 x i32> %278, <8 x i32> %276
  %280 = add nuw nsw <8 x i32> %279, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %281 = lshr <8 x i32> %280, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %282 = icmp ult <8 x i32> %281, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %283 = select <8 x i1> %282, <8 x i32> %281, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %284 = trunc <8 x i32> %283 to <8 x i8>
  %285 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %284
  %286 = getelementptr inbounds i8, i8* %237, i64 8
  %287 = bitcast i8* %286 to <8 x i8>*
  store <8 x i8> %285, <8 x i8>* %287, align 1, !alias.scope !804, !noalias !806
  %288 = getelementptr inbounds i8, i8* %0, i64 160
  %289 = bitcast i8* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !799
  %291 = zext <8 x i16> %290 to <8 x i32>
  %292 = getelementptr inbounds i8, i8* %1, i64 160
  %293 = bitcast i8* %292 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !802
  %295 = zext <8 x i16> %294 to <8 x i32>
  %296 = sub nsw <8 x i32> %291, %295
  %297 = icmp slt <8 x i32> %296, zeroinitializer
  %298 = sub nsw <8 x i32> zeroinitializer, %296
  %299 = select <8 x i1> %297, <8 x i32> %298, <8 x i32> %296
  %300 = add nuw nsw <8 x i32> %299, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %301 = lshr <8 x i32> %300, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %302 = icmp ult <8 x i32> %301, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %303 = select <8 x i1> %302, <8 x i32> %301, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %304 = trunc <8 x i32> %303 to <8 x i8>
  %305 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %304
  %306 = getelementptr inbounds i8, i8* %237, i64 16
  %307 = bitcast i8* %306 to <8 x i8>*
  store <8 x i8> %305, <8 x i8>* %307, align 1, !alias.scope !804, !noalias !806
  %308 = getelementptr inbounds i8, i8* %0, i64 176
  %309 = bitcast i8* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !799
  %311 = zext <8 x i16> %310 to <8 x i32>
  %312 = getelementptr inbounds i8, i8* %1, i64 176
  %313 = bitcast i8* %312 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !802
  %315 = zext <8 x i16> %314 to <8 x i32>
  %316 = sub nsw <8 x i32> %311, %315
  %317 = icmp slt <8 x i32> %316, zeroinitializer
  %318 = sub nsw <8 x i32> zeroinitializer, %316
  %319 = select <8 x i1> %317, <8 x i32> %318, <8 x i32> %316
  %320 = add nuw nsw <8 x i32> %319, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %321 = lshr <8 x i32> %320, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %322 = icmp ult <8 x i32> %321, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %323 = select <8 x i1> %322, <8 x i32> %321, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %324 = trunc <8 x i32> %323 to <8 x i8>
  %325 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %324
  %326 = getelementptr inbounds i8, i8* %237, i64 24
  %327 = bitcast i8* %326 to <8 x i8>*
  store <8 x i8> %325, <8 x i8>* %327, align 1, !alias.scope !804, !noalias !806
  br label %349

328:                                              ; preds = %232, %328
  %329 = phi i64 [ %347, %328 ], [ 0, %232 ]
  %330 = getelementptr inbounds i16, i16* %234, i64 %329
  %331 = load i16, i16* %330, align 2
  %332 = zext i16 %331 to i32
  %333 = getelementptr inbounds i16, i16* %236, i64 %329
  %334 = load i16, i16* %333, align 2
  %335 = zext i16 %334 to i32
  %336 = sub nsw i32 %332, %335
  %337 = icmp slt i32 %336, 0
  %338 = sub nsw i32 0, %336
  %339 = select i1 %337, i32 %338, i32 %336
  %340 = add nuw nsw i32 %339, 32
  %341 = lshr i32 %340, 10
  %342 = icmp ult i32 %341, 26
  %343 = select i1 %342, i32 %341, i32 26
  %344 = trunc i32 %343 to i8
  %345 = sub nuw nsw i8 26, %344
  %346 = getelementptr inbounds i8, i8* %237, i64 %329
  store i8 %345, i8* %346, align 1
  %347 = add nuw nsw i64 %329, 1
  %348 = icmp eq i64 %347, 32
  br i1 %348, label %349, label %328, !llvm.loop !807

349:                                              ; preds = %328, %250
  %350 = getelementptr inbounds i8, i8* %0, i64 192
  %351 = bitcast i8* %350 to i16*
  %352 = getelementptr inbounds i8, i8* %1, i64 192
  %353 = bitcast i8* %352 to i16*
  %354 = getelementptr inbounds i8, i8* %237, i64 %3
  %355 = mul i64 %3, 3
  %356 = add i64 %355, 32
  %357 = getelementptr i8, i8* %2, i64 %356
  %358 = getelementptr i8, i8* %0, i64 256
  %359 = getelementptr i8, i8* %1, i64 256
  %360 = icmp ult i8* %354, %358
  %361 = icmp ult i8* %350, %357
  %362 = and i1 %360, %361
  %363 = icmp ult i8* %354, %359
  %364 = icmp ult i8* %352, %357
  %365 = and i1 %363, %364
  %366 = or i1 %362, %365
  br i1 %366, label %445, label %367

367:                                              ; preds = %349
  %368 = bitcast i8* %350 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !808
  %370 = zext <8 x i16> %369 to <8 x i32>
  %371 = bitcast i8* %352 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !811
  %373 = zext <8 x i16> %372 to <8 x i32>
  %374 = sub nsw <8 x i32> %370, %373
  %375 = icmp slt <8 x i32> %374, zeroinitializer
  %376 = sub nsw <8 x i32> zeroinitializer, %374
  %377 = select <8 x i1> %375, <8 x i32> %376, <8 x i32> %374
  %378 = add nuw nsw <8 x i32> %377, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %379 = lshr <8 x i32> %378, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %380 = icmp ult <8 x i32> %379, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %381 = select <8 x i1> %380, <8 x i32> %379, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %382 = trunc <8 x i32> %381 to <8 x i8>
  %383 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %382
  %384 = bitcast i8* %354 to <8 x i8>*
  store <8 x i8> %383, <8 x i8>* %384, align 1, !alias.scope !813, !noalias !815
  %385 = getelementptr inbounds i8, i8* %0, i64 208
  %386 = bitcast i8* %385 to <8 x i16>*
  %387 = load <8 x i16>, <8 x i16>* %386, align 2, !alias.scope !808
  %388 = zext <8 x i16> %387 to <8 x i32>
  %389 = getelementptr inbounds i8, i8* %1, i64 208
  %390 = bitcast i8* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !811
  %392 = zext <8 x i16> %391 to <8 x i32>
  %393 = sub nsw <8 x i32> %388, %392
  %394 = icmp slt <8 x i32> %393, zeroinitializer
  %395 = sub nsw <8 x i32> zeroinitializer, %393
  %396 = select <8 x i1> %394, <8 x i32> %395, <8 x i32> %393
  %397 = add nuw nsw <8 x i32> %396, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %398 = lshr <8 x i32> %397, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %399 = icmp ult <8 x i32> %398, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %400 = select <8 x i1> %399, <8 x i32> %398, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %401 = trunc <8 x i32> %400 to <8 x i8>
  %402 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %401
  %403 = getelementptr inbounds i8, i8* %354, i64 8
  %404 = bitcast i8* %403 to <8 x i8>*
  store <8 x i8> %402, <8 x i8>* %404, align 1, !alias.scope !813, !noalias !815
  %405 = getelementptr inbounds i8, i8* %0, i64 224
  %406 = bitcast i8* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !808
  %408 = zext <8 x i16> %407 to <8 x i32>
  %409 = getelementptr inbounds i8, i8* %1, i64 224
  %410 = bitcast i8* %409 to <8 x i16>*
  %411 = load <8 x i16>, <8 x i16>* %410, align 2, !alias.scope !811
  %412 = zext <8 x i16> %411 to <8 x i32>
  %413 = sub nsw <8 x i32> %408, %412
  %414 = icmp slt <8 x i32> %413, zeroinitializer
  %415 = sub nsw <8 x i32> zeroinitializer, %413
  %416 = select <8 x i1> %414, <8 x i32> %415, <8 x i32> %413
  %417 = add nuw nsw <8 x i32> %416, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %418 = lshr <8 x i32> %417, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %419 = icmp ult <8 x i32> %418, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %420 = select <8 x i1> %419, <8 x i32> %418, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %421 = trunc <8 x i32> %420 to <8 x i8>
  %422 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %421
  %423 = getelementptr inbounds i8, i8* %354, i64 16
  %424 = bitcast i8* %423 to <8 x i8>*
  store <8 x i8> %422, <8 x i8>* %424, align 1, !alias.scope !813, !noalias !815
  %425 = getelementptr inbounds i8, i8* %0, i64 240
  %426 = bitcast i8* %425 to <8 x i16>*
  %427 = load <8 x i16>, <8 x i16>* %426, align 2, !alias.scope !808
  %428 = zext <8 x i16> %427 to <8 x i32>
  %429 = getelementptr inbounds i8, i8* %1, i64 240
  %430 = bitcast i8* %429 to <8 x i16>*
  %431 = load <8 x i16>, <8 x i16>* %430, align 2, !alias.scope !811
  %432 = zext <8 x i16> %431 to <8 x i32>
  %433 = sub nsw <8 x i32> %428, %432
  %434 = icmp slt <8 x i32> %433, zeroinitializer
  %435 = sub nsw <8 x i32> zeroinitializer, %433
  %436 = select <8 x i1> %434, <8 x i32> %435, <8 x i32> %433
  %437 = add nuw nsw <8 x i32> %436, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %438 = lshr <8 x i32> %437, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %439 = icmp ult <8 x i32> %438, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %440 = select <8 x i1> %439, <8 x i32> %438, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %441 = trunc <8 x i32> %440 to <8 x i8>
  %442 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %441
  %443 = getelementptr inbounds i8, i8* %354, i64 24
  %444 = bitcast i8* %443 to <8 x i8>*
  store <8 x i8> %442, <8 x i8>* %444, align 1, !alias.scope !813, !noalias !815
  br label %466

445:                                              ; preds = %349, %445
  %446 = phi i64 [ %464, %445 ], [ 0, %349 ]
  %447 = getelementptr inbounds i16, i16* %351, i64 %446
  %448 = load i16, i16* %447, align 2
  %449 = zext i16 %448 to i32
  %450 = getelementptr inbounds i16, i16* %353, i64 %446
  %451 = load i16, i16* %450, align 2
  %452 = zext i16 %451 to i32
  %453 = sub nsw i32 %449, %452
  %454 = icmp slt i32 %453, 0
  %455 = sub nsw i32 0, %453
  %456 = select i1 %454, i32 %455, i32 %453
  %457 = add nuw nsw i32 %456, 32
  %458 = lshr i32 %457, 10
  %459 = icmp ult i32 %458, 26
  %460 = select i1 %459, i32 %458, i32 26
  %461 = trunc i32 %460 to i8
  %462 = sub nuw nsw i8 26, %461
  %463 = getelementptr inbounds i8, i8* %354, i64 %446
  store i8 %462, i8* %463, align 1
  %464 = add nuw nsw i64 %446, 1
  %465 = icmp eq i64 %464, 32
  br i1 %465, label %466, label %445, !llvm.loop !816

466:                                              ; preds = %445, %367
  %467 = getelementptr inbounds i8, i8* %0, i64 256
  %468 = bitcast i8* %467 to i16*
  %469 = getelementptr inbounds i8, i8* %1, i64 256
  %470 = bitcast i8* %469 to i16*
  %471 = getelementptr inbounds i8, i8* %354, i64 %3
  %472 = shl i64 %3, 2
  %473 = add i64 %472, 32
  %474 = getelementptr i8, i8* %2, i64 %473
  %475 = getelementptr i8, i8* %0, i64 320
  %476 = getelementptr i8, i8* %1, i64 320
  %477 = icmp ult i8* %471, %475
  %478 = icmp ult i8* %467, %474
  %479 = and i1 %477, %478
  %480 = icmp ult i8* %471, %476
  %481 = icmp ult i8* %469, %474
  %482 = and i1 %480, %481
  %483 = or i1 %479, %482
  br i1 %483, label %562, label %484

484:                                              ; preds = %466
  %485 = bitcast i8* %467 to <8 x i16>*
  %486 = load <8 x i16>, <8 x i16>* %485, align 2, !alias.scope !817
  %487 = zext <8 x i16> %486 to <8 x i32>
  %488 = bitcast i8* %469 to <8 x i16>*
  %489 = load <8 x i16>, <8 x i16>* %488, align 2, !alias.scope !820
  %490 = zext <8 x i16> %489 to <8 x i32>
  %491 = sub nsw <8 x i32> %487, %490
  %492 = icmp slt <8 x i32> %491, zeroinitializer
  %493 = sub nsw <8 x i32> zeroinitializer, %491
  %494 = select <8 x i1> %492, <8 x i32> %493, <8 x i32> %491
  %495 = add nuw nsw <8 x i32> %494, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %496 = lshr <8 x i32> %495, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %497 = icmp ult <8 x i32> %496, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %498 = select <8 x i1> %497, <8 x i32> %496, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %499 = trunc <8 x i32> %498 to <8 x i8>
  %500 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %499
  %501 = bitcast i8* %471 to <8 x i8>*
  store <8 x i8> %500, <8 x i8>* %501, align 1, !alias.scope !822, !noalias !824
  %502 = getelementptr inbounds i8, i8* %0, i64 272
  %503 = bitcast i8* %502 to <8 x i16>*
  %504 = load <8 x i16>, <8 x i16>* %503, align 2, !alias.scope !817
  %505 = zext <8 x i16> %504 to <8 x i32>
  %506 = getelementptr inbounds i8, i8* %1, i64 272
  %507 = bitcast i8* %506 to <8 x i16>*
  %508 = load <8 x i16>, <8 x i16>* %507, align 2, !alias.scope !820
  %509 = zext <8 x i16> %508 to <8 x i32>
  %510 = sub nsw <8 x i32> %505, %509
  %511 = icmp slt <8 x i32> %510, zeroinitializer
  %512 = sub nsw <8 x i32> zeroinitializer, %510
  %513 = select <8 x i1> %511, <8 x i32> %512, <8 x i32> %510
  %514 = add nuw nsw <8 x i32> %513, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %515 = lshr <8 x i32> %514, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %516 = icmp ult <8 x i32> %515, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %517 = select <8 x i1> %516, <8 x i32> %515, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %518 = trunc <8 x i32> %517 to <8 x i8>
  %519 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %518
  %520 = getelementptr inbounds i8, i8* %471, i64 8
  %521 = bitcast i8* %520 to <8 x i8>*
  store <8 x i8> %519, <8 x i8>* %521, align 1, !alias.scope !822, !noalias !824
  %522 = getelementptr inbounds i8, i8* %0, i64 288
  %523 = bitcast i8* %522 to <8 x i16>*
  %524 = load <8 x i16>, <8 x i16>* %523, align 2, !alias.scope !817
  %525 = zext <8 x i16> %524 to <8 x i32>
  %526 = getelementptr inbounds i8, i8* %1, i64 288
  %527 = bitcast i8* %526 to <8 x i16>*
  %528 = load <8 x i16>, <8 x i16>* %527, align 2, !alias.scope !820
  %529 = zext <8 x i16> %528 to <8 x i32>
  %530 = sub nsw <8 x i32> %525, %529
  %531 = icmp slt <8 x i32> %530, zeroinitializer
  %532 = sub nsw <8 x i32> zeroinitializer, %530
  %533 = select <8 x i1> %531, <8 x i32> %532, <8 x i32> %530
  %534 = add nuw nsw <8 x i32> %533, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %535 = lshr <8 x i32> %534, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %536 = icmp ult <8 x i32> %535, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %537 = select <8 x i1> %536, <8 x i32> %535, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %538 = trunc <8 x i32> %537 to <8 x i8>
  %539 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %538
  %540 = getelementptr inbounds i8, i8* %471, i64 16
  %541 = bitcast i8* %540 to <8 x i8>*
  store <8 x i8> %539, <8 x i8>* %541, align 1, !alias.scope !822, !noalias !824
  %542 = getelementptr inbounds i8, i8* %0, i64 304
  %543 = bitcast i8* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !817
  %545 = zext <8 x i16> %544 to <8 x i32>
  %546 = getelementptr inbounds i8, i8* %1, i64 304
  %547 = bitcast i8* %546 to <8 x i16>*
  %548 = load <8 x i16>, <8 x i16>* %547, align 2, !alias.scope !820
  %549 = zext <8 x i16> %548 to <8 x i32>
  %550 = sub nsw <8 x i32> %545, %549
  %551 = icmp slt <8 x i32> %550, zeroinitializer
  %552 = sub nsw <8 x i32> zeroinitializer, %550
  %553 = select <8 x i1> %551, <8 x i32> %552, <8 x i32> %550
  %554 = add nuw nsw <8 x i32> %553, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %555 = lshr <8 x i32> %554, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %556 = icmp ult <8 x i32> %555, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %557 = select <8 x i1> %556, <8 x i32> %555, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %558 = trunc <8 x i32> %557 to <8 x i8>
  %559 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %558
  %560 = getelementptr inbounds i8, i8* %471, i64 24
  %561 = bitcast i8* %560 to <8 x i8>*
  store <8 x i8> %559, <8 x i8>* %561, align 1, !alias.scope !822, !noalias !824
  br label %583

562:                                              ; preds = %466, %562
  %563 = phi i64 [ %581, %562 ], [ 0, %466 ]
  %564 = getelementptr inbounds i16, i16* %468, i64 %563
  %565 = load i16, i16* %564, align 2
  %566 = zext i16 %565 to i32
  %567 = getelementptr inbounds i16, i16* %470, i64 %563
  %568 = load i16, i16* %567, align 2
  %569 = zext i16 %568 to i32
  %570 = sub nsw i32 %566, %569
  %571 = icmp slt i32 %570, 0
  %572 = sub nsw i32 0, %570
  %573 = select i1 %571, i32 %572, i32 %570
  %574 = add nuw nsw i32 %573, 32
  %575 = lshr i32 %574, 10
  %576 = icmp ult i32 %575, 26
  %577 = select i1 %576, i32 %575, i32 26
  %578 = trunc i32 %577 to i8
  %579 = sub nuw nsw i8 26, %578
  %580 = getelementptr inbounds i8, i8* %471, i64 %563
  store i8 %579, i8* %580, align 1
  %581 = add nuw nsw i64 %563, 1
  %582 = icmp eq i64 %581, 32
  br i1 %582, label %583, label %562, !llvm.loop !825

583:                                              ; preds = %562, %484
  %584 = getelementptr inbounds i8, i8* %0, i64 320
  %585 = bitcast i8* %584 to i16*
  %586 = getelementptr inbounds i8, i8* %1, i64 320
  %587 = bitcast i8* %586 to i16*
  %588 = getelementptr inbounds i8, i8* %471, i64 %3
  %589 = mul i64 %3, 5
  %590 = add i64 %589, 32
  %591 = getelementptr i8, i8* %2, i64 %590
  %592 = getelementptr i8, i8* %0, i64 384
  %593 = getelementptr i8, i8* %1, i64 384
  %594 = icmp ult i8* %588, %592
  %595 = icmp ult i8* %584, %591
  %596 = and i1 %594, %595
  %597 = icmp ult i8* %588, %593
  %598 = icmp ult i8* %586, %591
  %599 = and i1 %597, %598
  %600 = or i1 %596, %599
  br i1 %600, label %679, label %601

601:                                              ; preds = %583
  %602 = bitcast i8* %584 to <8 x i16>*
  %603 = load <8 x i16>, <8 x i16>* %602, align 2, !alias.scope !826
  %604 = zext <8 x i16> %603 to <8 x i32>
  %605 = bitcast i8* %586 to <8 x i16>*
  %606 = load <8 x i16>, <8 x i16>* %605, align 2, !alias.scope !829
  %607 = zext <8 x i16> %606 to <8 x i32>
  %608 = sub nsw <8 x i32> %604, %607
  %609 = icmp slt <8 x i32> %608, zeroinitializer
  %610 = sub nsw <8 x i32> zeroinitializer, %608
  %611 = select <8 x i1> %609, <8 x i32> %610, <8 x i32> %608
  %612 = add nuw nsw <8 x i32> %611, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %613 = lshr <8 x i32> %612, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %614 = icmp ult <8 x i32> %613, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %615 = select <8 x i1> %614, <8 x i32> %613, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %616 = trunc <8 x i32> %615 to <8 x i8>
  %617 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %616
  %618 = bitcast i8* %588 to <8 x i8>*
  store <8 x i8> %617, <8 x i8>* %618, align 1, !alias.scope !831, !noalias !833
  %619 = getelementptr inbounds i8, i8* %0, i64 336
  %620 = bitcast i8* %619 to <8 x i16>*
  %621 = load <8 x i16>, <8 x i16>* %620, align 2, !alias.scope !826
  %622 = zext <8 x i16> %621 to <8 x i32>
  %623 = getelementptr inbounds i8, i8* %1, i64 336
  %624 = bitcast i8* %623 to <8 x i16>*
  %625 = load <8 x i16>, <8 x i16>* %624, align 2, !alias.scope !829
  %626 = zext <8 x i16> %625 to <8 x i32>
  %627 = sub nsw <8 x i32> %622, %626
  %628 = icmp slt <8 x i32> %627, zeroinitializer
  %629 = sub nsw <8 x i32> zeroinitializer, %627
  %630 = select <8 x i1> %628, <8 x i32> %629, <8 x i32> %627
  %631 = add nuw nsw <8 x i32> %630, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %632 = lshr <8 x i32> %631, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %633 = icmp ult <8 x i32> %632, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %634 = select <8 x i1> %633, <8 x i32> %632, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %635 = trunc <8 x i32> %634 to <8 x i8>
  %636 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %635
  %637 = getelementptr inbounds i8, i8* %588, i64 8
  %638 = bitcast i8* %637 to <8 x i8>*
  store <8 x i8> %636, <8 x i8>* %638, align 1, !alias.scope !831, !noalias !833
  %639 = getelementptr inbounds i8, i8* %0, i64 352
  %640 = bitcast i8* %639 to <8 x i16>*
  %641 = load <8 x i16>, <8 x i16>* %640, align 2, !alias.scope !826
  %642 = zext <8 x i16> %641 to <8 x i32>
  %643 = getelementptr inbounds i8, i8* %1, i64 352
  %644 = bitcast i8* %643 to <8 x i16>*
  %645 = load <8 x i16>, <8 x i16>* %644, align 2, !alias.scope !829
  %646 = zext <8 x i16> %645 to <8 x i32>
  %647 = sub nsw <8 x i32> %642, %646
  %648 = icmp slt <8 x i32> %647, zeroinitializer
  %649 = sub nsw <8 x i32> zeroinitializer, %647
  %650 = select <8 x i1> %648, <8 x i32> %649, <8 x i32> %647
  %651 = add nuw nsw <8 x i32> %650, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %652 = lshr <8 x i32> %651, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %653 = icmp ult <8 x i32> %652, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %654 = select <8 x i1> %653, <8 x i32> %652, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %655 = trunc <8 x i32> %654 to <8 x i8>
  %656 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %655
  %657 = getelementptr inbounds i8, i8* %588, i64 16
  %658 = bitcast i8* %657 to <8 x i8>*
  store <8 x i8> %656, <8 x i8>* %658, align 1, !alias.scope !831, !noalias !833
  %659 = getelementptr inbounds i8, i8* %0, i64 368
  %660 = bitcast i8* %659 to <8 x i16>*
  %661 = load <8 x i16>, <8 x i16>* %660, align 2, !alias.scope !826
  %662 = zext <8 x i16> %661 to <8 x i32>
  %663 = getelementptr inbounds i8, i8* %1, i64 368
  %664 = bitcast i8* %663 to <8 x i16>*
  %665 = load <8 x i16>, <8 x i16>* %664, align 2, !alias.scope !829
  %666 = zext <8 x i16> %665 to <8 x i32>
  %667 = sub nsw <8 x i32> %662, %666
  %668 = icmp slt <8 x i32> %667, zeroinitializer
  %669 = sub nsw <8 x i32> zeroinitializer, %667
  %670 = select <8 x i1> %668, <8 x i32> %669, <8 x i32> %667
  %671 = add nuw nsw <8 x i32> %670, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %672 = lshr <8 x i32> %671, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %673 = icmp ult <8 x i32> %672, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %674 = select <8 x i1> %673, <8 x i32> %672, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %675 = trunc <8 x i32> %674 to <8 x i8>
  %676 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %675
  %677 = getelementptr inbounds i8, i8* %588, i64 24
  %678 = bitcast i8* %677 to <8 x i8>*
  store <8 x i8> %676, <8 x i8>* %678, align 1, !alias.scope !831, !noalias !833
  br label %700

679:                                              ; preds = %583, %679
  %680 = phi i64 [ %698, %679 ], [ 0, %583 ]
  %681 = getelementptr inbounds i16, i16* %585, i64 %680
  %682 = load i16, i16* %681, align 2
  %683 = zext i16 %682 to i32
  %684 = getelementptr inbounds i16, i16* %587, i64 %680
  %685 = load i16, i16* %684, align 2
  %686 = zext i16 %685 to i32
  %687 = sub nsw i32 %683, %686
  %688 = icmp slt i32 %687, 0
  %689 = sub nsw i32 0, %687
  %690 = select i1 %688, i32 %689, i32 %687
  %691 = add nuw nsw i32 %690, 32
  %692 = lshr i32 %691, 10
  %693 = icmp ult i32 %692, 26
  %694 = select i1 %693, i32 %692, i32 26
  %695 = trunc i32 %694 to i8
  %696 = sub nuw nsw i8 26, %695
  %697 = getelementptr inbounds i8, i8* %588, i64 %680
  store i8 %696, i8* %697, align 1
  %698 = add nuw nsw i64 %680, 1
  %699 = icmp eq i64 %698, 32
  br i1 %699, label %700, label %679, !llvm.loop !834

700:                                              ; preds = %679, %601
  %701 = getelementptr inbounds i8, i8* %0, i64 384
  %702 = bitcast i8* %701 to i16*
  %703 = getelementptr inbounds i8, i8* %1, i64 384
  %704 = bitcast i8* %703 to i16*
  %705 = getelementptr inbounds i8, i8* %588, i64 %3
  %706 = mul i64 %3, 6
  %707 = add i64 %706, 32
  %708 = getelementptr i8, i8* %2, i64 %707
  %709 = getelementptr i8, i8* %0, i64 448
  %710 = getelementptr i8, i8* %1, i64 448
  %711 = icmp ult i8* %705, %709
  %712 = icmp ult i8* %701, %708
  %713 = and i1 %711, %712
  %714 = icmp ult i8* %705, %710
  %715 = icmp ult i8* %703, %708
  %716 = and i1 %714, %715
  %717 = or i1 %713, %716
  br i1 %717, label %796, label %718

718:                                              ; preds = %700
  %719 = bitcast i8* %701 to <8 x i16>*
  %720 = load <8 x i16>, <8 x i16>* %719, align 2, !alias.scope !835
  %721 = zext <8 x i16> %720 to <8 x i32>
  %722 = bitcast i8* %703 to <8 x i16>*
  %723 = load <8 x i16>, <8 x i16>* %722, align 2, !alias.scope !838
  %724 = zext <8 x i16> %723 to <8 x i32>
  %725 = sub nsw <8 x i32> %721, %724
  %726 = icmp slt <8 x i32> %725, zeroinitializer
  %727 = sub nsw <8 x i32> zeroinitializer, %725
  %728 = select <8 x i1> %726, <8 x i32> %727, <8 x i32> %725
  %729 = add nuw nsw <8 x i32> %728, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %730 = lshr <8 x i32> %729, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %731 = icmp ult <8 x i32> %730, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %732 = select <8 x i1> %731, <8 x i32> %730, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %733 = trunc <8 x i32> %732 to <8 x i8>
  %734 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %733
  %735 = bitcast i8* %705 to <8 x i8>*
  store <8 x i8> %734, <8 x i8>* %735, align 1, !alias.scope !840, !noalias !842
  %736 = getelementptr inbounds i8, i8* %0, i64 400
  %737 = bitcast i8* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !835
  %739 = zext <8 x i16> %738 to <8 x i32>
  %740 = getelementptr inbounds i8, i8* %1, i64 400
  %741 = bitcast i8* %740 to <8 x i16>*
  %742 = load <8 x i16>, <8 x i16>* %741, align 2, !alias.scope !838
  %743 = zext <8 x i16> %742 to <8 x i32>
  %744 = sub nsw <8 x i32> %739, %743
  %745 = icmp slt <8 x i32> %744, zeroinitializer
  %746 = sub nsw <8 x i32> zeroinitializer, %744
  %747 = select <8 x i1> %745, <8 x i32> %746, <8 x i32> %744
  %748 = add nuw nsw <8 x i32> %747, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %749 = lshr <8 x i32> %748, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %750 = icmp ult <8 x i32> %749, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %751 = select <8 x i1> %750, <8 x i32> %749, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %752 = trunc <8 x i32> %751 to <8 x i8>
  %753 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %752
  %754 = getelementptr inbounds i8, i8* %705, i64 8
  %755 = bitcast i8* %754 to <8 x i8>*
  store <8 x i8> %753, <8 x i8>* %755, align 1, !alias.scope !840, !noalias !842
  %756 = getelementptr inbounds i8, i8* %0, i64 416
  %757 = bitcast i8* %756 to <8 x i16>*
  %758 = load <8 x i16>, <8 x i16>* %757, align 2, !alias.scope !835
  %759 = zext <8 x i16> %758 to <8 x i32>
  %760 = getelementptr inbounds i8, i8* %1, i64 416
  %761 = bitcast i8* %760 to <8 x i16>*
  %762 = load <8 x i16>, <8 x i16>* %761, align 2, !alias.scope !838
  %763 = zext <8 x i16> %762 to <8 x i32>
  %764 = sub nsw <8 x i32> %759, %763
  %765 = icmp slt <8 x i32> %764, zeroinitializer
  %766 = sub nsw <8 x i32> zeroinitializer, %764
  %767 = select <8 x i1> %765, <8 x i32> %766, <8 x i32> %764
  %768 = add nuw nsw <8 x i32> %767, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %769 = lshr <8 x i32> %768, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %770 = icmp ult <8 x i32> %769, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %771 = select <8 x i1> %770, <8 x i32> %769, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %772 = trunc <8 x i32> %771 to <8 x i8>
  %773 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %772
  %774 = getelementptr inbounds i8, i8* %705, i64 16
  %775 = bitcast i8* %774 to <8 x i8>*
  store <8 x i8> %773, <8 x i8>* %775, align 1, !alias.scope !840, !noalias !842
  %776 = getelementptr inbounds i8, i8* %0, i64 432
  %777 = bitcast i8* %776 to <8 x i16>*
  %778 = load <8 x i16>, <8 x i16>* %777, align 2, !alias.scope !835
  %779 = zext <8 x i16> %778 to <8 x i32>
  %780 = getelementptr inbounds i8, i8* %1, i64 432
  %781 = bitcast i8* %780 to <8 x i16>*
  %782 = load <8 x i16>, <8 x i16>* %781, align 2, !alias.scope !838
  %783 = zext <8 x i16> %782 to <8 x i32>
  %784 = sub nsw <8 x i32> %779, %783
  %785 = icmp slt <8 x i32> %784, zeroinitializer
  %786 = sub nsw <8 x i32> zeroinitializer, %784
  %787 = select <8 x i1> %785, <8 x i32> %786, <8 x i32> %784
  %788 = add nuw nsw <8 x i32> %787, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %789 = lshr <8 x i32> %788, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %790 = icmp ult <8 x i32> %789, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %791 = select <8 x i1> %790, <8 x i32> %789, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %792 = trunc <8 x i32> %791 to <8 x i8>
  %793 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %792
  %794 = getelementptr inbounds i8, i8* %705, i64 24
  %795 = bitcast i8* %794 to <8 x i8>*
  store <8 x i8> %793, <8 x i8>* %795, align 1, !alias.scope !840, !noalias !842
  br label %817

796:                                              ; preds = %700, %796
  %797 = phi i64 [ %815, %796 ], [ 0, %700 ]
  %798 = getelementptr inbounds i16, i16* %702, i64 %797
  %799 = load i16, i16* %798, align 2
  %800 = zext i16 %799 to i32
  %801 = getelementptr inbounds i16, i16* %704, i64 %797
  %802 = load i16, i16* %801, align 2
  %803 = zext i16 %802 to i32
  %804 = sub nsw i32 %800, %803
  %805 = icmp slt i32 %804, 0
  %806 = sub nsw i32 0, %804
  %807 = select i1 %805, i32 %806, i32 %804
  %808 = add nuw nsw i32 %807, 32
  %809 = lshr i32 %808, 10
  %810 = icmp ult i32 %809, 26
  %811 = select i1 %810, i32 %809, i32 26
  %812 = trunc i32 %811 to i8
  %813 = sub nuw nsw i8 26, %812
  %814 = getelementptr inbounds i8, i8* %705, i64 %797
  store i8 %813, i8* %814, align 1
  %815 = add nuw nsw i64 %797, 1
  %816 = icmp eq i64 %815, 32
  br i1 %816, label %817, label %796, !llvm.loop !843

817:                                              ; preds = %796, %718
  %818 = getelementptr inbounds i8, i8* %0, i64 448
  %819 = bitcast i8* %818 to i16*
  %820 = getelementptr inbounds i8, i8* %1, i64 448
  %821 = bitcast i8* %820 to i16*
  %822 = getelementptr inbounds i8, i8* %705, i64 %3
  %823 = mul i64 %3, 7
  %824 = add i64 %823, 32
  %825 = getelementptr i8, i8* %2, i64 %824
  %826 = getelementptr i8, i8* %0, i64 512
  %827 = getelementptr i8, i8* %1, i64 512
  %828 = icmp ult i8* %822, %826
  %829 = icmp ult i8* %818, %825
  %830 = and i1 %828, %829
  %831 = icmp ult i8* %822, %827
  %832 = icmp ult i8* %820, %825
  %833 = and i1 %831, %832
  %834 = or i1 %830, %833
  br i1 %834, label %913, label %835

835:                                              ; preds = %817
  %836 = bitcast i8* %818 to <8 x i16>*
  %837 = load <8 x i16>, <8 x i16>* %836, align 2, !alias.scope !844
  %838 = zext <8 x i16> %837 to <8 x i32>
  %839 = bitcast i8* %820 to <8 x i16>*
  %840 = load <8 x i16>, <8 x i16>* %839, align 2, !alias.scope !847
  %841 = zext <8 x i16> %840 to <8 x i32>
  %842 = sub nsw <8 x i32> %838, %841
  %843 = icmp slt <8 x i32> %842, zeroinitializer
  %844 = sub nsw <8 x i32> zeroinitializer, %842
  %845 = select <8 x i1> %843, <8 x i32> %844, <8 x i32> %842
  %846 = add nuw nsw <8 x i32> %845, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %847 = lshr <8 x i32> %846, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %848 = icmp ult <8 x i32> %847, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %849 = select <8 x i1> %848, <8 x i32> %847, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %850 = trunc <8 x i32> %849 to <8 x i8>
  %851 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %850
  %852 = bitcast i8* %822 to <8 x i8>*
  store <8 x i8> %851, <8 x i8>* %852, align 1, !alias.scope !849, !noalias !851
  %853 = getelementptr inbounds i8, i8* %0, i64 464
  %854 = bitcast i8* %853 to <8 x i16>*
  %855 = load <8 x i16>, <8 x i16>* %854, align 2, !alias.scope !844
  %856 = zext <8 x i16> %855 to <8 x i32>
  %857 = getelementptr inbounds i8, i8* %1, i64 464
  %858 = bitcast i8* %857 to <8 x i16>*
  %859 = load <8 x i16>, <8 x i16>* %858, align 2, !alias.scope !847
  %860 = zext <8 x i16> %859 to <8 x i32>
  %861 = sub nsw <8 x i32> %856, %860
  %862 = icmp slt <8 x i32> %861, zeroinitializer
  %863 = sub nsw <8 x i32> zeroinitializer, %861
  %864 = select <8 x i1> %862, <8 x i32> %863, <8 x i32> %861
  %865 = add nuw nsw <8 x i32> %864, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %866 = lshr <8 x i32> %865, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %867 = icmp ult <8 x i32> %866, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %868 = select <8 x i1> %867, <8 x i32> %866, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %869 = trunc <8 x i32> %868 to <8 x i8>
  %870 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %869
  %871 = getelementptr inbounds i8, i8* %822, i64 8
  %872 = bitcast i8* %871 to <8 x i8>*
  store <8 x i8> %870, <8 x i8>* %872, align 1, !alias.scope !849, !noalias !851
  %873 = getelementptr inbounds i8, i8* %0, i64 480
  %874 = bitcast i8* %873 to <8 x i16>*
  %875 = load <8 x i16>, <8 x i16>* %874, align 2, !alias.scope !844
  %876 = zext <8 x i16> %875 to <8 x i32>
  %877 = getelementptr inbounds i8, i8* %1, i64 480
  %878 = bitcast i8* %877 to <8 x i16>*
  %879 = load <8 x i16>, <8 x i16>* %878, align 2, !alias.scope !847
  %880 = zext <8 x i16> %879 to <8 x i32>
  %881 = sub nsw <8 x i32> %876, %880
  %882 = icmp slt <8 x i32> %881, zeroinitializer
  %883 = sub nsw <8 x i32> zeroinitializer, %881
  %884 = select <8 x i1> %882, <8 x i32> %883, <8 x i32> %881
  %885 = add nuw nsw <8 x i32> %884, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %886 = lshr <8 x i32> %885, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %887 = icmp ult <8 x i32> %886, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %888 = select <8 x i1> %887, <8 x i32> %886, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %889 = trunc <8 x i32> %888 to <8 x i8>
  %890 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %889
  %891 = getelementptr inbounds i8, i8* %822, i64 16
  %892 = bitcast i8* %891 to <8 x i8>*
  store <8 x i8> %890, <8 x i8>* %892, align 1, !alias.scope !849, !noalias !851
  %893 = getelementptr inbounds i8, i8* %0, i64 496
  %894 = bitcast i8* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !844
  %896 = zext <8 x i16> %895 to <8 x i32>
  %897 = getelementptr inbounds i8, i8* %1, i64 496
  %898 = bitcast i8* %897 to <8 x i16>*
  %899 = load <8 x i16>, <8 x i16>* %898, align 2, !alias.scope !847
  %900 = zext <8 x i16> %899 to <8 x i32>
  %901 = sub nsw <8 x i32> %896, %900
  %902 = icmp slt <8 x i32> %901, zeroinitializer
  %903 = sub nsw <8 x i32> zeroinitializer, %901
  %904 = select <8 x i1> %902, <8 x i32> %903, <8 x i32> %901
  %905 = add nuw nsw <8 x i32> %904, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %906 = lshr <8 x i32> %905, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %907 = icmp ult <8 x i32> %906, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %908 = select <8 x i1> %907, <8 x i32> %906, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %909 = trunc <8 x i32> %908 to <8 x i8>
  %910 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %909
  %911 = getelementptr inbounds i8, i8* %822, i64 24
  %912 = bitcast i8* %911 to <8 x i8>*
  store <8 x i8> %910, <8 x i8>* %912, align 1, !alias.scope !849, !noalias !851
  br label %934

913:                                              ; preds = %817, %913
  %914 = phi i64 [ %932, %913 ], [ 0, %817 ]
  %915 = getelementptr inbounds i16, i16* %819, i64 %914
  %916 = load i16, i16* %915, align 2
  %917 = zext i16 %916 to i32
  %918 = getelementptr inbounds i16, i16* %821, i64 %914
  %919 = load i16, i16* %918, align 2
  %920 = zext i16 %919 to i32
  %921 = sub nsw i32 %917, %920
  %922 = icmp slt i32 %921, 0
  %923 = sub nsw i32 0, %921
  %924 = select i1 %922, i32 %923, i32 %921
  %925 = add nuw nsw i32 %924, 32
  %926 = lshr i32 %925, 10
  %927 = icmp ult i32 %926, 26
  %928 = select i1 %927, i32 %926, i32 26
  %929 = trunc i32 %928 to i8
  %930 = sub nuw nsw i8 26, %929
  %931 = getelementptr inbounds i8, i8* %822, i64 %914
  store i8 %930, i8* %931, align 1
  %932 = add nuw nsw i64 %914, 1
  %933 = icmp eq i64 %932, 32
  br i1 %933, label %934, label %913, !llvm.loop !852

934:                                              ; preds = %913, %835
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi16ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %109, %4
  %8 = phi i64 [ %115, %109 ], [ 0, %4 ]
  %9 = phi i8* [ %112, %109 ], [ %2, %4 ]
  %10 = phi i16* [ %110, %109 ], [ %5, %4 ]
  %11 = phi i32 [ %113, %109 ], [ 0, %4 ]
  %12 = phi i16* [ %111, %109 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 32
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 6
  %18 = add i64 %17, 64
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %116, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !853
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !856
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !858, !noalias !860
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !853
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !856
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !858, !noalias !860
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !853
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !856
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !858, !noalias !860
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !853
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !856
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !858, !noalias !860
  br label %109

108:                                              ; preds = %109
  ret void

109:                                              ; preds = %116, %30
  %110 = getelementptr inbounds i16, i16* %10, i64 32
  %111 = getelementptr inbounds i16, i16* %12, i64 32
  %112 = getelementptr inbounds i8, i8* %9, i64 %3
  %113 = add nuw nsw i32 %11, 1
  %114 = icmp eq i32 %113, 16
  %115 = add i64 %8, 1
  br i1 %114, label %108, label %7

116:                                              ; preds = %7, %116
  %117 = phi i64 [ %135, %116 ], [ 0, %7 ]
  %118 = getelementptr inbounds i16, i16* %10, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = getelementptr inbounds i16, i16* %12, i64 %117
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = sub nsw i32 %120, %123
  %125 = icmp slt i32 %124, 0
  %126 = sub nsw i32 0, %124
  %127 = select i1 %125, i32 %126, i32 %124
  %128 = add nuw nsw i32 %127, 32
  %129 = lshr i32 %128, 10
  %130 = icmp ult i32 %129, 26
  %131 = select i1 %130, i32 %129, i32 26
  %132 = trunc i32 %131 to i8
  %133 = add nuw nsw i8 %132, 38
  %134 = getelementptr inbounds i8, i8* %9, i64 %117
  store i8 %133, i8* %134, align 1
  %135 = add nuw nsw i64 %117, 1
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %109, label %116, !llvm.loop !861
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi16ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %109, %4
  %8 = phi i64 [ %115, %109 ], [ 0, %4 ]
  %9 = phi i8* [ %112, %109 ], [ %2, %4 ]
  %10 = phi i16* [ %110, %109 ], [ %5, %4 ]
  %11 = phi i32 [ %113, %109 ], [ 0, %4 ]
  %12 = phi i16* [ %111, %109 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 32
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 6
  %18 = add i64 %17, 64
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %116, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !862
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !865
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !867, !noalias !869
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !862
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !865
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !867, !noalias !869
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !862
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !865
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !867, !noalias !869
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !862
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !865
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !867, !noalias !869
  br label %109

108:                                              ; preds = %109
  ret void

109:                                              ; preds = %116, %30
  %110 = getelementptr inbounds i16, i16* %10, i64 32
  %111 = getelementptr inbounds i16, i16* %12, i64 32
  %112 = getelementptr inbounds i8, i8* %9, i64 %3
  %113 = add nuw nsw i32 %11, 1
  %114 = icmp eq i32 %113, 16
  %115 = add i64 %8, 1
  br i1 %114, label %108, label %7

116:                                              ; preds = %7, %116
  %117 = phi i64 [ %135, %116 ], [ 0, %7 ]
  %118 = getelementptr inbounds i16, i16* %10, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = getelementptr inbounds i16, i16* %12, i64 %117
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = sub nsw i32 %120, %123
  %125 = icmp slt i32 %124, 0
  %126 = sub nsw i32 0, %124
  %127 = select i1 %125, i32 %126, i32 %124
  %128 = add nuw nsw i32 %127, 32
  %129 = lshr i32 %128, 10
  %130 = icmp ult i32 %129, 26
  %131 = select i1 %130, i32 %129, i32 26
  %132 = trunc i32 %131 to i8
  %133 = sub nuw nsw i8 26, %132
  %134 = getelementptr inbounds i8, i8* %9, i64 %117
  store i8 %133, i8* %134, align 1
  %135 = add nuw nsw i64 %117, 1
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %109, label %116, !llvm.loop !870
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi32ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %109, %4
  %8 = phi i64 [ %115, %109 ], [ 0, %4 ]
  %9 = phi i8* [ %112, %109 ], [ %2, %4 ]
  %10 = phi i16* [ %110, %109 ], [ %5, %4 ]
  %11 = phi i32 [ %113, %109 ], [ 0, %4 ]
  %12 = phi i16* [ %111, %109 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 32
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 6
  %18 = add i64 %17, 64
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %116, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !871
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !874
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !876, !noalias !878
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !871
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !874
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !876, !noalias !878
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !871
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !874
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !876, !noalias !878
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !871
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !874
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !876, !noalias !878
  br label %109

108:                                              ; preds = %109
  ret void

109:                                              ; preds = %116, %30
  %110 = getelementptr inbounds i16, i16* %10, i64 32
  %111 = getelementptr inbounds i16, i16* %12, i64 32
  %112 = getelementptr inbounds i8, i8* %9, i64 %3
  %113 = add nuw nsw i32 %11, 1
  %114 = icmp eq i32 %113, 32
  %115 = add i64 %8, 1
  br i1 %114, label %108, label %7

116:                                              ; preds = %7, %116
  %117 = phi i64 [ %135, %116 ], [ 0, %7 ]
  %118 = getelementptr inbounds i16, i16* %10, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = getelementptr inbounds i16, i16* %12, i64 %117
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = sub nsw i32 %120, %123
  %125 = icmp slt i32 %124, 0
  %126 = sub nsw i32 0, %124
  %127 = select i1 %125, i32 %126, i32 %124
  %128 = add nuw nsw i32 %127, 32
  %129 = lshr i32 %128, 10
  %130 = icmp ult i32 %129, 26
  %131 = select i1 %130, i32 %129, i32 26
  %132 = trunc i32 %131 to i8
  %133 = add nuw nsw i8 %132, 38
  %134 = getelementptr inbounds i8, i8* %9, i64 %117
  store i8 %133, i8* %134, align 1
  %135 = add nuw nsw i64 %117, 1
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %109, label %116, !llvm.loop !879
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi32ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %109, %4
  %8 = phi i64 [ %115, %109 ], [ 0, %4 ]
  %9 = phi i8* [ %112, %109 ], [ %2, %4 ]
  %10 = phi i16* [ %110, %109 ], [ %5, %4 ]
  %11 = phi i32 [ %113, %109 ], [ 0, %4 ]
  %12 = phi i16* [ %111, %109 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 32
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 6
  %18 = add i64 %17, 64
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %116, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !880
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !883
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !885, !noalias !887
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !880
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !883
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !885, !noalias !887
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !880
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !883
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !885, !noalias !887
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !880
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !883
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !885, !noalias !887
  br label %109

108:                                              ; preds = %109
  ret void

109:                                              ; preds = %116, %30
  %110 = getelementptr inbounds i16, i16* %10, i64 32
  %111 = getelementptr inbounds i16, i16* %12, i64 32
  %112 = getelementptr inbounds i8, i8* %9, i64 %3
  %113 = add nuw nsw i32 %11, 1
  %114 = icmp eq i32 %113, 32
  %115 = add i64 %8, 1
  br i1 %114, label %108, label %7

116:                                              ; preds = %7, %116
  %117 = phi i64 [ %135, %116 ], [ 0, %7 ]
  %118 = getelementptr inbounds i16, i16* %10, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = getelementptr inbounds i16, i16* %12, i64 %117
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = sub nsw i32 %120, %123
  %125 = icmp slt i32 %124, 0
  %126 = sub nsw i32 0, %124
  %127 = select i1 %125, i32 %126, i32 %124
  %128 = add nuw nsw i32 %127, 32
  %129 = lshr i32 %128, 10
  %130 = icmp ult i32 %129, 26
  %131 = select i1 %130, i32 %129, i32 26
  %132 = trunc i32 %131 to i8
  %133 = sub nuw nsw i8 26, %132
  %134 = getelementptr inbounds i8, i8* %9, i64 %117
  store i8 %133, i8* %134, align 1
  %135 = add nuw nsw i64 %117, 1
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %109, label %116, !llvm.loop !888
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi64ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %109, %4
  %8 = phi i64 [ %115, %109 ], [ 0, %4 ]
  %9 = phi i8* [ %112, %109 ], [ %2, %4 ]
  %10 = phi i16* [ %110, %109 ], [ %5, %4 ]
  %11 = phi i32 [ %113, %109 ], [ 0, %4 ]
  %12 = phi i16* [ %111, %109 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 32
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 6
  %18 = add i64 %17, 64
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %116, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !889
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !892
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !894, !noalias !896
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !889
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !892
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !894, !noalias !896
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !889
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !892
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !894, !noalias !896
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !889
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !892
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !894, !noalias !896
  br label %109

108:                                              ; preds = %109
  ret void

109:                                              ; preds = %116, %30
  %110 = getelementptr inbounds i16, i16* %10, i64 32
  %111 = getelementptr inbounds i16, i16* %12, i64 32
  %112 = getelementptr inbounds i8, i8* %9, i64 %3
  %113 = add nuw nsw i32 %11, 1
  %114 = icmp eq i32 %113, 64
  %115 = add i64 %8, 1
  br i1 %114, label %108, label %7

116:                                              ; preds = %7, %116
  %117 = phi i64 [ %135, %116 ], [ 0, %7 ]
  %118 = getelementptr inbounds i16, i16* %10, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = getelementptr inbounds i16, i16* %12, i64 %117
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = sub nsw i32 %120, %123
  %125 = icmp slt i32 %124, 0
  %126 = sub nsw i32 0, %124
  %127 = select i1 %125, i32 %126, i32 %124
  %128 = add nuw nsw i32 %127, 32
  %129 = lshr i32 %128, 10
  %130 = icmp ult i32 %129, 26
  %131 = select i1 %130, i32 %129, i32 26
  %132 = trunc i32 %131 to i8
  %133 = add nuw nsw i8 %132, 38
  %134 = getelementptr inbounds i8, i8* %9, i64 %117
  store i8 %133, i8* %134, align 1
  %135 = add nuw nsw i64 %117, 1
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %109, label %116, !llvm.loop !897
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi32ELi64ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %109, %4
  %8 = phi i64 [ %115, %109 ], [ 0, %4 ]
  %9 = phi i8* [ %112, %109 ], [ %2, %4 ]
  %10 = phi i16* [ %110, %109 ], [ %5, %4 ]
  %11 = phi i32 [ %113, %109 ], [ 0, %4 ]
  %12 = phi i16* [ %111, %109 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 32
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 6
  %18 = add i64 %17, 64
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %116, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !898
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !901
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !903, !noalias !905
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !898
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !901
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !903, !noalias !905
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !898
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !901
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !903, !noalias !905
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !898
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !901
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !903, !noalias !905
  br label %109

108:                                              ; preds = %109
  ret void

109:                                              ; preds = %116, %30
  %110 = getelementptr inbounds i16, i16* %10, i64 32
  %111 = getelementptr inbounds i16, i16* %12, i64 32
  %112 = getelementptr inbounds i8, i8* %9, i64 %3
  %113 = add nuw nsw i32 %11, 1
  %114 = icmp eq i32 %113, 64
  %115 = add i64 %8, 1
  br i1 %114, label %108, label %7

116:                                              ; preds = %7, %116
  %117 = phi i64 [ %135, %116 ], [ 0, %7 ]
  %118 = getelementptr inbounds i16, i16* %10, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = getelementptr inbounds i16, i16* %12, i64 %117
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = sub nsw i32 %120, %123
  %125 = icmp slt i32 %124, 0
  %126 = sub nsw i32 0, %124
  %127 = select i1 %125, i32 %126, i32 %124
  %128 = add nuw nsw i32 %127, 32
  %129 = lshr i32 %128, 10
  %130 = icmp ult i32 %129, 26
  %131 = select i1 %130, i32 %129, i32 26
  %132 = trunc i32 %131 to i8
  %133 = sub nuw nsw i8 26, %132
  %134 = getelementptr inbounds i8, i8* %9, i64 %117
  store i8 %133, i8* %134, align 1
  %135 = add nuw nsw i64 %117, 1
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %109, label %116, !llvm.loop !906
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi16ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !907
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !910
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !912, !noalias !914
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !907
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !910
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !912, !noalias !914
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !907
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !910
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !912, !noalias !914
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !907
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !910
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !912, !noalias !914
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !907
  %111 = zext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !910
  %115 = zext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %121 = lshr <8 x i32> %120, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = add nuw nsw <8 x i8> %124, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !912, !noalias !914
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !907
  %131 = zext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !910
  %135 = zext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %141 = lshr <8 x i32> %140, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = add nuw nsw <8 x i8> %144, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !912, !noalias !914
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !907
  %151 = zext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !910
  %155 = zext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %161 = lshr <8 x i32> %160, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = add nuw nsw <8 x i8> %164, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !912, !noalias !914
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !907
  %171 = zext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !910
  %175 = zext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %181 = lshr <8 x i32> %180, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = add nuw nsw <8 x i8> %184, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !912, !noalias !914
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 16
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = zext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 32
  %209 = lshr i32 %208, 10
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = add nuw nsw i8 %212, 38
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !915
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi16ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !916
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !919
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !921, !noalias !923
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !916
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !919
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !921, !noalias !923
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !916
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !919
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !921, !noalias !923
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !916
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !919
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !921, !noalias !923
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !916
  %111 = zext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !919
  %115 = zext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %121 = lshr <8 x i32> %120, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %124
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !921, !noalias !923
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !916
  %131 = zext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !919
  %135 = zext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %141 = lshr <8 x i32> %140, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %144
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !921, !noalias !923
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !916
  %151 = zext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !919
  %155 = zext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %161 = lshr <8 x i32> %160, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %164
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !921, !noalias !923
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !916
  %171 = zext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !919
  %175 = zext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %181 = lshr <8 x i32> %180, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %184
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !921, !noalias !923
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 16
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = zext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 32
  %209 = lshr i32 %208, 10
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = sub nuw nsw i8 26, %212
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !924
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi32ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !925
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !928
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !930, !noalias !932
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !925
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !928
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !930, !noalias !932
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !925
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !928
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !930, !noalias !932
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !925
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !928
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !930, !noalias !932
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !925
  %111 = zext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !928
  %115 = zext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %121 = lshr <8 x i32> %120, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = add nuw nsw <8 x i8> %124, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !930, !noalias !932
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !925
  %131 = zext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !928
  %135 = zext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %141 = lshr <8 x i32> %140, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = add nuw nsw <8 x i8> %144, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !930, !noalias !932
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !925
  %151 = zext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !928
  %155 = zext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %161 = lshr <8 x i32> %160, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = add nuw nsw <8 x i8> %164, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !930, !noalias !932
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !925
  %171 = zext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !928
  %175 = zext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %181 = lshr <8 x i32> %180, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = add nuw nsw <8 x i8> %184, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !930, !noalias !932
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 32
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = zext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 32
  %209 = lshr i32 %208, 10
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = add nuw nsw i8 %212, 38
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !933
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi32ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !934
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !937
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !939, !noalias !941
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !934
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !937
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !939, !noalias !941
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !934
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !937
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !939, !noalias !941
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !934
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !937
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !939, !noalias !941
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !934
  %111 = zext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !937
  %115 = zext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %121 = lshr <8 x i32> %120, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %124
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !939, !noalias !941
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !934
  %131 = zext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !937
  %135 = zext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %141 = lshr <8 x i32> %140, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %144
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !939, !noalias !941
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !934
  %151 = zext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !937
  %155 = zext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %161 = lshr <8 x i32> %160, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %164
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !939, !noalias !941
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !934
  %171 = zext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !937
  %175 = zext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %181 = lshr <8 x i32> %180, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %184
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !939, !noalias !941
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 32
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = zext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 32
  %209 = lshr i32 %208, 10
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = sub nuw nsw i8 26, %212
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !942
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi64ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !943
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !946
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !948, !noalias !950
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !943
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !946
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !948, !noalias !950
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !943
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !946
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !948, !noalias !950
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !943
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !946
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !948, !noalias !950
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !943
  %111 = zext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !946
  %115 = zext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %121 = lshr <8 x i32> %120, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = add nuw nsw <8 x i8> %124, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !948, !noalias !950
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !943
  %131 = zext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !946
  %135 = zext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %141 = lshr <8 x i32> %140, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = add nuw nsw <8 x i8> %144, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !948, !noalias !950
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !943
  %151 = zext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !946
  %155 = zext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %161 = lshr <8 x i32> %160, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = add nuw nsw <8 x i8> %164, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !948, !noalias !950
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !943
  %171 = zext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !946
  %175 = zext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %181 = lshr <8 x i32> %180, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = add nuw nsw <8 x i8> %184, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !948, !noalias !950
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 64
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = zext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 32
  %209 = lshr i32 %208, 10
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = add nuw nsw i8 %212, 38
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !951
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi64ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !952
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !955
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !957, !noalias !959
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !952
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !955
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !957, !noalias !959
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !952
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !955
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !957, !noalias !959
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !952
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !955
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !957, !noalias !959
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !952
  %111 = zext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !955
  %115 = zext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %121 = lshr <8 x i32> %120, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %124
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !957, !noalias !959
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !952
  %131 = zext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !955
  %135 = zext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %141 = lshr <8 x i32> %140, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %144
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !957, !noalias !959
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !952
  %151 = zext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !955
  %155 = zext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %161 = lshr <8 x i32> %160, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %164
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !957, !noalias !959
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !952
  %171 = zext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !955
  %175 = zext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %181 = lshr <8 x i32> %180, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %184
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !957, !noalias !959
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 64
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = zext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 32
  %209 = lshr i32 %208, 10
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = sub nuw nsw i8 26, %212
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !960
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi128ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !961
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !964
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = add nuw nsw <8 x i8> %45, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !966, !noalias !968
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !961
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !964
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = add nuw nsw <8 x i8> %64, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !966, !noalias !968
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !961
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !964
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = add nuw nsw <8 x i8> %84, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !966, !noalias !968
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !961
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !964
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = add nuw nsw <8 x i8> %104, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !966, !noalias !968
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !961
  %111 = zext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !964
  %115 = zext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %121 = lshr <8 x i32> %120, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = add nuw nsw <8 x i8> %124, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !966, !noalias !968
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !961
  %131 = zext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !964
  %135 = zext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %141 = lshr <8 x i32> %140, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = add nuw nsw <8 x i8> %144, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !966, !noalias !968
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !961
  %151 = zext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !964
  %155 = zext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %161 = lshr <8 x i32> %160, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = add nuw nsw <8 x i8> %164, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !966, !noalias !968
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !961
  %171 = zext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !964
  %175 = zext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %181 = lshr <8 x i32> %180, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = add nuw nsw <8 x i8> %184, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !966, !noalias !968
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 128
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = zext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 32
  %209 = lshr i32 %208, 10
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = add nuw nsw i8 %212, 38
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !969
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi64ELi128ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %189, %4
  %8 = phi i64 [ %195, %189 ], [ 0, %4 ]
  %9 = phi i8* [ %192, %189 ], [ %2, %4 ]
  %10 = phi i16* [ %190, %189 ], [ %5, %4 ]
  %11 = phi i32 [ %193, %189 ], [ 0, %4 ]
  %12 = phi i16* [ %191, %189 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 64
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 7
  %18 = add i64 %17, 128
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %196, label %30

30:                                               ; preds = %7
  %31 = bitcast i16* %10 to <8 x i16>*
  %32 = load <8 x i16>, <8 x i16>* %31, align 2, !alias.scope !970
  %33 = zext <8 x i16> %32 to <8 x i32>
  %34 = bitcast i16* %12 to <8 x i16>*
  %35 = load <8 x i16>, <8 x i16>* %34, align 2, !alias.scope !973
  %36 = zext <8 x i16> %35 to <8 x i32>
  %37 = sub nsw <8 x i32> %33, %36
  %38 = icmp slt <8 x i32> %37, zeroinitializer
  %39 = sub nsw <8 x i32> zeroinitializer, %37
  %40 = select <8 x i1> %38, <8 x i32> %39, <8 x i32> %37
  %41 = add nuw nsw <8 x i32> %40, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %42 = lshr <8 x i32> %41, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %43 = icmp ult <8 x i32> %42, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %44 = select <8 x i1> %43, <8 x i32> %42, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %45 = trunc <8 x i32> %44 to <8 x i8>
  %46 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %45
  %47 = bitcast i8* %9 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !975, !noalias !977
  %48 = getelementptr inbounds i16, i16* %10, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !970
  %51 = zext <8 x i16> %50 to <8 x i32>
  %52 = getelementptr inbounds i16, i16* %12, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !973
  %55 = zext <8 x i16> %54 to <8 x i32>
  %56 = sub nsw <8 x i32> %51, %55
  %57 = icmp slt <8 x i32> %56, zeroinitializer
  %58 = sub nsw <8 x i32> zeroinitializer, %56
  %59 = select <8 x i1> %57, <8 x i32> %58, <8 x i32> %56
  %60 = add nuw nsw <8 x i32> %59, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %61 = lshr <8 x i32> %60, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %62 = icmp ult <8 x i32> %61, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %63 = select <8 x i1> %62, <8 x i32> %61, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %64 = trunc <8 x i32> %63 to <8 x i8>
  %65 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %64
  %66 = getelementptr inbounds i8, i8* %9, i64 8
  %67 = bitcast i8* %66 to <8 x i8>*
  store <8 x i8> %65, <8 x i8>* %67, align 1, !alias.scope !975, !noalias !977
  %68 = getelementptr inbounds i16, i16* %10, i64 16
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !970
  %71 = zext <8 x i16> %70 to <8 x i32>
  %72 = getelementptr inbounds i16, i16* %12, i64 16
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !973
  %75 = zext <8 x i16> %74 to <8 x i32>
  %76 = sub nsw <8 x i32> %71, %75
  %77 = icmp slt <8 x i32> %76, zeroinitializer
  %78 = sub nsw <8 x i32> zeroinitializer, %76
  %79 = select <8 x i1> %77, <8 x i32> %78, <8 x i32> %76
  %80 = add nuw nsw <8 x i32> %79, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %81 = lshr <8 x i32> %80, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %82 = icmp ult <8 x i32> %81, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %83 = select <8 x i1> %82, <8 x i32> %81, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %84 = trunc <8 x i32> %83 to <8 x i8>
  %85 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %84
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to <8 x i8>*
  store <8 x i8> %85, <8 x i8>* %87, align 1, !alias.scope !975, !noalias !977
  %88 = getelementptr inbounds i16, i16* %10, i64 24
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !970
  %91 = zext <8 x i16> %90 to <8 x i32>
  %92 = getelementptr inbounds i16, i16* %12, i64 24
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !973
  %95 = zext <8 x i16> %94 to <8 x i32>
  %96 = sub nsw <8 x i32> %91, %95
  %97 = icmp slt <8 x i32> %96, zeroinitializer
  %98 = sub nsw <8 x i32> zeroinitializer, %96
  %99 = select <8 x i1> %97, <8 x i32> %98, <8 x i32> %96
  %100 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = lshr <8 x i32> %100, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %102 = icmp ult <8 x i32> %101, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %103 = select <8 x i1> %102, <8 x i32> %101, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %104 = trunc <8 x i32> %103 to <8 x i8>
  %105 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %104
  %106 = getelementptr inbounds i8, i8* %9, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %105, <8 x i8>* %107, align 1, !alias.scope !975, !noalias !977
  %108 = getelementptr inbounds i16, i16* %10, i64 32
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !970
  %111 = zext <8 x i16> %110 to <8 x i32>
  %112 = getelementptr inbounds i16, i16* %12, i64 32
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !973
  %115 = zext <8 x i16> %114 to <8 x i32>
  %116 = sub nsw <8 x i32> %111, %115
  %117 = icmp slt <8 x i32> %116, zeroinitializer
  %118 = sub nsw <8 x i32> zeroinitializer, %116
  %119 = select <8 x i1> %117, <8 x i32> %118, <8 x i32> %116
  %120 = add nuw nsw <8 x i32> %119, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %121 = lshr <8 x i32> %120, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %122 = icmp ult <8 x i32> %121, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %123 = select <8 x i1> %122, <8 x i32> %121, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %124 = trunc <8 x i32> %123 to <8 x i8>
  %125 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %124
  %126 = getelementptr inbounds i8, i8* %9, i64 32
  %127 = bitcast i8* %126 to <8 x i8>*
  store <8 x i8> %125, <8 x i8>* %127, align 1, !alias.scope !975, !noalias !977
  %128 = getelementptr inbounds i16, i16* %10, i64 40
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !970
  %131 = zext <8 x i16> %130 to <8 x i32>
  %132 = getelementptr inbounds i16, i16* %12, i64 40
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !973
  %135 = zext <8 x i16> %134 to <8 x i32>
  %136 = sub nsw <8 x i32> %131, %135
  %137 = icmp slt <8 x i32> %136, zeroinitializer
  %138 = sub nsw <8 x i32> zeroinitializer, %136
  %139 = select <8 x i1> %137, <8 x i32> %138, <8 x i32> %136
  %140 = add nuw nsw <8 x i32> %139, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %141 = lshr <8 x i32> %140, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %142 = icmp ult <8 x i32> %141, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %143 = select <8 x i1> %142, <8 x i32> %141, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %144 = trunc <8 x i32> %143 to <8 x i8>
  %145 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %144
  %146 = getelementptr inbounds i8, i8* %9, i64 40
  %147 = bitcast i8* %146 to <8 x i8>*
  store <8 x i8> %145, <8 x i8>* %147, align 1, !alias.scope !975, !noalias !977
  %148 = getelementptr inbounds i16, i16* %10, i64 48
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !970
  %151 = zext <8 x i16> %150 to <8 x i32>
  %152 = getelementptr inbounds i16, i16* %12, i64 48
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !973
  %155 = zext <8 x i16> %154 to <8 x i32>
  %156 = sub nsw <8 x i32> %151, %155
  %157 = icmp slt <8 x i32> %156, zeroinitializer
  %158 = sub nsw <8 x i32> zeroinitializer, %156
  %159 = select <8 x i1> %157, <8 x i32> %158, <8 x i32> %156
  %160 = add nuw nsw <8 x i32> %159, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %161 = lshr <8 x i32> %160, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %162 = icmp ult <8 x i32> %161, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %163 = select <8 x i1> %162, <8 x i32> %161, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %164 = trunc <8 x i32> %163 to <8 x i8>
  %165 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %164
  %166 = getelementptr inbounds i8, i8* %9, i64 48
  %167 = bitcast i8* %166 to <8 x i8>*
  store <8 x i8> %165, <8 x i8>* %167, align 1, !alias.scope !975, !noalias !977
  %168 = getelementptr inbounds i16, i16* %10, i64 56
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !970
  %171 = zext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, i16* %12, i64 56
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !973
  %175 = zext <8 x i16> %174 to <8 x i32>
  %176 = sub nsw <8 x i32> %171, %175
  %177 = icmp slt <8 x i32> %176, zeroinitializer
  %178 = sub nsw <8 x i32> zeroinitializer, %176
  %179 = select <8 x i1> %177, <8 x i32> %178, <8 x i32> %176
  %180 = add nuw nsw <8 x i32> %179, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %181 = lshr <8 x i32> %180, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %182 = icmp ult <8 x i32> %181, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %183 = select <8 x i1> %182, <8 x i32> %181, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %184 = trunc <8 x i32> %183 to <8 x i8>
  %185 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %184
  %186 = getelementptr inbounds i8, i8* %9, i64 56
  %187 = bitcast i8* %186 to <8 x i8>*
  store <8 x i8> %185, <8 x i8>* %187, align 1, !alias.scope !975, !noalias !977
  br label %189

188:                                              ; preds = %189
  ret void

189:                                              ; preds = %196, %30
  %190 = getelementptr inbounds i16, i16* %10, i64 64
  %191 = getelementptr inbounds i16, i16* %12, i64 64
  %192 = getelementptr inbounds i8, i8* %9, i64 %3
  %193 = add nuw nsw i32 %11, 1
  %194 = icmp eq i32 %193, 128
  %195 = add i64 %8, 1
  br i1 %194, label %188, label %7

196:                                              ; preds = %7, %196
  %197 = phi i64 [ %215, %196 ], [ 0, %7 ]
  %198 = getelementptr inbounds i16, i16* %10, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = zext i16 %199 to i32
  %201 = getelementptr inbounds i16, i16* %12, i64 %197
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = sub nsw i32 %200, %203
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = add nuw nsw i32 %207, 32
  %209 = lshr i32 %208, 10
  %210 = icmp ult i32 %209, 26
  %211 = select i1 %210, i32 %209, i32 26
  %212 = trunc i32 %211 to i8
  %213 = sub nuw nsw i8 26, %212
  %214 = getelementptr inbounds i8, i8* %9, i64 %197
  store i8 %213, i8* %214, align 1
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %189, label %196, !llvm.loop !978
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi64ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %55, %4
  %8 = phi i64 [ %61, %55 ], [ 0, %4 ]
  %9 = phi i8* [ %58, %55 ], [ %2, %4 ]
  %10 = phi i16* [ %56, %55 ], [ %5, %4 ]
  %11 = phi i32 [ %59, %55 ], [ 0, %4 ]
  %12 = phi i16* [ %57, %55 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 128
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 8
  %18 = add i64 %17, 256
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %62, label %30

30:                                               ; preds = %7, %30
  %31 = phi i64 [ %52, %30 ], [ 0, %7 ]
  %32 = getelementptr inbounds i16, i16* %10, i64 %31
  %33 = bitcast i16* %32 to <8 x i16>*
  %34 = load <8 x i16>, <8 x i16>* %33, align 2, !alias.scope !979
  %35 = zext <8 x i16> %34 to <8 x i32>
  %36 = getelementptr inbounds i16, i16* %12, i64 %31
  %37 = bitcast i16* %36 to <8 x i16>*
  %38 = load <8 x i16>, <8 x i16>* %37, align 2, !alias.scope !982
  %39 = zext <8 x i16> %38 to <8 x i32>
  %40 = sub nsw <8 x i32> %35, %39
  %41 = icmp slt <8 x i32> %40, zeroinitializer
  %42 = sub nsw <8 x i32> zeroinitializer, %40
  %43 = select <8 x i1> %41, <8 x i32> %42, <8 x i32> %40
  %44 = add nuw nsw <8 x i32> %43, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %45 = lshr <8 x i32> %44, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %46 = icmp ult <8 x i32> %45, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %47 = select <8 x i1> %46, <8 x i32> %45, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %48 = trunc <8 x i32> %47 to <8 x i8>
  %49 = add nuw nsw <8 x i8> %48, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %50 = getelementptr inbounds i8, i8* %9, i64 %31
  %51 = bitcast i8* %50 to <8 x i8>*
  store <8 x i8> %49, <8 x i8>* %51, align 1, !alias.scope !984, !noalias !986
  %52 = add i64 %31, 8
  %53 = icmp eq i64 %52, 128
  br i1 %53, label %55, label %30, !llvm.loop !987

54:                                               ; preds = %55
  ret void

55:                                               ; preds = %30, %62
  %56 = getelementptr inbounds i16, i16* %10, i64 128
  %57 = getelementptr inbounds i16, i16* %12, i64 128
  %58 = getelementptr inbounds i8, i8* %9, i64 %3
  %59 = add nuw nsw i32 %11, 1
  %60 = icmp eq i32 %59, 64
  %61 = add i64 %8, 1
  br i1 %60, label %54, label %7

62:                                               ; preds = %7, %62
  %63 = phi i64 [ %81, %62 ], [ 0, %7 ]
  %64 = getelementptr inbounds i16, i16* %10, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = getelementptr inbounds i16, i16* %12, i64 %63
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = sub nsw i32 %66, %69
  %71 = icmp slt i32 %70, 0
  %72 = sub nsw i32 0, %70
  %73 = select i1 %71, i32 %72, i32 %70
  %74 = add nuw nsw i32 %73, 32
  %75 = lshr i32 %74, 10
  %76 = icmp ult i32 %75, 26
  %77 = select i1 %76, i32 %75, i32 26
  %78 = trunc i32 %77 to i8
  %79 = add nuw nsw i8 %78, 38
  %80 = getelementptr inbounds i8, i8* %9, i64 %63
  store i8 %79, i8* %80, align 1
  %81 = add nuw nsw i64 %63, 1
  %82 = icmp eq i64 %81, 128
  br i1 %82, label %55, label %62, !llvm.loop !988
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi64ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %55, %4
  %8 = phi i64 [ %61, %55 ], [ 0, %4 ]
  %9 = phi i8* [ %58, %55 ], [ %2, %4 ]
  %10 = phi i16* [ %56, %55 ], [ %5, %4 ]
  %11 = phi i32 [ %59, %55 ], [ 0, %4 ]
  %12 = phi i16* [ %57, %55 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 128
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 8
  %18 = add i64 %17, 256
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %62, label %30

30:                                               ; preds = %7, %30
  %31 = phi i64 [ %52, %30 ], [ 0, %7 ]
  %32 = getelementptr inbounds i16, i16* %10, i64 %31
  %33 = bitcast i16* %32 to <8 x i16>*
  %34 = load <8 x i16>, <8 x i16>* %33, align 2, !alias.scope !989
  %35 = zext <8 x i16> %34 to <8 x i32>
  %36 = getelementptr inbounds i16, i16* %12, i64 %31
  %37 = bitcast i16* %36 to <8 x i16>*
  %38 = load <8 x i16>, <8 x i16>* %37, align 2, !alias.scope !992
  %39 = zext <8 x i16> %38 to <8 x i32>
  %40 = sub nsw <8 x i32> %35, %39
  %41 = icmp slt <8 x i32> %40, zeroinitializer
  %42 = sub nsw <8 x i32> zeroinitializer, %40
  %43 = select <8 x i1> %41, <8 x i32> %42, <8 x i32> %40
  %44 = add nuw nsw <8 x i32> %43, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %45 = lshr <8 x i32> %44, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %46 = icmp ult <8 x i32> %45, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %47 = select <8 x i1> %46, <8 x i32> %45, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %48 = trunc <8 x i32> %47 to <8 x i8>
  %49 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %48
  %50 = getelementptr inbounds i8, i8* %9, i64 %31
  %51 = bitcast i8* %50 to <8 x i8>*
  store <8 x i8> %49, <8 x i8>* %51, align 1, !alias.scope !994, !noalias !996
  %52 = add i64 %31, 8
  %53 = icmp eq i64 %52, 128
  br i1 %53, label %55, label %30, !llvm.loop !997

54:                                               ; preds = %55
  ret void

55:                                               ; preds = %30, %62
  %56 = getelementptr inbounds i16, i16* %10, i64 128
  %57 = getelementptr inbounds i16, i16* %12, i64 128
  %58 = getelementptr inbounds i8, i8* %9, i64 %3
  %59 = add nuw nsw i32 %11, 1
  %60 = icmp eq i32 %59, 64
  %61 = add i64 %8, 1
  br i1 %60, label %54, label %7

62:                                               ; preds = %7, %62
  %63 = phi i64 [ %81, %62 ], [ 0, %7 ]
  %64 = getelementptr inbounds i16, i16* %10, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = getelementptr inbounds i16, i16* %12, i64 %63
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = sub nsw i32 %66, %69
  %71 = icmp slt i32 %70, 0
  %72 = sub nsw i32 0, %70
  %73 = select i1 %71, i32 %72, i32 %70
  %74 = add nuw nsw i32 %73, 32
  %75 = lshr i32 %74, 10
  %76 = icmp ult i32 %75, 26
  %77 = select i1 %76, i32 %75, i32 26
  %78 = trunc i32 %77 to i8
  %79 = sub nuw nsw i8 26, %78
  %80 = getelementptr inbounds i8, i8* %9, i64 %63
  store i8 %79, i8* %80, align 1
  %81 = add nuw nsw i64 %63, 1
  %82 = icmp eq i64 %81, 128
  br i1 %82, label %55, label %62, !llvm.loop !998
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi128ELi10ELb0EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %55, %4
  %8 = phi i64 [ %61, %55 ], [ 0, %4 ]
  %9 = phi i8* [ %58, %55 ], [ %2, %4 ]
  %10 = phi i16* [ %56, %55 ], [ %5, %4 ]
  %11 = phi i32 [ %59, %55 ], [ 0, %4 ]
  %12 = phi i16* [ %57, %55 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 128
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 8
  %18 = add i64 %17, 256
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %62, label %30

30:                                               ; preds = %7, %30
  %31 = phi i64 [ %52, %30 ], [ 0, %7 ]
  %32 = getelementptr inbounds i16, i16* %10, i64 %31
  %33 = bitcast i16* %32 to <8 x i16>*
  %34 = load <8 x i16>, <8 x i16>* %33, align 2, !alias.scope !999
  %35 = zext <8 x i16> %34 to <8 x i32>
  %36 = getelementptr inbounds i16, i16* %12, i64 %31
  %37 = bitcast i16* %36 to <8 x i16>*
  %38 = load <8 x i16>, <8 x i16>* %37, align 2, !alias.scope !1002
  %39 = zext <8 x i16> %38 to <8 x i32>
  %40 = sub nsw <8 x i32> %35, %39
  %41 = icmp slt <8 x i32> %40, zeroinitializer
  %42 = sub nsw <8 x i32> zeroinitializer, %40
  %43 = select <8 x i1> %41, <8 x i32> %42, <8 x i32> %40
  %44 = add nuw nsw <8 x i32> %43, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %45 = lshr <8 x i32> %44, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %46 = icmp ult <8 x i32> %45, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %47 = select <8 x i1> %46, <8 x i32> %45, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %48 = trunc <8 x i32> %47 to <8 x i8>
  %49 = add nuw nsw <8 x i8> %48, <i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38, i8 38>
  %50 = getelementptr inbounds i8, i8* %9, i64 %31
  %51 = bitcast i8* %50 to <8 x i8>*
  store <8 x i8> %49, <8 x i8>* %51, align 1, !alias.scope !1004, !noalias !1006
  %52 = add i64 %31, 8
  %53 = icmp eq i64 %52, 128
  br i1 %53, label %55, label %30, !llvm.loop !1007

54:                                               ; preds = %55
  ret void

55:                                               ; preds = %30, %62
  %56 = getelementptr inbounds i16, i16* %10, i64 128
  %57 = getelementptr inbounds i16, i16* %12, i64 128
  %58 = getelementptr inbounds i8, i8* %9, i64 %3
  %59 = add nuw nsw i32 %11, 1
  %60 = icmp eq i32 %59, 128
  %61 = add i64 %8, 1
  br i1 %60, label %54, label %7

62:                                               ; preds = %7, %62
  %63 = phi i64 [ %81, %62 ], [ 0, %7 ]
  %64 = getelementptr inbounds i16, i16* %10, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = getelementptr inbounds i16, i16* %12, i64 %63
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = sub nsw i32 %66, %69
  %71 = icmp slt i32 %70, 0
  %72 = sub nsw i32 0, %70
  %73 = select i1 %71, i32 %72, i32 %70
  %74 = add nuw nsw i32 %73, 32
  %75 = lshr i32 %74, 10
  %76 = icmp ult i32 %75, 26
  %77 = select i1 %76, i32 %75, i32 26
  %78 = trunc i32 %77 to i8
  %79 = add nuw nsw i8 %78, 38
  %80 = getelementptr inbounds i8, i8* %9, i64 %63
  store i8 %79, i8* %80, align 1
  %81 = add nuw nsw i64 %63, 1
  %82 = icmp eq i64 %81, 128
  br i1 %82, label %55, label %62, !llvm.loop !1008
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_112WeightMask_CILi128ELi128ELi10ELb1EEEvPKvS4_Phl(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture, i64) #0 {
  %5 = bitcast i8* %0 to i16*
  %6 = bitcast i8* %1 to i16*
  br label %7

7:                                                ; preds = %55, %4
  %8 = phi i64 [ %61, %55 ], [ 0, %4 ]
  %9 = phi i8* [ %58, %55 ], [ %2, %4 ]
  %10 = phi i16* [ %56, %55 ], [ %5, %4 ]
  %11 = phi i32 [ %59, %55 ], [ 0, %4 ]
  %12 = phi i16* [ %57, %55 ], [ %6, %4 ]
  %13 = mul i64 %8, %3
  %14 = getelementptr i8, i8* %2, i64 %13
  %15 = add i64 %13, 128
  %16 = getelementptr i8, i8* %2, i64 %15
  %17 = shl nuw nsw i64 %8, 8
  %18 = add i64 %17, 256
  %19 = getelementptr i8, i8* %1, i64 %18
  %20 = getelementptr i8, i8* %1, i64 %17
  %21 = getelementptr i8, i8* %0, i64 %18
  %22 = getelementptr i8, i8* %0, i64 %17
  %23 = icmp ult i8* %14, %21
  %24 = icmp ult i8* %22, %16
  %25 = and i1 %23, %24
  %26 = icmp ult i8* %14, %19
  %27 = icmp ult i8* %20, %16
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %62, label %30

30:                                               ; preds = %7, %30
  %31 = phi i64 [ %52, %30 ], [ 0, %7 ]
  %32 = getelementptr inbounds i16, i16* %10, i64 %31
  %33 = bitcast i16* %32 to <8 x i16>*
  %34 = load <8 x i16>, <8 x i16>* %33, align 2, !alias.scope !1009
  %35 = zext <8 x i16> %34 to <8 x i32>
  %36 = getelementptr inbounds i16, i16* %12, i64 %31
  %37 = bitcast i16* %36 to <8 x i16>*
  %38 = load <8 x i16>, <8 x i16>* %37, align 2, !alias.scope !1012
  %39 = zext <8 x i16> %38 to <8 x i32>
  %40 = sub nsw <8 x i32> %35, %39
  %41 = icmp slt <8 x i32> %40, zeroinitializer
  %42 = sub nsw <8 x i32> zeroinitializer, %40
  %43 = select <8 x i1> %41, <8 x i32> %42, <8 x i32> %40
  %44 = add nuw nsw <8 x i32> %43, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %45 = lshr <8 x i32> %44, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %46 = icmp ult <8 x i32> %45, <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %47 = select <8 x i1> %46, <8 x i32> %45, <8 x i32> <i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26, i32 26>
  %48 = trunc <8 x i32> %47 to <8 x i8>
  %49 = sub nuw nsw <8 x i8> <i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26, i8 26>, %48
  %50 = getelementptr inbounds i8, i8* %9, i64 %31
  %51 = bitcast i8* %50 to <8 x i8>*
  store <8 x i8> %49, <8 x i8>* %51, align 1, !alias.scope !1014, !noalias !1016
  %52 = add i64 %31, 8
  %53 = icmp eq i64 %52, 128
  br i1 %53, label %55, label %30, !llvm.loop !1017

54:                                               ; preds = %55
  ret void

55:                                               ; preds = %30, %62
  %56 = getelementptr inbounds i16, i16* %10, i64 128
  %57 = getelementptr inbounds i16, i16* %12, i64 128
  %58 = getelementptr inbounds i8, i8* %9, i64 %3
  %59 = add nuw nsw i32 %11, 1
  %60 = icmp eq i32 %59, 128
  %61 = add i64 %8, 1
  br i1 %60, label %54, label %7

62:                                               ; preds = %7, %62
  %63 = phi i64 [ %81, %62 ], [ 0, %7 ]
  %64 = getelementptr inbounds i16, i16* %10, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = getelementptr inbounds i16, i16* %12, i64 %63
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = sub nsw i32 %66, %69
  %71 = icmp slt i32 %70, 0
  %72 = sub nsw i32 0, %70
  %73 = select i1 %71, i32 %72, i32 %70
  %74 = add nuw nsw i32 %73, 32
  %75 = lshr i32 %74, 10
  %76 = icmp ult i32 %75, 26
  %77 = select i1 %76, i32 %75, i32 26
  %78 = trunc i32 %77 to i8
  %79 = sub nuw nsw i8 26, %78
  %80 = getelementptr inbounds i8, i8* %9, i64 %63
  store i8 %79, i8* %80, align 1
  %81 = add nuw nsw i64 %63, 1
  %82 = icmp eq i64 %81, 128
  br i1 %82, label %55, label %62, !llvm.loop !1018
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = !{!8}
!8 = distinct !{!8, !4}
!9 = !{!3, !6}
!10 = !{!11}
!11 = distinct !{!11, !12}
!12 = distinct !{!12, !"LVerDomain"}
!13 = !{!14}
!14 = distinct !{!14, !12}
!15 = !{!16}
!16 = distinct !{!16, !12}
!17 = !{!11, !14}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.isvectorized", i32 1}
!20 = distinct !{!20, !19}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = !{!27}
!27 = distinct !{!27, !23}
!28 = !{!22, !25}
!29 = distinct !{!29, !19}
!30 = !{!31}
!31 = distinct !{!31, !32}
!32 = distinct !{!32, !"LVerDomain"}
!33 = !{!34}
!34 = distinct !{!34, !32}
!35 = !{!36}
!36 = distinct !{!36, !32}
!37 = !{!31, !34}
!38 = distinct !{!38, !19}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = !{!45}
!45 = distinct !{!45, !41}
!46 = !{!40, !43}
!47 = distinct !{!47, !19}
!48 = !{!49}
!49 = distinct !{!49, !50}
!50 = distinct !{!50, !"LVerDomain"}
!51 = !{!52}
!52 = distinct !{!52, !50}
!53 = !{!54}
!54 = distinct !{!54, !50}
!55 = !{!49, !52}
!56 = distinct !{!56, !19}
!57 = !{!58}
!58 = distinct !{!58, !59}
!59 = distinct !{!59, !"LVerDomain"}
!60 = !{!61}
!61 = distinct !{!61, !59}
!62 = !{!63}
!63 = distinct !{!63, !59}
!64 = !{!58, !61}
!65 = distinct !{!65, !19}
!66 = !{!67}
!67 = distinct !{!67, !68}
!68 = distinct !{!68, !"LVerDomain"}
!69 = !{!70}
!70 = distinct !{!70, !68}
!71 = !{!72}
!72 = distinct !{!72, !68}
!73 = !{!67, !70}
!74 = distinct !{!74, !19}
!75 = !{!76}
!76 = distinct !{!76, !77}
!77 = distinct !{!77, !"LVerDomain"}
!78 = !{!79}
!79 = distinct !{!79, !77}
!80 = !{!81}
!81 = distinct !{!81, !77}
!82 = !{!76, !79}
!83 = !{!84}
!84 = distinct !{!84, !85}
!85 = distinct !{!85, !"LVerDomain"}
!86 = !{!87}
!87 = distinct !{!87, !85}
!88 = !{!89}
!89 = distinct !{!89, !85}
!90 = !{!84, !87}
!91 = distinct !{!91, !19}
!92 = distinct !{!92, !19}
!93 = !{!94}
!94 = distinct !{!94, !95}
!95 = distinct !{!95, !"LVerDomain"}
!96 = !{!97}
!97 = distinct !{!97, !95}
!98 = !{!99}
!99 = distinct !{!99, !95}
!100 = !{!94, !97}
!101 = distinct !{!101, !19}
!102 = !{!103}
!103 = distinct !{!103, !104}
!104 = distinct !{!104, !"LVerDomain"}
!105 = !{!106}
!106 = distinct !{!106, !104}
!107 = !{!108}
!108 = distinct !{!108, !104}
!109 = !{!103, !106}
!110 = distinct !{!110, !19}
!111 = !{!112}
!112 = distinct !{!112, !113}
!113 = distinct !{!113, !"LVerDomain"}
!114 = !{!115}
!115 = distinct !{!115, !113}
!116 = !{!117}
!117 = distinct !{!117, !113}
!118 = !{!112, !115}
!119 = distinct !{!119, !19}
!120 = !{!121}
!121 = distinct !{!121, !122}
!122 = distinct !{!122, !"LVerDomain"}
!123 = !{!124}
!124 = distinct !{!124, !122}
!125 = !{!126}
!126 = distinct !{!126, !122}
!127 = !{!121, !124}
!128 = distinct !{!128, !19}
!129 = !{!130}
!130 = distinct !{!130, !131}
!131 = distinct !{!131, !"LVerDomain"}
!132 = !{!133}
!133 = distinct !{!133, !131}
!134 = !{!135}
!135 = distinct !{!135, !131}
!136 = !{!130, !133}
!137 = distinct !{!137, !19}
!138 = !{!139}
!139 = distinct !{!139, !140}
!140 = distinct !{!140, !"LVerDomain"}
!141 = !{!142}
!142 = distinct !{!142, !140}
!143 = !{!144}
!144 = distinct !{!144, !140}
!145 = !{!139, !142}
!146 = distinct !{!146, !19}
!147 = !{!148}
!148 = distinct !{!148, !149}
!149 = distinct !{!149, !"LVerDomain"}
!150 = !{!151}
!151 = distinct !{!151, !149}
!152 = !{!153}
!153 = distinct !{!153, !149}
!154 = !{!148, !151}
!155 = distinct !{!155, !19}
!156 = !{!157}
!157 = distinct !{!157, !158}
!158 = distinct !{!158, !"LVerDomain"}
!159 = !{!160}
!160 = distinct !{!160, !158}
!161 = !{!162}
!162 = distinct !{!162, !158}
!163 = !{!157, !160}
!164 = distinct !{!164, !19}
!165 = !{!166}
!166 = distinct !{!166, !167}
!167 = distinct !{!167, !"LVerDomain"}
!168 = !{!169}
!169 = distinct !{!169, !167}
!170 = !{!171}
!171 = distinct !{!171, !167}
!172 = !{!166, !169}
!173 = distinct !{!173, !19}
!174 = !{!175}
!175 = distinct !{!175, !176}
!176 = distinct !{!176, !"LVerDomain"}
!177 = !{!178}
!178 = distinct !{!178, !176}
!179 = !{!180}
!180 = distinct !{!180, !176}
!181 = !{!175, !178}
!182 = distinct !{!182, !19}
!183 = !{!184}
!184 = distinct !{!184, !185}
!185 = distinct !{!185, !"LVerDomain"}
!186 = !{!187}
!187 = distinct !{!187, !185}
!188 = !{!189}
!189 = distinct !{!189, !185}
!190 = !{!184, !187}
!191 = distinct !{!191, !19}
!192 = !{!193}
!193 = distinct !{!193, !194}
!194 = distinct !{!194, !"LVerDomain"}
!195 = !{!196}
!196 = distinct !{!196, !194}
!197 = !{!198}
!198 = distinct !{!198, !194}
!199 = !{!193, !196}
!200 = distinct !{!200, !19}
!201 = !{!202}
!202 = distinct !{!202, !203}
!203 = distinct !{!203, !"LVerDomain"}
!204 = !{!205}
!205 = distinct !{!205, !203}
!206 = !{!207}
!207 = distinct !{!207, !203}
!208 = !{!202, !205}
!209 = !{!210}
!210 = distinct !{!210, !211}
!211 = distinct !{!211, !"LVerDomain"}
!212 = !{!213}
!213 = distinct !{!213, !211}
!214 = !{!215}
!215 = distinct !{!215, !211}
!216 = !{!210, !213}
!217 = distinct !{!217, !19}
!218 = distinct !{!218, !19}
!219 = !{!220}
!220 = distinct !{!220, !221}
!221 = distinct !{!221, !"LVerDomain"}
!222 = !{!223}
!223 = distinct !{!223, !221}
!224 = !{!225}
!225 = distinct !{!225, !221}
!226 = !{!220, !223}
!227 = distinct !{!227, !19}
!228 = !{!229}
!229 = distinct !{!229, !230}
!230 = distinct !{!230, !"LVerDomain"}
!231 = !{!232}
!232 = distinct !{!232, !230}
!233 = !{!234}
!234 = distinct !{!234, !230}
!235 = !{!229, !232}
!236 = distinct !{!236, !19}
!237 = !{!238}
!238 = distinct !{!238, !239}
!239 = distinct !{!239, !"LVerDomain"}
!240 = !{!241}
!241 = distinct !{!241, !239}
!242 = !{!243}
!243 = distinct !{!243, !239}
!244 = !{!238, !241}
!245 = distinct !{!245, !19}
!246 = !{!247}
!247 = distinct !{!247, !248}
!248 = distinct !{!248, !"LVerDomain"}
!249 = !{!250}
!250 = distinct !{!250, !248}
!251 = !{!252}
!252 = distinct !{!252, !248}
!253 = !{!247, !250}
!254 = distinct !{!254, !19}
!255 = !{!256}
!256 = distinct !{!256, !257}
!257 = distinct !{!257, !"LVerDomain"}
!258 = !{!259}
!259 = distinct !{!259, !257}
!260 = !{!261}
!261 = distinct !{!261, !257}
!262 = !{!256, !259}
!263 = distinct !{!263, !19}
!264 = !{!265}
!265 = distinct !{!265, !266}
!266 = distinct !{!266, !"LVerDomain"}
!267 = !{!268}
!268 = distinct !{!268, !266}
!269 = !{!270}
!270 = distinct !{!270, !266}
!271 = !{!265, !268}
!272 = distinct !{!272, !19}
!273 = !{!274}
!274 = distinct !{!274, !275}
!275 = distinct !{!275, !"LVerDomain"}
!276 = !{!277}
!277 = distinct !{!277, !275}
!278 = !{!279}
!279 = distinct !{!279, !275}
!280 = !{!274, !277}
!281 = !{!282}
!282 = distinct !{!282, !283}
!283 = distinct !{!283, !"LVerDomain"}
!284 = !{!285}
!285 = distinct !{!285, !283}
!286 = !{!287}
!287 = distinct !{!287, !283}
!288 = !{!282, !285}
!289 = distinct !{!289, !19}
!290 = distinct !{!290, !19}
!291 = !{!292}
!292 = distinct !{!292, !293}
!293 = distinct !{!293, !"LVerDomain"}
!294 = !{!295}
!295 = distinct !{!295, !293}
!296 = !{!297}
!297 = distinct !{!297, !293}
!298 = !{!292, !295}
!299 = distinct !{!299, !19}
!300 = !{!301}
!301 = distinct !{!301, !302}
!302 = distinct !{!302, !"LVerDomain"}
!303 = !{!304}
!304 = distinct !{!304, !302}
!305 = !{!306}
!306 = distinct !{!306, !302}
!307 = !{!301, !304}
!308 = distinct !{!308, !19}
!309 = !{!310}
!310 = distinct !{!310, !311}
!311 = distinct !{!311, !"LVerDomain"}
!312 = !{!313}
!313 = distinct !{!313, !311}
!314 = !{!315}
!315 = distinct !{!315, !311}
!316 = !{!310, !313}
!317 = distinct !{!317, !19}
!318 = !{!319}
!319 = distinct !{!319, !320}
!320 = distinct !{!320, !"LVerDomain"}
!321 = !{!322}
!322 = distinct !{!322, !320}
!323 = !{!324}
!324 = distinct !{!324, !320}
!325 = !{!319, !322}
!326 = distinct !{!326, !19}
!327 = !{!328}
!328 = distinct !{!328, !329}
!329 = distinct !{!329, !"LVerDomain"}
!330 = !{!331}
!331 = distinct !{!331, !329}
!332 = !{!333}
!333 = distinct !{!333, !329}
!334 = !{!328, !331}
!335 = distinct !{!335, !19}
!336 = !{!337}
!337 = distinct !{!337, !338}
!338 = distinct !{!338, !"LVerDomain"}
!339 = !{!340}
!340 = distinct !{!340, !338}
!341 = !{!342}
!342 = distinct !{!342, !338}
!343 = !{!337, !340}
!344 = distinct !{!344, !19}
!345 = !{!346}
!346 = distinct !{!346, !347}
!347 = distinct !{!347, !"LVerDomain"}
!348 = !{!349}
!349 = distinct !{!349, !347}
!350 = !{!351}
!351 = distinct !{!351, !347}
!352 = !{!346, !349}
!353 = distinct !{!353, !19}
!354 = !{!355}
!355 = distinct !{!355, !356}
!356 = distinct !{!356, !"LVerDomain"}
!357 = !{!358}
!358 = distinct !{!358, !356}
!359 = !{!360}
!360 = distinct !{!360, !356}
!361 = !{!355, !358}
!362 = distinct !{!362, !19}
!363 = !{!364}
!364 = distinct !{!364, !365}
!365 = distinct !{!365, !"LVerDomain"}
!366 = !{!367}
!367 = distinct !{!367, !365}
!368 = !{!369}
!369 = distinct !{!369, !365}
!370 = !{!364, !367}
!371 = distinct !{!371, !19}
!372 = !{!373}
!373 = distinct !{!373, !374}
!374 = distinct !{!374, !"LVerDomain"}
!375 = !{!376}
!376 = distinct !{!376, !374}
!377 = !{!378}
!378 = distinct !{!378, !374}
!379 = !{!373, !376}
!380 = distinct !{!380, !19}
!381 = !{!382}
!382 = distinct !{!382, !383}
!383 = distinct !{!383, !"LVerDomain"}
!384 = !{!385}
!385 = distinct !{!385, !383}
!386 = !{!387}
!387 = distinct !{!387, !383}
!388 = !{!382, !385}
!389 = distinct !{!389, !19}
!390 = !{!391}
!391 = distinct !{!391, !392}
!392 = distinct !{!392, !"LVerDomain"}
!393 = !{!394}
!394 = distinct !{!394, !392}
!395 = !{!396}
!396 = distinct !{!396, !392}
!397 = !{!391, !394}
!398 = distinct !{!398, !19}
!399 = !{!400}
!400 = distinct !{!400, !401}
!401 = distinct !{!401, !"LVerDomain"}
!402 = !{!403}
!403 = distinct !{!403, !401}
!404 = !{!405}
!405 = distinct !{!405, !401}
!406 = !{!400, !403}
!407 = distinct !{!407, !19}
!408 = !{!409}
!409 = distinct !{!409, !410}
!410 = distinct !{!410, !"LVerDomain"}
!411 = !{!412}
!412 = distinct !{!412, !410}
!413 = !{!414}
!414 = distinct !{!414, !410}
!415 = !{!409, !412}
!416 = distinct !{!416, !19}
!417 = !{!418}
!418 = distinct !{!418, !419}
!419 = distinct !{!419, !"LVerDomain"}
!420 = !{!421}
!421 = distinct !{!421, !419}
!422 = !{!423}
!423 = distinct !{!423, !419}
!424 = !{!418, !421}
!425 = distinct !{!425, !19}
!426 = !{!427}
!427 = distinct !{!427, !428}
!428 = distinct !{!428, !"LVerDomain"}
!429 = !{!430}
!430 = distinct !{!430, !428}
!431 = !{!432}
!432 = distinct !{!432, !428}
!433 = !{!427, !430}
!434 = distinct !{!434, !19}
!435 = !{!436}
!436 = distinct !{!436, !437}
!437 = distinct !{!437, !"LVerDomain"}
!438 = !{!439}
!439 = distinct !{!439, !437}
!440 = !{!441}
!441 = distinct !{!441, !437}
!442 = !{!436, !439}
!443 = distinct !{!443, !19}
!444 = !{!445}
!445 = distinct !{!445, !446}
!446 = distinct !{!446, !"LVerDomain"}
!447 = !{!448}
!448 = distinct !{!448, !446}
!449 = !{!450}
!450 = distinct !{!450, !446}
!451 = !{!445, !448}
!452 = distinct !{!452, !19}
!453 = !{!454}
!454 = distinct !{!454, !455}
!455 = distinct !{!455, !"LVerDomain"}
!456 = !{!457}
!457 = distinct !{!457, !455}
!458 = !{!459}
!459 = distinct !{!459, !455}
!460 = !{!454, !457}
!461 = distinct !{!461, !19}
!462 = !{!463}
!463 = distinct !{!463, !464}
!464 = distinct !{!464, !"LVerDomain"}
!465 = !{!466}
!466 = distinct !{!466, !464}
!467 = !{!468}
!468 = distinct !{!468, !464}
!469 = !{!463, !466}
!470 = distinct !{!470, !19}
!471 = !{!472}
!472 = distinct !{!472, !473}
!473 = distinct !{!473, !"LVerDomain"}
!474 = !{!475}
!475 = distinct !{!475, !473}
!476 = !{!477}
!477 = distinct !{!477, !473}
!478 = !{!472, !475}
!479 = distinct !{!479, !19}
!480 = distinct !{!480, !19}
!481 = !{!482}
!482 = distinct !{!482, !483}
!483 = distinct !{!483, !"LVerDomain"}
!484 = !{!485}
!485 = distinct !{!485, !483}
!486 = !{!487}
!487 = distinct !{!487, !483}
!488 = !{!482, !485}
!489 = distinct !{!489, !19}
!490 = distinct !{!490, !19}
!491 = !{!492}
!492 = distinct !{!492, !493}
!493 = distinct !{!493, !"LVerDomain"}
!494 = !{!495}
!495 = distinct !{!495, !493}
!496 = !{!497}
!497 = distinct !{!497, !493}
!498 = !{!492, !495}
!499 = distinct !{!499, !19}
!500 = distinct !{!500, !19}
!501 = !{!502}
!502 = distinct !{!502, !503}
!503 = distinct !{!503, !"LVerDomain"}
!504 = !{!505}
!505 = distinct !{!505, !503}
!506 = !{!507}
!507 = distinct !{!507, !503}
!508 = !{!502, !505}
!509 = distinct !{!509, !19}
!510 = distinct !{!510, !19}
!511 = !{!512}
!512 = distinct !{!512, !513}
!513 = distinct !{!513, !"LVerDomain"}
!514 = !{!515}
!515 = distinct !{!515, !513}
!516 = !{!517}
!517 = distinct !{!517, !513}
!518 = !{!512, !515}
!519 = !{!520}
!520 = distinct !{!520, !521}
!521 = distinct !{!521, !"LVerDomain"}
!522 = !{!523}
!523 = distinct !{!523, !521}
!524 = !{!525}
!525 = distinct !{!525, !521}
!526 = !{!520, !523}
!527 = distinct !{!527, !19}
!528 = distinct !{!528, !19}
!529 = !{!530}
!530 = distinct !{!530, !531}
!531 = distinct !{!531, !"LVerDomain"}
!532 = !{!533}
!533 = distinct !{!533, !531}
!534 = !{!535}
!535 = distinct !{!535, !531}
!536 = !{!530, !533}
!537 = distinct !{!537, !19}
!538 = !{!539}
!539 = distinct !{!539, !540}
!540 = distinct !{!540, !"LVerDomain"}
!541 = !{!542}
!542 = distinct !{!542, !540}
!543 = !{!544}
!544 = distinct !{!544, !540}
!545 = !{!539, !542}
!546 = distinct !{!546, !19}
!547 = !{!548}
!548 = distinct !{!548, !549}
!549 = distinct !{!549, !"LVerDomain"}
!550 = !{!551}
!551 = distinct !{!551, !549}
!552 = !{!553}
!553 = distinct !{!553, !549}
!554 = !{!548, !551}
!555 = distinct !{!555, !19}
!556 = !{!557}
!557 = distinct !{!557, !558}
!558 = distinct !{!558, !"LVerDomain"}
!559 = !{!560}
!560 = distinct !{!560, !558}
!561 = !{!562}
!562 = distinct !{!562, !558}
!563 = !{!557, !560}
!564 = distinct !{!564, !19}
!565 = !{!566}
!566 = distinct !{!566, !567}
!567 = distinct !{!567, !"LVerDomain"}
!568 = !{!569}
!569 = distinct !{!569, !567}
!570 = !{!571}
!571 = distinct !{!571, !567}
!572 = !{!566, !569}
!573 = distinct !{!573, !19}
!574 = !{!575}
!575 = distinct !{!575, !576}
!576 = distinct !{!576, !"LVerDomain"}
!577 = !{!578}
!578 = distinct !{!578, !576}
!579 = !{!580}
!580 = distinct !{!580, !576}
!581 = !{!575, !578}
!582 = distinct !{!582, !19}
!583 = !{!584}
!584 = distinct !{!584, !585}
!585 = distinct !{!585, !"LVerDomain"}
!586 = !{!587}
!587 = distinct !{!587, !585}
!588 = !{!589}
!589 = distinct !{!589, !585}
!590 = !{!584, !587}
!591 = !{!592}
!592 = distinct !{!592, !593}
!593 = distinct !{!593, !"LVerDomain"}
!594 = !{!595}
!595 = distinct !{!595, !593}
!596 = !{!597}
!597 = distinct !{!597, !593}
!598 = !{!592, !595}
!599 = distinct !{!599, !19}
!600 = distinct !{!600, !19}
!601 = !{!602}
!602 = distinct !{!602, !603}
!603 = distinct !{!603, !"LVerDomain"}
!604 = !{!605}
!605 = distinct !{!605, !603}
!606 = !{!607}
!607 = distinct !{!607, !603}
!608 = !{!602, !605}
!609 = distinct !{!609, !19}
!610 = !{!611}
!611 = distinct !{!611, !612}
!612 = distinct !{!612, !"LVerDomain"}
!613 = !{!614}
!614 = distinct !{!614, !612}
!615 = !{!616}
!616 = distinct !{!616, !612}
!617 = !{!611, !614}
!618 = distinct !{!618, !19}
!619 = !{!620}
!620 = distinct !{!620, !621}
!621 = distinct !{!621, !"LVerDomain"}
!622 = !{!623}
!623 = distinct !{!623, !621}
!624 = !{!625}
!625 = distinct !{!625, !621}
!626 = !{!620, !623}
!627 = distinct !{!627, !19}
!628 = !{!629}
!629 = distinct !{!629, !630}
!630 = distinct !{!630, !"LVerDomain"}
!631 = !{!632}
!632 = distinct !{!632, !630}
!633 = !{!634}
!634 = distinct !{!634, !630}
!635 = !{!629, !632}
!636 = distinct !{!636, !19}
!637 = !{!638}
!638 = distinct !{!638, !639}
!639 = distinct !{!639, !"LVerDomain"}
!640 = !{!641}
!641 = distinct !{!641, !639}
!642 = !{!643}
!643 = distinct !{!643, !639}
!644 = !{!638, !641}
!645 = distinct !{!645, !19}
!646 = !{!647}
!647 = distinct !{!647, !648}
!648 = distinct !{!648, !"LVerDomain"}
!649 = !{!650}
!650 = distinct !{!650, !648}
!651 = !{!652}
!652 = distinct !{!652, !648}
!653 = !{!647, !650}
!654 = distinct !{!654, !19}
!655 = !{!656}
!656 = distinct !{!656, !657}
!657 = distinct !{!657, !"LVerDomain"}
!658 = !{!659}
!659 = distinct !{!659, !657}
!660 = !{!661}
!661 = distinct !{!661, !657}
!662 = !{!656, !659}
!663 = distinct !{!663, !19}
!664 = !{!665}
!665 = distinct !{!665, !666}
!666 = distinct !{!666, !"LVerDomain"}
!667 = !{!668}
!668 = distinct !{!668, !666}
!669 = !{!670}
!670 = distinct !{!670, !666}
!671 = !{!665, !668}
!672 = distinct !{!672, !19}
!673 = !{!674}
!674 = distinct !{!674, !675}
!675 = distinct !{!675, !"LVerDomain"}
!676 = !{!677}
!677 = distinct !{!677, !675}
!678 = !{!679}
!679 = distinct !{!679, !675}
!680 = !{!674, !677}
!681 = distinct !{!681, !19}
!682 = !{!683}
!683 = distinct !{!683, !684}
!684 = distinct !{!684, !"LVerDomain"}
!685 = !{!686}
!686 = distinct !{!686, !684}
!687 = !{!688}
!688 = distinct !{!688, !684}
!689 = !{!683, !686}
!690 = distinct !{!690, !19}
!691 = !{!692}
!692 = distinct !{!692, !693}
!693 = distinct !{!693, !"LVerDomain"}
!694 = !{!695}
!695 = distinct !{!695, !693}
!696 = !{!697}
!697 = distinct !{!697, !693}
!698 = !{!692, !695}
!699 = distinct !{!699, !19}
!700 = !{!701}
!701 = distinct !{!701, !702}
!702 = distinct !{!702, !"LVerDomain"}
!703 = !{!704}
!704 = distinct !{!704, !702}
!705 = !{!706}
!706 = distinct !{!706, !702}
!707 = !{!701, !704}
!708 = distinct !{!708, !19}
!709 = !{!710}
!710 = distinct !{!710, !711}
!711 = distinct !{!711, !"LVerDomain"}
!712 = !{!713}
!713 = distinct !{!713, !711}
!714 = !{!715}
!715 = distinct !{!715, !711}
!716 = !{!710, !713}
!717 = !{!718}
!718 = distinct !{!718, !719}
!719 = distinct !{!719, !"LVerDomain"}
!720 = !{!721}
!721 = distinct !{!721, !719}
!722 = !{!723}
!723 = distinct !{!723, !719}
!724 = !{!718, !721}
!725 = distinct !{!725, !19}
!726 = distinct !{!726, !19}
!727 = !{!728}
!728 = distinct !{!728, !729}
!729 = distinct !{!729, !"LVerDomain"}
!730 = !{!731}
!731 = distinct !{!731, !729}
!732 = !{!733}
!733 = distinct !{!733, !729}
!734 = !{!728, !731}
!735 = distinct !{!735, !19}
!736 = !{!737}
!737 = distinct !{!737, !738}
!738 = distinct !{!738, !"LVerDomain"}
!739 = !{!740}
!740 = distinct !{!740, !738}
!741 = !{!742}
!742 = distinct !{!742, !738}
!743 = !{!737, !740}
!744 = distinct !{!744, !19}
!745 = !{!746}
!746 = distinct !{!746, !747}
!747 = distinct !{!747, !"LVerDomain"}
!748 = !{!749}
!749 = distinct !{!749, !747}
!750 = !{!751}
!751 = distinct !{!751, !747}
!752 = !{!746, !749}
!753 = distinct !{!753, !19}
!754 = !{!755}
!755 = distinct !{!755, !756}
!756 = distinct !{!756, !"LVerDomain"}
!757 = !{!758}
!758 = distinct !{!758, !756}
!759 = !{!760}
!760 = distinct !{!760, !756}
!761 = !{!755, !758}
!762 = distinct !{!762, !19}
!763 = !{!764}
!764 = distinct !{!764, !765}
!765 = distinct !{!765, !"LVerDomain"}
!766 = !{!767}
!767 = distinct !{!767, !765}
!768 = !{!769}
!769 = distinct !{!769, !765}
!770 = !{!764, !767}
!771 = distinct !{!771, !19}
!772 = !{!773}
!773 = distinct !{!773, !774}
!774 = distinct !{!774, !"LVerDomain"}
!775 = !{!776}
!776 = distinct !{!776, !774}
!777 = !{!778}
!778 = distinct !{!778, !774}
!779 = !{!773, !776}
!780 = distinct !{!780, !19}
!781 = !{!782}
!782 = distinct !{!782, !783}
!783 = distinct !{!783, !"LVerDomain"}
!784 = !{!785}
!785 = distinct !{!785, !783}
!786 = !{!787}
!787 = distinct !{!787, !783}
!788 = !{!782, !785}
!789 = !{!790}
!790 = distinct !{!790, !791}
!791 = distinct !{!791, !"LVerDomain"}
!792 = !{!793}
!793 = distinct !{!793, !791}
!794 = !{!795}
!795 = distinct !{!795, !791}
!796 = !{!790, !793}
!797 = distinct !{!797, !19}
!798 = distinct !{!798, !19}
!799 = !{!800}
!800 = distinct !{!800, !801}
!801 = distinct !{!801, !"LVerDomain"}
!802 = !{!803}
!803 = distinct !{!803, !801}
!804 = !{!805}
!805 = distinct !{!805, !801}
!806 = !{!800, !803}
!807 = distinct !{!807, !19}
!808 = !{!809}
!809 = distinct !{!809, !810}
!810 = distinct !{!810, !"LVerDomain"}
!811 = !{!812}
!812 = distinct !{!812, !810}
!813 = !{!814}
!814 = distinct !{!814, !810}
!815 = !{!809, !812}
!816 = distinct !{!816, !19}
!817 = !{!818}
!818 = distinct !{!818, !819}
!819 = distinct !{!819, !"LVerDomain"}
!820 = !{!821}
!821 = distinct !{!821, !819}
!822 = !{!823}
!823 = distinct !{!823, !819}
!824 = !{!818, !821}
!825 = distinct !{!825, !19}
!826 = !{!827}
!827 = distinct !{!827, !828}
!828 = distinct !{!828, !"LVerDomain"}
!829 = !{!830}
!830 = distinct !{!830, !828}
!831 = !{!832}
!832 = distinct !{!832, !828}
!833 = !{!827, !830}
!834 = distinct !{!834, !19}
!835 = !{!836}
!836 = distinct !{!836, !837}
!837 = distinct !{!837, !"LVerDomain"}
!838 = !{!839}
!839 = distinct !{!839, !837}
!840 = !{!841}
!841 = distinct !{!841, !837}
!842 = !{!836, !839}
!843 = distinct !{!843, !19}
!844 = !{!845}
!845 = distinct !{!845, !846}
!846 = distinct !{!846, !"LVerDomain"}
!847 = !{!848}
!848 = distinct !{!848, !846}
!849 = !{!850}
!850 = distinct !{!850, !846}
!851 = !{!845, !848}
!852 = distinct !{!852, !19}
!853 = !{!854}
!854 = distinct !{!854, !855}
!855 = distinct !{!855, !"LVerDomain"}
!856 = !{!857}
!857 = distinct !{!857, !855}
!858 = !{!859}
!859 = distinct !{!859, !855}
!860 = !{!854, !857}
!861 = distinct !{!861, !19}
!862 = !{!863}
!863 = distinct !{!863, !864}
!864 = distinct !{!864, !"LVerDomain"}
!865 = !{!866}
!866 = distinct !{!866, !864}
!867 = !{!868}
!868 = distinct !{!868, !864}
!869 = !{!863, !866}
!870 = distinct !{!870, !19}
!871 = !{!872}
!872 = distinct !{!872, !873}
!873 = distinct !{!873, !"LVerDomain"}
!874 = !{!875}
!875 = distinct !{!875, !873}
!876 = !{!877}
!877 = distinct !{!877, !873}
!878 = !{!872, !875}
!879 = distinct !{!879, !19}
!880 = !{!881}
!881 = distinct !{!881, !882}
!882 = distinct !{!882, !"LVerDomain"}
!883 = !{!884}
!884 = distinct !{!884, !882}
!885 = !{!886}
!886 = distinct !{!886, !882}
!887 = !{!881, !884}
!888 = distinct !{!888, !19}
!889 = !{!890}
!890 = distinct !{!890, !891}
!891 = distinct !{!891, !"LVerDomain"}
!892 = !{!893}
!893 = distinct !{!893, !891}
!894 = !{!895}
!895 = distinct !{!895, !891}
!896 = !{!890, !893}
!897 = distinct !{!897, !19}
!898 = !{!899}
!899 = distinct !{!899, !900}
!900 = distinct !{!900, !"LVerDomain"}
!901 = !{!902}
!902 = distinct !{!902, !900}
!903 = !{!904}
!904 = distinct !{!904, !900}
!905 = !{!899, !902}
!906 = distinct !{!906, !19}
!907 = !{!908}
!908 = distinct !{!908, !909}
!909 = distinct !{!909, !"LVerDomain"}
!910 = !{!911}
!911 = distinct !{!911, !909}
!912 = !{!913}
!913 = distinct !{!913, !909}
!914 = !{!908, !911}
!915 = distinct !{!915, !19}
!916 = !{!917}
!917 = distinct !{!917, !918}
!918 = distinct !{!918, !"LVerDomain"}
!919 = !{!920}
!920 = distinct !{!920, !918}
!921 = !{!922}
!922 = distinct !{!922, !918}
!923 = !{!917, !920}
!924 = distinct !{!924, !19}
!925 = !{!926}
!926 = distinct !{!926, !927}
!927 = distinct !{!927, !"LVerDomain"}
!928 = !{!929}
!929 = distinct !{!929, !927}
!930 = !{!931}
!931 = distinct !{!931, !927}
!932 = !{!926, !929}
!933 = distinct !{!933, !19}
!934 = !{!935}
!935 = distinct !{!935, !936}
!936 = distinct !{!936, !"LVerDomain"}
!937 = !{!938}
!938 = distinct !{!938, !936}
!939 = !{!940}
!940 = distinct !{!940, !936}
!941 = !{!935, !938}
!942 = distinct !{!942, !19}
!943 = !{!944}
!944 = distinct !{!944, !945}
!945 = distinct !{!945, !"LVerDomain"}
!946 = !{!947}
!947 = distinct !{!947, !945}
!948 = !{!949}
!949 = distinct !{!949, !945}
!950 = !{!944, !947}
!951 = distinct !{!951, !19}
!952 = !{!953}
!953 = distinct !{!953, !954}
!954 = distinct !{!954, !"LVerDomain"}
!955 = !{!956}
!956 = distinct !{!956, !954}
!957 = !{!958}
!958 = distinct !{!958, !954}
!959 = !{!953, !956}
!960 = distinct !{!960, !19}
!961 = !{!962}
!962 = distinct !{!962, !963}
!963 = distinct !{!963, !"LVerDomain"}
!964 = !{!965}
!965 = distinct !{!965, !963}
!966 = !{!967}
!967 = distinct !{!967, !963}
!968 = !{!962, !965}
!969 = distinct !{!969, !19}
!970 = !{!971}
!971 = distinct !{!971, !972}
!972 = distinct !{!972, !"LVerDomain"}
!973 = !{!974}
!974 = distinct !{!974, !972}
!975 = !{!976}
!976 = distinct !{!976, !972}
!977 = !{!971, !974}
!978 = distinct !{!978, !19}
!979 = !{!980}
!980 = distinct !{!980, !981}
!981 = distinct !{!981, !"LVerDomain"}
!982 = !{!983}
!983 = distinct !{!983, !981}
!984 = !{!985}
!985 = distinct !{!985, !981}
!986 = !{!980, !983}
!987 = distinct !{!987, !19}
!988 = distinct !{!988, !19}
!989 = !{!990}
!990 = distinct !{!990, !991}
!991 = distinct !{!991, !"LVerDomain"}
!992 = !{!993}
!993 = distinct !{!993, !991}
!994 = !{!995}
!995 = distinct !{!995, !991}
!996 = !{!990, !993}
!997 = distinct !{!997, !19}
!998 = distinct !{!998, !19}
!999 = !{!1000}
!1000 = distinct !{!1000, !1001}
!1001 = distinct !{!1001, !"LVerDomain"}
!1002 = !{!1003}
!1003 = distinct !{!1003, !1001}
!1004 = !{!1005}
!1005 = distinct !{!1005, !1001}
!1006 = !{!1000, !1003}
!1007 = distinct !{!1007, !19}
!1008 = distinct !{!1008, !19}
!1009 = !{!1010}
!1010 = distinct !{!1010, !1011}
!1011 = distinct !{!1011, !"LVerDomain"}
!1012 = !{!1013}
!1013 = distinct !{!1013, !1011}
!1014 = !{!1015}
!1015 = distinct !{!1015, !1011}
!1016 = !{!1010, !1013}
!1017 = distinct !{!1017, !19}
!1018 = distinct !{!1018, !19}
