; ModuleID = '../../third_party/opus/src/silk/resampler.c'
source_filename = "../../third_party/opus/src/silk/resampler.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._silk_resampler_state_struct = type { [6 x i32], %union.anon, [48 x i16], i32, i32, i32, i32, i32, i32, i32, i32, i16* }
%union.anon = type { [36 x i32] }

@.str = private unnamed_addr constant [20 x i8] c"assertion failed: 0\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"../../third_party/opus/src/silk/resampler.c\00", align 1
@delay_matrix_enc = internal unnamed_addr constant [5 x [3 x i8]] [[3 x i8] c"\06\00\03", [3 x i8] c"\00\07\03", [3 x i8] c"\00\01\0A", [3 x i8] c"\00\02\06", [3 x i8] c"\12\0A\0C"], align 1
@delay_matrix_dec = internal unnamed_addr constant [3 x [5 x i8]] [[5 x i8] c"\04\00\02\00\00", [5 x i8] c"\00\09\04\07\04", [5 x i8] c"\00\03\0C\07\07"], align 1
@silk_Resampler_3_4_COEFS = external constant [29 x i16], align 16
@silk_Resampler_2_3_COEFS = external constant [20 x i16], align 16
@silk_Resampler_1_2_COEFS = external constant [14 x i16], align 16
@silk_Resampler_1_3_COEFS = external constant [20 x i16], align 16
@silk_Resampler_1_4_COEFS = external constant [20 x i16], align 16
@silk_Resampler_1_6_COEFS = external constant [20 x i16], align 16
@.str.2 = private unnamed_addr constant [40 x i8] c"assertion failed: inLen >= S->Fs_in_kHz\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"assertion failed: S->inputDelay <= S->Fs_in_kHz\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @silk_resampler_init(%struct._silk_resampler_state_struct*, i32, i32, i32) local_unnamed_addr #0 {
  %5 = bitcast %struct._silk_resampler_state_struct* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 304, i1 false)
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %4
  switch i32 %1, label %9 [
    i32 48000, label %8
    i32 24000, label %8
    i32 16000, label %8
    i32 12000, label %8
    i32 8000, label %8
  ]

8:                                                ; preds = %7, %7, %7, %7, %7
  switch i32 %2, label %9 [
    i32 16000, label %10
    i32 12000, label %10
    i32 8000, label %10
  ]

9:                                                ; preds = %8, %7
  tail call void @celt_fatal(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i32 94) #4
  unreachable

10:                                               ; preds = %8, %8, %8
  %11 = lshr i32 %1, 12
  %12 = icmp sgt i32 %1, 16000
  %13 = zext i1 %12 to i32
  %14 = sub nuw nsw i32 %11, %13
  %15 = icmp sgt i32 %1, 24000
  %16 = zext i1 %15 to i32
  %17 = ashr i32 %14, %16
  %18 = add nsw i32 %17, -1
  %19 = sext i32 %18 to i64
  %20 = lshr i32 %2, 12
  %21 = add nsw i32 %20, -1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [5 x [3 x i8]], [5 x [3 x i8]]* @delay_matrix_enc, i64 0, i64 %19, i64 %22
  br label %41

24:                                               ; preds = %4
  switch i32 %1, label %26 [
    i32 16000, label %25
    i32 12000, label %25
    i32 8000, label %25
  ]

25:                                               ; preds = %24, %24, %24
  switch i32 %2, label %26 [
    i32 48000, label %27
    i32 24000, label %27
    i32 16000, label %27
    i32 12000, label %27
    i32 8000, label %27
  ]

26:                                               ; preds = %25, %24
  tail call void @celt_fatal(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i32 101) #4
  unreachable

27:                                               ; preds = %25, %25, %25, %25, %25
  %28 = lshr i32 %1, 12
  %29 = add nsw i32 %28, -1
  %30 = sext i32 %29 to i64
  %31 = lshr i32 %2, 12
  %32 = icmp sgt i32 %2, 16000
  %33 = zext i1 %32 to i32
  %34 = sub nuw nsw i32 %31, %33
  %35 = icmp sgt i32 %2, 24000
  %36 = zext i1 %35 to i32
  %37 = ashr i32 %34, %36
  %38 = add nsw i32 %37, -1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [3 x [5 x i8]], [3 x [5 x i8]]* @delay_matrix_dec, i64 0, i64 %30, i64 %39
  br label %41

41:                                               ; preds = %27, %10
  %42 = phi i8* [ %40, %27 ], [ %23, %10 ]
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  %45 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 10
  store i32 %44, i32* %45, align 4
  %46 = trunc i32 %1 to i16
  %47 = udiv i16 %46, 1000
  %48 = zext i16 %47 to i32
  %49 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 8
  store i32 %48, i32* %49, align 4
  %50 = trunc i32 %2 to i16
  %51 = udiv i16 %50, 1000
  %52 = zext i16 %51 to i32
  %53 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 9
  store i32 %52, i32* %53, align 8
  %54 = mul nuw nsw i32 %48, 10
  %55 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 4
  store i32 %54, i32* %55, align 4
  %56 = icmp sgt i32 %2, %1
  br i1 %56, label %57, label %63

57:                                               ; preds = %41
  %58 = shl nsw i32 %1, 1
  %59 = icmp eq i32 %58, %2
  %60 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 3
  br i1 %59, label %61, label %62

61:                                               ; preds = %57
  store i32 1, i32* %60, align 8
  br label %110

62:                                               ; preds = %57
  store i32 2, i32* %60, align 8
  br label %110

63:                                               ; preds = %41
  %64 = icmp slt i32 %2, %1
  %65 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 3
  br i1 %64, label %66, label %109

66:                                               ; preds = %63
  store i32 3, i32* %65, align 8
  %67 = shl nsw i32 %2, 2
  %68 = mul nsw i32 %1, 3
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %70, label %74

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 7
  store i32 3, i32* %71, align 8
  %72 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 6
  store i32 18, i32* %72, align 4
  %73 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 11
  store i16* getelementptr inbounds ([29 x i16], [29 x i16]* @silk_Resampler_3_4_COEFS, i64 0, i64 0), i16** %73, align 8
  br label %110

74:                                               ; preds = %66
  %75 = mul nsw i32 %2, 3
  %76 = shl nsw i32 %1, 1
  %77 = icmp eq i32 %75, %76
  br i1 %77, label %78, label %82

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 7
  store i32 2, i32* %79, align 8
  %80 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 6
  store i32 18, i32* %80, align 4
  %81 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 11
  store i16* getelementptr inbounds ([20 x i16], [20 x i16]* @silk_Resampler_2_3_COEFS, i64 0, i64 0), i16** %81, align 8
  br label %110

82:                                               ; preds = %74
  %83 = shl nsw i32 %2, 1
  %84 = icmp eq i32 %83, %1
  br i1 %84, label %85, label %89

85:                                               ; preds = %82
  %86 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 7
  store i32 1, i32* %86, align 8
  %87 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 6
  store i32 24, i32* %87, align 4
  %88 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 11
  store i16* getelementptr inbounds ([14 x i16], [14 x i16]* @silk_Resampler_1_2_COEFS, i64 0, i64 0), i16** %88, align 8
  br label %110

89:                                               ; preds = %82
  %90 = icmp eq i32 %75, %1
  br i1 %90, label %91, label %95

91:                                               ; preds = %89
  %92 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 7
  store i32 1, i32* %92, align 8
  %93 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 6
  store i32 36, i32* %93, align 4
  %94 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 11
  store i16* getelementptr inbounds ([20 x i16], [20 x i16]* @silk_Resampler_1_3_COEFS, i64 0, i64 0), i16** %94, align 8
  br label %110

95:                                               ; preds = %89
  %96 = icmp eq i32 %67, %1
  br i1 %96, label %97, label %101

97:                                               ; preds = %95
  %98 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 7
  store i32 1, i32* %98, align 8
  %99 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 6
  store i32 36, i32* %99, align 4
  %100 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 11
  store i16* getelementptr inbounds ([20 x i16], [20 x i16]* @silk_Resampler_1_4_COEFS, i64 0, i64 0), i16** %100, align 8
  br label %110

101:                                              ; preds = %95
  %102 = mul nsw i32 %2, 6
  %103 = icmp eq i32 %102, %1
  br i1 %103, label %104, label %108

104:                                              ; preds = %101
  %105 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 7
  store i32 1, i32* %105, align 8
  %106 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 6
  store i32 36, i32* %106, align 4
  %107 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 11
  store i16* getelementptr inbounds ([20 x i16], [20 x i16]* @silk_Resampler_1_6_COEFS, i64 0, i64 0), i16** %107, align 8
  br label %110

108:                                              ; preds = %101
  tail call void @celt_fatal(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i32 154) #4
  unreachable

109:                                              ; preds = %63
  store i32 0, i32* %65, align 8
  br label %110

110:                                              ; preds = %109, %78, %91, %104, %97, %85, %70, %61, %62
  %111 = phi i32 [ 0, %61 ], [ 1, %62 ], [ 0, %70 ], [ 0, %78 ], [ 0, %85 ], [ 0, %91 ], [ 0, %97 ], [ 0, %104 ], [ 0, %109 ]
  %112 = or i32 %111, 14
  %113 = shl i32 %1, %112
  %114 = sdiv i32 %113, %2
  %115 = shl i32 %114, 2
  %116 = sext i32 %2 to i64
  %117 = shl i32 %1, %111
  %118 = sext i32 %115 to i64
  br label %119

119:                                              ; preds = %119, %110
  %120 = phi i64 [ %125, %119 ], [ %118, %110 ]
  %121 = mul nsw i64 %120, %116
  %122 = lshr i64 %121, 16
  %123 = trunc i64 %122 to i32
  %124 = icmp sgt i32 %117, %123
  %125 = add i64 %120, 1
  br i1 %124, label %119, label %126

126:                                              ; preds = %119
  %127 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 5
  %128 = trunc i64 %120 to i32
  store i32 %128, i32* %127, align 8
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @silk_resampler(%struct._silk_resampler_state_struct*, i16*, i16*, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, %3
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @celt_fatal(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i32 184) #4
  unreachable

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 10
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %6, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  tail call void @celt_fatal(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i32 186) #4
  unreachable

14:                                               ; preds = %9
  %15 = sub nsw i32 %6, %11
  %16 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 2
  %17 = sext i32 %11 to i64
  %18 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 2, i64 %17
  %19 = bitcast i16* %18 to i8*
  %20 = bitcast i16* %2 to i8*
  %21 = sext i32 %15 to i64
  %22 = shl nsw i64 %21, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 2 %20, i64 %22, i1 false)
  %23 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %58 [
    i32 1, label %25
    i32 2, label %36
    i32 3, label %47
  ]

25:                                               ; preds = %14
  %26 = bitcast %struct._silk_resampler_state_struct* %0 to i8*
  %27 = getelementptr inbounds [48 x i16], [48 x i16]* %16, i64 0, i64 0
  %28 = load i32, i32* %5, align 4
  tail call void @silk_resampler_private_up2_HQ_wrapper(i8* %26, i16* %1, i16* %27, i32 %28) #5
  %29 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 9
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i16, i16* %1, i64 %31
  %33 = getelementptr inbounds i16, i16* %2, i64 %21
  %34 = load i32, i32* %5, align 4
  %35 = sub nsw i32 %3, %34
  tail call void @silk_resampler_private_up2_HQ_wrapper(i8* %26, i16* %32, i16* %33, i32 %35) #5
  br label %75

36:                                               ; preds = %14
  %37 = bitcast %struct._silk_resampler_state_struct* %0 to i8*
  %38 = getelementptr inbounds [48 x i16], [48 x i16]* %16, i64 0, i64 0
  %39 = load i32, i32* %5, align 4
  tail call void @silk_resampler_private_IIR_FIR(i8* %37, i16* %1, i16* %38, i32 %39) #5
  %40 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 9
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i16, i16* %1, i64 %42
  %44 = getelementptr inbounds i16, i16* %2, i64 %21
  %45 = load i32, i32* %5, align 4
  %46 = sub nsw i32 %3, %45
  tail call void @silk_resampler_private_IIR_FIR(i8* %37, i16* %43, i16* %44, i32 %46) #5
  br label %75

47:                                               ; preds = %14
  %48 = bitcast %struct._silk_resampler_state_struct* %0 to i8*
  %49 = getelementptr inbounds [48 x i16], [48 x i16]* %16, i64 0, i64 0
  %50 = load i32, i32* %5, align 4
  tail call void @silk_resampler_private_down_FIR(i8* %48, i16* %1, i16* %49, i32 %50) #5
  %51 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 9
  %52 = load i32, i32* %51, align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i16, i16* %1, i64 %53
  %55 = getelementptr inbounds i16, i16* %2, i64 %21
  %56 = load i32, i32* %5, align 4
  %57 = sub nsw i32 %3, %56
  tail call void @silk_resampler_private_down_FIR(i8* %48, i16* %54, i16* %55, i32 %57) #5
  br label %75

58:                                               ; preds = %14
  %59 = bitcast i16* %1 to i8*
  %60 = bitcast [48 x i16]* %16 to i8*
  %61 = load i32, i32* %5, align 4
  %62 = sext i32 %61 to i64
  %63 = shl nsw i64 %62, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %59, i8* align 8 %60, i64 %63, i1 false)
  %64 = getelementptr inbounds %struct._silk_resampler_state_struct, %struct._silk_resampler_state_struct* %0, i64 0, i32 9
  %65 = load i32, i32* %64, align 8
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i16, i16* %1, i64 %66
  %68 = bitcast i16* %67 to i8*
  %69 = getelementptr inbounds i16, i16* %2, i64 %21
  %70 = bitcast i16* %69 to i8*
  %71 = load i32, i32* %5, align 4
  %72 = sub nsw i32 %3, %71
  %73 = sext i32 %72 to i64
  %74 = shl nsw i64 %73, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %68, i8* align 2 %70, i64 %74, i1 false)
  br label %75

75:                                               ; preds = %58, %47, %36, %25
  %76 = bitcast [48 x i16]* %16 to i8*
  %77 = load i32, i32* %10, align 4
  %78 = sub nsw i32 %3, %77
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i16, i16* %2, i64 %79
  %81 = bitcast i16* %80 to i8*
  %82 = sext i32 %77 to i64
  %83 = shl nsw i64 %82, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 2 %81, i64 %83, i1 false)
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @silk_resampler_private_up2_HQ_wrapper(i8*, i16*, i16*, i32) local_unnamed_addr #3

declare void @silk_resampler_private_IIR_FIR(i8*, i16*, i16*, i32) local_unnamed_addr #3

declare void @silk_resampler_private_down_FIR(i8*, i16*, i16*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
