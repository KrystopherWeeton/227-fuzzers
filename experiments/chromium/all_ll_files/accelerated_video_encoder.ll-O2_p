; ModuleID = '../../media/gpu/vaapi/accelerated_video_encoder.cc'
source_filename = "../../media/gpu/vaapi/accelerated_video_encoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::AcceleratedVideoEncoder::EncodeJob" = type { i32 (...)**, %class.scoped_refptr, %"class.base::TimeDelta", i8, %"class.std::__1::queue", %"class.std::__1::queue", %"class.base::OnceCallback", %"class.std::__1::vector" }
%class.scoped_refptr = type { %"class.media::VideoFrame"* }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::OnceCallback"*, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr.2*, %class.scoped_refptr.2*, %"class.std::__1::__compressed_pair.16" }
%class.scoped_refptr.2 = type { %"class.media::CodecPicture"* }
%"class.media::CodecPicture" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3", i32, %"class.gfx::Rect", %"class.std::__1::unique_ptr", %"class.media::VideoColorSpace", [4 x i8] }>
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::DecryptConfig"* }
%"class.media::DecryptConfig" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.7", %"class.absl::optional", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"*, %"class.std::__1::__compressed_pair.9" }
%"struct.media::SubsampleEntry" = type { i32, i32 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.media::SubsampleEntry"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.14 }
%union.anon.14 = type { %"class.media::EncryptionPattern" }
%"class.media::EncryptionPattern" = type { i32, i32 }
%"class.media::VideoColorSpace" = type { i8, i8, i8, i8 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.scoped_refptr.2* }
%"class.media::VideoFrame" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.21", %"class.media::VideoFrameLayout", %class.scoped_refptr, i32, %"class.gfx::Rect", %"class.gfx::Size", [4 x i8*], [4 x %"struct.gpu::MailboxHolder"], %"class.base::OnceCallback.29", %"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.std::__1::unique_ptr.30", %class.scoped_refptr.36, %"class.std::__1::vector.37", %"class.base::TimeDelta", %"class.base::Lock", %"struct.gpu::SyncToken", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::ColorSpace", %"class.absl::optional.84", [4 x i8], %"class.absl::optional.89", %"class.std::__1::unique_ptr.94" }
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.media::VideoFrameLayout" = type { i32, %"class.gfx::Size", %"class.std::__1::vector.22", i8, i64, i64 }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"*, %"class.std::__1::__compressed_pair.24" }
%"struct.media::ColorPlaneLayout" = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.media::ColorPlaneLayout"* }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.base::OnceCallback.29" = type { %"class.base::internal::CallbackBase" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type opaque
%class.scoped_refptr.36 = type { %"class.media::VideoFrame::DmabufHolder"* }
%"class.media::VideoFrame::DmabufHolder" = type opaque
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.base::OnceCallback"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional.44", %"class.absl::optional.44", %"class.absl::optional.49", %"class.absl::optional.54", %"class.absl::optional.59", i8, %"class.absl::optional.64", %"class.absl::optional.69", i8, %"class.absl::optional.44", i8, [3 x i8], %"class.absl::optional.74", i8, i8, i8, i8, i32, %"class.absl::optional.79", i8, %"class.absl::optional.69", %"class.absl::optional.69", %"class.absl::optional.69", %"class.absl::optional.69", %"class.absl::optional.69", %"class.absl::optional.44", %"class.absl::optional.44", %"class.absl::optional.64", %"class.absl::optional.69", %"class.absl::optional.44", %"class.absl::optional.64", %"class.absl::optional.49" }
%"class.absl::optional.54" = type { %"class.absl::optional_internal::optional_data.55" }
%"class.absl::optional_internal::optional_data.55" = type { %"class.absl::optional_internal::optional_data_base.56" }
%"class.absl::optional_internal::optional_data_base.56" = type { %"class.absl::optional_internal::optional_data_dtor_base.57" }
%"class.absl::optional_internal::optional_data_dtor_base.57" = type { i8, %union.anon.58 }
%union.anon.58 = type { %"class.gfx::Rect" }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { i32 }
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, [3 x i8], %union.anon.78 }
%union.anon.78 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.79" = type { %"class.absl::optional_internal::optional_data.80" }
%"class.absl::optional_internal::optional_data.80" = type { %"class.absl::optional_internal::optional_data_base.81" }
%"class.absl::optional_internal::optional_data_base.81" = type { %"class.absl::optional_internal::optional_data_dtor_base.82" }
%"class.absl::optional_internal::optional_data_dtor_base.82" = type { i8, %union.anon.83 }
%union.anon.83 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.69" = type { %"class.absl::optional_internal::optional_data.70" }
%"class.absl::optional_internal::optional_data.70" = type { %"class.absl::optional_internal::optional_data_base.71" }
%"class.absl::optional_internal::optional_data_base.71" = type { %"class.absl::optional_internal::optional_data_dtor_base.72" }
%"class.absl::optional_internal::optional_data_dtor_base.72" = type { i8, %union.anon.73 }
%union.anon.73 = type { double }
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.64" = type { %"class.absl::optional_internal::optional_data.65" }
%"class.absl::optional_internal::optional_data.65" = type { %"class.absl::optional_internal::optional_data_base.66" }
%"class.absl::optional_internal::optional_data_base.66" = type { %"class.absl::optional_internal::optional_data_dtor_base.67" }
%"class.absl::optional_internal::optional_data_dtor_base.67" = type { i8, %union.anon.68 }
%union.anon.68 = type { %"class.base::TimeDelta" }
%"class.absl::optional.49" = type { %"class.absl::optional_internal::optional_data.50" }
%"class.absl::optional_internal::optional_data.50" = type { %"class.absl::optional_internal::optional_data_base.51" }
%"class.absl::optional_internal::optional_data_base.51" = type { %"class.absl::optional_internal::optional_data_dtor_base.52" }
%"class.absl::optional_internal::optional_data_dtor_base.52" = type { i8, %union.anon.53 }
%union.anon.53 = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.84" = type { %"class.absl::optional_internal::optional_data.85" }
%"class.absl::optional_internal::optional_data.85" = type { %"class.absl::optional_internal::optional_data_base.86" }
%"class.absl::optional_internal::optional_data_base.86" = type { %"class.absl::optional_internal::optional_data_dtor_base.87" }
%"class.absl::optional_internal::optional_data_dtor_base.87" = type { i8, %union.anon.88 }
%union.anon.88 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, [7 x i8], %union.anon.93 }
%union.anon.93 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i8* }
%"class.media::VaapiEncodeJob" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.media::AcceleratedVideoEncoder" = type { i32 (...)** }
%"struct.media::BitstreamBufferMetadata" = type { i64, i8, %"class.base::TimeDelta", %"class.absl::optional.98", %"class.absl::optional.103" }
%"class.absl::optional.98" = type { %"class.absl::optional_internal::optional_data.99" }
%"class.absl::optional_internal::optional_data.99" = type { %"class.absl::optional_internal::optional_data_base.100" }
%"class.absl::optional_internal::optional_data_base.100" = type { %"class.absl::optional_internal::optional_data_dtor_base.101" }
%"class.absl::optional_internal::optional_data_dtor_base.101" = type { i8, %union.anon.102 }
%union.anon.102 = type { %"struct.media::Vp8Metadata" }
%"struct.media::Vp8Metadata" = type { i8, i8, i8 }
%"class.absl::optional.103" = type { %"class.absl::optional_internal::optional_data.104" }
%"class.absl::optional_internal::optional_data.104" = type { %"class.absl::optional_internal::optional_data_base.105" }
%"class.absl::optional_internal::optional_data_base.105" = type { %"class.absl::optional_internal::optional_data_dtor_base.106" }
%"class.absl::optional_internal::optional_data_dtor_base.106" = type { i8, %union.anon.107 }
%union.anon.107 = type { %"struct.media::Vp9Metadata" }
%"struct.media::Vp9Metadata" = type { i8, i8, i8, %"class.std::__1::vector.108" }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { i8*, i8*, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN5media23AcceleratedVideoEncoderD2Ev = comdat any

$_ZN5media23AcceleratedVideoEncoderD0Ev = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_ = comdat any

$_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_ = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_ = comdat any

$_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm = comdat any

$_ZNSt3__16vectorI13scoped_refptrIN5media12CodecPictureEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_ = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv = comdat any

@_ZTVN5media23AcceleratedVideoEncoder9EncodeJobE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::AcceleratedVideoEncoder::EncodeJob"*)* @_ZN5media23AcceleratedVideoEncoder9EncodeJobD2Ev to i8*), i8* bitcast (void (%"class.media::AcceleratedVideoEncoder::EncodeJob"*)* @_ZN5media23AcceleratedVideoEncoder9EncodeJobD0Ev to i8*), i8* bitcast (%"class.media::VaapiEncodeJob"* (%"class.media::AcceleratedVideoEncoder::EncodeJob"*)* @_ZN5media23AcceleratedVideoEncoder9EncodeJob16AsVaapiEncodeJobEv to i8*)] }, align 8
@.str = private unnamed_addr constant [51 x i8] c"../../media/gpu/vaapi/accelerated_video_encoder.cc\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@_ZTVN5media23AcceleratedVideoEncoderE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::AcceleratedVideoEncoder"*)* @_ZN5media23AcceleratedVideoEncoderD2Ev to i8*), i8* bitcast (void (%"class.media::AcceleratedVideoEncoder"*)* @_ZN5media23AcceleratedVideoEncoderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.media::AcceleratedVideoEncoder"*)* @_ZNK5media23AcceleratedVideoEncoder22GetBitstreamBufferSizeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.media::AcceleratedVideoEncoder"*, i64)* @_ZN5media23AcceleratedVideoEncoder20BitrateControlUpdateEm to i8*), i8* bitcast (void (%"struct.media::BitstreamBufferMetadata"*, %"class.media::AcceleratedVideoEncoder"*, %"class.media::AcceleratedVideoEncoder::EncodeJob"*, i64)* @_ZN5media23AcceleratedVideoEncoder11GetMetadataEPNS0_9EncodeJobEm to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1

@_ZN5media23AcceleratedVideoEncoder9EncodeJobC1E13scoped_refptrINS_10VideoFrameEEbN4base12OnceCallbackIFvvEEE = hidden unnamed_addr alias void (%"class.media::AcceleratedVideoEncoder::EncodeJob"*, %"class.media::VideoFrame"*, i1, %"class.base::OnceCallback"*), void (%"class.media::AcceleratedVideoEncoder::EncodeJob"*, %"class.media::VideoFrame"*, i1, %"class.base::OnceCallback"*)* @_ZN5media23AcceleratedVideoEncoder9EncodeJobC2E13scoped_refptrINS_10VideoFrameEEbN4base12OnceCallbackIFvvEEE
@_ZN5media23AcceleratedVideoEncoder9EncodeJobD1Ev = hidden unnamed_addr alias void (%"class.media::AcceleratedVideoEncoder::EncodeJob"*), void (%"class.media::AcceleratedVideoEncoder::EncodeJob"*)* @_ZN5media23AcceleratedVideoEncoder9EncodeJobD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23AcceleratedVideoEncoder9EncodeJobC2E13scoped_refptrINS_10VideoFrameEEbN4base12OnceCallbackIFvvEEE(%"class.media::AcceleratedVideoEncoder::EncodeJob"* nocapture, %"class.media::VideoFrame"*, i1 zeroext, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = zext i1 %2 to i8
  %6 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media23AcceleratedVideoEncoder9EncodeJobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 1, i32 0
  store %"class.media::VideoFrame"* %1, %"class.media::VideoFrame"** %7, align 8
  %8 = icmp eq %"class.media::VideoFrame"* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %4, %9
  %13 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 16, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 2, i32 0
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 3
  store i8 %5, i8* %16, align 8
  %17 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 6
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %21 = bitcast %"class.std::__1::queue"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 64, i1 false)
  %22 = load i64, i64* %20, align 8
  %23 = bitcast %"class.base::OnceCallback"* %18 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %24 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 7
  %25 = bitcast %"class.std::__1::vector"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #13
  br i1 %8, label %38, label %26

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 1
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %38

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %27, i64 -2
  %33 = bitcast %"class.base::RefCountedThreadSafe.21"* %32 to %"class.media::VideoFrame"*
  %34 = bitcast %"class.base::RefCountedThreadSafe.21"* %32 to void (%"class.media::VideoFrame"*)***
  %35 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %35, i64 1
  %37 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %36, align 8
  tail call void %37(%"class.media::VideoFrame"* nonnull %33) #13
  br label %38

38:                                               ; preds = %12, %26, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23AcceleratedVideoEncoder9EncodeJobD2Ev(%"class.media::AcceleratedVideoEncoder::EncodeJob"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media23AcceleratedVideoEncoder9EncodeJobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.2*, %class.scoped_refptr.2** %4, align 8
  %6 = icmp eq %class.scoped_refptr.2* %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr.2* %5 to i8*
  %9 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %class.scoped_refptr.2*, %class.scoped_refptr.2** %9, align 8
  %11 = icmp eq %class.scoped_refptr.2* %10, %5
  br i1 %11, label %35, label %12

12:                                               ; preds = %7, %30
  %13 = phi %class.scoped_refptr.2* [ %14, %30 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %13, i64 -1
  %15 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %14, i64 0, i32 0
  %16 = load %"class.media::CodecPicture"*, %"class.media::CodecPicture"** %15, align 8
  %17 = icmp eq %"class.media::CodecPicture"* %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.media::CodecPicture", %"class.media::CodecPicture"* %16, i64 0, i32 1
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe.3", %"class.base::RefCountedThreadSafe.3"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %30

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.3", %"class.base::RefCountedThreadSafe.3"* %19, i64 -2
  %25 = bitcast %"class.base::RefCountedThreadSafe.3"* %24 to %"class.media::CodecPicture"*
  %26 = bitcast %"class.base::RefCountedThreadSafe.3"* %24 to void (%"class.media::CodecPicture"*)***
  %27 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %27, i64 1
  %29 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %28, align 8
  tail call void %29(%"class.media::CodecPicture"* nonnull %25) #13
  br label %30

30:                                               ; preds = %23, %18, %12
  %31 = icmp eq %class.scoped_refptr.2* %14, %5
  br i1 %31, label %32, label %12

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector"* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %7
  %36 = phi i8* [ %34, %32 ], [ %8, %7 ]
  store %class.scoped_refptr.2* %5, %class.scoped_refptr.2** %9, align 8
  tail call void @_ZdlPv(i8* %36) #14
  br label %37

37:                                               ; preds = %1, %35
  %38 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %38) #13
  %39 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 5
  %40 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %39, i64 0, i32 0
  %41 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 5, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 5, i32 0, i32 2
  %44 = load i64, i64* %43, align 8
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque"* %40, i64 %42, i64 %44) #13
  %45 = bitcast %"class.std::__1::queue"* %39 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @free(i8* %46) #13
  %47 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 4
  %48 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %47, i64 0, i32 0
  %49 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 4, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 4, i32 0, i32 2
  %52 = load i64, i64* %51, align 8
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque"* %48, i64 %50, i64 %52) #13
  %53 = bitcast %"class.std::__1::queue"* %47 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @free(i8* %54) #13
  %55 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 1, i32 0
  %56 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %55, align 8
  %57 = icmp eq %"class.media::VideoFrame"* %56, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %37
  %59 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %56, i64 0, i32 1
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw sub i32* %60, i32 1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %59, i64 -2
  %65 = bitcast %"class.base::RefCountedThreadSafe.21"* %64 to %"class.media::VideoFrame"*
  %66 = bitcast %"class.base::RefCountedThreadSafe.21"* %64 to void (%"class.media::VideoFrame"*)***
  %67 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %67, i64 1
  %69 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %68, align 8
  tail call void %69(%"class.media::VideoFrame"* nonnull %65) #13
  br label %70

70:                                               ; preds = %37, %58, %63
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23AcceleratedVideoEncoder9EncodeJobD0Ev(%"class.media::AcceleratedVideoEncoder::EncodeJob"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5media23AcceleratedVideoEncoder9EncodeJobD2Ev(%"class.media::AcceleratedVideoEncoder::EncodeJob"* %0) #13
  %2 = bitcast %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.media::VaapiEncodeJob"* @_ZN5media23AcceleratedVideoEncoder9EncodeJob16AsVaapiEncodeJobEv(%"class.media::AcceleratedVideoEncoder::EncodeJob"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 27, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #13
  %4 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #13
  ret %"class.media::VaapiEncodeJob"* null
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23AcceleratedVideoEncoder9EncodeJob16AddSetupCallbackEN4base12OnceCallbackIFvvEEE(%"class.media::AcceleratedVideoEncoder::EncodeJob"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %4, i64 1) #13
  %5 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 4, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %5, i64 %7) #13
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = load i64, i64* %6, align 8
  %14 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  %17 = icmp eq i64 %13, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  store i64 0, i64* %6, align 8
  br label %22

19:                                               ; preds = %2
  %20 = add i64 %13, 1
  store i64 %20, i64* %6, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19, %18
  br label %23

23:                                               ; preds = %19, %22
  %24 = phi i64 [ %16, %22 ], [ %13, %19 ]
  %25 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %5, i64 %24) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23AcceleratedVideoEncoder9EncodeJob22AddPostExecuteCallbackEN4base12OnceCallbackIFvvEEE(%"class.media::AcceleratedVideoEncoder::EncodeJob"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %4, i64 1) #13
  %5 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 5, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %5, i64 %7) #13
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = load i64, i64* %6, align 8
  %14 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  %17 = icmp eq i64 %13, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  store i64 0, i64* %6, align 8
  br label %22

19:                                               ; preds = %2
  %20 = add i64 %13, 1
  store i64 %20, i64* %6, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19, %18
  br label %23

23:                                               ; preds = %19, %22
  %24 = phi i64 [ %16, %22 ], [ %13, %19 ]
  %25 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %5, i64 %24) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23AcceleratedVideoEncoder9EncodeJob19AddReferencePictureE13scoped_refptrINS_12CodecPictureEE(%"class.media::AcceleratedVideoEncoder::EncodeJob"*, %"class.media::CodecPicture"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.2, align 8
  %4 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %3, i64 0, i32 0
  store %"class.media::CodecPicture"* %1, %"class.media::CodecPicture"** %4, align 8
  %5 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 7, i32 0, i32 1
  %6 = load %class.scoped_refptr.2*, %class.scoped_refptr.2** %5, align 8
  %7 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %8 = load %class.scoped_refptr.2*, %class.scoped_refptr.2** %7, align 8
  %9 = icmp eq %class.scoped_refptr.2* %6, %8
  br i1 %9, label %20, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %6, i64 0, i32 0
  store %"class.media::CodecPicture"* %1, %"class.media::CodecPicture"** %11, align 8
  %12 = icmp eq %"class.media::CodecPicture"* %1, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.media::CodecPicture", %"class.media::CodecPicture"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %13, %10
  %17 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %6, i64 1
  %18 = ptrtoint %class.scoped_refptr.2* %17 to i64
  %19 = bitcast %class.scoped_refptr.2** %5 to i64*
  store i64 %18, i64* %19, align 8
  br label %22

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 7
  call void @_ZNSt3__16vectorI13scoped_refptrIN5media12CodecPictureEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector"* %21, %class.scoped_refptr.2* nonnull dereferenceable(8) %3) #13
  br label %22

22:                                               ; preds = %16, %20
  %23 = load %"class.media::CodecPicture"*, %"class.media::CodecPicture"** %4, align 8
  %24 = icmp eq %"class.media::CodecPicture"* %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.media::CodecPicture", %"class.media::CodecPicture"* %23, i64 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe.3", %"class.base::RefCountedThreadSafe.3"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %37

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.3", %"class.base::RefCountedThreadSafe.3"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe.3"* %31 to %"class.media::CodecPicture"*
  %33 = bitcast %"class.base::RefCountedThreadSafe.3"* %31 to void (%"class.media::CodecPicture"*)***
  %34 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %34, i64 1
  %36 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %35, align 8
  call void %36(%"class.media::CodecPicture"* nonnull %32) #13
  br label %37

37:                                               ; preds = %22, %25, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23AcceleratedVideoEncoder9EncodeJob7ExecuteEv(%"class.media::AcceleratedVideoEncoder::EncodeJob"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 4, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 4, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %41, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback"* %4 to i8*
  %14 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %5, i64 0, i32 0
  %17 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  br label %18

18:                                               ; preds = %11, %18
  %19 = phi i64 [ %7, %11 ], [ %38, %18 ]
  %20 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %12, i64 %19) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %24 = inttoptr i64 %23 to %"class.base::internal::BindStateBase"*
  %25 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %24, i64 0, i32 1
  %26 = bitcast void ()** %25 to void (%"class.base::internal::BindStateBase"*)**
  %27 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %26, align 8
  call void %27(%"class.base::internal::BindStateBase"* %24) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  %28 = load i64, i64* %6, align 8
  %29 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %12, i64 %28) #13
  %30 = load i64, i64* %6, align 8
  %31 = add i64 %30, 1
  %32 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %12, i64 %31) #13
  call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %12, %"class.base::OnceCallback"* %29, %"class.base::OnceCallback"* %32) #13
  %33 = load i64, i64* %6, align 8
  %34 = add i64 %33, 1
  %35 = load i64, i64* %17, align 8
  %36 = icmp eq i64 %34, %35
  %37 = select i1 %36, i64 0, i64 %34
  store i64 %37, i64* %6, align 8
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %16) #13
  %38 = load i64, i64* %6, align 8
  %39 = load i64, i64* %8, align 8
  %40 = icmp eq i64 %38, %39
  br i1 %40, label %41, label %18

41:                                               ; preds = %18, %1
  %42 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 6
  %43 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %42, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.base::OnceCallback"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %44, align 8
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %49 = inttoptr i64 %46 to %"class.base::internal::BindStateBase"*
  %50 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %49, i64 0, i32 1
  %51 = bitcast void ()** %50 to void (%"class.base::internal::BindStateBase"*)**
  %52 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %51, align 8
  call void %52(%"class.base::internal::BindStateBase"* %49) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  %53 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 5
  %54 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 5, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 5, i32 0, i32 2
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %55, %57
  br i1 %58, label %89, label %59

59:                                               ; preds = %41
  %60 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %53, i64 0, i32 0, i32 0
  %61 = bitcast %"class.base::OnceCallback"* %2 to i8*
  %62 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %64 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %53, i64 0, i32 0
  %65 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  br label %66

66:                                               ; preds = %59, %66
  %67 = phi i64 [ %55, %59 ], [ %86, %66 ]
  %68 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %60, i64 %67) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #13
  %69 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.base::OnceCallback"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %62, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %69, align 8
  %72 = inttoptr i64 %71 to %"class.base::internal::BindStateBase"*
  %73 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %72, i64 0, i32 1
  %74 = bitcast void ()** %73 to void (%"class.base::internal::BindStateBase"*)**
  %75 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %74, align 8
  call void %75(%"class.base::internal::BindStateBase"* %72) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #13
  %76 = load i64, i64* %54, align 8
  %77 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %60, i64 %76) #13
  %78 = load i64, i64* %54, align 8
  %79 = add i64 %78, 1
  %80 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %60, i64 %79) #13
  call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %60, %"class.base::OnceCallback"* %77, %"class.base::OnceCallback"* %80) #13
  %81 = load i64, i64* %54, align 8
  %82 = add i64 %81, 1
  %83 = load i64, i64* %65, align 8
  %84 = icmp eq i64 %82, %83
  %85 = select i1 %84, i64 0, i64 %82
  store i64 %85, i64* %54, align 8
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %64) #13
  %86 = load i64, i64* %54, align 8
  %87 = load i64, i64* %56, align 8
  %88 = icmp eq i64 %86, %87
  br i1 %88, label %89, label %66

89:                                               ; preds = %66, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5media23AcceleratedVideoEncoder22GetBitstreamBufferSizeEv(%"class.media::AcceleratedVideoEncoder"*) unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"class.gfx::Size"*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = bitcast %"class.media::AcceleratedVideoEncoder"* %0 to i64 (%"class.media::AcceleratedVideoEncoder"*)***
  %6 = load i64 (%"class.media::AcceleratedVideoEncoder"*)**, i64 (%"class.media::AcceleratedVideoEncoder"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.media::AcceleratedVideoEncoder"*)*, i64 (%"class.media::AcceleratedVideoEncoder"*)** %6, i64 4
  %8 = load i64 (%"class.media::AcceleratedVideoEncoder"*)*, i64 (%"class.media::AcceleratedVideoEncoder"*)** %7, align 8
  %9 = tail call i64 %8(%"class.media::AcceleratedVideoEncoder"* %0) #13
  store i64 %9, i64* %2, align 8
  %10 = call i64 @_ZN5media28GetEncodeBitstreamBufferSizeERKN3gfx4SizeE(%"class.gfx::Size"* nonnull dereferenceable(8) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret i64 %10
}

declare i64 @_ZN5media28GetEncodeBitstreamBufferSizeERKN3gfx4SizeE(%"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media23AcceleratedVideoEncoder20BitrateControlUpdateEm(%"class.media::AcceleratedVideoEncoder"* nocapture, i64) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23AcceleratedVideoEncoder11GetMetadataEPNS0_9EncodeJobEm(%"struct.media::BitstreamBufferMetadata"* noalias sret, %"class.media::AcceleratedVideoEncoder"* nocapture readnone, %"class.media::AcceleratedVideoEncoder::EncodeJob"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %2, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = getelementptr inbounds %"class.media::AcceleratedVideoEncoder::EncodeJob", %"class.media::AcceleratedVideoEncoder::EncodeJob"* %2, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  tail call void @_ZN5media23BitstreamBufferMetadataC1EmbN4base9TimeDeltaE(%"struct.media::BitstreamBufferMetadata"* %0, i64 %3, i1 zeroext %7, i64 %9) #13
  ret void
}

declare void @_ZN5media23BitstreamBufferMetadataC1EmbN4base9TimeDeltaE(%"struct.media::BitstreamBufferMetadata"*, i64, i1 zeroext, i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media23AcceleratedVideoEncoderD2Ev(%"class.media::AcceleratedVideoEncoder"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media23AcceleratedVideoEncoderD0Ev(%"class.media::AcceleratedVideoEncoder"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %7, %"class.base::OnceCallback"* %8, %"class.base::OnceCallback"* %12)
  %13 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.base::OnceCallback"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %7, %"class.base::OnceCallback"* %15, %"class.base::OnceCallback"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.base::OnceCallback"*, align 8
  %6 = alloca %"class.base::OnceCallback"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.base::OnceCallback"* %1, %"class.base::OnceCallback"** %5, align 8
  store %"class.base::OnceCallback"* %2, %"class.base::OnceCallback"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.base::OnceCallback"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.base::OnceCallback"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #13
  %17 = bitcast %"class.base::OnceCallback"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %26 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %5, align 8
  %27 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %28 = icmp eq %"class.base::OnceCallback"* %26, %27
  br i1 %28, label %36, label %29

29:                                               ; preds = %25, %29
  %30 = phi %"class.base::OnceCallback"* [ %33, %29 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %30, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %31) #13
  %32 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %5, align 8
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %32, i64 1
  store %"class.base::OnceCallback"* %33, %"class.base::OnceCallback"** %5, align 8
  %34 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %35 = icmp eq %"class.base::OnceCallback"* %33, %34
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %23, align 8
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %24, i64 %1
  ret %"class.base::OnceCallback"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #13
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #13
  br i1 %37, label %38, label %39, !prof !3

38:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #13
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #13
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #13
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %51

13:                                               ; preds = %6
  %14 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %16 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %17 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %16, align 8
  %18 = ptrtoint %"class.base::OnceCallback"* %14 to i64
  %19 = icmp ult %"class.base::OnceCallback"* %17, %15
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"class.base::OnceCallback"* %17 to i64
  %22 = ptrtoint %"class.base::OnceCallback"* %15 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %18) #13
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #13
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %18
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #13
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"class.base::OnceCallback"* %14, %15
  br i1 %37, label %49, label %38

38:                                               ; preds = %36, %38
  %39 = phi %"class.base::OnceCallback"* [ %47, %38 ], [ %17, %36 ]
  %40 = phi %"class.base::OnceCallback"* [ %46, %38 ], [ %14, %36 ]
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.base::OnceCallback"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.base::OnceCallback"* %39 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %45) #13
  %46 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 1
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %39, i64 1
  %48 = icmp eq %"class.base::OnceCallback"* %46, %15
  br i1 %48, label %49, label %38

49:                                               ; preds = %38, %36
  %50 = sub i64 %2, %1
  br label %127

51:                                               ; preds = %6
  %52 = icmp ult i64 %2, %1
  br i1 %52, label %53, label %127

53:                                               ; preds = %51
  %54 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %55 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %56 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %57 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %56, align 8
  %58 = ptrtoint %"class.base::OnceCallback"* %54 to i64
  %59 = icmp ult %"class.base::OnceCallback"* %57, %55
  br i1 %59, label %60, label %76

60:                                               ; preds = %53
  %61 = ptrtoint %"class.base::OnceCallback"* %57 to i64
  %62 = ptrtoint %"class.base::OnceCallback"* %55 to i64
  %63 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %62, i64 %58) #13
  %64 = extractvalue { i64, i1 } %63, 1
  %65 = extractvalue { i64, i1 } %63, 0
  %66 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %61, i64 %65) #13
  %67 = extractvalue { i64, i1 } %66, 1
  %68 = or i1 %64, %67
  br i1 %68, label %69, label %70, !prof !3

69:                                               ; preds = %60
  tail call void @llvm.trap() #13
  unreachable

70:                                               ; preds = %60
  %71 = extractvalue { i64, i1 } %66, 0
  %72 = icmp ugt i64 %71, %58
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  %74 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #13
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #13
  br label %76

76:                                               ; preds = %73, %70, %53
  %77 = icmp eq %"class.base::OnceCallback"* %54, %55
  br i1 %77, label %89, label %78

78:                                               ; preds = %76, %78
  %79 = phi %"class.base::OnceCallback"* [ %87, %78 ], [ %57, %76 ]
  %80 = phi %"class.base::OnceCallback"* [ %86, %78 ], [ %54, %76 ]
  %81 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::OnceCallback"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::OnceCallback"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %85) #13
  %86 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 1
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %79, i64 1
  %88 = icmp eq %"class.base::OnceCallback"* %86, %55
  br i1 %88, label %89, label %78

89:                                               ; preds = %78, %76
  %90 = sub i64 %11, %1
  %91 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %92 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %93 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %90)
  %94 = ptrtoint %"class.base::OnceCallback"* %91 to i64
  %95 = icmp ult %"class.base::OnceCallback"* %93, %92
  br i1 %95, label %96, label %112

96:                                               ; preds = %89
  %97 = ptrtoint %"class.base::OnceCallback"* %93 to i64
  %98 = ptrtoint %"class.base::OnceCallback"* %92 to i64
  %99 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %98, i64 %94) #13
  %100 = extractvalue { i64, i1 } %99, 1
  %101 = extractvalue { i64, i1 } %99, 0
  %102 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %97, i64 %101) #13
  %103 = extractvalue { i64, i1 } %102, 1
  %104 = or i1 %100, %103
  br i1 %104, label %105, label %106, !prof !3

105:                                              ; preds = %96
  call void @llvm.trap() #13
  unreachable

106:                                              ; preds = %96
  %107 = extractvalue { i64, i1 } %102, 0
  %108 = icmp ugt i64 %107, %94
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #13
  %111 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #13
  br label %112

112:                                              ; preds = %109, %106, %89
  %113 = icmp eq %"class.base::OnceCallback"* %91, %92
  br i1 %113, label %125, label %114

114:                                              ; preds = %112, %114
  %115 = phi %"class.base::OnceCallback"* [ %123, %114 ], [ %93, %112 ]
  %116 = phi %"class.base::OnceCallback"* [ %122, %114 ], [ %91, %112 ]
  %117 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.base::OnceCallback"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.base::OnceCallback"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %117, align 8
  %121 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %121) #13
  %122 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 1
  %123 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %115, i64 1
  %124 = icmp eq %"class.base::OnceCallback"* %122, %92
  br i1 %124, label %125, label %114

125:                                              ; preds = %114, %112
  %126 = add i64 %90, %2
  br label %127

127:                                              ; preds = %51, %125, %49
  %128 = phi i64 [ %126, %125 ], [ %50, %49 ], [ 0, %51 ]
  store i64 %128, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %23, align 8
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %24, i64 %1
  ret %"class.base::OnceCallback"* %25
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13scoped_refptrIN5media12CodecPictureEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector"*, %class.scoped_refptr.2* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.scoped_refptr.2** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.scoped_refptr.2** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %class.scoped_refptr.2*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.scoped_refptr.2* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %36, i64 %9
  %38 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %36, i64 %35
  %39 = ptrtoint %class.scoped_refptr.2* %38 to i64
  %40 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %1, i64 0, i32 0
  %41 = load %"class.media::CodecPicture"*, %"class.media::CodecPicture"** %40, align 8
  %42 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %37, i64 0, i32 0
  store %"class.media::CodecPicture"* %41, %"class.media::CodecPicture"** %42, align 8
  %43 = icmp eq %"class.media::CodecPicture"* %41, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.media::CodecPicture", %"class.media::CodecPicture"* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  br label %47

47:                                               ; preds = %34, %44
  %48 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %37, i64 1
  %49 = ptrtoint %class.scoped_refptr.2* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %51 = load %class.scoped_refptr.2*, %class.scoped_refptr.2** %50, align 8
  %52 = ptrtoint %class.scoped_refptr.2* %51 to i64
  %53 = load %class.scoped_refptr.2*, %class.scoped_refptr.2** %3, align 8
  %54 = icmp eq %class.scoped_refptr.2* %53, %51
  br i1 %54, label %136, label %55

55:                                               ; preds = %47
  %56 = getelementptr %class.scoped_refptr.2, %class.scoped_refptr.2* %53, i64 -1, i32 0
  %57 = ptrtoint %"class.media::CodecPicture"** %56 to i64
  %58 = sub i64 %57, %52
  %59 = lshr i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 7
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %75, label %63

63:                                               ; preds = %55, %63
  %64 = phi %class.scoped_refptr.2* [ %67, %63 ], [ %37, %55 ]
  %65 = phi %class.scoped_refptr.2* [ %68, %63 ], [ %53, %55 ]
  %66 = phi i64 [ %73, %63 ], [ %61, %55 ]
  %67 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %64, i64 -1
  %68 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %65, i64 -1
  %69 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %68, i64 0, i32 0
  %70 = bitcast %class.scoped_refptr.2* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %class.scoped_refptr.2* %67 to i64*
  store i64 %71, i64* %72, align 8
  store %"class.media::CodecPicture"* null, %"class.media::CodecPicture"** %69, align 8
  %73 = add i64 %66, -1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %63, !llvm.loop !4

75:                                               ; preds = %63, %55
  %76 = phi %class.scoped_refptr.2* [ undef, %55 ], [ %67, %63 ]
  %77 = phi %class.scoped_refptr.2* [ %37, %55 ], [ %67, %63 ]
  %78 = phi %class.scoped_refptr.2* [ %53, %55 ], [ %68, %63 ]
  %79 = icmp ult i64 %58, 56
  br i1 %79, label %132, label %80

80:                                               ; preds = %75, %80
  %81 = phi %class.scoped_refptr.2* [ %125, %80 ], [ %77, %75 ]
  %82 = phi %class.scoped_refptr.2* [ %126, %80 ], [ %78, %75 ]
  %83 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %81, i64 -1
  %84 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %82, i64 -1
  %85 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %84, i64 0, i32 0
  %86 = bitcast %class.scoped_refptr.2* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %class.scoped_refptr.2* %83 to i64*
  store i64 %87, i64* %88, align 8
  store %"class.media::CodecPicture"* null, %"class.media::CodecPicture"** %85, align 8
  %89 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %81, i64 -2
  %90 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %82, i64 -2
  %91 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %90, i64 0, i32 0
  %92 = bitcast %class.scoped_refptr.2* %90 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %class.scoped_refptr.2* %89 to i64*
  store i64 %93, i64* %94, align 8
  store %"class.media::CodecPicture"* null, %"class.media::CodecPicture"** %91, align 8
  %95 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %81, i64 -3
  %96 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %82, i64 -3
  %97 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %96, i64 0, i32 0
  %98 = bitcast %class.scoped_refptr.2* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %class.scoped_refptr.2* %95 to i64*
  store i64 %99, i64* %100, align 8
  store %"class.media::CodecPicture"* null, %"class.media::CodecPicture"** %97, align 8
  %101 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %81, i64 -4
  %102 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %82, i64 -4
  %103 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %102, i64 0, i32 0
  %104 = bitcast %class.scoped_refptr.2* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %class.scoped_refptr.2* %101 to i64*
  store i64 %105, i64* %106, align 8
  store %"class.media::CodecPicture"* null, %"class.media::CodecPicture"** %103, align 8
  %107 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %81, i64 -5
  %108 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %82, i64 -5
  %109 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %108, i64 0, i32 0
  %110 = bitcast %class.scoped_refptr.2* %108 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %class.scoped_refptr.2* %107 to i64*
  store i64 %111, i64* %112, align 8
  store %"class.media::CodecPicture"* null, %"class.media::CodecPicture"** %109, align 8
  %113 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %81, i64 -6
  %114 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %82, i64 -6
  %115 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %114, i64 0, i32 0
  %116 = bitcast %class.scoped_refptr.2* %114 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %class.scoped_refptr.2* %113 to i64*
  store i64 %117, i64* %118, align 8
  store %"class.media::CodecPicture"* null, %"class.media::CodecPicture"** %115, align 8
  %119 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %81, i64 -7
  %120 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %82, i64 -7
  %121 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %120, i64 0, i32 0
  %122 = bitcast %class.scoped_refptr.2* %120 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %class.scoped_refptr.2* %119 to i64*
  store i64 %123, i64* %124, align 8
  store %"class.media::CodecPicture"* null, %"class.media::CodecPicture"** %121, align 8
  %125 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %81, i64 -8
  %126 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %82, i64 -8
  %127 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %126, i64 0, i32 0
  %128 = bitcast %class.scoped_refptr.2* %126 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %class.scoped_refptr.2* %125 to i64*
  store i64 %129, i64* %130, align 8
  store %"class.media::CodecPicture"* null, %"class.media::CodecPicture"** %127, align 8
  %131 = icmp eq %class.scoped_refptr.2* %126, %51
  br i1 %131, label %132, label %80

132:                                              ; preds = %80, %75
  %133 = phi %class.scoped_refptr.2* [ %76, %75 ], [ %125, %80 ]
  %134 = load i64, i64* %6, align 8
  %135 = load %class.scoped_refptr.2*, %class.scoped_refptr.2** %3, align 8
  br label %136

136:                                              ; preds = %47, %132
  %137 = phi %class.scoped_refptr.2* [ %135, %132 ], [ %51, %47 ]
  %138 = phi %class.scoped_refptr.2* [ %133, %132 ], [ %37, %47 ]
  %139 = phi i64 [ %134, %132 ], [ %52, %47 ]
  %140 = ptrtoint %class.scoped_refptr.2* %138 to i64
  store i64 %140, i64* %6, align 8
  store i64 %49, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %141 = inttoptr i64 %139 to %class.scoped_refptr.2*
  %142 = icmp eq %class.scoped_refptr.2* %137, %141
  br i1 %142, label %163, label %143

143:                                              ; preds = %136, %161
  %144 = phi %class.scoped_refptr.2* [ %145, %161 ], [ %137, %136 ]
  %145 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %144, i64 -1
  %146 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %145, i64 0, i32 0
  %147 = load %"class.media::CodecPicture"*, %"class.media::CodecPicture"** %146, align 8
  %148 = icmp eq %"class.media::CodecPicture"* %147, null
  br i1 %148, label %161, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.media::CodecPicture", %"class.media::CodecPicture"* %147, i64 0, i32 1
  %151 = getelementptr inbounds %"class.base::RefCountedThreadSafe.3", %"class.base::RefCountedThreadSafe.3"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = atomicrmw sub i32* %151, i32 1 acq_rel
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %154, label %161

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.base::RefCountedThreadSafe.3", %"class.base::RefCountedThreadSafe.3"* %150, i64 -2
  %156 = bitcast %"class.base::RefCountedThreadSafe.3"* %155 to %"class.media::CodecPicture"*
  %157 = bitcast %"class.base::RefCountedThreadSafe.3"* %155 to void (%"class.media::CodecPicture"*)***
  %158 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %158, i64 1
  %160 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %159, align 8
  tail call void %160(%"class.media::CodecPicture"* nonnull %156) #13
  br label %161

161:                                              ; preds = %154, %149, %143
  %162 = icmp eq %class.scoped_refptr.2* %145, %141
  br i1 %162, label %163, label %143

163:                                              ; preds = %161, %136
  %164 = icmp eq i64 %139, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = inttoptr i64 %139 to i8*
  tail call void @_ZdlPv(i8* %166) #14
  br label %167

167:                                              ; preds = %163, %165
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #13
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #13
  br i1 %31, label %32, label %33, !prof !3

32:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #13
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #13
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #13
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
