; ModuleID = '../../content/browser/renderer_host/ui_events_helper.cc'
source_filename = "../../content/browser/renderer_host/ui_events_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::EventWithLatencyInfo" = type { %"class.blink::WebTouchEvent", %"class.ui::LatencyInfo" }
%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.ui::TouchEvent"* }
%"class.ui::TouchEvent" = type <{ %"class.ui::LocatedEvent", i32, i8, i8, [2 x i8], %"struct.ui::PointerDetails", [4 x i8] }>
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.5" }
%"class.ui::EventTarget" = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.base::flat_map.8"* }
%"class.base::flat_map.8" = type opaque
%"struct.ui::PointerDetails" = type { i32, float, float, float, float, float, float, float, i32, %"class.gfx::Vector2d" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::unique_ptr"* }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrIN2ui10TouchEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@switch.table._ZN7content35MakeUITouchEventsFromWebTouchEventsERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEEPNSt3__16vectorINS6_10unique_ptrIN2ui10TouchEventENS6_14default_deleteISA_EEEENS6_9allocatorISD_EEEENS_26TouchEventCoordinateSystemE = private unnamed_addr constant [4 x i32] [i32 12, i32 13, i32 11, i32 14], align 4
@switch.table._ZN7content35MakeUITouchEventsFromWebTouchEventsERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEEPNSt3__16vectorINS6_10unique_ptrIN2ui10TouchEventENS6_14default_deleteISA_EEEENS6_9allocatorISD_EEEENS_26TouchEventCoordinateSystemE.1 = private unnamed_addr constant [5 x i32] [i32 11, i32 12, i32 13, i32 11, i32 14], align 4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content35MakeUITouchEventsFromWebTouchEventsERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEEPNSt3__16vectorINS6_10unique_ptrIN2ui10TouchEventENS6_14default_deleteISA_EEEENS6_9allocatorISD_EEEENS_26TouchEventCoordinateSystemE(%"class.content::EventWithLatencyInfo"* dereferenceable(1336), %"class.std::__1::vector.1"*, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = alloca %"class.gfx::Point", align 4
  %6 = alloca %"struct.ui::PointerDetails", align 4
  %7 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -28
  %10 = icmp ult i32 %9, 4
  br i1 %10, label %11, label %110

11:                                               ; preds = %3
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN7content35MakeUITouchEventsFromWebTouchEventsERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEEPNSt3__16vectorINS6_10unique_ptrIN2ui10TouchEventENS6_14default_deleteISA_EEEENS6_9allocatorISD_EEEENS_26TouchEventCoordinateSystemE, i64 0, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = tail call i32 @_ZN2ui29WebEventModifiersToEventFlagsEi(i32 %16) #9
  %18 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %110, label %23

23:                                               ; preds = %11
  %24 = icmp eq i32 %2, 1
  %25 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.gfx::Point"* %5 to i8*
  %28 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %5, i64 0, i32 1
  %30 = bitcast %"struct.ui::PointerDetails"* %6 to i8*
  %31 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  %32 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  %36 = bitcast %"class.std::__1::unique_ptr"** %33 to i64*
  br label %37

37:                                               ; preds = %23, %105
  %38 = phi i32 [ %21, %23 ], [ %106, %105 ]
  %39 = phi i64 [ 0, %23 ], [ %107, %105 ]
  %40 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 2, i64 %39, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, -1
  %43 = icmp ult i32 %42, 5
  br i1 %43, label %44, label %105

44:                                               ; preds = %37
  %45 = trunc i32 %42 to i8
  %46 = lshr i8 23, %45
  %47 = and i8 %46, 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %105, label %49

49:                                               ; preds = %44
  %50 = sext i32 %42 to i64
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN7content35MakeUITouchEventsFromWebTouchEventsERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEEPNSt3__16vectorINS6_10unique_ptrIN2ui10TouchEventENS6_14default_deleteISA_EEEENS6_9allocatorISD_EEEENS_26TouchEventCoordinateSystemE.1, i64 0, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %14
  br i1 %53, label %54, label %105

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 2, i64 %39, i32 0, i32 11
  %56 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 2, i64 %39, i32 0, i32 12
  %57 = select i1 %24, %"class.gfx::PointF"* %55, %"class.gfx::PointF"* %56
  %58 = bitcast %"class.gfx::PointF"* %57 to <2 x i32>*
  %59 = load <2 x i32>, <2 x i32>* %58, align 4
  %60 = shufflevector <2 x i32> %59, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  store %"class.ui::TouchEvent"* inttoptr (i64 -6148914691236517206 to %"class.ui::TouchEvent"*), %"class.ui::TouchEvent"** %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  store i32 0, i32* %28, align 4
  store i32 0, i32* %29, align 4
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %30) #9
  %61 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 2, i64 %39, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 2, i64 %39, i32 2
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 2, i64 %39, i32 3
  %66 = load float, float* %65, align 4
  %67 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 2, i64 %39, i32 0, i32 1
  %68 = load float, float* %67, align 4
  %69 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 2, i64 %39, i32 4
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 2, i64 %39, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = sitofp i32 %72 to float
  %74 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 2, i64 %39, i32 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = sitofp i32 %75 to float
  %77 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %0, i64 0, i32 0, i32 2, i64 %39, i32 0, i32 4
  %78 = load float, float* %77, align 4
  call void @_ZN2ui14PointerDetailsC1ENS_16EventPointerTypeEifffffff(%"struct.ui::PointerDetails"* nonnull %6, i32 3, i32 %62, float %64, float %66, float %68, float %70, float %73, float %76, float %78) #9
  %79 = call i8* @_Znwm(i64 216) #10
  %80 = bitcast i8* %79 to %"class.ui::TouchEvent"*
  call void @_ZN2ui10TouchEventC1ENS_9EventTypeERKN3gfx5PointEN4base9TimeTicksERKNS_14PointerDetailsEi(%"class.ui::TouchEvent"* nonnull %80, i32 %14, %"class.gfx::Point"* nonnull dereferenceable(8) %5, i64 %19, %"struct.ui::PointerDetails"* nonnull dereferenceable(44) %6, i32 %17) #9
  store i8* %79, i8** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  %81 = getelementptr inbounds i8, i8* %79, i64 144
  %82 = bitcast i8* %81 to <4 x i32>*
  store <4 x i32> %60, <4 x i32>* %82, align 8
  %83 = getelementptr inbounds i8, i8* %79, i64 24
  %84 = bitcast i8* %83 to %"class.ui::LatencyInfo"*
  %85 = call dereferenceable(64) %"class.ui::LatencyInfo"* @_ZN2ui11LatencyInfoaSERKS0_(%"class.ui::LatencyInfo"* %84, %"class.ui::LatencyInfo"* dereferenceable(64) %32) #9
  %86 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %33, align 8
  %87 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %34, align 8
  %88 = icmp ult %"class.std::__1::unique_ptr"* %86, %87
  br i1 %88, label %89, label %94

89:                                               ; preds = %54
  %90 = load i64, i64* %35, align 8
  store %"class.ui::TouchEvent"* null, %"class.ui::TouchEvent"** %26, align 8
  %91 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 1
  %93 = ptrtoint %"class.std::__1::unique_ptr"* %92 to i64
  store i64 %93, i64* %36, align 8
  br label %95

94:                                               ; preds = %54
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2ui10TouchEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.1"* %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #9
  br label %95

95:                                               ; preds = %89, %94
  %96 = load %"class.ui::TouchEvent"*, %"class.ui::TouchEvent"** %26, align 8
  store %"class.ui::TouchEvent"* null, %"class.ui::TouchEvent"** %26, align 8
  %97 = icmp eq %"class.ui::TouchEvent"* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %95
  %99 = bitcast %"class.ui::TouchEvent"* %96 to void (%"class.ui::TouchEvent"*)***
  %100 = load void (%"class.ui::TouchEvent"*)**, void (%"class.ui::TouchEvent"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.ui::TouchEvent"*)*, void (%"class.ui::TouchEvent"*)** %100, i64 1
  %102 = load void (%"class.ui::TouchEvent"*)*, void (%"class.ui::TouchEvent"*)** %101, align 8
  call void %102(%"class.ui::TouchEvent"* nonnull %96) #9
  br label %103

103:                                              ; preds = %95, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  %104 = load i32, i32* %20, align 8
  br label %105

105:                                              ; preds = %44, %37, %49, %103
  %106 = phi i32 [ %38, %37 ], [ %38, %49 ], [ %104, %103 ], [ %38, %44 ]
  %107 = add nuw nsw i64 %39, 1
  %108 = zext i32 %106 to i64
  %109 = icmp ult i64 %107, %108
  br i1 %109, label %37, label %110

110:                                              ; preds = %105, %3, %11
  %111 = phi i1 [ false, %3 ], [ true, %11 ], [ true, %105 ]
  ret i1 %111
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN2ui29WebEventModifiersToEventFlagsEi(i32) local_unnamed_addr #2

declare void @_ZN2ui14PointerDetailsC1ENS_16EventPointerTypeEifffffff(%"struct.ui::PointerDetails"*, i32, i32, float, float, float, float, float, float, float) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN7content37InputEventResultStateIsSetNonBlockingEN5blink5mojom21InputEventResultStateE(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -5
  %3 = icmp ult i32 %2, 2
  ret i1 %3
}

declare dereferenceable(64) %"class.ui::LatencyInfo"* @_ZN2ui11LatencyInfoaSERKS0_(%"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN2ui10TouchEventC1ENS_9EventTypeERKN3gfx5PointEN4base9TimeTicksERKNS_14PointerDetailsEi(%"class.ui::TouchEvent"*, i32, %"class.gfx::Point"* dereferenceable(8), i64, %"struct.ui::PointerDetails"* dereferenceable(44), i32) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN2ui10TouchEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.1"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.ui::TouchEvent"* null, %"class.ui::TouchEvent"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.ui::TouchEvent"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.ui::TouchEvent"* null, %"class.ui::TouchEvent"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !2

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.ui::TouchEvent"* null, %"class.ui::TouchEvent"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.ui::TouchEvent"* null, %"class.ui::TouchEvent"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.ui::TouchEvent"* null, %"class.ui::TouchEvent"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.ui::TouchEvent"* null, %"class.ui::TouchEvent"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.ui::TouchEvent"* null, %"class.ui::TouchEvent"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.ui::TouchEvent"* null, %"class.ui::TouchEvent"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.ui::TouchEvent"* null, %"class.ui::TouchEvent"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.ui::TouchEvent"* null, %"class.ui::TouchEvent"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.ui::TouchEvent"*, %"class.ui::TouchEvent"** %142, align 8
  store %"class.ui::TouchEvent"* null, %"class.ui::TouchEvent"** %142, align 8
  %144 = icmp eq %"class.ui::TouchEvent"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.ui::TouchEvent"* %143 to void (%"class.ui::TouchEvent"*)***
  %147 = load void (%"class.ui::TouchEvent"*)**, void (%"class.ui::TouchEvent"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.ui::TouchEvent"*)*, void (%"class.ui::TouchEvent"*)** %147, i64 1
  %149 = load void (%"class.ui::TouchEvent"*)*, void (%"class.ui::TouchEvent"*)** %148, align 8
  tail call void %149(%"class.ui::TouchEvent"* nonnull %143) #9
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
