; ModuleID = '../../chrome/browser/media_galleries/fileapi/readahead_file_stream_reader.cc'
source_filename = "../../chrome/browser/media_galleries/fileapi/readahead_file_stream_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ReadaheadFileStreamReader = type { %"class.storage::FileStreamReader", %"class.std::__1::unique_ptr", i32, i8, %"class.std::__1::queue", %class.scoped_refptr, %"class.base::OnceCallback", %"class.base::WeakPtrFactory" }
%"class.storage::FileStreamReader" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.storage::FileStreamReader"* }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %class.scoped_refptr*, i64 }
%class.scoped_refptr = type { %"class.net::DrainableIOBuffer"* }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr.2, i32, i32 }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.2 = type { %"class.net::IOBuffer"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.4", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.6", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.6" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::OnceCallback.12" = type { %"class.base::internal::CallbackBase" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4base14circular_dequeI13scoped_refptrIN3net17DrainableIOBufferEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEE13DestructRangeIS5_Li0EEEvPS5_S8_ = comdat any

$_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIP13scoped_refptrIN3net17DrainableIOBufferEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_ = comdat any

$_ZN4base14circular_dequeI13scoped_refptrIN3net17DrainableIOBufferEEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeI13scoped_refptrIN3net17DrainableIOBufferEEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM25ReadaheadFileStreamReaderFvPN3net8IOBufferEiEJNS_7WeakPtrIS3_EENS0_18RetainedRefWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIM25ReadaheadFileStreamReaderFvPN3net8IOBufferEiEJNS_7WeakPtrIS2_EENS0_18RetainedRefWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM25ReadaheadFileStreamReaderFvPN3net8IOBufferEiEJNS_7WeakPtrIS3_EENS0_18RetainedRefWrapperIS5_EEEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE = comdat any

$_ZN4base14circular_dequeI13scoped_refptrIN3net17DrainableIOBufferEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZNK4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm = comdat any

@_ZTV25ReadaheadFileStreamReader = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ReadaheadFileStreamReader*)* @_ZN25ReadaheadFileStreamReaderD2Ev to i8*), i8* bitcast (void (%class.ReadaheadFileStreamReader*)* @_ZN25ReadaheadFileStreamReaderD0Ev to i8*), i8* bitcast (i32 (%class.ReadaheadFileStreamReader*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN25ReadaheadFileStreamReader4ReadEPN3net8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i64 (%class.ReadaheadFileStreamReader*, %"class.base::OnceCallback.12"*)* @_ZN25ReadaheadFileStreamReader9GetLengthEN4base12OnceCallbackIFvlEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN25ReadaheadFileStreamReaderC1EPN7storage16FileStreamReaderE = hidden unnamed_addr alias void (%class.ReadaheadFileStreamReader*, %"class.storage::FileStreamReader"*), void (%class.ReadaheadFileStreamReader*, %"class.storage::FileStreamReader"*)* @_ZN25ReadaheadFileStreamReaderC2EPN7storage16FileStreamReaderE
@_ZN25ReadaheadFileStreamReaderD1Ev = hidden unnamed_addr alias void (%class.ReadaheadFileStreamReader*), void (%class.ReadaheadFileStreamReader*)* @_ZN25ReadaheadFileStreamReaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25ReadaheadFileStreamReaderC2EPN7storage16FileStreamReaderE(%class.ReadaheadFileStreamReader*, %"class.storage::FileStreamReader"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV25ReadaheadFileStreamReader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 1
  %5 = ptrtoint %"class.storage::FileStreamReader"* %1 to i64
  %6 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 3
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4
  %10 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 7, i32 0
  %11 = ptrtoint %class.ReadaheadFileStreamReader* %0 to i64
  %12 = bitcast %"class.std::__1::queue"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 48, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %10, i64 %11) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25ReadaheadFileStreamReaderD2Ev(%class.ReadaheadFileStreamReader*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV25ReadaheadFileStreamReader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #10
  %5 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 5, i32 0
  %6 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %5, align 8
  %7 = icmp eq %"class.net::DrainableIOBuffer"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.net::IOBuffer"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.net::IOBuffer"*)***
  %17 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %17, i64 1
  %19 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %18, align 8
  tail call void %19(%"class.net::IOBuffer"* nonnull %15) #10
  br label %20

20:                                               ; preds = %1, %8, %13
  %21 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %21, i64 0, i32 0
  %23 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4, i32 0, i32 2
  %26 = load i64, i64* %25, align 8
  tail call void @_ZN4base14circular_dequeI13scoped_refptrIN3net17DrainableIOBufferEEE13DestructRangeEmm(%"class.base::circular_deque"* %22, i64 %24, i64 %26) #10
  %27 = bitcast %"class.std::__1::queue"* %21 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @free(i8* %28) #10
  %29 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.storage::FileStreamReader"*, %"class.storage::FileStreamReader"** %29, align 8
  store %"class.storage::FileStreamReader"* null, %"class.storage::FileStreamReader"** %29, align 8
  %31 = icmp eq %"class.storage::FileStreamReader"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %20
  %33 = bitcast %"class.storage::FileStreamReader"* %30 to void (%"class.storage::FileStreamReader"*)***
  %34 = load void (%"class.storage::FileStreamReader"*)**, void (%"class.storage::FileStreamReader"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.storage::FileStreamReader"*)*, void (%"class.storage::FileStreamReader"*)** %34, i64 1
  %36 = load void (%"class.storage::FileStreamReader"*)*, void (%"class.storage::FileStreamReader"*)** %35, align 8
  tail call void %36(%"class.storage::FileStreamReader"* nonnull %30) #10
  br label %37

37:                                               ; preds = %20, %32
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25ReadaheadFileStreamReaderD0Ev(%class.ReadaheadFileStreamReader*) unnamed_addr #0 align 2 {
  tail call void @_ZN25ReadaheadFileStreamReaderD2Ev(%class.ReadaheadFileStreamReader* %0) #10
  %2 = bitcast %class.ReadaheadFileStreamReader* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN25ReadaheadFileStreamReader4ReadEPN3net8IOBufferEiN4base12OnceCallbackIFviEEE(%class.ReadaheadFileStreamReader*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) unnamed_addr #0 align 2 {
  tail call void @_ZN25ReadaheadFileStreamReader22ReadFromSourceIfNeededEv(%class.ReadaheadFileStreamReader* %0)
  %5 = tail call i8* @_Znwm(i64 40) #11
  %6 = bitcast i8* %5 to %"class.net::DrainableIOBuffer"*
  %7 = icmp eq %"class.net::IOBuffer"* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %4, %8
  tail call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %6, %"class.net::IOBuffer"* %1, i32 %2) #10
  %12 = getelementptr inbounds i8, i8* %5, i64 8
  %13 = bitcast i8* %12 to i32*
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  %15 = tail call i32 @_ZN25ReadaheadFileStreamReader32FinishReadFromCacheOrStoredErrorEPN3net17DrainableIOBufferE(%class.ReadaheadFileStreamReader* %0, %"class.net::DrainableIOBuffer"* nonnull %6)
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %41

17:                                               ; preds = %11
  %18 = atomicrmw add i32* %13, i32 1 monotonic
  %19 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 5
  %20 = ptrtoint i8* %5 to i64
  %21 = bitcast %class.scoped_refptr* %19 to i64*
  %22 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %19, i64 0, i32 0
  %23 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %22, align 8
  store i64 %20, i64* %21, align 8
  %24 = icmp eq %"class.net::DrainableIOBuffer"* %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %23, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %37

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.net::IOBuffer"*
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %31 to void (%"class.net::IOBuffer"*)***
  %34 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %34, i64 1
  %36 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %35, align 8
  tail call void %36(%"class.net::IOBuffer"* nonnull %32) #10
  br label %37

37:                                               ; preds = %17, %25, %30
  %38 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 6, i32 0
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %40 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %38, %"class.base::internal::CallbackBase"* dereferenceable(8) %39) #10
  br label %41

41:                                               ; preds = %11, %37
  %42 = atomicrmw sub i32* %13, i32 1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %41
  %45 = bitcast i8* %5 to %"class.net::IOBuffer"*
  %46 = bitcast i8* %5 to void (%"class.net::IOBuffer"*)***
  %47 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %47, i64 1
  %49 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %48, align 8
  tail call void %49(%"class.net::IOBuffer"* nonnull %45) #10
  br label %50

50:                                               ; preds = %41, %44
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25ReadaheadFileStreamReader22ReadFromSourceIfNeededEv(%class.ReadaheadFileStreamReader*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.storage::FileStreamReader"*, %"class.storage::FileStreamReader"** %5, align 8
  %7 = icmp eq %"class.storage::FileStreamReader"* %6, null
  br i1 %7, label %73, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %73

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, %14
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = sub i64 %16, %14
  br label %25

20:                                               ; preds = %12
  %21 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %16, %14
  %24 = add i64 %23, %22
  br label %25

25:                                               ; preds = %18, %20
  %26 = phi i64 [ %19, %18 ], [ %24, %20 ]
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %73, label %28

28:                                               ; preds = %25
  store i8 1, i8* %9, align 4
  %29 = tail call i8* @_Znwm(i64 24) #11
  %30 = bitcast i8* %29 to %"class.net::IOBuffer"*
  tail call void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"* nonnull %30, i64 1048576) #10
  %31 = getelementptr inbounds i8, i8* %29, i64 8
  %32 = bitcast i8* %31 to i32*
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  %34 = load %"class.storage::FileStreamReader"*, %"class.storage::FileStreamReader"** %5, align 8
  %35 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #10
  %36 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10, !noalias !3
  %37 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 7, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %37) #10, !noalias !3
  %38 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 7, i32 0, i32 1
  %39 = load i64, i64* %38, align 8, !noalias !3
  %40 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %40, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %39) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10, !noalias !3
  %41 = atomicrmw add i32* %32, i32 1 monotonic
  %42 = ptrtoint i8* %29 to i64
  %43 = call i8* @_Znwm(i64 72) #11, !noalias !6
  %44 = bitcast i8* %43 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %44, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIM25ReadaheadFileStreamReaderFvPN3net8IOBufferEiEJNS_7WeakPtrIS3_EENS0_18RetainedRefWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM25ReadaheadFileStreamReaderFvPN3net8IOBufferEiEJNS_7WeakPtrIS2_EENS0_18RetainedRefWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM25ReadaheadFileStreamReaderFvPN3net8IOBufferEiEJNS_7WeakPtrIS3_EENS0_18RetainedRefWrapperIS5_EEEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE) #10, !noalias !6
  %45 = getelementptr inbounds i8, i8* %43, i64 32
  %46 = bitcast i8* %45 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.ReadaheadFileStreamReader*, %"class.net::IOBuffer"*, i32)* @_ZN25ReadaheadFileStreamReader22OnFinishReadFromSourceEPN3net8IOBufferEi to i64), i64 0>, <2 x i64>* %46, align 8, !noalias !6
  %47 = getelementptr inbounds i8, i8* %43, i64 48
  %48 = bitcast i8* %47 to %"class.base::internal::WeakReference"*
  %49 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %48, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %49) #10, !noalias !6
  %50 = getelementptr inbounds i8, i8* %43, i64 56
  %51 = bitcast i8* %50 to i64*
  %52 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8, !noalias !6
  store i64 %53, i64* %51, align 8, !noalias !6
  %54 = getelementptr inbounds i8, i8* %43, i64 64
  %55 = bitcast i8* %54 to i64*
  store i64 %42, i64* %55, align 8, !noalias !6
  %56 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %43, i8** %56, align 8, !alias.scope !6
  %57 = bitcast %"class.storage::FileStreamReader"* %34 to i32 (%"class.storage::FileStreamReader"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %58 = load i32 (%"class.storage::FileStreamReader"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.storage::FileStreamReader"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.storage::FileStreamReader"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.storage::FileStreamReader"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %58, i64 2
  %60 = load i32 (%"class.storage::FileStreamReader"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.storage::FileStreamReader"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %59, align 8
  %61 = call i32 %60(%"class.storage::FileStreamReader"* %34, %"class.net::IOBuffer"* nonnull %30, i32 1048576, %"class.base::OnceCallback"* nonnull %3) #10
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #10
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #10
  %63 = icmp eq i32 %61, -1
  br i1 %63, label %65, label %64

64:                                               ; preds = %28
  call void @_ZN25ReadaheadFileStreamReader22OnFinishReadFromSourceEPN3net8IOBufferEi(%class.ReadaheadFileStreamReader* %0, %"class.net::IOBuffer"* nonnull %30, i32 %61)
  br label %65

65:                                               ; preds = %64, %28
  %66 = atomicrmw sub i32* %32, i32 1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %73

68:                                               ; preds = %65
  %69 = bitcast i8* %29 to void (%"class.net::IOBuffer"*)***
  %70 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %70, i64 1
  %72 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %71, align 8
  call void %72(%"class.net::IOBuffer"* nonnull %30) #10
  br label %73

73:                                               ; preds = %68, %65, %8, %1, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN25ReadaheadFileStreamReader32FinishReadFromCacheOrStoredErrorEPN3net17DrainableIOBufferE(%class.ReadaheadFileStreamReader*, %"class.net::DrainableIOBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4
  %4 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %1) #10
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %59

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %1, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0
  %16 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  br label %24

17:                                               ; preds = %2
  %18 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.storage::FileStreamReader"*, %"class.storage::FileStreamReader"** %18, align 8
  %20 = icmp eq %"class.storage::FileStreamReader"* %19, null
  br i1 %20, label %21, label %61

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  br label %61

24:                                               ; preds = %12, %56
  %25 = load i64, i64* %4, align 8
  %26 = load i64, i64* %6, align 8
  %27 = icmp eq i64 %25, %26
  br i1 %27, label %59, label %28

28:                                               ; preds = %24
  %29 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %13, i64 %25) #10
  %30 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %29, i64 0, i32 0
  %31 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %30, align 8
  %32 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %31) #10
  %33 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %1) #10
  %34 = icmp slt i32 %33, %32
  %35 = select i1 %34, i32 %33, i32 %32
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %28
  %38 = sext i32 %35 to i64
  %39 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %31, i64 0, i32 0, i32 2
  %40 = load i8*, i8** %39, align 8
  %41 = load i8*, i8** %14, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %40, i64 %38, i1 false) #10
  br label %42

42:                                               ; preds = %28, %37
  tail call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %31, i32 %35) #10
  tail call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %1, i32 %35) #10
  %43 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %31) #10
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %56

45:                                               ; preds = %42
  %46 = load i64, i64* %4, align 8
  %47 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %13, i64 %46) #10
  %48 = load i64, i64* %4, align 8
  %49 = add i64 %48, 1
  %50 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %13, i64 %49) #10
  tail call void @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"* %13, %class.scoped_refptr* %47, %class.scoped_refptr* %50) #10
  %51 = load i64, i64* %4, align 8
  %52 = add i64 %51, 1
  %53 = load i64, i64* %16, align 8
  %54 = icmp eq i64 %52, %53
  %55 = select i1 %54, i64 0, i64 %52
  store i64 %55, i64* %4, align 8
  tail call void @_ZN4base14circular_dequeI13scoped_refptrIN3net17DrainableIOBufferEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %15) #10
  tail call void @_ZN25ReadaheadFileStreamReader22ReadFromSourceIfNeededEv(%class.ReadaheadFileStreamReader* %0)
  br label %56

56:                                               ; preds = %45, %42
  %57 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %1) #10
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %24, label %59

59:                                               ; preds = %56, %24, %9
  %60 = tail call i32 @_ZNK3net17DrainableIOBuffer13BytesConsumedEv(%"class.net::DrainableIOBuffer"* %1) #10
  br label %61

61:                                               ; preds = %17, %59, %21
  %62 = phi i32 [ %23, %21 ], [ %60, %59 ], [ -1, %17 ]
  ret i32 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN25ReadaheadFileStreamReader9GetLengthEN4base12OnceCallbackIFvlEEE(%class.ReadaheadFileStreamReader* nocapture readonly, %"class.base::OnceCallback.12"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.12", align 8
  %4 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.storage::FileStreamReader"*, %"class.storage::FileStreamReader"** %4, align 8
  %6 = getelementptr inbounds %"class.base::OnceCallback.12", %"class.base::OnceCallback.12"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback.12"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback.12"* %3 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = bitcast %"class.storage::FileStreamReader"* %5 to i64 (%"class.storage::FileStreamReader"*, %"class.base::OnceCallback.12"*)***
  %11 = load i64 (%"class.storage::FileStreamReader"*, %"class.base::OnceCallback.12"*)**, i64 (%"class.storage::FileStreamReader"*, %"class.base::OnceCallback.12"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.storage::FileStreamReader"*, %"class.base::OnceCallback.12"*)*, i64 (%"class.storage::FileStreamReader"*, %"class.base::OnceCallback.12"*)** %11, i64 3
  %13 = load i64 (%"class.storage::FileStreamReader"*, %"class.base::OnceCallback.12"*)*, i64 (%"class.storage::FileStreamReader"*, %"class.base::OnceCallback.12"*)** %12, align 8
  %14 = call i64 %13(%"class.storage::FileStreamReader"* %5, %"class.base::OnceCallback.12"* nonnull %3) #10
  %15 = getelementptr inbounds %"class.base::OnceCallback.12", %"class.base::OnceCallback.12"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #10
  ret i64 %14
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

declare i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"*) local_unnamed_addr #4

declare void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"*, i32) local_unnamed_addr #4

declare i32 @_ZNK3net17DrainableIOBuffer13BytesConsumedEv(%"class.net::DrainableIOBuffer"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25ReadaheadFileStreamReader22OnFinishReadFromSourceEPN3net8IOBufferEi(%class.ReadaheadFileStreamReader*, %"class.net::IOBuffer"*, i32) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 3
  store i8 0, i8* %5, align 4
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %47

7:                                                ; preds = %3
  %8 = tail call i8* @_Znwm(i64 40) #11
  %9 = bitcast i8* %8 to %"class.net::DrainableIOBuffer"*
  %10 = icmp eq %"class.net::IOBuffer"* %1, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  br label %14

14:                                               ; preds = %7, %11
  tail call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %9, %"class.net::IOBuffer"* %1, i32 %2) #10
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to i32*
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  %18 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4
  %19 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %18, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeI13scoped_refptrIN3net17DrainableIOBufferEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %19, i64 1) #10
  %20 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %18, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %20, i64 %22) #10
  %24 = bitcast %class.scoped_refptr* %23 to i8**
  store i8* %8, i8** %24, align 8
  %25 = atomicrmw add i32* %16, i32 1 monotonic
  %26 = load i64, i64* %21, align 8
  %27 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  %30 = icmp eq i64 %26, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %14
  store i64 0, i64* %21, align 8
  br label %35

32:                                               ; preds = %14
  %33 = add i64 %26, 1
  store i64 %33, i64* %21, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32, %31
  br label %36

36:                                               ; preds = %35, %32
  %37 = phi i64 [ %29, %35 ], [ %26, %32 ]
  %38 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %20, i64 %37) #10
  tail call void @_ZN25ReadaheadFileStreamReader22ReadFromSourceIfNeededEv(%class.ReadaheadFileStreamReader* %0)
  %39 = atomicrmw sub i32* %16, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %58

41:                                               ; preds = %36
  %42 = bitcast i8* %8 to %"class.net::IOBuffer"*
  %43 = bitcast i8* %8 to void (%"class.net::IOBuffer"*)***
  %44 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %44, i64 1
  %46 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %45, align 8
  tail call void %46(%"class.net::IOBuffer"* nonnull %42) #10
  br label %58

47:                                               ; preds = %3
  %48 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.storage::FileStreamReader"*, %"class.storage::FileStreamReader"** %48, align 8
  store %"class.storage::FileStreamReader"* null, %"class.storage::FileStreamReader"** %48, align 8
  %50 = icmp eq %"class.storage::FileStreamReader"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.storage::FileStreamReader"* %49 to void (%"class.storage::FileStreamReader"*)***
  %53 = load void (%"class.storage::FileStreamReader"*)**, void (%"class.storage::FileStreamReader"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.storage::FileStreamReader"*)*, void (%"class.storage::FileStreamReader"*)** %53, i64 1
  %55 = load void (%"class.storage::FileStreamReader"*)*, void (%"class.storage::FileStreamReader"*)** %54, align 8
  tail call void %55(%"class.storage::FileStreamReader"* nonnull %49) #10
  br label %56

56:                                               ; preds = %47, %51
  %57 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 2
  store i32 %2, i32* %57, align 8
  br label %58

58:                                               ; preds = %41, %36, %56
  %59 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 5
  %60 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %59, i64 0, i32 0
  %61 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %60, align 8
  %62 = icmp eq %"class.net::DrainableIOBuffer"* %61, null
  br i1 %62, label %105, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %61, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 1 monotonic
  %66 = bitcast %class.scoped_refptr* %59 to i64*
  %67 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %60, align 8
  store i64 0, i64* %66, align 8
  %68 = icmp eq %"class.net::DrainableIOBuffer"* %67, null
  br i1 %68, label %81, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %67, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw sub i32* %71, i32 1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %81

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %70, i64 -2
  %76 = bitcast %"class.base::RefCountedThreadSafe"* %75 to %"class.net::IOBuffer"*
  %77 = bitcast %"class.base::RefCountedThreadSafe"* %75 to void (%"class.net::IOBuffer"*)***
  %78 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %78, i64 1
  %80 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %79, align 8
  tail call void %80(%"class.net::IOBuffer"* nonnull %76) #10
  br label %81

81:                                               ; preds = %74, %69, %63
  %82 = getelementptr inbounds %class.ReadaheadFileStreamReader, %class.ReadaheadFileStreamReader* %0, i64 0, i32 6
  %83 = tail call i32 @_ZN25ReadaheadFileStreamReader32FinishReadFromCacheOrStoredErrorEPN3net17DrainableIOBufferE(%class.ReadaheadFileStreamReader* %0, %"class.net::DrainableIOBuffer"* nonnull %61)
  %84 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #10
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %82, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.base::OnceCallback"* %82 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %87, i64* %88, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %85, align 8
  %89 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %90 = inttoptr i64 %87 to %"class.base::internal::BindStateBase"*
  %91 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %90, i64 0, i32 1
  %92 = bitcast void ()** %91 to void (%"class.base::internal::BindStateBase"*, i32)**
  %93 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %92, align 8
  tail call void %93(%"class.base::internal::BindStateBase"* %90, i32 %83) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %89) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #10
  %94 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %61, i64 0, i32 0, i32 1
  %95 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw sub i32* %95, i32 1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %105

98:                                               ; preds = %81
  %99 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %94, i64 -2
  %100 = bitcast %"class.base::RefCountedThreadSafe"* %99 to %"class.net::IOBuffer"*
  %101 = bitcast %"class.base::RefCountedThreadSafe"* %99 to void (%"class.net::IOBuffer"*)***
  %102 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %102, i64 1
  %104 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %103, align 8
  call void %104(%"class.net::IOBuffer"* nonnull %100) #10
  br label %105

105:                                              ; preds = %98, %81, %58
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeI13scoped_refptrIN3net17DrainableIOBufferEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"* %7, %class.scoped_refptr* %8, %class.scoped_refptr* %12)
  %13 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %class.scoped_refptr* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"* %7, %class.scoped_refptr* %15, %class.scoped_refptr* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"*, %class.scoped_refptr*, %class.scoped_refptr*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %class.scoped_refptr*, align 8
  %6 = alloca %class.scoped_refptr*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %class.scoped_refptr* %1, %class.scoped_refptr** %5, align 8
  store %class.scoped_refptr* %2, %class.scoped_refptr** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %class.scoped_refptr* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %class.scoped_refptr** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIP13scoped_refptrIN3net17DrainableIOBufferEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #10
  %17 = bitcast %class.scoped_refptr** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIP13scoped_refptrIN3net17DrainableIOBufferEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %26 = load %class.scoped_refptr*, %class.scoped_refptr** %5, align 8
  %27 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %28 = icmp eq %class.scoped_refptr* %26, %27
  br i1 %28, label %51, label %29

29:                                               ; preds = %25, %46
  %30 = phi %class.scoped_refptr* [ %48, %46 ], [ %26, %25 ]
  %31 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %30, i64 0, i32 0
  %32 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %31, align 8
  %33 = icmp eq %"class.net::DrainableIOBuffer"* %32, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %32, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %35, i64 -2
  %41 = bitcast %"class.base::RefCountedThreadSafe"* %40 to %"class.net::IOBuffer"*
  %42 = bitcast %"class.base::RefCountedThreadSafe"* %40 to void (%"class.net::IOBuffer"*)***
  %43 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %43, i64 1
  %45 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %44, align 8
  call void %45(%"class.net::IOBuffer"* nonnull %41) #10
  br label %46

46:                                               ; preds = %29, %34, %39
  %47 = load %class.scoped_refptr*, %class.scoped_refptr** %5, align 8
  %48 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %47, i64 1
  store %class.scoped_refptr* %48, %class.scoped_refptr** %5, align 8
  %49 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %50 = icmp eq %class.scoped_refptr* %48, %49
  br i1 %50, label %51, label %29

51:                                               ; preds = %46, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %1
  ret %class.scoped_refptr* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIP13scoped_refptrIN3net17DrainableIOBufferEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"*, %"class.net::IOBuffer"*, i32) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeI13scoped_refptrIN3net17DrainableIOBufferEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #10
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #10
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #10
  br i1 %31, label %32, label %33, !prof !11

32:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #10
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeI13scoped_refptrIN3net17DrainableIOBufferEEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #10
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #10
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #10
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeI13scoped_refptrIN3net17DrainableIOBufferEEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %116

13:                                               ; preds = %6
  %14 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = ptrtoint %class.scoped_refptr* %14 to i64
  %16 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %17 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %18 = load %class.scoped_refptr*, %class.scoped_refptr** %17, align 8
  %19 = icmp ult %class.scoped_refptr* %18, %16
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %class.scoped_refptr* %18 to i64
  %22 = ptrtoint %class.scoped_refptr* %16 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %15) #10
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #10
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !11

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %15
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #10
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %class.scoped_refptr* %14, %16
  br i1 %37, label %114, label %38

38:                                               ; preds = %36
  %39 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %16, i64 -1, i32 0
  %40 = ptrtoint %"class.net::DrainableIOBuffer"** %39 to i64
  %41 = sub i64 %40, %15
  %42 = lshr i64 %41, 3
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 7
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %38, %46
  %47 = phi %class.scoped_refptr* [ %55, %46 ], [ %18, %38 ]
  %48 = phi %class.scoped_refptr* [ %54, %46 ], [ %14, %38 ]
  %49 = phi i64 [ %56, %46 ], [ %44, %38 ]
  %50 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %48, i64 0, i32 0
  %51 = bitcast %class.scoped_refptr* %48 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %class.scoped_refptr* %47 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %50, align 8
  %54 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %48, i64 1
  %55 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %47, i64 1
  %56 = add i64 %49, -1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %46, !llvm.loop !12

58:                                               ; preds = %46, %38
  %59 = phi %class.scoped_refptr* [ %18, %38 ], [ %55, %46 ]
  %60 = phi %class.scoped_refptr* [ %14, %38 ], [ %54, %46 ]
  %61 = icmp ult i64 %41, 56
  br i1 %61, label %114, label %62

62:                                               ; preds = %58, %62
  %63 = phi %class.scoped_refptr* [ %112, %62 ], [ %59, %58 ]
  %64 = phi %class.scoped_refptr* [ %111, %62 ], [ %60, %58 ]
  %65 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 0, i32 0
  %66 = bitcast %class.scoped_refptr* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %class.scoped_refptr* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %65, align 8
  %69 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 1
  %70 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 1
  %71 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %69, i64 0, i32 0
  %72 = bitcast %class.scoped_refptr* %69 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %class.scoped_refptr* %70 to i64*
  store i64 %73, i64* %74, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %71, align 8
  %75 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 2
  %76 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 2
  %77 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %75, i64 0, i32 0
  %78 = bitcast %class.scoped_refptr* %75 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %class.scoped_refptr* %76 to i64*
  store i64 %79, i64* %80, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %77, align 8
  %81 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 3
  %82 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 3
  %83 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 0, i32 0
  %84 = bitcast %class.scoped_refptr* %81 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %class.scoped_refptr* %82 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %83, align 8
  %87 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 4
  %88 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 4
  %89 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %87, i64 0, i32 0
  %90 = bitcast %class.scoped_refptr* %87 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %class.scoped_refptr* %88 to i64*
  store i64 %91, i64* %92, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %89, align 8
  %93 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 5
  %94 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 5
  %95 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %93, i64 0, i32 0
  %96 = bitcast %class.scoped_refptr* %93 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %class.scoped_refptr* %94 to i64*
  store i64 %97, i64* %98, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %95, align 8
  %99 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 6
  %100 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 6
  %101 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %99, i64 0, i32 0
  %102 = bitcast %class.scoped_refptr* %99 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %class.scoped_refptr* %100 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %101, align 8
  %105 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 7
  %106 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 7
  %107 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %105, i64 0, i32 0
  %108 = bitcast %class.scoped_refptr* %105 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %class.scoped_refptr* %106 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %107, align 8
  %111 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 8
  %112 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 8
  %113 = icmp eq %class.scoped_refptr* %111, %16
  br i1 %113, label %114, label %62

114:                                              ; preds = %58, %62, %36
  %115 = sub i64 %2, %1
  br label %322

116:                                              ; preds = %6
  %117 = icmp ult i64 %2, %1
  br i1 %117, label %118, label %322

118:                                              ; preds = %116
  %119 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %120 = ptrtoint %class.scoped_refptr* %119 to i64
  %121 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %122 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %123 = load %class.scoped_refptr*, %class.scoped_refptr** %122, align 8
  %124 = icmp ult %class.scoped_refptr* %123, %121
  br i1 %124, label %125, label %141

125:                                              ; preds = %118
  %126 = ptrtoint %class.scoped_refptr* %123 to i64
  %127 = ptrtoint %class.scoped_refptr* %121 to i64
  %128 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %127, i64 %120) #10
  %129 = extractvalue { i64, i1 } %128, 1
  %130 = extractvalue { i64, i1 } %128, 0
  %131 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %126, i64 %130) #10
  %132 = extractvalue { i64, i1 } %131, 1
  %133 = or i1 %129, %132
  br i1 %133, label %134, label %135, !prof !11

134:                                              ; preds = %125
  tail call void @llvm.trap() #10
  unreachable

135:                                              ; preds = %125
  %136 = extractvalue { i64, i1 } %131, 0
  %137 = icmp ugt i64 %136, %120
  br i1 %137, label %138, label %141

138:                                              ; preds = %135
  %139 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #10
  %140 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #10
  br label %141

141:                                              ; preds = %138, %135, %118
  %142 = icmp eq %class.scoped_refptr* %119, %121
  br i1 %142, label %219, label %143

143:                                              ; preds = %141
  %144 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %121, i64 -1, i32 0
  %145 = ptrtoint %"class.net::DrainableIOBuffer"** %144 to i64
  %146 = sub i64 %145, %120
  %147 = lshr i64 %146, 3
  %148 = add nuw nsw i64 %147, 1
  %149 = and i64 %148, 7
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %163, label %151

151:                                              ; preds = %143, %151
  %152 = phi %class.scoped_refptr* [ %160, %151 ], [ %123, %143 ]
  %153 = phi %class.scoped_refptr* [ %159, %151 ], [ %119, %143 ]
  %154 = phi i64 [ %161, %151 ], [ %149, %143 ]
  %155 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %153, i64 0, i32 0
  %156 = bitcast %class.scoped_refptr* %153 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %class.scoped_refptr* %152 to i64*
  store i64 %157, i64* %158, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %155, align 8
  %159 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %153, i64 1
  %160 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %152, i64 1
  %161 = add i64 %154, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %151, !llvm.loop !14

163:                                              ; preds = %151, %143
  %164 = phi %class.scoped_refptr* [ %123, %143 ], [ %160, %151 ]
  %165 = phi %class.scoped_refptr* [ %119, %143 ], [ %159, %151 ]
  %166 = icmp ult i64 %146, 56
  br i1 %166, label %219, label %167

167:                                              ; preds = %163, %167
  %168 = phi %class.scoped_refptr* [ %217, %167 ], [ %164, %163 ]
  %169 = phi %class.scoped_refptr* [ %216, %167 ], [ %165, %163 ]
  %170 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 0, i32 0
  %171 = bitcast %class.scoped_refptr* %169 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %class.scoped_refptr* %168 to i64*
  store i64 %172, i64* %173, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %170, align 8
  %174 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 1
  %175 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 1
  %176 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %174, i64 0, i32 0
  %177 = bitcast %class.scoped_refptr* %174 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %class.scoped_refptr* %175 to i64*
  store i64 %178, i64* %179, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %176, align 8
  %180 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 2
  %181 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 2
  %182 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %180, i64 0, i32 0
  %183 = bitcast %class.scoped_refptr* %180 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = bitcast %class.scoped_refptr* %181 to i64*
  store i64 %184, i64* %185, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %182, align 8
  %186 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 3
  %187 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 3
  %188 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %186, i64 0, i32 0
  %189 = bitcast %class.scoped_refptr* %186 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %class.scoped_refptr* %187 to i64*
  store i64 %190, i64* %191, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %188, align 8
  %192 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 4
  %193 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 4
  %194 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %192, i64 0, i32 0
  %195 = bitcast %class.scoped_refptr* %192 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %class.scoped_refptr* %193 to i64*
  store i64 %196, i64* %197, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %194, align 8
  %198 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 5
  %199 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 5
  %200 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %198, i64 0, i32 0
  %201 = bitcast %class.scoped_refptr* %198 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %class.scoped_refptr* %199 to i64*
  store i64 %202, i64* %203, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %200, align 8
  %204 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 6
  %205 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 6
  %206 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %204, i64 0, i32 0
  %207 = bitcast %class.scoped_refptr* %204 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = bitcast %class.scoped_refptr* %205 to i64*
  store i64 %208, i64* %209, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %206, align 8
  %210 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 7
  %211 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 7
  %212 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %210, i64 0, i32 0
  %213 = bitcast %class.scoped_refptr* %210 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = bitcast %class.scoped_refptr* %211 to i64*
  store i64 %214, i64* %215, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %212, align 8
  %216 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 8
  %217 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 8
  %218 = icmp eq %class.scoped_refptr* %216, %121
  br i1 %218, label %219, label %167

219:                                              ; preds = %163, %167, %141
  %220 = sub i64 %11, %1
  %221 = call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %222 = ptrtoint %class.scoped_refptr* %221 to i64
  %223 = call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %224 = call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %220)
  %225 = icmp ult %class.scoped_refptr* %224, %223
  br i1 %225, label %226, label %242

226:                                              ; preds = %219
  %227 = ptrtoint %class.scoped_refptr* %224 to i64
  %228 = ptrtoint %class.scoped_refptr* %223 to i64
  %229 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %228, i64 %222) #10
  %230 = extractvalue { i64, i1 } %229, 1
  %231 = extractvalue { i64, i1 } %229, 0
  %232 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %227, i64 %231) #10
  %233 = extractvalue { i64, i1 } %232, 1
  %234 = or i1 %230, %233
  br i1 %234, label %235, label %236, !prof !11

235:                                              ; preds = %226
  call void @llvm.trap() #10
  unreachable

236:                                              ; preds = %226
  %237 = extractvalue { i64, i1 } %232, 0
  %238 = icmp ugt i64 %237, %222
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #10
  %241 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240) #10
  br label %242

242:                                              ; preds = %239, %236, %219
  %243 = icmp eq %class.scoped_refptr* %221, %223
  br i1 %243, label %320, label %244

244:                                              ; preds = %242
  %245 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %223, i64 -1, i32 0
  %246 = ptrtoint %"class.net::DrainableIOBuffer"** %245 to i64
  %247 = sub i64 %246, %222
  %248 = lshr i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 7
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %264, label %252

252:                                              ; preds = %244, %252
  %253 = phi %class.scoped_refptr* [ %261, %252 ], [ %224, %244 ]
  %254 = phi %class.scoped_refptr* [ %260, %252 ], [ %221, %244 ]
  %255 = phi i64 [ %262, %252 ], [ %250, %244 ]
  %256 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %254, i64 0, i32 0
  %257 = bitcast %class.scoped_refptr* %254 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %class.scoped_refptr* %253 to i64*
  store i64 %258, i64* %259, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %256, align 8
  %260 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %254, i64 1
  %261 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %253, i64 1
  %262 = add i64 %255, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %252, !llvm.loop !15

264:                                              ; preds = %252, %244
  %265 = phi %class.scoped_refptr* [ %224, %244 ], [ %261, %252 ]
  %266 = phi %class.scoped_refptr* [ %221, %244 ], [ %260, %252 ]
  %267 = icmp ult i64 %247, 56
  br i1 %267, label %320, label %268

268:                                              ; preds = %264, %268
  %269 = phi %class.scoped_refptr* [ %318, %268 ], [ %265, %264 ]
  %270 = phi %class.scoped_refptr* [ %317, %268 ], [ %266, %264 ]
  %271 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 0, i32 0
  %272 = bitcast %class.scoped_refptr* %270 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %class.scoped_refptr* %269 to i64*
  store i64 %273, i64* %274, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %271, align 8
  %275 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 1
  %276 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 1
  %277 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %275, i64 0, i32 0
  %278 = bitcast %class.scoped_refptr* %275 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = bitcast %class.scoped_refptr* %276 to i64*
  store i64 %279, i64* %280, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %277, align 8
  %281 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 2
  %282 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 2
  %283 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %281, i64 0, i32 0
  %284 = bitcast %class.scoped_refptr* %281 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %class.scoped_refptr* %282 to i64*
  store i64 %285, i64* %286, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %283, align 8
  %287 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 3
  %288 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 3
  %289 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %287, i64 0, i32 0
  %290 = bitcast %class.scoped_refptr* %287 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = bitcast %class.scoped_refptr* %288 to i64*
  store i64 %291, i64* %292, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %289, align 8
  %293 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 4
  %294 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 4
  %295 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %293, i64 0, i32 0
  %296 = bitcast %class.scoped_refptr* %293 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = bitcast %class.scoped_refptr* %294 to i64*
  store i64 %297, i64* %298, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %295, align 8
  %299 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 5
  %300 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 5
  %301 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %299, i64 0, i32 0
  %302 = bitcast %class.scoped_refptr* %299 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = bitcast %class.scoped_refptr* %300 to i64*
  store i64 %303, i64* %304, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %301, align 8
  %305 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 6
  %306 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 6
  %307 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %305, i64 0, i32 0
  %308 = bitcast %class.scoped_refptr* %305 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %class.scoped_refptr* %306 to i64*
  store i64 %309, i64* %310, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %307, align 8
  %311 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 7
  %312 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 7
  %313 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %311, i64 0, i32 0
  %314 = bitcast %class.scoped_refptr* %311 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %class.scoped_refptr* %312 to i64*
  store i64 %315, i64* %316, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %313, align 8
  %317 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 8
  %318 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 8
  %319 = icmp eq %class.scoped_refptr* %317, %223
  br i1 %319, label %320, label %268

320:                                              ; preds = %264, %268, %242
  %321 = add i64 %220, %2
  br label %322

322:                                              ; preds = %116, %320, %114
  %323 = phi i64 [ %321, %320 ], [ %115, %114 ], [ 0, %116 ]
  store i64 %323, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #9

declare void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"*, i64) unnamed_addr #4

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM25ReadaheadFileStreamReaderFvPN3net8IOBufferEiEJNS_7WeakPtrIS3_EENS0_18RetainedRefWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.net::IOBuffer"**
  %8 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #10
  br i1 %10, label %11, label %46

11:                                               ; preds = %2
  %12 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to %class.ReadaheadFileStreamReader**
  %14 = load %class.ReadaheadFileStreamReader*, %class.ReadaheadFileStreamReader** %13, align 8
  %15 = icmp eq %class.ReadaheadFileStreamReader* %14, null
  br i1 %15, label %46, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %20 = bitcast void ()** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #10
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #10
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %26

26:                                               ; preds = %23, %16
  %27 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #10
  %28 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = select i1 %27, i8* %29, i8* null
  %31 = getelementptr inbounds i8, i8* %30, i64 %21
  %32 = bitcast i8* %31 to %class.ReadaheadFileStreamReader*
  %33 = and i64 %18, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %26
  %36 = bitcast i8* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = add i64 %18, -1
  %39 = getelementptr i8, i8* %37, i64 %38
  %40 = bitcast i8* %39 to void (%class.ReadaheadFileStreamReader*, %"class.net::IOBuffer"*, i32)**
  %41 = load void (%class.ReadaheadFileStreamReader*, %"class.net::IOBuffer"*, i32)*, void (%class.ReadaheadFileStreamReader*, %"class.net::IOBuffer"*, i32)** %40, align 8
  br label %44

42:                                               ; preds = %26
  %43 = inttoptr i64 %18 to void (%class.ReadaheadFileStreamReader*, %"class.net::IOBuffer"*, i32)*
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi void (%class.ReadaheadFileStreamReader*, %"class.net::IOBuffer"*, i32)* [ %41, %35 ], [ %43, %42 ]
  call void %45(%class.ReadaheadFileStreamReader* %32, %"class.net::IOBuffer"* %8, i32 %1) #10
  br label %46

46:                                               ; preds = %2, %11, %44
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM25ReadaheadFileStreamReaderFvPN3net8IOBufferEiEJNS_7WeakPtrIS2_EENS0_18RetainedRefWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.net::IOBuffer"**
  %6 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %5, align 8
  %7 = icmp eq %"class.net::IOBuffer"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.net::IOBuffer"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.net::IOBuffer"*)***
  %17 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %17, i64 1
  %19 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %18, align 8
  tail call void %19(%"class.net::IOBuffer"* nonnull %15) #10
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %22 = bitcast void (%"class.base::internal::BindStateBase"*)** %21 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %22) #10
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %20, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM25ReadaheadFileStreamReaderFvPN3net8IOBufferEiEJNS_7WeakPtrIS3_EENS0_18RetainedRefWrapperIS5_EEEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %class.ReadaheadFileStreamReader**
  %9 = load %class.ReadaheadFileStreamReader*, %class.ReadaheadFileStreamReader** %8, align 8
  %10 = icmp ne %class.ReadaheadFileStreamReader* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #4

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeI13scoped_refptrIN3net17DrainableIOBufferEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #10
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #10
  br i1 %37, label %38, label %39, !prof !11

38:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #10
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeI13scoped_refptrIN3net17DrainableIOBufferEEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #10
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #10
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr* @_ZNK4base8internal12VectorBufferI13scoped_refptrIN3net17DrainableIOBufferEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %1
  ret %class.scoped_refptr* %25
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryI25ReadaheadFileStreamReaderE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryI25ReadaheadFileStreamReaderE10GetWeakPtrEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM25ReadaheadFileStreamReaderFvPN3net8IOBufferEiEJNS_7WeakPtrIS3_EENS0_18RetainedRefWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM25ReadaheadFileStreamReaderFvPN3net8IOBufferEiEJNS_7WeakPtrIS3_EENS0_18RetainedRefWrapperIS5_EEEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIM25ReadaheadFileStreamReaderFvPN3net8IOBufferEiEJNS_7WeakPtrIS1_EENS_8internal18RetainedRefWrapperIS3_EEEEENS_12OnceCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIM25ReadaheadFileStreamReaderFvPN3net8IOBufferEiEJNS_7WeakPtrIS1_EENS_8internal18RetainedRefWrapperIS3_EEEEENS_12OnceCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!11 = !{!"branch_weights", i32 1, i32 2000}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !13}
