; ModuleID = '../../third_party/blink/renderer/modules/encryptedmedia/media_key_system_access.cc'
source_filename = "../../third_party/blink/renderer/modules/encryptedmedia/media_key_system_access.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.38", i32, [4 x i8], %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.176", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.192", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.210", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.217", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.156", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.74" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__cxx_atomic_impl.77" }
%"struct.std::__1::__cxx_atomic_impl.77" = type { %"struct.std::__1::__cxx_atomic_base_impl.78" }
%"struct.std::__1::__cxx_atomic_base_impl.78" = type { i64 }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.74" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.74" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.74" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.74" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.74" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.74" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.74" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.134", %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.150", [4 x i8] }>
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136", %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { i64 }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { float }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.159", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.168" }
%"class.WTF::Vector.168" = type { %"class.WTF::VectorBuffer.169" }
%"class.WTF::VectorBuffer.169" = type { %"class.WTF::VectorBufferBase.170" }
%"class.WTF::VectorBufferBase.170" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.184" }
%"class.WTF::VectorBuffer.184" = type { %"class.WTF::VectorBufferBase.185" }
%"class.WTF::VectorBufferBase.185" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.198" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.85"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.92"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.99"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.225", i64 }
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.227" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.216 }
%class.scoped_refptr.216 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.217" = type { %"struct.std::__1::__atomic_base.218" }
%"struct.std::__1::__atomic_base.218" = type { %"struct.std::__1::__cxx_atomic_impl.219" }
%"struct.std::__1::__cxx_atomic_impl.219" = type { %"struct.std::__1::__cxx_atomic_base_impl.220" }
%"struct.std::__1::__cxx_atomic_base_impl.220" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.386" }
%"struct.std::__1::atomic.386" = type { %"struct.std::__1::__atomic_base.387" }
%"struct.std::__1::__atomic_base.387" = type { %"struct.std::__1::__atomic_base.388" }
%"struct.std::__1::__atomic_base.388" = type { %"struct.std::__1::__cxx_atomic_impl.389" }
%"struct.std::__1::__cxx_atomic_impl.389" = type { %"struct.std::__1::__cxx_atomic_base_impl.390" }
%"struct.std::__1::__cxx_atomic_base_impl.390" = type { i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::MediaKeySystemAccess" = type { %"class.blink::ScriptWrappable", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::WebContentDecryptionModuleAccess"* }
%"class.blink::WebContentDecryptionModuleAccess" = type { i32 (...)** }
%"class.blink::MediaKeySystemConfiguration" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, %"class.blink::HeapVector", %"class.WTF::String", %"class.WTF::Vector.6", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.6", %"class.blink::HeapVector" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::MediaKeySystemMediaCapability"* }
%"class.blink::MediaKeySystemMediaCapability" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"struct.blink::WebMediaKeySystemConfiguration" = type { %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector.13", %"class.blink::WebVector.13", i32, i32, %"class.blink::WebVector.21" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i32* }
%"class.blink::WebVector.13" = type { %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.blink::WebMediaKeySystemMediaCapability"*, %"struct.blink::WebMediaKeySystemMediaCapability"*, %"class.std::__1::__compressed_pair.16" }
%"struct.blink::WebMediaKeySystemMediaCapability" = type <{ %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.blink::WebMediaKeySystemMediaCapability"* }
%"class.blink::WebVector.21" = type { %"class.std::__1::vector.22" }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { i32*, i32*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i32* }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.232", %"class.blink::ScriptValue" }
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.234", %class.scoped_refptr.237 }
%"class.blink::TraceWrapperV8Reference.234" = type { %"class.v8::TracedReference.235" }
%"class.v8::TracedReference.235" = type { %"class.v8::BasicTracedReference.236" }
%"class.v8::BasicTracedReference.236" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.237 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.31, %"class.blink::Member.221", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.31 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.221" = type { %"class.blink::MemberBase.222" }
%"class.blink::MemberBase.222" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.223" }
%"class.blink::Persistent.223" = type { %"class.blink::PersistentBase.224" }
%"class.blink::PersistentBase.224" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.ukm::builders::Media_EME_CreateMediaKeys" = type { %"class.ukm::internal::UkmEntryBuilderBase" }
%"class.ukm::internal::UkmEntryBuilderBase" = type { i32 (...)**, %"class.mojo::StructPtr.1832" }
%"class.mojo::StructPtr.1832" = type { %"class.std::__1::unique_ptr.1833" }
%"class.std::__1::unique_ptr.1833" = type { %"class.std::__1::__compressed_pair.1834" }
%"class.std::__1::__compressed_pair.1834" = type { %"struct.std::__1::__compressed_pair_elem.1835" }
%"struct.std::__1::__compressed_pair_elem.1835" = type { %"class.ukm::mojom::UkmEntry"* }
%"class.ukm::mojom::UkmEntry" = type { i64, i64, %"class.base::flat_map.1836" }
%"class.base::flat_map.1836" = type { %"class.base::internal::flat_tree.1837" }
%"class.base::internal::flat_tree.1837" = type { %"class.std::__1::vector.1838" }
%"class.std::__1::vector.1838" = type { %"class.std::__1::__vector_base.1839" }
%"class.std::__1::__vector_base.1839" = type { %"struct.std::__1::pair.1840"*, %"struct.std::__1::pair.1840"*, %"class.std::__1::__compressed_pair.1841" }
%"struct.std::__1::pair.1840" = type opaque
%"class.std::__1::__compressed_pair.1841" = type { %"struct.std::__1::__compressed_pair_elem.1842" }
%"struct.std::__1::__compressed_pair_elem.1842" = type { %"struct.std::__1::pair.1840"* }
%"class.blink::WebContentDecryptionModuleResult" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::ContentDecryptionModuleResultPromise" = type <{ %"class.blink::ContentDecryptionModuleResult", %"class.blink::Member.240", i32, [4 x i8] }>
%"class.blink::ContentDecryptionModuleResult" = type { i32 (...)** }
%"class.blink::Member.240" = type { %"class.blink::MemberBase.241" }
%"class.blink::MemberBase.241" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration", i32, %"class.blink::Member.232", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.234", %"class.blink::SelfKeepAlive.252" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.244" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember.244" = type { %"class.blink::MemberBase.245" }
%"class.blink::MemberBase.245" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.248" }
%"class.WTF::HashTable.248" = type <{ %"class.blink::WeakMember.250"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.250" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.251 }
%class.scoped_refptr.251 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.232", %"class.blink::ScriptValue" }
%"class.blink::SelfKeepAlive.252" = type { %"class.blink::Persistent.253" }
%"class.blink::Persistent.253" = type { %"class.blink::PersistentBase.254" }
%"class.blink::PersistentBase.254" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.316", i32, i8, [3 x i8], %"class.blink::HeapVector.318", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.326", %"class.blink::Member.328", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.337", %"class.blink::Member.473", %"class.blink::Member.475", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.255" }
%"class.blink::HeapHashMap.255" = type { %"class.WTF::HashMap.258" }
%"class.WTF::HashMap.258" = type { %"class.WTF::HashTable.259" }
%"class.WTF::HashTable.259" = type <{ %"struct.WTF::KeyValuePair.261"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.261" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.262" }
%"class.blink::Supplementable.262" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.263" }
%"class.blink::HeapHashMap.263" = type { %"class.WTF::HashMap.266" }
%"class.WTF::HashMap.266" = type { %"class.WTF::HashTable.267" }
%"class.WTF::HashTable.267" = type <{ %"struct.WTF::KeyValuePair.269"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.269" = type { i8*, %"class.blink::Member.481" }
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.483" }
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.270, %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.304", %"class.blink::Member.310", i32, [4 x i8], %"class.WTF::HashSet.312", i32, i32 }
%class.scoped_refptr.270 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.271", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.273 }
%"class.WTF::RefCounted.271" = type { %"class.base::RefCounted.272" }
%"class.base::RefCounted.272" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.273 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.291", %"class.std::__1::map.300"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.279 }
%union.anon.279 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.283", %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"class.std::__1::map.291" = type { %"class.std::__1::__tree.292" }
%"class.std::__1::__tree.292" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"class.std::__1::map.300" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.310" = type { %"class.blink::MemberBase.311" }
%"class.blink::MemberBase.311" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.312" = type { %"class.WTF::HashTable.313" }
%"class.WTF::HashTable.313" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.318" = type { %"class.WTF::Vector.321" }
%"class.WTF::Vector.321" = type { %"class.WTF::VectorBuffer.322" }
%"class.WTF::VectorBuffer.322" = type { %"class.WTF::VectorBufferBase.323" }
%"class.WTF::VectorBufferBase.323" = type { %"class.blink::Member.324"*, i32, i32 }
%"class.blink::Member.324" = type opaque
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.330", i32, i32 }
%"class.blink::HeapHashMap.330" = type { %"class.WTF::HashMap.333" }
%"class.WTF::HashMap.333" = type { %"class.WTF::HashTable.334" }
%"class.WTF::HashTable.334" = type <{ %"struct.WTF::KeyValuePair.336"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.336" = type opaque
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.340" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.343" }
%"class.WTF::Vector.343" = type { %"class.WTF::VectorBuffer.344" }
%"class.WTF::VectorBuffer.344" = type { %"class.WTF::VectorBufferBase.345" }
%"class.WTF::VectorBufferBase.345" = type { %"class.mojo::StructPtr.346"*, i32, i32 }
%"class.mojo::StructPtr.346" = type { %"class.std::__1::unique_ptr.347" }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.350", %"class.WTF::HashMap.357", %"class.WTF::HashMap.362", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.6", i32, %"class.mojo::StructPtr.367", %"class.WTF::Vector.6" }
%"class.mojo::StructPtr.350" = type { %"class.std::__1::unique_ptr.351" }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.357" = type { %"class.WTF::HashTable.358" }
%"class.WTF::HashTable.358" = type <{ %"struct.WTF::KeyValuePair.361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.361" = type opaque
%"class.WTF::HashMap.362" = type { %"class.WTF::HashTable.363" }
%"class.WTF::HashTable.363" = type <{ %"struct.WTF::KeyValuePair.366"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.366" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.367" = type { %"class.std::__1::unique_ptr.368" }
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.6", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.464" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.382", i32 }>
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.391", %"class.absl::optional.396", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.417", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.439", %"class.std::__1::map.450", i64, %"class.base::OnceCallback.410", %"class.base::OnceCallback.459", i8, %class.scoped_refptr.401, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.460" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.385 }
%class.scoped_refptr.385 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.386" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.391" = type { %"class.absl::optional_internal::optional_data.392" }
%"class.absl::optional_internal::optional_data.392" = type { %"class.absl::optional_internal::optional_data_base.393" }
%"class.absl::optional_internal::optional_data_base.393" = type { %"class.absl::optional_internal::optional_data_dtor_base.394" }
%"class.absl::optional_internal::optional_data_dtor_base.394" = type { i8, %union.anon.395 }
%union.anon.395 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.396" = type { %"class.absl::optional_internal::optional_data.397" }
%"class.absl::optional_internal::optional_data.397" = type { %"class.absl::optional_internal::optional_data_base.398" }
%"class.absl::optional_internal::optional_data_base.398" = type { %"class.absl::optional_internal::optional_data_dtor_base.399" }
%"class.absl::optional_internal::optional_data_dtor_base.399" = type { i8, %union.anon.400 }
%union.anon.400 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.410" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.401, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.403 }
%class.scoped_refptr.403 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.404", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.404" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.405" }
%"struct.std::__1::atomic.405" = type { %"struct.std::__1::__atomic_base.406" }
%"struct.std::__1::__atomic_base.406" = type { %"struct.std::__1::__atomic_base.407" }
%"struct.std::__1::__atomic_base.407" = type { %"struct.std::__1::__cxx_atomic_impl.408" }
%"struct.std::__1::__cxx_atomic_impl.408" = type { %"struct.std::__1::__cxx_atomic_base_impl.409" }
%"struct.std::__1::__cxx_atomic_base_impl.409" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.415 }
%class.scoped_refptr.415 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.477", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.401, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.477" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.416 }
%class.scoped_refptr.416 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.420", %class.scoped_refptr.421 }
%"class.base::RepeatingCallback.420" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.421 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.422", [4 x i8] }>
%"class.base::RefCountedThreadSafe.422" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.426", %"class.std::__1::unique_ptr.432", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.438" }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.438" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.439" = type { %"class.std::__1::__tree.440" }
%"class.std::__1::__tree.440" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.441", %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"class.std::__1::map.450" = type { %"class.std::__1::__tree.451" }
%"class.std::__1::__tree.451" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.452", %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"class.base::OnceCallback.410" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.459" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.401 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.402" }>
%"class.base::RefCountedThreadSafe.402" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.410" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.460" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.649", %"class.blink::ThreadState::PrefinalizerRegistration.657", %"class.blink::Member.658", %"class.blink::Member.660", %"class.blink::Member.662", i8, %"class.blink::Member.664", %"class.blink::Member.666", %"class.blink::Member.668", %"class.blink::Member.668", %"class.blink::Member.668", %"class.blink::Member.668", %"class.blink::Member.668", %"class.blink::Member.668", %"class.blink::Member.670", %"class.blink::Member.672", %"class.blink::Member.674", %"class.blink::Member.676", %"class.blink::Member.678", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.6", %"class.blink::Member.680", %class.scoped_refptr.682, %"class.blink::HeapHashSet.750", %"class.blink::Member.757", %"class.blink::HeapHashMap.770", %"class.std::__1::unique_ptr.777", %"class.blink::Member.789", %"class.blink::Member.816", %"class.blink::Member.826", %"class.blink::Member.832", %"class.WTF::Vector.835", %"class.util::TokenType.547", %"class.WTF::HashSet.840", %"class.WTF::Deque.844" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.536", %"class.blink::Member.538", %"class.blink::Member.540", %"class.blink::Member.542", i8, %"class.WTF::Vector.544" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.529" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.517" }
%"class.blink::HeapVector.517" = type { %"class.WTF::Vector.520" }
%"class.WTF::Vector.520" = type { %"class.WTF::VectorBuffer.521" }
%"class.WTF::VectorBuffer.521" = type { %"class.WTF::VectorBufferBase.522", [32 x i8] }
%"class.WTF::VectorBufferBase.522" = type { %"struct.std::__1::pair.523"*, i32, i32 }
%"struct.std::__1::pair.523" = type { %"class.WTF::AtomicString", %"class.blink::Member.524" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::HeapVector.526"* }
%"class.blink::HeapVector.526" = type opaque
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.WTF::Vector.532"* }
%"class.WTF::Vector.532" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.950", %"class.blink::Member.952", %"class.blink::Member.954", i8, i32, i8, i32, %"class.blink::Member.956", %"class.blink::Member.538", %"class.blink::FrameLifecycle", %"class.blink::Member.536", %"class.blink::Member.536", %"class.blink::Member.536", %"class.blink::Member.536", %"class.blink::Member.536", %"class.blink::Member.536", %"class.blink::Member.793", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.966", i8, %"class.base::UnguessableToken", %"class.absl::optional.968", %"class.absl::optional.973", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.536", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.950" = type { %"class.blink::MemberBase.951" }
%"class.blink::MemberBase.951" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.1472", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.536", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.1489", %"class.blink::Member.1493", %"class.blink::Member.1495", %"class.blink::Member.1497", %"class.blink::Member.1499", %"class.blink::Member.1501", %"class.blink::Member.1503", %"class.blink::Member.1505", %"class.blink::HeapObserverSet.1507", %"class.blink::Member.1515", %"class.blink::Member.1517", %"class.blink::Member.1519", %"class.blink::Member.1521", %"class.blink::Member.1523", %"class.blink::Member.1525", %"class.blink::Member.1527", %"class.blink::Member.1529", %"class.blink::Member.1531", %"class.blink::Member.1533", %"class.blink::Member.1535", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.1561", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.1568", %"class.blink::Member.950", %"class.blink::Member.950", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.1576", %"class.std::__1::unique_ptr.1582", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.1472" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1473" }
%"class.blink::HeapHashMap.1473" = type { %"class.WTF::HashMap.1476" }
%"class.WTF::HashMap.1476" = type { %"class.WTF::HashTable.1477" }
%"class.WTF::HashTable.1477" = type <{ %"struct.WTF::KeyValuePair.1479"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1479" = type { i8*, %"class.blink::Member.1480" }
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::Supplement.1482"* }
%"class.blink::Supplement.1482" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.950" }
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.1483" }
%"class.std::__1::unique_ptr.1483" = type { %"class.std::__1::__compressed_pair.1484" }
%"class.std::__1::__compressed_pair.1484" = type { %"struct.std::__1::__compressed_pair_elem.1485" }
%"struct.std::__1::__compressed_pair_elem.1485" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.950", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.1499" = type { %"class.blink::MemberBase.1500" }
%"class.blink::MemberBase.1500" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.1501" = type { %"class.blink::MemberBase.1502" }
%"class.blink::MemberBase.1502" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.1507" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1508" }
%"class.blink::HeapHashSet.1508" = type { %"class.WTF::HashSet.1511" }
%"class.WTF::HashSet.1511" = type { %"class.WTF::HashTable.1512" }
%"class.WTF::HashTable.1512" = type <{ %"class.blink::WeakMember.1514"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1514" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.1521" = type { %"class.blink::MemberBase.1522" }
%"class.blink::MemberBase.1522" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1526" }
%"class.blink::MemberBase.1526" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.1537" }
%"class.WTF::Deque.1537" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1540" }
%"class.WTF::VectorBuffer.1540" = type { %"class.WTF::VectorBufferBase.1541" }
%"class.WTF::VectorBufferBase.1541" = type { %"class.std::__1::unique_ptr.1542"*, i32, i32 }
%"class.std::__1::unique_ptr.1542" = type { %"class.std::__1::__compressed_pair.1543" }
%"class.std::__1::__compressed_pair.1543" = type { %"struct.std::__1::__compressed_pair_elem.1544" }
%"struct.std::__1::__compressed_pair_elem.1544" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.1548", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.1548" = type { %"class.std::__1::__bitset.1549" }
%"class.std::__1::__bitset.1549" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1550" }
%"class.absl::optional.1550" = type { %"class.absl::optional_internal::optional_data.1551" }
%"class.absl::optional_internal::optional_data.1551" = type { %"class.absl::optional_internal::optional_data_base.1552" }
%"class.absl::optional_internal::optional_data_base.1552" = type { %"class.absl::optional_internal::optional_data_dtor_base.1553" }
%"class.absl::optional_internal::optional_data_dtor_base.1553" = type { i8, %union.anon.1554 }
%union.anon.1554 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.1556", i64, %"class.absl::optional.391", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.1555" }
%"class.blink::WebPrivatePtr.1555" = type { i8* }
%"class.absl::optional.1556" = type { %"class.absl::optional_internal::optional_data.1557" }
%"class.absl::optional_internal::optional_data.1557" = type { %"class.absl::optional_internal::optional_data_base.1558" }
%"class.absl::optional_internal::optional_data_base.1558" = type { %"class.absl::optional_internal::optional_data_dtor_base.1559" }
%"class.absl::optional_internal::optional_data_dtor_base.1559" = type { i8, %union.anon.1560 }
%union.anon.1560 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.1561" = type { %"class.std::__1::unique_ptr.1562" }
%"class.std::__1::unique_ptr.1562" = type { %"class.std::__1::__compressed_pair.1563" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"struct.std::__1::__compressed_pair_elem.1564" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.1568" = type { %"class.WTF::HashSet.1571" }
%"class.WTF::HashSet.1571" = type { %"class.WTF::HashTable.1572" }
%"class.WTF::HashTable.1572" = type <{ %"class.blink::WeakMember.1574"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1574" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.1575" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.1575" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.605 }
%class.scoped_refptr.605 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.1576" = type { %"class.std::__1::__compressed_pair.1577" }
%"class.std::__1::__compressed_pair.1577" = type { %"struct.std::__1::__compressed_pair_elem.1578" }
%"struct.std::__1::__compressed_pair_elem.1578" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1582" = type { %"class.std::__1::__compressed_pair.1583" }
%"class.std::__1::__compressed_pair.1583" = type { %"struct.std::__1::__compressed_pair_elem.1584" }
%"struct.std::__1::__compressed_pair_elem.1584" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.952" = type { %"class.blink::MemberBase.953" }
%"class.blink::MemberBase.953" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.954" = type { %"class.blink::MemberBase.955" }
%"class.blink::MemberBase.955" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.956" = type { %"class.blink::MemberBase.957" }
%"class.blink::MemberBase.957" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.985", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.993", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1014", %"class.blink::FrameLoader", %"class.blink::Member.1041", %"class.blink::Member.866", %"class.blink::Member.1043", %"class.blink::Member.1045", %"class.blink::Member.1047", %"class.blink::Member.1049", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1051", %class.scoped_refptr.1053, %"class.blink::Member.1054", %"class.blink::Member.1056", %"class.blink::Member.1058", %"class.blink::Member.1060", %"class.blink::Member.1062", %"class.blink::Member.1064", %"class.blink::Member.1066", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1068", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1081", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1087", %"class.std::__1::unique_ptr.1088", %"class.absl::optional.973", i32, [4 x i8], %"class.std::__1::unique_ptr.1094", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1112", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1131", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1145", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1153", %"class.blink::Member.1155", %"class.blink::Member.1157", %"class.blink::Member.1159", %"class.mojo::StructPtr.1162", %"class.blink::Member.1171", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1173", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.985" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.986" }
%"class.blink::HeapHashMap.986" = type { %"class.WTF::HashMap.989" }
%"class.WTF::HashMap.989" = type { %"class.WTF::HashTable.990" }
%"class.WTF::HashTable.990" = type <{ %"struct.WTF::KeyValuePair.992"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.992" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.993" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.780", %"class.base::WeakPtrFactory.785" }
%"class.WTF::HashMap.780" = type { %"class.WTF::HashTable.781" }
%"class.WTF::HashTable.781" = type <{ %"struct.WTF::KeyValuePair.784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.784" = type opaque
%"class.base::WeakPtrFactory.785" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.999" }
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1003", i64, %"class.std::__1::map.1004", i8*, i64, %"class.base::WeakPtrFactory.1013" }
%"class.base::RepeatingCallback.1003" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1004" = type { %"class.std::__1::__tree.1005" }
%"class.std::__1::__tree.1005" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1010" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"class.base::WeakPtrFactory.1013" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1014" = type { %"class.WTF::HashSet.1017" }
%"class.WTF::HashSet.1017" = type { %"class.WTF::HashTable.1018" }
%"class.WTF::HashTable.1018" = type <{ %"class.blink::WeakMember.1020"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1020" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.793", %"class.blink::Member.1021", %"class.blink::Member.1023", %"class.std::__1::unique_ptr.1025", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1037" }
%"class.blink::Member.1021" = type { %"class.blink::MemberBase.1022" }
%"class.blink::MemberBase.1022" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1028" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"class.blink::KURL"* }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1041" = type { %"class.blink::MemberBase.1042" }
%"class.blink::MemberBase.1042" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1180", %"class.blink::Member.793", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.1187", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1192", %"class.blink::Member.1194", %"class.blink::Member.1194", %"class.std::__1::unique_ptr.1197", i32, [4 x i8], %"class.WTF::HashSet.1200", %"class.blink::Member.1207", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1209", %"class.blink::HeapHashSet.1216", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1224", i8, %"class.blink::Member.1230", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1242", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1256", i8, %"class.std::__1::unique_ptr.1262", %"class.std::__1::unique_ptr.1379", %"class.WTF::Vector.1385", i32, %class.scoped_refptr.1390, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1391", %"class.blink::Member.1393", %"class.blink::Member.1395", %"class.blink::HeapHashSet.1397", %"class.blink::HeapHashSet.1404", %"class.std::__1::unique_ptr.1411", %"class.std::__1::unique_ptr.1418", %"class.WTF::Vector.1429" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1180" = type { %"class.WTF::HashTable.1181" }
%"class.WTF::HashTable.1181" = type <{ %class.scoped_refptr.1184*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1184 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1186", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.478, %"class.base::WeakPtrFactory.1185" }
%class.scoped_refptr.478 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::WeakPtrFactory.1185" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1186" = type { %"class.blink::MemberBase.1042" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1187" = type { %"class.absl::optional_internal::optional_data.1188" }
%"class.absl::optional_internal::optional_data.1188" = type { %"class.absl::optional_internal::optional_data_base.1189" }
%"class.absl::optional_internal::optional_data_base.1189" = type { %"class.absl::optional_internal::optional_data_dtor_base.1190" }
%"class.absl::optional_internal::optional_data_dtor_base.1190" = type { i8, %union.anon.1191 }
%union.anon.1191 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::HeapHashSet.1196"* }
%"class.blink::HeapHashSet.1196" = type opaque
%"class.std::__1::unique_ptr.1197" = type { %"class.std::__1::__compressed_pair.1198" }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"class.WTF::HashSet.1200"* }
%"class.WTF::HashSet.1200" = type { %"class.WTF::HashTable.1201" }
%"class.WTF::HashTable.1201" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1207" = type { %"class.blink::MemberBase.1208" }
%"class.blink::MemberBase.1208" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1209" = type { %"class.WTF::HashSet.1212" }
%"class.WTF::HashSet.1212" = type { %"class.WTF::HashTable.1213" }
%"class.WTF::HashTable.1213" = type <{ %"class.blink::Member.1215"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1215" = type opaque
%"class.blink::HeapHashSet.1216" = type { %"class.WTF::HashSet.1219" }
%"class.WTF::HashSet.1219" = type { %"class.WTF::HashTable.1220" }
%"class.WTF::HashTable.1220" = type <{ %"class.blink::Member.1222"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1222" = type { %"class.blink::MemberBase.1223" }
%"class.blink::MemberBase.1223" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1457", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1468", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.866" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1459", %"class.blink::Member.1460", %"class.blink::Member.1462", %"class.blink::Member.1464", %"class.blink::Member.1466", %"class.WTF::Vector.1429", i16, %class.scoped_refptr.478 }
%"class.blink::ThreadState::PrefinalizerRegistration.1459" = type { i8 }
%"class.blink::Member.1460" = type { %"class.blink::MemberBase.1461" }
%"class.blink::MemberBase.1461" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1464" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1466" = type { %"class.blink::MemberBase.1467" }
%"class.blink::MemberBase.1467" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1468" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1469", { i64, i64 } }
%"class.blink::WeakMember.1469" = type { %"class.blink::MemberBase.1223" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1224" = type { %"class.std::__1::__compressed_pair.1225" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.1226" }
%"struct.std::__1::__compressed_pair_elem.1226" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1230" = type { %"class.blink::MemberBase.1231" }
%"class.blink::MemberBase.1231" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1234", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1234" = type { %"class.WTF::HashTable.1235" }
%"class.WTF::HashTable.1235" = type <{ %"struct.WTF::KeyValuePair.1237"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1237" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1238", i32, i32 }
%"class.WTF::Vector.1238" = type { %"class.WTF::VectorBuffer.1239" }
%"class.WTF::VectorBuffer.1239" = type { %"class.WTF::VectorBufferBase.1240" }
%"class.WTF::VectorBufferBase.1240" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1242" = type { %"class.WTF::LinkedHashSet.1245" }
%"class.WTF::LinkedHashSet.1245" = type { %"class.WTF::HashMap.1246", %"class.WTF::VectorBackedLinkedList.1250" }
%"class.WTF::HashMap.1246" = type { %"class.WTF::HashTable.1247" }
%"class.WTF::HashTable.1247" = type <{ %"struct.WTF::KeyValuePair.1249"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1249" = type opaque
%"class.WTF::VectorBackedLinkedList.1250" = type { %"class.WTF::Vector.1251", i32, i32 }
%"class.WTF::Vector.1251" = type { %"class.WTF::VectorBuffer.1252" }
%"class.WTF::VectorBuffer.1252" = type { %"class.WTF::VectorBufferBase.1253" }
%"class.WTF::VectorBufferBase.1253" = type { %"class.WTF::VectorBackedLinkedListNode.1254"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1254" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1256" = type { %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.1258" }
%"struct.std::__1::__compressed_pair_elem.1258" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1262" = type { %"class.std::__1::__compressed_pair.1263" }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1264" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1265, %class.scoped_refptr.1265, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1356", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1361", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1265 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1266", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1273" }
%"class.WTF::RefCounted.1266" = type { %"class.base::RefCounted.1267" }
%"class.base::RefCounted.1267" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1268", i32, [4 x i8] }>
%"class.WTF::Vector.1268" = type { %"class.WTF::VectorBuffer.1269" }
%"class.WTF::VectorBuffer.1269" = type { %"class.WTF::VectorBufferBase.1270" }
%"class.WTF::VectorBufferBase.1270" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1273" = type { %"class.WTF::VectorBuffer.1274" }
%"class.WTF::VectorBuffer.1274" = type { %"class.WTF::VectorBufferBase.1275" }
%"class.WTF::VectorBufferBase.1275" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1279", %"class.std::__1::unique_ptr.1328", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1276, %class.scoped_refptr.1277, %class.scoped_refptr.1278 }
%class.scoped_refptr.1276 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1292", i8, i8, %class.scoped_refptr.1276, i32, i32 }
%"class.WTF::RefCounted.1292" = type { %"class.base::RefCounted.1293" }
%"class.base::RefCounted.1293" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1277 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1452" }
%"class.blink::PaintPropertyNode.1452" = type { %"class.WTF::RefCounted.1453", i8, i8, %class.scoped_refptr.1277, i32, i32 }
%"class.WTF::RefCounted.1453" = type { %"class.base::RefCounted.1454" }
%"class.base::RefCounted.1454" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1278 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1449" }
%"class.blink::PaintPropertyNode.1449" = type { %"class.WTF::RefCounted.1450", i8, i8, %class.scoped_refptr.1278, i32, i32 }
%"class.WTF::RefCounted.1450" = type { %"class.base::RefCounted.1451" }
%"class.base::RefCounted.1451" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1279" = type { %"class.std::__1::__compressed_pair.1280" }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1282", %"class.WTF::Vector.1287", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1287" = type { %"class.WTF::VectorBuffer.1288" }
%"class.WTF::VectorBuffer.1288" = type { %"class.WTF::VectorBufferBase.1289" }
%"class.WTF::VectorBufferBase.1289" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1307" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1300, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1301", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1294" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1294" = type { %"class.std::__1::__compressed_pair.1295" }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.1296" }
%"struct.std::__1::__compressed_pair_elem.1296" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1300 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1434", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1434" = type { %"class.WTF::RefCounted.1435", i8, i8, %class.scoped_refptr.1300, i32, i32 }
%"class.WTF::RefCounted.1435" = type { %"class.base::RefCounted.1436" }
%"class.base::RefCounted.1436" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1437" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1437" = type { %"class.absl::optional_internal::optional_data.1438" }
%"class.absl::optional_internal::optional_data.1438" = type { %"class.absl::optional_internal::optional_data_base.1439" }
%"class.absl::optional_internal::optional_data_base.1439" = type { %"class.absl::optional_internal::optional_data_dtor_base.1440" }
%"class.absl::optional_internal::optional_data_dtor_base.1440" = type { i8, %union.anon.1441 }
%union.anon.1441 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1442", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1442" = type { %"class.std::__1::__vector_base.1443" }
%"class.std::__1::__vector_base.1443" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1444" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1444" = type { %"struct.std::__1::__compressed_pair_elem.1445" }
%"struct.std::__1::__compressed_pair_elem.1445" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1301" = type { %"class.std::__1::__compressed_pair.1302" }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1307" = type { %"class.std::__1::__compressed_pair.1308" }
%"class.std::__1::__compressed_pair.1308" = type { %"struct.std::__1::__compressed_pair_elem.1309" }
%"struct.std::__1::__compressed_pair_elem.1309" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1310", %"class.std::__1::unique_ptr.1316", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1310" = type { %"class.std::__1::__compressed_pair.1311" }
%"class.std::__1::__compressed_pair.1311" = type { %"struct.std::__1::__compressed_pair_elem.1312" }
%"struct.std::__1::__compressed_pair_elem.1312" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1316" = type { %"class.std::__1::__compressed_pair.1317" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.1318" }
%"struct.std::__1::__compressed_pair_elem.1318" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1328" = type { %"class.std::__1::__compressed_pair.1329" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1331", %"class.absl::optional.1331" }
%"class.absl::optional.1331" = type { %"class.absl::optional_internal::optional_data.1332" }
%"class.absl::optional_internal::optional_data.1332" = type { %"class.absl::optional_internal::optional_data_base.1333" }
%"class.absl::optional_internal::optional_data_base.1333" = type { %"class.absl::optional_internal::optional_data_dtor_base.1334" }
%"class.absl::optional_internal::optional_data_dtor_base.1334" = type { i8, [3 x i8], %union.anon.1335 }
%union.anon.1335 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1273"*, %"class.absl::optional.1341", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1341" = type { %"class.absl::optional_internal::optional_data.1342" }
%"class.absl::optional_internal::optional_data.1342" = type { %"class.absl::optional_internal::optional_data_base.1343" }
%"class.absl::optional_internal::optional_data_base.1343" = type { %"class.absl::optional_internal::optional_data_dtor_base.1344" }
%"class.absl::optional_internal::optional_data_dtor_base.1344" = type { i8, %union.anon.1345 }
%union.anon.1345 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1346", %"class.WTF::Vector.1351" }
%"class.WTF::Vector.1346" = type { %"class.WTF::VectorBuffer.1347" }
%"class.WTF::VectorBuffer.1347" = type { %"class.WTF::VectorBufferBase.1348", [128 x i8] }
%"class.WTF::VectorBufferBase.1348" = type { i32*, i32, i32 }
%"class.WTF::Vector.1351" = type { %"class.WTF::VectorBuffer.1352" }
%"class.WTF::VectorBuffer.1352" = type { %"class.WTF::VectorBufferBase.1353", [128 x i8] }
%"class.WTF::VectorBufferBase.1353" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1356" = type { %"class.WTF::VectorBuffer.1357" }
%"class.WTF::VectorBuffer.1357" = type { %"class.WTF::VectorBufferBase.1358" }
%"class.WTF::VectorBufferBase.1358" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1361" = type { %"class.WTF::HashTable.1362" }
%"class.WTF::HashTable.1362" = type <{ %"struct.WTF::KeyValuePair.1365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1365" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1366", %"class.WTF::Vector.1371" }
%"class.WTF::HashMap.1366" = type { %"class.WTF::HashTable.1367" }
%"class.WTF::HashTable.1367" = type <{ %"struct.WTF::KeyValuePair.1370"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1370" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1379" = type { %"class.std::__1::__compressed_pair.1380" }
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.1381" }
%"struct.std::__1::__compressed_pair_elem.1381" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1390 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1394" }
%"class.blink::MemberBase.1394" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1397" = type { %"class.WTF::HashSet.1400" }
%"class.WTF::HashSet.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"class.blink::WeakMember.1403"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1403" = type opaque
%"class.blink::HeapHashSet.1404" = type { %"class.WTF::HashSet.1407" }
%"class.WTF::HashSet.1407" = type { %"class.WTF::HashTable.1408" }
%"class.WTF::HashTable.1408" = type <{ %"class.blink::WeakMember.1410"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1410" = type opaque
%"class.std::__1::unique_ptr.1411" = type { %"class.std::__1::__compressed_pair.1412" }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.1413" }
%"struct.std::__1::__compressed_pair_elem.1413" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1414" }
%"class.base::time_internal::TimeBase.1414" = type { i64 }
%"class.std::__1::unique_ptr.1418" = type { %"class.std::__1::__compressed_pair.1419" }
%"class.std::__1::__compressed_pair.1419" = type { %"struct.std::__1::__compressed_pair_elem.1420" }
%"struct.std::__1::__compressed_pair_elem.1420" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1421", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1421" = type { %"class.absl::optional_internal::optional_data.1422" }
%"class.absl::optional_internal::optional_data.1422" = type { %"class.absl::optional_internal::optional_data_base.1423" }
%"class.absl::optional_internal::optional_data_base.1423" = type { %"class.absl::optional_internal::optional_data_dtor_base.1424" }
%"class.absl::optional_internal::optional_data_dtor_base.1424" = type { i8, %union.anon.1425 }
%union.anon.1425 = type { %"class.base::Time" }
%"class.WTF::Vector.1429" = type { %"class.WTF::VectorBuffer.1430" }
%"class.WTF::VectorBuffer.1430" = type { %"class.WTF::VectorBufferBase.1431" }
%"class.WTF::VectorBufferBase.1431" = type { %"class.base::OnceCallback.410"*, i32, i32 }
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.871" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.797", %"class.blink::Member.797" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.797", %"class.blink::Member.799", %"class.blink::Member.797", %"class.blink::Member.797", %"class.blink::Member.801" }
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.849", %"class.blink::Member.660", %"class.blink::Member.799", %"class.blink::Member.851", %"class.blink::Member.851", %"class.blink::Member.894", %"class.blink::Member.896", %"class.blink::Member.898", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.903", %"class.blink::HeapVector.905" }
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.855" }
%"class.blink::HeapHashMap.855" = type { %"class.WTF::HashMap.858" }
%"class.WTF::HashMap.858" = type { %"class.WTF::HashTable.859" }
%"class.WTF::HashTable.859" = type <{ %"struct.WTF::KeyValuePair.861"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.861" = type { %"class.WTF::AtomicString", %"class.blink::Member.862" }
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.866", i32, %"class.blink::HeapVector.887" }
%"class.blink::HeapVector.887" = type { %"class.WTF::Vector.890" }
%"class.WTF::Vector.890" = type { %"class.WTF::VectorBuffer.891" }
%"class.WTF::VectorBuffer.891" = type { %"class.WTF::VectorBufferBase.892" }
%"class.WTF::VectorBufferBase.892" = type { %"class.blink::Member.866"*, i32, i32 }
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.900" }
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::HeapHashMap.902"* }
%"class.blink::HeapHashMap.902" = type opaque
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.905" = type { %"class.WTF::Vector.908" }
%"class.WTF::Vector.908" = type { %"class.WTF::VectorBuffer.909" }
%"class.WTF::VectorBuffer.909" = type { %"class.WTF::VectorBufferBase.910" }
%"class.WTF::VectorBufferBase.910" = type { %"class.blink::Member.911"*, i32, i32 }
%"class.blink::Member.911" = type { %"class.blink::MemberBase.912" }
%"class.blink::MemberBase.912" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.913", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.915, %"class.WTF::Vector.916", %"class.WTF::Vector.916", %"class.blink::Member.797", %"class.blink::Member.921", %"class.blink::HeapHashSet.925", %"class.blink::Member.660", %"class.WTF::HashSet.932", %"class.WTF::TextPosition", %"class.blink::Member.936", %"class.blink::HeapVector.938", %"class.blink::Member.945" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.915 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.916" = type { %"class.WTF::VectorBuffer.917" }
%"class.WTF::VectorBuffer.917" = type { %"class.WTF::VectorBufferBase.918" }
%"class.WTF::VectorBufferBase.918" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.923" }
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.925" = type { %"class.WTF::HashSet.928" }
%"class.WTF::HashSet.928" = type { %"class.WTF::HashTable.929" }
%"class.WTF::HashTable.929" = type <{ %"class.blink::WeakMember.931"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.931" = type { %"class.blink::MemberBase.800" }
%"class.WTF::HashSet.932" = type { %"class.WTF::HashTable.933" }
%"class.WTF::HashTable.933" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.938" = type { %"class.WTF::Vector.941" }
%"class.WTF::Vector.941" = type { %"class.WTF::VectorBuffer.942" }
%"class.WTF::VectorBuffer.942" = type { %"class.WTF::VectorBufferBase.943" }
%"class.WTF::VectorBufferBase.943" = type { %"class.blink::Member.921"*, i32, i32 }
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.868 }
%class.scoped_refptr.868 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.869", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.869" = type { %"class.base::RefCounted.870" }
%"class.base::RefCounted.870" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.875", %"class.blink::Member.877", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.875" = type { %"class.WTF::SingleThreadedBitField.876" }
%"class.WTF::SingleThreadedBitField.876" = type { i32 }
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.879 }
%class.scoped_refptr.879 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.880", %"class.WTF::AtomicString", %"class.WTF::Vector.882" }
%"class.WTF::RefCounted.880" = type { %"class.base::RefCounted.881" }
%"class.base::RefCounted.881" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.882" = type { %"class.WTF::VectorBuffer.883" }
%"class.WTF::VectorBuffer.883" = type { %"class.WTF::VectorBufferBase.884", [32 x i8] }
%"class.WTF::VectorBufferBase.884" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1053 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1068" = type { %"class.blink::Member.1069" }
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1073" }
%"class.mojo::Remote.1073" = type { %"class.mojo::internal::InterfacePtrState.1074" }
%"class.mojo::internal::InterfacePtrState.1074" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1075" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.549, %"class.std::__1::unique_ptr.382", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.401, i32 }>
%class.scoped_refptr.549 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.401, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.607", %"class.absl::optional.612", %"class.absl::optional.566", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.632", i8, [7 x i8], %class.scoped_refptr.401, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.422" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.410", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.401, %"class.std::__1::unique_ptr.550", %"class.absl::optional.560", %"struct.std::__1::atomic.217", i8, i8, i8, i8, i32, i32, %"class.absl::optional.566", %"class.std::__1::unique_ptr.571", i8, i64, %class.scoped_refptr.604, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.606" }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.401, i8, %"class.mojo::ScopedHandleBase.553", %class.scoped_refptr.554, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.555", i8*, %"class.base::WeakPtrFactory.556" }
%"class.mojo::ScopedHandleBase.553" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.554 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.555" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.556" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.560" = type { %"class.absl::optional_internal::optional_data.561" }
%"class.absl::optional_internal::optional_data.561" = type { %"class.absl::optional_internal::optional_data_base.562" }
%"class.absl::optional_internal::optional_data_base.562" = type { %"class.absl::optional_internal::optional_data_dtor_base.563" }
%"class.absl::optional_internal::optional_data_dtor_base.563" = type { i8, %union.anon.564 }
%union.anon.564 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.565", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.565" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.574", i8, i64, %class.scoped_refptr.575, %class.scoped_refptr.600 }
%"class.base::RepeatingCallback.574" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.575 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.576", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.578", %"class.std::__1::map.589", i8, [7 x i8] }>
%"class.base::RefCounted.576" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.577 }
%class.scoped_refptr.577 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.578" = type { %"class.std::__1::__tree.579" }
%"class.std::__1::__tree.579" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.580", %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"class.std::__1::map.589" = type { %"class.std::__1::__tree.590" }
%"class.std::__1::__tree.590" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.591", %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%class.scoped_refptr.600 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.604 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.606" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.607" = type { %"class.absl::optional_internal::optional_data.608" }
%"class.absl::optional_internal::optional_data.608" = type { %"class.absl::optional_internal::optional_data_base.609" }
%"class.absl::optional_internal::optional_data_base.609" = type { %"class.absl::optional_internal::optional_data_dtor_base.610" }
%"class.absl::optional_internal::optional_data_dtor_base.610" = type { i8, %union.anon.611 }
%union.anon.611 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.612" = type { %"class.absl::optional_internal::optional_data.613" }
%"class.absl::optional_internal::optional_data.613" = type { %"class.absl::optional_internal::optional_data_base.614" }
%"class.absl::optional_internal::optional_data_base.614" = type { %"class.absl::optional_internal::optional_data_dtor_base.615" }
%"class.absl::optional_internal::optional_data_dtor_base.615" = type { i8, [7 x i8], %union.anon.616 }
%union.anon.616 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.566" = type { %"class.absl::optional_internal::optional_data.567" }
%"class.absl::optional_internal::optional_data.567" = type { %"class.absl::optional_internal::optional_data_base.568" }
%"class.absl::optional_internal::optional_data_base.568" = type { %"class.absl::optional_internal::optional_data_dtor_base.569" }
%"class.absl::optional_internal::optional_data_dtor_base.569" = type { i8, %union.anon.570 }
%union.anon.570 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.617 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.617 = type { %"class.std::__1::map.620" }
%"class.std::__1::map.620" = type { %"class.std::__1::__tree.621" }
%"class.std::__1::__tree.621" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.631"*, i64 }
%"class.std::__1::unique_ptr.631" = type opaque
%"class.std::__1::map.632" = type { %"class.std::__1::__tree.633" }
%"class.std::__1::__tree.633" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.634", %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1087" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1094" = type { %"class.std::__1::__compressed_pair.1095" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1096" }
%"struct.std::__1::__compressed_pair_elem.1096" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1100" }
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1104" }
%"class.mojo::AssociatedRemote.1104" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1105" }
%"class.mojo::internal::AssociatedInterfacePtrState.1105" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1106" }
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1112" = type { %"class.blink::Member.1113" }
%"class.blink::Member.1113" = type { %"class.blink::MemberBase.1114" }
%"class.blink::MemberBase.1114" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1117" }
%"class.mojo::AssociatedRemote.1117" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1118" }
%"class.mojo::internal::AssociatedInterfacePtrState.1118" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1119" }
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1125" }
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1129", %"class.blink::Member.793", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1129" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1130" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.382" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1130" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1131" = type { %"class.blink::Member.1132" }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1136", %"class.blink::Member.793", %"class.mojo::AssociatedReceiver.1137" }
%"class.blink::ThreadState::PrefinalizerRegistration.1136" = type { i8 }
%"class.mojo::AssociatedReceiver.1137" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1138" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1138" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1139" }
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1143", %"class.blink::Member.793", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1143" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.549, %"class.std::__1::unique_ptr.382", %"class.base::WeakPtrFactory.1144" }
%"class.base::WeakPtrFactory.1144" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1145" = type { %"class.blink::Member.1146" }
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1150", %"class.blink::Member.793", %"class.mojo::AssociatedReceiver.1151" }
%"class.blink::ThreadState::PrefinalizerRegistration.1150" = type { i8 }
%"class.mojo::AssociatedReceiver.1151" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1152" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1152" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::HeapHashMap.1161"* }
%"class.blink::HeapHashMap.1161" = type opaque
%"class.mojo::StructPtr.1162" = type { %"class.std::__1::unique_ptr.1163" }
%"class.std::__1::unique_ptr.1163" = type { %"class.std::__1::__compressed_pair.1164" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1166", %"class.mojo::InlinedStructPtr.1167" }
%"class.mojo::InlinedStructPtr.1166" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1167" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1173" = type { %"class.absl::optional_internal::optional_data.1174" }
%"class.absl::optional_internal::optional_data.1174" = type { %"class.absl::optional_internal::optional_data_base.1175" }
%"class.absl::optional_internal::optional_data_base.1175" = type { %"class.absl::optional_internal::optional_data_dtor_base.1176" }
%"class.absl::optional_internal::optional_data_dtor_base.1176" = type { i8, %union.anon.1177 }
%union.anon.1177 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.536", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.958" }
%"class.std::__1::vector.958" = type { %"class.std::__1::__vector_base.959" }
%"class.std::__1::__vector_base.959" = type { %"struct.std::__1::pair.960"*, %"struct.std::__1::pair.960"*, %"class.std::__1::__compressed_pair.961" }
%"struct.std::__1::pair.960" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"struct.std::__1::pair.960"* }
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.968" = type { %"class.absl::optional_internal::optional_data.969" }
%"class.absl::optional_internal::optional_data.969" = type { %"class.absl::optional_internal::optional_data_base.970" }
%"class.absl::optional_internal::optional_data_base.970" = type { %"class.absl::optional_internal::optional_data_dtor_base.971" }
%"class.absl::optional_internal::optional_data_dtor_base.971" = type { i8, %union.anon.972 }
%union.anon.972 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.973" = type { %"class.absl::optional_internal::optional_data.974" }
%"class.absl::optional_internal::optional_data.974" = type { %"class.absl::optional_internal::optional_data_base.975" }
%"class.absl::optional_internal::optional_data_base.975" = type { %"class.absl::optional_internal::optional_data_dtor_base.976" }
%"class.absl::optional_internal::optional_data_dtor_base.976" = type { i8, %union.anon.977 }
%union.anon.977 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.978" }
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.544" = type { %"class.WTF::VectorBuffer.545" }
%"class.WTF::VectorBuffer.545" = type { %"class.WTF::VectorBufferBase.546" }
%"class.WTF::VectorBufferBase.546" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.547", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.641" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.316", i32, i8, [3 x i8], %"class.blink::HeapVector.318", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.326", %"class.blink::Member.328", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.337", %"class.blink::Member.473", %"class.blink::Member.475", i8 }>
%"class.blink::Supplementable.649" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.650" }
%"class.blink::HeapHashMap.650" = type { %"class.WTF::HashMap.653" }
%"class.WTF::HashMap.653" = type { %"class.WTF::HashTable.654" }
%"class.WTF::HashTable.654" = type <{ %"struct.WTF::KeyValuePair.656"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.656" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.657" = type { i8 }
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1588", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1429", %"class.WTF::Vector.1429", i8, i32, %"class.blink::Member.820", %"class.blink::Member.310", %"class.blink::Member.1596", %"class.blink::Member.1598", %"class.blink::Member.1600", %"class.blink::Member.1602", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1604", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1610", %"class.blink::Member.1612", %"class.blink::Member.911", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1614", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1619", %"class.blink::HeapVector.887", %"class.blink::Member.866", %"class.blink::Member.812", %"class.blink::Member.866", %"class.blink::Member.866", %"class.blink::Member.866", %"class.blink::UserActionElementSet", %"class.blink::Member.1628", double, double, i64, i64, %"class.blink::HeapHashSet.1630", %"class.blink::HeapHashSet.1637", i16, i8, %"class.blink::Member.1644", %"class.blink::Member.1646", %"class.blink::Member.1648", %"class.blink::Member.1650", %"class.blink::TextLinkColors", %"class.blink::Member.1652", i8, [7 x i8], %"class.blink::HeapHashMap.1654", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.866", %"class.WTF::Vector.1661", %"class.blink::Member.1666", %"class.blink::Member.1668", i8, %"class.blink::Member.866", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1670", %"class.blink::HeapVector.1672", %"class.std::__1::unique_ptr.1680", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1686", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1699", %"class.WTF::Vector.1701", i8, i8, %"class.std::__1::unique_ptr.1706", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.887", %"class.blink::HeapVector.1712", i32, i8, %"class.blink::HeapTaskRunnerTimer.1619", %"class.blink::HeapTaskRunnerTimer.1619", %"class.blink::DocumentTiming", %"class.blink::Member.1720", i8, i32, %"class.blink::Member.1722", %"class.blink::Member.1724", %"class.blink::Member.1726", %"class.blink::HeapTaskRunnerTimer.1619", %"class.blink::Member.1728", %"class.WTF::HashMap.1730", %"class.blink::Member.1735", %"class.blink::Member.1737", %"class.blink::Member.1739", %"class.blink::Member.1741", %"class.blink::Member.660", %"class.blink::Member.660", %"class.blink::HeapTaskRunnerTimer.1619", %"class.blink::HeapHashSet.1743", i8, i32, %"class.blink::Member.1750", %"class.blink::Member.1752", i32, %"class.blink::Member.1754", %"class.blink::Member.1756", %"class.blink::Member.1758", %"class.std::__1::unique_ptr.1760", i64, %"class.std::__1::unique_ptr.1766", i32, i32, %"class.blink::Member.1772", %"class.blink::Member.1774", %"class.blink::Member.1776", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1778", %"class.WTF::Vector.835", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1780", %"class.blink::Member.1787", %"class.std::__1::unique_ptr.1789", %"class.blink::Member.1795", i8, i8, %"class.WTF::String", %"class.blink::Member.1797", i8, [7 x i8], %"class.blink::HeapHashMap.1799", %"class.blink::HeapObserverSet.1806", %"class.blink::Member.1814", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1816", i32, i8, i8, %"class.blink::WeakMember.1818", %"class.blink::Member.1819" }
%"class.blink::Supplementable.1588" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1589" }
%"class.blink::HeapHashMap.1589" = type { %"class.WTF::HashMap.1592" }
%"class.WTF::HashMap.1592" = type { %"class.WTF::HashTable.1593" }
%"class.WTF::HashTable.1593" = type <{ %"struct.WTF::KeyValuePair.1595"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1595" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1600" = type { %"class.blink::MemberBase.1601" }
%"class.blink::MemberBase.1601" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1602" = type { %"class.blink::MemberBase.1603" }
%"class.blink::MemberBase.1603" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1604" = type { %"class.std::__1::__compressed_pair.1605" }
%"class.std::__1::__compressed_pair.1605" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"struct.std::__1::__compressed_pair_elem.1606" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1614" = type { %"class.WTF::VectorBuffer.1615" }
%"class.WTF::VectorBuffer.1615" = type { %"class.WTF::VectorBufferBase.1616" }
%"class.WTF::VectorBufferBase.1616" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.237 }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.660", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.797", %"class.blink::Member.797", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1621" }
%"class.blink::HeapHashMap.1621" = type { %"class.WTF::HashMap.1624" }
%"class.WTF::HashMap.1624" = type { %"class.WTF::HashTable.1625" }
%"class.WTF::HashTable.1625" = type <{ %"struct.WTF::KeyValuePair.1627"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1627" = type opaque
%"class.blink::Member.1628" = type { %"class.blink::MemberBase.1629" }
%"class.blink::MemberBase.1629" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1630" = type { %"class.WTF::HashSet.1633" }
%"class.WTF::HashSet.1633" = type { %"class.WTF::HashTable.1634" }
%"class.WTF::HashTable.1634" = type <{ %"class.blink::WeakMember.1636"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1636" = type opaque
%"class.blink::HeapHashSet.1637" = type { %"class.WTF::HashSet.1640" }
%"class.WTF::HashSet.1640" = type { %"class.WTF::HashTable.1641" }
%"class.WTF::HashTable.1641" = type <{ %"class.blink::WeakMember.1643"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1643" = type opaque
%"class.blink::Member.1644" = type { %"class.blink::MemberBase.1645" }
%"class.blink::MemberBase.1645" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1646" = type { %"class.blink::MemberBase.1647" }
%"class.blink::MemberBase.1647" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.799", %"class.blink::HeapVector.905" }
%"class.blink::Member.1650" = type { %"class.blink::MemberBase.1651" }
%"class.blink::MemberBase.1651" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1654" = type { %"class.WTF::HashMap.1657" }
%"class.WTF::HashMap.1657" = type { %"class.WTF::HashTable.1658" }
%"class.WTF::HashTable.1658" = type <{ %"struct.WTF::KeyValuePair.1660"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1660" = type opaque
%"class.WTF::Vector.1661" = type { %"class.WTF::VectorBuffer.1662" }
%"class.WTF::VectorBuffer.1662" = type { %"class.WTF::VectorBufferBase.1663" }
%"class.WTF::VectorBufferBase.1663" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1672" = type { %"class.WTF::Vector.1675" }
%"class.WTF::Vector.1675" = type { %"class.WTF::VectorBuffer.1676" }
%"class.WTF::VectorBuffer.1676" = type { %"class.WTF::VectorBufferBase.1677" }
%"class.WTF::VectorBufferBase.1677" = type { %"class.blink::Member.1678"*, i32, i32 }
%"class.blink::Member.1678" = type opaque
%"class.std::__1::unique_ptr.1680" = type { %"class.std::__1::__compressed_pair.1681" }
%"class.std::__1::__compressed_pair.1681" = type { %"struct.std::__1::__compressed_pair_elem.1682" }
%"struct.std::__1::__compressed_pair_elem.1682" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1686" = type { %"class.WTF::HashSet.1689" }
%"class.WTF::HashSet.1689" = type { %"class.WTF::HashTable.1690" }
%"class.WTF::HashTable.1690" = type <{ %"class.blink::WeakMember.1692"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1692" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1693", i32, [4 x i8] }>
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695" }
%"class.WTF::VectorBufferBase.1695" = type { %"struct.std::__1::pair.1696"*, i32, i32 }
%"struct.std::__1::pair.1696" = type opaque
%"class.blink::Member.1699" = type { %"class.blink::MemberBase.1700" }
%"class.blink::MemberBase.1700" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1701" = type { %"class.WTF::VectorBuffer.1702" }
%"class.WTF::VectorBuffer.1702" = type { %"class.WTF::VectorBufferBase.1703" }
%"class.WTF::VectorBufferBase.1703" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1706" = type { %"class.std::__1::__compressed_pair.1707" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.1708" }
%"struct.std::__1::__compressed_pair_elem.1708" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1712" = type { %"class.WTF::Vector.1715" }
%"class.WTF::Vector.1715" = type { %"class.WTF::VectorBuffer.1716" }
%"class.WTF::VectorBuffer.1716" = type { %"class.WTF::VectorBufferBase.1717" }
%"class.WTF::VectorBufferBase.1717" = type { %"class.blink::Member.1718"*, i32, i32 }
%"class.blink::Member.1718" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.660" }
%"class.blink::Member.1720" = type { %"class.blink::MemberBase.1721" }
%"class.blink::MemberBase.1721" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1722" = type { %"class.blink::MemberBase.1723" }
%"class.blink::MemberBase.1723" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1724" = type { %"class.blink::MemberBase.1725" }
%"class.blink::MemberBase.1725" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1726" = type { %"class.blink::MemberBase.1727" }
%"class.blink::MemberBase.1727" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1728" = type { %"class.blink::MemberBase.1729" }
%"class.blink::MemberBase.1729" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1730" = type { %"class.WTF::HashTable.1731" }
%"class.WTF::HashTable.1731" = type <{ %"struct.WTF::KeyValuePair.1734"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1734" = type opaque
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1739" = type { %"class.blink::MemberBase.1740" }
%"class.blink::MemberBase.1740" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1741" = type { %"class.blink::MemberBase.1742" }
%"class.blink::MemberBase.1742" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1619" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1620", { i64, i64 } }
%"class.blink::WeakMember.1620" = type { %"class.blink::MemberBase.661" }
%"class.blink::HeapHashSet.1743" = type { %"class.WTF::HashSet.1746" }
%"class.WTF::HashSet.1746" = type { %"class.WTF::HashTable.1747" }
%"class.WTF::HashTable.1747" = type <{ %"class.blink::Member.1749"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1749" = type opaque
%"class.blink::Member.1750" = type { %"class.blink::MemberBase.1751" }
%"class.blink::MemberBase.1751" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1752" = type { %"class.blink::MemberBase.1753" }
%"class.blink::MemberBase.1753" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1754" = type { %"class.blink::MemberBase.1755" }
%"class.blink::MemberBase.1755" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1756" = type { %"class.blink::MemberBase.1757" }
%"class.blink::MemberBase.1757" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1758" = type { %"class.blink::MemberBase.1759" }
%"class.blink::MemberBase.1759" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1760" = type { %"class.std::__1::__compressed_pair.1761" }
%"class.std::__1::__compressed_pair.1761" = type { %"struct.std::__1::__compressed_pair_elem.1762" }
%"struct.std::__1::__compressed_pair_elem.1762" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1766" = type { %"class.std::__1::__compressed_pair.1767" }
%"class.std::__1::__compressed_pair.1767" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"struct.std::__1::__compressed_pair_elem.1768" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1772" = type { %"class.blink::MemberBase.1773" }
%"class.blink::MemberBase.1773" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1774" = type { %"class.blink::MemberBase.1775" }
%"class.blink::MemberBase.1775" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1776" = type { %"class.blink::MemberBase.1777" }
%"class.blink::MemberBase.1777" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1778" = type { %"class.blink::MemberBase.1779" }
%"class.blink::MemberBase.1779" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1780" = type { %"class.WTF::HashMap.1783" }
%"class.WTF::HashMap.1783" = type { %"class.WTF::HashTable.1784" }
%"class.WTF::HashTable.1784" = type <{ %"struct.WTF::KeyValuePair.1786"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1786" = type opaque
%"class.blink::Member.1787" = type { %"class.blink::MemberBase.1788" }
%"class.blink::MemberBase.1788" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1789" = type { %"class.std::__1::__compressed_pair.1790" }
%"class.std::__1::__compressed_pair.1790" = type { %"struct.std::__1::__compressed_pair_elem.1791" }
%"struct.std::__1::__compressed_pair_elem.1791" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1795" = type { %"class.blink::MemberBase.1796" }
%"class.blink::MemberBase.1796" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1797" = type { %"class.blink::MemberBase.1798" }
%"class.blink::MemberBase.1798" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1799" = type { %"class.WTF::HashMap.1802" }
%"class.WTF::HashMap.1802" = type { %"class.WTF::HashTable.1803" }
%"class.WTF::HashTable.1803" = type <{ %"struct.WTF::KeyValuePair.1805"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1805" = type opaque
%"class.blink::HeapObserverSet.1806" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1807" }
%"class.blink::HeapHashSet.1807" = type { %"class.WTF::HashSet.1810" }
%"class.WTF::HashSet.1810" = type { %"class.WTF::HashTable.1811" }
%"class.WTF::HashTable.1811" = type <{ %"class.blink::WeakMember.1813"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1813" = type opaque
%"class.blink::Member.1814" = type { %"class.blink::MemberBase.1815" }
%"class.blink::MemberBase.1815" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1816" = type { %"class.blink::MemberBase.1817" }
%"class.blink::MemberBase.1817" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.660", %"class.blink::HeapHashSet.1823", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1830", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1823" = type { %"class.WTF::HashSet.1826" }
%"class.WTF::HashSet.1826" = type { %"class.WTF::HashTable.1827" }
%"class.WTF::HashTable.1827" = type <{ %"class.blink::Member.1829"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1829" = type opaque
%"class.blink::HeapTaskRunnerTimer.1830" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1831", { i64, i64 } }
%"class.blink::WeakMember.1831" = type { %"class.blink::MemberBase.1817" }
%"class.blink::WeakMember.1818" = type { %"class.blink::MemberBase.798" }
%"class.blink::Member.1819" = type { %"class.blink::MemberBase.1820" }
%"class.blink::MemberBase.1820" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.662" = type { %"class.blink::MemberBase.663" }
%"class.blink::MemberBase.663" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.682 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.684", i64, %"class.WTF::Vector.688", %"class.WTF::Vector.693", %"class.WTF::Vector.699", %"class.WTF::Vector.717", %class.scoped_refptr.270, %"class.WTF::HashMap.723", %"class.WTF::Vector.728", %"class.WTF::Vector.688", %"class.WTF::Vector.734", %"class.WTF::HashMap.739", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.683" }
%"class.base::RefCountedThreadSafe.683" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { i8* }
%"class.WTF::Vector.693" = type { %"class.WTF::VectorBuffer.694" }
%"class.WTF::VectorBuffer.694" = type { %"class.WTF::VectorBufferBase.695", [8 x i8] }
%"class.WTF::VectorBufferBase.695" = type { %class.scoped_refptr.696*, i32, i32 }
%class.scoped_refptr.696 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.699" = type { %"class.WTF::VectorBuffer.700" }
%"class.WTF::VectorBuffer.700" = type { %"class.WTF::VectorBufferBase.701" }
%"class.WTF::VectorBufferBase.701" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.703", %"class.std::__1::unique_ptr.709" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.702 }
%class.scoped_refptr.702 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.717" = type { %"class.WTF::VectorBuffer.718" }
%"class.WTF::VectorBuffer.718" = type { %"class.WTF::VectorBufferBase.719" }
%"class.WTF::VectorBufferBase.719" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.720", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.720" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.723" = type { %"class.WTF::HashTable.724" }
%"class.WTF::HashTable.724" = type <{ %"struct.WTF::KeyValuePair.727"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.727" = type opaque
%"class.WTF::Vector.728" = type { %"class.WTF::VectorBuffer.729" }
%"class.WTF::VectorBuffer.729" = type { %"class.WTF::VectorBufferBase.730" }
%"class.WTF::VectorBufferBase.730" = type { %"class.mojo::ScopedHandleBase.731"*, i32, i32 }
%"class.mojo::ScopedHandleBase.731" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.688" = type { %"class.WTF::VectorBuffer.689" }
%"class.WTF::VectorBuffer.689" = type { %"class.WTF::VectorBufferBase.690", [16 x i8] }
%"class.WTF::VectorBufferBase.690" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.734" = type { %"class.WTF::VectorBuffer.735" }
%"class.WTF::VectorBuffer.735" = type { %"class.WTF::VectorBufferBase.736" }
%"class.WTF::VectorBufferBase.736" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.739" = type { %"class.WTF::HashTable.740" }
%"class.WTF::HashTable.740" = type <{ %"struct.WTF::KeyValuePair.743"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.743" = type { i8**, %"class.std::__1::unique_ptr.744" }
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.750" = type { %"class.WTF::HashSet.753" }
%"class.WTF::HashSet.753" = type { %"class.WTF::HashTable.754" }
%"class.WTF::HashTable.754" = type <{ %"class.blink::WeakMember.756"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.756" = type opaque
%"class.blink::Member.757" = type { %"class.blink::MemberBase.758" }
%"class.blink::MemberBase.758" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.764", %"class.blink::Member.764", %"class.blink::Member.766", %"class.blink::Member.768", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.759" }
%"class.absl::optional.759" = type { %"class.absl::optional_internal::optional_data.760" }
%"class.absl::optional_internal::optional_data.760" = type { %"class.absl::optional_internal::optional_data_base.761" }
%"class.absl::optional_internal::optional_data_base.761" = type { %"class.absl::optional_internal::optional_data_dtor_base.762" }
%"class.absl::optional_internal::optional_data_dtor_base.762" = type { i8, %union.anon.763 }
%union.anon.763 = type { i64 }
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::Event"* }
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.770" = type { %"class.WTF::HashMap.773" }
%"class.WTF::HashMap.773" = type { %"class.WTF::HashTable.774" }
%"class.WTF::HashTable.774" = type <{ %"struct.WTF::KeyValuePair.776"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.776" = type opaque
%"class.std::__1::unique_ptr.777" = type { %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.793", %"class.blink::CachedTextInputInfo", %"class.blink::Member.812", %"class.blink::Member.814", i8, i32 }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.795", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.805", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.805" = type { %"class.WTF::HashMap.808" }
%"class.WTF::HashMap.808" = type { %"class.WTF::HashTable.809" }
%"class.WTF::HashTable.809" = type <{ %"struct.WTF::KeyValuePair.811"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.811" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.797", i32, i32 }
%"class.blink::Member.814" = type { %"class.blink::MemberBase.815" }
%"class.blink::MemberBase.815" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.816" = type { %"class.blink::MemberBase.817" }
%"class.blink::MemberBase.817" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.820", %"class.blink::Member.822", %"class.blink::Member.824" }
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.826" = type { %"class.blink::MemberBase.827" }
%"class.blink::MemberBase.827" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.820", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.830" }
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.832" = type { %"class.blink::MemberBase.833" }
%"class.blink::MemberBase.833" = type { %"class.blink::HeapHashMap.834"* }
%"class.blink::HeapHashMap.834" = type opaque
%"class.WTF::Vector.835" = type { %"class.WTF::VectorBuffer.836" }
%"class.WTF::VectorBuffer.836" = type { %"class.WTF::VectorBufferBase.837" }
%"class.WTF::VectorBufferBase.837" = type { i8*, i32, i32 }
%"class.util::TokenType.547" = type { %"class.base::StrongAlias.548" }
%"class.base::StrongAlias.548" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.840" = type { %"class.WTF::HashTable.841" }
%"class.WTF::HashTable.841" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.844" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.847" }
%"class.WTF::VectorBuffer.847" = type { %"class.WTF::VectorBufferBase.848" }
%"class.WTF::VectorBufferBase.848" = type { i64*, i32, i32 }
%"class.v8::Value" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::(anonymous namespace)::NewCdmResultPromise" = type { %"class.blink::ContentDecryptionModuleResultPromise.base", %"class.blink::WebVector.21" }
%"class.blink::ContentDecryptionModuleResultPromise.base" = type <{ %"class.blink::ContentDecryptionModuleResult", %"class.blink::Member.240", i32 }>
%"class.blink::WebContentDecryptionModule" = type { i32 (...)** }
%"class.blink::MediaKeys" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::WebVector.21", %"class.std::__1::unique_ptr.1849", %"class.blink::WeakMember.1855", i8, %"class.blink::HeapDeque", %"class.blink::HeapTaskRunnerTimer.1865" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.1849" = type { %"class.std::__1::__compressed_pair.1850" }
%"class.std::__1::__compressed_pair.1850" = type { %"struct.std::__1::__compressed_pair_elem.1851" }
%"struct.std::__1::__compressed_pair_elem.1851" = type { %"class.blink::WebContentDecryptionModule"* }
%"class.blink::WeakMember.1855" = type { %"class.blink::MemberBase.1856" }
%"class.blink::MemberBase.1856" = type { %"class.blink::HTMLMediaElement"* }
%"class.blink::HTMLMediaElement" = type opaque
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.1859" }
%"class.WTF::Deque.1859" = type { %"class.WTF::Deque<blink::Member<blink::MediaKeys::PendingAction>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::MediaKeys::PendingAction>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1861" }
%"class.WTF::VectorBuffer.1861" = type { %"class.WTF::VectorBufferBase.1862" }
%"class.WTF::VectorBufferBase.1862" = type { %"class.blink::Member.1863"*, i32, i32 }
%"class.blink::Member.1863" = type { %"class.blink::MemberBase.1864" }
%"class.blink::MemberBase.1864" = type { %"class.blink::MediaKeys::PendingAction"* }
%"class.blink::MediaKeys::PendingAction" = type opaque
%"class.blink::HeapTaskRunnerTimer.1865" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1866", { i64, i64 } }
%"class.blink::WeakMember.1866" = type { %"class.blink::MemberBase.1867" }
%"class.blink::MemberBase.1867" = type { %"class.blink::MediaKeys"* }
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local.479" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local.479" = type { %"class.v8::Context"* }
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>

$_ZN5blink30WebMediaKeySystemConfigurationD2Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink20MediaKeySystemAccess18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_29MediaKeySystemMediaCapabilityEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_29MediaKeySystemMediaCapabilityEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_29ContentDecryptionModuleResultEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_29ContentDecryptionModuleResultEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_29ContentDecryptionModuleResultEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_29ContentDecryptionModuleResultEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_9MediaKeysEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_29ContentDecryptionModuleResultEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_29ContentDecryptionModuleResultEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink20MediaKeySystemAccessE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::MediaKeySystemAccess"*)* @_ZN5blink20MediaKeySystemAccessD2Ev to i8*), i8* bitcast (void (%"class.blink::MediaKeySystemAccess"*)* @_ZN5blink20MediaKeySystemAccessD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::MediaKeySystemAccess"*)* @_ZNK5blink20MediaKeySystemAccess18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"cenc\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"cbcs\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"cbcs-1-9\00", align 1
@.str.10 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.12 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_29MediaKeySystemMediaCapabilityEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [199 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::MediaKeySystemMediaCapability>, WTF::VectorTraits<blink::Member<blink::MediaKeySystemMediaCapability> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZZN5blink12_GLOBAL__N_113ReportMetricsEPNS_16ExecutionContextERKN3WTF6StringEE18kWidevineKeySystem = internal constant [19 x i8] c"com.widevine.alpha\00", align 16
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink20MediaKeySystemAccess18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink29ContentDecryptionModuleResultEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ContentDecryptionModuleResult]\00", align 1
@_ZZN5blink11GCInfoTraitINS_29ContentDecryptionModuleResultEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_29ContentDecryptionModuleResultEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_29ContentDecryptionModuleResultEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_29ContentDecryptionModuleResultEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_29ContentDecryptionModuleResultEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink12_GLOBAL__N_119NewCdmResultPromiseE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::NewCdmResultPromise"*)* @_ZN5blink12_GLOBAL__N_119NewCdmResultPromiseD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::NewCdmResultPromise"*)* @_ZN5blink12_GLOBAL__N_119NewCdmResultPromiseD0Ev to i8*), i8* bitcast (void (%"class.blink::ContentDecryptionModuleResultPromise"*)* @_ZN5blink36ContentDecryptionModuleResultPromise8CompleteEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::NewCdmResultPromise"*, %"class.blink::WebContentDecryptionModule"*)* @_ZN5blink12_GLOBAL__N_119NewCdmResultPromise35CompleteWithContentDecryptionModuleEPNS_26WebContentDecryptionModuleE to i8*), i8* bitcast (void (%"class.blink::ContentDecryptionModuleResultPromise"*, i32)* @_ZN5blink36ContentDecryptionModuleResultPromise19CompleteWithSessionENS_32WebContentDecryptionModuleResult13SessionStatusE to i8*), i8* bitcast (void (%"class.blink::ContentDecryptionModuleResultPromise"*, i32)* @_ZN5blink36ContentDecryptionModuleResultPromise21CompleteWithKeyStatusENS_31WebEncryptedMediaKeyInformation9KeyStatusE to i8*), i8* bitcast (void (%"class.blink::ContentDecryptionModuleResultPromise"*, i32, i32, %"class.blink::WebString"*)* @_ZN5blink36ContentDecryptionModuleResultPromise17CompleteWithErrorENS_35WebContentDecryptionModuleExceptionEjRKNS_9WebStringE to i8*), i8* bitcast (void (%"class.blink::ContentDecryptionModuleResultPromise"*, %"class.blink::Visitor"*)* @_ZNK5blink36ContentDecryptionModuleResultPromise5TraceEPNS_7VisitorE to i8*)] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.14 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E = external local_unnamed_addr global i32, align 4

@_ZN5blink20MediaKeySystemAccessC1ERKN3WTF6StringENSt3__110unique_ptrINS_32WebContentDecryptionModuleAccessENS5_14default_deleteIS7_EEEE = hidden unnamed_addr alias void (%"class.blink::MediaKeySystemAccess"*, %"class.WTF::String"*, %"class.blink::WebContentDecryptionModuleAccess"*), void (%"class.blink::MediaKeySystemAccess"*, %"class.WTF::String"*, %"class.blink::WebContentDecryptionModuleAccess"*)* @_ZN5blink20MediaKeySystemAccessC2ERKN3WTF6StringENSt3__110unique_ptrINS_32WebContentDecryptionModuleAccessENS5_14default_deleteIS7_EEEE
@_ZN5blink20MediaKeySystemAccessD1Ev = hidden unnamed_addr alias void (%"class.blink::MediaKeySystemAccess"*), void (%"class.blink::MediaKeySystemAccess"*)* @_ZN5blink20MediaKeySystemAccessD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20MediaKeySystemAccessC2ERKN3WTF6StringENSt3__110unique_ptrINS_32WebContentDecryptionModuleAccessENS5_14default_deleteIS7_EEEE(%"class.blink::MediaKeySystemAccess"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::WebContentDecryptionModuleAccess"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::WebContentDecryptionModuleAccess"* %2 to i64
  %5 = getelementptr inbounds %"class.blink::MediaKeySystemAccess", %"class.blink::MediaKeySystemAccess"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::MediaKeySystemAccess", %"class.blink::MediaKeySystemAccess"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink20MediaKeySystemAccessE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::MediaKeySystemAccess", %"class.blink::MediaKeySystemAccess"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #10
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #10
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.blink::MediaKeySystemAccess", %"class.blink::MediaKeySystemAccess"* %0, i64 0, i32 2
  %30 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  store i64 %4, i64* %30, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20MediaKeySystemAccessD2Ev(%"class.blink::MediaKeySystemAccess"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaKeySystemAccess", %"class.blink::MediaKeySystemAccess"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink20MediaKeySystemAccessE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MediaKeySystemAccess", %"class.blink::MediaKeySystemAccess"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::WebContentDecryptionModuleAccess"*, %"class.blink::WebContentDecryptionModuleAccess"** %3, align 8
  store %"class.blink::WebContentDecryptionModuleAccess"* null, %"class.blink::WebContentDecryptionModuleAccess"** %3, align 8
  %5 = icmp eq %"class.blink::WebContentDecryptionModuleAccess"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::WebContentDecryptionModuleAccess"* %4 to void (%"class.blink::WebContentDecryptionModuleAccess"*)***
  %8 = load void (%"class.blink::WebContentDecryptionModuleAccess"*)**, void (%"class.blink::WebContentDecryptionModuleAccess"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::WebContentDecryptionModuleAccess"*)*, void (%"class.blink::WebContentDecryptionModuleAccess"*)** %8, i64 1
  %10 = load void (%"class.blink::WebContentDecryptionModuleAccess"*)*, void (%"class.blink::WebContentDecryptionModuleAccess"*)** %9, align 8
  tail call void %10(%"class.blink::WebContentDecryptionModuleAccess"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::MediaKeySystemAccess", %"class.blink::MediaKeySystemAccess"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #10
  br label %28

28:                                               ; preds = %11, %24, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20MediaKeySystemAccessD0Ev(%"class.blink::MediaKeySystemAccess"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaKeySystemAccess", %"class.blink::MediaKeySystemAccess"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink20MediaKeySystemAccessE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MediaKeySystemAccess", %"class.blink::MediaKeySystemAccess"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::WebContentDecryptionModuleAccess"*, %"class.blink::WebContentDecryptionModuleAccess"** %3, align 8
  store %"class.blink::WebContentDecryptionModuleAccess"* null, %"class.blink::WebContentDecryptionModuleAccess"** %3, align 8
  %5 = icmp eq %"class.blink::WebContentDecryptionModuleAccess"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::WebContentDecryptionModuleAccess"* %4 to void (%"class.blink::WebContentDecryptionModuleAccess"*)***
  %8 = load void (%"class.blink::WebContentDecryptionModuleAccess"*)**, void (%"class.blink::WebContentDecryptionModuleAccess"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::WebContentDecryptionModuleAccess"*)*, void (%"class.blink::WebContentDecryptionModuleAccess"*)** %8, i64 1
  %10 = load void (%"class.blink::WebContentDecryptionModuleAccess"*)*, void (%"class.blink::WebContentDecryptionModuleAccess"*)** %9, align 8
  tail call void %10(%"class.blink::WebContentDecryptionModuleAccess"* nonnull %4) #10
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.blink::MediaKeySystemAccess", %"class.blink::MediaKeySystemAccess"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #10
  br label %28

28:                                               ; preds = %11, %24, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaKeySystemConfiguration"* @_ZNK5blink20MediaKeySystemAccess16getConfigurationEv(%"class.blink::MediaKeySystemAccess"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::WebMediaKeySystemConfiguration", align 8
  %3 = alloca %"class.WTF::Vector.6", align 8
  %4 = alloca %"class.blink::HeapVector", align 8
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.WTF::Vector.6", align 8
  %7 = bitcast %"struct.blink::WebMediaKeySystemConfiguration"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 112, i1 false)
  %8 = getelementptr inbounds %"class.blink::MediaKeySystemAccess", %"class.blink::MediaKeySystemAccess"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.blink::WebContentDecryptionModuleAccess"*, %"class.blink::WebContentDecryptionModuleAccess"** %8, align 8
  %10 = bitcast %"class.blink::WebContentDecryptionModuleAccess"* %9 to void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)***
  %11 = load void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)**, void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)*, void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)** %11, i64 3
  %13 = load void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)*, void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)** %12, align 8
  call void %13(%"struct.blink::WebMediaKeySystemConfiguration"* nonnull sret %2, %"class.blink::WebContentDecryptionModuleAccess"* %9) #10
  %14 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 104) #10
  %15 = bitcast i8* %14 to %"class.blink::MediaKeySystemConfiguration"*
  call void @_ZN5blink27MediaKeySystemConfigurationC1Ev(%"class.blink::MediaKeySystemConfiguration"* %15) #10
  %16 = getelementptr inbounds i8, i8* %14, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %23 = load i32*, i32** %22, align 8
  %24 = icmp eq i32* %21, %23
  br i1 %24, label %117, label %25

25:                                               ; preds = %1
  %26 = ptrtoint i32* %21 to i64
  %27 = ptrtoint i32* %23 to i64
  %28 = bitcast %"class.WTF::Vector.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %3, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false) #10, !alias.scope !3
  %31 = sub i64 %27, %26
  %32 = ashr exact i64 %31, 2
  %33 = icmp ult i64 %32, 4294967296
  br i1 %33, label %35, label %34, !prof !6

34:                                               ; preds = %25
  call void @llvm.trap() #10
  unreachable

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %3, i64 0, i32 0, i32 0, i32 0
  %37 = trunc i64 %32 to i32
  store %"class.WTF::String"* null, %"class.WTF::String"** %36, align 8, !alias.scope !3
  store i32 0, i32* %29, align 8, !alias.scope !3
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  store i32 0, i32* %30, align 4, !alias.scope !3
  br label %80

40:                                               ; preds = %35
  %41 = and i64 %32, 4294967295
  %42 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %41) #10
  %43 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %42, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %44 = ptrtoint i8* %43 to i64
  %45 = bitcast %"class.WTF::Vector.6"* %3 to i64*
  store atomic i64 %44, i64* %45 monotonic, align 8, !alias.scope !3
  %46 = lshr i64 %42, 3
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %29, align 8, !alias.scope !3
  %48 = shl nuw nsw i64 %41, 3
  store i32 %37, i32* %30, align 4, !alias.scope !3
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 %48, i1 false) #10, !noalias !3
  br label %49

49:                                               ; preds = %75, %40
  %50 = phi i64 [ 0, %40 ], [ %76, %75 ]
  %51 = load i32*, i32** %20, align 8, !noalias !3
  %52 = getelementptr inbounds i32, i32* %51, i64 %50
  %53 = load i32, i32* %52, align 4
  %54 = call %"class.WTF::StringImpl"* @_ZN5blink19EncryptedMediaUtils23ConvertFromInitDataTypeEN5media15EmeInitDataTypeE(i32 %53) #10
  %55 = ptrtoint %"class.WTF::StringImpl"* %54 to i64
  %56 = trunc i64 %50 to i32
  %57 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* nonnull %3, i32 %56) #10
  %58 = bitcast %"class.WTF::String"* %57 to i64*
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  store i64 %55, i64* %58, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %49
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %74, %71, %49
  %76 = add nuw nsw i64 %50, 1
  %77 = load i32, i32* %30, align 4, !alias.scope !3
  %78 = zext i32 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %49, label %80

80:                                               ; preds = %75, %39
  call void @_ZN5blink27MediaKeySystemConfiguration16setInitDataTypesERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaKeySystemConfiguration"* %15, %"class.WTF::Vector.6"* nonnull dereferenceable(16) %3) #10
  %81 = load %"class.WTF::String"*, %"class.WTF::String"** %36, align 8
  %82 = icmp eq %"class.WTF::String"* %81, null
  br i1 %82, label %116, label %83, !prof !6

83:                                               ; preds = %80
  %84 = bitcast %"class.WTF::String"* %81 to i8*
  %85 = load i32, i32* %30, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %114, label %87, !prof !2

87:                                               ; preds = %83
  %88 = zext i32 %85 to i64
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 %88
  br label %90

90:                                               ; preds = %108, %87
  %91 = phi %"class.WTF::String"* [ %109, %108 ], [ %81, %87 ]
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %91, i64 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #10
  br label %108

108:                                              ; preds = %107, %104, %90
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %91, i64 1
  %110 = icmp eq %"class.WTF::String"* %109, %89
  br i1 %110, label %111, label %90

111:                                              ; preds = %108
  store i32 0, i32* %30, align 4
  %112 = bitcast %"class.WTF::Vector.6"* %3 to i8**
  %113 = load i8*, i8** %112, align 8
  br label %114

114:                                              ; preds = %111, %83
  %115 = phi i8* [ %113, %111 ], [ %84, %83 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %115) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %36, align 8
  br label %116

116:                                              ; preds = %80, %114
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #10
  br label %117

117:                                              ; preds = %116, %1
  %118 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %2, i64 0, i32 2
  %119 = getelementptr inbounds %"class.blink::WebVector.13", %"class.blink::WebVector.13"* %118, i64 0, i32 0, i32 0, i32 0
  %120 = load %"struct.blink::WebMediaKeySystemMediaCapability"*, %"struct.blink::WebMediaKeySystemMediaCapability"** %119, align 8
  %121 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %122 = load %"struct.blink::WebMediaKeySystemMediaCapability"*, %"struct.blink::WebMediaKeySystemMediaCapability"** %121, align 8
  %123 = icmp eq %"struct.blink::WebMediaKeySystemMediaCapability"* %120, %122
  br i1 %123, label %126, label %124

124:                                              ; preds = %117
  %125 = bitcast %"class.blink::HeapVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #10
  call fastcc void @_ZN5blink12_GLOBAL__N_119ConvertCapabilitiesERKNS_9WebVectorINS_32WebMediaKeySystemMediaCapabilityEEE(%"class.blink::HeapVector"* nonnull sret %4, %"class.blink::WebVector.13"* dereferenceable(24) %118)
  call void @_ZN5blink27MediaKeySystemConfiguration20setAudioCapabilitiesERKNS_10HeapVectorINS_6MemberINS_29MediaKeySystemMediaCapabilityEEELj0EEE(%"class.blink::MediaKeySystemConfiguration"* %15, %"class.blink::HeapVector"* nonnull dereferenceable(16) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #10
  br label %126

126:                                              ; preds = %124, %117
  %127 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %2, i64 0, i32 3
  %128 = getelementptr inbounds %"class.blink::WebVector.13", %"class.blink::WebVector.13"* %127, i64 0, i32 0, i32 0, i32 0
  %129 = load %"struct.blink::WebMediaKeySystemMediaCapability"*, %"struct.blink::WebMediaKeySystemMediaCapability"** %128, align 8
  %130 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %2, i64 0, i32 3, i32 0, i32 0, i32 1
  %131 = load %"struct.blink::WebMediaKeySystemMediaCapability"*, %"struct.blink::WebMediaKeySystemMediaCapability"** %130, align 8
  %132 = icmp eq %"struct.blink::WebMediaKeySystemMediaCapability"* %129, %131
  br i1 %132, label %135, label %133

133:                                              ; preds = %126
  %134 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %134) #10
  call fastcc void @_ZN5blink12_GLOBAL__N_119ConvertCapabilitiesERKNS_9WebVectorINS_32WebMediaKeySystemMediaCapabilityEEE(%"class.blink::HeapVector"* nonnull sret %5, %"class.blink::WebVector.13"* dereferenceable(24) %127)
  call void @_ZN5blink27MediaKeySystemConfiguration20setVideoCapabilitiesERKNS_10HeapVectorINS_6MemberINS_29MediaKeySystemMediaCapabilityEEELj0EEE(%"class.blink::MediaKeySystemConfiguration"* %15, %"class.blink::HeapVector"* nonnull dereferenceable(16) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %134) #10
  br label %135

135:                                              ; preds = %133, %126
  %136 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %2, i64 0, i32 4
  %137 = load i32, i32* %136, align 8
  %138 = call %"class.WTF::StringImpl"* @_ZN5blink19EncryptedMediaUtils35ConvertMediaKeysRequirementToStringENS_30WebMediaKeySystemConfiguration11RequirementE(i32 %137) #10
  %139 = getelementptr inbounds i8, i8* %14, i64 32
  %140 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %140, label %158, label %141

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %158

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = zext i32 %148 to i33
  %150 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %149, i33 1) #10
  %151 = extractvalue { i33, i1 } %150, 1
  %152 = extractvalue { i33, i1 } %150, 0
  %153 = icmp slt i33 %152, 0
  %154 = or i1 %151, %153
  br i1 %154, label %155, label %156, !prof !2

155:                                              ; preds = %146
  call void @llvm.trap() #10
  unreachable

156:                                              ; preds = %146
  %157 = trunc i33 %152 to i32
  store i32 %157, i32* %147, align 4
  br label %158

158:                                              ; preds = %156, %141, %135
  %159 = ptrtoint %"class.WTF::StringImpl"* %138 to i64
  %160 = bitcast i8* %139 to i64*
  %161 = bitcast i8* %139 to %"class.WTF::StringImpl"**
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  store i64 %159, i64* %160, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #10
  br label %177

177:                                              ; preds = %158, %173, %176
  br i1 %140, label %191, label %178

178:                                              ; preds = %177
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #10
  br label %191

191:                                              ; preds = %177, %187, %190
  %192 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %2, i64 0, i32 5
  %193 = load i32, i32* %192, align 4
  %194 = call %"class.WTF::StringImpl"* @_ZN5blink19EncryptedMediaUtils35ConvertMediaKeysRequirementToStringENS_30WebMediaKeySystemConfiguration11RequirementE(i32 %193) #10
  %195 = getelementptr inbounds i8, i8* %14, i64 64
  %196 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %196, label %214, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %214

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = zext i32 %204 to i33
  %206 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %205, i33 1) #10
  %207 = extractvalue { i33, i1 } %206, 1
  %208 = extractvalue { i33, i1 } %206, 0
  %209 = icmp slt i33 %208, 0
  %210 = or i1 %207, %209
  br i1 %210, label %211, label %212, !prof !2

211:                                              ; preds = %202
  call void @llvm.trap() #10
  unreachable

212:                                              ; preds = %202
  %213 = trunc i33 %208 to i32
  store i32 %213, i32* %203, align 4
  br label %214

214:                                              ; preds = %212, %197, %191
  %215 = ptrtoint %"class.WTF::StringImpl"* %194 to i64
  %216 = bitcast i8* %195 to i64*
  %217 = bitcast i8* %195 to %"class.WTF::StringImpl"**
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %217, align 8
  store i64 %215, i64* %216, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %219, label %233, label %220

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %220
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %220
  %230 = phi i32 [ %228, %227 ], [ %226, %220 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #10
  br label %233

233:                                              ; preds = %214, %229, %232
  br i1 %196, label %247, label %234

234:                                              ; preds = %233
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %194) #10
  br label %247

247:                                              ; preds = %233, %243, %246
  %248 = bitcast %"class.WTF::Vector.6"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %248) #10
  %249 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %2, i64 0, i32 6
  %250 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %6, i64 0, i32 0, i32 0, i32 1
  %251 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %6, i64 0, i32 0, i32 0, i32 2
  %252 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %2, i64 0, i32 6, i32 0, i32 0, i32 1
  %253 = bitcast i32** %252 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %248, i8 -86, i64 16, i1 false) #10, !alias.scope !7
  %254 = load i64, i64* %253, align 8, !noalias !7
  %255 = bitcast %"class.blink::WebVector.21"* %249 to i64*
  %256 = load i64, i64* %255, align 8, !noalias !7
  %257 = sub i64 %254, %256
  %258 = ashr exact i64 %257, 2
  %259 = icmp ult i64 %258, 4294967296
  br i1 %259, label %261, label %260, !prof !6

260:                                              ; preds = %247
  call void @llvm.trap() #10
  unreachable

261:                                              ; preds = %247
  %262 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %6, i64 0, i32 0, i32 0, i32 0
  %263 = trunc i64 %258 to i32
  store %"class.WTF::String"* null, %"class.WTF::String"** %262, align 8, !alias.scope !7
  store i32 0, i32* %250, align 8, !alias.scope !7
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %261
  store i32 0, i32* %251, align 4, !alias.scope !7
  br label %307

266:                                              ; preds = %261
  %267 = and i64 %258, 4294967295
  %268 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %267) #10
  %269 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %268, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %270 = ptrtoint i8* %269 to i64
  %271 = bitcast %"class.WTF::Vector.6"* %6 to i64*
  store atomic i64 %270, i64* %271 monotonic, align 8, !alias.scope !7
  %272 = lshr i64 %268, 3
  %273 = trunc i64 %272 to i32
  store i32 %273, i32* %250, align 8, !alias.scope !7
  %274 = shl nuw nsw i64 %267, 3
  store i32 %263, i32* %251, align 4, !alias.scope !7
  call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 0, i64 %274, i1 false) #10, !noalias !7
  %275 = getelementptr inbounds %"class.blink::WebVector.21", %"class.blink::WebVector.21"* %249, i64 0, i32 0, i32 0, i32 0
  br label %276

276:                                              ; preds = %302, %266
  %277 = phi i64 [ 0, %266 ], [ %303, %302 ]
  %278 = load i32*, i32** %275, align 8, !noalias !7
  %279 = getelementptr inbounds i32, i32* %278, i64 %277
  %280 = load i32, i32* %279, align 4
  %281 = call %"class.WTF::StringImpl"* @_ZN5blink19EncryptedMediaUtils22ConvertFromSessionTypeENS_28WebEncryptedMediaSessionTypeE(i32 %280) #10
  %282 = ptrtoint %"class.WTF::StringImpl"* %281 to i64
  %283 = trunc i64 %277 to i32
  %284 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* nonnull %6, i32 %283) #10
  %285 = bitcast %"class.WTF::String"* %284 to i64*
  %286 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %284, i64 0, i32 0, i32 0
  %287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %286, align 8
  store i64 %282, i64* %285, align 8
  %288 = icmp eq %"class.WTF::StringImpl"* %287, null
  br i1 %288, label %302, label %289

289:                                              ; preds = %276
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  br i1 %293, label %296, label %298

296:                                              ; preds = %289
  %297 = add i32 %295, -1
  store i32 %297, i32* %294, align 4
  br label %298

298:                                              ; preds = %296, %289
  %299 = phi i32 [ %297, %296 ], [ %295, %289 ]
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %302

301:                                              ; preds = %298
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %287) #10
  br label %302

302:                                              ; preds = %301, %298, %276
  %303 = add nuw nsw i64 %277, 1
  %304 = load i32, i32* %251, align 4, !alias.scope !7
  %305 = zext i32 %304 to i64
  %306 = icmp ult i64 %303, %305
  br i1 %306, label %276, label %307

307:                                              ; preds = %302, %265
  call void @_ZN5blink27MediaKeySystemConfiguration15setSessionTypesERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaKeySystemConfiguration"* %15, %"class.WTF::Vector.6"* nonnull dereferenceable(16) %6) #10
  %308 = load %"class.WTF::String"*, %"class.WTF::String"** %262, align 8
  %309 = icmp eq %"class.WTF::String"* %308, null
  br i1 %309, label %343, label %310, !prof !6

310:                                              ; preds = %307
  %311 = bitcast %"class.WTF::String"* %308 to i8*
  %312 = load i32, i32* %251, align 4
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %341, label %314, !prof !2

314:                                              ; preds = %310
  %315 = zext i32 %312 to i64
  %316 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %308, i64 %315
  br label %317

317:                                              ; preds = %335, %314
  %318 = phi %"class.WTF::String"* [ %336, %335 ], [ %308, %314 ]
  %319 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %319, align 8
  %321 = icmp eq %"class.WTF::StringImpl"* %320, null
  br i1 %321, label %335, label %322

322:                                              ; preds = %317
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = and i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  br i1 %326, label %329, label %331

329:                                              ; preds = %322
  %330 = add i32 %328, -1
  store i32 %330, i32* %327, align 4
  br label %331

331:                                              ; preds = %329, %322
  %332 = phi i32 [ %330, %329 ], [ %328, %322 ]
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %331
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %320) #10
  br label %335

335:                                              ; preds = %334, %331, %317
  %336 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %318, i64 1
  %337 = icmp eq %"class.WTF::String"* %336, %316
  br i1 %337, label %338, label %317

338:                                              ; preds = %335
  store i32 0, i32* %251, align 4
  %339 = bitcast %"class.WTF::Vector.6"* %6 to i8**
  %340 = load i8*, i8** %339, align 8
  br label %341

341:                                              ; preds = %338, %310
  %342 = phi i8* [ %340, %338 ], [ %311, %310 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %342) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %262, align 8
  br label %343

343:                                              ; preds = %307, %341
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %248) #10
  %344 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %2, i64 0, i32 0
  %345 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %344) #10
  %346 = getelementptr inbounds i8, i8* %14, i64 56
  %347 = icmp eq %"class.WTF::StringImpl"* %345, null
  br i1 %347, label %365, label %348

348:                                              ; preds = %343
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = load atomic i32, i32* %349 monotonic, align 4
  %351 = and i32 %350, 2
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %365

353:                                              ; preds = %348
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 0
  %355 = load i32, i32* %354, align 4
  %356 = zext i32 %355 to i33
  %357 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %356, i33 1) #10
  %358 = extractvalue { i33, i1 } %357, 1
  %359 = extractvalue { i33, i1 } %357, 0
  %360 = icmp slt i33 %359, 0
  %361 = or i1 %358, %360
  br i1 %361, label %362, label %363, !prof !2

362:                                              ; preds = %353
  call void @llvm.trap() #10
  unreachable

363:                                              ; preds = %353
  %364 = trunc i33 %359 to i32
  store i32 %364, i32* %354, align 4
  br label %365

365:                                              ; preds = %363, %348, %343
  %366 = ptrtoint %"class.WTF::StringImpl"* %345 to i64
  %367 = bitcast i8* %346 to i64*
  %368 = bitcast i8* %346 to %"class.WTF::StringImpl"**
  %369 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %368, align 8
  store i64 %366, i64* %367, align 8
  %370 = icmp eq %"class.WTF::StringImpl"* %369, null
  br i1 %370, label %384, label %371

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %369, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load atomic i32, i32* %372 monotonic, align 4
  %374 = and i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %369, i64 0, i32 0
  %377 = load i32, i32* %376, align 4
  br i1 %375, label %378, label %380

378:                                              ; preds = %371
  %379 = add i32 %377, -1
  store i32 %379, i32* %376, align 4
  br label %380

380:                                              ; preds = %378, %371
  %381 = phi i32 [ %379, %378 ], [ %377, %371 ]
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %384

383:                                              ; preds = %380
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %369) #10
  br label %384

384:                                              ; preds = %365, %380, %383
  br i1 %347, label %398, label %385

385:                                              ; preds = %384
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = and i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 0
  %391 = load i32, i32* %390, align 4
  br i1 %389, label %392, label %394

392:                                              ; preds = %385
  %393 = add i32 %391, -1
  store i32 %393, i32* %390, align 4
  br label %394

394:                                              ; preds = %392, %385
  %395 = phi i32 [ %393, %392 ], [ %391, %385 ]
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %398

397:                                              ; preds = %394
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %345) #10
  br label %398

398:                                              ; preds = %384, %394, %397
  call void @_ZN5blink30WebMediaKeySystemConfigurationD2Ev(%"struct.blink::WebMediaKeySystemConfiguration"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %7) #10
  ret %"class.blink::MediaKeySystemConfiguration"* %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink27MediaKeySystemConfiguration16setInitDataTypesERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaKeySystemConfiguration"*, %"class.WTF::Vector.6"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink27MediaKeySystemConfiguration20setAudioCapabilitiesERKNS_10HeapVectorINS_6MemberINS_29MediaKeySystemMediaCapabilityEEELj0EEE(%"class.blink::MediaKeySystemConfiguration"*, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_119ConvertCapabilitiesERKNS_9WebVectorINS_32WebMediaKeySystemMediaCapabilityEEE(%"class.blink::HeapVector"* noalias sret, %"class.blink::WebVector.13"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.blink::WebVector.13", %"class.blink::WebVector.13"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.blink::WebMediaKeySystemMediaCapability"** %8 to i64*
  %10 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load i64, i64* %9, align 8
  %12 = bitcast %"class.blink::WebVector.13"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 40
  %16 = icmp ult i64 %15, 4294967296
  br i1 %16, label %18, label %17, !prof !6

17:                                               ; preds = %2
  tail call void @llvm.trap() #10
  unreachable

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = trunc i64 %15 to i32
  store %"class.blink::Member"* null, %"class.blink::Member"** %19, align 8
  store i32 0, i32* %6, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %37, label %22

22:                                               ; preds = %18
  %23 = and i64 %15, 4294967295
  %24 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEEEmm(i64 %23) #10
  %25 = lshr i64 %24, 3
  %26 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %25) #10
  %27 = ptrtoint %"class.blink::HeapVectorBacking"* %26 to i64
  %28 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = trunc i64 %25 to i32
  store i32 %29, i32* %6, align 8
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %26, i64 0, i32 0
  br i1 %31, label %37, label %33

33:                                               ; preds = %22
  %34 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #10
  %35 = bitcast %"class.blink::HeapVector"* %0 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %18, %22, %33
  %38 = phi i64 [ %23, %22 ], [ %23, %33 ], [ 0, %18 ]
  %39 = phi i8* [ %32, %22 ], [ %36, %33 ], [ null, %18 ]
  store i32 %20, i32* %7, align 4
  %40 = shl nuw nsw i64 %38, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 %40, i1 false) #10
  %41 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %42 = load i32, i32* %7, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::WebVector.13", %"class.blink::WebVector.13"* %1, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.WTF::String"* %5 to i8*
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %48 = bitcast %"class.WTF::String"* %4 to i8*
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %50 = bitcast %"class.WTF::String"* %3 to i8*
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  br label %53

52:                                               ; preds = %375, %37
  ret void

53:                                               ; preds = %44, %375
  %54 = phi i64 [ 0, %44 ], [ %376, %375 ]
  %55 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 32) #10
  %56 = bitcast i8* %55 to %"class.blink::MediaKeySystemMediaCapability"*
  call void @_ZN5blink29MediaKeySystemMediaCapabilityC1Ev(%"class.blink::MediaKeySystemMediaCapability"* %56) #10
  %57 = getelementptr inbounds i8, i8* %55, i64 -4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = or i16 %59, 1
  store atomic i16 %60, i16* %58 release, align 2
  %61 = load %"struct.blink::WebMediaKeySystemMediaCapability"*, %"struct.blink::WebMediaKeySystemMediaCapability"** %45, align 8
  %62 = getelementptr inbounds %"struct.blink::WebMediaKeySystemMediaCapability", %"struct.blink::WebMediaKeySystemMediaCapability"* %61, i64 %54, i32 0
  %63 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %62) #10
  %64 = getelementptr inbounds i8, i8* %55, i64 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %53
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #10
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %71
  call void @llvm.trap() #10
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %81, %66, %53
  %84 = ptrtoint %"class.WTF::StringImpl"* %63 to i64
  %85 = bitcast i8* %64 to i64*
  %86 = bitcast i8* %64 to %"class.WTF::StringImpl"**
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  store i64 %84, i64* %85, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #10
  br label %102

102:                                              ; preds = %83, %98, %101
  br i1 %65, label %116, label %103

103:                                              ; preds = %102
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #10
  br label %116

116:                                              ; preds = %102, %112, %115
  %117 = load %"struct.blink::WebMediaKeySystemMediaCapability"*, %"struct.blink::WebMediaKeySystemMediaCapability"** %45, align 8
  %118 = getelementptr inbounds %"struct.blink::WebMediaKeySystemMediaCapability", %"struct.blink::WebMediaKeySystemMediaCapability"* %117, i64 %54, i32 3
  %119 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %118) #10
  %120 = getelementptr inbounds i8, i8* %55, i64 24
  %121 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %121, label %139, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i33
  %131 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %130, i33 1) #10
  %132 = extractvalue { i33, i1 } %131, 1
  %133 = extractvalue { i33, i1 } %131, 0
  %134 = icmp slt i33 %133, 0
  %135 = or i1 %132, %134
  br i1 %135, label %136, label %137, !prof !2

136:                                              ; preds = %127
  call void @llvm.trap() #10
  unreachable

137:                                              ; preds = %127
  %138 = trunc i33 %133 to i32
  store i32 %138, i32* %128, align 4
  br label %139

139:                                              ; preds = %137, %122, %116
  %140 = ptrtoint %"class.WTF::StringImpl"* %119 to i64
  %141 = bitcast i8* %120 to i64*
  %142 = bitcast i8* %120 to %"class.WTF::StringImpl"**
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  store i64 %140, i64* %141, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #10
  br label %158

158:                                              ; preds = %139, %154, %157
  br i1 %121, label %172, label %159

159:                                              ; preds = %158
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #10
  br label %172

172:                                              ; preds = %158, %168, %171
  %173 = load %"struct.blink::WebMediaKeySystemMediaCapability"*, %"struct.blink::WebMediaKeySystemMediaCapability"** %45, align 8
  %174 = getelementptr inbounds %"struct.blink::WebMediaKeySystemMediaCapability", %"struct.blink::WebMediaKeySystemMediaCapability"* %173, i64 %54, i32 4
  %175 = load i32, i32* %174, align 8
  switch i32 %175, label %366 [
    i32 0, label %176
    i32 1, label %195
    i32 2, label %252
    i32 3, label %309
  ]

176:                                              ; preds = %172
  %177 = getelementptr inbounds i8, i8* %55, i64 16
  %178 = bitcast i8* %177 to i64*
  %179 = bitcast i8* %177 to %"class.WTF::StringImpl"**
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  store i64 0, i64* %178, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %366, label %182

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %366

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #10
  br label %366

195:                                              ; preds = %172
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4) #10
  %196 = getelementptr inbounds i8, i8* %55, i64 16
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %216, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %216

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = zext i32 %206 to i33
  %208 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %207, i33 1) #10
  %209 = extractvalue { i33, i1 } %208, 1
  %210 = extractvalue { i33, i1 } %208, 0
  %211 = icmp slt i33 %210, 0
  %212 = or i1 %209, %211
  br i1 %212, label %213, label %214, !prof !2

213:                                              ; preds = %204
  call void @llvm.trap() #10
  unreachable

214:                                              ; preds = %204
  %215 = trunc i33 %210 to i32
  store i32 %215, i32* %205, align 4
  br label %216

216:                                              ; preds = %214, %199, %195
  %217 = ptrtoint %"class.WTF::StringImpl"* %197 to i64
  %218 = bitcast i8* %196 to i64*
  %219 = bitcast i8* %196 to %"class.WTF::StringImpl"**
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  store i64 %217, i64* %218, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %235, label %222

222:                                              ; preds = %216
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  br i1 %226, label %229, label %231

229:                                              ; preds = %222
  %230 = add i32 %228, -1
  store i32 %230, i32* %227, align 4
  br label %231

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %230, %229 ], [ %228, %222 ]
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #10
  br label %235

235:                                              ; preds = %216, %231, %234
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %251, label %238

238:                                              ; preds = %235
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load atomic i32, i32* %239 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %244 = load i32, i32* %243, align 4
  br i1 %242, label %245, label %247

245:                                              ; preds = %238
  %246 = add i32 %244, -1
  store i32 %246, i32* %243, align 4
  br label %247

247:                                              ; preds = %245, %238
  %248 = phi i32 [ %246, %245 ], [ %244, %238 ]
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %247
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #10
  br label %251

251:                                              ; preds = %235, %247, %250
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #10
  br label %366

252:                                              ; preds = %172
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i64 4) #10
  %253 = getelementptr inbounds i8, i8* %55, i64 16
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %255, label %273, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load atomic i32, i32* %257 monotonic, align 4
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %273

261:                                              ; preds = %256
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  %264 = zext i32 %263 to i33
  %265 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %264, i33 1) #10
  %266 = extractvalue { i33, i1 } %265, 1
  %267 = extractvalue { i33, i1 } %265, 0
  %268 = icmp slt i33 %267, 0
  %269 = or i1 %266, %268
  br i1 %269, label %270, label %271, !prof !2

270:                                              ; preds = %261
  call void @llvm.trap() #10
  unreachable

271:                                              ; preds = %261
  %272 = trunc i33 %267 to i32
  store i32 %272, i32* %262, align 4
  br label %273

273:                                              ; preds = %271, %256, %252
  %274 = ptrtoint %"class.WTF::StringImpl"* %254 to i64
  %275 = bitcast i8* %253 to i64*
  %276 = bitcast i8* %253 to %"class.WTF::StringImpl"**
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %276, align 8
  store i64 %274, i64* %275, align 8
  %278 = icmp eq %"class.WTF::StringImpl"* %277, null
  br i1 %278, label %292, label %279

279:                                              ; preds = %273
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  br i1 %283, label %286, label %288

286:                                              ; preds = %279
  %287 = add i32 %285, -1
  store i32 %287, i32* %284, align 4
  br label %288

288:                                              ; preds = %286, %279
  %289 = phi i32 [ %287, %286 ], [ %285, %279 ]
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %277) #10
  br label %292

292:                                              ; preds = %273, %288, %291
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %308, label %295

295:                                              ; preds = %292
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  br i1 %299, label %302, label %304

302:                                              ; preds = %295
  %303 = add i32 %301, -1
  store i32 %303, i32* %300, align 4
  br label %304

304:                                              ; preds = %302, %295
  %305 = phi i32 [ %303, %302 ], [ %301, %295 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %293) #10
  br label %308

308:                                              ; preds = %292, %304, %307
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  br label %366

309:                                              ; preds = %172
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i64 8) #10
  %310 = getelementptr inbounds i8, i8* %55, i64 16
  %311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %312 = icmp eq %"class.WTF::StringImpl"* %311, null
  br i1 %312, label %330, label %313

313:                                              ; preds = %309
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load atomic i32, i32* %314 monotonic, align 4
  %316 = and i32 %315, 2
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %330

318:                                              ; preds = %313
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  %321 = zext i32 %320 to i33
  %322 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %321, i33 1) #10
  %323 = extractvalue { i33, i1 } %322, 1
  %324 = extractvalue { i33, i1 } %322, 0
  %325 = icmp slt i33 %324, 0
  %326 = or i1 %323, %325
  br i1 %326, label %327, label %328, !prof !2

327:                                              ; preds = %318
  call void @llvm.trap() #10
  unreachable

328:                                              ; preds = %318
  %329 = trunc i33 %324 to i32
  store i32 %329, i32* %319, align 4
  br label %330

330:                                              ; preds = %328, %313, %309
  %331 = ptrtoint %"class.WTF::StringImpl"* %311 to i64
  %332 = bitcast i8* %310 to i64*
  %333 = bitcast i8* %310 to %"class.WTF::StringImpl"**
  %334 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %333, align 8
  store i64 %331, i64* %332, align 8
  %335 = icmp eq %"class.WTF::StringImpl"* %334, null
  br i1 %335, label %349, label %336

336:                                              ; preds = %330
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load atomic i32, i32* %337 monotonic, align 4
  %339 = and i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 0
  %342 = load i32, i32* %341, align 4
  br i1 %340, label %343, label %345

343:                                              ; preds = %336
  %344 = add i32 %342, -1
  store i32 %344, i32* %341, align 4
  br label %345

345:                                              ; preds = %343, %336
  %346 = phi i32 [ %344, %343 ], [ %342, %336 ]
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %349

348:                                              ; preds = %345
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %334) #10
  br label %349

349:                                              ; preds = %330, %345, %348
  %350 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %351 = icmp eq %"class.WTF::StringImpl"* %350, null
  br i1 %351, label %365, label %352

352:                                              ; preds = %349
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %350, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = load atomic i32, i32* %353 monotonic, align 4
  %355 = and i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %350, i64 0, i32 0
  %358 = load i32, i32* %357, align 4
  br i1 %356, label %359, label %361

359:                                              ; preds = %352
  %360 = add i32 %358, -1
  store i32 %360, i32* %357, align 4
  br label %361

361:                                              ; preds = %359, %352
  %362 = phi i32 [ %360, %359 ], [ %358, %352 ]
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %365

364:                                              ; preds = %361
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %350) #10
  br label %365

365:                                              ; preds = %349, %361, %364
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %366

366:                                              ; preds = %176, %191, %194, %172, %365, %308, %251
  %367 = trunc i64 %54 to i32
  %368 = call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_29MediaKeySystemMediaCapabilityEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %41, i32 %367) #10
  %369 = ptrtoint i8* %55 to i64
  %370 = bitcast %"class.blink::Member"* %368 to i64*
  store atomic i64 %369, i64* %370 monotonic, align 8
  %371 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %375, label %373

373:                                              ; preds = %366
  %374 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #10
  br label %375

375:                                              ; preds = %366, %373
  %376 = add nuw nsw i64 %54, 1
  %377 = load i32, i32* %7, align 4
  %378 = zext i32 %377 to i64
  %379 = icmp ult i64 %376, %378
  br i1 %379, label %53, label %52
}

declare void @_ZN5blink27MediaKeySystemConfiguration20setVideoCapabilitiesERKNS_10HeapVectorINS_6MemberINS_29MediaKeySystemMediaCapabilityEEELj0EEE(%"class.blink::MediaKeySystemConfiguration"*, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink19EncryptedMediaUtils35ConvertMediaKeysRequirementToStringENS_30WebMediaKeySystemConfiguration11RequirementE(i32) local_unnamed_addr #2

declare void @_ZN5blink27MediaKeySystemConfiguration15setSessionTypesERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MediaKeySystemConfiguration"*, %"class.WTF::Vector.6"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30WebMediaKeySystemConfigurationD2Ev(%"struct.blink::WebMediaKeySystemConfiguration"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::WebVector.13", %"class.blink::WebVector.13"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"struct.blink::WebMediaKeySystemMediaCapability"*, %"struct.blink::WebMediaKeySystemMediaCapability"** %12, align 8
  %14 = icmp eq %"struct.blink::WebMediaKeySystemMediaCapability"* %13, null
  br i1 %14, label %33, label %15

15:                                               ; preds = %10
  %16 = bitcast %"struct.blink::WebMediaKeySystemMediaCapability"* %13 to i8*
  %17 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %18 = load %"struct.blink::WebMediaKeySystemMediaCapability"*, %"struct.blink::WebMediaKeySystemMediaCapability"** %17, align 8
  %19 = icmp eq %"struct.blink::WebMediaKeySystemMediaCapability"* %18, %13
  br i1 %19, label %31, label %20

20:                                               ; preds = %15, %20
  %21 = phi %"struct.blink::WebMediaKeySystemMediaCapability"* [ %22, %20 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"struct.blink::WebMediaKeySystemMediaCapability", %"struct.blink::WebMediaKeySystemMediaCapability"* %21, i64 -1
  %23 = getelementptr inbounds %"struct.blink::WebMediaKeySystemMediaCapability", %"struct.blink::WebMediaKeySystemMediaCapability"* %21, i64 -1, i32 3
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %23) #10
  %24 = getelementptr inbounds %"struct.blink::WebMediaKeySystemMediaCapability", %"struct.blink::WebMediaKeySystemMediaCapability"* %21, i64 -1, i32 2
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %24) #10
  %25 = getelementptr inbounds %"struct.blink::WebMediaKeySystemMediaCapability", %"struct.blink::WebMediaKeySystemMediaCapability"* %21, i64 -1, i32 1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %25) #10
  %26 = getelementptr inbounds %"struct.blink::WebMediaKeySystemMediaCapability", %"struct.blink::WebMediaKeySystemMediaCapability"* %22, i64 0, i32 0
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %26) #10
  %27 = icmp eq %"struct.blink::WebMediaKeySystemMediaCapability"* %22, %13
  br i1 %27, label %28, label %20

28:                                               ; preds = %20
  %29 = bitcast %"class.blink::WebVector.13"* %11 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %15
  %32 = phi i8* [ %30, %28 ], [ %16, %15 ]
  store %"struct.blink::WebMediaKeySystemMediaCapability"* %13, %"struct.blink::WebMediaKeySystemMediaCapability"** %17, align 8
  tail call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %10, %31
  %34 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %0, i64 0, i32 2
  %35 = getelementptr inbounds %"class.blink::WebVector.13", %"class.blink::WebVector.13"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::WebMediaKeySystemMediaCapability"*, %"struct.blink::WebMediaKeySystemMediaCapability"** %35, align 8
  %37 = icmp eq %"struct.blink::WebMediaKeySystemMediaCapability"* %36, null
  br i1 %37, label %56, label %38

38:                                               ; preds = %33
  %39 = bitcast %"struct.blink::WebMediaKeySystemMediaCapability"* %36 to i8*
  %40 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %41 = load %"struct.blink::WebMediaKeySystemMediaCapability"*, %"struct.blink::WebMediaKeySystemMediaCapability"** %40, align 8
  %42 = icmp eq %"struct.blink::WebMediaKeySystemMediaCapability"* %41, %36
  br i1 %42, label %54, label %43

43:                                               ; preds = %38, %43
  %44 = phi %"struct.blink::WebMediaKeySystemMediaCapability"* [ %45, %43 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"struct.blink::WebMediaKeySystemMediaCapability", %"struct.blink::WebMediaKeySystemMediaCapability"* %44, i64 -1
  %46 = getelementptr inbounds %"struct.blink::WebMediaKeySystemMediaCapability", %"struct.blink::WebMediaKeySystemMediaCapability"* %44, i64 -1, i32 3
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %46) #10
  %47 = getelementptr inbounds %"struct.blink::WebMediaKeySystemMediaCapability", %"struct.blink::WebMediaKeySystemMediaCapability"* %44, i64 -1, i32 2
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %47) #10
  %48 = getelementptr inbounds %"struct.blink::WebMediaKeySystemMediaCapability", %"struct.blink::WebMediaKeySystemMediaCapability"* %44, i64 -1, i32 1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %48) #10
  %49 = getelementptr inbounds %"struct.blink::WebMediaKeySystemMediaCapability", %"struct.blink::WebMediaKeySystemMediaCapability"* %45, i64 0, i32 0
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %49) #10
  %50 = icmp eq %"struct.blink::WebMediaKeySystemMediaCapability"* %45, %36
  br i1 %50, label %51, label %43

51:                                               ; preds = %43
  %52 = bitcast %"class.blink::WebVector.13"* %34 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %38
  %55 = phi i8* [ %53, %51 ], [ %39, %38 ]
  store %"struct.blink::WebMediaKeySystemMediaCapability"* %36, %"struct.blink::WebMediaKeySystemMediaCapability"** %40, align 8
  tail call void @_ZdlPv(i8* %55) #11
  br label %56

56:                                               ; preds = %33, %54
  %57 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #11
  br label %65

65:                                               ; preds = %56, %60
  %66 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %0, i64 0, i32 0
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %66) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20MediaKeySystemAccess15createMediaKeysEPNS_11ScriptStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::MediaKeySystemAccess"* nocapture readonly, %"class.blink::ScriptState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.ukm::builders::Media_EME_CreateMediaKeys", align 8
  %7 = alloca %"struct.blink::WebMediaKeySystemConfiguration", align 8
  %8 = alloca %"class.blink::WebContentDecryptionModuleResult", align 8
  %9 = bitcast %"struct.blink::WebMediaKeySystemConfiguration"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 112, i1 false)
  %10 = getelementptr inbounds %"class.blink::MediaKeySystemAccess", %"class.blink::MediaKeySystemAccess"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.blink::WebContentDecryptionModuleAccess"*, %"class.blink::WebContentDecryptionModuleAccess"** %10, align 8
  %12 = bitcast %"class.blink::WebContentDecryptionModuleAccess"* %11 to void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)***
  %13 = load void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)**, void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)*, void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)** %13, i64 3
  %15 = load void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)*, void (%"struct.blink::WebMediaKeySystemConfiguration"*, %"class.blink::WebContentDecryptionModuleAccess"*)** %14, align 8
  call void %15(%"struct.blink::WebMediaKeySystemConfiguration"* nonnull sret %7, %"class.blink::WebContentDecryptionModuleAccess"* %11) #10
  %16 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %7, i64 0, i32 6
  %17 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_29ContentDecryptionModuleResultEEEPhm(i64 48) #10
  %18 = bitcast i8* %17 to %"class.blink::ContentDecryptionModuleResultPromise"*
  call void @_ZN5blink36ContentDecryptionModuleResultPromiseC2EPNS_11ScriptStateENS_10EmeApiTypeE(%"class.blink::ContentDecryptionModuleResultPromise"* %18, %"class.blink::ScriptState"* %2, i32 1) #10
  %19 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119NewCdmResultPromiseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  %21 = getelementptr inbounds %"struct.blink::WebMediaKeySystemConfiguration", %"struct.blink::WebMediaKeySystemConfiguration"* %7, i64 0, i32 6, i32 0, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.blink::WebVector.21"* %16 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 2
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %57, label %29

29:                                               ; preds = %3
  %30 = icmp ugt i64 %27, 4611686018427387903
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast i8* %20 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #12
  unreachable

33:                                               ; preds = %29
  %34 = call i8* @_Znwm(i64 %26) #11
  %35 = bitcast i8* %34 to i32*
  %36 = getelementptr inbounds i8, i8* %17, i64 32
  %37 = bitcast i8* %36 to i8**
  store i8* %34, i8** %37, align 8
  %38 = bitcast i8* %20 to i8**
  store i8* %34, i8** %38, align 8
  %39 = getelementptr inbounds i32, i32* %35, i64 %27
  %40 = getelementptr inbounds i8, i8* %17, i64 40
  %41 = bitcast i8* %40 to i32**
  store i32* %39, i32** %41, align 8
  %42 = getelementptr inbounds %"class.blink::WebVector.21", %"class.blink::WebVector.21"* %16, i64 0, i32 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = load i64, i64* %22, align 8
  %45 = bitcast i8* %36 to i64*
  %46 = ptrtoint i8* %34 to i64
  %47 = ptrtoint i32* %43 to i64
  %48 = sub i64 %44, %47
  %49 = icmp sgt i64 %48, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %33
  %51 = lshr exact i64 %48, 2
  %52 = bitcast i32* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* align 4 %52, i64 %48, i1 false) #10
  %53 = getelementptr inbounds i32, i32* %35, i64 %51
  %54 = ptrtoint i32* %53 to i64
  br label %55

55:                                               ; preds = %50, %33
  %56 = phi i64 [ %54, %50 ], [ %46, %33 ]
  store i64 %56, i64* %45, align 8
  br label %57

57:                                               ; preds = %3, %55
  %58 = getelementptr inbounds i8, i8* %17, i64 -4
  %59 = bitcast i8* %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = or i16 %60, 1
  store atomic i16 %61, i16* %59 release, align 2
  %62 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 -86, i64 32, i1 false)
  call void @_ZN5blink36ContentDecryptionModuleResultPromise7PromiseEv(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ContentDecryptionModuleResultPromise"* %18) #10
  %63 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %2) #10
  %64 = load %"class.blink::WebContentDecryptionModuleAccess"*, %"class.blink::WebContentDecryptionModuleAccess"** %10, align 8
  %65 = bitcast i8* %17 to %"class.blink::ContentDecryptionModuleResult"*
  call void @_ZN5blink32WebContentDecryptionModuleResultC1EPNS_29ContentDecryptionModuleResultE(%"class.blink::WebContentDecryptionModuleResult"* nonnull %8, %"class.blink::ContentDecryptionModuleResult"* %65) #10
  %66 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %63, i64 0, i32 1
  %67 = bitcast %"class.blink::MojoBindingContext"* %66 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %68 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %67, align 8
  %69 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %68, i64 6
  %70 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %69, align 8
  %71 = call %"class.base::SingleThreadTaskRunner"* %70(%"class.blink::MojoBindingContext"* %66, i8 zeroext 29) #10
  %72 = bitcast %"class.blink::WebContentDecryptionModuleAccess"* %64 to void (%"class.blink::WebContentDecryptionModuleAccess"*, %"class.blink::WebContentDecryptionModuleResult"*, %"class.base::SingleThreadTaskRunner"*)***
  %73 = load void (%"class.blink::WebContentDecryptionModuleAccess"*, %"class.blink::WebContentDecryptionModuleResult"*, %"class.base::SingleThreadTaskRunner"*)**, void (%"class.blink::WebContentDecryptionModuleAccess"*, %"class.blink::WebContentDecryptionModuleResult"*, %"class.base::SingleThreadTaskRunner"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::WebContentDecryptionModuleAccess"*, %"class.blink::WebContentDecryptionModuleResult"*, %"class.base::SingleThreadTaskRunner"*)*, void (%"class.blink::WebContentDecryptionModuleAccess"*, %"class.blink::WebContentDecryptionModuleResult"*, %"class.base::SingleThreadTaskRunner"*)** %73, i64 2
  %75 = load void (%"class.blink::WebContentDecryptionModuleAccess"*, %"class.blink::WebContentDecryptionModuleResult"*, %"class.base::SingleThreadTaskRunner"*)*, void (%"class.blink::WebContentDecryptionModuleAccess"*, %"class.blink::WebContentDecryptionModuleResult"*, %"class.base::SingleThreadTaskRunner"*)** %74, align 8
  call void %75(%"class.blink::WebContentDecryptionModuleAccess"* %64, %"class.blink::WebContentDecryptionModuleResult"* nonnull %8, %"class.base::SingleThreadTaskRunner"* %71) #10
  call void @_ZN5blink32WebContentDecryptionModuleResult5ResetEv(%"class.blink::WebContentDecryptionModuleResult"* nonnull %8) #10
  %76 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #10
  %77 = getelementptr inbounds %"class.blink::MediaKeySystemAccess", %"class.blink::MediaKeySystemAccess"* %1, i64 0, i32 1, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %80, label %84

80:                                               ; preds = %57
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %81, align 8
  %82 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %83 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %82, i64* %83, align 8
  br label %92

84:                                               ; preds = %57
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 1
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %90 = bitcast i8** %89 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %90, align 8
  %91 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %92

92:                                               ; preds = %84, %80
  %93 = phi i64 [ %91, %84 ], [ %82, %80 ]
  %94 = phi i32 [ %87, %84 ], [ 0, %80 ]
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %94, i32* %95, align 8
  %96 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #10
  %97 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %93, i64* %97, align 8
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZZN5blink12_GLOBAL__N_113ReportMetricsEPNS_16ExecutionContextERKN3WTF6StringEE18kWidevineKeySystem, i64 0, i64 0), i8** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 18, i32* %99, align 8
  %100 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #10
  %101 = xor i1 %100, true
  %102 = icmp eq %"class.blink::ExecutionContext"* %63, null
  %103 = or i1 %102, %101
  br i1 %103, label %128, label %104

104:                                              ; preds = %92
  %105 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %63, i64 -1, i32 8
  %106 = bitcast i32* %105 to %"class.blink::LocalDOMWindow"*
  %107 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %106) #10
  %108 = icmp eq %"class.blink::Document"* %107, null
  br i1 %108, label %128, label %109

109:                                              ; preds = %104
  %110 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %107) #10
  %111 = icmp eq %"class.blink::LocalFrame"* %110, null
  br i1 %111, label %128, label %112

112:                                              ; preds = %109
  %113 = bitcast %"class.ukm::builders::Media_EME_CreateMediaKeys"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 16, i1 false) #10
  %114 = call i64 @_ZNK5blink8Document11UkmSourceIDEv(%"class.blink::Document"* nonnull %107) #10
  call void @_ZN3ukm8builders25Media_EME_CreateMediaKeysC1El(%"class.ukm::builders::Media_EME_CreateMediaKeys"* nonnull %6, i64 %114) #10
  %115 = call dereferenceable(16) %"class.ukm::builders::Media_EME_CreateMediaKeys"* @_ZN3ukm8builders25Media_EME_CreateMediaKeys12SetKeySystemEl(%"class.ukm::builders::Media_EME_CreateMediaKeys"* nonnull %6, i64 1) #10
  %116 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %110, i64 0, i32 0
  %117 = call zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"* %116) #10
  %118 = zext i1 %117 to i64
  %119 = call dereferenceable(16) %"class.ukm::builders::Media_EME_CreateMediaKeys"* @_ZN3ukm8builders25Media_EME_CreateMediaKeys12SetIsAdFrameEl(%"class.ukm::builders::Media_EME_CreateMediaKeys"* nonnull %6, i64 %118) #10
  %120 = call zeroext i1 @_ZNK5blink5Frame24IsCrossOriginToMainFrameEv(%"class.blink::Frame"* %116) #10
  %121 = zext i1 %120 to i64
  %122 = call dereferenceable(16) %"class.ukm::builders::Media_EME_CreateMediaKeys"* @_ZN3ukm8builders25Media_EME_CreateMediaKeys16SetIsCrossOriginEl(%"class.ukm::builders::Media_EME_CreateMediaKeys"* nonnull %6, i64 %121) #10
  %123 = call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* %116) #10
  %124 = zext i1 %123 to i64
  %125 = call dereferenceable(16) %"class.ukm::builders::Media_EME_CreateMediaKeys"* @_ZN3ukm8builders25Media_EME_CreateMediaKeys13SetIsTopFrameEl(%"class.ukm::builders::Media_EME_CreateMediaKeys"* nonnull %6, i64 %124) #10
  %126 = getelementptr inbounds %"class.ukm::builders::Media_EME_CreateMediaKeys", %"class.ukm::builders::Media_EME_CreateMediaKeys"* %6, i64 0, i32 0
  %127 = call %"class.ukm::UkmRecorder"* @_ZN5blink8Document11UkmRecorderEv(%"class.blink::Document"* nonnull %107) #10
  call void @_ZN3ukm8internal19UkmEntryBuilderBase6RecordEPNS_11UkmRecorderE(%"class.ukm::internal::UkmEntryBuilderBase"* nonnull %126, %"class.ukm::UkmRecorder"* %127) #10
  call void @_ZN3ukm8builders25Media_EME_CreateMediaKeysD1Ev(%"class.ukm::builders::Media_EME_CreateMediaKeys"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #10
  br label %128

128:                                              ; preds = %92, %104, %109, %112
  call void @_ZN5blink30WebMediaKeySystemConfigurationD2Ev(%"struct.blink::WebMediaKeySystemConfiguration"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %9) #10
  ret void
}

declare void @_ZN5blink36ContentDecryptionModuleResultPromise7PromiseEv(%"class.blink::ScriptPromise"* sret, %"class.blink::ContentDecryptionModuleResultPromise"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink20MediaKeySystemAccess18GetWrapperTypeInfoEv(%"class.blink::MediaKeySystemAccess"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink20MediaKeySystemAccess18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink27MediaKeySystemConfigurationC1Ev(%"class.blink::MediaKeySystemConfiguration"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink19EncryptedMediaUtils23ConvertFromInitDataTypeEN5media15EmeInitDataTypeE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.10, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([199 x i8], [199 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_29MediaKeySystemMediaCapabilityEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_29MediaKeySystemMediaCapabilityEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_29MediaKeySystemMediaCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_29MediaKeySystemMediaCapabilityEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MediaKeySystemMediaCapability"*
  %4 = bitcast i8* %1 to void (%"class.blink::MediaKeySystemMediaCapability"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::MediaKeySystemMediaCapability"*, %"class.blink::Visitor"*)**, void (%"class.blink::MediaKeySystemMediaCapability"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::MediaKeySystemMediaCapability"*, %"class.blink::Visitor"*)*, void (%"class.blink::MediaKeySystemMediaCapability"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::MediaKeySystemMediaCapability"*, %"class.blink::Visitor"*)*, void (%"class.blink::MediaKeySystemMediaCapability"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::MediaKeySystemMediaCapability"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink29MediaKeySystemMediaCapabilityC1Ev(%"class.blink::MediaKeySystemMediaCapability"*) unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_29MediaKeySystemMediaCapabilityEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare %"class.WTF::StringImpl"* @_ZN5blink19EncryptedMediaUtils22ConvertFromSessionTypeENS_28WebEncryptedMediaSessionTypeE(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN5blink32WebContentDecryptionModuleResultC1EPNS_29ContentDecryptionModuleResultE(%"class.blink::WebContentDecryptionModuleResult"*, %"class.blink::ContentDecryptionModuleResult"*) unnamed_addr #2

declare void @_ZN5blink32WebContentDecryptionModuleResult5ResetEv(%"class.blink::WebContentDecryptionModuleResult"*) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare i64 @_ZNK5blink8Document11UkmSourceIDEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN3ukm8builders25Media_EME_CreateMediaKeysC1El(%"class.ukm::builders::Media_EME_CreateMediaKeys"*, i64) unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::Media_EME_CreateMediaKeys"* @_ZN3ukm8builders25Media_EME_CreateMediaKeys12SetKeySystemEl(%"class.ukm::builders::Media_EME_CreateMediaKeys"*, i64) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::Media_EME_CreateMediaKeys"* @_ZN3ukm8builders25Media_EME_CreateMediaKeys12SetIsAdFrameEl(%"class.ukm::builders::Media_EME_CreateMediaKeys"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::Media_EME_CreateMediaKeys"* @_ZN3ukm8builders25Media_EME_CreateMediaKeys16SetIsCrossOriginEl(%"class.ukm::builders::Media_EME_CreateMediaKeys"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Frame24IsCrossOriginToMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::Media_EME_CreateMediaKeys"* @_ZN3ukm8builders25Media_EME_CreateMediaKeys13SetIsTopFrameEl(%"class.ukm::builders::Media_EME_CreateMediaKeys"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare void @_ZN3ukm8internal19UkmEntryBuilderBase6RecordEPNS_11UkmRecorderE(%"class.ukm::internal::UkmEntryBuilderBase"*, %"class.ukm::UkmRecorder"*) local_unnamed_addr #2

declare %"class.ukm::UkmRecorder"* @_ZN5blink8Document11UkmRecorderEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3ukm8builders25Media_EME_CreateMediaKeysD1Ev(%"class.ukm::builders::Media_EME_CreateMediaKeys"*) unnamed_addr #6

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_29ContentDecryptionModuleResultEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_29ContentDecryptionModuleResultEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_29ContentDecryptionModuleResultEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_29ContentDecryptionModuleResultEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink29ContentDecryptionModuleResultEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_29ContentDecryptionModuleResultEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContentDecryptionModuleResult"*
  %4 = bitcast i8* %1 to void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)**, void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ContentDecryptionModuleResult"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_29ContentDecryptionModuleResultEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ContentDecryptionModuleResult"*
  %3 = bitcast i8* %0 to void (%"class.blink::ContentDecryptionModuleResult"*)***
  %4 = load void (%"class.blink::ContentDecryptionModuleResult"*)**, void (%"class.blink::ContentDecryptionModuleResult"*)*** %3, align 8
  %5 = load void (%"class.blink::ContentDecryptionModuleResult"*)*, void (%"class.blink::ContentDecryptionModuleResult"*)** %4, align 8
  tail call void %5(%"class.blink::ContentDecryptionModuleResult"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_29ContentDecryptionModuleResultEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink36ContentDecryptionModuleResultPromiseC2EPNS_11ScriptStateENS_10EmeApiTypeE(%"class.blink::ContentDecryptionModuleResultPromise"*, %"class.blink::ScriptState"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119NewCdmResultPromiseD2Ev(%"class.blink::(anonymous namespace)::NewCdmResultPromise"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::NewCdmResultPromise", %"class.blink::(anonymous namespace)::NewCdmResultPromise"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119NewCdmResultPromiseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::NewCdmResultPromise", %"class.blink::(anonymous namespace)::NewCdmResultPromise"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::NewCdmResultPromise", %"class.blink::(anonymous namespace)::NewCdmResultPromise"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::(anonymous namespace)::NewCdmResultPromise"* %0 to %"class.blink::ContentDecryptionModuleResultPromise"*
  tail call void @_ZN5blink36ContentDecryptionModuleResultPromiseD2Ev(%"class.blink::ContentDecryptionModuleResultPromise"* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119NewCdmResultPromiseD0Ev(%"class.blink::(anonymous namespace)::NewCdmResultPromise"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::NewCdmResultPromise", %"class.blink::(anonymous namespace)::NewCdmResultPromise"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119NewCdmResultPromiseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::NewCdmResultPromise", %"class.blink::(anonymous namespace)::NewCdmResultPromise"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::NewCdmResultPromise", %"class.blink::(anonymous namespace)::NewCdmResultPromise"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::(anonymous namespace)::NewCdmResultPromise"* %0 to %"class.blink::ContentDecryptionModuleResultPromise"*
  tail call void @_ZN5blink36ContentDecryptionModuleResultPromiseD2Ev(%"class.blink::ContentDecryptionModuleResultPromise"* %12) #10
  ret void
}

declare void @_ZN5blink36ContentDecryptionModuleResultPromise8CompleteEv(%"class.blink::ContentDecryptionModuleResultPromise"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119NewCdmResultPromise35CompleteWithContentDecryptionModuleEPNS_26WebContentDecryptionModuleE(%"class.blink::(anonymous namespace)::NewCdmResultPromise"*, %"class.blink::WebContentDecryptionModule"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::(anonymous namespace)::NewCdmResultPromise"* %0 to %"class.blink::ContentDecryptionModuleResultPromise"*
  %4 = tail call zeroext i1 @_ZN5blink36ContentDecryptionModuleResultPromise23IsValidToFulfillPromiseEv(%"class.blink::ContentDecryptionModuleResultPromise"* %3) #10
  br i1 %4, label %5, label %20

5:                                                ; preds = %2
  %6 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink36ContentDecryptionModuleResultPromise19GetExecutionContextEv(%"class.blink::ContentDecryptionModuleResultPromise"* %3) #10
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::NewCdmResultPromise", %"class.blink::(anonymous namespace)::NewCdmResultPromise"* %0, i64 0, i32 1
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 224) #10
  %9 = bitcast i8* %8 to %"class.blink::MediaKeys"*
  tail call void @_ZN5blink9MediaKeysC1EPNS_16ExecutionContextERKNS_9WebVectorINS_28WebEncryptedMediaSessionTypeEEENSt3__110unique_ptrINS_26WebContentDecryptionModuleENS8_14default_deleteISA_EEEE(%"class.blink::MediaKeys"* %9, %"class.blink::ExecutionContext"* %6, %"class.blink::WebVector.21"* dereferenceable(24) %7, %"class.blink::WebContentDecryptionModule"* %1) #10
  %10 = getelementptr inbounds i8, i8* %8, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = getelementptr inbounds i8, i8* %8, i64 16
  %15 = bitcast i8* %14 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %15) #10
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::NewCdmResultPromise", %"class.blink::(anonymous namespace)::NewCdmResultPromise"* %0, i64 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.blink::MemberBase.241", %"class.blink::MemberBase.241"* %16, i64 0, i32 0
  %18 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %17, align 8
  tail call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_9MediaKeysEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %18, %"class.blink::MediaKeys"* %9, i32 1) #10
  %19 = bitcast %"class.blink::MemberBase.241"* %16 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  br label %20

20:                                               ; preds = %2, %5
  ret void
}

declare void @_ZN5blink36ContentDecryptionModuleResultPromise19CompleteWithSessionENS_32WebContentDecryptionModuleResult13SessionStatusE(%"class.blink::ContentDecryptionModuleResultPromise"*, i32) unnamed_addr #2

declare void @_ZN5blink36ContentDecryptionModuleResultPromise21CompleteWithKeyStatusENS_31WebEncryptedMediaKeyInformation9KeyStatusE(%"class.blink::ContentDecryptionModuleResultPromise"*, i32) unnamed_addr #2

declare void @_ZN5blink36ContentDecryptionModuleResultPromise17CompleteWithErrorENS_35WebContentDecryptionModuleExceptionEjRKNS_9WebStringE(%"class.blink::ContentDecryptionModuleResultPromise"*, i32, i32, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #2

declare void @_ZNK5blink36ContentDecryptionModuleResultPromise5TraceEPNS_7VisitorE(%"class.blink::ContentDecryptionModuleResultPromise"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN5blink36ContentDecryptionModuleResultPromiseD2Ev(%"class.blink::ContentDecryptionModuleResultPromise"*) unnamed_addr #6

declare zeroext i1 @_ZN5blink36ContentDecryptionModuleResultPromise23IsValidToFulfillPromiseEv(%"class.blink::ContentDecryptionModuleResultPromise"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink36ContentDecryptionModuleResultPromise19GetExecutionContextEv(%"class.blink::ContentDecryptionModuleResultPromise"*) local_unnamed_addr #2

declare void @_ZN5blink9MediaKeysC1EPNS_16ExecutionContextERKNS_9WebVectorINS_28WebEncryptedMediaSessionTypeEEENSt3__110unique_ptrINS_26WebContentDecryptionModuleENS8_14default_deleteISA_EEEE(%"class.blink::MediaKeys"*, %"class.blink::ExecutionContext"*, %"class.blink::WebVector.21"* dereferenceable(24), %"class.blink::WebContentDecryptionModule"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_9MediaKeysEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::MediaKeys"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %134

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %134, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %134, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #10
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %134, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #10
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !10
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %134

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #10
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #10
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #10
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #10
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #10
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #10
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = getelementptr inbounds %"class.blink::MediaKeys", %"class.blink::MediaKeys"* %1, i64 0, i32 0
  %58 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %59 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %58, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::Context"*, %"class.v8::Context"** %59, align 8
  %61 = icmp eq %"class.v8::Context"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %47
  %63 = bitcast %"class.blink::ScriptState"* %58 to %"class.v8::internal::Isolate"**
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = bitcast %"class.v8::Context"* %60 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %66) #10
  %68 = bitcast i64* %67 to %"class.v8::Context"*
  br label %69

69:                                               ; preds = %47, %62
  %70 = phi %"class.v8::Context"* [ %68, %62 ], [ null, %47 ]
  %71 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %70) #10
  %72 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %73 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %72, i64 0, i32 0
  %74 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %73, align 8
  %75 = icmp eq %"class.blink::MediaKeys"* %1, null
  br i1 %75, label %76, label %79, !prof !2

76:                                               ; preds = %69
  %77 = ptrtoint %"class.v8::Isolate"* %74 to i64
  %78 = add i64 %77, 176
  br label %95

79:                                               ; preds = %69
  %80 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %57, %"class.v8::Isolate"* %74) #10
  %81 = ptrtoint %"class.v8::Object"* %80 to i64
  %82 = icmp eq %"class.v8::Object"* %80, null
  br i1 %82, label %83, label %95

83:                                               ; preds = %79
  %84 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %71) #10
  %85 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %84) #10
  %86 = bitcast %"class.blink::MediaKeys"* %1 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %87 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %86, align 8
  %88 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %87, i64 7
  %89 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %88, align 8
  %90 = call %"class.v8::Value"* %89(%"class.blink::ScriptWrappable"* nonnull %57, %"class.blink::ScriptState"* %85) #10
  %91 = icmp eq %"class.v8::Value"* %90, null
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %83
  call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %93

93:                                               ; preds = %92, %83
  %94 = ptrtoint %"class.v8::Value"* %90 to i64
  br label %95

95:                                               ; preds = %76, %79, %93
  %96 = phi i64 [ %78, %76 ], [ %94, %93 ], [ %81, %79 ]
  %97 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.234", %"class.blink::TraceWrapperV8Reference.234"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = icmp eq i64* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %98) #10
  %101 = bitcast %"class.blink::TraceWrapperV8Reference.234"* %56 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  br label %102

102:                                              ; preds = %100, %95
  %103 = icmp eq i64 %96, 0
  br i1 %103, label %110, label %104

104:                                              ; preds = %102
  %105 = inttoptr i64 %96 to i64*
  %106 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %107 = bitcast %"class.blink::TraceWrapperV8Reference.234"* %56 to i64*
  %108 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %106, i64* nonnull %105, i64* %107, i1 zeroext false) #10
  %109 = ptrtoint i64* %108 to i64
  store atomic i64 %109, i64* %107 monotonic, align 8
  br label %110

110:                                              ; preds = %102, %104
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.234"* dereferenceable(8) %56) #10
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #10
  %111 = icmp eq i32* %49, null
  br i1 %111, label %113, label %112

112:                                              ; preds = %110
  store i32 %50, i32* %49, align 4
  br label %113

113:                                              ; preds = %110, %112
  %114 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #10
  %115 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %114) #10
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #10
  br label %132

117:                                              ; preds = %113
  %118 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #10
  %119 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %120 = ptrtoint i64* %4 to i64
  %121 = sub i64 %119, %120
  %122 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %123 = icmp ult i64 %121, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #10
  br i1 %123, label %126, label %124, !prof !6

124:                                              ; preds = %117
  %125 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #10
  br label %126

126:                                              ; preds = %117, %124
  %127 = phi i32* [ %125, %124 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %117 ]
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %131, label %130

130:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #10
  br label %132

131:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #10
  br label %132

132:                                              ; preds = %131, %130, %116
  %133 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %133) #10
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #10
  br label %134

134:                                              ; preds = %24, %16, %10, %20, %3, %132
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #2

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #6

declare zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #2

declare void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #2

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.234"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #10
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #10
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !10
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #10
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #10
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #10
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0)) #10
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0)) #10
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink12_GLOBAL__N_120ConvertInitDataTypesERKNS_9WebVectorIN5media15EmeInitDataTypeEEE: argument 0"}
!5 = distinct !{!5, !"_ZN5blink12_GLOBAL__N_120ConvertInitDataTypesERKNS_9WebVectorIN5media15EmeInitDataTypeEEE"}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink12_GLOBAL__N_119ConvertSessionTypesERKNS_9WebVectorINS_28WebEncryptedMediaSessionTypeEEE: argument 0"}
!9 = distinct !{!9, !"_ZN5blink12_GLOBAL__N_119ConvertSessionTypesERKNS_9WebVectorINS_28WebEncryptedMediaSessionTypeEEE"}
!10 = !{i8 0, i8 2}
