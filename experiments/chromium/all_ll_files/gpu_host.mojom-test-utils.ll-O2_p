; ModuleID = 'gen/services/viz/privileged/mojom/gl/gpu_host.mojom-test-utils.cc'
source_filename = "gen/services/viz/privileged/mojom/gl/gpu_host.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::GpuHostAsyncWaiter" = type { %"class.viz::mojom::GpuHost"* }
%"class.viz::mojom::GpuHost" = type { i32 (...)** }
%"class.viz::mojom::GpuHostInterceptorForTesting" = type { %"class.viz::mojom::GpuHost" }
%"struct.gpu::GPUInfo" = type { %"class.base::TimeDelta", i8, i8, [6 x i8], %"struct.gpu::GPUInfo::GPUDevice", %"class.std::__1::vector", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, %"class.std::__1::basic_string", i8, i8, i8, i8, [4 x i8], %"struct.gpu::VideoDecodeAcceleratorCapabilities", %"class.std::__1::vector.13", i8, %"class.std::__1::vector.20", i8, i8, %"class.absl::optional" }
%"class.base::TimeDelta" = type { i64 }
%"struct.gpu::GPUInfo::GPUDevice" = type <{ i32, i32, i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.gpu::GPUInfo::GPUDevice"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.gpu::VideoDecodeAcceleratorCapabilities" = type <{ %"class.std::__1::vector.6", i32, [4 x i8] }>
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.8" }
%"struct.gpu::VideoDecodeAcceleratorSupportedProfile" = type <{ i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.15" }
%"struct.gpu::VideoEncodeAcceleratorSupportedProfile" = type { i32, %"class.gfx::Size", %"class.gfx::Size", i32, i32 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.29" }
%"struct.gpu::ImageDecodeAcceleratorSupportedProfile" = type { i32, %"class.gfx::Size", %"class.gfx::Size", %"class.std::__1::vector.22" }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { i32*, i32*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i32* }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.34 }
%union.anon.34 = type { %"class.gpu::VulkanInfo" }
%"class.gpu::VulkanInfo" = type { i32, i32, %"class.std::__1::vector.35", %"class.std::__1::vector.42", %"class.std::__1::vector.49", %"class.std::__1::vector.56" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %struct.VkExtensionProperties*, %struct.VkExtensionProperties*, %"class.std::__1::__compressed_pair.37" }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %struct.VkExtensionProperties* }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { i8**, i8**, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i8** }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.51" }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %struct.VkLayerProperties* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.std::__1::__compressed_pair.65" }
%"class.gpu::VulkanPhysicalDeviceInfo" = type { %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %"class.std::__1::vector.35", %struct.VkPhysicalDeviceFeatures, i8, i8, %"class.std::__1::vector.58" }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.60" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.gpu::VulkanPhysicalDeviceInfo"* }
%"struct.gpu::GpuFeatureInfo" = type { [10 x i32], %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.84" }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { i32*, i32*, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { i32* }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { i32*, i32*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { i32* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { i32*, i32*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { i32* }
%"class.absl::optional.91" = type { %"class.absl::optional_internal::optional_data.92" }
%"class.absl::optional_internal::optional_data.92" = type { %"class.absl::optional_internal::optional_data_base.93" }
%"class.absl::optional_internal::optional_data_base.93" = type { %"class.absl::optional_internal::optional_data_dtor_base.94" }
%"class.absl::optional_internal::optional_data_dtor_base.94" = type { i8, %union.anon.95 }
%union.anon.95 = type { %"struct.gpu::GPUInfo" }
%"class.absl::optional.96" = type { %"class.absl::optional_internal::optional_data.97" }
%"class.absl::optional_internal::optional_data.97" = type { %"class.absl::optional_internal::optional_data_base.98" }
%"class.absl::optional_internal::optional_data_base.98" = type { %"class.absl::optional_internal::optional_data_dtor_base.99" }
%"class.absl::optional_internal::optional_data_dtor_base.99" = type { i8, %union.anon.100 }
%union.anon.100 = type { %"struct.gpu::GpuFeatureInfo" }
%"struct.gfx::GpuExtraInfo" = type { %"class.std::__1::vector.101", %"class.std::__1::vector.108" }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"*, %"class.std::__1::__compressed_pair.103" }
%"struct.gfx::ANGLEFeature" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.gfx::ANGLEFeature"* }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair.110" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.gfx::BufferUsageAndFormat"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %class.GURL* }

$_ZN3viz5mojom7GpuHostD2Ev = comdat any

$_ZN3viz5mojom28GpuHostInterceptorForTestingD0Ev = comdat any

@_ZTVN3viz5mojom28GpuHostInterceptorForTestingE = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::mojom::GpuHost"*)* @_ZN3viz5mojom7GpuHostD2Ev to i8*), i8* bitcast (void (%"class.viz::mojom::GpuHostInterceptorForTesting"*)* @_ZN3viz5mojom28GpuHostInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.viz::mojom::GpuHostInterceptorForTesting"*, %"struct.gpu::GPUInfo"*, %"struct.gpu::GpuFeatureInfo"*, %"class.absl::optional.91"*, %"class.absl::optional.96"*, %"struct.gfx::GpuExtraInfo"*)* @_ZN3viz5mojom28GpuHostInterceptorForTesting13DidInitializeERKN3gpu7GPUInfoERKNS2_14GpuFeatureInfoERKN4absl8optionalIS3_EERKNSA_IS6_EERKN3gfx12GpuExtraInfoE to i8*), i8* bitcast (void (%"class.viz::mojom::GpuHostInterceptorForTesting"*)* @_ZN3viz5mojom28GpuHostInterceptorForTesting17DidFailInitializeEv to i8*), i8* bitcast (void (%"class.viz::mojom::GpuHostInterceptorForTesting"*)* @_ZN3viz5mojom28GpuHostInterceptorForTesting28DidCreateContextSuccessfullyEv to i8*), i8* bitcast (void (%"class.viz::mojom::GpuHostInterceptorForTesting"*, %class.GURL*)* @_ZN3viz5mojom28GpuHostInterceptorForTesting25DidCreateOffscreenContextERK4GURL to i8*), i8* bitcast (void (%"class.viz::mojom::GpuHostInterceptorForTesting"*, %class.GURL*)* @_ZN3viz5mojom28GpuHostInterceptorForTesting26DidDestroyOffscreenContextERK4GURL to i8*), i8* bitcast (void (%"class.viz::mojom::GpuHostInterceptorForTesting"*, i32)* @_ZN3viz5mojom28GpuHostInterceptorForTesting17DidDestroyChannelEi to i8*), i8* bitcast (void (%"class.viz::mojom::GpuHostInterceptorForTesting"*)* @_ZN3viz5mojom28GpuHostInterceptorForTesting21DidDestroyAllChannelsEv to i8*), i8* bitcast (void (%"class.viz::mojom::GpuHostInterceptorForTesting"*, i1, i32, %class.GURL*)* @_ZN3viz5mojom28GpuHostInterceptorForTesting14DidLoseContextEbN3gpu5error17ContextLostReasonERK4GURL to i8*), i8* bitcast (void (%"class.viz::mojom::GpuHostInterceptorForTesting"*, %"struct.gpu::GPUInfo"*)* @_ZN3viz5mojom28GpuHostInterceptorForTesting16DidUpdateGPUInfoERKN3gpu7GPUInfoE to i8*), i8* bitcast (void (%"class.viz::mojom::GpuHostInterceptorForTesting"*)* @_ZN3viz5mojom28GpuHostInterceptorForTesting21DisableGpuCompositingEv to i8*), i8* bitcast (void (%"class.viz::mojom::GpuHostInterceptorForTesting"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN3viz5mojom28GpuHostInterceptorForTesting17StoreShaderToDiskEiRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_ to i8*), i8* bitcast (void (%"class.viz::mojom::GpuHostInterceptorForTesting"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN3viz5mojom28GpuHostInterceptorForTesting16RecordLogMessageEiRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3viz5mojom18GpuHostAsyncWaiterC1EPNS0_7GpuHostE = hidden unnamed_addr alias void (%"class.viz::mojom::GpuHostAsyncWaiter"*, %"class.viz::mojom::GpuHost"*), void (%"class.viz::mojom::GpuHostAsyncWaiter"*, %"class.viz::mojom::GpuHost"*)* @_ZN3viz5mojom18GpuHostAsyncWaiterC2EPNS0_7GpuHostE
@_ZN3viz5mojom18GpuHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::GpuHostAsyncWaiter"*), void (%"class.viz::mojom::GpuHostAsyncWaiter"*)* @_ZN3viz5mojom18GpuHostAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28GpuHostInterceptorForTesting13DidInitializeERKN3gpu7GPUInfoERKNS2_14GpuFeatureInfoERKN4absl8optionalIS3_EERKNSA_IS6_EERKN3gfx12GpuExtraInfoE(%"class.viz::mojom::GpuHostInterceptorForTesting"*, %"struct.gpu::GPUInfo"* dereferenceable(696), %"struct.gpu::GpuFeatureInfo"* dereferenceable(184), %"class.absl::optional.91"* dereferenceable(704), %"class.absl::optional.96"* dereferenceable(192), %"struct.gfx::GpuExtraInfo"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.viz::mojom::GpuHostInterceptorForTesting"* %0 to %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)***
  %8 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)**, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %8, i64 14
  %10 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.viz::mojom::GpuHost"* %10(%"class.viz::mojom::GpuHostInterceptorForTesting"* %0) #5
  %12 = bitcast %"class.viz::mojom::GpuHost"* %11 to void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*, %"struct.gpu::GpuFeatureInfo"*, %"class.absl::optional.91"*, %"class.absl::optional.96"*, %"struct.gfx::GpuExtraInfo"*)***
  %13 = load void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*, %"struct.gpu::GpuFeatureInfo"*, %"class.absl::optional.91"*, %"class.absl::optional.96"*, %"struct.gfx::GpuExtraInfo"*)**, void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*, %"struct.gpu::GpuFeatureInfo"*, %"class.absl::optional.91"*, %"class.absl::optional.96"*, %"struct.gfx::GpuExtraInfo"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*, %"struct.gpu::GpuFeatureInfo"*, %"class.absl::optional.91"*, %"class.absl::optional.96"*, %"struct.gfx::GpuExtraInfo"*)*, void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*, %"struct.gpu::GpuFeatureInfo"*, %"class.absl::optional.91"*, %"class.absl::optional.96"*, %"struct.gfx::GpuExtraInfo"*)** %13, i64 2
  %15 = load void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*, %"struct.gpu::GpuFeatureInfo"*, %"class.absl::optional.91"*, %"class.absl::optional.96"*, %"struct.gfx::GpuExtraInfo"*)*, void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*, %"struct.gpu::GpuFeatureInfo"*, %"class.absl::optional.91"*, %"class.absl::optional.96"*, %"struct.gfx::GpuExtraInfo"*)** %14, align 8
  tail call void %15(%"class.viz::mojom::GpuHost"* %11, %"struct.gpu::GPUInfo"* dereferenceable(696) %1, %"struct.gpu::GpuFeatureInfo"* dereferenceable(184) %2, %"class.absl::optional.91"* dereferenceable(704) %3, %"class.absl::optional.96"* dereferenceable(192) %4, %"struct.gfx::GpuExtraInfo"* dereferenceable(48) %5) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28GpuHostInterceptorForTesting17DidFailInitializeEv(%"class.viz::mojom::GpuHostInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::mojom::GpuHostInterceptorForTesting"* %0 to %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)***
  %3 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)**, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %3, i64 14
  %5 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.viz::mojom::GpuHost"* %5(%"class.viz::mojom::GpuHostInterceptorForTesting"* %0) #5
  %7 = bitcast %"class.viz::mojom::GpuHost"* %6 to void (%"class.viz::mojom::GpuHost"*)***
  %8 = load void (%"class.viz::mojom::GpuHost"*)**, void (%"class.viz::mojom::GpuHost"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.viz::mojom::GpuHost"*)*, void (%"class.viz::mojom::GpuHost"*)** %8, i64 3
  %10 = load void (%"class.viz::mojom::GpuHost"*)*, void (%"class.viz::mojom::GpuHost"*)** %9, align 8
  tail call void %10(%"class.viz::mojom::GpuHost"* %6) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28GpuHostInterceptorForTesting28DidCreateContextSuccessfullyEv(%"class.viz::mojom::GpuHostInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::mojom::GpuHostInterceptorForTesting"* %0 to %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)***
  %3 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)**, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %3, i64 14
  %5 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.viz::mojom::GpuHost"* %5(%"class.viz::mojom::GpuHostInterceptorForTesting"* %0) #5
  %7 = bitcast %"class.viz::mojom::GpuHost"* %6 to void (%"class.viz::mojom::GpuHost"*)***
  %8 = load void (%"class.viz::mojom::GpuHost"*)**, void (%"class.viz::mojom::GpuHost"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.viz::mojom::GpuHost"*)*, void (%"class.viz::mojom::GpuHost"*)** %8, i64 4
  %10 = load void (%"class.viz::mojom::GpuHost"*)*, void (%"class.viz::mojom::GpuHost"*)** %9, align 8
  tail call void %10(%"class.viz::mojom::GpuHost"* %6) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28GpuHostInterceptorForTesting25DidCreateOffscreenContextERK4GURL(%"class.viz::mojom::GpuHostInterceptorForTesting"*, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::GpuHostInterceptorForTesting"* %0 to %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)**, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %4, i64 14
  %6 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::GpuHost"* %6(%"class.viz::mojom::GpuHostInterceptorForTesting"* %0) #5
  %8 = bitcast %"class.viz::mojom::GpuHost"* %7 to void (%"class.viz::mojom::GpuHost"*, %class.GURL*)***
  %9 = load void (%"class.viz::mojom::GpuHost"*, %class.GURL*)**, void (%"class.viz::mojom::GpuHost"*, %class.GURL*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::GpuHost"*, %class.GURL*)*, void (%"class.viz::mojom::GpuHost"*, %class.GURL*)** %9, i64 5
  %11 = load void (%"class.viz::mojom::GpuHost"*, %class.GURL*)*, void (%"class.viz::mojom::GpuHost"*, %class.GURL*)** %10, align 8
  tail call void %11(%"class.viz::mojom::GpuHost"* %7, %class.GURL* dereferenceable(120) %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28GpuHostInterceptorForTesting26DidDestroyOffscreenContextERK4GURL(%"class.viz::mojom::GpuHostInterceptorForTesting"*, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::GpuHostInterceptorForTesting"* %0 to %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)**, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %4, i64 14
  %6 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::GpuHost"* %6(%"class.viz::mojom::GpuHostInterceptorForTesting"* %0) #5
  %8 = bitcast %"class.viz::mojom::GpuHost"* %7 to void (%"class.viz::mojom::GpuHost"*, %class.GURL*)***
  %9 = load void (%"class.viz::mojom::GpuHost"*, %class.GURL*)**, void (%"class.viz::mojom::GpuHost"*, %class.GURL*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::GpuHost"*, %class.GURL*)*, void (%"class.viz::mojom::GpuHost"*, %class.GURL*)** %9, i64 6
  %11 = load void (%"class.viz::mojom::GpuHost"*, %class.GURL*)*, void (%"class.viz::mojom::GpuHost"*, %class.GURL*)** %10, align 8
  tail call void %11(%"class.viz::mojom::GpuHost"* %7, %class.GURL* dereferenceable(120) %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28GpuHostInterceptorForTesting17DidDestroyChannelEi(%"class.viz::mojom::GpuHostInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::GpuHostInterceptorForTesting"* %0 to %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)**, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %4, i64 14
  %6 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::GpuHost"* %6(%"class.viz::mojom::GpuHostInterceptorForTesting"* %0) #5
  %8 = bitcast %"class.viz::mojom::GpuHost"* %7 to void (%"class.viz::mojom::GpuHost"*, i32)***
  %9 = load void (%"class.viz::mojom::GpuHost"*, i32)**, void (%"class.viz::mojom::GpuHost"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::GpuHost"*, i32)*, void (%"class.viz::mojom::GpuHost"*, i32)** %9, i64 7
  %11 = load void (%"class.viz::mojom::GpuHost"*, i32)*, void (%"class.viz::mojom::GpuHost"*, i32)** %10, align 8
  tail call void %11(%"class.viz::mojom::GpuHost"* %7, i32 %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28GpuHostInterceptorForTesting21DidDestroyAllChannelsEv(%"class.viz::mojom::GpuHostInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::mojom::GpuHostInterceptorForTesting"* %0 to %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)***
  %3 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)**, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %3, i64 14
  %5 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.viz::mojom::GpuHost"* %5(%"class.viz::mojom::GpuHostInterceptorForTesting"* %0) #5
  %7 = bitcast %"class.viz::mojom::GpuHost"* %6 to void (%"class.viz::mojom::GpuHost"*)***
  %8 = load void (%"class.viz::mojom::GpuHost"*)**, void (%"class.viz::mojom::GpuHost"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.viz::mojom::GpuHost"*)*, void (%"class.viz::mojom::GpuHost"*)** %8, i64 8
  %10 = load void (%"class.viz::mojom::GpuHost"*)*, void (%"class.viz::mojom::GpuHost"*)** %9, align 8
  tail call void %10(%"class.viz::mojom::GpuHost"* %6) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28GpuHostInterceptorForTesting14DidLoseContextEbN3gpu5error17ContextLostReasonERK4GURL(%"class.viz::mojom::GpuHostInterceptorForTesting"*, i1 zeroext, i32, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.viz::mojom::GpuHostInterceptorForTesting"* %0 to %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)***
  %6 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)**, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %6, i64 14
  %8 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.viz::mojom::GpuHost"* %8(%"class.viz::mojom::GpuHostInterceptorForTesting"* %0) #5
  %10 = bitcast %"class.viz::mojom::GpuHost"* %9 to void (%"class.viz::mojom::GpuHost"*, i1, i32, %class.GURL*)***
  %11 = load void (%"class.viz::mojom::GpuHost"*, i1, i32, %class.GURL*)**, void (%"class.viz::mojom::GpuHost"*, i1, i32, %class.GURL*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.viz::mojom::GpuHost"*, i1, i32, %class.GURL*)*, void (%"class.viz::mojom::GpuHost"*, i1, i32, %class.GURL*)** %11, i64 9
  %13 = load void (%"class.viz::mojom::GpuHost"*, i1, i32, %class.GURL*)*, void (%"class.viz::mojom::GpuHost"*, i1, i32, %class.GURL*)** %12, align 8
  tail call void %13(%"class.viz::mojom::GpuHost"* %9, i1 zeroext %1, i32 %2, %class.GURL* dereferenceable(120) %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28GpuHostInterceptorForTesting16DidUpdateGPUInfoERKN3gpu7GPUInfoE(%"class.viz::mojom::GpuHostInterceptorForTesting"*, %"struct.gpu::GPUInfo"* dereferenceable(696)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::GpuHostInterceptorForTesting"* %0 to %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)**, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %4, i64 14
  %6 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::GpuHost"* %6(%"class.viz::mojom::GpuHostInterceptorForTesting"* %0) #5
  %8 = bitcast %"class.viz::mojom::GpuHost"* %7 to void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*)***
  %9 = load void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*)**, void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*)*, void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*)** %9, i64 10
  %11 = load void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*)*, void (%"class.viz::mojom::GpuHost"*, %"struct.gpu::GPUInfo"*)** %10, align 8
  tail call void %11(%"class.viz::mojom::GpuHost"* %7, %"struct.gpu::GPUInfo"* dereferenceable(696) %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28GpuHostInterceptorForTesting21DisableGpuCompositingEv(%"class.viz::mojom::GpuHostInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::mojom::GpuHostInterceptorForTesting"* %0 to %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)***
  %3 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)**, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %3, i64 14
  %5 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.viz::mojom::GpuHost"* %5(%"class.viz::mojom::GpuHostInterceptorForTesting"* %0) #5
  %7 = bitcast %"class.viz::mojom::GpuHost"* %6 to void (%"class.viz::mojom::GpuHost"*)***
  %8 = load void (%"class.viz::mojom::GpuHost"*)**, void (%"class.viz::mojom::GpuHost"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.viz::mojom::GpuHost"*)*, void (%"class.viz::mojom::GpuHost"*)** %8, i64 11
  %10 = load void (%"class.viz::mojom::GpuHost"*)*, void (%"class.viz::mojom::GpuHost"*)** %9, align 8
  tail call void %10(%"class.viz::mojom::GpuHost"* %6) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28GpuHostInterceptorForTesting17StoreShaderToDiskEiRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.viz::mojom::GpuHostInterceptorForTesting"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.viz::mojom::GpuHostInterceptorForTesting"* %0 to %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)***
  %6 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)**, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %6, i64 14
  %8 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.viz::mojom::GpuHost"* %8(%"class.viz::mojom::GpuHostInterceptorForTesting"* %0) #5
  %10 = bitcast %"class.viz::mojom::GpuHost"* %9 to void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)***
  %11 = load void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**, void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %11, i64 12
  %13 = load void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %12, align 8
  tail call void %13(%"class.viz::mojom::GpuHost"* %9, i32 %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom28GpuHostInterceptorForTesting16RecordLogMessageEiRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.viz::mojom::GpuHostInterceptorForTesting"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.viz::mojom::GpuHostInterceptorForTesting"* %0 to %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)***
  %6 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)**, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %6, i64 14
  %8 = load %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)*, %"class.viz::mojom::GpuHost"* (%"class.viz::mojom::GpuHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.viz::mojom::GpuHost"* %8(%"class.viz::mojom::GpuHostInterceptorForTesting"* %0) #5
  %10 = bitcast %"class.viz::mojom::GpuHost"* %9 to void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)***
  %11 = load void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**, void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %11, i64 13
  %13 = load void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.viz::mojom::GpuHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %12, align 8
  tail call void %13(%"class.viz::mojom::GpuHost"* %9, i32 %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %3) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz5mojom18GpuHostAsyncWaiterC2EPNS0_7GpuHostE(%"class.viz::mojom::GpuHostAsyncWaiter"* nocapture, %"class.viz::mojom::GpuHost"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.viz::mojom::GpuHostAsyncWaiter", %"class.viz::mojom::GpuHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.viz::mojom::GpuHost"* %1, %"class.viz::mojom::GpuHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom18GpuHostAsyncWaiterD2Ev(%"class.viz::mojom::GpuHostAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom7GpuHostD2Ev(%"class.viz::mojom::GpuHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom28GpuHostInterceptorForTestingD0Ev(%"class.viz::mojom::GpuHostInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
