; ModuleID = '../../third_party/pdfium/xfa/fwl/theme/cfwl_fontmanager.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/theme/cfwl_fontmanager.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFWL_FontManager = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.CFWL_FontManager::FontData"* }
%"class.CFWL_FontManager::FontData" = type { %"class.fxcrt::WideString", i32, i32, %"class.fxcrt::RetainPtr.7" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.3" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::RetainPtr.7" = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.CFGAS_GEFont* }
%class.CFGAS_GEFont = type { %"class.fxcrt::Retainable", %"class.pdfium::Optional", %"class.fxcrt::RetainPtr.11", %"class.fxcrt::MaybeOwned", %"class.std::__1::unique_ptr.21", %"class.std::__1::map", %"class.std::__1::map.35", %"class.std::__1::vector.44", %"class.std::__1::map.51" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.fxcrt::RetainPtr.11" = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.17", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.CFX_Font* }
%class.CFX_Font = type opaque
%"class.fxcrt::UnownedPtr" = type { %class.CFX_Font* }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.CFX_UnicodeEncodingEx* }
%class.CFX_UnicodeEncodingEx = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i64 }
%"class.std::__1::map.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.fxcrt::RetainPtr.7"*, %"class.fxcrt::RetainPtr.7"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.fxcrt::RetainPtr.7"* }
%"class.std::__1::map.51" = type { %"class.std::__1::__tree.52" }
%"class.std::__1::__tree.52" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.65", i64 }
%"class.fxcrt::UnownedPtr.65" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrIN16CFWL_FontManager8FontDataENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZN12_GLOBAL__N_113g_FontManagerE = internal unnamed_addr global %class.CFWL_FontManager* null, align 8

@_ZN16CFWL_FontManagerC1Ev = hidden unnamed_addr alias void (%class.CFWL_FontManager*), void (%class.CFWL_FontManager*)* @_ZN16CFWL_FontManagerC2Ev
@_ZN16CFWL_FontManagerD1Ev = hidden unnamed_addr alias void (%class.CFWL_FontManager*), void (%class.CFWL_FontManager*)* @_ZN16CFWL_FontManagerD2Ev
@_ZN16CFWL_FontManager8FontDataC1Ev = hidden unnamed_addr alias void (%"class.CFWL_FontManager::FontData"*), void (%"class.CFWL_FontManager::FontData"*)* @_ZN16CFWL_FontManager8FontDataC2Ev
@_ZN16CFWL_FontManager8FontDataD1Ev = hidden unnamed_addr alias void (%"class.CFWL_FontManager::FontData"*), void (%"class.CFWL_FontManager::FontData"*)* @_ZN16CFWL_FontManager8FontDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %class.CFWL_FontManager* @_ZN16CFWL_FontManager11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load %class.CFWL_FontManager*, %class.CFWL_FontManager** @_ZN12_GLOBAL__N_113g_FontManagerE, align 8
  %2 = icmp eq %class.CFWL_FontManager* %1, null
  br i1 %2, label %3, label %6

3:                                                ; preds = %0
  %4 = tail call i8* @_Znwm(i64 24) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #11
  store i8* %4, i8** bitcast (%class.CFWL_FontManager** @_ZN12_GLOBAL__N_113g_FontManagerE to i8**), align 8
  %5 = bitcast i8* %4 to %class.CFWL_FontManager*
  br label %6

6:                                                ; preds = %0, %3
  %7 = phi %class.CFWL_FontManager* [ %1, %0 ], [ %5, %3 ]
  ret %class.CFWL_FontManager* %7
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFWL_FontManager15DestroyInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load %class.CFWL_FontManager*, %class.CFWL_FontManager** @_ZN12_GLOBAL__N_113g_FontManagerE, align 8
  %2 = icmp eq %class.CFWL_FontManager* %1, null
  br i1 %2, label %45, label %3

3:                                                ; preds = %0
  %4 = getelementptr inbounds %class.CFWL_FontManager, %class.CFWL_FontManager* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %43, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %class.CFWL_FontManager, %class.CFWL_FontManager* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %41, label %12

12:                                               ; preds = %7, %36
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %36 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.CFWL_FontManager::FontData"*, %"class.CFWL_FontManager::FontData"** %15, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %15, align 8
  %17 = icmp eq %"class.CFWL_FontManager::FontData"* %16, null
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %16, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %20 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %19, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %19, align 8
  %21 = icmp eq %class.CFGAS_GEFont* %20, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %20, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add nsw i64 %24, -1
  store i64 %25, i64* %23, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %20, i64 0, i32 0
  %29 = bitcast %class.CFGAS_GEFont* %20 to void (%"class.fxcrt::Retainable"*)***
  %30 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %30, i64 1
  %32 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %31, align 8
  tail call void %32(%"class.fxcrt::Retainable"* nonnull %28) #11
  br label %33

33:                                               ; preds = %27, %22, %18
  %34 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %16, i64 0, i32 0
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %34) #11
  %35 = bitcast %"class.CFWL_FontManager::FontData"* %16 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %33, %12
  %37 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %37, label %38, label %12

38:                                               ; preds = %36
  %39 = bitcast %class.CFWL_FontManager* %1 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %7
  %42 = phi i8* [ %40, %38 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %3, %41
  %44 = bitcast %class.CFWL_FontManager* %1 to i8*
  tail call void @_ZdlPv(i8* %44) #10
  br label %45

45:                                               ; preds = %43, %0
  store %class.CFWL_FontManager* null, %class.CFWL_FontManager** @_ZN12_GLOBAL__N_113g_FontManagerE, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFWL_FontManagerC2Ev(%class.CFWL_FontManager* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CFWL_FontManager* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFWL_FontManagerD2Ev(%class.CFWL_FontManager* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_FontManager, %class.CFWL_FontManager* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %2, align 8
  %4 = icmp eq %"class.std::__1::unique_ptr"* %3, null
  br i1 %4, label %41, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  %7 = getelementptr inbounds %class.CFWL_FontManager, %class.CFWL_FontManager* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr"* %8, %3
  br i1 %9, label %39, label %10

10:                                               ; preds = %5, %34
  %11 = phi %"class.std::__1::unique_ptr"* [ %12, %34 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 -1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.CFWL_FontManager::FontData"*, %"class.CFWL_FontManager::FontData"** %13, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %13, align 8
  %15 = icmp eq %"class.CFWL_FontManager::FontData"* %14, null
  br i1 %15, label %34, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %14, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %17, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %17, align 8
  %19 = icmp eq %class.CFGAS_GEFont* %18, null
  br i1 %19, label %31, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %18, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add nsw i64 %22, -1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %18, i64 0, i32 0
  %27 = bitcast %class.CFGAS_GEFont* %18 to void (%"class.fxcrt::Retainable"*)***
  %28 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %28, i64 1
  %30 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, align 8
  tail call void %30(%"class.fxcrt::Retainable"* nonnull %26) #11
  br label %31

31:                                               ; preds = %25, %20, %16
  %32 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %14, i64 0, i32 0
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %32) #11
  %33 = bitcast %"class.CFWL_FontManager::FontData"* %14 to i8*
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %31, %10
  %35 = icmp eq %"class.std::__1::unique_ptr"* %12, %3
  br i1 %35, label %36, label %10

36:                                               ; preds = %34
  %37 = bitcast %class.CFWL_FontManager* %0 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %5
  %40 = phi i8* [ %38, %36 ], [ %6, %5 ]
  store %"class.std::__1::unique_ptr"* %3, %"class.std::__1::unique_ptr"** %7, align 8
  tail call void @_ZdlPv(i8* %40) #10
  br label %41

41:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFWL_FontManager8FindFontEN5fxcrt18StringViewTemplateIwEEjt(%"class.fxcrt::RetainPtr.7"* noalias nocapture sret, %class.CFWL_FontManager*, %"class.fxcrt::StringViewTemplate"* nocapture readonly, i32, i16 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = getelementptr inbounds %class.CFWL_FontManager, %class.CFWL_FontManager* %1, i64 0, i32 0
  %10 = getelementptr inbounds %class.CFWL_FontManager, %class.CFWL_FontManager* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %12 = getelementptr inbounds %class.CFWL_FontManager, %class.CFWL_FontManager* %1, i64 0, i32 0, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr"* %11, %13
  %15 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i8*
  br i1 %14, label %49, label %16

16:                                               ; preds = %5
  %17 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  %18 = zext i16 %4 to i32
  br label %19

19:                                               ; preds = %16, %46
  %20 = phi %"class.std::__1::unique_ptr"* [ %11, %16 ], [ %47, %46 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.CFWL_FontManager::FontData"*, %"class.CFWL_FontManager::FontData"** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  %23 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %22, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %15, i64 16, i1 false)
  %24 = call zeroext i1 @_ZNK5fxcrt10WideStringeqENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* %23, %"class.fxcrt::StringViewTemplate"* nonnull %6) #11
  br i1 %24, label %25, label %29

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %22, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, %3
  br i1 %28, label %30, label %29

29:                                               ; preds = %25, %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  br label %46

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %22, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, %18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  br i1 %33, label %34, label %46

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.CFWL_FontManager::FontData"*, %"class.CFWL_FontManager::FontData"** %35, align 8
  %37 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %36, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %38 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %37, align 8, !noalias !2
  %39 = ptrtoint %class.CFGAS_GEFont* %38 to i64
  %40 = bitcast %"class.fxcrt::RetainPtr.7"* %0 to i64*
  store i64 %39, i64* %40, align 8, !alias.scope !2
  %41 = icmp eq %class.CFGAS_GEFont* %38, null
  br i1 %41, label %109, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %38, i64 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8, !noalias !2
  %45 = add nsw i64 %44, 1
  store i64 %45, i64* %43, align 8, !noalias !2
  br label %109

46:                                               ; preds = %30, %29
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 1
  %48 = icmp eq %"class.std::__1::unique_ptr"* %47, %13
  br i1 %48, label %49, label %19

49:                                               ; preds = %46, %5
  %50 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %52 = call i8* @_Znwm(i64 24) #10
  %53 = bitcast i8* %52 to %"class.CFWL_FontManager::FontData"*
  %54 = bitcast i8* %52 to %"class.fxcrt::WideString"*
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %54) #11
  %55 = getelementptr inbounds i8, i8* %52, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #11
  %56 = bitcast %"class.std::__1::unique_ptr"* %7 to i8**
  store i8* %52, i8** %56, align 8
  %57 = bitcast %"class.fxcrt::StringViewTemplate"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* align 8 %15, i64 16, i1 false)
  %58 = call zeroext i1 @_ZN16CFWL_FontManager8FontData8LoadFontEN5fxcrt18StringViewTemplateIwEEjt(%"class.CFWL_FontManager::FontData"* nonnull %53, %"class.fxcrt::StringViewTemplate"* nonnull %8, i32 %3, i16 zeroext %4)
  %59 = ptrtoint i8* %52 to i64
  br i1 %58, label %62, label %60

60:                                               ; preds = %49
  %61 = bitcast %"class.fxcrt::RetainPtr.7"* %0 to i64*
  store i64 0, i64* %61, align 8
  br label %87

62:                                               ; preds = %49
  %63 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %64 = getelementptr inbounds %class.CFWL_FontManager, %class.CFWL_FontManager* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %65 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %64, align 8
  %66 = icmp ult %"class.std::__1::unique_ptr"* %63, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %51, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %59, i64* %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %63, i64 1
  %70 = ptrtoint %"class.std::__1::unique_ptr"* %69 to i64
  %71 = bitcast %"class.std::__1::unique_ptr"** %12 to i64*
  store i64 %70, i64* %71, align 8
  br label %74

72:                                               ; preds = %62
  call void @_ZNSt3__16vectorINS_10unique_ptrIN16CFWL_FontManager8FontDataENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %9, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #11
  %73 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  br label %74

74:                                               ; preds = %67, %72
  %75 = phi %"class.std::__1::unique_ptr"* [ %69, %67 ], [ %73, %72 ]
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 -1, i32 0, i32 0, i32 0
  %77 = load %"class.CFWL_FontManager::FontData"*, %"class.CFWL_FontManager::FontData"** %76, align 8
  %78 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %77, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %79 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %78, align 8, !noalias !5
  %80 = ptrtoint %class.CFGAS_GEFont* %79 to i64
  %81 = bitcast %"class.fxcrt::RetainPtr.7"* %0 to i64*
  store i64 %80, i64* %81, align 8, !alias.scope !5
  %82 = icmp eq %class.CFGAS_GEFont* %79, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %79, i64 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8, !noalias !5
  %86 = add nsw i64 %85, 1
  store i64 %86, i64* %84, align 8, !noalias !5
  br label %87

87:                                               ; preds = %83, %74, %60
  %88 = load %"class.CFWL_FontManager::FontData"*, %"class.CFWL_FontManager::FontData"** %51, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %51, align 8
  %89 = icmp eq %"class.CFWL_FontManager::FontData"* %88, null
  br i1 %89, label %108, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %88, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %92 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %91, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %91, align 8
  %93 = icmp eq %class.CFGAS_GEFont* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %92, i64 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = add nsw i64 %96, -1
  store i64 %97, i64* %95, align 8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %105

99:                                               ; preds = %94
  %100 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %92, i64 0, i32 0
  %101 = bitcast %class.CFGAS_GEFont* %92 to void (%"class.fxcrt::Retainable"*)***
  %102 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %102, i64 1
  %104 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %103, align 8
  call void %104(%"class.fxcrt::Retainable"* nonnull %100) #11
  br label %105

105:                                              ; preds = %99, %94, %90
  %106 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %88, i64 0, i32 0
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %106) #11
  %107 = bitcast %"class.CFWL_FontManager::FontData"* %88 to i8*
  call void @_ZdlPv(i8* %107) #10
  br label %108

108:                                              ; preds = %87, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  br label %109

109:                                              ; preds = %42, %34, %108
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFWL_FontManager8FontData5EqualEN5fxcrt18StringViewTemplateIwEEjt(%"class.CFWL_FontManager::FontData"*, %"class.fxcrt::StringViewTemplate"* nocapture readonly, i32, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %0, i64 0, i32 0
  %7 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  %8 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %9 = call zeroext i1 @_ZNK5fxcrt10WideStringeqENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* %6, %"class.fxcrt::StringViewTemplate"* nonnull %5) #11
  br i1 %9, label %10, label %19

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, %2
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i16 %3 to i32
  %18 = icmp eq i32 %16, %17
  br label %19

19:                                               ; preds = %14, %10, %4
  %20 = phi i1 [ false, %10 ], [ false, %4 ], [ %18, %14 ]
  ret i1 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK16CFWL_FontManager8FontData7GetFontEv(%"class.fxcrt::RetainPtr.7"* noalias nocapture sret, %"class.CFWL_FontManager::FontData"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %3, align 8
  %5 = ptrtoint %class.CFGAS_GEFont* %4 to i64
  %6 = bitcast %"class.fxcrt::RetainPtr.7"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = icmp eq %class.CFGAS_GEFont* %4, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %4, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFWL_FontManager8FontData8LoadFontEN5fxcrt18StringViewTemplateIwEEjt(%"class.CFWL_FontManager::FontData"*, %"class.fxcrt::StringViewTemplate"* nocapture readonly, i32, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::RetainPtr.7", align 8
  %7 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  %8 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %0, i64 0, i32 0
  %10 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* %9, %"class.fxcrt::StringViewTemplate"* nonnull %5) #11
  %11 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %0, i64 0, i32 1
  store i32 %2, i32* %11, align 8
  %12 = zext i16 %3 to i32
  %13 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %0, i64 0, i32 2
  store i32 %12, i32* %13, align 4
  %14 = bitcast %"class.fxcrt::RetainPtr.7"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  call void @_ZN12CFGAS_GEFont8LoadFontEPKwjt(%"class.fxcrt::RetainPtr.7"* nonnull sret %6, i32* %16, i32 %2, i16 zeroext %3) #11
  %17 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.fxcrt::RetainPtr.7", %"class.fxcrt::RetainPtr.7"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.fxcrt::RetainPtr.7"* %6 to i64*
  %20 = load i64, i64* %19, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %18, align 8
  %21 = getelementptr inbounds %"class.fxcrt::RetainPtr.7", %"class.fxcrt::RetainPtr.7"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %21, align 8
  %23 = bitcast %"class.fxcrt::RetainPtr.7"* %17 to i64*
  store i64 %20, i64* %23, align 8
  %24 = icmp eq %class.CFGAS_GEFont* %22, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %22, i64 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, -1
  store i64 %28, i64* %26, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %4, %25
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %18, align 8
  br label %50

31:                                               ; preds = %25
  %32 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %22, i64 0, i32 0
  %33 = bitcast %class.CFGAS_GEFont* %22 to void (%"class.fxcrt::Retainable"*)***
  %34 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %34, i64 1
  %36 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %35, align 8
  call void %36(%"class.fxcrt::Retainable"* nonnull %32) #11
  %37 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %18, align 8
  %38 = bitcast %class.CFGAS_GEFont* %37 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %18, align 8
  %39 = icmp eq %class.CFGAS_GEFont* %37, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %37, i64 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %37, i64 0, i32 0
  %47 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %38, align 8
  %48 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %47, i64 1
  %49 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, align 8
  call void %49(%"class.fxcrt::Retainable"* nonnull %46) #11
  br label %50

50:                                               ; preds = %30, %31, %40, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %51 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %21, align 8
  %52 = icmp ne %class.CFGAS_GEFont* %51, null
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFWL_FontManager8FontDataC2Ev(%"class.CFWL_FontManager::FontData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %2) #11
  %3 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %0, i64 0, i32 1
  %4 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFWL_FontManager8FontDataD2Ev(%"class.CFWL_FontManager::FontData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %2, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %2, align 8
  %4 = icmp eq %class.CFGAS_GEFont* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %3, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %3, i64 0, i32 0
  %12 = bitcast %class.CFGAS_GEFont* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %5, %10
  %17 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %17) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #6

declare zeroext i1 @_ZNK5fxcrt10WideStringeqENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #5

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #5

declare void @_ZN12CFGAS_GEFont8LoadFontEPKwjt(%"class.fxcrt::RetainPtr.7"* sret, i32*, i32, i16 zeroext) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN16CFWL_FontManager8FontDataENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.CFWL_FontManager::FontData"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !8

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %165, label %139

139:                                              ; preds = %132, %163
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %163 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.CFWL_FontManager::FontData"*, %"class.CFWL_FontManager::FontData"** %142, align 8
  store %"class.CFWL_FontManager::FontData"* null, %"class.CFWL_FontManager::FontData"** %142, align 8
  %144 = icmp eq %"class.CFWL_FontManager::FontData"* %143, null
  br i1 %144, label %163, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %143, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %147 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %146, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %146, align 8
  %148 = icmp eq %class.CFGAS_GEFont* %147, null
  br i1 %148, label %160, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %147, i64 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = add nsw i64 %151, -1
  store i64 %152, i64* %150, align 8
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %160

154:                                              ; preds = %149
  %155 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %147, i64 0, i32 0
  %156 = bitcast %class.CFGAS_GEFont* %147 to void (%"class.fxcrt::Retainable"*)***
  %157 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %157, i64 1
  %159 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %158, align 8
  tail call void %159(%"class.fxcrt::Retainable"* nonnull %155) #11
  br label %160

160:                                              ; preds = %154, %149, %145
  %161 = getelementptr inbounds %"class.CFWL_FontManager::FontData", %"class.CFWL_FontManager::FontData"* %143, i64 0, i32 0
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %161) #11
  %162 = bitcast %"class.CFWL_FontManager::FontData"* %143 to i8*
  tail call void @_ZdlPv(i8* %162) #10
  br label %163

163:                                              ; preds = %160, %139
  %164 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %164, label %165, label %139

165:                                              ; preds = %163, %132
  %166 = icmp eq i64 %135, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %165
  %168 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %168) #10
  br label %169

169:                                              ; preds = %165, %167
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK16CFWL_FontManager8FontData7GetFontEv: argument 0"}
!4 = distinct !{!4, !"_ZNK16CFWL_FontManager8FontData7GetFontEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK16CFWL_FontManager8FontData7GetFontEv: argument 0"}
!7 = distinct !{!7, !"_ZNK16CFWL_FontManager8FontData7GetFontEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
