; ModuleID = '../../components/variations/study_filtering.cc'
source_filename = "../../components/variations/study_filtering.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.variations::LayerMemberReferenceDefaultTypeInternal" = type opaque
%"class.variations::Study_FilterDefaultTypeInternal" = type opaque
%"class.variations::Study_Filter" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", i64, i64, i8, i8, i32 }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.5", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.google::protobuf::RepeatedField" = type { i32, i32, i8* }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::Version" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i32* }
%"struct.variations::ClientFilterableState" = type <{ %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Version", %"class.base::Version", i32, i32, i32, i32, %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.base::OnceCallback", %"class.absl::optional", [6 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.16 }
%union.anon.16 = type { i8 }
%"class.variations::Study" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.17", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"class.variations::Study_Filter"*, %"class.variations::LayerMemberReference"*, i64, i32, i32, i32, [4 x i8] }>
%"class.google::protobuf::RepeatedPtrField.17" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.variations::LayerMemberReference" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i32, i32 }
%"class.variations::VariationsLayers" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.variations::VariationsSeed" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.26", %"class.google::protobuf::RepeatedPtrField.27", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"class.google::protobuf::RepeatedPtrField.26" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedPtrField.27" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.std::__1::vector.28" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.29" }
%"class.std::__1::__tree.29" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.variations::Study"**, %"class.variations::Study"**, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.variations::Study"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>

$_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str.4 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@_ZN10variations39_LayerMemberReference_default_instance_E = external local_unnamed_addr global %"class.variations::LayerMemberReferenceDefaultTypeInternal", align 1
@_ZN10variations31_Study_Filter_default_instance_E = external global %"class.variations::Study_FilterDefaultTypeInternal", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal17CheckStudyChannelERKNS_12Study_FilterENS_13Study_ChannelE(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 3, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = icmp sgt i32 %4, 0
  br i1 %7, label %8, label %21

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 3, i32 2
  %10 = bitcast i8** %9 to i32**
  %11 = load i32*, i32** %10, align 8
  %12 = zext i32 %4 to i64
  br label %15

13:                                               ; preds = %15
  %14 = icmp eq i64 %20, %12
  br i1 %14, label %21, label %15

15:                                               ; preds = %13, %8
  %16 = phi i64 [ 0, %8 ], [ %20, %13 ]
  %17 = getelementptr inbounds i32, i32* %11, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, %1
  %20 = add nuw nsw i64 %16, 1
  br i1 %19, label %21, label %13

21:                                               ; preds = %15, %13, %6, %2
  %22 = phi i1 [ true, %2 ], [ false, %6 ], [ true, %15 ], [ false, %13 ]
  ret i1 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal20CheckStudyFormFactorERKNS_12Study_FilterENS_16Study_FormFactorE(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 6, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 12, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %57, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 12, i32 2
  %12 = bitcast i8** %11 to i32**
  %13 = load i32*, i32** %12, align 8
  %14 = sext i32 %8 to i64
  %15 = getelementptr inbounds i32, i32* %13, i64 %14
  br label %43

16:                                               ; preds = %2
  %17 = icmp sgt i32 %4, 0
  br i1 %17, label %18, label %34

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 6, i32 2
  %20 = bitcast i8** %19 to i32**
  %21 = load i32*, i32** %20, align 8
  %22 = sext i32 %4 to i64
  %23 = getelementptr inbounds i32, i32* %21, i64 %22
  br label %24

24:                                               ; preds = %18, %28
  %25 = phi i32* [ %29, %28 ], [ %21, %18 ]
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, %1
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds i32, i32* %25, i64 1
  %30 = icmp eq i32* %29, %23
  br i1 %30, label %31, label %24

31:                                               ; preds = %24, %28
  %32 = phi i32* [ %25, %24 ], [ %23, %28 ]
  %33 = icmp ne i32* %32, %23
  br label %57

34:                                               ; preds = %16
  %35 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 12, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 12, i32 2
  %38 = bitcast i8** %37 to i32**
  %39 = load i32*, i32** %38, align 8
  %40 = sext i32 %36 to i64
  %41 = getelementptr inbounds i32, i32* %39, i64 %40
  %42 = icmp eq i32 %36, 0
  br i1 %42, label %53, label %43

43:                                               ; preds = %10, %34
  %44 = phi i32* [ %15, %10 ], [ %41, %34 ]
  %45 = phi i32* [ %13, %10 ], [ %39, %34 ]
  br label %46

46:                                               ; preds = %43, %50
  %47 = phi i32* [ %51, %50 ], [ %45, %43 ]
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %1
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds i32, i32* %47, i64 1
  %52 = icmp eq i32* %51, %44
  br i1 %52, label %53, label %46

53:                                               ; preds = %46, %50, %34
  %54 = phi i32* [ %41, %34 ], [ %44, %50 ], [ %44, %46 ]
  %55 = phi i32* [ %39, %34 ], [ %47, %46 ], [ %44, %50 ]
  %56 = icmp eq i32* %55, %54
  br label %57

57:                                               ; preds = %6, %53, %31
  %58 = phi i1 [ %33, %31 ], [ %56, %53 ], [ true, %6 ]
  ret i1 %58
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal25CheckStudyCpuArchitectureERKNS_12Study_FilterENS_21Study_CpuArchitectureE(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 13, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 14, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %57, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 14, i32 2
  %12 = bitcast i8** %11 to i32**
  %13 = load i32*, i32** %12, align 8
  %14 = sext i32 %8 to i64
  %15 = getelementptr inbounds i32, i32* %13, i64 %14
  br label %43

16:                                               ; preds = %2
  %17 = icmp sgt i32 %4, 0
  br i1 %17, label %18, label %34

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 13, i32 2
  %20 = bitcast i8** %19 to i32**
  %21 = load i32*, i32** %20, align 8
  %22 = sext i32 %4 to i64
  %23 = getelementptr inbounds i32, i32* %21, i64 %22
  br label %24

24:                                               ; preds = %18, %28
  %25 = phi i32* [ %29, %28 ], [ %21, %18 ]
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, %1
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds i32, i32* %25, i64 1
  %30 = icmp eq i32* %29, %23
  br i1 %30, label %31, label %24

31:                                               ; preds = %24, %28
  %32 = phi i32* [ %25, %24 ], [ %23, %28 ]
  %33 = icmp ne i32* %32, %23
  br label %57

34:                                               ; preds = %16
  %35 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 14, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 14, i32 2
  %38 = bitcast i8** %37 to i32**
  %39 = load i32*, i32** %38, align 8
  %40 = sext i32 %36 to i64
  %41 = getelementptr inbounds i32, i32* %39, i64 %40
  %42 = icmp eq i32 %36, 0
  br i1 %42, label %53, label %43

43:                                               ; preds = %10, %34
  %44 = phi i32* [ %15, %10 ], [ %41, %34 ]
  %45 = phi i32* [ %13, %10 ], [ %39, %34 ]
  br label %46

46:                                               ; preds = %43, %50
  %47 = phi i32* [ %51, %50 ], [ %45, %43 ]
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %1
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds i32, i32* %47, i64 1
  %52 = icmp eq i32* %51, %44
  br i1 %52, label %53, label %46

53:                                               ; preds = %46, %50, %34
  %54 = phi i32* [ %41, %34 ], [ %44, %50 ], [ %44, %46 ]
  %55 = phi i32* [ %39, %34 ], [ %47, %46 ], [ %44, %50 ]
  %56 = icmp eq i32* %55, %54
  br label %57

57:                                               ; preds = %6, %53, %31
  %58 = phi i1 [ %33, %31 ], [ %56, %53 ], [ true, %6 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal23CheckStudyHardwareClassERKNS_12Study_FilterERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 7, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 8, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %123, label %65

10:                                               ; preds = %2
  %11 = icmp sgt i32 %4, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 8, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  br label %65

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 7, i32 0, i32 3
  %17 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %16, align 8
  %18 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %17, null
  %19 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %17, i64 0, i32 1, i64 0
  %20 = select i1 %18, i8** null, i8** %19
  %21 = sext i32 %4 to i64
  %22 = getelementptr inbounds i8*, i8** %20, i64 %21
  %23 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %28

28:                                               ; preds = %52, %15
  %29 = phi i8** [ %20, %15 ], [ %53, %52 ]
  %30 = bitcast i8** %29 to %"class.std::__1::basic_string"**
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %39 = select i1 %35, i8* %37, i8* %38
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = zext i8 %34 to i64
  %43 = select i1 %35, i64 %41, i64 %42
  %44 = load i8, i8* %24, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i8*, i8** %25, align 8
  %47 = select i1 %45, i8* %46, i8* %26
  %48 = load i64, i64* %27, align 8
  %49 = zext i8 %44 to i64
  %50 = select i1 %45, i64 %48, i64 %49
  %51 = tail call zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %39, i64 %43, i8* %47, i64 %50) #13
  br i1 %51, label %55, label %52

52:                                               ; preds = %28
  %53 = getelementptr inbounds i8*, i8** %29, i64 1
  %54 = icmp eq i8** %53, %22
  br i1 %54, label %55, label %28

55:                                               ; preds = %28, %52
  %56 = phi i8** [ %22, %52 ], [ %29, %28 ]
  %57 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %16, align 8
  %58 = load i32, i32* %3, align 8
  %59 = sext i32 %58 to i64
  %60 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %57, null
  %61 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %57, i64 0, i32 1, i64 0
  %62 = select i1 %60, i8** null, i8** %61
  %63 = getelementptr inbounds i8*, i8** %62, i64 %59
  %64 = icmp ne i8** %56, %63
  br label %123

65:                                               ; preds = %12, %6
  %66 = phi i32 [ %14, %12 ], [ %8, %6 ]
  %67 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 8, i32 0, i32 3
  %68 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %67, align 8
  %69 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %68, null
  %70 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %68, i64 0, i32 1, i64 0
  %71 = select i1 %69, i8** null, i8** %70
  %72 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 8, i32 0, i32 1
  %73 = sext i32 %66 to i64
  %74 = getelementptr inbounds i8*, i8** %71, i64 %73
  %75 = icmp eq i32 %66, 0
  br i1 %75, label %114, label %76

76:                                               ; preds = %65
  %77 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %82

82:                                               ; preds = %106, %76
  %83 = phi i8** [ %71, %76 ], [ %107, %106 ]
  %84 = bitcast i8** %83 to %"class.std::__1::basic_string"**
  %85 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %84, align 8
  %86 = bitcast %"class.std::__1::basic_string"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  %93 = select i1 %89, i8* %91, i8* %92
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = zext i8 %88 to i64
  %97 = select i1 %89, i64 %95, i64 %96
  %98 = load i8, i8* %78, align 1
  %99 = icmp slt i8 %98, 0
  %100 = load i8*, i8** %79, align 8
  %101 = select i1 %99, i8* %100, i8* %80
  %102 = load i64, i64* %81, align 8
  %103 = zext i8 %98 to i64
  %104 = select i1 %99, i64 %102, i64 %103
  %105 = tail call zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %93, i64 %97, i8* %101, i64 %104) #13
  br i1 %105, label %109, label %106

106:                                              ; preds = %82
  %107 = getelementptr inbounds i8*, i8** %83, i64 1
  %108 = icmp eq i8** %107, %74
  br i1 %108, label %109, label %82

109:                                              ; preds = %106, %82
  %110 = phi i8** [ %74, %106 ], [ %83, %82 ]
  %111 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %67, align 8
  %112 = load i32, i32* %72, align 8
  %113 = sext i32 %112 to i64
  br label %114

114:                                              ; preds = %65, %109
  %115 = phi i64 [ 0, %65 ], [ %113, %109 ]
  %116 = phi %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* [ %68, %65 ], [ %111, %109 ]
  %117 = phi i8** [ %71, %65 ], [ %110, %109 ]
  %118 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %116, null
  %119 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %116, i64 0, i32 1, i64 0
  %120 = select i1 %118, i8** null, i8** %119
  %121 = getelementptr inbounds i8*, i8** %120, i64 %115
  %122 = icmp eq i8** %117, %121
  br label %123

123:                                              ; preds = %6, %114, %55
  %124 = phi i1 [ %64, %55 ], [ %122, %114 ], [ true, %6 ]
  ret i1 %124
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal16CheckStudyLocaleERKNS_12Study_FilterERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 5, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 11, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %152, label %82

10:                                               ; preds = %2
  %11 = icmp sgt i32 %4, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 11, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  br label %82

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 5, i32 0, i32 3
  %17 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %16, align 8
  %18 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %17, null
  %19 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %17, i64 0, i32 1, i64 0
  %20 = select i1 %18, i8** null, i8** %19
  %21 = sext i32 %4 to i64
  %22 = getelementptr inbounds i8*, i8** %20, i64 %21
  %23 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %34 = select i1 %26, i8* %32, i8* %33
  %35 = icmp eq i64 %30, 0
  br label %36

36:                                               ; preds = %76, %15
  %37 = phi i8** [ %20, %15 ], [ %77, %76 ]
  %38 = bitcast i8** %37 to %"class.std::__1::basic_string"**
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %42 to i64
  %47 = select i1 %43, i64 %45, i64 %46
  %48 = icmp eq i64 %47, %30
  br i1 %48, label %49, label %76

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %53 = select i1 %43, i8* %51, i8* %52
  br i1 %43, label %60, label %54

54:                                               ; preds = %49
  br i1 %35, label %79, label %55

55:                                               ; preds = %54
  %56 = ptrtoint i8* %51 to i64
  %57 = trunc i64 %56 to i8
  %58 = load i8, i8* %34, align 1
  %59 = icmp eq i8 %58, %57
  br i1 %59, label %61, label %76

60:                                               ; preds = %49
  br i1 %35, label %79, label %73

61:                                               ; preds = %55, %68
  %62 = phi i64 [ %65, %68 ], [ %46, %55 ]
  %63 = phi i8* [ %66, %68 ], [ %52, %55 ]
  %64 = phi i8* [ %69, %68 ], [ %34, %55 ]
  %65 = add i64 %62, -1
  %66 = getelementptr inbounds i8, i8* %63, i64 1
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds i8, i8* %64, i64 1
  %70 = load i8, i8* %66, align 1
  %71 = load i8, i8* %69, align 1
  %72 = icmp eq i8 %70, %71
  br i1 %72, label %61, label %76

73:                                               ; preds = %60
  %74 = tail call i32 @bcmp(i8* %53, i8* %34, i64 %30) #13
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %68, %73, %55, %36
  %77 = getelementptr inbounds i8*, i8** %37, i64 1
  %78 = icmp eq i8** %77, %22
  br i1 %78, label %79, label %36

79:                                               ; preds = %54, %60, %73, %76, %61
  %80 = phi i8** [ %37, %61 ], [ %37, %73 ], [ %37, %60 ], [ %37, %54 ], [ %22, %76 ]
  %81 = icmp ne i8** %80, %22
  br label %152

82:                                               ; preds = %12, %6
  %83 = phi i32 [ %14, %12 ], [ %8, %6 ]
  %84 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 11, i32 0, i32 3
  %85 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %84, align 8
  %86 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %85, null
  %87 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %85, i64 0, i32 1, i64 0
  %88 = select i1 %86, i8** null, i8** %87
  %89 = sext i32 %83 to i64
  %90 = getelementptr inbounds i8*, i8** %88, i64 %89
  %91 = icmp eq i32 %83, 0
  br i1 %91, label %149, label %92

92:                                               ; preds = %82
  %93 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = zext i8 %95 to i64
  %100 = select i1 %96, i64 %98, i64 %99
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %104 = select i1 %96, i8* %102, i8* %103
  %105 = icmp eq i64 %100, 0
  br label %106

106:                                              ; preds = %146, %92
  %107 = phi i8** [ %88, %92 ], [ %147, %146 ]
  %108 = bitcast i8** %107 to %"class.std::__1::basic_string"**
  %109 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %108, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = zext i8 %112 to i64
  %117 = select i1 %113, i64 %115, i64 %116
  %118 = icmp eq i64 %117, %100
  br i1 %118, label %119, label %146

119:                                              ; preds = %106
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  %123 = select i1 %113, i8* %121, i8* %122
  br i1 %113, label %130, label %124

124:                                              ; preds = %119
  br i1 %105, label %149, label %125

125:                                              ; preds = %124
  %126 = ptrtoint i8* %121 to i64
  %127 = trunc i64 %126 to i8
  %128 = load i8, i8* %104, align 1
  %129 = icmp eq i8 %128, %127
  br i1 %129, label %131, label %146

130:                                              ; preds = %119
  br i1 %105, label %149, label %143

131:                                              ; preds = %125, %138
  %132 = phi i64 [ %135, %138 ], [ %116, %125 ]
  %133 = phi i8* [ %136, %138 ], [ %122, %125 ]
  %134 = phi i8* [ %139, %138 ], [ %104, %125 ]
  %135 = add i64 %132, -1
  %136 = getelementptr inbounds i8, i8* %133, i64 1
  %137 = icmp eq i64 %135, 0
  br i1 %137, label %149, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds i8, i8* %134, i64 1
  %140 = load i8, i8* %136, align 1
  %141 = load i8, i8* %139, align 1
  %142 = icmp eq i8 %140, %141
  br i1 %142, label %131, label %146

143:                                              ; preds = %130
  %144 = tail call i32 @bcmp(i8* %123, i8* %104, i64 %100) #13
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %149, label %146

146:                                              ; preds = %138, %143, %125, %106
  %147 = getelementptr inbounds i8*, i8** %107, i64 1
  %148 = icmp eq i8** %147, %90
  br i1 %148, label %149, label %106

149:                                              ; preds = %124, %130, %143, %146, %131, %82
  %150 = phi i8** [ %88, %82 ], [ %107, %131 ], [ %107, %143 ], [ %107, %130 ], [ %107, %124 ], [ %90, %146 ]
  %151 = icmp eq i8** %150, %90
  br label %152

152:                                              ; preds = %6, %149, %79
  %153 = phi i1 [ %81, %79 ], [ %151, %149 ], [ true, %6 ]
  ret i1 %153
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal18CheckStudyPlatformERKNS_12Study_FilterENS_14Study_PlatformE(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 4, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 4, i32 2
  %8 = bitcast i8** %7 to i32**
  %9 = load i32*, i32** %8, align 8
  %10 = sext i32 %4 to i64
  br label %13

11:                                               ; preds = %13
  %12 = icmp slt i64 %18, %10
  br i1 %12, label %13, label %19

13:                                               ; preds = %6, %11
  %14 = phi i64 [ 0, %6 ], [ %18, %11 ]
  %15 = getelementptr inbounds i32, i32* %9, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %1
  %18 = add nuw nsw i64 %14, 1
  br i1 %17, label %19, label %11

19:                                               ; preds = %13, %11, %2
  %20 = phi i1 [ false, %2 ], [ false, %11 ], [ true, %13 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal22CheckStudyLowEndDeviceERKNS_12Study_FilterEb(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), i1 zeroext) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 1, i32 0, i64 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 64
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 21
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = xor i1 %10, %1
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi i1 [ true, %2 ], [ %11, %7 ]
  ret i1 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal27CheckStudyPolicyRestrictionERKNS_12Study_FilterENS_17RestrictionPolicyE(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), i32) local_unnamed_addr #0 {
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %7
    i32 2, label %12
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 23
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, 2
  br label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 23
  %9 = load i32, i32* %8, align 4
  %10 = icmp ne i32 %9, 0
  br label %12

11:                                               ; preds = %2
  unreachable

12:                                               ; preds = %2, %7, %3
  %13 = phi i1 [ %10, %7 ], [ %6, %3 ], [ false, %2 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal19CheckStudyStartDateERKNS_12Study_FilterERKN4base4TimeE(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), %"class.base::Time"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 1, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %40, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 19
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @_ZN4base4Time9UnixEpochEv() #13
  %12 = icmp slt i64 %10, 0
  %13 = select i1 %12, i64 -9223372036854775808, i64 9223372036854775807
  %14 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %10, i64 1000000) #13
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 %13, i64 %16, !prof !3
  %18 = add i64 %17, -9223372036854775807
  %19 = icmp ult i64 %18, 2
  br i1 %19, label %27, label %20

20:                                               ; preds = %8
  %21 = icmp slt i64 %17, 0
  %22 = select i1 %21, i64 -9223372036854775808, i64 9223372036854775807
  %23 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %11, i64 %17) #13
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = select i1 %24, i64 %22, i64 %25, !prof !3
  br label %35

27:                                               ; preds = %8
  %28 = add i64 %11, -9223372036854775807
  %29 = icmp ugt i64 %28, 1
  %30 = icmp eq i64 %11, %17
  %31 = or i1 %29, %30
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #13
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br label %35

35:                                               ; preds = %20, %27, %32
  %36 = phi i64 [ %26, %20 ], [ %17, %27 ], [ %17, %32 ]
  %37 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp sge i64 %38, %36
  br label %40

40:                                               ; preds = %2, %35
  %41 = phi i1 [ %39, %35 ], [ true, %2 ]
  ret i1 %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal17CheckStudyEndDateERKNS_12Study_FilterERKN4base4TimeE(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), %"class.base::Time"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 1, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 32
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %40, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 20
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @_ZN4base4Time9UnixEpochEv() #13
  %12 = icmp slt i64 %10, 0
  %13 = select i1 %12, i64 -9223372036854775808, i64 9223372036854775807
  %14 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %10, i64 1000000) #13
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 %13, i64 %16, !prof !3
  %18 = add i64 %17, -9223372036854775807
  %19 = icmp ult i64 %18, 2
  br i1 %19, label %27, label %20

20:                                               ; preds = %8
  %21 = icmp slt i64 %17, 0
  %22 = select i1 %21, i64 -9223372036854775808, i64 9223372036854775807
  %23 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %11, i64 %17) #13
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = select i1 %24, i64 %22, i64 %25, !prof !3
  br label %35

27:                                               ; preds = %8
  %28 = add i64 %11, -9223372036854775807
  %29 = icmp ugt i64 %28, 1
  %30 = icmp eq i64 %11, %17
  %31 = or i1 %29, %30
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #13
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br label %35

35:                                               ; preds = %20, %27, %32
  %36 = phi i64 [ %26, %20 ], [ %17, %27 ], [ %17, %32 ]
  %37 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp sge i64 %36, %38
  br label %40

40:                                               ; preds = %2, %35
  %41 = phi i1 [ %39, %35 ], [ true, %2 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal17CheckStudyVersionERKNS_12Study_FilterERKN4base7VersionE(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), %"class.base::Version"* dereferenceable(24)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 1, i32 0, i64 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 15, i32 0
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %17 = select i1 %13, i8* %15, i8* %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %12 to i64
  %21 = select i1 %13, i64 %19, i64 %20
  %22 = tail call i32 @_ZNK4base7Version23CompareToWildcardStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* %1, i8* %17, i64 %21) #13
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %48, label %24

24:                                               ; preds = %7
  %25 = load i32, i32* %3, align 4
  br label %26

26:                                               ; preds = %24, %2
  %27 = phi i32 [ %25, %24 ], [ %4, %2 ]
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %47, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 16, i32 0
  %32 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %40 = select i1 %36, i8* %38, i8* %39
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %35 to i64
  %44 = select i1 %36, i64 %42, i64 %43
  %45 = tail call i32 @_ZNK4base7Version23CompareToWildcardStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* %1, i8* %40, i64 %44) #13
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %26, %30
  br label %48

48:                                               ; preds = %30, %7, %47
  %49 = phi i1 [ true, %47 ], [ false, %7 ], [ false, %30 ]
  ret i1 %49
}

declare i32 @_ZNK4base7Version23CompareToWildcardStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal19CheckStudyOSVersionERKNS_12Study_FilterERKN4base7VersionE(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), %"class.base::Version"* dereferenceable(24)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 1, i32 0, i64 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %2
  %8 = tail call zeroext i1 @_ZNK4base7Version7IsValidEv(%"class.base::Version"* %1) #13
  br i1 %8, label %9, label %52

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 17, i32 0
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %19 = select i1 %15, i8* %17, i8* %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %14 to i64
  %23 = select i1 %15, i64 %21, i64 %22
  %24 = tail call i32 @_ZNK4base7Version23CompareToWildcardStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* %1, i8* %19, i64 %23) #13
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %52, label %26

26:                                               ; preds = %9
  %27 = load i32, i32* %3, align 4
  br label %28

28:                                               ; preds = %26, %2
  %29 = phi i32 [ %27, %26 ], [ %4, %2 ]
  %30 = and i32 %29, 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %51, label %32

32:                                               ; preds = %28
  %33 = tail call zeroext i1 @_ZNK4base7Version7IsValidEv(%"class.base::Version"* %1) #13
  br i1 %33, label %34, label %52

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 18, i32 0
  %36 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %44 = select i1 %40, i8* %42, i8* %43
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %39 to i64
  %48 = select i1 %40, i64 %46, i64 %47
  %49 = tail call i32 @_ZNK4base7Version23CompareToWildcardStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* %1, i8* %44, i64 %48) #13
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %28, %34
  br label %52

52:                                               ; preds = %34, %32, %9, %7, %51
  %53 = phi i1 [ true, %51 ], [ false, %7 ], [ false, %9 ], [ false, %32 ], [ false, %34 ]
  ret i1 %53
}

declare zeroext i1 @_ZNK4base7Version7IsValidEv(%"class.base::Version"*) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal17CheckStudyCountryERKNS_12Study_FilterERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 9, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 10, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %152, label %82

10:                                               ; preds = %2
  %11 = icmp sgt i32 %4, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 10, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  br label %82

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 9, i32 0, i32 3
  %17 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %16, align 8
  %18 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %17, null
  %19 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %17, i64 0, i32 1, i64 0
  %20 = select i1 %18, i8** null, i8** %19
  %21 = sext i32 %4 to i64
  %22 = getelementptr inbounds i8*, i8** %20, i64 %21
  %23 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %34 = select i1 %26, i8* %32, i8* %33
  %35 = icmp eq i64 %30, 0
  br label %36

36:                                               ; preds = %76, %15
  %37 = phi i8** [ %20, %15 ], [ %77, %76 ]
  %38 = bitcast i8** %37 to %"class.std::__1::basic_string"**
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %42 to i64
  %47 = select i1 %43, i64 %45, i64 %46
  %48 = icmp eq i64 %47, %30
  br i1 %48, label %49, label %76

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %53 = select i1 %43, i8* %51, i8* %52
  br i1 %43, label %60, label %54

54:                                               ; preds = %49
  br i1 %35, label %79, label %55

55:                                               ; preds = %54
  %56 = ptrtoint i8* %51 to i64
  %57 = trunc i64 %56 to i8
  %58 = load i8, i8* %34, align 1
  %59 = icmp eq i8 %58, %57
  br i1 %59, label %61, label %76

60:                                               ; preds = %49
  br i1 %35, label %79, label %73

61:                                               ; preds = %55, %68
  %62 = phi i64 [ %65, %68 ], [ %46, %55 ]
  %63 = phi i8* [ %66, %68 ], [ %52, %55 ]
  %64 = phi i8* [ %69, %68 ], [ %34, %55 ]
  %65 = add i64 %62, -1
  %66 = getelementptr inbounds i8, i8* %63, i64 1
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds i8, i8* %64, i64 1
  %70 = load i8, i8* %66, align 1
  %71 = load i8, i8* %69, align 1
  %72 = icmp eq i8 %70, %71
  br i1 %72, label %61, label %76

73:                                               ; preds = %60
  %74 = tail call i32 @bcmp(i8* %53, i8* %34, i64 %30) #13
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %68, %73, %55, %36
  %77 = getelementptr inbounds i8*, i8** %37, i64 1
  %78 = icmp eq i8** %77, %22
  br i1 %78, label %79, label %36

79:                                               ; preds = %54, %60, %73, %76, %61
  %80 = phi i8** [ %37, %61 ], [ %37, %73 ], [ %37, %60 ], [ %37, %54 ], [ %22, %76 ]
  %81 = icmp ne i8** %80, %22
  br label %152

82:                                               ; preds = %12, %6
  %83 = phi i32 [ %14, %12 ], [ %8, %6 ]
  %84 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 10, i32 0, i32 3
  %85 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %84, align 8
  %86 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %85, null
  %87 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %85, i64 0, i32 1, i64 0
  %88 = select i1 %86, i8** null, i8** %87
  %89 = sext i32 %83 to i64
  %90 = getelementptr inbounds i8*, i8** %88, i64 %89
  %91 = icmp eq i32 %83, 0
  br i1 %91, label %149, label %92

92:                                               ; preds = %82
  %93 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = zext i8 %95 to i64
  %100 = select i1 %96, i64 %98, i64 %99
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %104 = select i1 %96, i8* %102, i8* %103
  %105 = icmp eq i64 %100, 0
  br label %106

106:                                              ; preds = %146, %92
  %107 = phi i8** [ %88, %92 ], [ %147, %146 ]
  %108 = bitcast i8** %107 to %"class.std::__1::basic_string"**
  %109 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %108, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = zext i8 %112 to i64
  %117 = select i1 %113, i64 %115, i64 %116
  %118 = icmp eq i64 %117, %100
  br i1 %118, label %119, label %146

119:                                              ; preds = %106
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  %123 = select i1 %113, i8* %121, i8* %122
  br i1 %113, label %130, label %124

124:                                              ; preds = %119
  br i1 %105, label %149, label %125

125:                                              ; preds = %124
  %126 = ptrtoint i8* %121 to i64
  %127 = trunc i64 %126 to i8
  %128 = load i8, i8* %104, align 1
  %129 = icmp eq i8 %128, %127
  br i1 %129, label %131, label %146

130:                                              ; preds = %119
  br i1 %105, label %149, label %143

131:                                              ; preds = %125, %138
  %132 = phi i64 [ %135, %138 ], [ %116, %125 ]
  %133 = phi i8* [ %136, %138 ], [ %122, %125 ]
  %134 = phi i8* [ %139, %138 ], [ %104, %125 ]
  %135 = add i64 %132, -1
  %136 = getelementptr inbounds i8, i8* %133, i64 1
  %137 = icmp eq i64 %135, 0
  br i1 %137, label %149, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds i8, i8* %134, i64 1
  %140 = load i8, i8* %136, align 1
  %141 = load i8, i8* %139, align 1
  %142 = icmp eq i8 %140, %141
  br i1 %142, label %131, label %146

143:                                              ; preds = %130
  %144 = tail call i32 @bcmp(i8* %123, i8* %104, i64 %100) #13
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %149, label %146

146:                                              ; preds = %138, %143, %125, %106
  %147 = getelementptr inbounds i8*, i8** %107, i64 1
  %148 = icmp eq i8** %147, %90
  br i1 %148, label %149, label %106

149:                                              ; preds = %124, %130, %143, %146, %131, %82
  %150 = phi i8** [ %88, %82 ], [ %107, %131 ], [ %107, %143 ], [ %107, %130 ], [ %107, %124 ], [ %90, %146 ]
  %151 = icmp eq i8** %150, %90
  br label %152

152:                                              ; preds = %6, %149, %79
  %153 = phi i1 [ %81, %79 ], [ %151, %149 ], [ true, %6 ]
  ret i1 %153
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal20CheckStudyEnterpriseERKNS_12Study_FilterERKNS_21ClientFilterableStateE(%"class.variations::Study_Filter"* nocapture readonly dereferenceable(320), %"struct.variations::ClientFilterableState"* dereferenceable(200)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 1, i32 0, i64 0
  %4 = load i32, i32* %3, align 4
  %5 = trunc i32 %4 to i8
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %0, i64 0, i32 22
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = tail call zeroext i1 @_ZNK10variations21ClientFilterableState12IsEnterpriseEv(%"struct.variations::ClientFilterableState"* %1) #13
  %12 = xor i1 %11, %10
  br label %13

13:                                               ; preds = %7, %2
  %14 = phi i1 [ true, %2 ], [ %12, %7 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK10variations21ClientFilterableState12IsEnterpriseEv(%"struct.variations::ClientFilterableState"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZN10variations8internal24GetClientCountryForStudyERKNS_5StudyERKNS_21ClientFilterableStateE(%"class.variations::Study"* nocapture readonly dereferenceable(104), %"struct.variations::ClientFilterableState"* readnone dereferenceable(200)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %0, i64 0, i32 9
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %9 [
    i32 0, label %5
    i32 1, label %7
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 11
  br label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 12
  br label %11

9:                                                ; preds = %2
  %10 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #13
  br label %11

11:                                               ; preds = %9, %7, %5
  %12 = phi %"class.std::__1::basic_string"* [ %10, %9 ], [ %8, %7 ], [ %6, %5 ]
  ret %"class.std::__1::basic_string"* %12
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal14IsStudyExpiredERKNS_5StudyERKN4base4TimeE(%"class.variations::Study"* nocapture readonly dereferenceable(104), %"class.base::Time"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %0, i64 0, i32 1, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %40, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %0, i64 0, i32 8
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @_ZN4base4Time9UnixEpochEv() #13
  %12 = icmp slt i64 %10, 0
  %13 = select i1 %12, i64 -9223372036854775808, i64 9223372036854775807
  %14 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %10, i64 1000000) #13
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 %13, i64 %16, !prof !3
  %18 = add i64 %17, -9223372036854775807
  %19 = icmp ult i64 %18, 2
  br i1 %19, label %27, label %20

20:                                               ; preds = %8
  %21 = icmp slt i64 %17, 0
  %22 = select i1 %21, i64 -9223372036854775808, i64 9223372036854775807
  %23 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %11, i64 %17) #13
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = select i1 %24, i64 %22, i64 %25, !prof !3
  br label %35

27:                                               ; preds = %8
  %28 = add i64 %11, -9223372036854775807
  %29 = icmp ugt i64 %28, 1
  %30 = icmp eq i64 %11, %17
  %31 = or i1 %29, %30
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #13
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br label %35

35:                                               ; preds = %20, %27, %32
  %36 = phi i64 [ %26, %20 ], [ %17, %27 ], [ %17, %32 ]
  %37 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp sge i64 %38, %36
  br label %40

40:                                               ; preds = %2, %35
  %41 = phi i1 [ %39, %35 ], [ false, %2 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10variations8internal14ShouldAddStudyERKNS_5StudyERKNS_21ClientFilterableStateERKNS_16VariationsLayersE(%"class.variations::Study"* dereferenceable(104), %"struct.variations::ClientFilterableState"* dereferenceable(200), %"class.variations::VariationsLayers"* dereferenceable(24)) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %0, i64 0, i32 1, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %0, i64 0, i32 7
  %10 = load %"class.variations::LayerMemberReference"*, %"class.variations::LayerMemberReference"** %9, align 8, !nonnull !4
  %11 = getelementptr inbounds %"class.variations::LayerMemberReference", %"class.variations::LayerMemberReference"* %10, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.variations::LayerMemberReference", %"class.variations::LayerMemberReference"* %10, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = tail call zeroext i1 @_ZNK10variations16VariationsLayers19IsLayerMemberActiveEjj(%"class.variations::VariationsLayers"* %2, i32 %12, i32 %14) #13
  br i1 %15, label %16, label %307

16:                                               ; preds = %8
  %17 = tail call zeroext i1 @_ZN10variations23VariationsSeedProcessor24ShouldStudyUseLowEntropyERKNS_5StudyE(%"class.variations::Study"* dereferenceable(104) %0) #13
  br i1 %17, label %18, label %25

18:                                               ; preds = %16
  %19 = load %"class.variations::LayerMemberReference"*, %"class.variations::LayerMemberReference"** %9, align 8
  %20 = icmp eq %"class.variations::LayerMemberReference"* %19, null
  %21 = select i1 %20, %"class.variations::LayerMemberReference"* bitcast (%"class.variations::LayerMemberReferenceDefaultTypeInternal"* @_ZN10variations39_LayerMemberReference_default_instance_E to %"class.variations::LayerMemberReference"*), %"class.variations::LayerMemberReference"* %19
  %22 = getelementptr inbounds %"class.variations::LayerMemberReference", %"class.variations::LayerMemberReference"* %21, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = tail call zeroext i1 @_ZNK10variations16VariationsLayers26IsLayerUsingDefaultEntropyEj(%"class.variations::VariationsLayers"* %2, i32 %23) #13
  br i1 %24, label %307, label %25

25:                                               ; preds = %3, %16, %18
  %26 = load i32, i32* %4, align 4
  %27 = and i32 %26, 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %307, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %0, i64 0, i32 6
  %31 = load %"class.variations::Study_Filter"*, %"class.variations::Study_Filter"** %30, align 8, !nonnull !4
  %32 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 3, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %52, label %37

37:                                               ; preds = %29
  %38 = icmp sgt i32 %35, 0
  br i1 %38, label %39, label %307

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 3, i32 2
  %41 = bitcast i8** %40 to i32**
  %42 = load i32*, i32** %41, align 8
  %43 = zext i32 %35 to i64
  br label %46

44:                                               ; preds = %46
  %45 = icmp eq i64 %51, %43
  br i1 %45, label %307, label %46

46:                                               ; preds = %44, %39
  %47 = phi i64 [ 0, %39 ], [ %51, %44 ]
  %48 = getelementptr inbounds i32, i32* %42, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %33
  %51 = add nuw nsw i64 %47, 1
  br i1 %50, label %52, label %44

52:                                               ; preds = %46, %29
  %53 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 5
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 6, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %68

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 12, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %108, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 12, i32 2
  %64 = bitcast i8** %63 to i32**
  %65 = load i32*, i32** %64, align 8
  %66 = sext i32 %60 to i64
  %67 = getelementptr inbounds i32, i32* %65, i64 %66
  br label %94

68:                                               ; preds = %52
  %69 = icmp sgt i32 %56, 0
  br i1 %69, label %70, label %85

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 6, i32 2
  %72 = bitcast i8** %71 to i32**
  %73 = load i32*, i32** %72, align 8
  %74 = sext i32 %56 to i64
  %75 = getelementptr inbounds i32, i32* %73, i64 %74
  br label %76

76:                                               ; preds = %80, %70
  %77 = phi i32* [ %81, %80 ], [ %73, %70 ]
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, %54
  br i1 %79, label %83, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds i32, i32* %77, i64 1
  %82 = icmp eq i32* %81, %75
  br i1 %82, label %307, label %76

83:                                               ; preds = %76
  %84 = icmp eq i32* %77, %75
  br i1 %84, label %307, label %108

85:                                               ; preds = %68
  %86 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 12, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 12, i32 2
  %89 = bitcast i8** %88 to i32**
  %90 = load i32*, i32** %89, align 8
  %91 = sext i32 %87 to i64
  %92 = getelementptr inbounds i32, i32* %90, i64 %91
  %93 = icmp eq i32 %87, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %85, %62
  %95 = phi i32* [ %67, %62 ], [ %92, %85 ]
  %96 = phi i32* [ %65, %62 ], [ %90, %85 ]
  br label %97

97:                                               ; preds = %101, %94
  %98 = phi i32* [ %102, %101 ], [ %96, %94 ]
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, %54
  br i1 %100, label %104, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds i32, i32* %98, i64 1
  %103 = icmp eq i32* %102, %95
  br i1 %103, label %108, label %97

104:                                              ; preds = %97, %85
  %105 = phi i32* [ %92, %85 ], [ %95, %97 ]
  %106 = phi i32* [ %90, %85 ], [ %98, %97 ]
  %107 = icmp eq i32* %106, %105
  br i1 %107, label %108, label %307

108:                                              ; preds = %101, %83, %58, %104
  %109 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 6
  %110 = load i32, i32* %109, align 8
  %111 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 13, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %124

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 14, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %164, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 14, i32 2
  %120 = bitcast i8** %119 to i32**
  %121 = load i32*, i32** %120, align 8
  %122 = sext i32 %116 to i64
  %123 = getelementptr inbounds i32, i32* %121, i64 %122
  br label %150

124:                                              ; preds = %108
  %125 = icmp sgt i32 %112, 0
  br i1 %125, label %126, label %141

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 13, i32 2
  %128 = bitcast i8** %127 to i32**
  %129 = load i32*, i32** %128, align 8
  %130 = sext i32 %112 to i64
  %131 = getelementptr inbounds i32, i32* %129, i64 %130
  br label %132

132:                                              ; preds = %136, %126
  %133 = phi i32* [ %137, %136 ], [ %129, %126 ]
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, %110
  br i1 %135, label %139, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds i32, i32* %133, i64 1
  %138 = icmp eq i32* %137, %131
  br i1 %138, label %307, label %132

139:                                              ; preds = %132
  %140 = icmp eq i32* %133, %131
  br i1 %140, label %307, label %164

141:                                              ; preds = %124
  %142 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 14, i32 0
  %143 = load i32, i32* %142, align 8
  %144 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 14, i32 2
  %145 = bitcast i8** %144 to i32**
  %146 = load i32*, i32** %145, align 8
  %147 = sext i32 %143 to i64
  %148 = getelementptr inbounds i32, i32* %146, i64 %147
  %149 = icmp eq i32 %143, 0
  br i1 %149, label %160, label %150

150:                                              ; preds = %141, %118
  %151 = phi i32* [ %123, %118 ], [ %148, %141 ]
  %152 = phi i32* [ %121, %118 ], [ %146, %141 ]
  br label %153

153:                                              ; preds = %157, %150
  %154 = phi i32* [ %158, %157 ], [ %152, %150 ]
  %155 = load i32, i32* %154, align 4
  %156 = icmp eq i32 %155, %110
  br i1 %156, label %160, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds i32, i32* %154, i64 1
  %159 = icmp eq i32* %158, %151
  br i1 %159, label %164, label %153

160:                                              ; preds = %153, %141
  %161 = phi i32* [ %148, %141 ], [ %151, %153 ]
  %162 = phi i32* [ %146, %141 ], [ %154, %153 ]
  %163 = icmp eq i32* %162, %161
  br i1 %163, label %164, label %307

164:                                              ; preds = %157, %139, %114, %160
  %165 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 0
  %166 = tail call zeroext i1 @_ZN10variations8internal16CheckStudyLocaleERKNS_12Study_FilterERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.variations::Study_Filter"* nonnull dereferenceable(320) %31, %"class.std::__1::basic_string"* dereferenceable(24) %165)
  br i1 %166, label %167, label %307

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 7
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 4, i32 0
  %171 = load i32, i32* %170, align 8
  %172 = icmp sgt i32 %171, 0
  br i1 %172, label %173, label %307

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 4, i32 2
  %175 = bitcast i8** %174 to i32**
  %176 = load i32*, i32** %175, align 8
  %177 = sext i32 %171 to i64
  br label %180

178:                                              ; preds = %180
  %179 = icmp eq i64 %185, %177
  br i1 %179, label %307, label %180

180:                                              ; preds = %178, %173
  %181 = phi i64 [ 0, %173 ], [ %185, %178 ]
  %182 = getelementptr inbounds i32, i32* %176, i64 %181
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, %169
  %185 = add nuw nsw i64 %181, 1
  br i1 %184, label %186, label %178

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 2
  %188 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 1, i32 0, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = and i32 %189, 1
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %211, label %192

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 15, i32 0
  %194 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %193, align 8
  %195 = bitcast %"class.std::__1::basic_string"* %194 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %196 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %195, i64 0, i32 1, i32 0
  %197 = load i8, i8* %196, align 1
  %198 = icmp slt i8 %197, 0
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %194, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = bitcast %"class.std::__1::basic_string"* %194 to i8*
  %202 = select i1 %198, i8* %200, i8* %201
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %194, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = zext i8 %197 to i64
  %206 = select i1 %198, i64 %204, i64 %205
  %207 = tail call i32 @_ZNK4base7Version23CompareToWildcardStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* %187, i8* %202, i64 %206) #13
  %208 = icmp slt i32 %207, 0
  br i1 %208, label %307, label %209

209:                                              ; preds = %192
  %210 = load i32, i32* %188, align 4
  br label %211

211:                                              ; preds = %209, %186
  %212 = phi i32 [ %210, %209 ], [ %189, %186 ]
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %232, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %31, i64 0, i32 16, i32 0
  %217 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %216, align 8
  %218 = bitcast %"class.std::__1::basic_string"* %217 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %219 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %218, i64 0, i32 1, i32 0
  %220 = load i8, i8* %219, align 1
  %221 = icmp slt i8 %220, 0
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %217, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = bitcast %"class.std::__1::basic_string"* %217 to i8*
  %225 = select i1 %221, i8* %223, i8* %224
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %217, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %227 = load i64, i64* %226, align 8
  %228 = zext i8 %220 to i64
  %229 = select i1 %221, i64 %227, i64 %228
  %230 = tail call i32 @_ZNK4base7Version23CompareToWildcardStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* %187, i8* %225, i64 %229) #13
  %231 = icmp sgt i32 %230, 0
  br i1 %231, label %307, label %232

232:                                              ; preds = %215, %211
  %233 = load %"class.variations::Study_Filter"*, %"class.variations::Study_Filter"** %30, align 8
  %234 = icmp eq %"class.variations::Study_Filter"* %233, null
  %235 = select i1 %234, %"class.variations::Study_Filter"* bitcast (%"class.variations::Study_FilterDefaultTypeInternal"* @_ZN10variations31_Study_Filter_default_instance_E to %"class.variations::Study_Filter"*), %"class.variations::Study_Filter"* %233
  %236 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 1
  %237 = tail call zeroext i1 @_ZN10variations8internal19CheckStudyStartDateERKNS_12Study_FilterERKN4base4TimeE(%"class.variations::Study_Filter"* dereferenceable(320) %235, %"class.base::Time"* dereferenceable(8) %236)
  br i1 %237, label %238, label %307

238:                                              ; preds = %232
  %239 = load %"class.variations::Study_Filter"*, %"class.variations::Study_Filter"** %30, align 8
  %240 = icmp eq %"class.variations::Study_Filter"* %239, null
  %241 = select i1 %240, %"class.variations::Study_Filter"* bitcast (%"class.variations::Study_FilterDefaultTypeInternal"* @_ZN10variations31_Study_Filter_default_instance_E to %"class.variations::Study_Filter"*), %"class.variations::Study_Filter"* %239
  %242 = tail call zeroext i1 @_ZN10variations8internal17CheckStudyEndDateERKNS_12Study_FilterERKN4base4TimeE(%"class.variations::Study_Filter"* dereferenceable(320) %241, %"class.base::Time"* dereferenceable(8) %236)
  br i1 %242, label %243, label %307

243:                                              ; preds = %238
  %244 = load %"class.variations::Study_Filter"*, %"class.variations::Study_Filter"** %30, align 8
  %245 = icmp eq %"class.variations::Study_Filter"* %244, null
  %246 = select i1 %245, %"class.variations::Study_Filter"* bitcast (%"class.variations::Study_FilterDefaultTypeInternal"* @_ZN10variations31_Study_Filter_default_instance_E to %"class.variations::Study_Filter"*), %"class.variations::Study_Filter"* %244
  %247 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 8
  %248 = tail call zeroext i1 @_ZN10variations8internal23CheckStudyHardwareClassERKNS_12Study_FilterERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.variations::Study_Filter"* dereferenceable(320) %246, %"class.std::__1::basic_string"* dereferenceable(24) %247)
  br i1 %248, label %249, label %307

249:                                              ; preds = %243
  %250 = load %"class.variations::Study_Filter"*, %"class.variations::Study_Filter"** %30, align 8
  %251 = icmp eq %"class.variations::Study_Filter"* %250, null
  %252 = select i1 %251, %"class.variations::Study_Filter"* bitcast (%"class.variations::Study_FilterDefaultTypeInternal"* @_ZN10variations31_Study_Filter_default_instance_E to %"class.variations::Study_Filter"*), %"class.variations::Study_Filter"* %250
  %253 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %252, i64 0, i32 1, i32 0, i64 0
  %254 = load i32, i32* %253, align 4
  %255 = and i32 %254, 64
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %265, label %257

257:                                              ; preds = %249
  %258 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 9
  %259 = load i8, i8* %258, align 8, !range !2
  %260 = icmp ne i8 %259, 0
  %261 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %252, i64 0, i32 21
  %262 = load i8, i8* %261, align 8, !range !2
  %263 = icmp eq i8 %262, 0
  %264 = xor i1 %260, %263
  br i1 %264, label %265, label %307

265:                                              ; preds = %249, %257
  %266 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 13
  %267 = load i32, i32* %266, align 8
  switch i32 %267, label %272 [
    i32 0, label %273
    i32 1, label %268
    i32 2, label %307
  ]

268:                                              ; preds = %265
  %269 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %252, i64 0, i32 23
  %270 = load i32, i32* %269, align 4
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %307, label %277

272:                                              ; preds = %265
  unreachable

273:                                              ; preds = %265
  %274 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %252, i64 0, i32 23
  %275 = load i32, i32* %274, align 4
  %276 = icmp eq i32 %275, 2
  br i1 %276, label %307, label %277

277:                                              ; preds = %273, %268
  %278 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 3
  %279 = tail call zeroext i1 @_ZN10variations8internal19CheckStudyOSVersionERKNS_12Study_FilterERKN4base7VersionE(%"class.variations::Study_Filter"* dereferenceable(320) %252, %"class.base::Version"* dereferenceable(24) %278)
  br i1 %279, label %280, label %307

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %0, i64 0, i32 9
  %282 = load i32, i32* %281, align 8
  switch i32 %282, label %287 [
    i32 0, label %283
    i32 1, label %285
  ]

283:                                              ; preds = %280
  %284 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 11
  br label %289

285:                                              ; preds = %280
  %286 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 12
  br label %289

287:                                              ; preds = %280
  %288 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #13
  br label %289

289:                                              ; preds = %283, %285, %287
  %290 = phi %"class.std::__1::basic_string"* [ %288, %287 ], [ %286, %285 ], [ %284, %283 ]
  %291 = load %"class.variations::Study_Filter"*, %"class.variations::Study_Filter"** %30, align 8
  %292 = icmp eq %"class.variations::Study_Filter"* %291, null
  %293 = select i1 %292, %"class.variations::Study_Filter"* bitcast (%"class.variations::Study_FilterDefaultTypeInternal"* @_ZN10variations31_Study_Filter_default_instance_E to %"class.variations::Study_Filter"*), %"class.variations::Study_Filter"* %291
  %294 = tail call zeroext i1 @_ZN10variations8internal17CheckStudyCountryERKNS_12Study_FilterERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.variations::Study_Filter"* dereferenceable(320) %293, %"class.std::__1::basic_string"* dereferenceable(24) %290)
  br i1 %294, label %295, label %307

295:                                              ; preds = %289
  %296 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %293, i64 0, i32 1, i32 0, i64 0
  %297 = load i32, i32* %296, align 4
  %298 = trunc i32 %297 to i8
  %299 = icmp slt i8 %298, 0
  br i1 %299, label %300, label %306

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.variations::Study_Filter", %"class.variations::Study_Filter"* %293, i64 0, i32 22
  %302 = load i8, i8* %301, align 1, !range !2
  %303 = icmp eq i8 %302, 0
  %304 = tail call zeroext i1 @_ZNK10variations21ClientFilterableState12IsEnterpriseEv(%"struct.variations::ClientFilterableState"* %1) #13
  %305 = xor i1 %304, %303
  br i1 %305, label %306, label %307

306:                                              ; preds = %300, %295
  br label %307

307:                                              ; preds = %44, %80, %136, %178, %25, %83, %139, %273, %268, %265, %215, %192, %167, %306, %300, %37, %289, %277, %257, %243, %238, %232, %164, %160, %104, %18, %8
  %308 = phi i1 [ false, %8 ], [ false, %18 ], [ false, %104 ], [ false, %160 ], [ false, %164 ], [ false, %232 ], [ false, %238 ], [ false, %243 ], [ false, %257 ], [ false, %273 ], [ false, %277 ], [ false, %289 ], [ false, %37 ], [ false, %83 ], [ false, %139 ], [ false, %268 ], [ false, %300 ], [ true, %306 ], [ false, %167 ], [ false, %192 ], [ false, %215 ], [ false, %265 ], [ true, %25 ], [ false, %178 ], [ false, %136 ], [ false, %80 ], [ false, %44 ]
  ret i1 %308
}

declare zeroext i1 @_ZNK10variations16VariationsLayers19IsLayerMemberActiveEjj(%"class.variations::VariationsLayers"*, i32, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN10variations23VariationsSeedProcessor24ShouldStudyUseLowEntropyERKNS_5StudyE(%"class.variations::Study"* dereferenceable(104)) local_unnamed_addr #4

declare zeroext i1 @_ZNK10variations16VariationsLayers26IsLayerUsingDefaultEntropyEj(%"class.variations::VariationsLayers"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations24FilterAndValidateStudiesERKNS_14VariationsSeedERKNS_21ClientFilterableStateERKNS_16VariationsLayersEPNSt3__16vectorINS_14ProcessedStudyENS9_9allocatorISB_EEEE(%"class.variations::VariationsSeed"* nocapture readonly dereferenceable(96), %"struct.variations::ClientFilterableState"* dereferenceable(200), %"class.variations::VariationsLayers"* dereferenceable(24), %"class.std::__1::vector.28"*) local_unnamed_addr #2 {
  %5 = alloca %"class.std::__1::set", align 8
  %6 = alloca %"class.std::__1::vector.38", align 8
  %7 = bitcast %"class.std::__1::set"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = bitcast %"class.std::__1::vector.38"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %6, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %6, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #13
  %16 = getelementptr inbounds %"class.variations::VariationsSeed", %"class.variations::VariationsSeed"* %0, i64 0, i32 3, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %114

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.variations::VariationsSeed", %"class.variations::VariationsSeed"* %0, i64 0, i32 3, i32 0, i32 3
  %21 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %1, i64 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0
  %23 = bitcast %"class.variations::Study"*** %14 to i64*
  %24 = bitcast %"class.std::__1::vector.38"* %6 to i64*
  %25 = bitcast %"class.variations::Study"*** %15 to i64*
  br label %32

26:                                               ; preds = %104
  %27 = load i64, i64* %23, align 8
  %28 = load i64, i64* %24, align 8
  %29 = icmp eq i64 %27, %28
  br i1 %29, label %109, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0
  br label %118

32:                                               ; preds = %19, %104
  %33 = phi i64 [ 0, %19 ], [ %105, %104 ]
  %34 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %20, align 8
  %35 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %34, i64 0, i32 1, i64 %33
  %36 = bitcast i8** %35 to %"class.variations::Study"**
  %37 = load %"class.variations::Study"*, %"class.variations::Study"** %36, align 8
  %38 = call zeroext i1 @_ZN10variations8internal14ShouldAddStudyERKNS_5StudyERKNS_21ClientFilterableStateERKNS_16VariationsLayersE(%"class.variations::Study"* dereferenceable(104) %37, %"struct.variations::ClientFilterableState"* dereferenceable(200) %1, %"class.variations::VariationsLayers"* dereferenceable(24) %2)
  br i1 %38, label %39, label %104

39:                                               ; preds = %32
  %40 = call zeroext i1 @_ZN10variations8internal14IsStudyExpiredERKNS_5StudyERKN4base4TimeE(%"class.variations::Study"* dereferenceable(104) %37, %"class.base::Time"* dereferenceable(8) %21)
  br i1 %40, label %41, label %95

41:                                               ; preds = %39
  %42 = ptrtoint %"class.variations::Study"* %37 to i64
  %43 = load %"class.variations::Study"**, %"class.variations::Study"*** %14, align 8
  %44 = load %"class.variations::Study"**, %"class.variations::Study"*** %15, align 8
  %45 = icmp ult %"class.variations::Study"** %43, %44
  %46 = ptrtoint %"class.variations::Study"** %44 to i64
  br i1 %45, label %47, label %51

47:                                               ; preds = %41
  %48 = bitcast %"class.variations::Study"** %43 to i64*
  store i64 %42, i64* %48, align 8
  %49 = getelementptr inbounds %"class.variations::Study"*, %"class.variations::Study"** %43, i64 1
  %50 = ptrtoint %"class.variations::Study"** %49 to i64
  store i64 %50, i64* %23, align 8
  br label %104

51:                                               ; preds = %41
  %52 = ptrtoint %"class.variations::Study"** %43 to i64
  %53 = load i64, i64* %24, align 8
  %54 = sub i64 %52, %53
  %55 = ashr exact i64 %54, 3
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 2305843009213693951
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = bitcast %"class.std::__1::vector.38"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %59) #14
  unreachable

60:                                               ; preds = %51
  %61 = sub i64 %46, %53
  %62 = ashr exact i64 %61, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %72

64:                                               ; preds = %60
  %65 = ashr exact i64 %61, 2
  %66 = icmp ult i64 %65, %56
  %67 = select i1 %66, i64 %56, i64 %65
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %64
  %70 = icmp ugt i64 %67, 2305843009213693951
  br i1 %70, label %71, label %72

71:                                               ; preds = %69
  call void @abort() #14
  unreachable

72:                                               ; preds = %69, %60
  %73 = phi i64 [ %67, %69 ], [ 2305843009213693951, %60 ]
  %74 = shl i64 %73, 3
  %75 = call i8* @_Znwm(i64 %74) #15
  %76 = bitcast i8* %75 to %"class.variations::Study"**
  br label %77

77:                                               ; preds = %72, %64
  %78 = phi i64 [ %73, %72 ], [ 0, %64 ]
  %79 = phi i8* [ %75, %72 ], [ null, %64 ]
  %80 = phi %"class.variations::Study"** [ %76, %72 ], [ null, %64 ]
  %81 = getelementptr inbounds %"class.variations::Study"*, %"class.variations::Study"** %80, i64 %55
  %82 = getelementptr inbounds %"class.variations::Study"*, %"class.variations::Study"** %80, i64 %78
  %83 = ptrtoint %"class.variations::Study"** %82 to i64
  %84 = bitcast %"class.variations::Study"** %81 to i64*
  store i64 %42, i64* %84, align 8
  %85 = getelementptr inbounds %"class.variations::Study"*, %"class.variations::Study"** %81, i64 1
  %86 = ptrtoint %"class.variations::Study"** %85 to i64
  %87 = ptrtoint %"class.variations::Study"** %80 to i64
  %88 = icmp sgt i64 %54, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %77
  %90 = inttoptr i64 %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %90, i64 %54, i1 false) #13
  br label %91

91:                                               ; preds = %89, %77
  store i64 %87, i64* %24, align 8
  store i64 %86, i64* %23, align 8
  store i64 %83, i64* %25, align 8
  %92 = icmp eq i64 %53, 0
  br i1 %92, label %104, label %93

93:                                               ; preds = %91
  %94 = inttoptr i64 %53 to i8*
  call void @_ZdlPv(i8* %94) #15
  br label %104

95:                                               ; preds = %39
  %96 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %37, i64 0, i32 4, i32 0
  %97 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %96, align 8
  %98 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.29"* nonnull %22, %"class.std::__1::basic_string"* dereferenceable(24) %97) #13
  %99 = icmp eq %"class.std::__1::__tree_end_node"* %98, %10
  br i1 %99, label %100, label %104

100:                                              ; preds = %95
  %101 = call zeroext i1 @_ZN10variations14ProcessedStudy22ValidateAndAppendStudyEPKNS_5StudyEbPNSt3__16vectorIS0_NS4_9allocatorIS0_EEEE(%"class.variations::Study"* %37, i1 zeroext false, %"class.std::__1::vector.28"* %3) #13
  %102 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %96, align 8
  %103 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.29"* nonnull %22, %"class.std::__1::basic_string"* dereferenceable(24) %102, %"class.std::__1::basic_string"* dereferenceable(24) %102) #13
  br label %104

104:                                              ; preds = %95, %93, %91, %47, %100, %32
  %105 = add nuw nsw i64 %33, 1
  %106 = load i32, i32* %16, align 8
  %107 = sext i32 %106 to i64
  %108 = icmp slt i64 %105, %107
  br i1 %108, label %32, label %26

109:                                              ; preds = %133, %26
  %110 = phi i64 [ %28, %26 ], [ %136, %133 ]
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %109
  store i64 %110, i64* %23, align 8
  %113 = inttoptr i64 %110 to i8*
  call void @_ZdlPv(i8* %113) #15
  br label %114

114:                                              ; preds = %4, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #13
  %115 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0
  %116 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %117 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %116, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.29"* nonnull %115, %"class.std::__1::__tree_node"* %117) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void

118:                                              ; preds = %30, %133
  %119 = phi i64 [ %28, %30 ], [ %136, %133 ]
  %120 = phi i64 [ 0, %30 ], [ %134, %133 ]
  %121 = inttoptr i64 %119 to %"class.variations::Study"**
  %122 = getelementptr inbounds %"class.variations::Study"*, %"class.variations::Study"** %121, i64 %120
  %123 = load %"class.variations::Study"*, %"class.variations::Study"** %122, align 8
  %124 = getelementptr inbounds %"class.variations::Study", %"class.variations::Study"* %123, i64 0, i32 4, i32 0
  %125 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %124, align 8
  %126 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.29"* nonnull %31, %"class.std::__1::basic_string"* dereferenceable(24) %125) #13
  %127 = icmp eq %"class.std::__1::__tree_end_node"* %126, %10
  br i1 %127, label %128, label %133

128:                                              ; preds = %118
  %129 = load %"class.variations::Study"**, %"class.variations::Study"*** %13, align 8
  %130 = getelementptr inbounds %"class.variations::Study"*, %"class.variations::Study"** %129, i64 %120
  %131 = load %"class.variations::Study"*, %"class.variations::Study"** %130, align 8
  %132 = call zeroext i1 @_ZN10variations14ProcessedStudy22ValidateAndAppendStudyEPKNS_5StudyEbPNSt3__16vectorIS0_NS4_9allocatorIS0_EEEE(%"class.variations::Study"* %131, i1 zeroext true, %"class.std::__1::vector.28"* %3) #13
  br label %133

133:                                              ; preds = %118, %128
  %134 = add nuw i64 %120, 1
  %135 = load i64, i64* %23, align 8
  %136 = load i64, i64* %24, align 8
  %137 = sub i64 %135, %136
  %138 = ashr exact i64 %137, 3
  %139 = icmp ult i64 %134, %138
  br i1 %139, label %118, label %109
}

declare zeroext i1 @_ZN10variations14ProcessedStudy22ValidateAndAppendStudyEPKNS_5StudyEbPNSt3__16vectorIS0_NS4_9allocatorIS0_EEEE(%"class.variations::Study"*, i1 zeroext, %"class.std::__1::vector.28"*) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.29"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #13
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #13
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

declare zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.29"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.29"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.29"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.29"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.29"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %7 = bitcast %"class.std::__1::__tree_node_base"** %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %10, label %49

10:                                               ; preds = %3
  %11 = call i8* @_Znwm(i64 56) #15, !noalias !5
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1, !noalias !5
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %18, i64 24, i1 false) #13, !noalias !5
  br label %25

19:                                               ; preds = %10
  %20 = bitcast i8* %12 to %"class.std::__1::basic_string"*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !5
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !5
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %22, i64 %24) #13, !noalias !5
  br label %25

25:                                               ; preds = %17, %19
  %26 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %11 to %"class.std::__1::__tree_node"*
  %29 = bitcast i8* %11 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds i8, i8* %11, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #13
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8
  %32 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8**
  store i8* %11, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %25
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %36 to i64
  %40 = bitcast %"class.std::__1::__tree.29"* %0 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  br label %42

42:                                               ; preds = %38, %25
  %43 = phi %"class.std::__1::__tree_node_base"* [ %29, %25 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %45, %"class.std::__1::__tree_node_base"* %43) #13
  %46 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %42, %3
  %50 = phi i8 [ 1, %42 ], [ 0, %3 ]
  %51 = phi %"class.std::__1::__tree_node"* [ %28, %42 ], [ %8, %3 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %53 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %52, 0
  %54 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %53, i8 %50, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.29"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.29", %"class.std::__1::__tree.29"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #13
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #13
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_"}
