; ModuleID = '../../third_party/swiftshader/src/Renderer/SetupProcessor.cpp'
source_filename = "../../third_party/swiftshader/src/Renderer/SetupProcessor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sw::SetupProcessor" = type { %"class.sw::Context"*, %"class.sw::LRUCache"* }
%"class.sw::LRUCache" = type { i32, i32, i32, i32, %"struct.sw::SetupProcessor::State"*, %"struct.sw::SetupProcessor::State"**, %"class.std::__1::shared_ptr"* }
%"struct.sw::SetupProcessor::State" = type { %"struct.sw::SetupProcessor::States", i32 }
%"struct.sw::SetupProcessor::States" = type { i32, %union.anon }
%union.anon = type { [32 x [4 x %"struct.sw::SetupProcessor::States::Gradient"]] }
%"struct.sw::SetupProcessor::States::Gradient" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* }
%"class.rr::Routine" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.sw::Context" = type <{ i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, i8, [3 x i8], float, float, float, [8 x i8], [8 x %"class.sw::TextureStage"], [32 x %"class.sw::Sampler"], [32 x %"class.sw::Resource"*], [32 x %"struct.sw::Stream"], %"class.sw::Resource"*, i8, [3 x i8], float, float, i8, [16 x i8], [3 x i8], [8 x i32], i8, i8, [2 x i8], [8 x i32], [8 x i8], [4 x i8], [8 x %"class.sw::Surface"*], [8 x i32], %"class.sw::Surface"*, i32, [4 x i8], %"class.sw::Surface"*, i32, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i32, %"class.sw::PixelShader"*, %"class.sw::VertexShader"*, float, i32, i8, i8, [8 x i8], [2 x i8], [8 x %"struct.sw::Point"], i32, i32, i32, i32, i8, i8, i8, i8, i64, i8, i8, [2 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, [3 x i8], i32, i32, i32, i8, i8, [2 x i8], float, [8 x i32], i8, [3 x i8], i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.sw::TextureStage" = type { %"struct.sw::TextureStage::Uniforms", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.sw::Sampler"*, %"class.sw::TextureStage"*, [8 x i8] }
%"struct.sw::TextureStage::Uniforms" = type { [4 x [4 x i16]], [2 x [2 x %"struct.sw::float4"]], [2 x [2 x [4 x i16]]], [4 x i16], [4 x i16] }
%"struct.sw::float4" = type { float, float, float, float }
%"class.sw::Sampler" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.sw::Texture", float, [12 x i8] }>
%"struct.sw::Texture" = type { [14 x %"struct.sw::Mipmap"], float, [12 x i8], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [4 x [4 x i16]], [4 x %"struct.sw::float4"], float, i32, i32, float, float, [12 x i8] }
%"struct.sw::Mipmap" = type { [6 x i8*], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [8 x i8], %"struct.sw::int4", %"struct.sw::int4" }
%"struct.sw::int4" = type { i32, i32, i32, i32 }
%"struct.sw::Stream" = type <{ %"struct.sw::StreamResource", i32, i8, i8, [2 x i8] }>
%"struct.sw::StreamResource" = type { %"class.sw::Resource"*, i8*, i32 }
%"class.sw::Resource" = type { i64, %"class.sw::MutexLock", %"class.sw::Event", i32, i32, i32, i8, i8* }
%"class.sw::MutexLock" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.sw::Event" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.0, %union.anon.2, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.0 = type { i64 }
%union.anon.2 = type { i64 }
%"class.sw::Surface" = type <{ i32 (...)**, %"class.sw::Resource"*, %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", i8, i8, i8, i8, i32, i8, i8, [6 x i8] }>
%"struct.sw::Surface::Buffer" = type <{ i8*, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.sw::AtomicInt", i8, [3 x i8] }>
%"class.sw::AtomicInt" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.sw::PixelShader" = type { %"class.sw::Shader.base", [32 x [4 x %"struct.sw::Shader::Semantic"]], i8, i8, i8, i8, i8, [6 x i8] }
%"class.sw::Shader.base" = type <{ i32 (...)**, i32, i32, i32, i8, i8, i8, i8, %"struct.sw::Shader::Limits", i32, %union.anon.5, [2 x i8], %"class.std::__1::vector", i16, [2 x i8], i32, i8, i8, i8, i8, i8 }>
%"struct.sw::Shader::Limits" = type { i32, i32, i32, i32 }
%union.anon.5 = type { i16 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"**, %"class.std::__1::__compressed_pair" }
%"struct.sw::Shader::Instruction" = type <{ i32 (...)**, i32, %union.anon.7, i8, i8, i8, i8, i32, i32, i8, [3 x i8], %"struct.sw::Shader::DestinationParameter", [5 x %"struct.sw::Shader::SourceParameter"], %union.anon.14, [4 x i8] }>
%union.anon.7 = type { i32 }
%"struct.sw::Shader::DestinationParameter" = type { %"struct.sw::Shader::Parameter.base", %union.anon.12, i8, i8 }
%"struct.sw::Shader::Parameter.base" = type <{ %union.anon.9, i8 }>
%union.anon.9 = type { %struct.anon.10 }
%struct.anon.10 = type { i32, %"struct.sw::Shader::Relative" }
%"struct.sw::Shader::Relative" = type { i8, i32, i8, i32, i8 }
%union.anon.12 = type { i8 }
%"struct.sw::Shader::SourceParameter" = type { %"struct.sw::Shader::Parameter.base", [3 x i8] }
%union.anon.14 = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.sw::Shader::Instruction"** }
%"struct.sw::Shader::Semantic" = type { i8, i8, i8, i8 }
%"class.sw::VertexShader" = type <{ %"class.sw::Shader.base", [32 x %"struct.sw::Shader::Semantic"], [34 x [4 x %"struct.sw::Shader::Semantic"]], [32 x i8], [3 x i8], i32, i32, i8, i8, i8, [5 x i8] }>
%"struct.sw::Point" = type { %union.anon.17 }
%union.anon.17 = type { [3 x float] }
%"class.sw::SetupRoutine" = type { i32 (...)**, %"struct.sw::SetupProcessor::State"*, %"class.std::__1::shared_ptr" }

$_ZN2sw8LRUCacheINS_14SetupProcessor5StateENSt3__110shared_ptrIN2rr7RoutineEEEED2Ev = comdat any

$_ZNK2sw8LRUCacheINS_14SetupProcessor5StateENSt3__110shared_ptrIN2rr7RoutineEEEE5queryERKS2_ = comdat any

$_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev = comdat any

$_ZN2sw8LRUCacheINS_14SetupProcessor5StateENSt3__110shared_ptrIN2rr7RoutineEEEE3addERKS2_RKS7_ = comdat any

$_ZN2sw8LRUCacheINS_14SetupProcessor5StateENSt3__110shared_ptrIN2rr7RoutineEEEEC2Ei = comdat any

@_ZN2sw13precacheSetupE = hidden local_unnamed_addr global i8 0, align 1
@_ZN2sw25fullPixelPositionRegisterE = external local_unnamed_addr global i8, align 1

@_ZN2sw14SetupProcessorC1EPNS_7ContextE = hidden unnamed_addr alias void (%"class.sw::SetupProcessor"*, %"class.sw::Context"*), void (%"class.sw::SetupProcessor"*, %"class.sw::Context"*)* @_ZN2sw14SetupProcessorC2EPNS_7ContextE
@_ZN2sw14SetupProcessorD1Ev = hidden unnamed_addr alias void (%"class.sw::SetupProcessor"*), void (%"class.sw::SetupProcessor"*)* @_ZN2sw14SetupProcessorD2Ev

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZN2sw14SetupProcessor6States11computeHashEv(%"struct.sw::SetupProcessor::States"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.sw::SetupProcessor::States", %"struct.sw::SetupProcessor::States"* %0, i64 0, i32 0
  br label %4

3:                                                ; preds = %4
  ret i32 %9

4:                                                ; preds = %4, %1
  %5 = phi i64 [ 0, %1 ], [ %10, %4 ]
  %6 = phi i32 [ 0, %1 ], [ %9, %4 ]
  %7 = getelementptr inbounds i32, i32* %2, i64 %5
  %8 = load i32, i32* %7, align 4
  %9 = xor i32 %8, %6
  %10 = add nuw nsw i64 %5, 1
  %11 = icmp eq i64 %10, 33
  br i1 %11, label %3, label %4
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sw14SetupProcessor5StateeqERKS1_(%"struct.sw::SetupProcessor::State"* nocapture readonly, %"struct.sw::SetupProcessor::State"* nocapture readonly dereferenceable(136)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = bitcast %"struct.sw::SetupProcessor::State"* %0 to i8*
  %10 = bitcast %"struct.sw::SetupProcessor::State"* %1 to i8*
  %11 = tail call i32 @bcmp(i8* %9, i8* %10, i64 132)
  %12 = icmp eq i32 %11, 0
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ %12, %8 ], [ false, %2 ]
  ret i1 %14
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw14SetupProcessorC2EPNS_7ContextE(%"class.sw::SetupProcessor"* nocapture, %"class.sw::Context"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sw::SetupProcessor", %"class.sw::SetupProcessor"* %0, i64 0, i32 0
  store %"class.sw::Context"* %1, %"class.sw::Context"** %3, align 8
  %4 = getelementptr inbounds %"class.sw::SetupProcessor", %"class.sw::SetupProcessor"* %0, i64 0, i32 1
  store %"class.sw::LRUCache"* null, %"class.sw::LRUCache"** %4, align 8
  tail call void @_ZN2sw14SetupProcessor19setRoutineCacheSizeEi(%"class.sw::SetupProcessor"* %0, i32 1024) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw14SetupProcessor19setRoutineCacheSizeEi(%"class.sw::SetupProcessor"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sw::SetupProcessor", %"class.sw::SetupProcessor"* %0, i64 0, i32 1
  %4 = load %"class.sw::LRUCache"*, %"class.sw::LRUCache"** %3, align 8
  %5 = icmp eq %"class.sw::LRUCache"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  tail call void @_ZN2sw8LRUCacheINS_14SetupProcessor5StateENSt3__110shared_ptrIN2rr7RoutineEEEED2Ev(%"class.sw::LRUCache"* nonnull %4) #11
  %7 = bitcast %"class.sw::LRUCache"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #12
  br label %8

8:                                                ; preds = %6, %2
  %9 = tail call i8* @_Znwm(i64 40) #12
  %10 = bitcast i8* %9 to %"class.sw::LRUCache"*
  %11 = icmp sgt i32 %1, 1
  %12 = select i1 %11, i32 %1, i32 1
  %13 = icmp slt i32 %12, 65536
  %14 = select i1 %13, i32 %12, i32 65536
  tail call void @_ZN2sw8LRUCacheINS_14SetupProcessor5StateENSt3__110shared_ptrIN2rr7RoutineEEEEC2Ei(%"class.sw::LRUCache"* nonnull %10, i32 %14) #10
  %15 = bitcast %"class.sw::LRUCache"** %3 to i8**
  store i8* %9, i8** %15, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw14SetupProcessorD2Ev(%"class.sw::SetupProcessor"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sw::SetupProcessor", %"class.sw::SetupProcessor"* %0, i64 0, i32 1
  %3 = load %"class.sw::LRUCache"*, %"class.sw::LRUCache"** %2, align 8
  %4 = icmp eq %"class.sw::LRUCache"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN2sw8LRUCacheINS_14SetupProcessor5StateENSt3__110shared_ptrIN2rr7RoutineEEEED2Ev(%"class.sw::LRUCache"* nonnull %3) #11
  %6 = bitcast %"class.sw::LRUCache"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %5, %1
  store %"class.sw::LRUCache"* null, %"class.sw::LRUCache"** %2, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2sw8LRUCacheINS_14SetupProcessor5StateENSt3__110shared_ptrIN2rr7RoutineEEEED2Ev(%"class.sw::LRUCache"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 4
  %3 = load %"struct.sw::SetupProcessor::State"*, %"struct.sw::SetupProcessor::State"** %2, align 8
  %4 = icmp eq %"struct.sw::SetupProcessor::State"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.sw::SetupProcessor::State"* %3 to i8*
  tail call void @_ZdaPv(i8* %6) #12
  br label %7

7:                                                ; preds = %5, %1
  store %"struct.sw::SetupProcessor::State"* null, %"struct.sw::SetupProcessor::State"** %2, align 8
  %8 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 5
  %9 = load %"struct.sw::SetupProcessor::State"**, %"struct.sw::SetupProcessor::State"*** %8, align 8
  %10 = icmp eq %"struct.sw::SetupProcessor::State"** %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = bitcast %"struct.sw::SetupProcessor::State"** %9 to i8*
  tail call void @_ZdaPv(i8* %12) #12
  br label %13

13:                                               ; preds = %11, %7
  store %"struct.sw::SetupProcessor::State"** null, %"struct.sw::SetupProcessor::State"*** %8, align 8
  %14 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 6
  %15 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %14, align 8
  %16 = icmp eq %"class.std::__1::shared_ptr"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %15, i64 -1, i32 1
  %19 = bitcast %"class.std::__1::__shared_weak_count"** %18 to i8*
  %20 = bitcast %"class.std::__1::__shared_weak_count"** %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %15, i64 %21
  br label %25

25:                                               ; preds = %23, %25
  %26 = phi %"class.std::__1::shared_ptr"* [ %27, %25 ], [ %24, %23 ]
  %27 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %26, i64 -1
  tail call void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr"* %27) #11
  %28 = icmp eq %"class.std::__1::shared_ptr"* %27, %15
  br i1 %28, label %29, label %25

29:                                               ; preds = %25, %17
  tail call void @_ZdaPv(i8* %19) #12
  br label %30

30:                                               ; preds = %29, %13
  store %"class.std::__1::shared_ptr"* null, %"class.std::__1::shared_ptr"** %14, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2sw14SetupProcessor6updateEv(%"struct.sw::SetupProcessor::State"* noalias sret, %"class.sw::SetupProcessor"* readonly) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"struct.sw::SetupProcessor::State"* %0 to i8*
  %4 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %0, i64 0, i32 1
  store i32 -1431655766, i32* %4, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 132, i1 false) #13
  %5 = getelementptr inbounds %"class.sw::SetupProcessor", %"class.sw::SetupProcessor"* %1, i64 0, i32 0
  %6 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %7 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %6, i64 0, i32 66
  %8 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %7, align 8
  %9 = icmp eq %"class.sw::PixelShader"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %8, i64 0, i32 2
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = load i8, i8* @_ZN2sw25fullPixelPositionRegisterE, align 1, !range !2
  %16 = icmp ne i8 %15, 0
  br label %17

17:                                               ; preds = %10, %2, %14
  %18 = phi i1 [ false, %10 ], [ false, %2 ], [ %16, %14 ]
  %19 = tail call zeroext i1 @_ZNK2sw7Context11isDrawPointEb(%"class.sw::Context"* %6, i1 zeroext true) #11
  %20 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %0, i64 0, i32 0, i32 0
  %21 = zext i1 %19 to i32
  %22 = load i32, i32* %20, align 4
  %23 = and i32 %22, -2
  %24 = or i32 %23, %21
  store i32 %24, i32* %20, align 4
  %25 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %26 = tail call zeroext i1 @_ZNK2sw7Context10isDrawLineEb(%"class.sw::Context"* %25, i1 zeroext true) #11
  %27 = zext i1 %26 to i32
  %28 = load i32, i32* %20, align 4
  %29 = shl nuw nsw i32 %27, 1
  %30 = and i32 %28, -3
  %31 = or i32 %30, %29
  store i32 %31, i32* %20, align 4
  %32 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %33 = tail call zeroext i1 @_ZNK2sw7Context14isDrawTriangleEb(%"class.sw::Context"* %32, i1 zeroext false) #11
  %34 = zext i1 %33 to i32
  %35 = load i32, i32* %20, align 4
  %36 = shl nuw nsw i32 %34, 2
  %37 = and i32 %35, -5
  %38 = or i32 %37, %36
  store i32 %38, i32* %20, align 4
  %39 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %40 = tail call zeroext i1 @_ZNK2sw7Context14isDrawTriangleEb(%"class.sw::Context"* %39, i1 zeroext true) #11
  %41 = zext i1 %40 to i32
  %42 = load i32, i32* %20, align 4
  %43 = shl nuw nsw i32 %41, 3
  %44 = and i32 %42, -9
  %45 = or i32 %44, %43
  store i32 %45, i32* %20, align 4
  %46 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %47 = tail call zeroext i1 @_ZN2sw7Context17depthBufferActiveEv(%"class.sw::Context"* %46) #11
  br i1 %47, label %55, label %48

48:                                               ; preds = %17
  %49 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %50 = tail call i32 @_ZN2sw7Context14pixelFogActiveEv(%"class.sw::Context"* %49) #11
  %51 = icmp ne i32 %50, 0
  %52 = or i1 %18, %51
  %53 = zext i1 %52 to i32
  %54 = shl nuw nsw i32 %53, 4
  br label %55

55:                                               ; preds = %48, %17
  %56 = phi i32 [ 16, %17 ], [ %54, %48 ]
  %57 = load i32, i32* %20, align 4
  %58 = and i32 %57, -17
  %59 = or i32 %58, %56
  store i32 %59, i32* %20, align 4
  %60 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %61 = tail call zeroext i1 @_ZN2sw7Context17perspectiveActiveEv(%"class.sw::Context"* %60) #11
  %62 = or i1 %18, %61
  %63 = zext i1 %62 to i32
  %64 = load i32, i32* %20, align 4
  %65 = shl nuw nsw i32 %63, 5
  %66 = and i32 %64, -33
  %67 = or i32 %65, %66
  store i32 %67, i32* %20, align 4
  %68 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %69 = tail call zeroext i1 @_ZN2sw7Context17perspectiveActiveEv(%"class.sw::Context"* %68) #11
  %70 = zext i1 %69 to i32
  %71 = load i32, i32* %20, align 4
  %72 = shl nuw nsw i32 %70, 6
  %73 = and i32 %71, -65
  %74 = or i32 %73, %72
  store i32 %74, i32* %20, align 4
  %75 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %76 = tail call zeroext i1 @_ZN2sw7Context17pointSpriteActiveEv(%"class.sw::Context"* %75) #11
  %77 = zext i1 %76 to i32
  %78 = load i32, i32* %20, align 4
  %79 = shl nuw nsw i32 %77, 7
  %80 = and i32 %78, -129
  %81 = or i32 %80, %79
  store i32 %81, i32* %20, align 4
  %82 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %83 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %82, i64 0, i32 24
  %84 = load i32, i32* %83, align 4
  %85 = shl i32 %84, 20
  %86 = and i32 %85, 3145728
  %87 = and i32 %81, -3145729
  %88 = or i32 %86, %87
  store i32 %88, i32* %20, align 4
  %89 = tail call zeroext i1 @_ZN2sw7Context13stencilActiveEv(%"class.sw::Context"* %82) #11
  %90 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  br i1 %89, label %91, label %96

91:                                               ; preds = %55
  %92 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %90, i64 0, i32 10
  %93 = load i8, i8* %92, align 4, !range !2
  %94 = zext i8 %93 to i32
  %95 = shl nuw nsw i32 %94, 22
  br label %96

96:                                               ; preds = %55, %91
  %97 = phi i32 [ %95, %91 ], [ 0, %55 ]
  %98 = load i32, i32* %20, align 4
  %99 = and i32 %98, -4194305
  %100 = or i32 %99, %97
  store i32 %100, i32* %20, align 4
  %101 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %90, i64 0, i32 29
  %102 = load float, float* %101, align 4
  %103 = fcmp une float %102, 0.000000e+00
  %104 = zext i1 %103 to i32
  %105 = shl nuw nsw i32 %104, 23
  %106 = and i32 %100, -8388609
  %107 = or i32 %105, %106
  store i32 %107, i32* %20, align 4
  %108 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %90, i64 0, i32 66
  %109 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %108, align 8
  %110 = icmp eq %"class.sw::PixelShader"* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %96
  %112 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %109, i64 0, i32 3
  %113 = load i8, i8* %112, align 2, !range !2
  %114 = zext i8 %113 to i32
  %115 = shl nuw nsw i32 %114, 24
  br label %116

116:                                              ; preds = %96, %111
  %117 = phi i32 [ 0, %96 ], [ %115, %111 ]
  %118 = and i32 %107, -17825537
  %119 = or i32 %118, %117
  %120 = or i32 %119, 557056
  store i32 %120, i32* %20, align 4
  %121 = tail call i32 @_ZNK2sw7Context19getMultiSampleCountEv(%"class.sw::Context"* %90) #11
  %122 = load i32, i32* %20, align 4
  %123 = shl i32 %121, 25
  %124 = and i32 %123, 234881024
  %125 = and i32 %122, -234881025
  %126 = or i32 %125, %124
  store i32 %126, i32* %20, align 4
  %127 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %128 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %127, i64 0, i32 84
  %129 = load i8, i8* %128, align 8, !range !2
  %130 = zext i8 %129 to i32
  %131 = shl nuw nsw i32 %130, 28
  %132 = and i32 %126, -268435457
  %133 = or i32 %131, %132
  store i32 %133, i32* %20, align 4
  %134 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %127, i64 0, i32 67
  %135 = load %"class.sw::VertexShader"*, %"class.sw::VertexShader"** %134, align 16
  %136 = icmp eq %"class.sw::VertexShader"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %116
  %138 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %135, i64 0, i32 5
  %139 = load i32, i32* %138, align 8
  %140 = shl i32 %139, 8
  %141 = and i32 %140, 16128
  %142 = and i32 %133, -16129
  %143 = or i32 %141, %142
  store i32 %143, i32* %20, align 4
  %144 = load %"class.sw::VertexShader"*, %"class.sw::VertexShader"** %134, align 16
  %145 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %144, i64 0, i32 6
  %146 = load i32, i32* %145, align 4
  %147 = shl i32 %146, 14
  %148 = and i32 %147, 1032192
  %149 = and i32 %143, -1032193
  br label %155

150:                                              ; preds = %116
  %151 = tail call zeroext i1 @_ZN2sw7Context15pointSizeActiveEv(%"class.sw::Context"* %127) #11
  br i1 %151, label %152, label %159

152:                                              ; preds = %150
  %153 = load i32, i32* %20, align 4
  %154 = and i32 %153, -1032193
  br label %155

155:                                              ; preds = %137, %152
  %156 = phi i32 [ 180224, %152 ], [ %149, %137 ]
  %157 = phi i32 [ %154, %152 ], [ %148, %137 ]
  %158 = or i32 %157, %156
  store i32 %158, i32* %20, align 4
  br label %159

159:                                              ; preds = %155, %150
  %160 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %0, i64 0, i32 0, i32 1
  %161 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %0, i64 0, i32 0, i32 1, i32 0, i64 10, i64 0, i32 0
  %162 = getelementptr %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %0, i64 0, i32 0, i32 1, i32 0, i64 0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %162, i8 34, i64 128, i1 false)
  %163 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %164 = tail call zeroext i1 @_ZNK2sw7Context11isDrawPointEb(%"class.sw::Context"* %163, i1 zeroext true) #11
  %165 = zext i1 %164 to i8
  %166 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %167 = tail call zeroext i1 @_ZN2sw7Context17pointSpriteActiveEv(%"class.sw::Context"* %166) #11
  %168 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %169 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %168, i64 0, i32 23
  %170 = load i32, i32* %169, align 16
  %171 = icmp eq i32 %170, 0
  %172 = or i1 %164, %171
  %173 = zext i1 %172 to i8
  %174 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %168, i64 0, i32 67
  %175 = load %"class.sw::VertexShader"*, %"class.sw::VertexShader"** %174, align 16
  %176 = icmp eq %"class.sw::VertexShader"* %175, null
  br i1 %176, label %248, label %177

177:                                              ; preds = %159
  %178 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %168, i64 0, i32 66
  %179 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %178, align 8
  %180 = icmp eq %"class.sw::PixelShader"* %179, null
  br i1 %180, label %248, label %181

181:                                              ; preds = %177
  %182 = xor i1 %167, true
  %183 = and i1 %164, %182
  br label %184

184:                                              ; preds = %189, %181
  %185 = phi i64 [ 0, %181 ], [ %190, %189 ]
  %186 = trunc i64 %185 to i32
  %187 = trunc i64 %185 to i32
  %188 = add i32 %187, -2
  br label %192

189:                                              ; preds = %245
  %190 = add nuw nsw i64 %185, 1
  %191 = icmp eq i64 %190, 32
  br i1 %191, label %379, label %184

192:                                              ; preds = %245, %184
  %193 = phi i64 [ 0, %184 ], [ %246, %245 ]
  %194 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %195 = trunc i64 %193 to i32
  %196 = tail call zeroext i1 @_ZN2sw7Context21isProjectionComponentEji(%"class.sw::Context"* %194, i32 %188, i32 %195) #11
  %197 = zext i1 %196 to i32
  %198 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %199 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %198, i64 0, i32 66
  %200 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %199, align 8
  %201 = sub nsw i32 %195, %197
  %202 = tail call dereferenceable(4) %"struct.sw::Shader::Semantic"* @_ZNK2sw11PixelShader8getInputEii(%"class.sw::PixelShader"* %200, i32 %186, i32 %201) #11
  %203 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %202, i64 0, i32 0
  %204 = load i8, i8* %203, align 1
  %205 = icmp eq i8 %204, -1
  br i1 %205, label %245, label %206

206:                                              ; preds = %192
  %207 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %202, i64 0, i32 1
  br label %208

208:                                              ; preds = %223, %206
  %209 = phi i32 [ 0, %206 ], [ %224, %223 ]
  %210 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %211 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %210, i64 0, i32 67
  %212 = load %"class.sw::VertexShader"*, %"class.sw::VertexShader"** %211, align 16
  %213 = tail call dereferenceable(4) %"struct.sw::Shader::Semantic"* @_ZNK2sw12VertexShader9getOutputEii(%"class.sw::VertexShader"* %212, i32 %209, i32 %201) #11
  %214 = load i8, i8* %203, align 1
  %215 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %213, i64 0, i32 0
  %216 = load i8, i8* %215, align 1
  %217 = icmp eq i8 %214, %216
  br i1 %217, label %218, label %223

218:                                              ; preds = %208
  %219 = load i8, i8* %207, align 1
  %220 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %213, i64 0, i32 1
  %221 = load i8, i8* %220, align 1
  %222 = icmp eq i8 %219, %221
  br i1 %222, label %226, label %223

223:                                              ; preds = %208, %218
  %224 = add nuw nsw i32 %209, 1
  %225 = icmp eq i32 %224, 34
  br i1 %225, label %226, label %208

226:                                              ; preds = %223, %218
  %227 = phi i32 [ %186, %223 ], [ %209, %218 ]
  switch i8 %214, label %234 [
    i8 5, label %228
    i8 10, label %229
  ]

228:                                              ; preds = %226
  br label %234

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %202, i64 0, i32 3
  %231 = load i8, i8* %230, align 1, !range !2
  %232 = icmp ne i8 %231, 0
  %233 = or i1 %172, %232
  br label %234

234:                                              ; preds = %226, %229, %228
  %235 = phi i1 [ %164, %226 ], [ %233, %229 ], [ %183, %228 ]
  %236 = trunc i32 %227 to i8
  %237 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %0, i64 0, i32 0, i32 1, i32 0, i64 %185, i64 %193, i32 0
  %238 = load i8, i8* %237, align 1
  %239 = and i8 %236, 63
  %240 = and i8 %238, -128
  %241 = or i8 %240, %239
  %242 = zext i1 %235 to i8
  %243 = shl nuw nsw i8 %242, 6
  %244 = or i8 %241, %243
  store i8 %244, i8* %237, align 1
  br label %245

245:                                              ; preds = %192, %234
  %246 = add nuw nsw i64 %193, 1
  %247 = icmp eq i64 %246, 4
  br i1 %247, label %189, label %192

248:                                              ; preds = %177, %159
  %249 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %168, i64 0, i32 36
  %250 = load i8, i8* %249, align 8, !range !2
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %307, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %168, i64 0, i32 66
  %254 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %253, align 8
  %255 = icmp eq %"class.sw::PixelShader"* %254, null
  br i1 %255, label %307, label %256

256:                                              ; preds = %252
  %257 = xor i1 %167, true
  %258 = and i1 %164, %257
  br label %259

259:                                              ; preds = %262, %256
  %260 = phi i64 [ 0, %256 ], [ %263, %262 ]
  %261 = trunc i64 %260 to i32
  br label %265

262:                                              ; preds = %304
  %263 = add nuw nsw i64 %260, 1
  %264 = icmp eq i64 %263, 32
  br i1 %264, label %379, label %259

265:                                              ; preds = %304, %259
  %266 = phi i64 [ 0, %259 ], [ %305, %304 ]
  %267 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %268 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %267, i64 0, i32 66
  %269 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %268, align 8
  %270 = trunc i64 %266 to i32
  %271 = tail call dereferenceable(4) %"struct.sw::Shader::Semantic"* @_ZNK2sw11PixelShader8getInputEii(%"class.sw::PixelShader"* %269, i32 %261, i32 %270) #11
  %272 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %271, i64 0, i32 0
  %273 = load i8, i8* %272, align 1
  switch i8 %273, label %304 [
    i8 10, label %283
    i8 5, label %274
  ]

274:                                              ; preds = %265
  %275 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %271, i64 0, i32 1
  %276 = load i8, i8* %275, align 1
  %277 = add i8 %276, 3
  %278 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %0, i64 0, i32 0, i32 1, i32 0, i64 %260, i64 %266, i32 0
  %279 = load i8, i8* %278, align 1
  %280 = and i8 %277, 63
  %281 = and i8 %279, -64
  %282 = or i8 %281, %280
  store i8 %282, i8* %278, align 1
  br label %292

283:                                              ; preds = %265
  %284 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %271, i64 0, i32 1
  %285 = load i8, i8* %284, align 1
  %286 = add i8 %285, 1
  %287 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %0, i64 0, i32 0, i32 1, i32 0, i64 %260, i64 %266, i32 0
  %288 = load i8, i8* %287, align 1
  %289 = and i8 %286, 63
  %290 = and i8 %288, -64
  %291 = or i8 %290, %289
  store i8 %291, i8* %287, align 1
  br label %292

292:                                              ; preds = %274, %283
  %293 = phi i1 [ %172, %283 ], [ %258, %274 ]
  %294 = phi i8 [ %291, %283 ], [ %282, %274 ]
  %295 = phi i8* [ %287, %283 ], [ %278, %274 ]
  %296 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %271, i64 0, i32 3
  %297 = load i8, i8* %296, align 1, !range !2
  %298 = icmp ne i8 %297, 0
  %299 = or i1 %293, %298
  %300 = zext i1 %299 to i8
  %301 = shl nuw nsw i8 %300, 6
  %302 = and i8 %294, -65
  %303 = or i8 %301, %302
  store i8 %303, i8* %295, align 1
  br label %304

304:                                              ; preds = %292, %265
  %305 = add nuw nsw i64 %266, 1
  %306 = icmp eq i64 %305, 4
  br i1 %306, label %262, label %265

307:                                              ; preds = %252, %248
  %308 = tail call zeroext i16 @_ZNK2sw7Context16pixelShaderModelEv(%"class.sw::Context"* %168) #11
  %309 = icmp ult i16 %308, 768
  br i1 %309, label %310, label %379

310:                                              ; preds = %307
  %311 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %0, i64 0, i32 0, i32 1, i32 0, i64 2
  %312 = xor i1 %167, true
  %313 = and i1 %164, %312
  %314 = zext i1 %313 to i8
  %315 = shl nuw nsw i8 %314, 6
  br label %316

316:                                              ; preds = %327, %310
  %317 = phi i64 [ 0, %310 ], [ %328, %327 ]
  %318 = phi i32 [ 0, %310 ], [ %329, %327 ]
  %319 = trunc i32 %318 to i8
  %320 = add i8 %319, 3
  %321 = and i8 %320, 63
  %322 = or i8 %321, %315
  %323 = trunc i64 %317 to i32
  br label %331

324:                                              ; preds = %327
  %325 = bitcast %union.anon* %160 to [2 x [4 x %"struct.sw::SetupProcessor::States::Gradient"]]*
  %326 = shl nuw nsw i8 %173, 6
  br label %354

327:                                              ; preds = %351
  %328 = add nuw nsw i64 %317, 1
  %329 = add nuw nsw i32 %318, 1
  %330 = icmp eq i64 %328, 8
  br i1 %330, label %324, label %316

331:                                              ; preds = %351, %316
  %332 = phi i64 [ 0, %316 ], [ %352, %351 ]
  %333 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %334 = trunc i64 %332 to i32
  %335 = tail call zeroext i1 @_ZN2sw7Context13textureActiveEii(%"class.sw::Context"* %333, i32 %323, i32 %334) #11
  br i1 %335, label %336, label %351

336:                                              ; preds = %331
  %337 = getelementptr inbounds [4 x %"struct.sw::SetupProcessor::States::Gradient"], [4 x %"struct.sw::SetupProcessor::States::Gradient"]* %311, i64 %317, i64 %332, i32 0
  %338 = load i8, i8* %337, align 1
  %339 = and i8 %338, -128
  %340 = or i8 %322, %339
  store i8 %340, i8* %337, align 1
  %341 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %342 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %341, i64 0, i32 41, i64 %317
  %343 = load i8, i8* %342, align 1
  %344 = zext i8 %343 to i32
  %345 = shl i32 1, %334
  %346 = and i32 %345, %344
  %347 = icmp ne i32 %346, 0
  %348 = zext i1 %347 to i8
  %349 = shl nuw i8 %348, 7
  %350 = or i8 %349, %322
  store i8 %350, i8* %337, align 1
  br label %351

351:                                              ; preds = %331, %336
  %352 = add nuw nsw i64 %332, 1
  %353 = icmp eq i64 %352, 4
  br i1 %353, label %327, label %331

354:                                              ; preds = %362, %324
  %355 = phi i64 [ 0, %324 ], [ %363, %362 ]
  %356 = phi i32 [ 0, %324 ], [ %364, %362 ]
  %357 = trunc i32 %356 to i8
  %358 = add i8 %357, 1
  %359 = and i8 %358, 63
  %360 = or i8 %359, %326
  %361 = trunc i64 %355 to i32
  br label %366

362:                                              ; preds = %376
  %363 = add nuw nsw i64 %355, 1
  %364 = add nuw nsw i32 %356, 1
  %365 = icmp eq i64 %363, 2
  br i1 %365, label %379, label %354

366:                                              ; preds = %376, %354
  %367 = phi i64 [ 0, %354 ], [ %377, %376 ]
  %368 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %369 = trunc i64 %367 to i32
  %370 = tail call zeroext i1 @_ZN2sw7Context11colorActiveEii(%"class.sw::Context"* %368, i32 %361, i32 %369) #11
  br i1 %370, label %371, label %376

371:                                              ; preds = %366
  %372 = getelementptr inbounds [2 x [4 x %"struct.sw::SetupProcessor::States::Gradient"]], [2 x [4 x %"struct.sw::SetupProcessor::States::Gradient"]]* %325, i64 0, i64 %355, i64 %367, i32 0
  %373 = load i8, i8* %372, align 1
  %374 = and i8 %373, -128
  %375 = or i8 %360, %374
  store i8 %375, i8* %372, align 1
  br label %376

376:                                              ; preds = %366, %371
  %377 = add nuw nsw i64 %367, 1
  %378 = icmp eq i64 %377, 4
  br i1 %378, label %362, label %366

379:                                              ; preds = %189, %262, %362, %307
  %380 = load %"class.sw::Context"*, %"class.sw::Context"** %5, align 8
  %381 = tail call zeroext i1 @_ZN2sw7Context9fogActiveEv(%"class.sw::Context"* %380) #11
  br i1 %381, label %382, label %388

382:                                              ; preds = %379
  %383 = load i8, i8* %161, align 4
  %384 = and i8 %383, -128
  %385 = shl nuw nsw i8 %165, 6
  %386 = or i8 %385, %384
  %387 = or i8 %386, 11
  store i8 %387, i8* %161, align 4
  br label %388

388:                                              ; preds = %382, %379
  br label %389

389:                                              ; preds = %388, %389
  %390 = phi i64 [ %395, %389 ], [ 0, %388 ]
  %391 = phi i32 [ %394, %389 ], [ 0, %388 ]
  %392 = getelementptr inbounds i32, i32* %20, i64 %390
  %393 = load i32, i32* %392, align 4
  %394 = xor i32 %393, %391
  %395 = add nuw nsw i64 %390, 1
  %396 = icmp eq i64 %395, 33
  br i1 %396, label %397, label %389

397:                                              ; preds = %389
  %398 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %0, i64 0, i32 1
  store i32 %394, i32* %398, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: optsize
declare zeroext i1 @_ZNK2sw7Context11isDrawPointEb(%"class.sw::Context"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZNK2sw7Context10isDrawLineEb(%"class.sw::Context"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZNK2sw7Context14isDrawTriangleEb(%"class.sw::Context"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Context17depthBufferActiveEv(%"class.sw::Context"*) local_unnamed_addr #5

; Function Attrs: optsize
declare i32 @_ZN2sw7Context14pixelFogActiveEv(%"class.sw::Context"*) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Context17perspectiveActiveEv(%"class.sw::Context"*) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Context17pointSpriteActiveEv(%"class.sw::Context"*) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Context13stencilActiveEv(%"class.sw::Context"*) local_unnamed_addr #5

; Function Attrs: optsize
declare i32 @_ZNK2sw7Context19getMultiSampleCountEv(%"class.sw::Context"*) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Context15pointSizeActiveEv(%"class.sw::Context"*) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Context21isProjectionComponentEji(%"class.sw::Context"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare dereferenceable(4) %"struct.sw::Shader::Semantic"* @_ZNK2sw11PixelShader8getInputEii(%"class.sw::PixelShader"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare dereferenceable(4) %"struct.sw::Shader::Semantic"* @_ZNK2sw12VertexShader9getOutputEii(%"class.sw::VertexShader"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i16 @_ZNK2sw7Context16pixelShaderModelEv(%"class.sw::Context"*) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Context13textureActiveEii(%"class.sw::Context"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Context11colorActiveEii(%"class.sw::Context"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Context9fogActiveEv(%"class.sw::Context"*) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } @_ZN2sw14SetupProcessor7routineERKNS0_5StateE(%"class.sw::SetupProcessor"* nocapture readonly, %"struct.sw::SetupProcessor::State"* dereferenceable(136)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::shared_ptr", align 8
  %4 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %3, i64 0, i32 1
  %6 = getelementptr inbounds %"class.sw::SetupProcessor", %"class.sw::SetupProcessor"* %0, i64 0, i32 1
  %7 = load %"class.sw::LRUCache"*, %"class.sw::LRUCache"** %6, align 8
  %8 = tail call { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } @_ZNK2sw8LRUCacheINS_14SetupProcessor5StateENSt3__110shared_ptrIN2rr7RoutineEEEE5queryERKS2_(%"class.sw::LRUCache"* %7, %"struct.sw::SetupProcessor::State"* dereferenceable(136) %1) #10
  %9 = extractvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %8, 0
  store %"class.rr::Routine"* %9, %"class.rr::Routine"** %4, align 8
  %10 = extractvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %8, 1
  store %"class.std::__1::__shared_weak_count"* %10, %"class.std::__1::__shared_weak_count"** %5, align 8
  %11 = icmp eq %"class.rr::Routine"* %9, null
  br i1 %11, label %12, label %52

12:                                               ; preds = %2
  %13 = tail call i8* @_Znwm(i64 32) #12
  %14 = bitcast i8* %13 to %"class.sw::SetupRoutine"*
  tail call void @_ZN2sw12SetupRoutineC1ERKNS_14SetupProcessor5StateE(%"class.sw::SetupRoutine"* nonnull %14, %"struct.sw::SetupProcessor::State"* dereferenceable(136) %1) #11
  tail call void @_ZN2sw12SetupRoutine8generateEv(%"class.sw::SetupRoutine"* nonnull %14) #11
  %15 = tail call { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } @_ZN2sw12SetupRoutine10getRoutineEv(%"class.sw::SetupRoutine"* nonnull %14) #11
  %16 = extractvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %15, 0
  %17 = ptrtoint %"class.rr::Routine"* %16 to i64
  %18 = extractvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %15, 1
  %19 = ptrtoint %"class.std::__1::__shared_weak_count"* %18 to i64
  %20 = bitcast %"class.std::__1::shared_ptr"* %3 to i64*
  store i64 %17, i64* %20, align 8
  %21 = bitcast %"class.std::__1::__shared_weak_count"** %5 to i64*
  store i64 %19, i64* %21, align 8
  %22 = icmp eq %"class.std::__1::__shared_weak_count"* %10, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %10, i64 0, i32 0, i32 1
  %25 = atomicrmw add i64* %24, i64 -1 acq_rel
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %10, i64 0, i32 0
  %29 = bitcast %"class.std::__1::__shared_weak_count"* %10 to void (%"class.std::__1::__shared_count"*)***
  %30 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %30, i64 2
  %32 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %31, align 8
  tail call void %32(%"class.std::__1::__shared_count"* %28) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %10) #11
  br label %33

33:                                               ; preds = %27, %23, %12
  %34 = bitcast i8* %13 to void (%"class.sw::SetupRoutine"*)***
  %35 = load void (%"class.sw::SetupRoutine"*)**, void (%"class.sw::SetupRoutine"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.sw::SetupRoutine"*)*, void (%"class.sw::SetupRoutine"*)** %35, i64 1
  %37 = load void (%"class.sw::SetupRoutine"*)*, void (%"class.sw::SetupRoutine"*)** %36, align 8
  tail call void %37(%"class.sw::SetupRoutine"* nonnull %14) #11
  %38 = load %"class.sw::LRUCache"*, %"class.sw::LRUCache"** %6, align 8
  %39 = call { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } @_ZN2sw8LRUCacheINS_14SetupProcessor5StateENSt3__110shared_ptrIN2rr7RoutineEEEE3addERKS2_RKS7_(%"class.sw::LRUCache"* %38, %"struct.sw::SetupProcessor::State"* dereferenceable(136) %1, %"class.std::__1::shared_ptr"* nonnull dereferenceable(16) %3) #10
  %40 = extractvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %39, 1
  %41 = icmp eq %"class.std::__1::__shared_weak_count"* %40, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %40, i64 0, i32 0, i32 1
  %44 = atomicrmw add i64* %43, i64 -1 acq_rel
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %40, i64 0, i32 0
  %48 = bitcast %"class.std::__1::__shared_weak_count"* %40 to void (%"class.std::__1::__shared_count"*)***
  %49 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %49, i64 2
  %51 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %50, align 8
  call void %51(%"class.std::__1::__shared_count"* %47) #11
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %40) #11
  br label %52

52:                                               ; preds = %2, %46, %42, %33
  %53 = load %"class.rr::Routine"*, %"class.rr::Routine"** %4, align 8
  %54 = insertvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.rr::Routine"* %53, 0
  %55 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %5, align 8
  %56 = insertvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %54, %"class.std::__1::__shared_weak_count"* %55, 1
  ret { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %56
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } @_ZNK2sw8LRUCacheINS_14SetupProcessor5StateENSt3__110shared_ptrIN2rr7RoutineEEEE5queryERKS2_(%"class.sw::LRUCache"*, %"struct.sw::SetupProcessor::State"* dereferenceable(136)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %138

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 8
  %9 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 5
  %12 = load %"struct.sw::SetupProcessor::State"**, %"struct.sw::SetupProcessor::State"*** %11, align 8
  %13 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = bitcast %"struct.sw::SetupProcessor::State"* %1 to i8*
  %16 = sub nsw i32 %8, %5
  br label %17

17:                                               ; preds = %7, %135
  %18 = phi i32 [ %8, %7 ], [ %136, %135 ]
  %19 = and i32 %10, %18
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.sw::SetupProcessor::State"*, %"struct.sw::SetupProcessor::State"** %12, i64 %20
  %22 = load %"struct.sw::SetupProcessor::State"*, %"struct.sw::SetupProcessor::State"** %21, align 8
  %23 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %14, %24
  br i1 %25, label %26, label %135

26:                                               ; preds = %17
  %27 = bitcast %"struct.sw::SetupProcessor::State"* %22 to i8*
  %28 = tail call i32 @bcmp(i8* %15, i8* %27, i64 132) #13
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %135

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 6
  %32 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %32, i64 %20
  %34 = bitcast %"class.std::__1::shared_ptr"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %32, i64 %20, i32 1
  %37 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %36, align 8
  %38 = icmp eq %"class.std::__1::__shared_weak_count"* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %37, i64 0, i32 0, i32 1
  %41 = atomicrmw add i64* %40, i64 1 monotonic
  %42 = load i32, i32* %3, align 8
  br label %43

43:                                               ; preds = %30, %39
  %44 = phi i32 [ %8, %30 ], [ %42, %39 ]
  %45 = icmp eq i32 %18, %44
  br i1 %45, label %138, label %46

46:                                               ; preds = %43
  %47 = add nsw i32 %19, 1
  %48 = load i32, i32* %9, align 4
  %49 = and i32 %48, %47
  %50 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %31, align 8
  %51 = sext i32 %49 to i64
  %52 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %50, i64 %51
  %53 = bitcast %"class.std::__1::shared_ptr"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %50, i64 %51, i32 1
  %56 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %55, align 8
  %57 = icmp eq %"class.std::__1::__shared_weak_count"* %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %56, i64 0, i32 0, i32 1
  %60 = atomicrmw add i64* %59, i64 1 monotonic
  %61 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %31, align 8
  br label %62

62:                                               ; preds = %46, %58
  %63 = phi %"class.std::__1::shared_ptr"* [ %50, %46 ], [ %61, %58 ]
  %64 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %63, i64 %20
  %65 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %63, i64 %51
  %66 = bitcast %"class.std::__1::shared_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %63, i64 %20, i32 1
  %69 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %68, align 8
  %70 = ptrtoint %"class.std::__1::__shared_weak_count"* %69 to i64
  %71 = icmp eq %"class.std::__1::__shared_weak_count"* %69, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %62
  %73 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %69, i64 0, i32 0, i32 1
  %74 = atomicrmw add i64* %73, i64 1 monotonic
  br label %75

75:                                               ; preds = %72, %62
  %76 = bitcast %"class.std::__1::shared_ptr"* %65 to i64*
  store i64 %67, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %63, i64 %51, i32 1
  %78 = bitcast %"class.std::__1::__shared_weak_count"** %77 to i64*
  %79 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %77, align 8
  store i64 %70, i64* %78, align 8
  %80 = icmp eq %"class.std::__1::__shared_weak_count"* %79, null
  br i1 %80, label %91, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %79, i64 0, i32 0, i32 1
  %83 = atomicrmw add i64* %82, i64 -1 acq_rel
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %79, i64 0, i32 0
  %87 = bitcast %"class.std::__1::__shared_weak_count"* %79 to void (%"class.std::__1::__shared_count"*)***
  %88 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %88, i64 2
  %90 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %89, align 8
  tail call void %90(%"class.std::__1::__shared_count"* %86) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %79) #11
  br label %91

91:                                               ; preds = %75, %81, %85
  %92 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %31, align 8
  %93 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %92, i64 %20
  %94 = ptrtoint %"class.std::__1::__shared_weak_count"* %56 to i64
  br i1 %57, label %98, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %56, i64 0, i32 0, i32 1
  %97 = atomicrmw add i64* %96, i64 1 monotonic
  br label %98

98:                                               ; preds = %95, %91
  %99 = bitcast %"class.std::__1::shared_ptr"* %93 to i64*
  store i64 %54, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %92, i64 %20, i32 1
  %101 = bitcast %"class.std::__1::__shared_weak_count"** %100 to i64*
  %102 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %100, align 8
  store i64 %94, i64* %101, align 8
  %103 = icmp eq %"class.std::__1::__shared_weak_count"* %102, null
  br i1 %103, label %114, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %102, i64 0, i32 0, i32 1
  %106 = atomicrmw add i64* %105, i64 -1 acq_rel
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %114

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %102, i64 0, i32 0
  %110 = bitcast %"class.std::__1::__shared_weak_count"* %102 to void (%"class.std::__1::__shared_count"*)***
  %111 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %111, i64 2
  %113 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %112, align 8
  tail call void %113(%"class.std::__1::__shared_count"* %109) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %102) #11
  br label %114

114:                                              ; preds = %98, %104, %108
  %115 = load %"struct.sw::SetupProcessor::State"**, %"struct.sw::SetupProcessor::State"*** %11, align 8
  %116 = getelementptr inbounds %"struct.sw::SetupProcessor::State"*, %"struct.sw::SetupProcessor::State"** %115, i64 %51
  %117 = bitcast %"struct.sw::SetupProcessor::State"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.sw::SetupProcessor::State"*, %"struct.sw::SetupProcessor::State"** %115, i64 %20
  %120 = bitcast %"struct.sw::SetupProcessor::State"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  store i64 %121, i64* %117, align 8
  %122 = load %"struct.sw::SetupProcessor::State"**, %"struct.sw::SetupProcessor::State"*** %11, align 8
  %123 = getelementptr inbounds %"struct.sw::SetupProcessor::State"*, %"struct.sw::SetupProcessor::State"** %122, i64 %20
  %124 = bitcast %"struct.sw::SetupProcessor::State"** %123 to i64*
  store i64 %118, i64* %124, align 8
  br i1 %57, label %138, label %125

125:                                              ; preds = %114
  %126 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %56, i64 0, i32 0, i32 1
  %127 = atomicrmw add i64* %126, i64 -1 acq_rel
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %138

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %56, i64 0, i32 0
  %131 = bitcast %"class.std::__1::__shared_weak_count"* %56 to void (%"class.std::__1::__shared_count"*)***
  %132 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %132, i64 2
  %134 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %133, align 8
  tail call void %134(%"class.std::__1::__shared_count"* %130) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %56) #11
  br label %138

135:                                              ; preds = %17, %26
  %136 = add nsw i32 %18, -1
  %137 = icmp sgt i32 %136, %16
  br i1 %137, label %17, label %138

138:                                              ; preds = %135, %2, %129, %125, %114, %43
  %139 = phi i64 [ %35, %43 ], [ %35, %114 ], [ %35, %125 ], [ %35, %129 ], [ 0, %2 ], [ 0, %135 ]
  %140 = phi %"class.std::__1::__shared_weak_count"* [ %37, %43 ], [ %37, %114 ], [ %37, %125 ], [ %37, %129 ], [ null, %2 ], [ null, %135 ]
  %141 = inttoptr i64 %139 to %"class.rr::Routine"*
  %142 = insertvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.rr::Routine"* %141, 0
  %143 = insertvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %142, %"class.std::__1::__shared_weak_count"* %140, 1
  ret { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %143
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: optsize
declare void @_ZN2sw12SetupRoutineC1ERKNS_14SetupProcessor5StateE(%"class.sw::SetupRoutine"*, %"struct.sw::SetupProcessor::State"* dereferenceable(136)) unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw12SetupRoutine8generateEv(%"class.sw::SetupRoutine"*) local_unnamed_addr #5

; Function Attrs: optsize
declare { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } @_ZN2sw12SetupRoutine10getRoutineEv(%"class.sw::SetupRoutine"*) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %7 = atomicrmw add i64* %6, i64 -1 acq_rel
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %12 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %12, i64 2
  %14 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, align 8
  tail call void %14(%"class.std::__1::__shared_count"* %10) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #11
  br label %15

15:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } @_ZN2sw8LRUCacheINS_14SetupProcessor5StateENSt3__110shared_ptrIN2rr7RoutineEEEE3addERKS2_RKS7_(%"class.sw::LRUCache"*, %"struct.sw::SetupProcessor::State"* dereferenceable(136), %"class.std::__1::shared_ptr"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 1
  %7 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %6, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, 1
  %13 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %12, %14
  %16 = select i1 %15, i32 %12, i32 %14
  store i32 %16, i32* %10, align 4
  %17 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 5
  %18 = load %"struct.sw::SetupProcessor::State"**, %"struct.sw::SetupProcessor::State"*** %17, align 8
  %19 = sext i32 %9 to i64
  %20 = getelementptr inbounds %"struct.sw::SetupProcessor::State"*, %"struct.sw::SetupProcessor::State"** %18, i64 %19
  %21 = bitcast %"struct.sw::SetupProcessor::State"** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"struct.sw::SetupProcessor::State"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 136, i1 false)
  %24 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 6
  %25 = load %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"** %24, align 8
  %26 = load i32, i32* %4, align 8
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %25, i64 %27
  %29 = bitcast %"class.std::__1::shared_ptr"* %2 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %2, i64 0, i32 1
  %32 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %31, align 8
  %33 = ptrtoint %"class.std::__1::__shared_weak_count"* %32 to i64
  %34 = icmp eq %"class.std::__1::__shared_weak_count"* %32, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %32, i64 0, i32 0, i32 1
  %37 = atomicrmw add i64* %36, i64 1 monotonic
  br label %38

38:                                               ; preds = %35, %3
  %39 = bitcast %"class.std::__1::shared_ptr"* %28 to i64*
  store i64 %30, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %25, i64 %27, i32 1
  %41 = bitcast %"class.std::__1::__shared_weak_count"** %40 to i64*
  %42 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %40, align 8
  store i64 %33, i64* %41, align 8
  %43 = icmp eq %"class.std::__1::__shared_weak_count"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %42, i64 0, i32 0, i32 1
  %46 = atomicrmw add i64* %45, i64 -1 acq_rel
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %42, i64 0, i32 0
  %50 = bitcast %"class.std::__1::__shared_weak_count"* %42 to void (%"class.std::__1::__shared_count"*)***
  %51 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %51, i64 2
  %53 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %52, align 8
  tail call void %53(%"class.std::__1::__shared_count"* %49) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %42) #11
  br label %54

54:                                               ; preds = %38, %44, %48
  %55 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %2, i64 0, i32 0
  %56 = load %"class.rr::Routine"*, %"class.rr::Routine"** %55, align 8
  %57 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %31, align 8
  %58 = icmp eq %"class.std::__1::__shared_weak_count"* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %57, i64 0, i32 0, i32 1
  %61 = atomicrmw add i64* %60, i64 1 monotonic
  br label %62

62:                                               ; preds = %54, %59
  %63 = insertvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.rr::Routine"* %56, 0
  %64 = insertvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %63, %"class.std::__1::__shared_weak_count"* %57, 1
  ret { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %64
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2sw8LRUCacheINS_14SetupProcessor5StateENSt3__110shared_ptrIN2rr7RoutineEEEEC2Ei(%"class.sw::LRUCache"*, i32) unnamed_addr #2 comdat align 2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i32 [ 1, %2 ], [ %6, %3 ]
  %5 = icmp slt i32 %4, %1
  %6 = shl i32 %4, 1
  br i1 %5, label %3, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 0
  store i32 %4, i32* %8, align 8
  %9 = add nsw i32 %4, -1
  %10 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 1
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 2
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 3
  store i32 0, i32* %12, align 4
  %13 = sext i32 %4 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 136)
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call i8* @_Znam(i64 %17) #12
  %19 = bitcast i8* %18 to %"struct.sw::SetupProcessor::State"*
  %20 = icmp eq i32 %4, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %19, i64 %13
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi %"struct.sw::SetupProcessor::State"* [ %19, %21 ], [ %26, %23 ]
  %25 = bitcast %"struct.sw::SetupProcessor::State"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 132, i1 false) #13
  %26 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %24, i64 1
  %27 = icmp eq %"struct.sw::SetupProcessor::State"* %26, %22
  br i1 %27, label %28, label %23

28:                                               ; preds = %23
  %29 = load i32, i32* %8, align 8
  br label %30

30:                                               ; preds = %28, %7
  %31 = phi i32 [ %29, %28 ], [ 0, %7 ]
  %32 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 4
  %33 = bitcast %"struct.sw::SetupProcessor::State"** %32 to i8**
  store i8* %18, i8** %33, align 8
  %34 = sext i32 %31 to i64
  %35 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %34, i64 8)
  %36 = extractvalue { i64, i1 } %35, 1
  %37 = extractvalue { i64, i1 } %35, 0
  %38 = select i1 %36, i64 -1, i64 %37
  %39 = tail call i8* @_Znam(i64 %38) #12
  %40 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 5
  %41 = bitcast %"struct.sw::SetupProcessor::State"*** %40 to i8**
  store i8* %39, i8** %41, align 8
  %42 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %34, i64 16)
  %43 = extractvalue { i64, i1 } %42, 1
  %44 = extractvalue { i64, i1 } %42, 0
  %45 = or i64 %44, 8
  %46 = select i1 %43, i64 -1, i64 %45
  %47 = tail call i8* @_Znam(i64 %46) #12
  %48 = bitcast i8* %47 to i64*
  store i64 %34, i64* %48, align 16
  %49 = getelementptr inbounds i8, i8* %47, i64 8
  %50 = icmp eq i32 %31, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %30
  %52 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 6
  %53 = bitcast %"class.std::__1::shared_ptr"** %52 to i8**
  store i8* %49, i8** %53, align 8
  br label %63

54:                                               ; preds = %30
  %55 = shl nsw i64 %34, 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 %55, i1 false)
  %56 = getelementptr inbounds %"class.sw::LRUCache", %"class.sw::LRUCache"* %0, i64 0, i32 6
  %57 = bitcast %"class.std::__1::shared_ptr"** %56 to i8**
  store i8* %49, i8** %57, align 8
  %58 = icmp sgt i32 %31, 0
  br i1 %58, label %59, label %63

59:                                               ; preds = %54
  %60 = bitcast i8* %39 to i8**
  store i8* %18, i8** %60, align 8
  %61 = load i32, i32* %8, align 8
  %62 = icmp sgt i32 %61, 1
  br i1 %62, label %64, label %63

63:                                               ; preds = %64, %59, %51, %54
  ret void

64:                                               ; preds = %59, %64
  %65 = phi i64 [ %70, %64 ], [ 1, %59 ]
  %66 = load %"struct.sw::SetupProcessor::State"*, %"struct.sw::SetupProcessor::State"** %32, align 8
  %67 = load %"struct.sw::SetupProcessor::State"**, %"struct.sw::SetupProcessor::State"*** %40, align 8
  %68 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %66, i64 %65
  %69 = getelementptr inbounds %"struct.sw::SetupProcessor::State"*, %"struct.sw::SetupProcessor::State"** %67, i64 %65
  store %"struct.sw::SetupProcessor::State"* %68, %"struct.sw::SetupProcessor::State"** %69, align 8
  %70 = add nuw nsw i64 %65, 1
  %71 = load i32, i32* %8, align 8
  %72 = sext i32 %71 to i64
  %73 = icmp slt i64 %70, %72
  br i1 %73, label %64, label %63
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { optsize }
attributes #11 = { nounwind optsize }
attributes #12 = { builtin nounwind optsize }
attributes #13 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
