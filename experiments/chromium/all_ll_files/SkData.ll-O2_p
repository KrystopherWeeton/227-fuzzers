; ModuleID = '../../third_party/skia/src/core/SkData.cpp'
source_filename = "../../third_party/skia/src/core/SkData.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.SkData* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%class.SkStream = type { i32 (...)** }

@_ZZN6SkData9MakeEmptyEvE4once = internal global { { { i8 } } } zeroinitializer, align 1
@_ZZN6SkData9MakeEmptyEvE5empty = internal unnamed_addr global %class.SkData* null, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"../../third_party/skia/src/core/SkData.cpp\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"length < actualLength\00", align 1

@_ZN6SkDataC1EPKvmPFvS1_PvES2_ = hidden unnamed_addr alias void (%class.SkData*, i8*, i64, void (i8*, i8*)*, i8*), void (%class.SkData*, i8*, i64, void (i8*, i8*)*, i8*)* @_ZN6SkDataC2EPKvmPFvS1_PvES2_
@_ZN6SkDataC1Em = hidden unnamed_addr alias void (%class.SkData*, i64), void (%class.SkData*, i64)* @_ZN6SkDataC2Em
@_ZN6SkDataD1Ev = hidden unnamed_addr alias void (%class.SkData*), void (%class.SkData*)* @_ZN6SkDataD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6SkDataC2EPKvmPFvS1_PvES2_(%class.SkData* nocapture, i8*, i64, void (i8*, i8*)*, i8*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 1
  store void (i8*, i8*)* %3, void (i8*, i8*)** %7, align 8
  %8 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 2
  store i8* %4, i8** %8, align 8
  %9 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 3
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 4
  store i64 %2, i64* %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6SkDataC2Em(%class.SkData*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 3
  %6 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 1
  %7 = bitcast i8** %5 to %class.SkData**
  %8 = bitcast void (i8*, i8*)** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  store %class.SkData* %6, %class.SkData** %7, align 8
  %9 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 4
  store i64 %1, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkDataD2Ev(%class.SkData* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 1
  %3 = load void (i8*, i8*)*, void (i8*, i8*)** %2, align 8
  %4 = icmp eq void (i8*, i8*)* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  tail call void %3(i8* %7, i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6SkData6equalsEPKS_(%class.SkData* readonly, %class.SkData* readonly) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %class.SkData* %0, %1
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = icmp eq %class.SkData* %1, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.SkData, %class.SkData* %1, i64 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %12, label %21

12:                                               ; preds = %6
  %13 = icmp eq i64 %8, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %class.SkData, %class.SkData* %1, i64 0, i32 3
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i32 @bcmp(i8* %18, i8* %16, i64 %8)
  %20 = icmp eq i32 %19, 0
  br label %21

21:                                               ; preds = %14, %12, %6, %4, %2
  %22 = phi i1 [ true, %2 ], [ false, %4 ], [ false, %6 ], [ %20, %14 ], [ true, %12 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK6SkData9copyRangeEmmPv(%class.SkData* nocapture readonly, i64, i64, i8* nocapture) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = icmp ule i64 %6, %1
  %8 = icmp eq i64 %2, 0
  %9 = or i1 %8, %7
  br i1 %9, label %17, label %10

10:                                               ; preds = %4
  %11 = sub i64 %6, %1
  %12 = icmp ult i64 %11, %2
  %13 = select i1 %12, i64 %11, i64 %2
  %14 = getelementptr inbounds %class.SkData, %class.SkData* %0, i64 0, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %16, i64 %13, i1 false)
  br label %17

17:                                               ; preds = %4, %10
  %18 = phi i64 [ %13, %10 ], [ 0, %4 ]
  ret i64 %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #1 align 2 {
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkData18PrivateNewWithCopyEPKvm(%class.sk_sp* noalias nocapture sret, i8* readonly, i64) local_unnamed_addr #1 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %29

5:                                                ; preds = %3
  %6 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !2
  switch i8 %6, label %7 [
    i8 2, label %19
    i8 0, label %8
  ]

7:                                                ; preds = %8, %5
  br label %16

8:                                                ; preds = %5
  %9 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic, !noalias !2
  %10 = extractvalue { i8, i1 } %9, 1
  br i1 %10, label %11, label %7

11:                                               ; preds = %8
  %12 = tail call i8* @_Znwm(i64 40) #14, !noalias !2
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 4, !noalias !2
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false) #13, !noalias !2
  store i8* %12, i8** bitcast (%class.SkData** @_ZZN6SkData9MakeEmptyEvE5empty to i8**), align 8, !noalias !2
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1, !noalias !2
  %15 = bitcast i8* %12 to %class.SkData*
  br label %22

16:                                               ; preds = %7, %16
  %17 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !2
  %18 = icmp eq i8 %17, 2
  br i1 %18, label %19, label %16

19:                                               ; preds = %16, %5
  %20 = load %class.SkData*, %class.SkData** @_ZZN6SkData9MakeEmptyEvE5empty, align 8, !noalias !2
  %21 = icmp eq %class.SkData* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %19, %11
  %23 = phi %class.SkData* [ %15, %11 ], [ %20, %19 ]
  %24 = getelementptr inbounds %class.SkData, %class.SkData* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic, !noalias !5
  br label %26

26:                                               ; preds = %19, %22
  %27 = phi %class.SkData* [ null, %19 ], [ %23, %22 ]
  %28 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* %27, %class.SkData** %28, align 8, !alias.scope !5
  br label %47

29:                                               ; preds = %3
  %30 = icmp ult i64 %2, -40
  br i1 %30, label %32, label %31

31:                                               ; preds = %29
  tail call fastcc void @"_ZZN6SkData18PrivateNewWithCopyEPKvmENK3$_0clEv"()
  unreachable

32:                                               ; preds = %29
  %33 = add nuw i64 %2, 40
  %34 = tail call i8* @_Znwm(i64 %33) #13
  %35 = bitcast i8* %34 to i32*
  store i32 1, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = getelementptr inbounds i8, i8* %34, i64 24
  %38 = getelementptr inbounds i8, i8* %34, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #13
  %39 = bitcast i8* %37 to i8**
  store i8* %38, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %34, i64 32
  %41 = bitcast i8* %40 to i64*
  store i64 %2, i64* %41, align 8
  %42 = ptrtoint i8* %34 to i64
  %43 = icmp eq i8* %1, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* nonnull align 1 %1, i64 %2, i1 false)
  br label %45

45:                                               ; preds = %44, %32
  %46 = bitcast %class.sk_sp* %0 to i64*
  store i64 %42, i64* %46, align 8
  br label %47

47:                                               ; preds = %45, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkData9MakeEmptyEv(%class.sk_sp* noalias nocapture sret) local_unnamed_addr #1 align 2 {
  %2 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %2, label %3 [
    i8 2, label %15
    i8 0, label %4
  ]

3:                                                ; preds = %4, %1
  br label %12

4:                                                ; preds = %1
  %5 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %6 = extractvalue { i8, i1 } %5, 1
  br i1 %6, label %7, label %3

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 40) #14
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #13
  store i8* %8, i8** bitcast (%class.SkData** @_ZZN6SkData9MakeEmptyEvE5empty to i8**), align 8
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1
  %11 = bitcast i8* %8 to %class.SkData*
  br label %18

12:                                               ; preds = %3, %12
  %13 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %14 = icmp eq i8 %13, 2
  br i1 %14, label %15, label %12

15:                                               ; preds = %12, %1
  %16 = load %class.SkData*, %class.SkData** @_ZZN6SkData9MakeEmptyEvE5empty, align 8
  %17 = icmp eq %class.SkData* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %7, %15
  %19 = phi %class.SkData* [ %11, %7 ], [ %16, %15 ]
  %20 = getelementptr inbounds %class.SkData, %class.SkData* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic, !noalias !8
  br label %22

22:                                               ; preds = %15, %18
  %23 = phi %class.SkData* [ null, %15 ], [ %19, %18 ]
  %24 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* %23, %class.SkData** %24, align 8, !alias.scope !8
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @"_ZZN6SkData18PrivateNewWithCopyEPKvmENK3$_0clEv"() unnamed_addr #5 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i32 74, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6SkData16DummyReleaseProcEPKvPv(i8* nocapture, i8* nocapture) local_unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6SkData14MakeFromMallocEPKvm(%class.sk_sp* noalias nocapture sret, i8*, i64) local_unnamed_addr #8 align 2 {
  %4 = tail call i8* @_Znwm(i64 40) #14
  %5 = bitcast i8* %4 to i32*
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to void (i8*, i8*)**
  store void (i8*, i8*)* @_ZL19sk_free_releaseprocPKvPv, void (i8*, i8*)** %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  %9 = bitcast i8* %8 to i8**
  store i8* null, i8** %9, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 24
  %11 = bitcast i8* %10 to i8**
  store i8* %1, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 32
  %13 = bitcast i8* %12 to i64*
  store i64 %2, i64* %13, align 8
  %14 = bitcast %class.sk_sp* %0 to i8**
  store i8* %4, i8** %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL19sk_free_releaseprocPKvPv(i8*, i8* nocapture readnone) #1 {
  tail call void @_Z7sk_freePv(i8* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp* noalias nocapture sret, i8* readonly, i64) local_unnamed_addr #1 align 2 {
  tail call void @_ZN6SkData18PrivateNewWithCopyEPKvm(%class.sk_sp* sret %0, i8* %1, i64 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp* noalias nocapture sret, i64) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !11
  switch i8 %5, label %6 [
    i8 2, label %18
    i8 0, label %7
  ]

6:                                                ; preds = %7, %4
  br label %15

7:                                                ; preds = %4
  %8 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic, !noalias !11
  %9 = extractvalue { i8, i1 } %8, 1
  br i1 %9, label %10, label %6

10:                                               ; preds = %7
  %11 = tail call i8* @_Znwm(i64 40) #14, !noalias !11
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 4, !noalias !11
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #13, !noalias !11
  store i8* %11, i8** bitcast (%class.SkData** @_ZZN6SkData9MakeEmptyEvE5empty to i8**), align 8, !noalias !11
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1, !noalias !11
  %14 = bitcast i8* %11 to %class.SkData*
  br label %21

15:                                               ; preds = %6, %15
  %16 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !11
  %17 = icmp eq i8 %16, 2
  br i1 %17, label %18, label %15

18:                                               ; preds = %15, %4
  %19 = load %class.SkData*, %class.SkData** @_ZZN6SkData9MakeEmptyEvE5empty, align 8, !noalias !11
  %20 = icmp eq %class.SkData* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %18, %10
  %22 = phi %class.SkData* [ %14, %10 ], [ %19, %18 ]
  %23 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !16
  br label %25

25:                                               ; preds = %21, %18
  %26 = phi %class.SkData* [ null, %18 ], [ %22, %21 ]
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* %26, %class.SkData** %27, align 8, !alias.scope !16
  br label %43

28:                                               ; preds = %2
  %29 = icmp ult i64 %1, -40
  br i1 %29, label %31, label %30

30:                                               ; preds = %28
  tail call fastcc void @"_ZZN6SkData18PrivateNewWithCopyEPKvmENK3$_0clEv"() #13, !noalias !19
  unreachable

31:                                               ; preds = %28
  %32 = add nuw i64 %1, 40
  %33 = tail call i8* @_Znwm(i64 %32) #13, !noalias !19
  %34 = bitcast i8* %33 to i32*
  store i32 1, i32* %34, align 4, !noalias !19
  %35 = getelementptr inbounds i8, i8* %33, i64 8
  %36 = getelementptr inbounds i8, i8* %33, i64 24
  %37 = getelementptr inbounds i8, i8* %33, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #13, !noalias !19
  %38 = bitcast i8* %36 to i8**
  store i8* %37, i8** %38, align 8, !noalias !19
  %39 = getelementptr inbounds i8, i8* %33, i64 32
  %40 = bitcast i8* %39 to i64*
  store i64 %1, i64* %40, align 8, !noalias !19
  %41 = ptrtoint i8* %33 to i64
  %42 = bitcast %class.sk_sp* %0 to i64*
  store i64 %41, i64* %42, align 8, !alias.scope !19
  br label %43

43:                                               ; preds = %25, %31
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* noalias nocapture sret, i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #8 align 2 {
  %6 = tail call i8* @_Znwm(i64 40) #14
  %7 = bitcast i8* %6 to i32*
  store i32 1, i32* %7, align 4
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to void (i8*, i8*)**
  store void (i8*, i8*)* %3, void (i8*, i8*)** %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = bitcast i8* %10 to i8**
  store i8* %4, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 24
  %13 = bitcast i8* %12 to i8**
  store i8* %1, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 32
  %15 = bitcast i8* %14 to i64*
  store i64 %2, i64* %15, align 8
  %16 = bitcast %class.sk_sp* %0 to i8**
  store i8* %6, i8** %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkData12MakeFromFILEEP8_IO_FILE(%class.sk_sp* noalias nocapture sret, %struct._IO_FILE*) local_unnamed_addr #1 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  store i64 -6148914691236517206, i64* %3, align 8
  %5 = call i8* @_Z8sk_fmmapP8_IO_FILEPm(%struct._IO_FILE* %1, i64* nonnull %3) #13
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %8, align 8
  br label %23

9:                                                ; preds = %2
  %10 = load i64, i64* %3, align 8
  %11 = inttoptr i64 %10 to i8*
  %12 = call i8* @_Znwm(i64 40) #14, !noalias !20
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 4, !noalias !20
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to void (i8*, i8*)**
  store void (i8*, i8*)* @_ZL19sk_mmap_releaseprocPKvPv, void (i8*, i8*)** %15, align 8, !noalias !20
  %16 = getelementptr inbounds i8, i8* %12, i64 16
  %17 = bitcast i8* %16 to i8**
  store i8* %11, i8** %17, align 8, !noalias !20
  %18 = getelementptr inbounds i8, i8* %12, i64 24
  %19 = bitcast i8* %18 to i8**
  store i8* %5, i8** %19, align 8, !noalias !20
  %20 = getelementptr inbounds i8, i8* %12, i64 32
  %21 = bitcast i8* %20 to i64*
  store i64 %10, i64* %21, align 8, !noalias !20
  %22 = bitcast %class.sk_sp* %0 to i8**
  store i8* %12, i8** %22, align 8, !alias.scope !20
  br label %23

23:                                               ; preds = %9, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

declare i8* @_Z8sk_fmmapP8_IO_FILEPm(%struct._IO_FILE*, i64*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL19sk_mmap_releaseprocPKvPv(i8*, i8*) #1 {
  %3 = ptrtoint i8* %1 to i64
  tail call void @_Z10sk_fmunmapPKvm(i8* %0, i64 %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkData16MakeFromFileNameEPKc(%class.sk_sp* noalias nocapture sret, i8*) local_unnamed_addr #1 align 2 {
  %3 = alloca i64, align 8
  %4 = icmp eq i8* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = tail call %struct._IO_FILE* @_Z8sk_fopenPKc12SkFILE_Flags(i8* nonnull %1, i32 1) #13
  %7 = icmp eq %struct._IO_FILE* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %2, %5
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %9, align 8
  br label %31

10:                                               ; preds = %5
  %11 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13, !noalias !23
  store i64 -6148914691236517206, i64* %3, align 8, !noalias !23
  %12 = call i8* @_Z8sk_fmmapP8_IO_FILEPm(%struct._IO_FILE* nonnull %6, i64* nonnull %3) #13, !noalias !23
  %13 = icmp eq i8* %12, null
  br i1 %13, label %28, label %14

14:                                               ; preds = %10
  %15 = load i64, i64* %3, align 8, !noalias !23
  %16 = inttoptr i64 %15 to i8*
  %17 = call i8* @_Znwm(i64 40) #14, !noalias !26
  %18 = bitcast i8* %17 to i32*
  store i32 1, i32* %18, align 4, !noalias !26
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = bitcast i8* %19 to void (i8*, i8*)**
  store void (i8*, i8*)* @_ZL19sk_mmap_releaseprocPKvPv, void (i8*, i8*)** %20, align 8, !noalias !26
  %21 = getelementptr inbounds i8, i8* %17, i64 16
  %22 = bitcast i8* %21 to i8**
  store i8* %16, i8** %22, align 8, !noalias !26
  %23 = getelementptr inbounds i8, i8* %17, i64 24
  %24 = bitcast i8* %23 to i8**
  store i8* %12, i8** %24, align 8, !noalias !26
  %25 = getelementptr inbounds i8, i8* %17, i64 32
  %26 = bitcast i8* %25 to i64*
  store i64 %15, i64* %26, align 8, !noalias !26
  %27 = ptrtoint i8* %17 to i64
  br label %28

28:                                               ; preds = %14, %10
  %29 = phi i64 [ %27, %14 ], [ 0, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13, !noalias !23
  call void @_Z9sk_fcloseP8_IO_FILE(%struct._IO_FILE* nonnull %6) #13
  %30 = bitcast %class.sk_sp* %0 to i64*
  store i64 %29, i64* %30, align 8
  br label %31

31:                                               ; preds = %28, %8
  ret void
}

declare %struct._IO_FILE* @_Z8sk_fopenPKc12SkFILE_Flags(i8*, i32) local_unnamed_addr #9

declare void @_Z9sk_fcloseP8_IO_FILE(%struct._IO_FILE*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkData10MakeFromFDEi(%class.sk_sp* noalias nocapture sret, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  store i64 -6148914691236517206, i64* %3, align 8
  %5 = call i8* @_Z9sk_fdmmapiPm(i32 %1, i64* nonnull %3) #13
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %8, align 8
  br label %23

9:                                                ; preds = %2
  %10 = load i64, i64* %3, align 8
  %11 = inttoptr i64 %10 to i8*
  %12 = call i8* @_Znwm(i64 40) #14, !noalias !29
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 4, !noalias !29
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to void (i8*, i8*)**
  store void (i8*, i8*)* @_ZL19sk_mmap_releaseprocPKvPv, void (i8*, i8*)** %15, align 8, !noalias !29
  %16 = getelementptr inbounds i8, i8* %12, i64 16
  %17 = bitcast i8* %16 to i8**
  store i8* %11, i8** %17, align 8, !noalias !29
  %18 = getelementptr inbounds i8, i8* %12, i64 24
  %19 = bitcast i8* %18 to i8**
  store i8* %5, i8** %19, align 8, !noalias !29
  %20 = getelementptr inbounds i8, i8* %12, i64 32
  %21 = bitcast i8* %20 to i64*
  store i64 %10, i64* %21, align 8, !noalias !29
  %22 = bitcast %class.sk_sp* %0 to i8**
  store i8* %12, i8** %22, align 8, !alias.scope !29
  br label %23

23:                                               ; preds = %9, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

declare i8* @_Z9sk_fdmmapiPm(i32, i64*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkData10MakeSubsetEPKS_mm(%class.sk_sp* noalias nocapture sret, %class.SkData*, i64, i64) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkData, %class.SkData* %1, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = icmp ule i64 %6, %2
  %8 = icmp eq i64 %3, 0
  %9 = or i1 %8, %7
  br i1 %9, label %10, label %34

10:                                               ; preds = %4
  %11 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !32
  switch i8 %11, label %12 [
    i8 2, label %24
    i8 0, label %13
  ]

12:                                               ; preds = %13, %10
  br label %21

13:                                               ; preds = %10
  %14 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic, !noalias !32
  %15 = extractvalue { i8, i1 } %14, 1
  br i1 %15, label %16, label %12

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 40) #14, !noalias !32
  %18 = bitcast i8* %17 to i32*
  store i32 1, i32* %18, align 4, !noalias !32
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #13, !noalias !32
  store i8* %17, i8** bitcast (%class.SkData** @_ZZN6SkData9MakeEmptyEvE5empty to i8**), align 8, !noalias !32
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1, !noalias !32
  %20 = bitcast i8* %17 to %class.SkData*
  br label %27

21:                                               ; preds = %12, %21
  %22 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !32
  %23 = icmp eq i8 %22, 2
  br i1 %23, label %24, label %21

24:                                               ; preds = %21, %10
  %25 = load %class.SkData*, %class.SkData** @_ZZN6SkData9MakeEmptyEvE5empty, align 8, !noalias !32
  %26 = icmp eq %class.SkData* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %24, %16
  %28 = phi %class.SkData* [ %20, %16 ], [ %25, %24 ]
  %29 = getelementptr inbounds %class.SkData, %class.SkData* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic, !noalias !35
  br label %31

31:                                               ; preds = %24, %27
  %32 = phi %class.SkData* [ null, %24 ], [ %28, %27 ]
  %33 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* %32, %class.SkData** %33, align 8, !alias.scope !35
  br label %54

34:                                               ; preds = %4
  %35 = sub i64 %6, %2
  %36 = icmp ult i64 %35, %3
  %37 = select i1 %36, i64 %35, i64 %3
  %38 = getelementptr inbounds %class.SkData, %class.SkData* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic
  %40 = tail call i8* @_Znwm(i64 40) #14
  %41 = getelementptr inbounds %class.SkData, %class.SkData* %1, i64 0, i32 3
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %2
  %44 = bitcast i8* %40 to i32*
  store i32 1, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %40, i64 8
  %46 = bitcast i8* %45 to void (i8*, i8*)**
  store void (i8*, i8*)* @_ZL22sk_dataref_releaseprocPKvPv, void (i8*, i8*)** %46, align 8
  %47 = getelementptr inbounds i8, i8* %40, i64 16
  %48 = bitcast i8* %47 to %class.SkData**
  store %class.SkData* %1, %class.SkData** %48, align 8
  %49 = getelementptr inbounds i8, i8* %40, i64 24
  %50 = bitcast i8* %49 to i8**
  store i8* %43, i8** %50, align 8
  %51 = getelementptr inbounds i8, i8* %40, i64 32
  %52 = bitcast i8* %51 to i64*
  store i64 %37, i64* %52, align 8
  %53 = bitcast %class.sk_sp* %0 to i8**
  store i8* %40, i8** %53, align 8
  br label %54

54:                                               ; preds = %34, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL22sk_dataref_releaseprocPKvPv(i8* nocapture readnone, i8*) #1 {
  %3 = bitcast i8* %1 to i32*
  %4 = atomicrmw add i32* %3, i32 -1 acq_rel
  %5 = icmp ne i32 %4, 1
  %6 = icmp eq i8* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %1, i64 8
  %10 = bitcast i8* %9 to void (i8*, i8*)**
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds i8, i8* %1, i64 24
  %15 = bitcast i8* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %1, i64 16
  %18 = bitcast i8* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void %11(i8* %16, i8* %19) #13
  br label %20

20:                                               ; preds = %13, %8
  tail call void @_ZdlPv(i8* nonnull %1) #13
  br label %21

21:                                               ; preds = %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkData15MakeWithCStringEPKc(%class.sk_sp* noalias nocapture sret, i8* readonly) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* nonnull %1) #16
  %6 = add i64 %5, 1
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i8* [ %1, %4 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %2 ]
  %9 = phi i64 [ %6, %4 ], [ 1, %2 ]
  tail call void @_ZN6SkData18PrivateNewWithCopyEPKvm(%class.sk_sp* sret %0, i8* nonnull %8, i64 %9) #13
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkData14MakeFromStreamEP8SkStreamm(%class.sk_sp* noalias nocapture sret, %class.SkStream*, i64) local_unnamed_addr #1 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %29

5:                                                ; preds = %3
  %6 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !38
  switch i8 %6, label %7 [
    i8 2, label %19
    i8 0, label %8
  ]

7:                                                ; preds = %8, %5
  br label %16

8:                                                ; preds = %5
  %9 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic, !noalias !38
  %10 = extractvalue { i8, i1 } %9, 1
  br i1 %10, label %11, label %7

11:                                               ; preds = %8
  %12 = tail call i8* @_Znwm(i64 40) #14, !noalias !38
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 4, !noalias !38
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false) #13, !noalias !38
  store i8* %12, i8** bitcast (%class.SkData** @_ZZN6SkData9MakeEmptyEvE5empty to i8**), align 8, !noalias !38
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1, !noalias !38
  %15 = bitcast i8* %12 to %class.SkData*
  br label %22

16:                                               ; preds = %7, %16
  %17 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN6SkData9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !38
  %18 = icmp eq i8 %17, 2
  br i1 %18, label %19, label %16

19:                                               ; preds = %16, %5
  %20 = load %class.SkData*, %class.SkData** @_ZZN6SkData9MakeEmptyEvE5empty, align 8, !noalias !38
  %21 = icmp eq %class.SkData* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %19, %11
  %23 = phi %class.SkData* [ %15, %11 ], [ %20, %19 ]
  %24 = getelementptr inbounds %class.SkData, %class.SkData* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic, !noalias !45
  br label %26

26:                                               ; preds = %22, %19
  %27 = phi %class.SkData* [ null, %19 ], [ %23, %22 ]
  %28 = ptrtoint %class.SkData* %27 to i64
  br label %43

29:                                               ; preds = %3
  %30 = icmp ult i64 %2, -40
  br i1 %30, label %32, label %31

31:                                               ; preds = %29
  tail call fastcc void @"_ZZN6SkData18PrivateNewWithCopyEPKvmENK3$_0clEv"() #13, !noalias !48
  unreachable

32:                                               ; preds = %29
  %33 = add nuw i64 %2, 40
  %34 = tail call i8* @_Znwm(i64 %33) #13, !noalias !48
  %35 = bitcast i8* %34 to i32*
  store i32 1, i32* %35, align 4, !noalias !48
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = getelementptr inbounds i8, i8* %34, i64 24
  %38 = getelementptr inbounds i8, i8* %34, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #13, !noalias !48
  %39 = bitcast i8* %37 to i8**
  store i8* %38, i8** %39, align 8, !noalias !48
  %40 = getelementptr inbounds i8, i8* %34, i64 32
  %41 = bitcast i8* %40 to i64*
  store i64 %2, i64* %41, align 8, !noalias !48
  %42 = ptrtoint i8* %34 to i64
  br label %43

43:                                               ; preds = %26, %32
  %44 = phi i64 [ %28, %26 ], [ %42, %32 ]
  %45 = inttoptr i64 %44 to %class.SkData*
  %46 = getelementptr inbounds %class.SkData, %class.SkData* %45, i64 0, i32 3
  %47 = load i8*, i8** %46, align 8
  %48 = bitcast %class.SkStream* %1 to i64 (%class.SkStream*, i8*, i64)***
  %49 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %48, align 8
  %50 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %49, i64 2
  %51 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %50, align 8
  %52 = tail call i64 %51(%class.SkStream* %1, i8* %47, i64 %2) #13
  %53 = icmp eq i64 %52, %2
  br i1 %53, label %54, label %56

54:                                               ; preds = %43
  %55 = bitcast %class.sk_sp* %0 to i64*
  store i64 %44, i64* %55, align 8
  br label %78

56:                                               ; preds = %43
  %57 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %57, align 8
  %58 = icmp eq i64 %44, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %class.SkData, %class.SkData* %45, i64 0, i32 0
  %61 = getelementptr inbounds %class.SkData, %class.SkData* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %78

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %60, i64 2
  %66 = bitcast %class.SkNVRefCnt* %65 to void (i8*, i8*)**
  %67 = load void (i8*, i8*)*, void (i8*, i8*)** %66, align 8
  %68 = icmp eq void (i8*, i8*)* %67, null
  br i1 %68, label %76, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %60, i64 6
  %71 = bitcast %class.SkNVRefCnt* %70 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %60, i64 4
  %74 = bitcast %class.SkNVRefCnt* %73 to i8**
  %75 = load i8*, i8** %74, align 8
  tail call void %67(i8* %72, i8* %75) #13
  br label %76

76:                                               ; preds = %69, %64
  %77 = inttoptr i64 %44 to i8*
  tail call void @_ZdlPv(i8* nonnull %77) #13
  br label %78

78:                                               ; preds = %54, %56, %59, %76
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #11

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #9

declare void @_Z10sk_fmunmapPKvm(i8*, i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6SkData9MakeEmptyEv: argument 0"}
!4 = distinct !{!4, !"_ZN6SkData9MakeEmptyEv"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_: argument 0"}
!7 = distinct !{!7, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_: argument 0"}
!10 = distinct !{!10, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN6SkData9MakeEmptyEv: argument 0"}
!13 = distinct !{!13, !"_ZN6SkData9MakeEmptyEv"}
!14 = distinct !{!14, !15, !"_ZN6SkData18PrivateNewWithCopyEPKvm: argument 0"}
!15 = distinct !{!15, !"_ZN6SkData18PrivateNewWithCopyEPKvm"}
!16 = !{!17, !12, !14}
!17 = distinct !{!17, !18, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_: argument 0"}
!18 = distinct !{!18, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_"}
!19 = !{!14}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_: argument 0"}
!22 = distinct !{!22, !"_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6SkData12MakeFromFILEEP8_IO_FILE: argument 0"}
!25 = distinct !{!25, !"_ZN6SkData12MakeFromFILEEP8_IO_FILE"}
!26 = !{!27, !24}
!27 = distinct !{!27, !28, !"_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_: argument 0"}
!28 = distinct !{!28, !"_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_: argument 0"}
!31 = distinct !{!31, !"_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6SkData9MakeEmptyEv: argument 0"}
!34 = distinct !{!34, !"_ZN6SkData9MakeEmptyEv"}
!35 = !{!36, !33}
!36 = distinct !{!36, !37, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_: argument 0"}
!37 = distinct !{!37, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_"}
!38 = !{!39, !41, !43}
!39 = distinct !{!39, !40, !"_ZN6SkData9MakeEmptyEv: argument 0"}
!40 = distinct !{!40, !"_ZN6SkData9MakeEmptyEv"}
!41 = distinct !{!41, !42, !"_ZN6SkData18PrivateNewWithCopyEPKvm: argument 0"}
!42 = distinct !{!42, !"_ZN6SkData18PrivateNewWithCopyEPKvm"}
!43 = distinct !{!43, !44, !"_ZN6SkData17MakeUninitializedEm: argument 0"}
!44 = distinct !{!44, !"_ZN6SkData17MakeUninitializedEm"}
!45 = !{!46, !39, !41, !43}
!46 = distinct !{!46, !47, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_: argument 0"}
!47 = distinct !{!47, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_"}
!48 = !{!41, !43}
