; ModuleID = '../../third_party/pdfium/fxbarcode/cbc_codebase.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/cbc_codebase.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CBC_CodeBase = type { i32 (...)**, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CBC_Writer* }
%class.CBC_Writer = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16, [2 x i8] }>

@_ZTV12CBC_CodeBase = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CBC_CodeBase*)* @_ZN12CBC_CodeBaseD2Ev to i8*), i8* bitcast (void (%class.CBC_CodeBase*)* @_ZN12CBC_CodeBaseD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN12CBC_CodeBaseD1Ev = hidden unnamed_addr alias void (%class.CBC_CodeBase*), void (%class.CBC_CodeBase*)* @_ZN12CBC_CodeBaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CBC_CodeBaseC2ENSt3__110unique_ptrI10CBC_WriterNS0_14default_deleteIS2_EEEE(%class.CBC_CodeBase* nocapture, %class.CBC_Writer*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.CBC_Writer* %1 to i64
  %4 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV12CBC_CodeBase, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CBC_CodeBaseD2Ev(%class.CBC_CodeBase* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV12CBC_CodeBase, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CBC_Writer*, %class.CBC_Writer** %3, align 8
  store %class.CBC_Writer* null, %class.CBC_Writer** %3, align 8
  %5 = icmp eq %class.CBC_Writer* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.CBC_Writer* %4 to void (%class.CBC_Writer*)***
  %8 = load void (%class.CBC_Writer*)**, void (%class.CBC_Writer*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.CBC_Writer*)*, void (%class.CBC_Writer*)** %8, i64 1
  %10 = load void (%class.CBC_Writer*)*, void (%class.CBC_Writer*)** %9, align 8
  tail call void %10(%class.CBC_Writer* nonnull %4) #3
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN12CBC_CodeBaseD0Ev(%class.CBC_CodeBase* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #4
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CBC_CodeBase15SetTextLocationE11BC_TEXT_LOC(%class.CBC_CodeBase* nocapture readonly, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CBC_Writer*, %class.CBC_Writer** %3, align 8
  %5 = bitcast %class.CBC_Writer* %4 to i1 (%class.CBC_Writer*, i8)***
  %6 = load i1 (%class.CBC_Writer*, i8)**, i1 (%class.CBC_Writer*, i8)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.CBC_Writer*, i8)*, i1 (%class.CBC_Writer*, i8)** %6, i64 7
  %8 = load i1 (%class.CBC_Writer*, i8)*, i1 (%class.CBC_Writer*, i8)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.CBC_Writer* %4, i8 zeroext %1) #3
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CBC_CodeBase18SetWideNarrowRatioEa(%class.CBC_CodeBase* nocapture readonly, i8 signext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CBC_Writer*, %class.CBC_Writer** %3, align 8
  %5 = bitcast %class.CBC_Writer* %4 to i1 (%class.CBC_Writer*, i8)***
  %6 = load i1 (%class.CBC_Writer*, i8)**, i1 (%class.CBC_Writer*, i8)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.CBC_Writer*, i8)*, i1 (%class.CBC_Writer*, i8)** %6, i64 8
  %8 = load i1 (%class.CBC_Writer*, i8)*, i1 (%class.CBC_Writer*, i8)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.CBC_Writer* %4, i8 signext %1) #3
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CBC_CodeBase12SetStartCharEc(%class.CBC_CodeBase* nocapture readonly, i8 signext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CBC_Writer*, %class.CBC_Writer** %3, align 8
  %5 = bitcast %class.CBC_Writer* %4 to i1 (%class.CBC_Writer*, i8)***
  %6 = load i1 (%class.CBC_Writer*, i8)**, i1 (%class.CBC_Writer*, i8)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.CBC_Writer*, i8)*, i1 (%class.CBC_Writer*, i8)** %6, i64 9
  %8 = load i1 (%class.CBC_Writer*, i8)*, i1 (%class.CBC_Writer*, i8)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.CBC_Writer* %4, i8 signext %1) #3
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CBC_CodeBase10SetEndCharEc(%class.CBC_CodeBase* nocapture readonly, i8 signext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CBC_Writer*, %class.CBC_Writer** %3, align 8
  %5 = bitcast %class.CBC_Writer* %4 to i1 (%class.CBC_Writer*, i8)***
  %6 = load i1 (%class.CBC_Writer*, i8)**, i1 (%class.CBC_Writer*, i8)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.CBC_Writer*, i8)*, i1 (%class.CBC_Writer*, i8)** %6, i64 10
  %8 = load i1 (%class.CBC_Writer*, i8)*, i1 (%class.CBC_Writer*, i8)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.CBC_Writer* %4, i8 signext %1) #3
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CBC_CodeBase23SetErrorCorrectionLevelEi(%class.CBC_CodeBase* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CBC_Writer*, %class.CBC_Writer** %3, align 8
  %5 = bitcast %class.CBC_Writer* %4 to i1 (%class.CBC_Writer*, i32)***
  %6 = load i1 (%class.CBC_Writer*, i32)**, i1 (%class.CBC_Writer*, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.CBC_Writer*, i32)*, i1 (%class.CBC_Writer*, i32)** %6, i64 11
  %8 = load i1 (%class.CBC_Writer*, i32)*, i1 (%class.CBC_Writer*, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.CBC_Writer* %4, i32 %1) #3
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CBC_CodeBase15SetCharEncodingEi(%class.CBC_CodeBase* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CBC_Writer*, %class.CBC_Writer** %3, align 8
  %5 = bitcast %class.CBC_Writer* %4 to i1 (%class.CBC_Writer*, i32)***
  %6 = load i1 (%class.CBC_Writer*, i32)**, i1 (%class.CBC_Writer*, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.CBC_Writer*, i32)*, i1 (%class.CBC_Writer*, i32)** %6, i64 2
  %8 = load i1 (%class.CBC_Writer*, i32)*, i1 (%class.CBC_Writer*, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.CBC_Writer* %4, i32 %1) #3
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CBC_CodeBase15SetModuleHeightEi(%class.CBC_CodeBase* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CBC_Writer*, %class.CBC_Writer** %3, align 8
  %5 = bitcast %class.CBC_Writer* %4 to i1 (%class.CBC_Writer*, i32)***
  %6 = load i1 (%class.CBC_Writer*, i32)**, i1 (%class.CBC_Writer*, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.CBC_Writer*, i32)*, i1 (%class.CBC_Writer*, i32)** %6, i64 3
  %8 = load i1 (%class.CBC_Writer*, i32)*, i1 (%class.CBC_Writer*, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.CBC_Writer* %4, i32 %1) #3
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CBC_CodeBase14SetModuleWidthEi(%class.CBC_CodeBase* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CBC_Writer*, %class.CBC_Writer** %3, align 8
  %5 = bitcast %class.CBC_Writer* %4 to i1 (%class.CBC_Writer*, i32)***
  %6 = load i1 (%class.CBC_Writer*, i32)**, i1 (%class.CBC_Writer*, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.CBC_Writer*, i32)*, i1 (%class.CBC_Writer*, i32)** %6, i64 4
  %8 = load i1 (%class.CBC_Writer*, i32)*, i1 (%class.CBC_Writer*, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.CBC_Writer* %4, i32 %1) #3
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CBC_CodeBase9SetHeightEi(%class.CBC_CodeBase* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CBC_Writer*, %class.CBC_Writer** %3, align 8
  %5 = bitcast %class.CBC_Writer* %4 to i1 (%class.CBC_Writer*, i32)***
  %6 = load i1 (%class.CBC_Writer*, i32)**, i1 (%class.CBC_Writer*, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.CBC_Writer*, i32)*, i1 (%class.CBC_Writer*, i32)** %6, i64 5
  %8 = load i1 (%class.CBC_Writer*, i32)*, i1 (%class.CBC_Writer*, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.CBC_Writer* %4, i32 %1) #3
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CBC_CodeBase8SetWidthEi(%class.CBC_CodeBase* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_CodeBase, %class.CBC_CodeBase* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CBC_Writer*, %class.CBC_Writer** %3, align 8
  %5 = bitcast %class.CBC_Writer* %4 to i1 (%class.CBC_Writer*, i32)***
  %6 = load i1 (%class.CBC_Writer*, i32)**, i1 (%class.CBC_Writer*, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.CBC_Writer*, i32)*, i1 (%class.CBC_Writer*, i32)** %6, i64 6
  %8 = load i1 (%class.CBC_Writer*, i32)*, i1 (%class.CBC_Writer*, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.CBC_Writer* %4, i32 %1) #3
  ret i1 %9
}

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind }
attributes #4 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
