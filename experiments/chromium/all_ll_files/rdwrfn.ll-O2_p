; ModuleID = '../../third_party/unrar/src/rdwrfn.cpp'
source_filename = "../../third_party/unrar/src/rdwrfn.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.ComprDataIO = type <{ i8, [7 x i8], i64, i8*, i8, [7 x i8], i64, i8*, i64, i8*, i64, i8, i8, i8, i8, [4 x i8], %class.File*, %class.File*, %class.CmdAdd*, %struct.FileHeader*, i64*, %class.CryptData*, %class.CryptData*, i32, i32, i8, i8, i8, [5 x i8], i64, i64, i64, i64, i64, i64, i64, %class.DataHash, %class.DataHash, %class.DataHash, i8, i8, [6 x i8] }>
%class.File = type { i32 (...)**, i64, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, [2048 x i32], i32, i64 }
%class.CmdAdd = type opaque
%struct.FileHeader = type { %struct.BlockHeader, i8, i32, i8, %union.anon, [2048 x i32], %class.Array, %class.RarTime, %class.RarTime, %class.RarTime, i64, i64, i64, %struct.HashValue, i32, i8, i8, i8, i8, i32, i8, [16 x i8], [16 x i8], i8, [8 x i8], i8, [32 x i8], i32, i8, i8, i8, i8, i64, i8, i8, i8, i32, i32, [2048 x i32], i8, i8, i8, i8, [256 x i8], [256 x i8], i32, i32 }
%struct.BlockHeader = type { %struct.BaseBlock, i32 }
%struct.BaseBlock = type { i32, i32, i32, i32, i8 }
%union.anon = type { i32 }
%class.Array = type <{ i8*, i64, i64, i64, i8, [7 x i8] }>
%class.RarTime = type { i64 }
%struct.HashValue = type { i32, %union.anon.0 }
%union.anon.0 = type { i32, [28 x i8] }
%class.CryptData = type { [4 x %"struct.CryptData::KDF3CacheItem"], i32, [4 x %"struct.CryptData::KDF5CacheItem"], i32, i32, %class.Rijndael, [256 x i32], [256 x i8], [4 x i32], [3 x i8], [4 x i16] }
%"struct.CryptData::KDF3CacheItem" = type { %class.SecPassword, [8 x i8], [16 x i8], [16 x i8], i8, [3 x i8] }
%class.SecPassword = type <{ [128 x i32], i8, i8, [2 x i8] }>
%"struct.CryptData::KDF5CacheItem" = type { %class.SecPassword, [16 x i8], [32 x i8], i32, [32 x i8], [32 x i8] }
%class.Rijndael = type { i8, i32, [16 x i8], [15 x [4 x [4 x i8]]] }
%class.DataHash = type <{ i32, i32, %struct.blake2sp_state*, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2sp_state = type <{ [8 x %struct.blake2s_state], %struct.blake2s_state, [512 x i8], i64, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2s_state = type <{ [240 x i8], i8*, i32*, i32*, i32*, i64, i8, [7 x i8] }>
%class.ThreadPool = type { i32, [64 x i64], i32, i32, [64 x %"struct.ThreadPool::QueueEntry"], i32, i32, i8, i32, %union.pthread_cond_t, %union.pthread_mutex_t, i8, %union.pthread_cond_t, %union.pthread_mutex_t, %union.pthread_mutex_t }
%"struct.ThreadPool::QueueEntry" = type { void (i8*)*, i8* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1, %union.anon.2, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1 = type { i64 }
%union.anon.2 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.Archive = type <{ %class.File, %class.CryptData, %class.ComprDataIO, i8, [7 x i8], %class.RAROptions*, %class.RarTime, i32, i32, i8, [7 x i8], %class.QuickOpen, i8, [7 x i8], i64, %struct.BaseBlock, %struct.MarkHeader, %struct.MainHeader, %struct.CryptHeader, [4 x i8], %struct.FileHeader, %struct.EndArcHeader, %struct.SubBlockHeader, [4 x i8], %struct.FileHeader, %struct.CommentHeader, %struct.ProtectHeader, %struct.UnixOwnersHeader, %struct.EAHeader, %struct.StreamHeader, [4 x i8], i64, i64, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i64, i8, i8, [16 x i8], i8, i8, i32, i64, i64, i64, i8, [3 x i8], [2048 x i32], [4 x i8] }>
%class.RAROptions = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array.4, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32, [4 x i8] }>
%class.Array.4 = type <{ i64*, i64, i64, i64, i8, [7 x i8] }>
%struct.FilterMode = type { i32, i32, i32 }
%class.QuickOpen = type <{ %class.Archive*, i8, [7 x i8], %struct.QuickOpenItem*, %struct.QuickOpenItem*, i8*, i64, %class.CryptData, i8, [7 x i8], i64, i64, i64, i64, i64, i64, %class.Array, i64, i64, i8, [7 x i8] }>
%struct.QuickOpenItem = type { i8*, i64, i64, %struct.QuickOpenItem* }
%struct.MarkHeader = type { [8 x i8], i32 }
%struct.MainHeader = type { %struct.BaseBlock, i16, i32, i8, i8, i8, i64, i64, i64, i64 }
%struct.CryptHeader = type { %struct.BaseBlock, i8, i32, [16 x i8], [8 x i8] }
%struct.EndArcHeader = type { %struct.BaseBlock, i32, i32, i8, i8, i8, i8 }
%struct.SubBlockHeader = type <{ %struct.BlockHeader, i16, i8, i8 }>
%struct.CommentHeader = type <{ %struct.BaseBlock, i16, i8, i8, i16, [2 x i8] }>
%struct.ProtectHeader = type { %struct.BlockHeader, i8, i16, i32, [8 x i8] }
%struct.UnixOwnersHeader = type { %struct.SubBlockHeader.base, i16, i16, [256 x i8], [256 x i8] }
%struct.SubBlockHeader.base = type <{ %struct.BlockHeader, i16, i8 }>
%struct.EAHeader = type { %struct.SubBlockHeader.base, i32, i8, i8, i32 }
%struct.StreamHeader = type <{ %struct.SubBlockHeader.base, i8, i32, i8, i8, [2 x i8], i32, i16, [260 x i8], [2 x i8] }>

@_ZN11ComprDataIOC1Ev = hidden unnamed_addr alias void (%class.ComprDataIO*), void (%class.ComprDataIO*)* @_ZN11ComprDataIOC2Ev
@_ZN11ComprDataIOD1Ev = hidden unnamed_addr alias void (%class.ComprDataIO*), void (%class.ComprDataIO*)* @_ZN11ComprDataIOD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11ComprDataIOC2Ev(%class.ComprDataIO*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 36
  tail call void @_ZN8DataHashC1Ev(%class.DataHash* %2) #9
  %3 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 37
  tail call void @_ZN8DataHashC1Ev(%class.DataHash* %3) #9
  %4 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 38
  tail call void @_ZN8DataHashC1Ev(%class.DataHash* %4) #9
  %5 = tail call i8* @_Znwm(i64 6352) #10
  %6 = bitcast i8* %5 to %class.CryptData*
  tail call void @_ZN9CryptDataC1Ev(%class.CryptData* nonnull %6) #9
  %7 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 21
  %8 = bitcast %class.CryptData** %7 to i8**
  store i8* %5, i8** %8, align 8
  %9 = tail call i8* @_Znwm(i64 6352) #10
  %10 = bitcast i8* %9 to %class.CryptData*
  tail call void @_ZN9CryptDataC1Ev(%class.CryptData* nonnull %10) #9
  %11 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 22
  %12 = bitcast %class.CryptData** %11 to i8**
  store i8* %9, i8** %12, align 8
  %13 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 0
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 4
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 10
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 11
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 12
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 13
  store i8 0, i8* %18, align 2
  %19 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 14
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 25
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 26
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 27
  store i8 0, i8* %22, align 2
  %23 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 16
  %24 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 8
  %25 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 39
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 40
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 30
  %28 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 23
  %29 = bitcast i64* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #9
  %30 = bitcast %class.File** %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #9
  %31 = bitcast i64* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false) #9
  store i32 -1, i32* %28, align 8
  %32 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 19
  %33 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 24
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 34
  %35 = bitcast %struct.FileHeader** %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #9
  %36 = bitcast i64* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #9
  ret void
}

declare void @_ZN8DataHashC1Ev(%class.DataHash*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN9CryptDataC1Ev(%class.CryptData*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11ComprDataIO4InitEv(%class.ComprDataIO*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 4
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 10
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 11
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 12
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 13
  store i8 0, i8* %7, align 2
  %8 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 14
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 25
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 26
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 27
  store i8 0, i8* %11, align 2
  %12 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 16
  %13 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 8
  %14 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 39
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 40
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 30
  %17 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 23
  %18 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  %19 = bitcast %class.File** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false)
  %20 = bitcast i64* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false)
  store i32 -1, i32* %17, align 8
  %21 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 19
  %22 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 24
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 34
  %24 = bitcast %struct.FileHeader** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false)
  %25 = bitcast i64* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11ComprDataIOD2Ev(%class.ComprDataIO*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 21
  %3 = load %class.CryptData*, %class.CryptData** %2, align 8
  %4 = icmp eq %class.CryptData* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN9CryptDataD1Ev(%class.CryptData* nonnull %3) #9
  %6 = bitcast %class.CryptData* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 22
  %9 = load %class.CryptData*, %class.CryptData** %8, align 8
  %10 = icmp eq %class.CryptData* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN9CryptDataD1Ev(%class.CryptData* nonnull %9) #9
  %12 = bitcast %class.CryptData* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #10
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 38
  tail call void @_ZN8DataHashD1Ev(%class.DataHash* %14) #9
  %15 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 37
  tail call void @_ZN8DataHashD1Ev(%class.DataHash* %15) #9
  %16 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 36
  tail call void @_ZN8DataHashD1Ev(%class.DataHash* %16) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9CryptDataD1Ev(%class.CryptData*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8DataHashD1Ev(%class.DataHash*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11ComprDataIO7UnpReadEPhm(%class.ComprDataIO*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 40
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = and i64 %2, -16
  %8 = select i1 %6, i64 %2, i64 %7
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %97, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 16
  %12 = bitcast %class.File** %11 to %class.Archive**
  %13 = load %class.Archive*, %class.Archive** %12, align 8
  %14 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = getelementptr inbounds %class.Archive, %class.Archive* %13, i64 0, i32 0
  br i1 %16, label %25, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 3
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %20, i64 %22, i1 false)
  %23 = load i64, i64* %21, align 8
  %24 = trunc i64 %23 to i32
  store i64 0, i64* %21, align 8
  br label %73

25:                                               ; preds = %10
  %26 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 10
  %27 = load i64, i64* %26, align 8
  %28 = icmp sgt i64 %8, %27
  %29 = select i1 %28, i64 %27, i64 %8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %73, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 26
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = or i1 %6, %34
  %36 = xor i1 %28, true
  %37 = or i1 %35, %36
  %38 = select i1 %35, i64 %29, i64 %8
  br i1 %37, label %44, label %39

39:                                               ; preds = %31
  %40 = and i64 %29, -16
  %41 = trunc i64 %40 to i32
  %42 = icmp sgt i32 %41, 0
  %43 = select i1 %42, i64 %40, i64 %29
  br label %44

44:                                               ; preds = %31, %39
  %45 = phi i64 [ %43, %39 ], [ %38, %31 ]
  %46 = bitcast %class.Archive* %13 to i1 (%class.File*)***
  %47 = load i1 (%class.File*)**, i1 (%class.File*)*** %46, align 8
  %48 = getelementptr inbounds i1 (%class.File*)*, i1 (%class.File*)** %47, i64 7
  %49 = load i1 (%class.File*)*, i1 (%class.File*)** %48, align 8
  %50 = tail call zeroext i1 %49(%class.File* %17) #9
  br i1 %50, label %51, label %153

51:                                               ; preds = %44
  %52 = load %class.File*, %class.File** %11, align 8
  %53 = bitcast %class.File* %52 to i32 (%class.File*, i8*, i64)***
  %54 = load i32 (%class.File*, i8*, i64)**, i32 (%class.File*, i8*, i64)*** %53, align 8
  %55 = getelementptr inbounds i32 (%class.File*, i8*, i64)*, i32 (%class.File*, i8*, i64)** %54, i64 4
  %56 = load i32 (%class.File*, i8*, i64)*, i32 (%class.File*, i8*, i64)** %55, align 8
  %57 = tail call i32 %56(%class.File* %52, i8* %1, i64 %45) #9
  %58 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 19
  %59 = load %struct.FileHeader*, %struct.FileHeader** %58, align 8
  %60 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 14
  %61 = load i8, i8* %60, align 1, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %73

63:                                               ; preds = %51
  %64 = icmp eq %struct.FileHeader* %59, null
  %65 = getelementptr inbounds %class.Archive, %class.Archive* %13, i64 0, i32 20
  %66 = select i1 %64, %struct.FileHeader* %65, %struct.FileHeader* %59
  %67 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %66, i64 0, i32 16
  %68 = load i8, i8* %67, align 1, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 36
  %72 = sext i32 %57 to i64
  tail call void @_ZN8DataHash6UpdateEPKvm(%class.DataHash* %71, i8* %1, i64 %72) #9
  br label %73

73:                                               ; preds = %25, %63, %51, %70, %18
  %74 = phi i32 [ %24, %18 ], [ %57, %70 ], [ %57, %51 ], [ %57, %63 ], [ 0, %25 ]
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 32
  %77 = load i64, i64* %76, align 8
  %78 = add nsw i64 %77, %75
  store i64 %78, i64* %76, align 8
  %79 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 10
  %80 = load i64, i64* %79, align 8
  %81 = sub nsw i64 %80, %75
  store i64 %81, i64* %79, align 8
  %82 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 26
  %83 = load i8, i8* %82, align 1, !range !2
  %84 = icmp ne i8 %83, 0
  %85 = icmp eq i64 %81, 0
  %86 = and i1 %85, %84
  br i1 %86, label %87, label %97

87:                                               ; preds = %73
  %88 = icmp eq i32 %74, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %87
  %90 = load i8, i8* %4, align 1, !range !2
  %91 = icmp eq i8 %90, 0
  %92 = and i32 %74, 15
  %93 = icmp eq i32 %92, 0
  %94 = or i1 %93, %91
  br i1 %94, label %97, label %95

95:                                               ; preds = %89, %87
  %96 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 27
  store i8 1, i8* %96, align 2
  br label %153

97:                                               ; preds = %3, %89, %73
  %98 = phi i32 [ %74, %73 ], [ %74, %89 ], [ 0, %3 ]
  %99 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 16
  %100 = bitcast %class.File** %99 to %class.Archive**
  %101 = load %class.Archive*, %class.Archive** %100, align 8
  %102 = icmp eq %class.Archive* %101, null
  %103 = getelementptr inbounds %class.Archive, %class.Archive* %101, i64 0, i32 0
  br i1 %102, label %143, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds %class.Archive, %class.Archive* %101, i64 0, i32 31
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 32
  %108 = load i64, i64* %107, align 8
  %109 = add nsw i64 %108, %106
  %110 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 11
  %111 = load i8, i8* %110, align 8, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %143, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 29
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 35
  %117 = load i64, i64* %116, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 34
  %121 = load i64, i64* %120, align 8
  %122 = add nsw i64 %121, %109
  br label %123

123:                                              ; preds = %119, %113
  %124 = phi i64 [ %117, %119 ], [ %115, %113 ]
  %125 = phi i64 [ %122, %119 ], [ %109, %113 ]
  %126 = getelementptr inbounds %class.File, %class.File* %103, i64 1, i32 12, i64 1658
  %127 = bitcast i32* %126 to %class.RAROptions**
  %128 = load %class.RAROptions*, %class.RAROptions** %127, align 8
  %129 = tail call i32 @_Z9ToPercentll(i64 %125, i64 %124) #9
  %130 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %128, i64 0, i32 31
  %131 = load i8, i8* %130, align 4, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %143

133:                                              ; preds = %123
  %134 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 23
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %129, %135
  br i1 %136, label %143, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 33
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %class.File, %class.File* %103, i64 3, i32 12, i64 1290
  %141 = bitcast i32* %140 to i64*
  %142 = load i64, i64* %141, align 8
  tail call void @_Z17uiExtractProgressllll(i64 %139, i64 %142, i64 %125, i64 %124) #9
  store i32 %129, i32* %134, align 8
  br label %143

143:                                              ; preds = %137, %133, %123, %104, %97
  %144 = icmp eq i32 %98, -1
  br i1 %144, label %152, label %145

145:                                              ; preds = %143
  %146 = load i8, i8* %4, align 1, !range !2
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %152, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 22
  %150 = load %class.CryptData*, %class.CryptData** %149, align 8
  %151 = sext i32 %98 to i64
  tail call void @_ZN9CryptData12DecryptBlockEPhm(%class.CryptData* %150, i8* %1, i64 %151) #9
  br label %152

152:                                              ; preds = %145, %143, %148
  tail call void @_Z4Waitv() #9
  br label %153

153:                                              ; preds = %95, %44, %152
  %154 = phi i32 [ %98, %152 ], [ -1, %44 ], [ -1, %95 ]
  ret i32 %154
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

declare void @_ZN8DataHash6UpdateEPKvm(%class.DataHash*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11ComprDataIO11ShowUnpReadEll(%class.ComprDataIO* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 11
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %39, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 16
  %9 = load %class.File*, %class.File** %8, align 8
  %10 = icmp eq %class.File* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 35
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 34
  %17 = load i64, i64* %16, align 8
  %18 = add nsw i64 %17, %1
  br label %19

19:                                               ; preds = %11, %15
  %20 = phi i64 [ %13, %15 ], [ %2, %11 ]
  %21 = phi i64 [ %18, %15 ], [ %1, %11 ]
  %22 = getelementptr inbounds %class.File, %class.File* %9, i64 1, i32 12, i64 1658
  %23 = bitcast i32* %22 to %class.RAROptions**
  %24 = load %class.RAROptions*, %class.RAROptions** %23, align 8
  %25 = tail call i32 @_Z9ToPercentll(i64 %21, i64 %20) #9
  %26 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %24, i64 0, i32 31
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %39

29:                                               ; preds = %19
  %30 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 23
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %25, %31
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 33
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %class.File, %class.File* %9, i64 3, i32 12, i64 1290
  %37 = bitcast i32* %36 to i64*
  %38 = load i64, i64* %37, align 8
  tail call void @_Z17uiExtractProgressllll(i64 %35, i64 %38, i64 %21, i64 %20) #9
  store i32 %25, i32* %30, align 8
  br label %39

39:                                               ; preds = %33, %19, %29, %7, %3
  ret void
}

declare void @_ZN9CryptData12DecryptBlockEPhm(%class.CryptData*, i8*, i64) local_unnamed_addr #1

declare void @_Z4Waitv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11ComprDataIO8UnpWriteEPhm(%class.ComprDataIO*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 9
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 8
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 6
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %2
  br i1 %12, label %28, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 7
  %15 = load i8*, i8** %14, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %1, i64 %2, i1 false)
  %16 = load i8*, i8** %14, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %2
  store i8* %17, i8** %14, align 8
  %18 = load i64, i64* %10, align 8
  %19 = sub i64 %18, %2
  store i64 %19, i64* %10, align 8
  br label %28

20:                                               ; preds = %3
  %21 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 12
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 17
  %26 = load %class.File*, %class.File** %25, align 8
  %27 = tail call zeroext i1 @_ZN4File5WriteEPKvm(%class.File* %26, i8* %1, i64 %2) #9
  br label %28

28:                                               ; preds = %9, %20, %24, %13
  %29 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 33
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %2
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 13
  %33 = load i8, i8* %32, align 2, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 38
  tail call void @_ZN8DataHash6UpdateEPKvm(%class.DataHash* %36, i8* %1, i64 %2) #9
  br label %37

37:                                               ; preds = %28, %35
  tail call void @_Z4Waitv() #9
  ret void
}

declare zeroext i1 @_ZN4File5WriteEPKvm(%class.File*, i8*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11ComprDataIO12ShowUnpWriteEv(%class.ComprDataIO* nocapture) local_unnamed_addr #7 align 2 {
  ret void
}

declare i32 @_Z9ToPercentll(i64, i64) local_unnamed_addr #1

declare void @_Z17uiExtractProgressllll(i64, i64, i64, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11ComprDataIO8SetFilesEP4FileS1_(%class.ComprDataIO* nocapture, %class.File*, %class.File*) local_unnamed_addr #3 align 2 {
  %4 = icmp eq %class.File* %1, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 16
  store %class.File* %1, %class.File** %6, align 8
  br label %7

7:                                                ; preds = %3, %5
  %8 = icmp eq %class.File* %2, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 17
  store %class.File* %2, %class.File** %10, align 8
  br label %11

11:                                               ; preds = %7, %9
  %12 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 23
  store i32 -1, i32* %12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11ComprDataIO15GetUnpackedDataEPPhPm(%class.ComprDataIO* nocapture readonly, i8** nocapture, i64* nocapture) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 9
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8** %1 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11ComprDataIO13SetEncryptionEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_(%class.ComprDataIO* nocapture, i1 zeroext, i32, %class.SecPassword*, i8*, i8*, i32, i8*, i8*) local_unnamed_addr #0 align 2 {
  br i1 %1, label %10, label %16

10:                                               ; preds = %9
  %11 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 21
  %12 = load %class.CryptData*, %class.CryptData** %11, align 8
  %13 = tail call zeroext i1 @_ZN9CryptData12SetCryptKeysEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_(%class.CryptData* %12, i1 zeroext true, i32 %2, %class.SecPassword* %3, i8* %4, i8* %5, i32 %6, i8* %7, i8* %8) #9
  %14 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 39
  %15 = zext i1 %13 to i8
  store i8 %15, i8* %14, align 8
  br label %22

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 22
  %18 = load %class.CryptData*, %class.CryptData** %17, align 8
  %19 = tail call zeroext i1 @_ZN9CryptData12SetCryptKeysEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_(%class.CryptData* %18, i1 zeroext false, i32 %2, %class.SecPassword* %3, i8* %4, i8* %5, i32 %6, i8* %7, i8* %8) #9
  %20 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 40
  %21 = zext i1 %19 to i8
  store i8 %21, i8* %20, align 1
  br label %22

22:                                               ; preds = %16, %10
  ret void
}

declare zeroext i1 @_ZN9CryptData12SetCryptKeysEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_(%class.CryptData*, i1 zeroext, i32, %class.SecPassword*, i8*, i8*, i32, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11ComprDataIO17SetAV15EncryptionEv(%class.ComprDataIO* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 40
  store i8 1, i8* %2, align 1
  %3 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 22
  %4 = load %class.CryptData*, %class.CryptData** %3, align 8
  tail call void @_ZN9CryptData17SetAV15EncryptionEv(%class.CryptData* %4) #9
  ret void
}

declare void @_ZN9CryptData17SetAV15EncryptionEv(%class.CryptData*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11ComprDataIO18SetCmt13EncryptionEv(%class.ComprDataIO* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 40
  store i8 1, i8* %2, align 1
  %3 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 22
  %4 = load %class.CryptData*, %class.CryptData** %3, align 8
  tail call void @_ZN9CryptData18SetCmt13EncryptionEv(%class.CryptData* %4) #9
  ret void
}

declare void @_ZN9CryptData18SetCmt13EncryptionEv(%class.CryptData*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11ComprDataIO17SetUnpackToMemoryEPhj(%class.ComprDataIO* nocapture, i8*, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 4
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 7
  store i8* %1, i8** %5, align 8
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %0, i64 0, i32 6
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
