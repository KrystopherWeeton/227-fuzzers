; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/ShaderVk.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/ShaderVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rx::ShaderVk" = type { %"class.rx::ShaderImpl" }
%"class.rx::ShaderImpl" = type { i32 (...)**, %"class.gl::ShaderState"* }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.rx::WaitableCompileEvent" = type { %"class.angle::WaitableEvent", %"class.std::__1::shared_ptr.645", %"class.std::__1::basic_string" }
%"class.angle::WaitableEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.608" }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.angle::WaitableEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.rx::Serial" = type { i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.1270" }
%"struct.std::__1::pair.1270" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.1272" }
%"struct.std::__1::pair.1272" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.1274" }
%"struct.std::__1::pair.1274" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.1276" }
%"struct.std::__1::pair.1276" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.1278" }
%"struct.std::__1::pair.1278" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.1280" }
%"struct.std::__1::pair.1280" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.622, %"class.std::__1::vector.337", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.623", %"class.angle::BitSetT.147", %struct.Optional.624 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.615", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.622 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.623" = type { i64 }
%struct.Optional.624 = type { i8, %"class.angle::BitSetT.623" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.201" = type { i64 }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.angle::BitSetT.166" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"class.angle::BitSetT.147" = type { i8 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.168" = type { i64 }
%"class.angle::BitSetT.536" = type { i64 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.rx::ContextVk" = type { %"class.rx::ContextImpl", %"class.rx::vk::Context", %"class.rx::MultisampleTextureInitializer", %"struct.std::__1::array.646", %"struct.std::__1::array.647", %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::PipelineHelper"*, %"class.rx::vk::ObjectAndSerial"*, i8, %"class.rx::WindowSurfaceVk"*, i32, i32, %"class.std::__1::unique_ptr.671", %"class.angle::BitSetT.664", %"class.angle::PackedEnumMap.677", %"class.angle::PackedEnumMap.693", %"class.angle::PackedEnumMap.710", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.rx::VertexArrayVk"*, %"class.rx::FramebufferVk"*, %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramExecutableVk"*, i8*, i64, i64, %"class.angle::PackedEnumMap.720", i32, i32, %union.VkClearValue, %union.VkClearValue, i64, %"class.rx::IncompleteTextureSet", i8, i8, i8, i8, i8, %"class.angle::PackedEnumMap.724", %"struct.std::__1::array.758", %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc", %"struct.std::__1::array.763", %"class.angle::BitSetT.166", %"struct.std::__1::array.764", %"class.rx::vk::CommandPool", %"class.std::__1::vector.766", %"class.rx::RenderPassCache", %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"*, %"class.angle::FastUnorderedSet", %"class.rx::vk::ShaderLibrary", %"class.rx::UtilsVk", i8, [7 x i8], %"class.rx::vk::DynamicQueryPool", %"class.std::__1::vector.913", %"class.std::__1::vector.921", i8, i8, i8, %"class.std::__1::vector.928", %"class.std::__1::vector", %"struct.rx::ContextVk::GpuClockSyncInfo", i64, %"struct.rx::vk::PerfCounters", %"struct.rx::ContextVkPerfCounters", %"struct.rx::ContextVkPerfCounters", %"class.angle::BitSetT.168", %"class.rx::vk::ResourceUseList", i8, %"class.std::__1::vector.943", %"class.std::__1::vector.950", %"class.std::__1::vector.957", %"class.rx::ShareGroupVk"*, %"class.rx::vk::BufferHelper", %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.125", %"class.std::__1::vector.125" }
%"class.rx::vk::Context" = type { i32 (...)**, %"class.rx::RendererVk"* }
%"class.rx::RendererVk" = type { %"class.egl::Display"*, i8, [7 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"struct.angle::FeaturesVk", %struct.VkInstance_T*, i8, i8, i8, i32, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceProvokingVertexFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, %struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT, %struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT, %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, %struct.VkDeviceDeviceMemoryReportCreateInfoEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT, %struct.VkExternalFenceProperties, %struct.VkExternalSemaphoreProperties, %struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures, %"class.std::__1::vector.1048", %"class.angle::PackedEnumMap.1055", i32, i32, i64, i64, i32, %struct.VkDevice_T*, %"class.rx::SerialFactoryBase.1057", i8, %"class.std::__1::mutex", %"class.std::__1::vector.1059", %"class.rx::vk::MemoryProperties", %"class.rx::vk::FormatTable", %"class.std::__1::mutex", %"class.rx::vk::PipelineCache", i32, i8, i8, %"class.angle::PackedEnumMap.1068", %"class.std::__1::basic_string", i32, %"class.rx::DebugAnnotatorVk", i32, %"class.rx::vk::CommandPool", %"class.std::__1::deque.1070", %"class.std::__1::mutex", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::vector.1117", %"class.rx::vk::CommandProcessor", %"class.rx::vk::Allocator", %"class.rx::SamplerCache", %"class.rx::SamplerYcbcrConversionCache", %"class.rx::vk::ActiveHandleCounter", %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::MemoryReport", %"class.angle::PackedEnumMap.1266", i32, %"class.std::__1::shared_ptr.1268" }
%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.1047", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.1036" }
%"class.std::__1::map.1036" = type { %"class.std::__1::__tree.1037" }
%"class.std::__1::__tree.1037" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1038", %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::array.1047" = type { [4 x %"struct.angle::Feature"] }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%struct.VkInstance_T = type opaque
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProvokingVertexFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = type { i32, i8*, i32 }
%struct.VkDeviceDeviceMemoryReportCreateInfoEXT = type { i32, i8*, i32, void (%struct.VkDeviceMemoryReportCallbackDataEXT*, i8*)*, i8* }
%struct.VkDeviceMemoryReportCallbackDataEXT = type { i32, i8*, i32, i32, i64, i64, i32, i64, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.1048" = type { %"class.std::__1::__vector_base.1049" }
%"class.std::__1::__vector_base.1049" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.1050" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %struct.VkQueueFamilyProperties* }
%"class.angle::PackedEnumMap.1055" = type { %"struct.std::__1::array.1056" }
%"struct.std::__1::array.1056" = type { [3 x i8] }
%struct.VkDevice_T = type opaque
%"class.rx::SerialFactoryBase.1057" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1058" }
%"struct.std::__1::__atomic_base.1058" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.1059" = type { %"class.std::__1::__vector_base.1060" }
%"class.std::__1::__vector_base.1060" = type { %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*, %"class.std::__1::__compressed_pair.1061" }
%"class.rx::vk::SharedGarbage" = type { %"class.rx::vk::SharedResourceUse", %"class.std::__1::vector.766" }
%"class.rx::vk::SharedResourceUse" = type { %"struct.rx::vk::ResourceUse"* }
%"struct.rx::vk::ResourceUse" = type { i32, %"class.rx::Serial" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.rx::vk::SharedGarbage"* }
%"class.rx::vk::MemoryProperties" = type { %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.rx::vk::FormatTable" = type { [8 x i8], %"struct.std::__1::array.1066" }
%"struct.std::__1::array.1066" = type { [227 x %"struct.rx::vk::Format"] }
%"struct.rx::vk::Format" = type <{ i32, i32, i32, i32, i32, [4 x i8], void (i64, i64, i64, i8*, i64, i64)*, { void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, i8 } (i32)*, void (i8*, i64, i64, i8*)*, void (i8*, i64, i64, i8*)*, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.rx::vk::PipelineCache" = type { %"class.rx::vk::WrappedObject.1067" }
%"class.rx::vk::WrappedObject.1067" = type { %struct.VkPipelineCache_T* }
%struct.VkPipelineCache_T = type opaque
%"class.angle::PackedEnumMap.1068" = type { %"struct.std::__1::array.1069" }
%"struct.std::__1::array.1069" = type { [227 x %struct.VkFormatProperties] }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.rx::DebugAnnotatorVk" = type { %"class.angle::LoggingAnnotator" }
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.std::__1::deque.1070" = type { %"class.std::__1::__deque_base.1071" }
%"class.std::__1::__deque_base.1071" = type { %"struct.std::__1::__split_buffer.1072", i64, %"class.std::__1::__compressed_pair.1079" }
%"struct.std::__1::__split_buffer.1072" = type { %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"class.std::__1::__compressed_pair.1074" }
%"struct.rx::RendererVk::PendingOneOffCommands" = type { %"class.rx::Serial", %"class.rx::vk::priv::CommandBuffer" }
%"class.rx::vk::priv::CommandBuffer" = type { %"class.rx::vk::WrappedObject.1073" }
%"class.rx::vk::WrappedObject.1073" = type { %struct.VkCommandBuffer_T* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %"struct.rx::RendererVk::PendingOneOffCommands"** }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::vk::CommandQueue" = type { %"class.rx::vk::CommandQueueInterface", %"class.std::__1::vector.1083", %"class.std::__1::vector.1091", %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::PersistentCommandPool", %"class.rx::SerialFactoryBase.1057", %"class.rx::Serial", %"class.rx::Serial", %"class.rx::Serial", %"class.angle::PackedEnumMap.1107", %"class.rx::vk::FenceRecycler" }
%"class.rx::vk::CommandQueueInterface" = type { i32 (...)** }
%"class.std::__1::vector.1083" = type { %"class.std::__1::__vector_base.1084" }
%"class.std::__1::__vector_base.1084" = type { %"class.rx::vk::ObjectAndSerial.1085"*, %"class.rx::vk::ObjectAndSerial.1085"*, %"class.std::__1::__compressed_pair.1086" }
%"class.rx::vk::ObjectAndSerial.1085" = type opaque
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"class.rx::vk::ObjectAndSerial.1085"* }
%"class.std::__1::vector.1091" = type { %"class.std::__1::__vector_base.1092" }
%"class.std::__1::__vector_base.1092" = type { %"struct.rx::vk::CommandBatch"*, %"struct.rx::vk::CommandBatch"*, %"class.std::__1::__compressed_pair.1095" }
%"struct.rx::vk::CommandBatch" = type { [8 x i8], %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::CommandPool", %"class.rx::vk::Shared.1093", %"class.rx::Serial" }
%"class.rx::vk::Shared.1093" = type { %"class.rx::vk::RefCounted.1094"* }
%"class.rx::vk::RefCounted.1094" = type { i32, %"class.rx::vk::Fence" }
%"class.rx::vk::Fence" = type { %"class.rx::vk::WrappedObject.1111" }
%"class.rx::vk::WrappedObject.1111" = type { %struct.VkFence_T* }
%struct.VkFence_T = type opaque
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1096" }
%"struct.std::__1::__compressed_pair_elem.1096" = type { %"struct.rx::vk::CommandBatch"* }
%"class.rx::vk::PersistentCommandPool" = type { %"class.std::__1::vector.1100", %"class.rx::vk::CommandPool" }
%"class.std::__1::vector.1100" = type { %"class.std::__1::__vector_base.1101" }
%"class.std::__1::__vector_base.1101" = type { %"class.rx::vk::priv::CommandBuffer"*, %"class.rx::vk::priv::CommandBuffer"*, %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.rx::vk::priv::CommandBuffer"* }
%"class.angle::PackedEnumMap.1107" = type { %"struct.std::__1::array.1108" }
%"struct.std::__1::array.1108" = type { [3 x %struct.VkQueue_T*] }
%struct.VkQueue_T = type opaque
%"class.rx::vk::FenceRecycler" = type { %"class.std::__1::mutex", %"class.rx::vk::Recycler" }
%"class.rx::vk::Recycler" = type { %"class.std::__1::vector.1109" }
%"class.std::__1::vector.1109" = type { %"class.std::__1::__vector_base.1110" }
%"class.std::__1::__vector_base.1110" = type { %"class.rx::vk::Fence"*, %"class.rx::vk::Fence"*, %"class.std::__1::__compressed_pair.1112" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"class.rx::vk::Fence"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.1117" = type { %"class.std::__1::__vector_base.1118" }
%"class.std::__1::__vector_base.1118" = type { %"class.rx::vk::CommandBufferHelper"**, %"class.rx::vk::CommandBufferHelper"**, %"class.std::__1::__compressed_pair.1119" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"class.rx::vk::CommandBufferHelper"** }
%"class.rx::vk::CommandProcessor" = type { %"class.rx::vk::Context", %"class.rx::vk::CommandQueueInterface", %"class.std::__1::queue", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, %"class.rx::vk::CommandPool", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::mutex", %"class.std::__1::queue.1149", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::map.1162", %"class.std::__1::thread" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.1124" }
%"class.std::__1::deque.1124" = type { %"class.std::__1::__deque_base.1125" }
%"class.std::__1::__deque_base.1125" = type { %"struct.std::__1::__split_buffer.1126", i64, %"class.std::__1::__compressed_pair.1141" }
%"struct.std::__1::__split_buffer.1126" = type { %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.std::__1::__compressed_pair.1136" }
%"class.rx::vk::CommandProcessorTask" = type <{ i32, [4 x i8], %"class.rx::vk::RenderPass"*, %"class.rx::vk::CommandBufferHelper"*, %"class.std::__1::vector.928", %"class.std::__1::vector", %"class.rx::vk::Semaphore"*, %"class.std::__1::vector.766", %"class.rx::Serial", %struct.VkPresentInfoKHR, %struct.VkSwapchainKHR_T*, %struct.VkSemaphore_T*, i32, [4 x i8], %struct.VkPresentRegionKHR, %struct.VkPresentRegionsKHR, %"class.std::__1::vector.1129", %struct.VkCommandBuffer_T*, %"class.rx::vk::Fence"*, i8, [7 x i8] }>
%"class.rx::vk::RenderPass" = type { %"class.rx::vk::WrappedObject.1127" }
%"class.rx::vk::WrappedObject.1127" = type { %struct.VkRenderPass_T* }
%struct.VkRenderPass_T = type opaque
%"class.rx::vk::Semaphore" = type { %"class.rx::vk::WrappedObject.1128" }
%"class.rx::vk::WrappedObject.1128" = type { %struct.VkSemaphore_T* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkPresentRegionKHR = type { i32, %struct.VkRectLayerKHR* }
%struct.VkRectLayerKHR = type { %struct.VkOffset2D, %struct.VkExtent2D, i32 }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPresentRegionsKHR = type { i32, i8*, i32, %struct.VkPresentRegionKHR* }
%"class.std::__1::vector.1129" = type { %"class.std::__1::__vector_base.1130" }
%"class.std::__1::__vector_base.1130" = type { %struct.VkRectLayerKHR*, %struct.VkRectLayerKHR*, %"class.std::__1::__compressed_pair.1131" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %struct.VkRectLayerKHR* }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.rx::vk::CommandProcessorTask"** }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::queue.1149" = type { %"class.std::__1::deque.1150" }
%"class.std::__1::deque.1150" = type { %"class.std::__1::__deque_base.1151" }
%"class.std::__1::__deque_base.1151" = type { %"struct.std::__1::__split_buffer.1152", i64, %"class.std::__1::__compressed_pair.1158" }
%"struct.std::__1::__split_buffer.1152" = type { %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"class.std::__1::__compressed_pair.1153" }
%"struct.rx::vk::Error" = type { i32, i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"struct.rx::vk::Error"** }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1145, %union.anon.1147, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1145 = type { i64 }
%union.anon.1147 = type { i64 }
%"class.std::__1::map.1162" = type { %"class.std::__1::__tree.1163" }
%"class.std::__1::__tree.1163" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1164", %"class.std::__1::__compressed_pair.1168" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::thread" = type { i64 }
%"class.rx::vk::Allocator" = type { %"class.rx::vk::WrappedObject.1173" }
%"class.rx::vk::WrappedObject.1173" = type { %struct.VmaAllocator_T* }
%struct.VmaAllocator_T = type opaque
%"class.rx::SamplerCache" = type { %"class.rx::HasCacheStats.1174", %"class.std::__1::unordered_map.1175" }
%"class.rx::HasCacheStats.1174" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.rx::CacheStats" = type { i64, i64 }
%"class.std::__1::unordered_map.1175" = type { %"class.std::__1::__hash_table.1176" }
%"class.std::__1::__hash_table.1176" = type <{ %"class.std::__1::unique_ptr.1177", %"class.std::__1::__compressed_pair.1187", %"class.std::__1::__compressed_pair.1192", %"class.std::__1::__compressed_pair.1196", [4 x i8] }>
%"class.std::__1::unique_ptr.1177" = type { %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179", %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"struct.std::__1::__hash_node_base.1180"** }
%"struct.std::__1::__hash_node_base.1180" = type { %"struct.std::__1::__hash_node_base.1180"* }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"class.std::__1::__bucket_list_deallocator.1182" }
%"class.std::__1::__bucket_list_deallocator.1182" = type { %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"struct.std::__1::__hash_node_base.1180" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { float }
%"class.rx::SamplerYcbcrConversionCache" = type { %"class.rx::HasCacheStats.1202", %"class.std::__1::unordered_map.1203" }
%"class.rx::HasCacheStats.1202" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1203" = type { %"class.std::__1::__hash_table.1204" }
%"class.std::__1::__hash_table.1204" = type <{ %"class.std::__1::unique_ptr.1205", %"class.std::__1::__compressed_pair.1215", %"class.std::__1::__compressed_pair.1220", %"class.std::__1::__compressed_pair.1225", [4 x i8] }>
%"class.std::__1::unique_ptr.1205" = type { %"class.std::__1::__compressed_pair.1206" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207", %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"struct.std::__1::__hash_node_base.1208"** }
%"struct.std::__1::__hash_node_base.1208" = type { %"struct.std::__1::__hash_node_base.1208"* }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"class.std::__1::__bucket_list_deallocator.1210" }
%"class.std::__1::__bucket_list_deallocator.1210" = type { %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"struct.std::__1::__hash_node_base.1208" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"class.rx::vk::ActiveHandleCounter" = type { %"class.angle::PackedEnumMap.1231", %"class.angle::PackedEnumMap.1231" }
%"class.angle::PackedEnumMap.1231" = type { %"struct.std::__1::array.1232" }
%"struct.std::__1::array.1232" = type { [24 x i32] }
%"class.rx::vk::ResourceSerialFactory" = type { %"struct.std::__1::atomic.1233" }
%"struct.std::__1::atomic.1233" = type { %"struct.std::__1::__atomic_base.1234" }
%"struct.std::__1::__atomic_base.1234" = type { %"struct.std::__1::__atomic_base.1235" }
%"struct.std::__1::__atomic_base.1235" = type { %"struct.std::__1::__cxx_atomic_impl.1236" }
%"struct.std::__1::__cxx_atomic_impl.1236" = type { %"struct.std::__1::__cxx_atomic_base_impl.1237" }
%"struct.std::__1::__cxx_atomic_base_impl.1237" = type { i32 }
%"class.rx::vk::MemoryReport" = type { %"class.std::__1::mutex", i64, i64, %"class.absl::flat_hash_map.1238", i64, i64, %"class.absl::flat_hash_map.1253" }
%"class.absl::flat_hash_map.1238" = type { %"class.absl::container_internal::raw_hash_map.1239" }
%"class.absl::container_internal::raw_hash_map.1239" = type { %"class.absl::container_internal::raw_hash_set.1240" }
%"class.absl::container_internal::raw_hash_set.1240" = type { i8*, %"union.absl::container_internal::map_slot_type.1241"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1242" }
%"union.absl::container_internal::map_slot_type.1241" = type opaque
%"class.absl::container_internal::CompressedTuple.1242" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1243" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1243" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.1253" = type { %"class.absl::container_internal::raw_hash_map.1254" }
%"class.absl::container_internal::raw_hash_map.1254" = type { %"class.absl::container_internal::raw_hash_set.1255" }
%"class.absl::container_internal::raw_hash_set.1255" = type { i8*, %"union.absl::container_internal::map_slot_type.1256"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1257" }
%"union.absl::container_internal::map_slot_type.1256" = type opaque
%"class.absl::container_internal::CompressedTuple.1257" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1258" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1258" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.1266" = type { %"struct.std::__1::array.1267" }
%"struct.std::__1::array.1267" = type { [12 x %"class.rx::CacheStats"] }
%"class.std::__1::shared_ptr.1268" = type { %"class.rx::WaitableCompressEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::WaitableCompressEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.645" }
%"class.rx::MultisampleTextureInitializer" = type { i32 (...)** }
%"struct.std::__1::array.646" = type { [16 x { i64, i64 }] }
%"struct.std::__1::array.647" = type { [16 x { i64, i64 }] }
%"class.rx::vk::priv::SecondaryCommandBuffer" = type { i8, %"class.std::__1::vector.648", %"class.angle::PoolAllocator"*, i8*, i64 }
%"class.std::__1::vector.648" = type { %"class.std::__1::__vector_base.649" }
%"class.std::__1::__vector_base.649" = type { %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"**, %"class.std::__1::__compressed_pair.650" }
%"struct.rx::vk::priv::CommandHeader" = type { i16, i16 }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"struct.rx::vk::priv::CommandHeader"** }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.655", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.655" = type { %"class.std::__1::__vector_base.656" }
%"class.std::__1::__vector_base.656" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.657" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.rx::vk::PipelineHelper" = type { %"class.std::__1::vector.662", %"class.rx::Serial", %"class.rx::vk::Pipeline" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"*, %"class.std::__1::__compressed_pair.666" }
%"struct.rx::vk::GraphicsPipelineTransition" = type { %"class.angle::BitSetT.664", %"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::PipelineHelper"* }
%"class.rx::vk::GraphicsPipelineDesc" = type { %"struct.rx::vk::VertexInputAttributes", %"class.rx::vk::RenderPassDesc", %"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo", %"struct.rx::vk::PackedDepthStencilStateInfo", %"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo", %struct.VkViewport, %"struct.rx::vk::PackedScissor", %"struct.rx::vk::PackedExtent" }
%"struct.rx::vk::VertexInputAttributes" = type { [16 x %"struct.rx::vk::PackedAttribDesc"] }
%"struct.rx::vk::PackedAttribDesc" = type { i8, i8, i16, i16 }
%"class.rx::vk::RenderPassDesc" = type { i8, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", %"struct.std::__1::array.665" }
%"struct.std::__1::array.665" = type { [9 x i8] }
%"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo" = type { %"struct.rx::vk::RasterizationStateBits", float, [2 x i32], float, float, float, float }
%"struct.rx::vk::RasterizationStateBits" = type { i32 }
%"struct.rx::vk::PackedDepthStencilStateInfo" = type { %"struct.rx::vk::DepthStencilEnableFlags", i8, i8, %"struct.rx::vk::DepthCompareOpAndSurfaceRotation", float, float, %"struct.rx::vk::PackedStencilOpState", %"struct.rx::vk::PackedStencilOpState" }
%"struct.rx::vk::DepthStencilEnableFlags" = type { i8 }
%"struct.rx::vk::DepthCompareOpAndSurfaceRotation" = type { i8 }
%"struct.rx::vk::PackedStencilOpState" = type { %"struct.rx::vk::StencilOps", i8, i8 }
%"struct.rx::vk::StencilOps" = type { i16 }
%"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo" = type { [4 x i8], [8 x %"struct.rx::vk::PackedColorBlendAttachmentState"], [4 x float], %"struct.rx::vk::LogicOpState", i8, %"struct.rx::vk::PrimitiveState" }
%"struct.rx::vk::PackedColorBlendAttachmentState" = type { i32 }
%"struct.rx::vk::LogicOpState" = type { i8 }
%"struct.rx::vk::PrimitiveState" = type { i16 }
%struct.VkViewport = type { float, float, float, float, float, float }
%"struct.rx::vk::PackedScissor" = type { i16, i16, i16, i16 }
%"struct.rx::vk::PackedExtent" = type { i16, i16 }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"struct.rx::vk::GraphicsPipelineTransition"* }
%"class.rx::vk::Pipeline" = type { %"class.rx::vk::WrappedObject" }
%"class.rx::vk::WrappedObject" = type { %struct.VkPipeline_T* }
%struct.VkPipeline_T = type opaque
%"class.rx::vk::ObjectAndSerial" = type { [8 x i8], %"class.rx::vk::Pipeline", %"class.rx::Serial" }
%"class.rx::WindowSurfaceVk" = type opaque
%"class.std::__1::unique_ptr.671" = type { %"class.std::__1::__compressed_pair.672" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"class.rx::vk::GraphicsPipelineDesc"* }
%"class.angle::BitSetT.664" = type { i64 }
%"class.angle::PackedEnumMap.677" = type { %"struct.std::__1::array.678" }
%"struct.std::__1::array.678" = type { [2 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::DynamicDescriptorPool" = type { i64, %"class.std::__1::vector.679", %"class.std::__1::vector.686", %struct.VkDescriptorSetLayout_T* }
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.rx::vk::RefCounted"**, %"class.rx::vk::RefCounted"**, %"class.std::__1::__compressed_pair.681" }
%"class.rx::vk::RefCounted" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.rx::vk::RefCounted"** }
%"class.std::__1::vector.686" = type { %"class.std::__1::__vector_base.687" }
%"class.std::__1::__vector_base.687" = type { %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize*, %"class.std::__1::__compressed_pair.688" }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorSetLayout_T = type opaque
%"class.angle::PackedEnumMap.693" = type { %"struct.std::__1::array.694" }
%"struct.std::__1::array.694" = type { [7 x %"class.rx::vk::DynamicQueryPool"] }
%"class.angle::PackedEnumMap.710" = type { %"struct.std::__1::array.711" }
%"struct.std::__1::array.711" = type { [7 x %"class.rx::QueryVk"*] }
%"class.rx::QueryVk" = type <{ %"class.rx::QueryImpl.base", [7 x i8], %"class.rx::vk::Shared", %"class.std::__1::vector.713", %"class.rx::vk::QueryHelper", i64, i64, i8, [7 x i8] }>
%"class.rx::QueryImpl.base" = type <{ i32 (...)**, i8 }>
%"class.rx::vk::Shared" = type { %"class.rx::vk::RefCounted.712"* }
%"class.rx::vk::RefCounted.712" = type { i32, [4 x i8], %"class.rx::vk::QueryHelper" }
%"class.std::__1::vector.713" = type { %"class.std::__1::__vector_base.714" }
%"class.std::__1::__vector_base.714" = type { %"class.rx::vk::Shared"*, %"class.rx::vk::Shared"*, %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.rx::vk::Shared"* }
%"class.rx::vk::QueryHelper" = type <{ %"class.rx::vk::Resource", %"class.rx::vk::DynamicQueryPool"*, i64, i32, [4 x i8] }>
%"class.rx::vk::Resource" = type { i32 (...)**, %"class.rx::vk::SharedResourceUse" }
%"class.rx::VertexArrayVk" = type opaque
%"class.rx::FramebufferVk" = type opaque
%"class.rx::ProgramVk" = type opaque
%"class.rx::ProgramPipelineVk" = type opaque
%"class.rx::ProgramExecutableVk" = type opaque
%"class.angle::PackedEnumMap.720" = type { %"struct.std::__1::array.721" }
%"struct.std::__1::array.721" = type { [3 x i32] }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.rx::IncompleteTextureSet" = type { %"class.angle::PackedEnumMap.722", %"class.gl::Buffer"* }
%"class.angle::PackedEnumMap.722" = type { %"struct.std::__1::array.723" }
%"struct.std::__1::array.723" = type { [4 x %"class.angle::PackedEnumMap.544"] }
%"class.angle::PackedEnumMap.724" = type { %"struct.std::__1::array.725" }
%"struct.std::__1::array.725" = type { [2 x %"struct.rx::ContextVk::DriverUniformsDescriptorSet"] }
%"struct.rx::ContextVk::DriverUniformsDescriptorSet" = type { %"class.rx::vk::DynamicBuffer", %struct.VkDescriptorSet_T*, i32, %"class.rx::vk::BindingPointer", %"class.rx::vk::BindingPointer.743", %"class.rx::DriverUniformsDescriptorSetCache" }
%struct.VkDescriptorSet_T = type opaque
%"class.rx::vk::BindingPointer" = type { %"class.rx::vk::RefCounted.742"* }
%"class.rx::vk::RefCounted.742" = type opaque
%"class.rx::vk::BindingPointer.743" = type { %"class.rx::vk::RefCounted"* }
%"class.rx::DriverUniformsDescriptorSetCache" = type { %"class.rx::HasCacheStats", %"class.angle::FastIntegerMap" }
%"class.rx::HasCacheStats" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.angle::FastIntegerMap" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.751" }
%"class.angle::FastIntegerSet" = type { %"class.std::__1::vector.744" }
%"class.std::__1::vector.744" = type { %"class.std::__1::__vector_base.745" }
%"class.std::__1::__vector_base.745" = type { %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*, %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.angle::BitSetT.168"* }
%"class.std::__1::vector.751" = type { %"class.std::__1::__vector_base.752" }
%"class.std::__1::__vector_base.752" = type { %struct.VkDescriptorSet_T**, %struct.VkDescriptorSet_T**, %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %struct.VkDescriptorSet_T** }
%"struct.std::__1::array.758" = type { [96 x %"struct.rx::vk::TextureUnit"] }
%"struct.rx::vk::TextureUnit" = type { %"class.rx::TextureVk"*, %"class.rx::vk::SamplerHelper"*, i32 }
%"class.rx::TextureVk" = type opaque
%"class.rx::vk::SamplerHelper" = type <{ [8 x i8], %"class.rx::vk::Sampler", %"class.rx::vk::SamplerSerial", [4 x i8] }>
%"class.rx::vk::Sampler" = type { %"class.rx::vk::WrappedObject.759" }
%"class.rx::vk::WrappedObject.759" = type { %struct.VkSampler_T* }
%struct.VkSampler_T = type opaque
%"class.rx::vk::SamplerSerial" = type { i32 }
%"class.rx::vk::TextureDescriptorDesc" = type { i32, %"struct.std::__1::array.760" }
%"struct.std::__1::array.760" = type { [96 x %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"] }
%"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials" = type { %"struct.rx::vk::ImageOrBufferViewSubresourceSerial", %"class.rx::vk::SamplerSerial" }
%"struct.rx::vk::ImageOrBufferViewSubresourceSerial" = type { %"class.rx::vk::ImageOrBufferViewSerial", %"struct.rx::vk::ImageSubresourceRange" }
%"class.rx::vk::ImageOrBufferViewSerial" = type { i32 }
%"struct.rx::vk::ImageSubresourceRange" = type { i32 }
%"class.rx::vk::ShaderBuffersDescriptorDesc" = type { %"class.angle::FastVector.761" }
%"class.angle::FastVector.761" = type { %"struct.std::__1::array.762", i32*, i64, i64 }
%"struct.std::__1::array.762" = type { [32 x i32] }
%"struct.std::__1::array.763" = type { [96 x %"class.rx::TextureVk"*] }
%"struct.std::__1::array.764" = type { [16 x %"class.rx::vk::DynamicBuffer"] }
%"class.rx::vk::CommandPool" = type { %"class.rx::vk::WrappedObject.765" }
%"class.rx::vk::WrappedObject.765" = type { %struct.VkCommandPool_T* }
%struct.VkCommandPool_T = type opaque
%"class.std::__1::vector.766" = type { %"class.std::__1::__vector_base.767" }
%"class.std::__1::__vector_base.767" = type { %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*, %"class.std::__1::__compressed_pair.768" }
%"class.rx::vk::GarbageObject" = type { i32, %"struct.rx::vk::GarbageHandle_T"* }
%"struct.rx::vk::GarbageHandle_T" = type opaque
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.rx::vk::GarbageObject"* }
%"class.rx::RenderPassCache" = type { %"class.absl::flat_hash_map.773", %"class.rx::CacheStats", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.773" = type { %"class.absl::container_internal::raw_hash_map.774" }
%"class.absl::container_internal::raw_hash_map.774" = type { %"class.absl::container_internal::raw_hash_set.775" }
%"class.absl::container_internal::raw_hash_set.775" = type { i8*, %"union.absl::container_internal::map_slot_type.776"*, i64, i64, %"class.absl::container_internal::CompressedTuple.777" }
%"union.absl::container_internal::map_slot_type.776" = type { %"struct.std::__1::pair.1282" }
%"struct.std::__1::pair.1282" = type { %"class.rx::vk::RenderPassDesc", %"class.absl::flat_hash_map.1283" }
%"class.absl::flat_hash_map.1283" = type { %"class.absl::container_internal::raw_hash_map.1284" }
%"class.absl::container_internal::raw_hash_map.1284" = type { %"class.absl::container_internal::raw_hash_set.1285" }
%"class.absl::container_internal::raw_hash_set.1285" = type { i8*, %"union.absl::container_internal::map_slot_type.1286"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1287" }
%"union.absl::container_internal::map_slot_type.1286" = type { %"struct.std::__1::pair.1299" }
%"struct.std::__1::pair.1299" = type { %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::RenderPassHelper" }
%"class.rx::vk::AttachmentOpsArray" = type { %"struct.std::__1::array.798" }
%"struct.std::__1::array.798" = type { [10 x %"struct.rx::vk::PackedAttachmentOpsDesc"] }
%"struct.rx::vk::PackedAttachmentOpsDesc" = type { i32 }
%"class.rx::vk::RenderPassHelper" = type <{ [8 x i8], %"class.rx::vk::RenderPass", %"struct.rx::vk::RenderPassPerfCounters", [3 x i8] }>
%"struct.rx::vk::RenderPassPerfCounters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.absl::container_internal::CompressedTuple.1287" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1288" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1288" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::container_internal::CompressedTuple.777" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.778" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.778" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::vk::CommandBufferHelper" = type { [8 x i8], %"class.angle::PoolAllocator", %"class.angle::PackedEnumMap.788", %"class.angle::BitSetT.797", %"class.rx::vk::priv::SecondaryCommandBuffer", i32, %"class.rx::vk::RenderPassDesc", %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::Framebuffer", %"struct.gl::Rectangle", %"class.rx::vk::PackedClearValuesArray", i8, %"struct.std::__1::array.801", i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"class.rx::vk::PackedAttachmentIndex", %"class.angle::FastIntegerMap.802", %"class.angle::FastIntegerSet", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, %"class.rx::vk::PackedAttachmentIndex", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::ImageHelper"* }
%"class.angle::PackedEnumMap.788" = type { %"struct.std::__1::array.789" }
%"struct.std::__1::array.789" = type { [14 x %"class.rx::vk::PipelineBarrier"] }
%"class.rx::vk::PipelineBarrier" = type { i32, i32, i32, i32, %"class.std::__1::vector.790" }
%"class.std::__1::vector.790" = type { %"class.std::__1::__vector_base.791" }
%"class.std::__1::__vector_base.791" = type { %struct.VkImageMemoryBarrier*, %struct.VkImageMemoryBarrier*, %"class.std::__1::__compressed_pair.792" }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImage_T = type opaque
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.793" = type { %struct.VkImageMemoryBarrier* }
%"class.angle::BitSetT.797" = type { i16 }
%"class.rx::vk::Framebuffer" = type { %"class.rx::vk::WrappedObject.799" }
%"class.rx::vk::WrappedObject.799" = type { %struct.VkFramebuffer_T* }
%struct.VkFramebuffer_T = type opaque
%"class.rx::vk::PackedClearValuesArray" = type { %"struct.std::__1::array.800" }
%"struct.std::__1::array.800" = type { [10 x %union.VkClearValue] }
%"struct.std::__1::array.801" = type { [4 x %struct.VkBuffer_T*] }
%struct.VkBuffer_T = type opaque
%"class.angle::FastIntegerMap.802" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.803" }
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { i32*, i32*, %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { i32* }
%"class.gl::LevelIndexWrapper" = type { i32 }
%"class.rx::vk::PackedAttachmentIndex" = type { i32 }
%"class.rx::vk::PackedImageAttachmentArray" = type { %"struct.std::__1::array.824" }
%"struct.std::__1::array.824" = type { [10 x %"class.rx::vk::ImageHelper"*] }
%"class.rx::vk::ImageHelper" = type <{ %"class.rx::vk::Resource", %"class.angle::Subject", %"class.rx::vk::Image", %"class.rx::vk::DeviceMemory", i32, i32, i32, i32, %struct.VkExtent3D, i8, [3 x i8], %"struct.rx::vk::Format"*, i32, %"class.rx::vk::ImageSerial", i32, i32, i32, i32, %"class.angle::BitSetT.811", [6 x i8], %"class.rx::vk::BindingPointer.812", i64, %"class.gl::LevelIndexWrapper", i32, i32, [4 x i8], %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.814", %struct.Optional.822, %"struct.std::__1::array.823", %"struct.std::__1::array.823", [4 x i8] }>
%"class.rx::vk::Image" = type { %"class.rx::vk::WrappedObject.810" }
%"class.rx::vk::WrappedObject.810" = type { %struct.VkImage_T* }
%"class.rx::vk::DeviceMemory" = type { %"class.rx::vk::WrappedObject.731" }
%"class.rx::vk::WrappedObject.731" = type { %struct.VkDeviceMemory_T* }
%struct.VkDeviceMemory_T = type opaque
%"class.rx::vk::ImageSerial" = type { i32 }
%"class.angle::BitSetT.811" = type { i16 }
%"class.rx::vk::BindingPointer.812" = type { %"class.rx::vk::RefCounted.813"* }
%"class.rx::vk::RefCounted.813" = type opaque
%"class.std::__1::vector.814" = type { %"class.std::__1::__vector_base.815" }
%"class.std::__1::__vector_base.815" = type { %"class.std::__1::vector.816"*, %"class.std::__1::vector.816"*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::vector.816" = type opaque
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"class.std::__1::vector.816"* }
%struct.Optional.822 = type { i8, %"struct.rx::vk::ImageHelper::ClearUpdate" }
%"struct.rx::vk::ImageHelper::ClearUpdate" = type { i32, %union.VkClearValue, i32, i32, i32 }
%"struct.std::__1::array.823" = type { [16 x %"class.angle::BitSetT.147"] }
%"class.angle::FastUnorderedSet" = type { %"class.angle::FastVector.825" }
%"class.angle::FastVector.825" = type { %"struct.std::__1::array.826", %"class.rx::vk::BufferHelper"**, i64, i64 }
%"struct.std::__1::array.826" = type { [4 x %"class.rx::vk::BufferHelper"*] }
%"class.rx::vk::ShaderLibrary" = type { [8 x i8], [24 x %"class.rx::vk::RefCounted.827"], [4 x %"class.rx::vk::RefCounted.827"], [4 x %"class.rx::vk::RefCounted.827"], [3 x %"class.rx::vk::RefCounted.827"], [1 x %"class.rx::vk::RefCounted.827"], [8 x %"class.rx::vk::RefCounted.827"], [1 x %"class.rx::vk::RefCounted.827"], [10 x %"class.rx::vk::RefCounted.827"], [48 x %"class.rx::vk::RefCounted.827"], [43 x %"class.rx::vk::RefCounted.827"], [6 x %"class.rx::vk::RefCounted.827"], [2 x %"class.rx::vk::RefCounted.827"] }
%"class.rx::vk::RefCounted.827" = type { i32, %"class.rx::vk::ObjectAndSerial.828" }
%"class.rx::vk::ObjectAndSerial.828" = type { [8 x i8], %"class.rx::vk::ShaderModule", %"class.rx::Serial" }
%"class.rx::vk::ShaderModule" = type { %"class.rx::vk::WrappedObject.829" }
%"class.rx::vk::WrappedObject.829" = type { %struct.VkShaderModule_T* }
%struct.VkShaderModule_T = type opaque
%"class.rx::UtilsVk" = type { [8 x i8], %"class.angle::PackedEnumMap.830", %"class.angle::PackedEnumMap.834", %"class.angle::PackedEnumMap.838", [4 x %"class.rx::vk::ShaderProgramHelper"], [3 x %"class.rx::vk::ShaderProgramHelper"], [1 x %"class.rx::vk::ShaderProgramHelper"], [8 x %"class.rx::vk::ShaderProgramHelper"], %"class.rx::vk::ShaderProgramHelper", [48 x %"class.rx::vk::ShaderProgramHelper"], [43 x %"class.rx::vk::ShaderProgramHelper"], [24 x %"class.rx::vk::ShaderProgramHelper"], [4 x %"class.rx::vk::ShaderProgramHelper"], [6 x %"class.rx::vk::ShaderProgramHelper"], [2 x %"class.rx::vk::ShaderProgramHelper"], [10 x %"class.rx::vk::ShaderProgramHelper"], %"class.std::__1::unordered_map.864", %"class.std::__1::unordered_map.889", %"class.rx::vk::Sampler", %"class.rx::vk::Sampler", %"struct.rx::InternalShaderPerfCounters", %"struct.rx::InternalShaderPerfCounters" }
%"class.angle::PackedEnumMap.830" = type { %"struct.std::__1::array.831" }
%"struct.std::__1::array.831" = type { [22 x %"class.angle::PackedEnumMap.832"] }
%"class.angle::PackedEnumMap.832" = type { %"struct.std::__1::array.833" }
%"struct.std::__1::array.833" = type { [4 x %"class.rx::vk::BindingPointer"] }
%"class.angle::PackedEnumMap.834" = type { %"struct.std::__1::array.835" }
%"struct.std::__1::array.835" = type { [22 x %"class.rx::vk::BindingPointer.836"] }
%"class.rx::vk::BindingPointer.836" = type { %"class.rx::vk::RefCounted.837"* }
%"class.rx::vk::RefCounted.837" = type opaque
%"class.angle::PackedEnumMap.838" = type { %"struct.std::__1::array.839" }
%"struct.std::__1::array.839" = type { [22 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::ShaderProgramHelper" = type { [8 x i8], %"class.angle::PackedEnumMap.840", %"class.rx::GraphicsPipelineCache", %"class.rx::vk::ObjectAndSerial", %"struct.rx::vk::SpecializationConstants" }
%"class.angle::PackedEnumMap.840" = type { %"struct.std::__1::array.841" }
%"struct.std::__1::array.841" = type { [6 x %"class.rx::vk::BindingPointer.842"] }
%"class.rx::vk::BindingPointer.842" = type { %"class.rx::vk::RefCounted.827"* }
%"class.rx::GraphicsPipelineCache" = type { %"class.rx::HasCacheStats.843", %"class.std::__1::unordered_map" }
%"class.rx::HasCacheStats.843" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.844", %"class.std::__1::__compressed_pair.852", %"class.std::__1::__compressed_pair.857", %"class.std::__1::__compressed_pair.859", [4 x i8] }>
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846", %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.rx::vk::SpecializationConstants" = type { i32, i32, i32, i32 }
%"class.std::__1::unordered_map.864" = type { %"class.std::__1::__hash_table.865" }
%"class.std::__1::__hash_table.865" = type <{ %"class.std::__1::unique_ptr.866", %"class.std::__1::__compressed_pair.876", %"class.std::__1::__compressed_pair.881", %"class.std::__1::__compressed_pair.885", [4 x i8] }>
%"class.std::__1::unique_ptr.866" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868", %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"struct.std::__1::__hash_node_base.869"** }
%"struct.std::__1::__hash_node_base.869" = type { %"struct.std::__1::__hash_node_base.869"* }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"class.std::__1::__bucket_list_deallocator.871" }
%"class.std::__1::__bucket_list_deallocator.871" = type { %"class.std::__1::__compressed_pair.872" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.std::__1::__hash_node_base.869" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"class.std::__1::unordered_map.889" = type { %"class.std::__1::__hash_table.890" }
%"class.std::__1::__hash_table.890" = type <{ %"class.std::__1::unique_ptr.891", %"class.std::__1::__compressed_pair.901", %"class.std::__1::__compressed_pair.906", %"class.std::__1::__compressed_pair.909", [4 x i8] }>
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893", %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"struct.std::__1::__hash_node_base.894"** }
%"struct.std::__1::__hash_node_base.894" = type { %"struct.std::__1::__hash_node_base.894"* }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"class.std::__1::__bucket_list_deallocator.896" }
%"class.std::__1::__bucket_list_deallocator.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"struct.std::__1::__hash_node_base.894" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.rx::InternalShaderPerfCounters" = type { i32 }
%"class.rx::vk::DynamicQueryPool" = type { %"class.rx::vk::DynamicallyGrowingPool.base", i32 }
%"class.rx::vk::DynamicallyGrowingPool.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.std::__1::vector.695", %"class.std::__1::vector.703", i64, i32 }>
%"class.std::__1::vector.695" = type { %"class.std::__1::__vector_base.696" }
%"class.std::__1::__vector_base.696" = type { %"class.rx::vk::QueryPool"*, %"class.rx::vk::QueryPool"*, %"class.std::__1::__compressed_pair.698" }
%"class.rx::vk::QueryPool" = type { %"class.rx::vk::WrappedObject.697" }
%"class.rx::vk::WrappedObject.697" = type { %struct.VkQueryPool_T* }
%struct.VkQueryPool_T = type opaque
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.rx::vk::QueryPool"* }
%"class.std::__1::vector.703" = type { %"class.std::__1::__vector_base.704" }
%"class.std::__1::__vector_base.704" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"class.std::__1::__compressed_pair.705" }
%"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats" = type opaque
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"* }
%"class.std::__1::vector.913" = type { %"class.std::__1::__vector_base.914" }
%"class.std::__1::__vector_base.914" = type { %"struct.rx::ContextVk::GpuEventQuery"*, %"struct.rx::ContextVk::GpuEventQuery"*, %"class.std::__1::__compressed_pair.916" }
%"struct.rx::ContextVk::GpuEventQuery" = type { %"struct.std::__1::array.915", i8, [7 x i8], %"class.rx::vk::QueryHelper" }
%"struct.std::__1::array.915" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"struct.rx::ContextVk::GpuEventQuery"* }
%"class.std::__1::vector.921" = type { %"class.std::__1::__vector_base.922" }
%"class.std::__1::__vector_base.922" = type { %"struct.rx::ContextVk::GpuEvent"*, %"struct.rx::ContextVk::GpuEvent"*, %"class.std::__1::__compressed_pair.923" }
%"struct.rx::ContextVk::GpuEvent" = type { i64, %"struct.std::__1::array.915", i8 }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.924" = type { %"struct.rx::ContextVk::GpuEvent"* }
%"class.std::__1::vector.928" = type { %"class.std::__1::__vector_base.929" }
%"class.std::__1::__vector_base.929" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %struct.VkSemaphore_T** }
%"struct.rx::ContextVk::GpuClockSyncInfo" = type { double, double }
%"struct.rx::vk::PerfCounters" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.rx::ContextVkPerfCounters" = type { %"class.angle::PackedEnumMap.935" }
%"class.angle::PackedEnumMap.935" = type { %"struct.std::__1::array.373" }
%"class.rx::vk::ResourceUseList" = type { i32 (...)**, %"class.std::__1::vector.936" }
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"*, %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.rx::vk::SharedResourceUse"* }
%"class.std::__1::vector.943" = type { %"class.std::__1::__vector_base.944" }
%"class.std::__1::__vector_base.944" = type { %struct.VkDescriptorBufferInfo*, %struct.VkDescriptorBufferInfo*, %"class.std::__1::__compressed_pair.945" }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %struct.VkDescriptorBufferInfo* }
%"class.std::__1::vector.950" = type { %"class.std::__1::__vector_base.951" }
%"class.std::__1::__vector_base.951" = type { %struct.VkDescriptorImageInfo*, %struct.VkDescriptorImageInfo*, %"class.std::__1::__compressed_pair.952" }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkImageView_T = type opaque
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %struct.VkDescriptorImageInfo* }
%"class.std::__1::vector.957" = type { %"class.std::__1::__vector_base.958" }
%"class.std::__1::__vector_base.958" = type { %struct.VkWriteDescriptorSet*, %struct.VkWriteDescriptorSet*, %"class.std::__1::__compressed_pair.959" }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkBufferView_T = type opaque
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %struct.VkWriteDescriptorSet* }
%"class.rx::ShareGroupVk" = type <{ %"class.rx::ShareGroupImpl", %"class.rx::PipelineLayoutCache", %"class.rx::DescriptorSetLayoutCache", %"class.std::__1::set.1019", %"class.std::__1::vector.1029", i8, [7 x i8] }>
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.rx::PipelineLayoutCache" = type { %"class.rx::HasCacheStats.964", %"class.std::__1::unordered_map.965" }
%"class.rx::HasCacheStats.964" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.965" = type { %"class.std::__1::__hash_table.966" }
%"class.std::__1::__hash_table.966" = type <{ %"class.std::__1::unique_ptr.967", %"class.std::__1::__compressed_pair.977", %"class.std::__1::__compressed_pair.982", %"class.std::__1::__compressed_pair.986", [4 x i8] }>
%"class.std::__1::unique_ptr.967" = type { %"class.std::__1::__compressed_pair.968" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969", %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"struct.std::__1::__hash_node_base.970"** }
%"struct.std::__1::__hash_node_base.970" = type { %"struct.std::__1::__hash_node_base.970"* }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.std::__1::__bucket_list_deallocator.972" }
%"class.std::__1::__bucket_list_deallocator.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"struct.std::__1::__hash_node_base.970" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"class.rx::DescriptorSetLayoutCache" = type { %"class.std::__1::unordered_map.992", %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.992" = type { %"class.std::__1::__hash_table.993" }
%"class.std::__1::__hash_table.993" = type <{ %"class.std::__1::unique_ptr.994", %"class.std::__1::__compressed_pair.1004", %"class.std::__1::__compressed_pair.1009", %"class.std::__1::__compressed_pair.1013", [4 x i8] }>
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996", %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"struct.std::__1::__hash_node_base.997"** }
%"struct.std::__1::__hash_node_base.997" = type { %"struct.std::__1::__hash_node_base.997"* }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.std::__1::__bucket_list_deallocator.999" }
%"class.std::__1::__bucket_list_deallocator.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"struct.std::__1::__hash_node_base.997" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"class.std::__1::set.1019" = type { %"class.std::__1::__tree.1020" }
%"class.std::__1::__tree.1020" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1021", %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.1029" = type { %"class.std::__1::__vector_base.1030" }
%"class.std::__1::__vector_base.1030" = type { %"class.rx::vk::ResourceUseList"*, %"class.rx::vk::ResourceUseList"*, %"class.std::__1::__compressed_pair.1031" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.1032" }
%"struct.std::__1::__compressed_pair_elem.1032" = type { %"class.rx::vk::ResourceUseList"* }
%"class.rx::vk::BufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Buffer", %"class.rx::vk::BufferMemory", i32, i64, i32, i32, i32, i32, i32, %"class.rx::vk::BufferSerial" }
%"class.rx::vk::Buffer" = type { %"class.rx::vk::WrappedObject.729" }
%"class.rx::vk::WrappedObject.729" = type { %struct.VkBuffer_T* }
%"class.rx::vk::BufferMemory" = type { [8 x i8], %"class.rx::vk::Allocation", %"class.rx::vk::DeviceMemory", i8*, i8* }
%"class.rx::vk::Allocation" = type { %"class.rx::vk::WrappedObject.730" }
%"class.rx::vk::WrappedObject.730" = type { %struct.VmaAllocation_T* }
%struct.VmaAllocation_T = type opaque
%"class.rx::vk::BufferSerial" = type { i32 }
%"class.rx::vk::DynamicBuffer" = type { i32, i8, i32, i64, %"class.std::__1::unique_ptr.726", i32, i32, i64, i64, i32, %"class.std::__1::vector.735", %"class.std::__1::vector.735" }
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.rx::vk::BufferHelper"* }
%"class.std::__1::vector.735" = type { %"class.std::__1::__vector_base.736" }
%"class.std::__1::__vector_base.736" = type { %"class.std::__1::unique_ptr.726"*, %"class.std::__1::unique_ptr.726"*, %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.std::__1::unique_ptr.726"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2rx10ShaderImpl7destroyEv = comdat any

@_ZTVN2rx8ShaderVkE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::ShaderVk"*)* @_ZN2rx8ShaderVkD2Ev to i8*), i8* bitcast (void (%"class.rx::ShaderVk"*)* @_ZN2rx8ShaderVkD0Ev to i8*), i8* bitcast (void (%"class.rx::ShaderImpl"*)* @_ZN2rx10ShaderImpl7destroyEv to i8*), i8* bitcast ({ %"class.rx::WaitableCompileEvent"*, %"class.std::__1::__shared_weak_count"* } (%"class.rx::ShaderVk"*, %"class.gl::Context"*, %"class.gl::ShCompilerInstance"*, i64)* @_ZN2rx8ShaderVk7compileEPKN2gl7ContextEPNS1_18ShCompilerInstanceEm to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.rx::ShaderVk"*)* @_ZNK2rx8ShaderVk12getDebugInfoEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [14 x i8] c"<binary blob>\00", align 1

@_ZN2rx8ShaderVkC1ERKN2gl11ShaderStateE = hidden unnamed_addr alias void (%"class.rx::ShaderVk"*, %"class.gl::ShaderState"*), void (%"class.rx::ShaderVk"*, %"class.gl::ShaderState"*)* @_ZN2rx8ShaderVkC2ERKN2gl11ShaderStateE
@_ZN2rx8ShaderVkD1Ev = hidden unnamed_addr alias void (%"class.rx::ShaderVk"*), void (%"class.rx::ShaderVk"*)* @_ZN2rx8ShaderVkD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx8ShaderVkC2ERKN2gl11ShaderStateE(%"class.rx::ShaderVk"* nocapture, %"class.gl::ShaderState"* dereferenceable(368)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rx::ShaderVk", %"class.rx::ShaderVk"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.rx::ShaderVk", %"class.rx::ShaderVk"* %0, i64 0, i32 0, i32 1
  store %"class.gl::ShaderState"* %1, %"class.gl::ShaderState"** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2rx8ShaderVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2rx8ShaderVkD2Ev(%"class.rx::ShaderVk"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx8ShaderVkD0Ev(%"class.rx::ShaderVk"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.rx::ShaderVk"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.rx::WaitableCompileEvent"*, %"class.std::__1::__shared_weak_count"* } @_ZN2rx8ShaderVk7compileEPKN2gl7ContextEPNS1_18ShCompilerInstanceEm(%"class.rx::ShaderVk"*, %"class.gl::Context"*, %"class.gl::ShCompilerInstance"*, i64) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %6 = bitcast %"class.rx::ContextImpl"** %5 to %"class.rx::ContextVk"**
  %7 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 121
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.rx::ShaderVk", %"class.rx::ShaderVk"* %0, i64 0, i32 0, i32 1
  %13 = load %"class.gl::ShaderState"*, %"class.gl::ShaderState"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::ShaderState", %"class.gl::ShaderState"* %13, i64 0, i32 1
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 5
  %17 = select i1 %16, i64 536871936, i64 536904704
  br label %18

18:                                               ; preds = %11, %4
  %19 = phi i64 [ 0, %4 ], [ %17, %11 ]
  %20 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %7, i64 0, i32 1, i32 1
  %21 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %20, align 8
  %22 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 7, i32 6, i32 4
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = or i64 %19, 4294967296
  %26 = select i1 %24, i64 %19, i64 %25
  %27 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 7, i32 1, i32 4
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = or i64 %26, 140737488355328
  %31 = select i1 %29, i64 %26, i64 %30
  %32 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %7, i64 0, i32 42
  %33 = load i8, i8* %32, align 4, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = or i64 %31, 4398046511104
  %36 = select i1 %34, i64 %31, i64 %35
  %37 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 7, i32 47, i32 4
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  %40 = or i64 %36, 1125899906842624
  %41 = select i1 %39, i64 %40, i64 %36
  %42 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 7, i32 72, i32 4
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  %45 = or i64 %41, 9007199254740992
  %46 = select i1 %44, i64 %41, i64 %45
  %47 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 7, i32 68, i32 4
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  %50 = select i1 %49, i64 20266198323167232, i64 2251799813685248
  %51 = or i64 %46, %50
  %52 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 7, i32 46, i32 4
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %18
  %56 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 7, i32 64, i32 4
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %67

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 7, i32 65, i32 4
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 7, i32 66, i32 4
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %63, %59, %55, %18
  %68 = or i64 %51, 4503599627370496
  br label %69

69:                                               ; preds = %63, %67
  %70 = phi i64 [ %68, %67 ], [ %51, %63 ]
  %71 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 7, i32 27, i32 4
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %69
  %75 = or i64 %70, 72057594037927936
  %76 = getelementptr inbounds %"class.rx::ShaderVk", %"class.rx::ShaderVk"* %0, i64 0, i32 0, i32 1
  %77 = load %"class.gl::ShaderState"*, %"class.gl::ShaderState"** %76, align 8
  br label %90

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"class.rx::ShaderVk", %"class.rx::ShaderVk"* %0, i64 0, i32 0, i32 1
  %80 = load %"class.gl::ShaderState"*, %"class.gl::ShaderState"** %79, align 8
  %81 = getelementptr inbounds %"class.gl::ShaderState", %"class.gl::ShaderState"* %80, i64 0, i32 1
  %82 = load i8, i8* %81, align 8
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %90

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 7, i32 26, i32 4
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  %88 = or i64 %70, 36028797018963968
  %89 = select i1 %87, i64 %70, i64 %88
  br label %90

90:                                               ; preds = %84, %78, %74
  %91 = phi %"class.gl::ShaderState"* [ %77, %74 ], [ %80, %78 ], [ %80, %84 ]
  %92 = phi i64 [ %75, %74 ], [ %70, %78 ], [ %89, %84 ]
  %93 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %21, i64 0, i32 7, i32 67, i32 4
  %94 = load i8, i8* %93, align 8, !range !2
  %95 = icmp eq i8 %94, 0
  %96 = or i64 %92, 288230376151711744
  %97 = select i1 %95, i64 %92, i64 %96
  %98 = getelementptr inbounds %"class.rx::ShaderVk", %"class.rx::ShaderVk"* %0, i64 0, i32 0
  %99 = getelementptr inbounds %"class.gl::ShaderState", %"class.gl::ShaderState"* %91, i64 0, i32 6
  %100 = or i64 %97, %3
  %101 = tail call { %"class.rx::WaitableCompileEvent"*, %"class.std::__1::__shared_weak_count"* } @_ZN2rx10ShaderImpl11compileImplEPKN2gl7ContextEPNS1_18ShCompilerInstanceERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEm(%"class.rx::ShaderImpl"* %98, %"class.gl::Context"* %1, %"class.gl::ShCompilerInstance"* %2, %"class.std::__1::basic_string"* dereferenceable(24) %99, i64 %100) #7
  ret { %"class.rx::WaitableCompileEvent"*, %"class.std::__1::__shared_weak_count"* } %101
}

declare { %"class.rx::WaitableCompileEvent"*, %"class.std::__1::__shared_weak_count"* } @_ZN2rx10ShaderImpl11compileImplEPKN2gl7ContextEPNS1_18ShCompilerInstanceERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEm(%"class.rx::ShaderImpl"*, %"class.gl::Context"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx8ShaderVk12getDebugInfoEv(%"class.std::__1::basic_string"* noalias sret, %"class.rx::ShaderVk"* nocapture readonly) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::ShaderVk", %"class.rx::ShaderVk"* %1, i64 0, i32 0, i32 1
  %4 = load %"class.gl::ShaderState"*, %"class.gl::ShaderState"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::ShaderState", %"class.gl::ShaderState"* %4, i64 0, i32 5, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = getelementptr inbounds %"class.gl::ShaderState", %"class.gl::ShaderState"* %4, i64 0, i32 5, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %6, %8
  %10 = select i1 %9, i64 0, i64 13
  %11 = trunc i64 %10 to i8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  store i8 %11, i8* %13, align 1
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br i1 %9, label %16, label %15

15:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 %10, i1 false) #7
  br label %16

16:                                               ; preds = %2, %15
  %17 = getelementptr inbounds i8, i8* %14, i64 %10
  store i8 0, i8* %17, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx10ShaderImpl7destroyEv(%"class.rx::ShaderImpl"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
