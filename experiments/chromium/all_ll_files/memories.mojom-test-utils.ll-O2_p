; ModuleID = 'gen/chrome/browser/ui/webui/memories/memories.mojom-test-utils.cc'
source_filename = "gen/chrome/browser/ui/webui/memories/memories.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.history_clusters::mojom::PageHandlerAsyncWaiter" = type { %"class.history_clusters::mojom::PageHandler"* }
%"class.history_clusters::mojom::PageHandler" = type { i32 (...)** }
%"class.history_clusters::mojom::PageAsyncWaiter" = type { %"class.history_clusters::mojom::Page"* }
%"class.history_clusters::mojom::Page" = type { i32 (...)** }
%"class.history_clusters::mojom::PageHandlerInterceptorForTesting" = type { %"class.history_clusters::mojom::PageHandler" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.history_clusters::mojom::QueryParams"* }
%"class.history_clusters::mojom::QueryParams" = type <{ %"class.std::__1::basic_string", %"class.absl::optional", i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.3 }
%union.anon.3 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::StructPtr.5"*, %"class.mojo::StructPtr.5"*, %"class.std::__1::__compressed_pair.12" }
%"class.mojo::StructPtr.5" = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.history_clusters::mojom::Visit"* }
%"class.history_clusters::mojom::Visit" = type { i64, %class.GURL, %"class.std::__1::basic_string", %"class.absl::optional.23", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::vector", double }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.17" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.GURL* }
%"class.absl::optional.23" = type { %"class.absl::optional_internal::optional_data.24" }
%"class.absl::optional_internal::optional_data.24" = type { %"class.absl::optional_internal::optional_data_base.25" }
%"class.absl::optional_internal::optional_data_base.25" = type { %"class.absl::optional_internal::optional_data_dtor_base.26" }
%"class.absl::optional_internal::optional_data_dtor_base.26" = type { i8, %union.anon.27 }
%union.anon.27 = type { %class.GURL }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.mojo::StructPtr.5"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.43, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.36", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.38" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.43 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.44" }>
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.45 }
%class.scoped_refptr.45 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.46", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.47" }
%"struct.std::__1::atomic.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl.50" }
%"struct.std::__1::__cxx_atomic_impl.50" = type { %"struct.std::__1::__cxx_atomic_base_impl.51" }
%"struct.std::__1::__cxx_atomic_base_impl.51" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.history_clusters::mojom::PageInterceptorForTesting" = type { %"class.history_clusters::mojom::Page" }
%"class.mojo::StructPtr.52" = type { %"class.std::__1::unique_ptr.53" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.history_clusters::mojom::MemoriesResult"* }
%"class.history_clusters::mojom::MemoriesResult" = type { %"class.absl::optional.56", %"class.absl::optional.23", %"class.std::__1::vector.61", i8, %"class.mojo::StructPtr" }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"*, %"class.std::__1::__compressed_pair.128" }
%"class.mojo::StructPtr.63" = type { %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.history_clusters::mojom::Memory"* }
%"class.history_clusters::mojom::Memory" = type { %"class.base::UnguessableToken", %"class.std::__1::vector", %"class.std::__1::vector.67", %"class.std::__1::vector.83", %"class.std::__1::vector.97", %"class.std::__1::vector.103", %"class.base::Time", double }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"class.std::__1::basic_string.69"*, %"class.std::__1::basic_string.69"*, %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::basic_string.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.72 }
%union.anon.72 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::basic_string.69"* }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"class.mojo::StructPtr.85"*, %"class.mojo::StructPtr.85"*, %"class.std::__1::__compressed_pair.92" }
%"class.mojo::StructPtr.85" = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.history_clusters::mojom::SearchQuery"* }
%"class.history_clusters::mojom::SearchQuery" = type { %"class.std::__1::basic_string", %class.GURL }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.mojo::StructPtr.85"* }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"*, %"class.std::__1::__compressed_pair.120" }
%"class.mojo::StructPtr.99" = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.history_clusters::mojom::TabGroup"* }
%"class.history_clusters::mojom::TabGroup" = type { %"class.base::Token", %"class.std::__1::basic_string", %"class.std::__1::vector.103" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.mojo::StructPtr.99"* }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"class.mojo::StructPtr.105"*, %"class.mojo::StructPtr.105"*, %"class.std::__1::__compressed_pair.112" }
%"class.mojo::StructPtr.105" = type { %"class.std::__1::unique_ptr.106" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.history_clusters::mojom::WebPage"* }
%"class.history_clusters::mojom::WebPage" = type { %class.GURL, %"class.std::__1::basic_string", %"class.absl::optional.23" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.mojo::StructPtr.105"* }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.mojo::StructPtr.63"* }

$_ZN16history_clusters5mojom11PageHandlerD2Ev = comdat any

$_ZN16history_clusters5mojom32PageHandlerInterceptorForTestingD0Ev = comdat any

$_ZN16history_clusters5mojom4PageD2Ev = comdat any

$_ZN16history_clusters5mojom25PageInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [13 x i8] c"RemoveVisits\00", align 1
@.str.1 = private unnamed_addr constant [66 x i8] c"gen/chrome/browser/ui/webui/memories/memories.mojom-test-utils.cc\00", align 1
@_ZTVN16history_clusters5mojom32PageHandlerInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.history_clusters::mojom::PageHandler"*)* @_ZN16history_clusters5mojom11PageHandlerD2Ev to i8*), i8* bitcast (void (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)* @_ZN16history_clusters5mojom32PageHandlerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*, %"class.mojo::PendingRemote"*)* @_ZN16history_clusters5mojom32PageHandlerInterceptorForTesting7SetPageEN4mojo13PendingRemoteINS0_4PageEEE to i8*), i8* bitcast (void (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*, %"class.mojo::StructPtr"*)* @_ZN16history_clusters5mojom32PageHandlerInterceptorForTesting13QueryMemoriesEN4mojo9StructPtrINS0_11QueryParamsEEE to i8*), i8* bitcast (void (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)* @_ZN16history_clusters5mojom32PageHandlerInterceptorForTesting12RemoveVisitsENSt3__16vectorIN4mojo9StructPtrINS0_5VisitEEENS2_9allocatorIS7_EEEEN4base12OnceCallbackIFvbEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN16history_clusters5mojom25PageInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.history_clusters::mojom::Page"*)* @_ZN16history_clusters5mojom4PageD2Ev to i8*), i8* bitcast (void (%"class.history_clusters::mojom::PageInterceptorForTesting"*)* @_ZN16history_clusters5mojom25PageInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.history_clusters::mojom::PageInterceptorForTesting"*, %"class.mojo::StructPtr.52"*)* @_ZN16history_clusters5mojom25PageInterceptorForTesting21OnMemoriesQueryResultEN4mojo9StructPtrINS0_14MemoriesResultEEE to i8*), i8* bitcast (void (%"class.history_clusters::mojom::PageInterceptorForTesting"*, %"class.std::__1::vector"*)* @_ZN16history_clusters5mojom25PageInterceptorForTesting15OnVisitsRemovedENSt3__16vectorIN4mojo9StructPtrINS0_5VisitEEENS2_9allocatorIS7_EEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN16history_clusters5mojom22PageHandlerAsyncWaiterC1EPNS0_11PageHandlerE = hidden unnamed_addr alias void (%"class.history_clusters::mojom::PageHandlerAsyncWaiter"*, %"class.history_clusters::mojom::PageHandler"*), void (%"class.history_clusters::mojom::PageHandlerAsyncWaiter"*, %"class.history_clusters::mojom::PageHandler"*)* @_ZN16history_clusters5mojom22PageHandlerAsyncWaiterC2EPNS0_11PageHandlerE
@_ZN16history_clusters5mojom22PageHandlerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.history_clusters::mojom::PageHandlerAsyncWaiter"*), void (%"class.history_clusters::mojom::PageHandlerAsyncWaiter"*)* @_ZN16history_clusters5mojom22PageHandlerAsyncWaiterD2Ev
@_ZN16history_clusters5mojom15PageAsyncWaiterC1EPNS0_4PageE = hidden unnamed_addr alias void (%"class.history_clusters::mojom::PageAsyncWaiter"*, %"class.history_clusters::mojom::Page"*), void (%"class.history_clusters::mojom::PageAsyncWaiter"*, %"class.history_clusters::mojom::Page"*)* @_ZN16history_clusters5mojom15PageAsyncWaiterC2EPNS0_4PageE
@_ZN16history_clusters5mojom15PageAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.history_clusters::mojom::PageAsyncWaiter"*), void (%"class.history_clusters::mojom::PageAsyncWaiter"*)* @_ZN16history_clusters5mojom15PageAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16history_clusters5mojom32PageHandlerInterceptorForTesting7SetPageEN4mojo13PendingRemoteINS0_4PageEEE(%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*, %"class.mojo::PendingRemote"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingRemote", align 4
  %4 = bitcast %"class.history_clusters::mojom::PageHandlerInterceptorForTesting"* %0 to %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)***
  %5 = load %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)**, %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)*, %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)*, %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.history_clusters::mojom::PageHandler"* %7(%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %9, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %10) #10
  %11 = bitcast %"class.history_clusters::mojom::PageHandler"* %8 to void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::PendingRemote"*)***
  %12 = load void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::PendingRemote"*)**, void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::PendingRemote"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::PendingRemote"*)*, void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::PendingRemote"*)** %12, i64 2
  %14 = load void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::PendingRemote"*)*, void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::PendingRemote"*)** %13, align 8
  call void %14(%"class.history_clusters::mojom::PageHandler"* %8, %"class.mojo::PendingRemote"* nonnull %3) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16history_clusters5mojom32PageHandlerInterceptorForTesting13QueryMemoriesEN4mojo9StructPtrINS0_11QueryParamsEEE(%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = bitcast %"class.history_clusters::mojom::PageHandlerInterceptorForTesting"* %0 to %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)***
  %5 = load %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)**, %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)*, %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)*, %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.history_clusters::mojom::PageHandler"* %7(%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.history_clusters::mojom::PageHandler"* %8 to void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::StructPtr"*)***
  %14 = load void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::StructPtr"*)**, void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::StructPtr"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::StructPtr"*)*, void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::StructPtr"*)** %14, i64 3
  %16 = load void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::StructPtr"*)*, void (%"class.history_clusters::mojom::PageHandler"*, %"class.mojo::StructPtr"*)** %15, align 8
  call void %16(%"class.history_clusters::mojom::PageHandler"* %8, %"class.mojo::StructPtr"* nonnull %3) #10
  %17 = load %"class.history_clusters::mojom::QueryParams"*, %"class.history_clusters::mojom::QueryParams"** %10, align 8
  store %"class.history_clusters::mojom::QueryParams"* null, %"class.history_clusters::mojom::QueryParams"** %10, align 8
  %18 = icmp eq %"class.history_clusters::mojom::QueryParams"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN16history_clusters5mojom11QueryParamsD1Ev(%"class.history_clusters::mojom::QueryParams"* nonnull %17) #10
  %20 = bitcast %"class.history_clusters::mojom::QueryParams"* %17 to i8*
  call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16history_clusters5mojom32PageHandlerInterceptorForTesting12RemoveVisitsENSt3__16vectorIN4mojo9StructPtrINS0_5VisitEEENS2_9allocatorIS7_EEEEN4base12OnceCallbackIFvbEEE(%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*, %"class.std::__1::vector"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 16
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.history_clusters::mojom::PageHandlerInterceptorForTesting"* %0 to %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)***
  %7 = load %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)**, %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)*, %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)** %7, i64 5
  %9 = load %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)*, %"class.history_clusters::mojom::PageHandler"* (%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.history_clusters::mojom::PageHandler"* %9(%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"* %0) #10
  %11 = bitcast %"class.std::__1::vector"* %1 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %14, align 16
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr.5"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.mojo::StructPtr.5"** %18 to i64*
  store i64 %17, i64* %19, align 16
  %20 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %25 = bitcast %"class.history_clusters::mojom::PageHandler"* %10 to void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)***
  %26 = load void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)**, void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)*, void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)** %26, i64 4
  %28 = load void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)*, void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)** %27, align 8
  call void %28(%"class.history_clusters::mojom::PageHandler"* %10, %"class.std::__1::vector"* nonnull %4, %"class.base::OnceCallback"* nonnull %5) #10
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #10
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %31 = load %"class.mojo::StructPtr.5"*, %"class.mojo::StructPtr.5"** %30, align 16
  %32 = icmp eq %"class.mojo::StructPtr.5"* %31, null
  br i1 %32, label %52, label %33

33:                                               ; preds = %3
  %34 = bitcast %"class.mojo::StructPtr.5"* %31 to i8*
  %35 = load %"class.mojo::StructPtr.5"*, %"class.mojo::StructPtr.5"** %13, align 8
  %36 = icmp eq %"class.mojo::StructPtr.5"* %35, %31
  br i1 %36, label %50, label %37

37:                                               ; preds = %33, %45
  %38 = phi %"class.mojo::StructPtr.5"* [ %39, %45 ], [ %35, %33 ]
  %39 = getelementptr inbounds %"class.mojo::StructPtr.5", %"class.mojo::StructPtr.5"* %38, i64 -1
  %40 = getelementptr inbounds %"class.mojo::StructPtr.5", %"class.mojo::StructPtr.5"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.history_clusters::mojom::Visit"*, %"class.history_clusters::mojom::Visit"** %40, align 8
  store %"class.history_clusters::mojom::Visit"* null, %"class.history_clusters::mojom::Visit"** %40, align 8
  %42 = icmp eq %"class.history_clusters::mojom::Visit"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  call void @_ZN16history_clusters5mojom5VisitD1Ev(%"class.history_clusters::mojom::Visit"* nonnull %41) #10
  %44 = bitcast %"class.history_clusters::mojom::Visit"* %41 to i8*
  call void @_ZdlPv(i8* %44) #11
  br label %45

45:                                               ; preds = %43, %37
  %46 = icmp eq %"class.mojo::StructPtr.5"* %39, %31
  br i1 %46, label %47, label %37

47:                                               ; preds = %45
  %48 = bitcast %"class.std::__1::vector"* %4 to i8**
  %49 = load i8*, i8** %48, align 16
  br label %50

50:                                               ; preds = %47, %33
  %51 = phi i8* [ %49, %47 ], [ %34, %33 ]
  store %"class.mojo::StructPtr.5"* %31, %"class.mojo::StructPtr.5"** %13, align 8
  call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %3, %50
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16history_clusters5mojom22PageHandlerAsyncWaiterC2EPNS0_11PageHandlerE(%"class.history_clusters::mojom::PageHandlerAsyncWaiter"* nocapture, %"class.history_clusters::mojom::PageHandler"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.history_clusters::mojom::PageHandlerAsyncWaiter", %"class.history_clusters::mojom::PageHandlerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.history_clusters::mojom::PageHandler"* %1, %"class.history_clusters::mojom::PageHandler"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN16history_clusters5mojom22PageHandlerAsyncWaiterD2Ev(%"class.history_clusters::mojom::PageHandlerAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16history_clusters5mojom22PageHandlerAsyncWaiter12RemoveVisitsENSt3__16vectorIN4mojo9StructPtrINS0_5VisitEEENS2_9allocatorIS7_EEEEPb(%"class.history_clusters::mojom::PageHandlerAsyncWaiter"* nocapture readonly, %"class.std::__1::vector"* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.std::__1::vector", align 16
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i8* %2 to i64
  %9 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %10 = getelementptr inbounds %"class.history_clusters::mojom::PageHandlerAsyncWaiter", %"class.history_clusters::mojom::PageHandlerAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.history_clusters::mojom::PageHandler"*, %"class.history_clusters::mojom::PageHandler"** %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %1 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector"* %5 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %15, align 16
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr.5"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.mojo::StructPtr.5"** %19 to i64*
  store i64 %18, i64* %20, align 16
  %21 = bitcast %"class.std::__1::vector"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  %22 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %23 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %24 = bitcast i8* %23 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %24, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN16history_clusters5mojom22PageHandlerAsyncWaiter12RemoveVisitsENSt3__16vectorIN4mojo9StructPtrINS4_5VisitEEENS6_9allocatorISB_EEEEPbE3$_0JPNS_7RunLoopESF_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN16history_clusters5mojom22PageHandlerAsyncWaiter12RemoveVisitsENSt3__16vectorIN4mojo9StructPtrINS3_5VisitEEENS5_9allocatorISA_EEEEPbE3$_0JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %25 = getelementptr inbounds i8, i8* %23, i64 40
  %26 = bitcast i8* %25 to i64*
  store i64 %22, i64* %26, align 8, !noalias !2
  %27 = getelementptr inbounds i8, i8* %23, i64 48
  %28 = bitcast i8* %27 to i64*
  store i64 %8, i64* %28, align 8, !noalias !2
  %29 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %23, i8** %29, align 8, !alias.scope !2
  %30 = bitcast %"class.history_clusters::mojom::PageHandler"* %11 to void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)***
  %31 = load void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)**, void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)*, void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)** %31, i64 4
  %33 = load void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)*, void (%"class.history_clusters::mojom::PageHandler"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)** %32, align 8
  call void %33(%"class.history_clusters::mojom::PageHandler"* %11, %"class.std::__1::vector"* nonnull %5, %"class.base::OnceCallback"* nonnull %6) #10
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #10
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %36 = load %"class.mojo::StructPtr.5"*, %"class.mojo::StructPtr.5"** %35, align 16
  %37 = icmp eq %"class.mojo::StructPtr.5"* %36, null
  br i1 %37, label %57, label %38

38:                                               ; preds = %3
  %39 = bitcast %"class.mojo::StructPtr.5"* %36 to i8*
  %40 = load %"class.mojo::StructPtr.5"*, %"class.mojo::StructPtr.5"** %14, align 8
  %41 = icmp eq %"class.mojo::StructPtr.5"* %40, %36
  br i1 %41, label %55, label %42

42:                                               ; preds = %38, %50
  %43 = phi %"class.mojo::StructPtr.5"* [ %44, %50 ], [ %40, %38 ]
  %44 = getelementptr inbounds %"class.mojo::StructPtr.5", %"class.mojo::StructPtr.5"* %43, i64 -1
  %45 = getelementptr inbounds %"class.mojo::StructPtr.5", %"class.mojo::StructPtr.5"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"class.history_clusters::mojom::Visit"*, %"class.history_clusters::mojom::Visit"** %45, align 8
  store %"class.history_clusters::mojom::Visit"* null, %"class.history_clusters::mojom::Visit"** %45, align 8
  %47 = icmp eq %"class.history_clusters::mojom::Visit"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %42
  call void @_ZN16history_clusters5mojom5VisitD1Ev(%"class.history_clusters::mojom::Visit"* nonnull %46) #10
  %49 = bitcast %"class.history_clusters::mojom::Visit"* %46 to i8*
  call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %48, %42
  %51 = icmp eq %"class.mojo::StructPtr.5"* %44, %36
  br i1 %51, label %52, label %42

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::vector"* %5 to i8**
  %54 = load i8*, i8** %53, align 16
  br label %55

55:                                               ; preds = %52, %38
  %56 = phi i8* [ %54, %52 ], [ %39, %38 ]
  store %"class.mojo::StructPtr.5"* %36, %"class.mojo::StructPtr.5"** %14, align 8
  call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %3, %55
  %58 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 59) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16history_clusters5mojom25PageInterceptorForTesting21OnMemoriesQueryResultEN4mojo9StructPtrINS0_14MemoriesResultEEE(%"class.history_clusters::mojom::PageInterceptorForTesting"*, %"class.mojo::StructPtr.52"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr.52", align 8
  %4 = bitcast %"class.history_clusters::mojom::PageInterceptorForTesting"* %0 to %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)***
  %5 = load %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)**, %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)*, %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)*, %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.history_clusters::mojom::Page"* %7(%"class.history_clusters::mojom::PageInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.mojo::StructPtr.52"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr.52", %"class.mojo::StructPtr.52"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr.52"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.history_clusters::mojom::Page"* %8 to void (%"class.history_clusters::mojom::Page"*, %"class.mojo::StructPtr.52"*)***
  %14 = load void (%"class.history_clusters::mojom::Page"*, %"class.mojo::StructPtr.52"*)**, void (%"class.history_clusters::mojom::Page"*, %"class.mojo::StructPtr.52"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.history_clusters::mojom::Page"*, %"class.mojo::StructPtr.52"*)*, void (%"class.history_clusters::mojom::Page"*, %"class.mojo::StructPtr.52"*)** %14, i64 2
  %16 = load void (%"class.history_clusters::mojom::Page"*, %"class.mojo::StructPtr.52"*)*, void (%"class.history_clusters::mojom::Page"*, %"class.mojo::StructPtr.52"*)** %15, align 8
  call void %16(%"class.history_clusters::mojom::Page"* %8, %"class.mojo::StructPtr.52"* nonnull %3) #10
  %17 = load %"class.history_clusters::mojom::MemoriesResult"*, %"class.history_clusters::mojom::MemoriesResult"** %10, align 8
  store %"class.history_clusters::mojom::MemoriesResult"* null, %"class.history_clusters::mojom::MemoriesResult"** %10, align 8
  %18 = icmp eq %"class.history_clusters::mojom::MemoriesResult"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN16history_clusters5mojom14MemoriesResultD1Ev(%"class.history_clusters::mojom::MemoriesResult"* nonnull %17) #10
  %20 = getelementptr inbounds %"class.history_clusters::mojom::MemoriesResult", %"class.history_clusters::mojom::MemoriesResult"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16history_clusters5mojom25PageInterceptorForTesting15OnVisitsRemovedENSt3__16vectorIN4mojo9StructPtrINS0_5VisitEEENS2_9allocatorIS7_EEEE(%"class.history_clusters::mojom::PageInterceptorForTesting"*, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 16
  %4 = bitcast %"class.history_clusters::mojom::PageInterceptorForTesting"* %0 to %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)***
  %5 = load %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)**, %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)*, %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)*, %"class.history_clusters::mojom::Page"* (%"class.history_clusters::mojom::PageInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.history_clusters::mojom::Page"* %7(%"class.history_clusters::mojom::PageInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.std::__1::vector"* %1 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %12, align 16
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.mojo::StructPtr.5"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr.5"** %16 to i64*
  store i64 %15, i64* %17, align 16
  %18 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #10
  %19 = bitcast %"class.history_clusters::mojom::Page"* %8 to void (%"class.history_clusters::mojom::Page"*, %"class.std::__1::vector"*)***
  %20 = load void (%"class.history_clusters::mojom::Page"*, %"class.std::__1::vector"*)**, void (%"class.history_clusters::mojom::Page"*, %"class.std::__1::vector"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.history_clusters::mojom::Page"*, %"class.std::__1::vector"*)*, void (%"class.history_clusters::mojom::Page"*, %"class.std::__1::vector"*)** %20, i64 3
  %22 = load void (%"class.history_clusters::mojom::Page"*, %"class.std::__1::vector"*)*, void (%"class.history_clusters::mojom::Page"*, %"class.std::__1::vector"*)** %21, align 8
  call void %22(%"class.history_clusters::mojom::Page"* %8, %"class.std::__1::vector"* nonnull %3) #10
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %24 = load %"class.mojo::StructPtr.5"*, %"class.mojo::StructPtr.5"** %23, align 16
  %25 = icmp eq %"class.mojo::StructPtr.5"* %24, null
  br i1 %25, label %45, label %26

26:                                               ; preds = %2
  %27 = bitcast %"class.mojo::StructPtr.5"* %24 to i8*
  %28 = load %"class.mojo::StructPtr.5"*, %"class.mojo::StructPtr.5"** %11, align 8
  %29 = icmp eq %"class.mojo::StructPtr.5"* %28, %24
  br i1 %29, label %43, label %30

30:                                               ; preds = %26, %38
  %31 = phi %"class.mojo::StructPtr.5"* [ %32, %38 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"class.mojo::StructPtr.5", %"class.mojo::StructPtr.5"* %31, i64 -1
  %33 = getelementptr inbounds %"class.mojo::StructPtr.5", %"class.mojo::StructPtr.5"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.history_clusters::mojom::Visit"*, %"class.history_clusters::mojom::Visit"** %33, align 8
  store %"class.history_clusters::mojom::Visit"* null, %"class.history_clusters::mojom::Visit"** %33, align 8
  %35 = icmp eq %"class.history_clusters::mojom::Visit"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  call void @_ZN16history_clusters5mojom5VisitD1Ev(%"class.history_clusters::mojom::Visit"* nonnull %34) #10
  %37 = bitcast %"class.history_clusters::mojom::Visit"* %34 to i8*
  call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %36, %30
  %39 = icmp eq %"class.mojo::StructPtr.5"* %32, %24
  br i1 %39, label %40, label %30

40:                                               ; preds = %38
  %41 = bitcast %"class.std::__1::vector"* %3 to i8**
  %42 = load i8*, i8** %41, align 16
  br label %43

43:                                               ; preds = %40, %26
  %44 = phi i8* [ %42, %40 ], [ %27, %26 ]
  store %"class.mojo::StructPtr.5"* %24, %"class.mojo::StructPtr.5"** %11, align 8
  call void @_ZdlPv(i8* %44) #11
  br label %45

45:                                               ; preds = %2, %43
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16history_clusters5mojom15PageAsyncWaiterC2EPNS0_4PageE(%"class.history_clusters::mojom::PageAsyncWaiter"* nocapture, %"class.history_clusters::mojom::Page"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.history_clusters::mojom::PageAsyncWaiter", %"class.history_clusters::mojom::PageAsyncWaiter"* %0, i64 0, i32 0
  store %"class.history_clusters::mojom::Page"* %1, %"class.history_clusters::mojom::Page"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN16history_clusters5mojom15PageAsyncWaiterD2Ev(%"class.history_clusters::mojom::PageAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16history_clusters5mojom11PageHandlerD2Ev(%"class.history_clusters::mojom::PageHandler"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16history_clusters5mojom32PageHandlerInterceptorForTestingD0Ev(%"class.history_clusters::mojom::PageHandlerInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16history_clusters5mojom4PageD2Ev(%"class.history_clusters::mojom::Page"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16history_clusters5mojom25PageInterceptorForTestingD0Ev(%"class.history_clusters::mojom::PageInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16history_clusters5mojom11QueryParamsD1Ev(%"class.history_clusters::mojom::QueryParams"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN16history_clusters5mojom14MemoriesResultD1Ev(%"class.history_clusters::mojom::MemoriesResult"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind
declare void @_ZN16history_clusters5mojom5VisitD1Ev(%"class.history_clusters::mojom::Visit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN16history_clusters5mojom22PageHandlerAsyncWaiter12RemoveVisitsENSt3__16vectorIN4mojo9StructPtrINS4_5VisitEEENS6_9allocatorISB_EEEEPbE3$_0JPNS_7RunLoopESF_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb"(%"class.base::internal::BindStateBase"* nocapture readonly, i1 zeroext) #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i8**
  %8 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %9 = load i8*, i8** %7, align 8
  store i8 %3, i8* %9, align 1
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %8) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN16history_clusters5mojom22PageHandlerAsyncWaiter12RemoveVisitsENSt3__16vectorIN4mojo9StructPtrINS3_5VisitEEENS5_9allocatorISA_EEEEPbE3$_0JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN16history_clusters5mojom22PageHandlerAsyncWaiter12RemoveVisitsENSt3__16vectorIN4mojo9StructPtrINS4_5VisitEEENS6_9allocatorISB_EEEEPbE3$_0JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN16history_clusters5mojom22PageHandlerAsyncWaiter12RemoveVisitsENSt3__16vectorIN4mojo9StructPtrINS4_5VisitEEENS6_9allocatorISB_EEEEPbE3$_0JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN16history_clusters5mojom22PageHandlerAsyncWaiter12RemoveVisitsENSt3__16vectorIN4mojo9StructPtrINS2_5VisitEEENS4_9allocatorIS9_EEEEPbE3$_0JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN16history_clusters5mojom22PageHandlerAsyncWaiter12RemoveVisitsENSt3__16vectorIN4mojo9StructPtrINS2_5VisitEEENS4_9allocatorIS9_EEEEPbE3$_0JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
