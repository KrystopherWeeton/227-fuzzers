; ModuleID = '../../gpu/ipc/service/gpu_memory_ablation_experiment.cc'
source_filename = "../../gpu/ipc/service/gpu_memory_ablation_experiment.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.gpu::GpuMemoryAblationExperiment" = type { %"class.gpu::MemoryTracker", i32, %"class.gfx::Size", %"class.std::__1::vector", %"class.base::flat_map", i64, %class.scoped_refptr, %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.275", %"class.gpu::GpuChannelManager"*, %class.scoped_refptr.17, %"class.base::WeakPtrFactory.454" }
%"class.gpu::MemoryTracker" = type { i32 (...)** }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"*, %"class.std::__1::__compressed_pair" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.gpu::Mailbox"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type { i32, i64 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%class.scoped_refptr = type { %"class.gpu::SharedContextState"* }
%"class.gpu::SharedContextState" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.gpu::GLContextVirtualDelegate", %"class.base::RefCounted", %"class.GrContextOptions::ShaderErrorHandler", i8, i8, i8, %"class.base::OnceCallback", i32, %"class.gpu::SharedContextState::MemoryTrackerObserver", %"class.gpu::SharedContextState::MemoryTracker", %"class.gpu::MemoryTypeTracker", %"class.viz::VulkanContextProvider"*, %"class.viz::MetalContextProvider"*, %"class.viz::DawnContextProvider"*, %class.GrDirectContext*, %class.scoped_refptr.90, %class.scoped_refptr.100, %class.scoped_refptr.100, %class.scoped_refptr.101, %"class.gl::GLSurface"*, %class.scoped_refptr.103, %"class.std::__1::unique_ptr.126", %"class.gl::ProgressReporter"*, %class.sk_sp.132, %"class.std::__1::unique_ptr.133", i64, %"class.std::__1::vector.139", %"class.gpu::raster::GrShaderCache"*, i8, %"class.absl::optional", [4 x i8], %"class.base::ObserverList", %"class.base::MRUCache", i8, %"class.base::Time", i8, %"class.std::__1::unique_ptr.211", %"class.base::WeakPtrFactory.217" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.gpu::GLContextVirtualDelegate" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gpu::SharedContextState::MemoryTrackerObserver" = type { %"class.gpu::MemoryTracker::Observer", i64, %"class.base::WeakPtr" }
%"class.gpu::MemoryTracker::Observer" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.11", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.12" }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%"class.gpu::SharedContextState::MemoryTracker" = type { %"class.gpu::MemoryTracker", %"class.util::IdType", i64, %"class.gpu::MemoryTracker::Observer"*, i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.gpu::MemoryTypeTracker" = type { %"class.gpu::MemoryTracker"*, i64, %"class.base::Lock", %class.scoped_refptr.17, %"class.base::WeakPtrFactory" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.viz::VulkanContextProvider" = type opaque
%"class.viz::MetalContextProvider" = type opaque
%"class.viz::DawnContextProvider" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.53", %class.sk_sp.59, %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.59 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.GrResourceCache* }
%class.GrResourceCache = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.scoped_refptr.90 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.91", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.91" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { i64 }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted.455", [4 x i8], %"class.base::SupportsWeakPtr.456", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.487", %"class.gl::RealGLApi"*, %class.scoped_refptr.90, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.493", %"class.std::__1::unique_ptr.120", i8, [7 x i8] }>
%"class.base::RefCounted.455" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr.456" = type { %"class.base::internal::WeakReferenceOwner" }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.303 }
%union.anon.303 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.472", %"class.std::__1::unique_ptr.478", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type opaque
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type opaque
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.gl::RealGLApi" = type opaque
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.gl::GLVersionInfo"* }
%class.scoped_refptr.100 = type { %"class.gl::GLContext"* }
%class.scoped_refptr.101 = type { %"class.gl::GLSurface"* }
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted.102", %"class.base::SupportsWeakPtr" }
%"class.base::RefCounted.102" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%class.scoped_refptr.103 = type { %"class.gpu::gles2::FeatureInfo"* }
%"class.gpu::gles2::FeatureInfo" = type { %"class.base::RefCounted.104", i8, [3 x i8], %"struct.gpu::gles2::Validators", %"struct.gpu::gles2::DisallowedFeatures", i32, i8, %"class.base::internal::flat_tree.112", %"struct.gpu::gles2::FeatureInfo::FeatureFlags", %"class.gpu::GpuDriverBugWorkarounds", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.120" }
%"class.base::RefCounted.104" = type { %"class.base::subtle::RefCountedBase" }
%"struct.gpu::gles2::Validators" = type <{ %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BackbufferAttachmentValidator", %"class.gpu::gles2::Validators::BlitFilterValidator", %"class.gpu::gles2::Validators::BufferModeValidator", %"class.gpu::gles2::Validators::BufferParameterValidator", %"class.gpu::gles2::Validators::BufferParameter64Validator", %"class.gpu::gles2::Validators::BufferTargetValidator", %"class.gpu::gles2::Validators::BufferUsageValidator", i8, %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BufferfvValidator", %"class.gpu::gles2::Validators::BufferivValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::CmpFunctionValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::DrawModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::FaceModeValidator", %"class.gpu::gles2::Validators::FaceTypeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::GetMaxIndexTypeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::HintModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::IndexedBufferTargetValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::InternalFormatParameterValidator", %"class.gpu::gles2::Validators::MapBufferAccessValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::PixelStoreAlignmentValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::QueryObjectParameterValidator", %"class.gpu::gles2::Validators::QueryTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ResetStatusValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ShaderPrecisionValidator", %"class.gpu::gles2::Validators::ShaderTypeValidator", %"class.gpu::gles2::Validators::SharedImageAccessModeValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::StencilOpValidator", %"class.gpu::gles2::Validators::StringTypeValidator", %"class.gpu::gles2::Validators::SwapBuffersFlagsValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::SyncParameterValidator", %"class.gpu::gles2::Validators::Texture3DTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureCompareFuncValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureMagFilterModeValidator", %"class.gpu::gles2::Validators::TextureMinFilterModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSwizzleValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureUsageValidator", %"class.gpu::gles2::Validators::TextureWrapModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator", %"class.gpu::gles2::Validators::UniformBlockParameterValidator", %"class.gpu::gles2::Validators::UniformParameterValidator", %"class.gpu::gles2::Validators::VertexAttribITypeValidator", [4 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::WindowRectanglesModeValidator", [7 x i8] }>
%"class.gpu::gles2::Validators::BackbufferAttachmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::BlitFilterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameter64Validator" = type { i8 }
%"class.gpu::gles2::Validators::BufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferfvValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferivValidator" = type { i8 }
%"class.gpu::gles2::Validators::CmpFunctionValidator" = type { i8 }
%"class.gpu::gles2::Validators::DrawModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::GetMaxIndexTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::HintModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::IndexedBufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::InternalFormatParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::MapBufferAccessValidator" = type { i8 }
%"class.gpu::gles2::Validators::PixelStoreAlignmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryObjectParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::ResetStatusValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderPrecisionValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SharedImageAccessModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::StencilOpValidator" = type { i8 }
%"class.gpu::gles2::Validators::StringTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SwapBuffersFlagsValidator" = type { i8 }
%"class.gpu::gles2::Validators::SyncParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::Texture3DTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureCompareFuncValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMagFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMinFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSwizzleValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureWrapModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformBlockParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::VertexAttribITypeValidator" = type { i8 }
%"class.gpu::ValueValidator" = type { %"class.std::__1::vector.105" }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { i32*, i32*, %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { i32* }
%"class.gpu::gles2::Validators::WindowRectanglesModeValidator" = type { i8 }
%"struct.gpu::gles2::DisallowedFeatures" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.base::internal::flat_tree.112" = type { %"class.std::__1::vector.113" }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.115" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.base::BasicStringPiece"* }
%"struct.gpu::gles2::FeatureInfo::FeatureFlags" = type <{ %"struct.gpu::GpuMemoryBufferFormatSet", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"struct.gpu::GpuMemoryBufferFormatSet" = type { i32 }
%"class.gpu::GpuDriverBugWorkarounds" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32 }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.gpu::gles2::ContextState"* }
%"struct.gpu::gles2::ContextState" = type opaque
%"class.gl::ProgressReporter" = type { i32 (...)** }
%class.sk_sp.132 = type { %class.GrDirectContext* }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.gpu::ServiceTransferCache"* }
%"class.gpu::ServiceTransferCache" = type opaque
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { i8*, i8*, %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { i8* }
%"class.gpu::raster::GrShaderCache" = type <{ %"class.GrContextOptions::PersistentCache", %"class.base::trace_event::MemoryDumpProvider", %"class.base::Lock", i64, i64, %"class.base::HashingMRUCache", %"class.gpu::raster::GrShaderCache::Client"*, %"class.base::internal::flat_tree.169", %"class.base::flat_map.177", i8, i8, [6 x i8] }>
%"class.base::HashingMRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::unordered_map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.146" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.150", %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.165", [4 x i8] }>
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152", %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { float }
%"class.gpu::raster::GrShaderCache::Client" = type { i32 (...)** }
%"class.base::internal::flat_tree.169" = type { %"class.std::__1::vector.170" }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { i32*, i32*, %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { i32* }
%"class.base::flat_map.177" = type { %"class.base::internal::flat_tree.178" }
%"class.base::internal::flat_tree.178" = type { %"class.std::__1::vector.179" }
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"struct.std::__1::pair.181"*, %"struct.std::__1::pair.181"*, %"class.std::__1::__compressed_pair.182" }
%"struct.std::__1::pair.181" = type opaque
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.std::__1::pair.181"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.187", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.189" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase.194" }
%"class.base::MRUCacheBase.194" = type { i32 (...)**, %"class.std::__1::list.195", %"class.std::__1::map", i64 }
%"class.std::__1::list.195" = type { %"class.std::__1::__list_imp.196" }
%"class.std::__1::__list_imp.196" = type { %"struct.std::__1::__list_node_base.197", %"class.std::__1::__compressed_pair.198" }
%"struct.std::__1::__list_node_base.197" = type { %"struct.std::__1::__list_node_base.197"*, %"struct.std::__1::__list_node_base.197"* }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.202" }
%"class.std::__1::__tree.202" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.gpu::ExternalSemaphorePool"* }
%"class.gpu::ExternalSemaphorePool" = type opaque
%"class.base::WeakPtrFactory.217" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.gpu::SharedImageFactory"* }
%"class.gpu::SharedImageFactory" = type { %"class.gpu::MailboxManager"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedContextState"*, %"class.std::__1::unique_ptr.239", i32, %"class.base::internal::flat_tree.245", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.266", %"class.gpu::SharedImageBackingFactory"* }
%"class.gpu::MailboxManager" = type { i32 (...)** }
%"class.gpu::SharedImageManager" = type <{ %"class.absl::optional.221", %"class.base::internal::flat_tree.230", i8, [7 x i8] }>
%"class.absl::optional.221" = type { %"class.absl::optional_internal::optional_data.222" }
%"class.absl::optional_internal::optional_data.222" = type { %"class.absl::optional_internal::optional_data_base.223" }
%"class.absl::optional_internal::optional_data_base.223" = type { %"class.absl::optional_internal::optional_data_dtor_base.224" }
%"class.absl::optional_internal::optional_data_dtor_base.224" = type { i8, %union.anon.225 }
%union.anon.225 = type { %"class.base::Lock" }
%"class.base::internal::flat_tree.230" = type { %"class.std::__1::vector.231" }
%"class.std::__1::vector.231" = type { %"class.std::__1::__vector_base.232" }
%"class.std::__1::__vector_base.232" = type { %"class.std::__1::unique_ptr.233"*, %"class.std::__1::unique_ptr.233"*, %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::unique_ptr.233" = type opaque
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::unique_ptr.233"* }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.gpu::MemoryTypeTracker"* }
%"class.base::internal::flat_tree.245" = type { %"class.std::__1::vector.246" }
%"class.std::__1::vector.246" = type { %"class.std::__1::__vector_base.247" }
%"class.std::__1::__vector_base.247" = type { %"class.std::__1::unique_ptr.248"*, %"class.std::__1::unique_ptr.248"*, %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::unique_ptr.248" = type opaque
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.std::__1::unique_ptr.248"* }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.gpu::SharedImageBackingFactoryGLTexture"* }
%"class.gpu::SharedImageBackingFactoryGLTexture" = type opaque
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.gpu::SharedImageBackingFactory"* }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.gpu::raster::WrappedSkImageFactory"* }
%"class.gpu::raster::WrappedSkImageFactory" = type opaque
%"class.gpu::SharedImageBackingFactory" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.gpu::SharedImageRepresentationFactory"* }
%"class.gpu::SharedImageRepresentationFactory" = type { %"class.gpu::SharedImageManager"*, %"class.std::__1::unique_ptr.239" }
%class.scoped_refptr.17 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtrFactory.454" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::GpuChannelManager" = type { %"class.gpu::raster::GrShaderCache::Client", %"class.base::flat_map.281", %class.scoped_refptr.291, %class.scoped_refptr.291, %"struct.gpu::GpuPreferences", %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuChannelManagerDelegate"*, %"class.gpu::GpuWatchdogThread"*, %class.scoped_refptr.90, %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.318", %"class.gpu::Scheduler"*, %"class.gpu::SyncPointManager"*, %"class.gpu::SharedImageManager"*, %"class.std::__1::unique_ptr.324", %"class.gpu::gles2::ShaderTranslatorCache", %"class.gpu::gles2::FramebufferCompletenessCache", %class.scoped_refptr.101, %"class.gpu::GpuMemoryBufferFactory"*, %"struct.gpu::GpuFeatureInfo", %"class.gpu::ServiceDiscardableManager", %"class.gpu::PassthroughDiscardableManager", %"class.gpu::ImageDecodeAcceleratorWorker"*, %"class.gpu::GpuProcessActivityFlags", %"class.base::MemoryPressureListener", %"class.absl::optional.413", %"class.absl::optional.418", %class.scoped_refptr, %"class.viz::VulkanContextProvider"*, %"class.viz::MetalContextProvider"*, %"class.viz::DawnContextProvider"*, %"class.gpu::GpuChannelManager::GpuPeakMemoryMonitor", %"class.base::TimeTicks", %"class.base::TimeDelta", i32, %"class.base::WeakPtrFactory.453" }
%"class.base::flat_map.281" = type { %"class.base::internal::flat_tree.282" }
%"class.base::internal::flat_tree.282" = type { %"class.std::__1::vector.283" }
%"class.std::__1::vector.283" = type { %"class.std::__1::__vector_base.284" }
%"class.std::__1::__vector_base.284" = type { %"struct.std::__1::pair.285"*, %"struct.std::__1::pair.285"*, %"class.std::__1::__compressed_pair.286" }
%"struct.std::__1::pair.285" = type opaque
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.std::__1::pair.285"* }
%class.scoped_refptr.291 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.18" }>
%"class.base::RefCountedThreadSafe.18" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.gpu::GpuPreferences" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::vector.292", i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.299", %"class.std::__1::vector.299", i8, i8, [2 x i8], i32, i8, i8, [6 x i8] }>
%"class.std::__1::vector.292" = type { %"class.std::__1::__vector_base.293" }
%"class.std::__1::__vector_base.293" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair.294" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.gfx::BufferUsageAndFormat"* }
%"class.std::__1::vector.299" = type { %"class.std::__1::__vector_base.300" }
%"class.std::__1::__vector_base.300" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.std::__1::basic_string"* }
%"class.gpu::GpuChannelManagerDelegate" = type opaque
%"class.gpu::GpuWatchdogThread" = type opaque
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.gpu::MailboxManager"* }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.gpu::gles2::Outputter"* }
%"class.gpu::gles2::Outputter" = type opaque
%"class.gpu::Scheduler" = type opaque
%"class.gpu::SyncPointManager" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.gpu::gles2::ProgramCache"* }
%"class.gpu::gles2::ProgramCache" = type opaque
%"class.gpu::gles2::ShaderTranslatorCache" = type { %"class.gpu::gles2::ShaderTranslator::DestructionObserver", %"struct.gpu::GpuPreferences", %"class.std::__1::map.330" }
%"class.gpu::gles2::ShaderTranslator::DestructionObserver" = type { i32 (...)** }
%"class.std::__1::map.330" = type { %"class.std::__1::__tree.331" }
%"class.std::__1::__tree.331" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.gpu::gles2::FramebufferCompletenessCache" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.341" }
%"class.std::__1::__hash_table.341" = type <{ %"class.std::__1::unique_ptr.342", %"class.std::__1::__compressed_pair.352", %"class.std::__1::__compressed_pair.357", %"class.std::__1::__compressed_pair.359", [4 x i8] }>
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344", %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.345"** }
%"struct.std::__1::__hash_node_base.345" = type { %"struct.std::__1::__hash_node_base.345"* }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.std::__1::__bucket_list_deallocator.347" }
%"class.std::__1::__bucket_list_deallocator.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"struct.std::__1::__hash_node_base.345" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"class.gpu::GpuMemoryBufferFactory" = type { i32 (...)** }
%"struct.gpu::GpuFeatureInfo" = type { [10 x i32], %"class.std::__1::vector.170", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.105", %"class.std::__1::vector.105", %"class.std::__1::vector.364" }
%"class.std::__1::vector.364" = type { %"class.std::__1::__vector_base.365" }
%"class.std::__1::__vector_base.365" = type { i32*, i32*, %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { i32* }
%"class.gpu::ServiceDiscardableManager" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::MRUCache.371", i64, i64 }
%"class.base::MRUCache.371" = type { %"class.base::MRUCacheBase.372" }
%"class.base::MRUCacheBase.372" = type { i32 (...)**, %"class.std::__1::list.373", %"class.std::__1::map.380", i64 }
%"class.std::__1::list.373" = type { %"class.std::__1::__list_imp.374" }
%"class.std::__1::__list_imp.374" = type { %"struct.std::__1::__list_node_base.375", %"class.std::__1::__compressed_pair.376" }
%"struct.std::__1::__list_node_base.375" = type { %"struct.std::__1::__list_node_base.375"*, %"struct.std::__1::__list_node_base.375"* }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.380" = type { %"class.std::__1::__tree.381" }
%"class.std::__1::__tree.381" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.382", %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.gpu::PassthroughDiscardableManager" = type { %"class.base::MRUCache.389", i64, i64 }
%"class.base::MRUCache.389" = type { %"class.base::MRUCacheBase.390" }
%"class.base::MRUCacheBase.390" = type { i32 (...)**, %"class.std::__1::list.391", %"class.std::__1::map.398", i64 }
%"class.std::__1::list.391" = type { %"class.std::__1::__list_imp.392" }
%"class.std::__1::__list_imp.392" = type { %"struct.std::__1::__list_node_base.393", %"class.std::__1::__compressed_pair.394" }
%"struct.std::__1::__list_node_base.393" = type { %"struct.std::__1::__list_node_base.393"*, %"struct.std::__1::__list_node_base.393"* }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::map.398" = type { %"class.std::__1::__tree.399" }
%"class.std::__1::__tree.399" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.400", %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.gpu::ImageDecodeAcceleratorWorker" = type opaque
%"class.gpu::GpuProcessActivityFlags" = type { %"class.gpu::ActivityFlagsBase" }
%"class.gpu::ActivityFlagsBase" = type { %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.409" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { i8* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.absl::optional.413" = type { %"class.absl::optional_internal::optional_data.414" }
%"class.absl::optional_internal::optional_data.414" = type { %"class.absl::optional_internal::optional_data_base.415" }
%"class.absl::optional_internal::optional_data_base.415" = type { %"class.absl::optional_internal::optional_data_dtor_base.416" }
%"class.absl::optional_internal::optional_data_dtor_base.416" = type { i8, [7 x i8], %union.anon.417 }
%union.anon.417 = type { %"class.gpu::raster::GrShaderCache" }
%"class.absl::optional.418" = type { %"class.absl::optional_internal::optional_data.419" }
%"class.absl::optional_internal::optional_data.419" = type { %"class.absl::optional_internal::optional_data_base.420" }
%"class.absl::optional_internal::optional_data_base.420" = type { %"class.absl::optional_internal::optional_data_dtor_base.421" }
%"class.absl::optional_internal::optional_data_dtor_base.421" = type { i8, %union.anon.422 }
%union.anon.422 = type { %"class.gpu::raster::GrCacheController" }
%"class.gpu::raster::GrCacheController" = type { i64, %"class.base::internal::CancelableCallbackImpl", %"class.gpu::SharedContextState"*, %class.scoped_refptr.291 }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.423", %"class.base::WeakPtrFactory.424" }
%"class.base::OnceCallback.423" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.424" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::GpuChannelManager::GpuPeakMemoryMonitor" = type { %"class.gpu::MemoryTracker::Observer", %"class.base::flat_map.425", i64, %"class.base::flat_map.435", %"class.std::__1::unique_ptr.445", %"class.base::WeakPtrFactory.451" }
%"class.base::flat_map.425" = type { %"class.base::internal::flat_tree.426" }
%"class.base::internal::flat_tree.426" = type { %"class.std::__1::vector.427" }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.std::__1::pair.429"*, %"struct.std::__1::pair.429"*, %"class.std::__1::__compressed_pair.430" }
%"struct.std::__1::pair.429" = type opaque
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"struct.std::__1::pair.429"* }
%"class.base::flat_map.435" = type { %"class.base::internal::flat_tree.436" }
%"class.base::internal::flat_tree.436" = type { %"class.std::__1::vector.437" }
%"class.std::__1::vector.437" = type { %"class.std::__1::__vector_base.438" }
%"class.std::__1::__vector_base.438" = type { %"struct.std::__1::pair.439"*, %"struct.std::__1::pair.439"*, %"class.std::__1::__compressed_pair.440" }
%"struct.std::__1::pair.439" = type opaque
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"struct.std::__1::pair.439"* }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.gpu::GpuMemoryAblationExperiment"* }
%"class.base::WeakPtrFactory.451" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.452" }
%"class.base::time_internal::TimeBase.452" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::WeakPtrFactory.453" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.18", [4 x i8] }>
%"class.base::WeakPtr.499" = type { %"class.base::internal::WeakPtrBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.ui::ScopedMakeCurrent" = type <{ %class.scoped_refptr.100, %class.scoped_refptr.101, %class.scoped_refptr.100, %class.scoped_refptr.101, i8, [7 x i8] }>
%"class.gpu::ImageFactory" = type opaque
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gpu::SharedImageRepresentationSkia" = type { %"class.gpu::SharedImageRepresentation.base", [6 x i8] }
%"class.gpu::SharedImageRepresentation.base" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8 }>
%"class.gpu::SharedImageBacking" = type { i32 (...)**, %"class.absl::optional.221", %"struct.gpu::Mailbox", i32, %"class.gfx::Size", %"class.gfx::ColorSpace", i32, i32, i32, i64, %"class.gpu::SharedImageFactory"*, i8, %"class.absl::optional.511", %"class.std::__1::vector.516" }
%"class.absl::optional.511" = type { %"class.absl::optional_internal::optional_data.512" }
%"class.absl::optional_internal::optional_data.512" = type { %"class.absl::optional_internal::optional_data_base.513" }
%"class.absl::optional_internal::optional_data_base.513" = type { %"class.absl::optional_internal::optional_data_dtor_base.514" }
%"class.absl::optional_internal::optional_data_dtor_base.514" = type { i8, %union.anon.515 }
%union.anon.515 = type { %"class.gpu::SharedImageBacking::ScopedWriteUMA" }
%"class.gpu::SharedImageBacking::ScopedWriteUMA" = type { i8 }
%"class.std::__1::vector.516" = type { %"class.std::__1::__vector_base.517" }
%"class.std::__1::__vector_base.517" = type { %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"**, %"class.std::__1::__compressed_pair.518" }
%"class.gpu::SharedImageRepresentation" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.gpu::SharedImageRepresentation"** }
%"class.gpu::SharedImageRepresentationSkia::ScopedWriteAccess" = type { %"class.gpu::SharedImageRepresentation::ScopedAccessBase", %class.sk_sp.529, %class.sk_sp.530, %"class.std::__1::unique_ptr.531" }
%"class.gpu::SharedImageRepresentation::ScopedAccessBase" = type { %"class.gpu::SharedImageRepresentationSkia"* }
%class.sk_sp.529 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.sk_sp.530 = type { %class.SkPromiseImageTexture* }
%class.SkPromiseImageTexture = type opaque
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %class.GrBackendSurfaceMutableState* }
%class.GrBackendSurfaceMutableState = type <{ %union.anon.534, i32, i8, [3 x i8] }>
%union.anon.534 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.535", %"struct.std::__1::atomic.539" }
%"struct.std::__1::atomic.535" = type { %"struct.std::__1::__atomic_base.536" }
%"struct.std::__1::__atomic_base.536" = type { %"struct.std::__1::__cxx_atomic_impl.537" }
%"struct.std::__1::__cxx_atomic_impl.537" = type { %"struct.std::__1::__cxx_atomic_base_impl.538" }
%"struct.std::__1::__cxx_atomic_base_impl.538" = type { i32 }
%"struct.std::__1::atomic.539" = type { %"struct.std::__1::__atomic_base.540" }
%"struct.std::__1::__atomic_base.540" = type { %"struct.std::__1::__atomic_base.541" }
%"struct.std::__1::__atomic_base.541" = type { %"struct.std::__1::__cxx_atomic_impl.542" }
%"struct.std::__1::__cxx_atomic_impl.542" = type { %"struct.std::__1::__cxx_atomic_base_impl.543" }
%"struct.std::__1::__cxx_atomic_base_impl.543" = type { i32 }
%"class.std::__1::vector.550" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.551, [384 x i64], %class.sk_sp.552, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.553", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.559" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.551 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.552 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.std::__1::allocator.6"* }
%"class.std::__1::allocator.6" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN3gpu27GpuMemoryAblationExperimentEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3gpu27GpuMemoryAblationExperimentEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3gpu27GpuMemoryAblationExperimentEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZNSt3__16vectorINS_4pairIjmEENS_9allocatorIS2_EEE7emplaceIJS2_EEENS_11__wrap_iterIPS2_EENS7_IPKS2_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIjmEERNS_9allocatorIS2_EEE12emplace_backIJS2_EEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [18 x i8] c"GPUMemoryAblation\00", align 1
@_ZN3gpu25kGPUMemoryAblationFeatureE = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i32 0, i32 0), i32 0 }, align 8
@_ZTVN3gpu27GpuMemoryAblationExperimentE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::GpuMemoryAblationExperiment"*)* @_ZN3gpu27GpuMemoryAblationExperimentD2Ev to i8*), i8* bitcast (void (%"class.gpu::GpuMemoryAblationExperiment"*)* @_ZN3gpu27GpuMemoryAblationExperimentD0Ev to i8*), i8* bitcast (void (%"class.gpu::GpuMemoryAblationExperiment"*, i64)* @_ZN3gpu27GpuMemoryAblationExperiment26TrackMemoryAllocatedChangeEl to i8*), i8* bitcast (i64 (%"class.gpu::GpuMemoryAblationExperiment"*)* @_ZNK3gpu27GpuMemoryAblationExperiment7GetSizeEv to i8*), i8* bitcast (i32 (%"class.gpu::GpuMemoryAblationExperiment"*)* @_ZNK3gpu27GpuMemoryAblationExperiment8ClientIdEv to i8*), i8* bitcast (i64 (%"class.gpu::GpuMemoryAblationExperiment"*)* @_ZNK3gpu27GpuMemoryAblationExperiment15ClientTracingIdEv to i8*), i8* bitcast (i64 (%"class.gpu::GpuMemoryAblationExperiment"*)* @_ZNK3gpu27GpuMemoryAblationExperiment21ContextGroupTracingIdEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [18 x i8] c"OnMemoryAllocated\00", align 1
@.str.2 = private unnamed_addr constant [56 x i8] c"../../gpu/ipc/service/gpu_memory_ablation_experiment.cc\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN3gpu27GpuMemoryAblationExperimentC1EPNS_17GpuChannelManagerE13scoped_refptrIN4base19SequencedTaskRunnerEE = hidden unnamed_addr alias void (%"class.gpu::GpuMemoryAblationExperiment"*, %"class.gpu::GpuChannelManager"*, %"class.base::SequencedTaskRunner"*), void (%"class.gpu::GpuMemoryAblationExperiment"*, %"class.gpu::GpuChannelManager"*, %"class.base::SequencedTaskRunner"*)* @_ZN3gpu27GpuMemoryAblationExperimentC2EPNS_17GpuChannelManagerE13scoped_refptrIN4base19SequencedTaskRunnerEE
@_ZN3gpu27GpuMemoryAblationExperimentD1Ev = hidden unnamed_addr alias void (%"class.gpu::GpuMemoryAblationExperiment"*), void (%"class.gpu::GpuMemoryAblationExperiment"*)* @_ZN3gpu27GpuMemoryAblationExperimentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu27GpuMemoryAblationExperiment19ExperimentSupportedEv() local_unnamed_addr #0 align 2 {
  %1 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3gpu25kGPUMemoryAblationFeatureE) #10
  br i1 %1, label %2, label %10

2:                                                ; preds = %0
  %3 = tail call i32 @_ZN2gl19GetGLImplementationEv() #10
  %4 = icmp ult i32 %3, 9
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = trunc i32 %3 to i9
  %7 = lshr i9 62, %6
  %8 = and i9 %7, 1
  %9 = icmp ne i9 %8, 0
  ret i1 %9

10:                                               ; preds = %2, %0
  %11 = phi i1 [ false, %0 ], [ true, %2 ]
  ret i1 %11
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN2gl19GetGLImplementationEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu27GpuMemoryAblationExperimentC2EPNS_17GpuChannelManagerE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.gpu::GpuMemoryAblationExperiment"*, %"class.gpu::GpuChannelManager"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3gpu27GpuMemoryAblationExperimentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 2, i32 1
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 9
  %10 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 80, i1 false)
  store %"class.gpu::GpuChannelManager"* %1, %"class.gpu::GpuChannelManager"** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 10, i32 0
  store %"class.base::SequencedTaskRunner"* %2, %"class.base::SequencedTaskRunner"** %11, align 8
  %12 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %3, %13
  %17 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 11, i32 0
  %18 = ptrtoint %"class.gpu::GpuMemoryAblationExperiment"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %17, i64 %18) #10
  %19 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3gpu25kGPUMemoryAblationFeatureE) #10
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = tail call i32 @_ZN2gl19GetGLImplementationEv() #10
  switch i32 %21, label %23 [
    i32 8, label %22
    i32 7, label %22
    i32 6, label %22
    i32 0, label %22
  ]

22:                                               ; preds = %16, %20, %20, %20, %20
  store i32 2, i32* %5, align 8
  br label %23

23:                                               ; preds = %20, %22
  br i1 %12, label %32, label %24

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.18", %"class.base::RefCountedThreadSafe.18"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.18", %"class.base::RefCountedThreadSafe.18"* %25, i64 -2
  %31 = bitcast %"class.base::RefCountedThreadSafe.18"* %30 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %31) #10
  br label %32

32:                                               ; preds = %23, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu27GpuMemoryAblationExperimentD2Ev(%"class.gpu::GpuMemoryAblationExperiment"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3gpu27GpuMemoryAblationExperimentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %3, align 8
  %5 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %5, align 8
  %7 = icmp eq %"struct.gpu::Mailbox"* %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 6, i32 0
  %10 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %10, i64 0, i32 19, i32 0
  %12 = load %"class.gl::GLSurface"*, %"class.gl::GLSurface"** %11, align 8
  %13 = tail call zeroext i1 @_ZN3gpu18SharedContextState11MakeCurrentEPN2gl9GLSurfaceEb(%"class.gpu::SharedContextState"* %10, %"class.gl::GLSurface"* %12, i1 zeroext false) #10
  %14 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %15 = load %"class.gpu::SharedImageFactory"*, %"class.gpu::SharedImageFactory"** %14, align 8
  tail call void @_ZN3gpu18SharedImageFactory22DestroyAllSharedImagesEb(%"class.gpu::SharedImageFactory"* %15, i1 zeroext %13) #10
  br label %16

16:                                               ; preds = %1, %8
  %17 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 11, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %17) #10
  %18 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 10, i32 0
  %19 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %18, align 8
  %20 = icmp eq %"class.base::SequencedTaskRunner"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %19, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.18", %"class.base::RefCountedThreadSafe.18"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe.18", %"class.base::RefCountedThreadSafe.18"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe.18"* %27 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %28) #10
  br label %29

29:                                               ; preds = %16, %21, %26
  %30 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %31 = load %"class.gpu::SharedImageRepresentationFactory"*, %"class.gpu::SharedImageRepresentationFactory"** %30, align 8
  store %"class.gpu::SharedImageRepresentationFactory"* null, %"class.gpu::SharedImageRepresentationFactory"** %30, align 8
  %32 = icmp eq %"class.gpu::SharedImageRepresentationFactory"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  tail call void @_ZN3gpu32SharedImageRepresentationFactoryD1Ev(%"class.gpu::SharedImageRepresentationFactory"* nonnull %31) #10
  %34 = bitcast %"class.gpu::SharedImageRepresentationFactory"* %31 to i8*
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %37 = load %"class.gpu::SharedImageFactory"*, %"class.gpu::SharedImageFactory"** %36, align 8
  store %"class.gpu::SharedImageFactory"* null, %"class.gpu::SharedImageFactory"** %36, align 8
  %38 = icmp eq %"class.gpu::SharedImageFactory"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  tail call void @_ZN3gpu18SharedImageFactoryD1Ev(%"class.gpu::SharedImageFactory"* nonnull %37) #10
  %40 = bitcast %"class.gpu::SharedImageFactory"* %37 to i8*
  tail call void @_ZdlPv(i8* %40) #11
  br label %41

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 6, i32 0
  %43 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %42, align 8
  %44 = icmp eq %"class.gpu::SharedContextState"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %43, i64 0, i32 2
  %47 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %46, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %47) #10
  %48 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %46, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %58

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %46, i64 -4
  %53 = bitcast %"class.base::RefCounted"* %52 to %"class.gpu::SharedContextState"*
  %54 = bitcast %"class.base::RefCounted"* %52 to void (%"class.gpu::SharedContextState"*)***
  %55 = load void (%"class.gpu::SharedContextState"*)**, void (%"class.gpu::SharedContextState"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %55, i64 1
  %57 = load void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %56, align 8
  tail call void %57(%"class.gpu::SharedContextState"* nonnull %53) #10
  br label %58

58:                                               ; preds = %41, %45, %51
  %59 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %59, align 8
  %61 = icmp eq %"struct.std::__1::pair"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = ptrtoint %"struct.std::__1::pair"* %60 to i64
  %64 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast %"struct.std::__1::pair"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast %"struct.std::__1::pair"* %60 to i8*
  tail call void @_ZdlPv(i8* %66) #11
  br label %67

67:                                               ; preds = %58, %62
  %68 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %3, align 8
  %69 = icmp eq %"struct.gpu::Mailbox"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = ptrtoint %"struct.gpu::Mailbox"* %68 to i64
  %72 = bitcast %"struct.gpu::Mailbox"** %5 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %68, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %73) #11
  br label %74

74:                                               ; preds = %67, %70
  ret void
}

declare zeroext i1 @_ZN3gpu18SharedContextState11MakeCurrentEPN2gl9GLSurfaceEb(%"class.gpu::SharedContextState"*, %"class.gl::GLSurface"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN3gpu18SharedImageFactory22DestroyAllSharedImagesEb(%"class.gpu::SharedImageFactory"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu27GpuMemoryAblationExperimentD0Ev(%"class.gpu::GpuMemoryAblationExperiment"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu27GpuMemoryAblationExperimentD2Ev(%"class.gpu::GpuMemoryAblationExperiment"* %0) #10
  %2 = bitcast %"class.gpu::GpuMemoryAblationExperiment"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu27GpuMemoryAblationExperiment17OnMemoryAllocatedEmm(%"class.gpu::GpuMemoryAblationExperiment"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback.423", align 8
  %7 = alloca %"class.base::WeakPtr.499", align 8
  %8 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %34 [
    i32 2, label %70
    i32 0, label %10
  ]

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 9
  %12 = load %"class.gpu::GpuChannelManager"*, %"class.gpu::GpuChannelManager"** %11, align 8
  %13 = tail call zeroext i1 @_ZN3gpu27GpuMemoryAblationExperiment7InitGpuEPNS_17GpuChannelManagerE(%"class.gpu::GpuMemoryAblationExperiment"* %0, %"class.gpu::GpuChannelManager"* %12)
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i32 1, i32* %8, align 8
  br label %34

15:                                               ; preds = %10
  store i32 2, i32* %8, align 8
  %16 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 6
  %17 = bitcast %class.scoped_refptr* %16 to i64*
  %18 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 0, i32 0
  %19 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %18, align 8
  store i64 0, i64* %17, align 8
  %20 = icmp eq %"class.gpu::SharedContextState"* %19, null
  br i1 %20, label %70, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %19, i64 0, i32 2
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %22, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #10
  %24 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %22, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %70

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %22, i64 -4
  %29 = bitcast %"class.base::RefCounted"* %28 to %"class.gpu::SharedContextState"*
  %30 = bitcast %"class.base::RefCounted"* %28 to void (%"class.gpu::SharedContextState"*)***
  %31 = load void (%"class.gpu::SharedContextState"*)**, void (%"class.gpu::SharedContextState"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %31, i64 1
  %33 = load void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %32, align 8
  tail call void %33(%"class.gpu::SharedContextState"* nonnull %29) #10
  br label %70

34:                                               ; preds = %3, %14
  %35 = icmp ugt i64 %2, %1
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  tail call void @_ZN3gpu27GpuMemoryAblationExperiment17AllocateGpuMemoryEv(%"class.gpu::GpuMemoryAblationExperiment"* %0)
  br label %70

37:                                               ; preds = %34
  %38 = icmp ugt i64 %1, %2
  br i1 %38, label %39, label %70

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 3, i32 0, i32 0
  %41 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %40, align 8
  %42 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 3, i32 0, i32 1
  %43 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %42, align 8
  %44 = icmp eq %"struct.gpu::Mailbox"* %41, %43
  br i1 %44, label %70, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 10, i32 0
  %47 = bitcast %"class.base::SequencedTaskRunner"** %46 to %"class.base::TaskRunner"**
  %48 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %47, align 8
  %49 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2, i64 0, i64 0), i32 104) #10
  %50 = bitcast %"class.base::WeakPtr.499"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #10
  %51 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10, !noalias !2
  %52 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 11, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %52) #10, !noalias !2
  %53 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 11, i32 0, i32 1
  %54 = load i64, i64* %53, align 8, !noalias !2
  %55 = getelementptr inbounds %"class.base::WeakPtr.499", %"class.base::WeakPtr.499"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %55, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %54) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10, !noalias !2
  %56 = call i8* @_Znwm(i64 64) #11, !noalias !5
  %57 = bitcast i8* %56 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %57, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3gpu27GpuMemoryAblationExperimentEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3gpu27GpuMemoryAblationExperimentEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3gpu27GpuMemoryAblationExperimentEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #10, !noalias !5
  %58 = getelementptr inbounds i8, i8* %56, i64 32
  %59 = bitcast i8* %58 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.gpu::GpuMemoryAblationExperiment"*)* @_ZN3gpu27GpuMemoryAblationExperiment15DeleteGpuMemoryEv to i64), i64 0>, <2 x i64>* %59, align 8, !noalias !5
  %60 = getelementptr inbounds i8, i8* %56, i64 48
  %61 = bitcast i8* %60 to %"class.base::internal::WeakReference"*
  %62 = getelementptr inbounds %"class.base::WeakPtr.499", %"class.base::WeakPtr.499"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %61, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %62) #10, !noalias !5
  %63 = getelementptr inbounds i8, i8* %56, i64 56
  %64 = bitcast i8* %63 to i64*
  %65 = getelementptr inbounds %"class.base::WeakPtr.499", %"class.base::WeakPtr.499"* %7, i64 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8, !noalias !5
  store i64 %66, i64* %64, align 8, !noalias !5
  %67 = bitcast %"class.base::OnceCallback.423"* %6 to i8**
  store i8* %56, i8** %67, align 8, !alias.scope !5
  %68 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %48, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback.423"* nonnull %6) #10
  %69 = getelementptr inbounds %"class.base::OnceCallback.423", %"class.base::OnceCallback.423"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %69) #10
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %55) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #10
  br label %70

70:                                               ; preds = %27, %21, %15, %3, %37, %45, %39, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu27GpuMemoryAblationExperiment7InitGpuEPNS_17GpuChannelManagerE(%"class.gpu::GpuMemoryAblationExperiment"*, %"class.gpu::GpuChannelManager"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 -1431655766, i32* %3, align 4
  %6 = call %"class.gpu::SharedContextState"* @_ZN3gpu17GpuChannelManager21GetSharedContextStateEPNS_13ContextResultE(%"class.gpu::GpuChannelManager"* %1, i32* nonnull %3) #10
  %7 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 6
  %8 = ptrtoint %"class.gpu::SharedContextState"* %6 to i64
  %9 = bitcast %class.scoped_refptr* %7 to i64*
  %10 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 0, i32 0
  %11 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %10, align 8
  store i64 %8, i64* %9, align 8
  %12 = icmp eq %"class.gpu::SharedContextState"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %11, i64 0, i32 2
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %15) #10
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 -4
  %21 = bitcast %"class.base::RefCounted"* %20 to %"class.gpu::SharedContextState"*
  %22 = bitcast %"class.base::RefCounted"* %20 to void (%"class.gpu::SharedContextState"*)***
  %23 = load void (%"class.gpu::SharedContextState"*)**, void (%"class.gpu::SharedContextState"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %23, i64 1
  %25 = load void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %24, align 8
  call void %25(%"class.gpu::SharedContextState"* nonnull %21) #10
  br label %26

26:                                               ; preds = %2, %13, %19
  %27 = load i32, i32* %3, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %117

29:                                               ; preds = %26
  %30 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10
  %31 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 4, i8* %32, align 1
  %33 = bitcast %"class.std::__1::basic_string"* %4 to i32*
  store i32 1702521171, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 4
  store i8 0, i8* %34, align 4
  %35 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3gpu25kGPUMemoryAblationFeatureE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 0) #10
  %36 = load i8, i8* %32, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #11
  br label %41

41:                                               ; preds = %29, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  %42 = icmp eq i32 %35, 0
  br i1 %42, label %117, label %43

43:                                               ; preds = %41
  %44 = shl nsw i32 %35, 8
  %45 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %10, align 8
  %46 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %45, i64 0, i32 15
  %47 = load %class.GrDirectContext*, %class.GrDirectContext** %46, align 8
  %48 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %47, i64 0, i32 0
  %49 = call i32 @_ZNK18GrRecordingContext14maxTextureSizeEv(%class.GrRecordingContext* %48) #10
  %50 = icmp slt i32 %49, %44
  %51 = select i1 %50, i32 %49, i32 %44
  %52 = icmp sgt i32 %51, 0
  %53 = select i1 %52, i32 %51, i32 0
  %54 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 2
  %55 = bitcast %"class.gfx::Size"* %54 to i64*
  %56 = zext i32 %53 to i64
  %57 = shl nuw nsw i64 %56, 32
  %58 = or i64 %57, %56
  store i64 %58, i64* %55, align 4
  %59 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 6, i32 0
  %60 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %59, align 8
  %61 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %60, i64 0, i32 17, i32 0
  %62 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %61, align 8
  %63 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %60, i64 0, i32 19, i32 0
  %64 = load %"class.gl::GLSurface"*, %"class.gl::GLSurface"** %63, align 8
  %65 = call i8* @_Znwm(i64 40) #11
  %66 = bitcast i8* %65 to %"class.ui::ScopedMakeCurrent"*
  call void @_ZN2ui17ScopedMakeCurrentC1EPN2gl9GLContextEPNS1_9GLSurfaceE(%"class.ui::ScopedMakeCurrent"* nonnull %66, %"class.gl::GLContext"* %62, %"class.gl::GLSurface"* %64) #10
  %67 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %59, align 8
  %68 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %67, i64 0, i32 19, i32 0
  %69 = load %"class.gl::GLSurface"*, %"class.gl::GLSurface"** %68, align 8
  %70 = call zeroext i1 @_ZN3gpu18SharedContextState9IsCurrentEPN2gl9GLSurfaceEb(%"class.gpu::SharedContextState"* %67, %"class.gl::GLSurface"* %69, i1 zeroext false) #10
  br i1 %70, label %72, label %71

71:                                               ; preds = %43
  call void @_ZN2ui17ScopedMakeCurrentD1Ev(%"class.ui::ScopedMakeCurrent"* nonnull %66) #10
  call void @_ZdlPv(i8* nonnull %65) #11
  br label %117

72:                                               ; preds = %43
  %73 = getelementptr inbounds %"class.gpu::GpuChannelManager", %"class.gpu::GpuChannelManager"* %1, i64 0, i32 18
  %74 = load %"class.gpu::GpuMemoryBufferFactory"*, %"class.gpu::GpuMemoryBufferFactory"** %73, align 8
  %75 = getelementptr inbounds %"class.gpu::GpuChannelManager", %"class.gpu::GpuChannelManager"* %1, i64 0, i32 4
  %76 = getelementptr inbounds %"class.gpu::GpuChannelManager", %"class.gpu::GpuChannelManager"* %1, i64 0, i32 5
  %77 = getelementptr inbounds %"class.gpu::GpuChannelManager", %"class.gpu::GpuChannelManager"* %1, i64 0, i32 19
  %78 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %10, align 8
  %79 = getelementptr inbounds %"class.gpu::GpuChannelManager", %"class.gpu::GpuChannelManager"* %1, i64 0, i32 9, i32 0, i32 0, i32 0
  %80 = load %"class.gpu::MailboxManager"*, %"class.gpu::MailboxManager"** %79, align 8
  %81 = getelementptr inbounds %"class.gpu::GpuChannelManager", %"class.gpu::GpuChannelManager"* %1, i64 0, i32 13
  %82 = load %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageManager"** %81, align 8
  %83 = icmp eq %"class.gpu::GpuMemoryBufferFactory"* %74, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %72
  %85 = bitcast %"class.gpu::GpuMemoryBufferFactory"* %74 to %"class.gpu::ImageFactory"* (%"class.gpu::GpuMemoryBufferFactory"*)***
  %86 = load %"class.gpu::ImageFactory"* (%"class.gpu::GpuMemoryBufferFactory"*)**, %"class.gpu::ImageFactory"* (%"class.gpu::GpuMemoryBufferFactory"*)*** %85, align 8
  %87 = getelementptr inbounds %"class.gpu::ImageFactory"* (%"class.gpu::GpuMemoryBufferFactory"*)*, %"class.gpu::ImageFactory"* (%"class.gpu::GpuMemoryBufferFactory"*)** %86, i64 6
  %88 = load %"class.gpu::ImageFactory"* (%"class.gpu::GpuMemoryBufferFactory"*)*, %"class.gpu::ImageFactory"* (%"class.gpu::GpuMemoryBufferFactory"*)** %87, align 8
  %89 = call %"class.gpu::ImageFactory"* %88(%"class.gpu::GpuMemoryBufferFactory"* nonnull %74) #10
  br label %90

90:                                               ; preds = %72, %84
  %91 = phi %"class.gpu::ImageFactory"* [ %89, %84 ], [ null, %72 ]
  %92 = call zeroext i1 @_ZN8features19IsUsingSkiaRendererEv() #10
  %93 = call i8* @_Znwm(i64 96) #11
  %94 = bitcast i8* %93 to %"class.gpu::SharedImageFactory"*
  %95 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 0
  call void @_ZN3gpu18SharedImageFactoryC1ERKNS_14GpuPreferencesERKNS_23GpuDriverBugWorkaroundsERKNS_14GpuFeatureInfoEPNS_18SharedContextStateEPNS_14MailboxManagerEPNS_18SharedImageManagerEPNS_12ImageFactoryEPNS_13MemoryTrackerEb(%"class.gpu::SharedImageFactory"* nonnull %94, %"struct.gpu::GpuPreferences"* dereferenceable(184) %75, %"class.gpu::GpuDriverBugWorkarounds"* dereferenceable(148) %76, %"struct.gpu::GpuFeatureInfo"* dereferenceable(184) %77, %"class.gpu::SharedContextState"* %78, %"class.gpu::MailboxManager"* %80, %"class.gpu::SharedImageManager"* %82, %"class.gpu::ImageFactory"* %91, %"class.gpu::MemoryTracker"* %95, i1 zeroext %92) #10
  %96 = ptrtoint i8* %93 to i64
  %97 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 7
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.gpu::SharedImageFactory"*, %"class.gpu::SharedImageFactory"** %98, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.218"* %97 to i64*
  store i64 %96, i64* %100, align 8
  %101 = icmp eq %"class.gpu::SharedImageFactory"* %99, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %90
  call void @_ZN3gpu18SharedImageFactoryD1Ev(%"class.gpu::SharedImageFactory"* nonnull %99) #10
  %103 = bitcast %"class.gpu::SharedImageFactory"* %99 to i8*
  call void @_ZdlPv(i8* %103) #11
  br label %104

104:                                              ; preds = %102, %90
  %105 = load %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageManager"** %81, align 8
  %106 = call i8* @_Znwm(i64 16) #11
  %107 = bitcast i8* %106 to %"class.gpu::SharedImageRepresentationFactory"*
  call void @_ZN3gpu32SharedImageRepresentationFactoryC1EPNS_18SharedImageManagerEPNS_13MemoryTrackerE(%"class.gpu::SharedImageRepresentationFactory"* nonnull %107, %"class.gpu::SharedImageManager"* %105, %"class.gpu::MemoryTracker"* %95) #10
  %108 = ptrtoint i8* %106 to i64
  %109 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.275"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.gpu::SharedImageRepresentationFactory"*, %"class.gpu::SharedImageRepresentationFactory"** %110, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.275"* %109 to i64*
  store i64 %108, i64* %112, align 8
  %113 = icmp eq %"class.gpu::SharedImageRepresentationFactory"* %111, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %104
  call void @_ZN3gpu32SharedImageRepresentationFactoryD1Ev(%"class.gpu::SharedImageRepresentationFactory"* nonnull %111) #10
  %115 = bitcast %"class.gpu::SharedImageRepresentationFactory"* %111 to i8*
  call void @_ZdlPv(i8* %115) #11
  br label %116

116:                                              ; preds = %114, %104
  call void @_ZN2ui17ScopedMakeCurrentD1Ev(%"class.ui::ScopedMakeCurrent"* nonnull %66) #10
  call void @_ZdlPv(i8* nonnull %65) #11
  br label %117

117:                                              ; preds = %71, %116, %41, %26
  %118 = phi i1 [ false, %26 ], [ false, %41 ], [ true, %116 ], [ false, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  ret i1 %118
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu27GpuMemoryAblationExperiment17AllocateGpuMemoryEv(%"class.gpu::GpuMemoryAblationExperiment"*) local_unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.gpu::Mailbox"*
  %5 = alloca %"class.gfx::ColorSpace", align 4
  %6 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 6, i32 0
  %7 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %7, i64 0, i32 17, i32 0
  %9 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %8, align 8
  %10 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %7, i64 0, i32 19, i32 0
  %11 = load %"class.gl::GLSurface"*, %"class.gl::GLSurface"** %10, align 8
  %12 = tail call i8* @_Znwm(i64 40) #11
  %13 = bitcast i8* %12 to %"class.ui::ScopedMakeCurrent"*
  tail call void @_ZN2ui17ScopedMakeCurrentC1EPN2gl9GLContextEPNS1_9GLSurfaceE(%"class.ui::ScopedMakeCurrent"* nonnull %13, %"class.gl::GLContext"* %9, %"class.gl::GLSurface"* %11) #10
  %14 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %6, align 8
  %15 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %14, i64 0, i32 19, i32 0
  %16 = load %"class.gl::GLSurface"*, %"class.gl::GLSurface"** %15, align 8
  %17 = tail call zeroext i1 @_ZN3gpu18SharedContextState9IsCurrentEPN2gl9GLSurfaceEb(%"class.gpu::SharedContextState"* %14, %"class.gl::GLSurface"* %16, i1 zeroext false) #10
  br i1 %17, label %19, label %18

18:                                               ; preds = %1
  tail call void @_ZN2ui17ScopedMakeCurrentD1Ev(%"class.ui::ScopedMakeCurrent"* nonnull %13) #10
  tail call void @_ZdlPv(i8* nonnull %12) #11
  br label %137

19:                                               ; preds = %1
  %20 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #10
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %22 = tail call { i64, i64 } @_ZN3gpu7Mailbox22GenerateForSharedImageEv() #10
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %24 = extractvalue { i64, i64 } %22, 0
  store i64 %24, i64* %23, align 8
  %25 = extractvalue { i64, i64 } %22, 1
  store i64 %25, i64* %21, align 8
  %26 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %26) #10
  store i8 1, i8* %26, align 4, !alias.scope !10
  %27 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %5, i64 0, i32 1
  store i8 14, i8* %27, align 1, !alias.scope !10
  %28 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %5, i64 0, i32 2
  store i8 1, i8* %28, align 2, !alias.scope !10
  %29 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %5, i64 0, i32 3
  store i8 2, i8* %29, align 1, !alias.scope !10
  %30 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %5, i64 0, i32 4
  %31 = bitcast [9 x float]* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 64, i1 false) #10, !alias.scope !10
  %32 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %33 = load %"class.gpu::SharedImageFactory"*, %"class.gpu::SharedImageFactory"** %32, align 8
  %34 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 2
  %35 = call zeroext i1 @_ZN3gpu18SharedImageFactory17CreateSharedImageERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejj(%"class.gpu::SharedImageFactory"* %33, %"struct.gpu::Mailbox"* nonnull dereferenceable(16) %4, i32 0, %"class.gfx::Size"* dereferenceable(8) %34, %"class.gfx::ColorSpace"* nonnull dereferenceable(68) %5, i32 0, i32 2, i32 0, i32 8) #10
  br i1 %35, label %36, label %136

36:                                               ; preds = %19
  %37 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %38 = load %"class.gpu::SharedImageRepresentationFactory"*, %"class.gpu::SharedImageRepresentationFactory"** %37, align 8
  %39 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %6, align 8
  %40 = icmp eq %"class.gpu::SharedContextState"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %39, i64 0, i32 2, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %42) #10
  br label %43

43:                                               ; preds = %36, %41
  %44 = call %"class.gpu::SharedImageRepresentationSkia"* @_ZN3gpu32SharedImageRepresentationFactory11ProduceSkiaERKNS_7MailboxE13scoped_refptrINS_18SharedContextStateEE(%"class.gpu::SharedImageRepresentationFactory"* %38, %"struct.gpu::Mailbox"* nonnull dereferenceable(16) %4, %"class.gpu::SharedContextState"* %39) #10
  %45 = icmp eq %"class.gpu::SharedImageRepresentationSkia"* %44, null
  br i1 %45, label %136, label %46

46:                                               ; preds = %43
  %47 = call %"class.gpu::SharedImageRepresentationSkia::ScopedWriteAccess"* @_ZN3gpu29SharedImageRepresentationSkia22BeginScopedWriteAccessEPNSt3__16vectorI18GrBackendSemaphoreNS1_9allocatorIS3_EEEES7_NS_25SharedImageRepresentation20AllowUnclearedAccessEb(%"class.gpu::SharedImageRepresentationSkia"* nonnull %44, %"class.std::__1::vector.550"* null, %"class.std::__1::vector.550"* null, i32 0, i1 zeroext true) #10
  %48 = icmp eq %"class.gpu::SharedImageRepresentationSkia::ScopedWriteAccess"* %47, null
  br i1 %48, label %131, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.gpu::SharedImageRepresentationSkia::ScopedWriteAccess", %"class.gpu::SharedImageRepresentationSkia::ScopedWriteAccess"* %47, i64 0, i32 1, i32 0
  %51 = load %class.SkSurface*, %class.SkSurface** %50, align 8
  %52 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* %51) #10
  %53 = bitcast { <2 x float>, <2 x float> }* %2 to %struct.SkRGBA4f*
  %54 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #10
  %55 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 -1) #10
  %56 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %57 = extractvalue { <2 x float>, <2 x float> } %55, 0
  store <2 x float> %57, <2 x float>* %56, align 8
  %58 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %59 = extractvalue { <2 x float>, <2 x float> } %55, 1
  store <2 x float> %59, <2 x float>* %58, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %52, %struct.SkRGBA4f* nonnull dereferenceable(16) %53, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #10
  %60 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 3
  %61 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 3, i32 0, i32 1
  %62 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %61, align 8
  %63 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %64 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %63, align 8
  %65 = icmp eq %"struct.gpu::Mailbox"* %62, %64
  %66 = ptrtoint %"struct.gpu::Mailbox"* %64 to i64
  br i1 %65, label %72, label %67

67:                                               ; preds = %49
  %68 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %62, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* nonnull align 8 %20, i64 16, i1 false) #10
  %69 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %62, i64 1
  %70 = ptrtoint %"struct.gpu::Mailbox"* %69 to i64
  %71 = bitcast %"struct.gpu::Mailbox"** %61 to i64*
  store i64 %70, i64* %71, align 8
  br label %129

72:                                               ; preds = %49
  %73 = ptrtoint %"struct.gpu::Mailbox"* %62 to i64
  %74 = bitcast %"struct.gpu::Mailbox"** %61 to i64*
  %75 = bitcast %"class.std::__1::vector"* %60 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %73, %76
  %78 = ashr exact i64 %77, 4
  %79 = add nsw i64 %78, 1
  %80 = icmp ugt i64 %79, 1152921504606846975
  br i1 %80, label %81, label %83

81:                                               ; preds = %72
  %82 = bitcast %"class.std::__1::vector"* %60 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %82) #12
  unreachable

83:                                               ; preds = %72
  %84 = bitcast %"struct.gpu::Mailbox"** %63 to i64*
  %85 = sub i64 %66, %76
  %86 = ashr exact i64 %85, 4
  %87 = icmp ult i64 %86, 576460752303423487
  br i1 %87, label %88, label %96

88:                                               ; preds = %83
  %89 = ashr exact i64 %85, 3
  %90 = icmp ult i64 %89, %79
  %91 = select i1 %90, i64 %79, i64 %89
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %88
  %94 = icmp ugt i64 %91, 1152921504606846975
  br i1 %94, label %95, label %96

95:                                               ; preds = %93
  call void @abort() #12
  unreachable

96:                                               ; preds = %93, %83
  %97 = phi i64 [ %91, %93 ], [ 1152921504606846975, %83 ]
  %98 = shl i64 %97, 4
  %99 = call i8* @_Znwm(i64 %98) #11
  %100 = bitcast i8* %99 to %"struct.gpu::Mailbox"*
  br label %101

101:                                              ; preds = %96, %88
  %102 = phi i64 [ %97, %96 ], [ 0, %88 ]
  %103 = phi %"struct.gpu::Mailbox"* [ %100, %96 ], [ null, %88 ]
  %104 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %103, i64 %78
  %105 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %103, i64 %102
  %106 = ptrtoint %"struct.gpu::Mailbox"* %105 to i64
  %107 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %104, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* nonnull align 8 %20, i64 16, i1 false) #10
  %108 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %104, i64 1
  %109 = ptrtoint %"struct.gpu::Mailbox"* %108 to i64
  %110 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %60, i64 0, i32 0, i32 0
  %111 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %110, align 8
  %112 = load i64, i64* %74, align 8
  %113 = ptrtoint %"struct.gpu::Mailbox"* %111 to i64
  %114 = sub i64 %112, %113
  %115 = ashr exact i64 %114, 4
  %116 = sub nsw i64 0, %115
  %117 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %104, i64 %116
  %118 = ptrtoint %"struct.gpu::Mailbox"* %117 to i64
  %119 = icmp sgt i64 %114, 0
  br i1 %119, label %120, label %124

120:                                              ; preds = %101
  %121 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %117, i64 0, i32 0, i64 0
  %122 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %111, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %121, i8* align 1 %122, i64 %114, i1 false) #10
  %123 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %110, align 8
  br label %124

124:                                              ; preds = %120, %101
  %125 = phi %"struct.gpu::Mailbox"* [ %111, %101 ], [ %123, %120 ]
  store i64 %118, i64* %75, align 8
  store i64 %109, i64* %74, align 8
  store i64 %106, i64* %84, align 8
  %126 = icmp eq %"struct.gpu::Mailbox"* %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %125, i64 0, i32 0, i64 0
  call void @_ZdlPv(i8* %128) #11
  br label %129

129:                                              ; preds = %127, %124, %67
  call void @_ZN3gpu29SharedImageRepresentationSkia17ScopedWriteAccessD1Ev(%"class.gpu::SharedImageRepresentationSkia::ScopedWriteAccess"* nonnull %47) #10
  %130 = bitcast %"class.gpu::SharedImageRepresentationSkia::ScopedWriteAccess"* %47 to i8*
  call void @_ZdlPv(i8* %130) #11
  br label %131

131:                                              ; preds = %46, %129
  %132 = bitcast %"class.gpu::SharedImageRepresentationSkia"* %44 to void (%"class.gpu::SharedImageRepresentationSkia"*)***
  %133 = load void (%"class.gpu::SharedImageRepresentationSkia"*)**, void (%"class.gpu::SharedImageRepresentationSkia"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.gpu::SharedImageRepresentationSkia"*)*, void (%"class.gpu::SharedImageRepresentationSkia"*)** %133, i64 1
  %135 = load void (%"class.gpu::SharedImageRepresentationSkia"*)*, void (%"class.gpu::SharedImageRepresentationSkia"*)** %134, align 8
  call void %135(%"class.gpu::SharedImageRepresentationSkia"* nonnull %44) #10
  br label %136

136:                                              ; preds = %43, %131, %19
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #10
  call void @_ZN2ui17ScopedMakeCurrentD1Ev(%"class.ui::ScopedMakeCurrent"* nonnull %13) #10
  call void @_ZdlPv(i8* nonnull %12) #11
  br label %137

137:                                              ; preds = %18, %136
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.423"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu27GpuMemoryAblationExperiment15DeleteGpuMemoryEv(%"class.gpu::GpuMemoryAblationExperiment"* nocapture) #0 align 2 {
  %2 = alloca %"struct.gpu::Mailbox", align 1
  %3 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %3, align 8
  %5 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %5, align 8
  %7 = icmp eq %"struct.gpu::Mailbox"* %4, %6
  br i1 %7, label %32, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %4, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 6, i32 0
  %12 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %11, align 8
  %13 = tail call zeroext i1 @_ZN3gpu18SharedContextState11MakeCurrentEPN2gl9GLSurfaceEb(%"class.gpu::SharedContextState"* %12, %"class.gl::GLSurface"* null, i1 zeroext false) #10
  br i1 %13, label %14, label %18

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %16 = load %"class.gpu::SharedImageFactory"*, %"class.gpu::SharedImageFactory"** %15, align 8
  %17 = call zeroext i1 @_ZN3gpu18SharedImageFactory18DestroySharedImageERKNS_7MailboxE(%"class.gpu::SharedImageFactory"* %16, %"struct.gpu::Mailbox"* nonnull dereferenceable(16) %2) #10
  br label %18

18:                                               ; preds = %14, %8
  %19 = load %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"** %3, align 8
  %20 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %19, i64 1
  %21 = bitcast %"struct.gpu::Mailbox"** %5 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = ptrtoint %"struct.gpu::Mailbox"* %20 to i64
  %24 = sub i64 %22, %23
  %25 = ashr exact i64 %24, 4
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %19, i64 0, i32 0, i64 0
  %29 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %20, i64 0, i32 0, i64 0
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %24, i1 false) #10
  br label %30

30:                                               ; preds = %18, %27
  %31 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %19, i64 %25
  store %"struct.gpu::Mailbox"* %31, %"struct.gpu::Mailbox"** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  br label %32

32:                                               ; preds = %1, %30
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gpu27GpuMemoryAblationExperiment13GetPeakMemoryEj(%"class.gpu::GpuMemoryAblationExperiment"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair"*
  br i1 %10, label %30, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 4
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp ult i32 %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair"* %22, %"struct.std::__1::pair"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = ptrtoint %"struct.std::__1::pair"* %26 to i64
  br label %30

30:                                               ; preds = %28, %2
  %31 = phi i64 [ %29, %28 ], [ %8, %2 ]
  %32 = phi %"struct.std::__1::pair"* [ %26, %28 ], [ %4, %2 ]
  %33 = icmp eq %"struct.std::__1::pair"* %32, %11
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp ugt i32 %36, %1
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 1
  %40 = ptrtoint %"struct.std::__1::pair"* %39 to i64
  br label %41

41:                                               ; preds = %30, %34, %38
  %42 = phi i64 [ %40, %38 ], [ %31, %30 ], [ %31, %34 ]
  %43 = inttoptr i64 %42 to %"struct.std::__1::pair"*
  %44 = icmp eq %"struct.std::__1::pair"* %32, %43
  %45 = select i1 %44, %"struct.std::__1::pair"* %11, %"struct.std::__1::pair"* %32
  %46 = icmp eq %"struct.std::__1::pair"* %45, %11
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  br label %50

50:                                               ; preds = %41, %47
  %51 = phi i64 [ %49, %47 ], [ 0, %41 ]
  ret i64 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu27GpuMemoryAblationExperiment13StartSequenceEj(%"class.gpu::GpuMemoryAblationExperiment"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::pair", align 8
  %4 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 4, i32 0
  %5 = bitcast %"struct.std::__1::pair"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair"* %9 to i64
  %14 = sub i64 %12, %13
  %15 = icmp eq i64 %14, 0
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair"*
  br i1 %15, label %33, label %17

17:                                               ; preds = %2
  %18 = ashr exact i64 %14, 4
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi %"struct.std::__1::pair"* [ %9, %17 ], [ %31, %19 ]
  %21 = phi i64 [ %18, %17 ], [ %30, %19 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 %22
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %25, %1
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 1
  %28 = xor i64 %22, -1
  %29 = add i64 %21, %28
  %30 = select i1 %26, i64 %29, i64 %22
  %31 = select i1 %26, %"struct.std::__1::pair"* %27, %"struct.std::__1::pair"* %20
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %19

33:                                               ; preds = %19, %2
  %34 = phi %"struct.std::__1::pair"* [ %9, %2 ], [ %31, %19 ]
  %35 = icmp eq %"struct.std::__1::pair"* %34, %16
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ugt i32 %38, %1
  br i1 %39, label %40, label %43

40:                                               ; preds = %36, %33
  %41 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %4, i64 0, i32 0
  %42 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIjmEENS_9allocatorIS2_EEE7emplaceIJS2_EEENS_11__wrap_iterIPS2_EENS7_IPKS2_EEDpOT_(%"class.std::__1::vector.1"* %41, %"struct.std::__1::pair"* %34, %"struct.std::__1::pair"* nonnull dereferenceable(16) %3) #10
  br label %43

43:                                               ; preds = %36, %40
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu27GpuMemoryAblationExperiment12StopSequenceEj(%"class.gpu::GpuMemoryAblationExperiment"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair"*
  br i1 %10, label %30, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 4
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp ult i32 %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair"* %22, %"struct.std::__1::pair"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = ptrtoint %"struct.std::__1::pair"* %26 to i64
  br label %30

30:                                               ; preds = %28, %2
  %31 = phi i64 [ %29, %28 ], [ %8, %2 ]
  %32 = phi %"struct.std::__1::pair"* [ %26, %28 ], [ %4, %2 ]
  %33 = icmp eq %"struct.std::__1::pair"* %32, %11
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp ugt i32 %36, %1
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 1
  %40 = ptrtoint %"struct.std::__1::pair"* %39 to i64
  br label %41

41:                                               ; preds = %30, %34, %38
  %42 = phi i64 [ %40, %38 ], [ %31, %30 ], [ %31, %34 ]
  %43 = inttoptr i64 %42 to %"struct.std::__1::pair"*
  %44 = icmp eq %"struct.std::__1::pair"* %32, %43
  %45 = select i1 %44, %"struct.std::__1::pair"* %11, %"struct.std::__1::pair"* %32
  %46 = ptrtoint %"struct.std::__1::pair"* %45 to i64
  %47 = icmp eq %"struct.std::__1::pair"* %45, %11
  br i1 %47, label %110, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 1
  %50 = icmp eq %"struct.std::__1::pair"* %49, %11
  br i1 %50, label %108, label %51

51:                                               ; preds = %48
  %52 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 -2, i32 0
  %53 = ptrtoint i32* %52 to i64
  %54 = sub i64 %53, %46
  %55 = lshr i64 %54, 4
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %73, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"struct.std::__1::pair"* [ %70, %59 ], [ %45, %51 ]
  %61 = phi %"struct.std::__1::pair"* [ %69, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %71, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 0, i32 0
  store i32 %64, i32* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 0, i32 1
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 1
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 1
  %71 = add i64 %62, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %59, !llvm.loop !13

73:                                               ; preds = %59, %51
  %74 = phi %"struct.std::__1::pair"* [ undef, %51 ], [ %70, %59 ]
  %75 = phi %"struct.std::__1::pair"* [ %45, %51 ], [ %70, %59 ]
  %76 = phi %"struct.std::__1::pair"* [ %49, %51 ], [ %69, %59 ]
  %77 = icmp ult i64 %54, 48
  br i1 %77, label %108, label %78

78:                                               ; preds = %73, %78
  %79 = phi %"struct.std::__1::pair"* [ %106, %78 ], [ %75, %73 ]
  %80 = phi %"struct.std::__1::pair"* [ %105, %78 ], [ %76, %73 ]
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 0, i32 0
  store i32 %82, i32* %83, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 0, i32 1
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 1, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 1, i32 0
  store i32 %88, i32* %89, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 1, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 1, i32 1
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 2, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 2, i32 0
  store i32 %94, i32* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 2, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 2, i32 1
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 3, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 3, i32 0
  store i32 %100, i32* %101, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 3, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 3, i32 1
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %80, i64 4
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 4
  %107 = icmp eq %"struct.std::__1::pair"* %105, %11
  br i1 %107, label %108, label %78

108:                                              ; preds = %73, %78, %48
  %109 = phi %"struct.std::__1::pair"* [ %45, %48 ], [ %74, %73 ], [ %106, %78 ]
  store %"struct.std::__1::pair"* %109, %"struct.std::__1::pair"** %5, align 8
  br label %110

110:                                              ; preds = %41, %108
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::ScopedMakeCurrent"* @_ZN3gpu27GpuMemoryAblationExperiment24ScopedMakeContextCurrentEv(%"class.gpu::GpuMemoryAblationExperiment"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 6, i32 0
  %3 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %2, align 8
  %4 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %3, i64 0, i32 17, i32 0
  %5 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %4, align 8
  %6 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %3, i64 0, i32 19, i32 0
  %7 = load %"class.gl::GLSurface"*, %"class.gl::GLSurface"** %6, align 8
  %8 = tail call i8* @_Znwm(i64 40) #11
  %9 = bitcast i8* %8 to %"class.ui::ScopedMakeCurrent"*
  tail call void @_ZN2ui17ScopedMakeCurrentC1EPN2gl9GLContextEPNS1_9GLSurfaceE(%"class.ui::ScopedMakeCurrent"* nonnull %9, %"class.gl::GLContext"* %5, %"class.gl::GLSurface"* %7) #10
  %10 = ptrtoint i8* %8 to i64
  %11 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %2, align 8
  %12 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %11, i64 0, i32 19, i32 0
  %13 = load %"class.gl::GLSurface"*, %"class.gl::GLSurface"** %12, align 8
  %14 = tail call zeroext i1 @_ZN3gpu18SharedContextState9IsCurrentEPN2gl9GLSurfaceEb(%"class.gpu::SharedContextState"* %11, %"class.gl::GLSurface"* %13, i1 zeroext false) #10
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  tail call void @_ZN2ui17ScopedMakeCurrentD1Ev(%"class.ui::ScopedMakeCurrent"* nonnull %9) #10
  tail call void @_ZdlPv(i8* nonnull %8) #11
  br label %16

16:                                               ; preds = %1, %15
  %17 = phi i64 [ 0, %15 ], [ %10, %1 ]
  %18 = inttoptr i64 %17 to %"class.ui::ScopedMakeCurrent"*
  ret %"class.ui::ScopedMakeCurrent"* %18
}

declare { i64, i64 } @_ZN3gpu7Mailbox22GenerateForSharedImageEv() local_unnamed_addr #1

declare zeroext i1 @_ZN3gpu18SharedImageFactory17CreateSharedImageERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejj(%"class.gpu::SharedImageFactory"*, %"struct.gpu::Mailbox"* dereferenceable(16), i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::ColorSpace"* dereferenceable(68), i32, i32, i32, i32) local_unnamed_addr #1

declare %"class.gpu::SharedImageRepresentationSkia"* @_ZN3gpu32SharedImageRepresentationFactory11ProduceSkiaERKNS_7MailboxE13scoped_refptrINS_18SharedContextStateEE(%"class.gpu::SharedImageRepresentationFactory"*, %"struct.gpu::Mailbox"* dereferenceable(16), %"class.gpu::SharedContextState"*) local_unnamed_addr #1

declare %"class.gpu::SharedImageRepresentationSkia::ScopedWriteAccess"* @_ZN3gpu29SharedImageRepresentationSkia22BeginScopedWriteAccessEPNSt3__16vectorI18GrBackendSemaphoreNS1_9allocatorIS3_EEEES7_NS_25SharedImageRepresentation20AllowUnclearedAccessEb(%"class.gpu::SharedImageRepresentationSkia"*, %"class.std::__1::vector.550"*, %"class.std::__1::vector.550"*, i32, i1 zeroext) local_unnamed_addr #1

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #1

declare zeroext i1 @_ZN3gpu18SharedImageFactory18DestroySharedImageERKNS_7MailboxE(%"class.gpu::SharedImageFactory"*, %"struct.gpu::Mailbox"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.gpu::SharedContextState"* @_ZN3gpu17GpuChannelManager21GetSharedContextStateEPNS_13ContextResultE(%"class.gpu::GpuChannelManager"*, i32*) local_unnamed_addr #1

declare i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

declare i32 @_ZNK18GrRecordingContext14maxTextureSizeEv(%class.GrRecordingContext*) local_unnamed_addr #1

declare zeroext i1 @_ZN8features19IsUsingSkiaRendererEv() local_unnamed_addr #1

declare zeroext i1 @_ZN3gpu18SharedContextState9IsCurrentEPN2gl9GLSurfaceEb(%"class.gpu::SharedContextState"*, %"class.gl::GLSurface"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu27GpuMemoryAblationExperiment26TrackMemoryAllocatedChangeEl(%"class.gpu::GpuMemoryAblationExperiment"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::GpuMemoryAblationExperiment", %"class.gpu::GpuMemoryAblationExperiment"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair"* %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %19, %2
  ret void

12:                                               ; preds = %2, %22
  %13 = phi i64 [ %23, %22 ], [ %5, %2 ]
  %14 = phi %"struct.std::__1::pair"* [ %20, %22 ], [ %7, %2 ]
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %13, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  store i64 %13, i64* %15, align 8
  br label %19

19:                                               ; preds = %18, %12
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 1
  %21 = icmp eq %"struct.std::__1::pair"* %20, %9
  br i1 %21, label %11, label %22

22:                                               ; preds = %19
  %23 = load i64, i64* %3, align 8
  br label %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK3gpu27GpuMemoryAblationExperiment7GetSizeEv(%"class.gpu::GpuMemoryAblationExperiment"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK3gpu27GpuMemoryAblationExperiment15ClientTracingIdEv(%"class.gpu::GpuMemoryAblationExperiment"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK3gpu27GpuMemoryAblationExperiment8ClientIdEv(%"class.gpu::GpuMemoryAblationExperiment"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK3gpu27GpuMemoryAblationExperiment21ContextGroupTracingIdEv(%"class.gpu::GpuMemoryAblationExperiment"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i64 0
}

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #1

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gpu18SharedImageFactoryD1Ev(%"class.gpu::SharedImageFactory"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3gpu32SharedImageRepresentationFactoryD1Ev(%"class.gpu::SharedImageRepresentationFactory"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3gpu27GpuMemoryAblationExperimentEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.gpu::GpuMemoryAblationExperiment"**
  %10 = load %"class.gpu::GpuMemoryAblationExperiment"*, %"class.gpu::GpuMemoryAblationExperiment"** %9, align 8
  %11 = icmp eq %"class.gpu::GpuMemoryAblationExperiment"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.gpu::GpuMemoryAblationExperiment"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.gpu::GpuMemoryAblationExperiment"*)**
  %37 = load void (%"class.gpu::GpuMemoryAblationExperiment"*)*, void (%"class.gpu::GpuMemoryAblationExperiment"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.gpu::GpuMemoryAblationExperiment"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.gpu::GpuMemoryAblationExperiment"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.gpu::GpuMemoryAblationExperiment"* %28) #10
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3gpu27GpuMemoryAblationExperimentEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3gpu27GpuMemoryAblationExperimentEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.gpu::GpuMemoryAblationExperiment"**
  %9 = load %"class.gpu::GpuMemoryAblationExperiment"*, %"class.gpu::GpuMemoryAblationExperiment"** %8, align 8
  %10 = icmp ne %"class.gpu::GpuMemoryAblationExperiment"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIjmEENS_9allocatorIS2_EEE7emplaceIJS2_EEENS_11__wrap_iterIPS2_EENS7_IPKS2_EEDpOT_(%"class.std::__1::vector.1"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp ult %"struct.std::__1::pair"* %8, %10
  %12 = ptrtoint %"struct.std::__1::pair"* %8 to i64
  %13 = ptrtoint %"struct.std::__1::pair"* %10 to i64
  br i1 %11, label %14, label %143

14:                                               ; preds = %3
  %15 = icmp eq %"struct.std::__1::pair"* %8, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = bitcast %"struct.std::__1::pair"* %1 to i8*
  %18 = bitcast %"struct.std::__1::pair"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #10
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %20 = ptrtoint %"struct.std::__1::pair"* %19 to i64
  %21 = bitcast %"struct.std::__1::pair"** %7 to i64*
  store i64 %20, i64* %21, align 8
  br label %294

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %28 = ptrtoint %"struct.std::__1::pair"* %27 to i64
  %29 = sub i64 %12, %28
  %30 = ashr exact i64 %29, 4
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %30
  %32 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %33 = icmp ult %"struct.std::__1::pair"* %31, %8
  br i1 %33, label %34, label %63

34:                                               ; preds = %22
  %35 = sub nsw i64 0, %30
  %36 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 %35, i32 0
  %37 = bitcast i32* %36 to i8*
  %38 = xor i64 %4, -1
  %39 = getelementptr i8, i8* %37, i64 %38
  %40 = ptrtoint i8* %39 to i64
  %41 = lshr i64 %40, 4
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 3
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %34, %45
  %46 = phi %"struct.std::__1::pair"* [ %52, %45 ], [ %8, %34 ]
  %47 = phi %"struct.std::__1::pair"* [ %51, %45 ], [ %31, %34 ]
  %48 = phi i64 [ %53, %45 ], [ %43, %34 ]
  %49 = bitcast %"struct.std::__1::pair"* %46 to i8*
  %50 = bitcast %"struct.std::__1::pair"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 16, i1 false) #10
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 1
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 1
  %53 = add i64 %48, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %45, !llvm.loop !15

55:                                               ; preds = %45, %34
  %56 = phi %"struct.std::__1::pair"* [ %8, %34 ], [ %52, %45 ]
  %57 = phi %"struct.std::__1::pair"* [ %31, %34 ], [ %51, %45 ]
  %58 = phi %"struct.std::__1::pair"* [ undef, %34 ], [ %52, %45 ]
  %59 = icmp ult i8* %39, inttoptr (i64 48 to i8*)
  br i1 %59, label %60, label %120

60:                                               ; preds = %120, %55
  %61 = phi %"struct.std::__1::pair"* [ %58, %55 ], [ %138, %120 ]
  %62 = ptrtoint %"struct.std::__1::pair"* %61 to i64
  br label %63

63:                                               ; preds = %60, %22
  %64 = phi i64 [ %62, %60 ], [ %12, %22 ]
  store i64 %64, i64* %32, align 8
  %65 = icmp eq i64 %29, 0
  br i1 %65, label %140, label %66

66:                                               ; preds = %63
  %67 = add i64 %29, -16
  %68 = lshr i64 %67, 4
  %69 = add nuw nsw i64 %68, 1
  %70 = and i64 %69, 3
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %86, label %72

72:                                               ; preds = %66, %72
  %73 = phi %"struct.std::__1::pair"* [ %77, %72 ], [ %8, %66 ]
  %74 = phi %"struct.std::__1::pair"* [ %76, %72 ], [ %31, %66 ]
  %75 = phi i64 [ %84, %72 ], [ %70, %66 ]
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 -1
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 -1
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %77, i64 0, i32 0
  store i32 %79, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 -1, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 -1, i32 1
  store i64 %82, i64* %83, align 8
  %84 = add i64 %75, -1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %72, !llvm.loop !16

86:                                               ; preds = %72, %66
  %87 = phi %"struct.std::__1::pair"* [ %8, %66 ], [ %77, %72 ]
  %88 = phi %"struct.std::__1::pair"* [ %31, %66 ], [ %76, %72 ]
  %89 = icmp ult i64 %67, 48
  br i1 %89, label %140, label %90

90:                                               ; preds = %86, %90
  %91 = phi %"struct.std::__1::pair"* [ %112, %90 ], [ %87, %86 ]
  %92 = phi %"struct.std::__1::pair"* [ %111, %90 ], [ %88, %86 ]
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -1, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -1, i32 0
  store i32 %94, i32* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -1, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -1, i32 1
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -2, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -2, i32 0
  store i32 %100, i32* %101, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -2, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -2, i32 1
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -3, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -3, i32 0
  store i32 %106, i32* %107, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -3, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -3, i32 1
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -4
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -4
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %111, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %112, i64 0, i32 0
  store i32 %114, i32* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -4, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -4, i32 1
  store i64 %117, i64* %118, align 8
  %119 = icmp eq %"struct.std::__1::pair"* %111, %1
  br i1 %119, label %140, label %90

120:                                              ; preds = %55, %120
  %121 = phi %"struct.std::__1::pair"* [ %138, %120 ], [ %56, %55 ]
  %122 = phi %"struct.std::__1::pair"* [ %137, %120 ], [ %57, %55 ]
  %123 = bitcast %"struct.std::__1::pair"* %121 to i8*
  %124 = bitcast %"struct.std::__1::pair"* %122 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 16, i1 false) #10
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 1
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %121, i64 1
  %127 = bitcast %"struct.std::__1::pair"* %126 to i8*
  %128 = bitcast %"struct.std::__1::pair"* %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #10
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 2
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %121, i64 2
  %131 = bitcast %"struct.std::__1::pair"* %130 to i8*
  %132 = bitcast %"struct.std::__1::pair"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #10
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 3
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %121, i64 3
  %135 = bitcast %"struct.std::__1::pair"* %134 to i8*
  %136 = bitcast %"struct.std::__1::pair"* %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %136, i64 16, i1 false) #10
  %137 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 4
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %121, i64 4
  %139 = icmp ult %"struct.std::__1::pair"* %137, %8
  br i1 %139, label %120, label %60

140:                                              ; preds = %86, %90, %63
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  store i32 %24, i32* %141, align 8
  %142 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  store i64 %26, i64* %142, align 8
  br label %294

143:                                              ; preds = %3
  %144 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2
  %145 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %145) #10
  %146 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %151 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %152 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %153 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 40, i1 false)
  %154 = load i64, i64* %152, align 8
  %155 = sub i64 %12, %154
  %156 = ashr exact i64 %155, 4
  %157 = add nsw i64 %156, 1
  %158 = icmp ugt i64 %157, 1152921504606846975
  br i1 %158, label %159, label %161

159:                                              ; preds = %143
  %160 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %160) #12
  unreachable

161:                                              ; preds = %143
  %162 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %163 = sub i64 %13, %154
  %164 = ashr exact i64 %163, 4
  %165 = icmp ult i64 %164, 576460752303423487
  br i1 %165, label %170, label %166

166:                                              ; preds = %161
  %167 = sub i64 %4, %154
  %168 = ashr exact i64 %167, 4
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %149, align 8
  %169 = bitcast %"class.std::__1::allocator.6"** %150 to %"class.std::__1::__compressed_pair.3"**
  store %"class.std::__1::__compressed_pair.3"* %144, %"class.std::__1::__compressed_pair.3"** %169, align 8
  br label %181

170:                                              ; preds = %161
  %171 = ashr exact i64 %163, 3
  %172 = icmp ult i64 %171, %157
  %173 = select i1 %172, i64 %157, i64 %171
  %174 = sub i64 %4, %154
  %175 = ashr exact i64 %174, 4
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %149, align 8
  %176 = bitcast %"class.std::__1::allocator.6"** %150 to %"class.std::__1::__compressed_pair.3"**
  store %"class.std::__1::__compressed_pair.3"* %144, %"class.std::__1::__compressed_pair.3"** %176, align 8
  %177 = icmp eq i64 %173, 0
  br i1 %177, label %187, label %178

178:                                              ; preds = %170
  %179 = icmp ugt i64 %173, 1152921504606846975
  br i1 %179, label %180, label %181

180:                                              ; preds = %178
  tail call void @abort() #12
  unreachable

181:                                              ; preds = %166, %178
  %182 = phi i64 [ 1152921504606846975, %166 ], [ %173, %178 ]
  %183 = phi i64 [ %168, %166 ], [ %175, %178 ]
  %184 = shl i64 %182, 4
  %185 = tail call i8* @_Znwm(i64 %184) #11
  %186 = bitcast i8* %185 to %"struct.std::__1::pair"*
  br label %187

187:                                              ; preds = %170, %181
  %188 = phi i64 [ %183, %181 ], [ %175, %170 ]
  %189 = phi i64 [ %182, %181 ], [ 0, %170 ]
  %190 = phi %"struct.std::__1::pair"* [ %186, %181 ], [ null, %170 ]
  store %"struct.std::__1::pair"* %190, %"struct.std::__1::pair"** %146, align 8
  %191 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %190, i64 %188
  store %"struct.std::__1::pair"* %191, %"struct.std::__1::pair"** %148, align 8
  store %"struct.std::__1::pair"* %191, %"struct.std::__1::pair"** %147, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %190, i64 %189
  store %"struct.std::__1::pair"* %192, %"struct.std::__1::pair"** %149, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIjmEERNS_9allocatorIS2_EEE12emplace_backIJS2_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, %"struct.std::__1::pair"* dereferenceable(16) %2)
  %193 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %147, align 8
  %194 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %195 = ptrtoint %"struct.std::__1::pair"* %194 to i64
  %196 = sub i64 %4, %195
  %197 = ashr exact i64 %196, 4
  %198 = sub nsw i64 0, %197
  %199 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %193, i64 %198
  store %"struct.std::__1::pair"* %199, %"struct.std::__1::pair"** %147, align 8
  %200 = icmp sgt i64 %196, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %187
  %202 = bitcast %"struct.std::__1::pair"* %199 to i8*
  %203 = bitcast %"struct.std::__1::pair"* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 %203, i64 %196, i1 false) #10
  br label %204

204:                                              ; preds = %201, %187
  %205 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %206 = icmp eq %"struct.std::__1::pair"* %205, %1
  br i1 %206, label %207, label %211

207:                                              ; preds = %204
  %208 = ptrtoint %"struct.std::__1::pair"* %205 to i64
  %209 = bitcast %"struct.std::__1::pair"** %148 to i64*
  %210 = load i64, i64* %209, align 8
  br label %268

211:                                              ; preds = %204
  %212 = bitcast %"struct.std::__1::pair"** %148 to i8**
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %205, i64 -1, i32 0
  %215 = ptrtoint i32* %214 to i64
  %216 = sub i64 %215, %4
  %217 = lshr i64 %216, 4
  %218 = add nuw nsw i64 %217, 1
  %219 = and i64 %218, 3
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %234, label %221

221:                                              ; preds = %211, %221
  %222 = phi i8* [ %229, %221 ], [ %213, %211 ]
  %223 = phi %"struct.std::__1::pair"* [ %226, %221 ], [ %1, %211 ]
  %224 = phi i64 [ %230, %221 ], [ %219, %211 ]
  %225 = bitcast %"struct.std::__1::pair"* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %225, i64 16, i1 false) #10
  %226 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %223, i64 1
  %227 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %148, align 8
  %228 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %227, i64 1
  store %"struct.std::__1::pair"* %228, %"struct.std::__1::pair"** %148, align 8
  %229 = bitcast %"struct.std::__1::pair"* %228 to i8*
  %230 = add i64 %224, -1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %221, !llvm.loop !17

232:                                              ; preds = %221
  %233 = bitcast %"struct.std::__1::pair"* %228 to i8*
  br label %234

234:                                              ; preds = %211, %232
  %235 = phi %"struct.std::__1::pair"* [ undef, %211 ], [ %228, %232 ]
  %236 = phi i8* [ %213, %211 ], [ %233, %232 ]
  %237 = phi %"struct.std::__1::pair"* [ %1, %211 ], [ %226, %232 ]
  %238 = icmp ult i64 %216, 48
  br i1 %238, label %263, label %239

239:                                              ; preds = %234, %239
  %240 = phi i8* [ %262, %239 ], [ %236, %234 ]
  %241 = phi %"struct.std::__1::pair"* [ %258, %239 ], [ %237, %234 ]
  %242 = bitcast %"struct.std::__1::pair"* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %242, i64 16, i1 false) #10
  %243 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %241, i64 1
  %244 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %148, align 8
  %245 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %244, i64 1
  store %"struct.std::__1::pair"* %245, %"struct.std::__1::pair"** %148, align 8
  %246 = bitcast %"struct.std::__1::pair"* %245 to i8*
  %247 = bitcast %"struct.std::__1::pair"* %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %247, i64 16, i1 false) #10
  %248 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %241, i64 2
  %249 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %148, align 8
  %250 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %249, i64 1
  store %"struct.std::__1::pair"* %250, %"struct.std::__1::pair"** %148, align 8
  %251 = bitcast %"struct.std::__1::pair"* %250 to i8*
  %252 = bitcast %"struct.std::__1::pair"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %252, i64 16, i1 false) #10
  %253 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %241, i64 3
  %254 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %148, align 8
  %255 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %254, i64 1
  store %"struct.std::__1::pair"* %255, %"struct.std::__1::pair"** %148, align 8
  %256 = bitcast %"struct.std::__1::pair"* %255 to i8*
  %257 = bitcast %"struct.std::__1::pair"* %253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 16, i1 false) #10
  %258 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %241, i64 4
  %259 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %148, align 8
  %260 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %259, i64 1
  store %"struct.std::__1::pair"* %260, %"struct.std::__1::pair"** %148, align 8
  %261 = icmp eq %"struct.std::__1::pair"* %258, %205
  %262 = bitcast %"struct.std::__1::pair"* %260 to i8*
  br i1 %261, label %263, label %239

263:                                              ; preds = %239, %234
  %264 = phi %"struct.std::__1::pair"* [ %235, %234 ], [ %260, %239 ]
  %265 = ptrtoint %"struct.std::__1::pair"* %264 to i64
  %266 = load i64, i64* %151, align 8
  %267 = bitcast %"struct.std::__1::pair"** %148 to i64*
  br label %268

268:                                              ; preds = %207, %263
  %269 = phi i64* [ %209, %207 ], [ %267, %263 ]
  %270 = phi i64 [ %210, %207 ], [ %265, %263 ]
  %271 = phi i64 [ %208, %207 ], [ %266, %263 ]
  %272 = load i64, i64* %152, align 8
  %273 = bitcast %"struct.std::__1::pair"** %147 to i64*
  %274 = load i64, i64* %273, align 8
  store i64 %274, i64* %152, align 8
  store i64 %272, i64* %273, align 8
  store i64 %270, i64* %151, align 8
  store i64 %271, i64* %269, align 8
  %275 = load i64, i64* %162, align 8
  %276 = bitcast %"struct.std::__1::pair"** %149 to i64*
  %277 = load i64, i64* %276, align 8
  store i64 %277, i64* %162, align 8
  store i64 %275, i64* %276, align 8
  %278 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %272, i64* %278, align 8
  %279 = inttoptr i64 %272 to %"struct.std::__1::pair"*
  %280 = inttoptr i64 %271 to %"struct.std::__1::pair"*
  %281 = icmp eq %"struct.std::__1::pair"* %280, %279
  br i1 %281, label %289, label %282

282:                                              ; preds = %268
  %283 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %280, i64 -1, i32 0
  %284 = ptrtoint i32* %283 to i64
  %285 = sub i64 %284, %272
  %286 = lshr i64 %285, 4
  %287 = xor i64 %286, -1
  %288 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %280, i64 %287
  store %"struct.std::__1::pair"* %288, %"struct.std::__1::pair"** %148, align 8
  br label %289

289:                                              ; preds = %282, %268
  %290 = icmp eq i64 %272, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %289
  %292 = inttoptr i64 %272 to i8*
  call void @_ZdlPv(i8* %292) #11
  br label %293

293:                                              ; preds = %289, %291
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %145) #10
  br label %294

294:                                              ; preds = %16, %140, %293
  %295 = phi %"struct.std::__1::pair"* [ %1, %16 ], [ %1, %140 ], [ %193, %293 ]
  ret %"struct.std::__1::pair"* %295
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIjmEERNS_9allocatorIS2_EEE12emplace_backIJS2_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair"* %6 to i64
  %9 = bitcast %"struct.std::__1::pair"* %4 to i8*
  br i1 %7, label %10, label %176

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair"* %15 to i64
  br i1 %16, label %18, label %91

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair"* %12, %4
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 -1, i32 0
  %28 = ptrtoint i32* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 1
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !18

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 0
  store i32 %57, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 1
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 1, i32 0
  store i32 %63, i32* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 1, i32 1
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 2, i32 0
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 2, i32 1
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 3, i32 0
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 3, i32 1
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair"* %80, %4
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair"* [ %4, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair"* %88, %"struct.std::__1::pair"** %3, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 %23
  store %"struct.std::__1::pair"* %89, %"struct.std::__1::pair"** %11, align 8
  %90 = bitcast %"struct.std::__1::pair"* %88 to i8*
  br label %176

91:                                               ; preds = %10
  %92 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %93 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %94 = sub i64 %8, %17
  %95 = ashr exact i64 %94, 3
  %96 = icmp eq i64 %94, 0
  %97 = select i1 %96, i64 1, i64 %95
  %98 = icmp ugt i64 %97, 1152921504606846975
  br i1 %98, label %99, label %100

99:                                               ; preds = %91
  tail call void @abort() #12
  unreachable

100:                                              ; preds = %91
  %101 = lshr i64 %97, 2
  %102 = shl i64 %97, 4
  %103 = tail call i8* @_Znwm(i64 %102) #11
  %104 = bitcast i8* %103 to %"struct.std::__1::pair"*
  %105 = ptrtoint i8* %103 to i64
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 %101
  %107 = ptrtoint %"struct.std::__1::pair"* %106 to i64
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 %97
  %109 = ptrtoint %"struct.std::__1::pair"* %108 to i64
  %110 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %111 = sub i64 %110, %13
  %112 = ashr exact i64 %111, 4
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 %112
  %114 = icmp eq i64 %111, 0
  br i1 %114, label %165, label %115

115:                                              ; preds = %100
  %116 = add i64 %111, -16
  %117 = lshr i64 %116, 4
  %118 = add nuw nsw i64 %117, 1
  %119 = and i64 %118, 3
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %135, label %121

121:                                              ; preds = %115, %121
  %122 = phi %"struct.std::__1::pair"* [ %128, %121 ], [ %106, %115 ]
  %123 = phi i64 [ %129, %121 ], [ %107, %115 ]
  %124 = phi %"struct.std::__1::pair"* [ %130, %121 ], [ %12, %115 ]
  %125 = phi i64 [ %131, %121 ], [ %119, %115 ]
  %126 = inttoptr i64 %123 to i8*
  %127 = bitcast %"struct.std::__1::pair"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false) #10
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 1
  %129 = ptrtoint %"struct.std::__1::pair"* %128 to i64
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %124, i64 1
  %131 = add i64 %125, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %121, !llvm.loop !19

133:                                              ; preds = %121
  %134 = ptrtoint %"struct.std::__1::pair"* %128 to i64
  br label %135

135:                                              ; preds = %115, %133
  %136 = phi %"struct.std::__1::pair"* [ %106, %115 ], [ %128, %133 ]
  %137 = phi i64 [ %107, %115 ], [ %134, %133 ]
  %138 = phi %"struct.std::__1::pair"* [ %12, %115 ], [ %130, %133 ]
  %139 = icmp ult i64 %116, 48
  br i1 %139, label %162, label %140

140:                                              ; preds = %135, %140
  %141 = phi %"struct.std::__1::pair"* [ %158, %140 ], [ %136, %135 ]
  %142 = phi i64 [ %159, %140 ], [ %137, %135 ]
  %143 = phi %"struct.std::__1::pair"* [ %160, %140 ], [ %138, %135 ]
  %144 = inttoptr i64 %142 to i8*
  %145 = bitcast %"struct.std::__1::pair"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 16, i1 false) #10
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 1
  %147 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 1
  %148 = bitcast %"struct.std::__1::pair"* %146 to i8*
  %149 = bitcast %"struct.std::__1::pair"* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 16, i1 false) #10
  %150 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 2
  %151 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 2
  %152 = bitcast %"struct.std::__1::pair"* %150 to i8*
  %153 = bitcast %"struct.std::__1::pair"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 16, i1 false) #10
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 3
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 3
  %156 = bitcast %"struct.std::__1::pair"* %154 to i8*
  %157 = bitcast %"struct.std::__1::pair"* %155 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 16, i1 false) #10
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 4
  %159 = ptrtoint %"struct.std::__1::pair"* %158 to i64
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 4
  %161 = icmp eq %"struct.std::__1::pair"* %113, %158
  br i1 %161, label %162, label %140

162:                                              ; preds = %140, %135
  %163 = ptrtoint %"struct.std::__1::pair"* %113 to i64
  %164 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  br label %165

165:                                              ; preds = %100, %162
  %166 = phi %"struct.std::__1::pair"* [ %164, %162 ], [ %15, %100 ]
  %167 = phi i64 [ %163, %162 ], [ %107, %100 ]
  store i64 %105, i64* %93, align 8
  %168 = bitcast %"struct.std::__1::pair"** %11 to i64*
  store i64 %107, i64* %168, align 8
  %169 = bitcast %"struct.std::__1::pair"** %3 to i64*
  store i64 %167, i64* %169, align 8
  store i64 %109, i64* %92, align 8
  %170 = icmp eq %"struct.std::__1::pair"* %166, null
  %171 = inttoptr i64 %167 to i8*
  br i1 %170, label %176, label %172

172:                                              ; preds = %165
  %173 = bitcast %"struct.std::__1::pair"* %166 to i8*
  tail call void @_ZdlPv(i8* %173) #11
  %174 = bitcast %"struct.std::__1::pair"** %3 to i8**
  %175 = load i8*, i8** %174, align 8
  br label %176

176:                                              ; preds = %172, %165, %86, %2
  %177 = phi i8* [ %175, %172 ], [ %171, %165 ], [ %90, %86 ], [ %9, %2 ]
  %178 = bitcast %"struct.std::__1::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #10
  %179 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %179, i64 1
  store %"struct.std::__1::pair"* %180, %"struct.std::__1::pair"** %3, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN2ui17ScopedMakeCurrentD1Ev(%"class.ui::ScopedMakeCurrent"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gpu29SharedImageRepresentationSkia17ScopedWriteAccessD1Ev(%"class.gpu::SharedImageRepresentationSkia::ScopedWriteAccess"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3gpu18SharedImageFactoryC1ERKNS_14GpuPreferencesERKNS_23GpuDriverBugWorkaroundsERKNS_14GpuFeatureInfoEPNS_18SharedContextStateEPNS_14MailboxManagerEPNS_18SharedImageManagerEPNS_12ImageFactoryEPNS_13MemoryTrackerEb(%"class.gpu::SharedImageFactory"*, %"struct.gpu::GpuPreferences"* dereferenceable(184), %"class.gpu::GpuDriverBugWorkarounds"* dereferenceable(148), %"struct.gpu::GpuFeatureInfo"* dereferenceable(184), %"class.gpu::SharedContextState"*, %"class.gpu::MailboxManager"*, %"class.gpu::SharedImageManager"*, %"class.gpu::ImageFactory"*, %"class.gpu::MemoryTracker"*, i1 zeroext) unnamed_addr #1

declare void @_ZN3gpu32SharedImageRepresentationFactoryC1EPNS_18SharedImageManagerEPNS_13MemoryTrackerE(%"class.gpu::SharedImageRepresentationFactory"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTracker"*) unnamed_addr #1

declare void @_ZN2ui17ScopedMakeCurrentC1EPN2gl9GLContextEPNS1_9GLSurfaceE(%"class.ui::ScopedMakeCurrent"*, %"class.gl::GLContext"*, %"class.gl::GLSurface"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN3gpu27GpuMemoryAblationExperimentEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN3gpu27GpuMemoryAblationExperimentEE10GetWeakPtrEv"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3gpu27GpuMemoryAblationExperimentEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3gpu27GpuMemoryAblationExperimentEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIMN3gpu27GpuMemoryAblationExperimentEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIMN3gpu27GpuMemoryAblationExperimentEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3gfx10ColorSpace10CreateSRGBEv: argument 0"}
!12 = distinct !{!12, !"_ZN3gfx10ColorSpace10CreateSRGBEv"}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !14}
!18 = distinct !{!18, !14}
!19 = distinct !{!19, !14}
