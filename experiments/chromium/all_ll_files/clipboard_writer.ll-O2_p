; ModuleID = '../../third_party/blink/renderer/modules/clipboard/clipboard_writer.cc'
source_filename = "../../third_party/blink/renderer/modules/clipboard/clipboard_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.209" }
%"struct.std::__1::atomic.209" = type { %"struct.std::__1::__atomic_base.210" }
%"struct.std::__1::__atomic_base.210" = type { %"struct.std::__1::__atomic_base.211" }
%"struct.std::__1::__atomic_base.211" = type { %"struct.std::__1::__cxx_atomic_impl.212" }
%"struct.std::__1::__cxx_atomic_impl.212" = type { %"struct.std::__1::__cxx_atomic_base_impl.213" }
%"struct.std::__1::__cxx_atomic_base_impl.213" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.184", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.127", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist.100"* }
%"class.blink::Worklist.100" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.107", %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.121", [4 x i8] }>
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109", %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { i64 }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { float }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.130", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.151" }
%"class.WTF::VectorBuffer.151" = type { %"class.WTF::VectorBufferBase.152" }
%"class.WTF::VectorBufferBase.152" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.165" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.86"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.438" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ClipboardWriter" = type { %"class.blink::FileReaderLoaderClient", %"class.blink::Member", %class.scoped_refptr.221, %class.scoped_refptr.221, %"class.std::__1::unique_ptr.227", %"class.blink::Member.416", %"class.blink::Member.427", %"class.blink::SelfKeepAlive.434" }
%"class.blink::FileReaderLoaderClient" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ClipboardPromise"* }
%"class.blink::ClipboardPromise" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.6", %"class.blink::Member.192", %"class.blink::Member.204", %"class.blink::HeapMojoRemote", %"class.WTF::String", %"class.blink::HeapVector", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.5" = type opaque
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.188", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.14" }
%"class.WTF::HashTable.14" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.16", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.190" }
%"class.blink::Persistent.190" = type { %"class.blink::PersistentBase.191" }
%"class.blink::PersistentBase.191" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::Member.192" = type { %"class.blink::MemberBase.193" }
%"class.blink::MemberBase.193" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration", i32, %"class.blink::Member.6", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.197", %"class.blink::SelfKeepAlive.201" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.196 }
%class.scoped_refptr.196 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.6", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.197", %class.scoped_refptr.200 }
%class.scoped_refptr.200 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.197" = type { %"class.v8::TracedReference.198" }
%"class.v8::TracedReference.198" = type { %"class.v8::BasicTracedReference.199" }
%"class.v8::BasicTracedReference.199" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.201" = type { %"class.blink::Persistent.202" }
%"class.blink::Persistent.202" = type { %"class.blink::PersistentBase.203" }
%"class.blink::PersistentBase.203" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Member.204" = type { %"class.blink::MemberBase.205" }
%"class.blink::MemberBase.205" = type { %"class.blink::ClipboardWriter"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.206" }
%"class.blink::Member.206" = type { %"class.blink::MemberBase.207" }
%"class.blink::MemberBase.207" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.208 }
%class.scoped_refptr.208 = type { %"class.WTF::StringImpl"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.216" }
%"class.WTF::Vector.216" = type { %"class.WTF::VectorBuffer.217" }
%"class.WTF::VectorBuffer.217" = type { %"class.WTF::VectorBufferBase.218" }
%"class.WTF::VectorBufferBase.218" = type { %"struct.std::__1::pair.219"*, i32, i32 }
%"struct.std::__1::pair.219" = type opaque
%class.scoped_refptr.221 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.222" }
%"struct.std::__1::atomic.222" = type { %"struct.std::__1::__atomic_base.223" }
%"struct.std::__1::__atomic_base.223" = type { %"struct.std::__1::__atomic_base.224" }
%"struct.std::__1::__atomic_base.224" = type { %"struct.std::__1::__cxx_atomic_impl.225" }
%"struct.std::__1::__cxx_atomic_impl.225" = type { %"struct.std::__1::__cxx_atomic_base_impl.226" }
%"struct.std::__1::__cxx_atomic_base_impl.226" = type { i32 }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::FileReaderLoader"* }
%"class.blink::FileReaderLoader" = type { %"class.blink::mojom::blink::BlobReaderClient", i32, %"class.blink::FileReaderLoaderClient"*, %"class.WTF::TextEncoding", %"class.WTF::String", %"class.blink::ArrayBufferContents", i8, %"class.blink::Persistent.230", %"class.WTF::String", %"class.std::__1::unique_ptr.232", i8, i64, %"class.absl::optional", i32, i32, %"class.mojo::ScopedHandleBase", %"class.mojo::SimpleWatcher", %"class.mojo::Receiver", i8, i8, %class.scoped_refptr.221, %"class.base::WeakPtrFactory.412" }
%"class.blink::mojom::blink::BlobReaderClient" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::Persistent.230" = type { %"class.blink::PersistentBase.231" }
%"class.blink::PersistentBase.231" = type { %"class.blink::DOMArrayBuffer"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.238, i8, %"class.mojo::ScopedHandleBase.239", %class.scoped_refptr.240, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.238 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::ScopedHandleBase.239" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.240 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.241 }
%class.scoped_refptr.241 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.242", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.242" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.243 }
%class.scoped_refptr.243 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.244", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.244" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.245" }
%"struct.std::__1::atomic.245" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__atomic_base.247" }
%"struct.std::__1::__atomic_base.247" = type { %"struct.std::__1::__cxx_atomic_impl.248" }
%"struct.std::__1::__cxx_atomic_impl.248" = type { %"struct.std::__1::__cxx_atomic_base_impl.249" }
%"struct.std::__1::__cxx_atomic_base_impl.249" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::BlobReaderClientStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.250, %"class.std::__1::unique_ptr.361", %"class.base::WeakPtrFactory.411" }
%class.scoped_refptr.250 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.238, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase.271", [4 x i8], %"class.absl::optional.327", %"class.absl::optional.332", %"class.absl::optional.288", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.352", i8, [7 x i8], %class.scoped_refptr.238, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.251" }>
%"class.base::RefCountedThreadSafe.251" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.254 }
%union.anon.254 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.264", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.270" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.270" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase.271", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.238, %"class.std::__1::unique_ptr.272", %"class.absl::optional.278", %"struct.std::__1::atomic.184", i8, i8, i8, i8, i32, i32, %"class.absl::optional.288", %"class.std::__1::unique_ptr.293", i8, i64, %class.scoped_refptr.323, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.326" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.mojo::SimpleWatcher"* }
%"class.absl::optional.278" = type { %"class.absl::optional_internal::optional_data.279" }
%"class.absl::optional_internal::optional_data.279" = type { %"class.absl::optional_internal::optional_data_base.280" }
%"class.absl::optional_internal::optional_data_base.280" = type { %"class.absl::optional_internal::optional_data_dtor_base.281" }
%"class.absl::optional_internal::optional_data_dtor_base.281" = type { i8, %union.anon.282 }
%union.anon.282 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.283", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.283" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.296", i8, i64, %class.scoped_refptr.297, %class.scoped_refptr.319 }
%"class.base::RepeatingCallback.296" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.297 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.298", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.308", i8, [7 x i8] }>
%"class.base::RefCounted.298" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.299 }
%class.scoped_refptr.299 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::map.308" = type { %"class.std::__1::__tree.309" }
%"class.std::__1::__tree.309" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.310", %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%class.scoped_refptr.319 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.323 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.324 }
%class.scoped_refptr.324 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.437", [4 x i8], %"class.base::RepeatingCallback.364", %class.scoped_refptr.238, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.209", [4 x i8] }>
%"class.base::RefCountedThreadSafe.437" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.364" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.325 }
%class.scoped_refptr.325 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.326" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase.271" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.absl::optional.327" = type { %"class.absl::optional_internal::optional_data.328" }
%"class.absl::optional_internal::optional_data.328" = type { %"class.absl::optional_internal::optional_data_base.329" }
%"class.absl::optional_internal::optional_data_base.329" = type { %"class.absl::optional_internal::optional_data_dtor_base.330" }
%"class.absl::optional_internal::optional_data_dtor_base.330" = type { i8, %union.anon.331 }
%union.anon.331 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.332" = type { %"class.absl::optional_internal::optional_data.333" }
%"class.absl::optional_internal::optional_data.333" = type { %"class.absl::optional_internal::optional_data_base.334" }
%"class.absl::optional_internal::optional_data_base.334" = type { %"class.absl::optional_internal::optional_data_dtor_base.335" }
%"class.absl::optional_internal::optional_data_dtor_base.335" = type { i8, [7 x i8], %union.anon.336 }
%union.anon.336 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.288" = type { %"class.absl::optional_internal::optional_data.289" }
%"class.absl::optional_internal::optional_data.289" = type { %"class.absl::optional_internal::optional_data_base.290" }
%"class.absl::optional_internal::optional_data_base.290" = type { %"class.absl::optional_internal::optional_data_dtor_base.291" }
%"class.absl::optional_internal::optional_data_dtor_base.291" = type { i8, %union.anon.292 }
%union.anon.292 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.337 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.337 = type { %"class.std::__1::map.340" }
%"class.std::__1::map.340" = type { %"class.std::__1::__tree.341" }
%"class.std::__1::__tree.341" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.351"*, i64 }
%"class.std::__1::unique_ptr.351" = type opaque
%"class.std::__1::map.352" = type { %"class.std::__1::__tree.353" }
%"class.std::__1::__tree.353" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.354", %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.364", %"class.base::OnceCallback.365", %"class.absl::optional.366", %"class.absl::optional.371", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.378", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.386", %"class.std::__1::map.397", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.406", i8, %class.scoped_refptr.238, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.407" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.365" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.366" = type { %"class.absl::optional_internal::optional_data.367" }
%"class.absl::optional_internal::optional_data.367" = type { %"class.absl::optional_internal::optional_data_base.368" }
%"class.absl::optional_internal::optional_data_base.368" = type { %"class.absl::optional_internal::optional_data_dtor_base.369" }
%"class.absl::optional_internal::optional_data_dtor_base.369" = type { i8, %union.anon.370 }
%union.anon.370 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.371" = type { %"class.absl::optional_internal::optional_data.372" }
%"class.absl::optional_internal::optional_data.372" = type { %"class.absl::optional_internal::optional_data_base.373" }
%"class.absl::optional_internal::optional_data_base.373" = type { %"class.absl::optional_internal::optional_data_dtor_base.374" }
%"class.absl::optional_internal::optional_data_dtor_base.374" = type { i8, %union.anon.375 }
%union.anon.375 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.238, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.376" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.376" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.377 }
%class.scoped_refptr.377 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.381", %class.scoped_refptr.382 }
%"class.base::RepeatingCallback.381" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.382 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.251", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.386" = type { %"class.std::__1::__tree.387" }
%"class.std::__1::__tree.387" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::map.397" = type { %"class.std::__1::__tree.398" }
%"class.std::__1::__tree.398" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.399", %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.base::OnceCallback.406" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.407" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.411" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::BlobReaderClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::BlobReaderClient"* }
%"class.base::WeakPtrFactory.412" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type { %"class.blink::HeapMojoRemote.420", i32, i8, [3 x i8], %"class.WTF::HashSet.423" }
%"class.blink::HeapMojoRemote.420" = type { %"class.blink::Member.421" }
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ClipboardHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ClipboardHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.WTF::HashSet.423" = type { %"class.WTF::HashTable.424" }
%"class.WTF::HashTable.424" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type { %"class.blink::HeapMojoRemote.431" }
%"class.blink::HeapMojoRemote.431" = type { %"class.blink::Member.432" }
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::RawClipboardHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::RawClipboardHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::SelfKeepAlive.434" = type { %"class.blink::Persistent.435" }
%"class.blink::Persistent.435" = type { %"class.blink::PersistentBase.436" }
%"class.blink::PersistentBase.436" = type { %"class.blink::ClipboardWriter"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentLocation" = type { %"class.base::Location" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.506", i32, i8, [3 x i8], %"class.blink::HeapVector.508", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.516", %"class.blink::Member.518", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.527", %"class.blink::Member.586", %"class.blink::Member.588", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.443" }
%"class.blink::HeapHashMap.443" = type { %"class.WTF::HashMap.446" }
%"class.WTF::HashMap.446" = type { %"class.WTF::HashTable.447" }
%"class.WTF::HashTable.447" = type <{ %"struct.WTF::KeyValuePair.449"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.449" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.450" }
%"class.blink::Supplementable.450" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.451" }
%"class.blink::HeapHashMap.451" = type { %"class.WTF::HashMap.454" }
%"class.WTF::HashMap.454" = type { %"class.WTF::HashTable.455" }
%"class.WTF::HashTable.455" = type <{ %"struct.WTF::KeyValuePair.457"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.457" = type { i8*, %"class.blink::Member.592" }
%"class.blink::Member.592" = type { %"class.blink::MemberBase.593" }
%"class.blink::MemberBase.593" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.594" }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.458, %"class.std::__1::unique_ptr.467", %"class.std::__1::unique_ptr.467", %"class.std::__1::unique_ptr.494", %"class.std::__1::unique_ptr.494", %"class.blink::Member.500", i32, [4 x i8], %"class.WTF::HashSet.502", i32, i32 }
%class.scoped_refptr.458 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.459", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.461", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.466 }
%"class.WTF::RefCounted.459" = type { %"class.base::RefCounted.460" }
%"class.base::RefCounted.460" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.461" = type { %"class.absl::optional_internal::optional_data.462" }
%"class.absl::optional_internal::optional_data.462" = type { %"class.absl::optional_internal::optional_data_base.463" }
%"class.absl::optional_internal::optional_data_base.463" = type { %"class.absl::optional_internal::optional_data_dtor_base.464" }
%"class.absl::optional_internal::optional_data_dtor_base.464" = type { i8, %union.anon.465 }
%union.anon.465 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.466 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.470", %"class.std::__1::map.481", %"class.std::__1::map.490"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.461" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.470" = type { %"class.std::__1::__tree.471" }
%"class.std::__1::__tree.471" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.472", %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::map.481" = type { %"class.std::__1::__tree.482" }
%"class.std::__1::__tree.482" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.483", %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::map.490" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.502" = type { %"class.WTF::HashTable.503" }
%"class.WTF::HashTable.503" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.508" = type { %"class.WTF::Vector.511" }
%"class.WTF::Vector.511" = type { %"class.WTF::VectorBuffer.512" }
%"class.WTF::VectorBuffer.512" = type { %"class.WTF::VectorBufferBase.513" }
%"class.WTF::VectorBufferBase.513" = type { %"class.blink::Member.514"*, i32, i32 }
%"class.blink::Member.514" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.520", i32, i32 }
%"class.blink::HeapHashMap.520" = type { %"class.WTF::HashMap.523" }
%"class.WTF::HashMap.523" = type { %"class.WTF::HashTable.524" }
%"class.WTF::HashTable.524" = type <{ %"struct.WTF::KeyValuePair.526"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.526" = type opaque
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.530" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.533" }
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { %"class.mojo::StructPtr.536"*, i32, i32 }
%"class.mojo::StructPtr.536" = type { %"class.std::__1::unique_ptr.537" }
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.540", %"class.WTF::HashMap.547", %"class.WTF::HashMap.552", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.557", i32, %"class.mojo::StructPtr.562", %"class.WTF::Vector.557" }
%"class.mojo::StructPtr.540" = type { %"class.std::__1::unique_ptr.541" }
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ %"struct.WTF::KeyValuePair.551"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.551" = type opaque
%"class.WTF::HashMap.552" = type { %"class.WTF::HashTable.553" }
%"class.WTF::HashTable.553" = type <{ %"struct.WTF::KeyValuePair.556"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.556" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.562" = type { %"class.std::__1::unique_ptr.563" }
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.557", i8, i8, [6 x i8] }>
%"class.WTF::Vector.557" = type { %"class.WTF::VectorBuffer.558" }
%"class.WTF::VectorBuffer.558" = type { %"class.WTF::VectorBufferBase.559" }
%"class.WTF::VectorBufferBase.559" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.577" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.361", i32 }>
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.590 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.590 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.591" }
%"class.base::RefCountedThreadSafe.591" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.271", i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::(anonymous namespace)::ClipboardImageWriter" = type { %"class.blink::ClipboardWriter" }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.611" }
%"class.blink::PersistentBase.611" = type { %"class.blink::DOMArrayBuffer"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.612" }
%"struct.std::__1::atomic.612" = type { %"struct.std::__1::__atomic_base.613" }
%"struct.std::__1::__atomic_base.613" = type { %"struct.std::__1::__cxx_atomic_impl.614" }
%"struct.std::__1::__cxx_atomic_impl.614" = type { %"struct.std::__1::__cxx_atomic_base_impl.615" }
%"struct.std::__1::__cxx_atomic_base_impl.615" = type { %"class.blink::PersistentNode"* }
%"class.blink::CrossThreadPersistent.616" = type { %"class.blink::PersistentBase.617" }
%"class.blink::PersistentBase.617" = type { %"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%class.sk_sp.665 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.666, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.666 = type { %"struct.std::__1::atomic.222" }
%"class.blink::ColorBehavior" = type { i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.667 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.222" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.632, i32, i32 }
%class.sk_sp.632 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.222" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.245" }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted.627", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.627" = type { %"class.base::RefCountedThreadSafe.628" }
%"class.base::RefCountedThreadSafe.628" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::ImageDecoder" = type { i32 (...)**, %class.scoped_refptr.626, %"class.WTF::Vector.629", i8, i32, %"class.blink::ColorBehavior", %"class.blink::ImageOrientation", %"class.blink::IntSize", i64, i8, %"class.std::__1::unique_ptr.636", i8, %"class.blink::IntSize", i8, i8, i8, %"class.std::__1::unique_ptr.642", %class.sk_sp.632, i8, %"class.std::__1::unique_ptr.656" }
%class.scoped_refptr.626 = type { %"class.blink::SegmentReader"* }
%"class.WTF::Vector.629" = type { %"class.WTF::VectorBuffer.630" }
%"class.WTF::VectorBuffer.630" = type { %"class.WTF::VectorBufferBase.631", [128 x i8] }
%"class.WTF::VectorBufferBase.631" = type { %"class.blink::ImageFrame"*, i32, i32 }
%"class.blink::ImageFrame" = type { %class.SkBitmap, %"class.SkBitmap::Allocator"*, i8, i32, %"class.blink::IntRect", i32, %"class.base::TimeDelta", i32, i32, i8, i8, i64 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.633 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.633 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::ImageOrientation" = type { i8 }
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.blink::ImagePlanes"* }
%"class.blink::ImagePlanes" = type <{ [3 x i8*], [3 x i64], i32, i8, [3 x i8] }>
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.642" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.blink::ColorProfile"* }
%"class.blink::ColorProfile" = type { %struct.skcms_ICCProfile, %"class.std::__1::unique_ptr.647" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.646, [8 x i8] }
%struct.anon.646 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { i8* }
%"class.std::__1::unique_ptr.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.blink::ColorProfileTransform"* }
%"class.blink::ColorProfileTransform" = type { %struct.skcms_ICCProfile*, %struct.skcms_ICCProfile }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.222", [4 x i8] }>
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.719", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.727", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.754", %"class.blink::FrameLoader", %"class.blink::Member.777", %"class.blink::Member.779", %"class.blink::Member.808", %"class.blink::Member.810", %"class.blink::Member.812", %"class.blink::Member.814", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.816", %class.scoped_refptr.818, %"class.blink::Member.819", %"class.blink::Member.821", %"class.blink::Member.823", %"class.blink::Member.825", %"class.blink::Member.827", %"class.blink::Member.829", %"class.blink::Member.831", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.833", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.844", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.850", %"class.std::__1::unique_ptr.851", %"class.absl::optional.707", i32, [4 x i8], %"class.std::__1::unique_ptr.857", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.875", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.894", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.909", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.416", %"class.blink::Member.427", %"class.blink::Member.917", %"class.blink::Member.919", %"class.mojo::StructPtr.922", %"class.blink::Member.931", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.933", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.680", %"class.blink::Member.682", %"class.blink::Member.684", i8, i32, i8, i32, %"class.blink::Member.686", %"class.blink::Member.688", %"class.blink::FrameLifecycle", %"class.blink::Member.678", %"class.blink::Member.678", %"class.blink::Member.678", %"class.blink::Member.678", %"class.blink::Member.678", %"class.blink::Member.678", %"class.blink::Member.690", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.700", i8, %"class.base::UnguessableToken", %"class.absl::optional.702", %"class.absl::optional.707", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.678", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::Frame"* }
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.678", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.692" }
%"class.std::__1::vector.692" = type { %"class.std::__1::__vector_base.693" }
%"class.std::__1::__vector_base.693" = type { %"struct.std::__1::pair.694"*, %"struct.std::__1::pair.694"*, %"class.std::__1::__compressed_pair.695" }
%"struct.std::__1::pair.694" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"struct.std::__1::pair.694"* }
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.702" = type { %"class.absl::optional_internal::optional_data.703" }
%"class.absl::optional_internal::optional_data.703" = type { %"class.absl::optional_internal::optional_data_base.704" }
%"class.absl::optional_internal::optional_data_base.704" = type { %"class.absl::optional_internal::optional_data_dtor_base.705" }
%"class.absl::optional_internal::optional_data_dtor_base.705" = type { i8, %union.anon.706 }
%union.anon.706 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.712" }
%"class.blink::HeapHashSet.712" = type { %"class.WTF::HashSet.715" }
%"class.WTF::HashSet.715" = type { %"class.WTF::HashTable.716" }
%"class.WTF::HashTable.716" = type <{ %"class.blink::WeakMember.718"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.718" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.719" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.720" }
%"class.blink::HeapHashMap.720" = type { %"class.WTF::HashMap.723" }
%"class.WTF::HashMap.723" = type { %"class.WTF::HashTable.724" }
%"class.WTF::HashTable.724" = type <{ %"struct.WTF::KeyValuePair.726"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.726" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.730", %"class.base::WeakPtrFactory.735" }
%"class.WTF::HashMap.730" = type { %"class.WTF::HashTable.731" }
%"class.WTF::HashTable.731" = type <{ %"struct.WTF::KeyValuePair.734"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.734" = type opaque
%"class.base::WeakPtrFactory.735" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.739" }
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.364", %"class.base::RepeatingCallback.743", i64, %"class.std::__1::map.744", i8*, i64, %"class.base::WeakPtrFactory.753" }
%"class.base::RepeatingCallback.743" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.744" = type { %"class.std::__1::__tree.745" }
%"class.std::__1::__tree.745" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.746", %"class.std::__1::__compressed_pair.750" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.base::WeakPtrFactory.753" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.754" = type { %"class.WTF::HashSet.757" }
%"class.WTF::HashSet.757" = type { %"class.WTF::HashTable.758" }
%"class.WTF::HashTable.758" = type <{ %"class.blink::WeakMember.760"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.760" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.690", %"class.blink::Member.761", %"class.blink::Member.763", %"class.std::__1::unique_ptr.765", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.423" }
%"class.blink::Member.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.768" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.208 }
%"class.blink::Member.777" = type { %"class.blink::MemberBase.778" }
%"class.blink::MemberBase.778" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1278", %"class.blink::Member.690", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1283", i8, i32, %"class.blink::Color", %"class.absl::optional.1285", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1290", %"class.blink::Member.1292", %"class.blink::Member.1292", %"class.std::__1::unique_ptr.1295", i32, [4 x i8], %"class.WTF::HashSet.1298", %"class.blink::Member.1305", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1307", %"class.blink::HeapHashSet.1314", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1322", i8, %"class.blink::Member.1328", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1340", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1354", i8, %"class.std::__1::unique_ptr.1360", %"class.std::__1::unique_ptr.1477", %"class.WTF::Vector.1483", i32, %class.scoped_refptr.1488, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1489", %"class.blink::Member.1491", %"class.blink::Member.1493", %"class.blink::HeapHashSet.1495", %"class.blink::HeapHashSet.1502", %"class.std::__1::unique_ptr.1509", %"class.std::__1::unique_ptr.1516", %"class.WTF::Vector.1026" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1278" = type { %"class.WTF::HashTable.1279" }
%"class.WTF::HashTable.1279" = type <{ %class.scoped_refptr.1282*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1282 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1283" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1284", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.221, %"class.base::WeakPtrFactory.1056" }
%"class.base::WeakPtrFactory.1056" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1284" = type { %"class.blink::MemberBase.778" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1285" = type { %"class.absl::optional_internal::optional_data.1286" }
%"class.absl::optional_internal::optional_data.1286" = type { %"class.absl::optional_internal::optional_data_base.1287" }
%"class.absl::optional_internal::optional_data_base.1287" = type { %"class.absl::optional_internal::optional_data_dtor_base.1288" }
%"class.absl::optional_internal::optional_data_dtor_base.1288" = type { i8, %union.anon.1289 }
%union.anon.1289 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1292" = type { %"class.blink::MemberBase.1293" }
%"class.blink::MemberBase.1293" = type { %"class.blink::HeapHashSet.1294"* }
%"class.blink::HeapHashSet.1294" = type opaque
%"class.std::__1::unique_ptr.1295" = type { %"class.std::__1::__compressed_pair.1296" }
%"class.std::__1::__compressed_pair.1296" = type { %"struct.std::__1::__compressed_pair_elem.1297" }
%"struct.std::__1::__compressed_pair_elem.1297" = type { %"class.WTF::HashSet.1298"* }
%"class.WTF::HashSet.1298" = type { %"class.WTF::HashTable.1299" }
%"class.WTF::HashTable.1299" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1305" = type { %"class.blink::MemberBase.1306" }
%"class.blink::MemberBase.1306" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1307" = type { %"class.WTF::HashSet.1310" }
%"class.WTF::HashSet.1310" = type { %"class.WTF::HashTable.1311" }
%"class.WTF::HashTable.1311" = type <{ %"class.blink::Member.1313"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1313" = type opaque
%"class.blink::HeapHashSet.1314" = type { %"class.WTF::HashSet.1317" }
%"class.WTF::HashSet.1317" = type { %"class.WTF::HashTable.1318" }
%"class.WTF::HashTable.1318" = type <{ %"class.blink::Member.1320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.std::__1::unique_ptr.1322" = type { %"class.std::__1::__compressed_pair.1323" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1332", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1332" = type { %"class.WTF::HashTable.1333" }
%"class.WTF::HashTable.1333" = type <{ %"struct.WTF::KeyValuePair.1335"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1335" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1336", i32, i32 }
%"class.WTF::Vector.1336" = type { %"class.WTF::VectorBuffer.1337" }
%"class.WTF::VectorBuffer.1337" = type { %"class.WTF::VectorBufferBase.1338" }
%"class.WTF::VectorBufferBase.1338" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1340" = type { %"class.WTF::LinkedHashSet.1343" }
%"class.WTF::LinkedHashSet.1343" = type { %"class.WTF::HashMap.1344", %"class.WTF::VectorBackedLinkedList.1348" }
%"class.WTF::HashMap.1344" = type { %"class.WTF::HashTable.1345" }
%"class.WTF::HashTable.1345" = type <{ %"struct.WTF::KeyValuePair.1347"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1347" = type opaque
%"class.WTF::VectorBackedLinkedList.1348" = type { %"class.WTF::Vector.1349", i32, i32 }
%"class.WTF::Vector.1349" = type { %"class.WTF::VectorBuffer.1350" }
%"class.WTF::VectorBuffer.1350" = type { %"class.WTF::VectorBufferBase.1351" }
%"class.WTF::VectorBufferBase.1351" = type { %"class.WTF::VectorBackedLinkedListNode.1352"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1352" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1354" = type { %"class.std::__1::__compressed_pair.1355" }
%"class.std::__1::__compressed_pair.1355" = type { %"struct.std::__1::__compressed_pair_elem.1356" }
%"struct.std::__1::__compressed_pair_elem.1356" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1360" = type { %"class.std::__1::__compressed_pair.1361" }
%"class.std::__1::__compressed_pair.1361" = type { %"struct.std::__1::__compressed_pair_elem.1362" }
%"struct.std::__1::__compressed_pair_elem.1362" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1363, %class.scoped_refptr.1363, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1454", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1459", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1363 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1364", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1371" }
%"class.WTF::RefCounted.1364" = type { %"class.base::RefCounted.1365" }
%"class.base::RefCounted.1365" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1366", i32, [4 x i8] }>
%"class.WTF::Vector.1366" = type { %"class.WTF::VectorBuffer.1367" }
%"class.WTF::VectorBuffer.1367" = type { %"class.WTF::VectorBufferBase.1368" }
%"class.WTF::VectorBufferBase.1368" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1377", %"class.std::__1::unique_ptr.1426", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1374, %class.scoped_refptr.1375, %class.scoped_refptr.1376 }
%class.scoped_refptr.1374 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1390", i8, i8, %class.scoped_refptr.1374, i32, i32 }
%"class.WTF::RefCounted.1390" = type { %"class.base::RefCounted.1391" }
%"class.base::RefCounted.1391" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1375 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1545" }
%"class.blink::PaintPropertyNode.1545" = type { %"class.WTF::RefCounted.1546", i8, i8, %class.scoped_refptr.1375, i32, i32 }
%"class.WTF::RefCounted.1546" = type { %"class.base::RefCounted.1547" }
%"class.base::RefCounted.1547" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1376 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1542" }
%"class.blink::PaintPropertyNode.1542" = type { %"class.WTF::RefCounted.1543", i8, i8, %class.scoped_refptr.1376, i32, i32 }
%"class.WTF::RefCounted.1543" = type { %"class.base::RefCounted.1544" }
%"class.base::RefCounted.1544" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1377" = type { %"class.std::__1::__compressed_pair.1378" }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.1379" }
%"struct.std::__1::__compressed_pair_elem.1379" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1380", %"class.WTF::Vector.1385", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1380" = type { %"class.WTF::VectorBuffer.1381" }
%"class.WTF::VectorBuffer.1381" = type { %"class.WTF::VectorBufferBase.1382" }
%"class.WTF::VectorBufferBase.1382" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1405" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1398, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1399", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1392" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1392" = type { %"class.std::__1::__compressed_pair.1393" }
%"class.std::__1::__compressed_pair.1393" = type { %"struct.std::__1::__compressed_pair_elem.1394" }
%"struct.std::__1::__compressed_pair_elem.1394" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1398 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1527", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1527" = type { %"class.WTF::RefCounted.1528", i8, i8, %class.scoped_refptr.1398, i32, i32 }
%"class.WTF::RefCounted.1528" = type { %"class.base::RefCounted.1529" }
%"class.base::RefCounted.1529" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1530" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1530" = type { %"class.absl::optional_internal::optional_data.1531" }
%"class.absl::optional_internal::optional_data.1531" = type { %"class.absl::optional_internal::optional_data_base.1532" }
%"class.absl::optional_internal::optional_data_base.1532" = type { %"class.absl::optional_internal::optional_data_dtor_base.1533" }
%"class.absl::optional_internal::optional_data_dtor_base.1533" = type { i8, %union.anon.1534 }
%union.anon.1534 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1535", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1535" = type { %"class.std::__1::__vector_base.1536" }
%"class.std::__1::__vector_base.1536" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1537" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1537" = type { %"struct.std::__1::__compressed_pair_elem.1538" }
%"struct.std::__1::__compressed_pair_elem.1538" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1399" = type { %"class.std::__1::__compressed_pair.1400" }
%"class.std::__1::__compressed_pair.1400" = type { %"struct.std::__1::__compressed_pair_elem.1401" }
%"struct.std::__1::__compressed_pair_elem.1401" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1405" = type { %"class.std::__1::__compressed_pair.1406" }
%"class.std::__1::__compressed_pair.1406" = type { %"struct.std::__1::__compressed_pair_elem.1407" }
%"struct.std::__1::__compressed_pair_elem.1407" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1408", %"class.std::__1::unique_ptr.1414", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1408" = type { %"class.std::__1::__compressed_pair.1409" }
%"class.std::__1::__compressed_pair.1409" = type { %"struct.std::__1::__compressed_pair_elem.1410" }
%"struct.std::__1::__compressed_pair_elem.1410" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1414" = type { %"class.std::__1::__compressed_pair.1415" }
%"class.std::__1::__compressed_pair.1415" = type { %"struct.std::__1::__compressed_pair_elem.1416" }
%"struct.std::__1::__compressed_pair_elem.1416" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1426" = type { %"class.std::__1::__compressed_pair.1427" }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.1428" }
%"struct.std::__1::__compressed_pair_elem.1428" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1429", %"class.absl::optional.1429" }
%"class.absl::optional.1429" = type { %"class.absl::optional_internal::optional_data.1430" }
%"class.absl::optional_internal::optional_data.1430" = type { %"class.absl::optional_internal::optional_data_base.1431" }
%"class.absl::optional_internal::optional_data_base.1431" = type { %"class.absl::optional_internal::optional_data_dtor_base.1432" }
%"class.absl::optional_internal::optional_data_dtor_base.1432" = type { i8, [3 x i8], %union.anon.1433 }
%union.anon.1433 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1371"*, %"class.absl::optional.1439", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1439" = type { %"class.absl::optional_internal::optional_data.1440" }
%"class.absl::optional_internal::optional_data.1440" = type { %"class.absl::optional_internal::optional_data_base.1441" }
%"class.absl::optional_internal::optional_data_base.1441" = type { %"class.absl::optional_internal::optional_data_dtor_base.1442" }
%"class.absl::optional_internal::optional_data_dtor_base.1442" = type { i8, %union.anon.1443 }
%union.anon.1443 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1444", %"class.WTF::Vector.1449" }
%"class.WTF::Vector.1444" = type { %"class.WTF::VectorBuffer.1445" }
%"class.WTF::VectorBuffer.1445" = type { %"class.WTF::VectorBufferBase.1446", [128 x i8] }
%"class.WTF::VectorBufferBase.1446" = type { i32*, i32, i32 }
%"class.WTF::Vector.1449" = type { %"class.WTF::VectorBuffer.1450" }
%"class.WTF::VectorBuffer.1450" = type { %"class.WTF::VectorBufferBase.1451", [128 x i8] }
%"class.WTF::VectorBufferBase.1451" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1454" = type { %"class.WTF::VectorBuffer.1455" }
%"class.WTF::VectorBuffer.1455" = type { %"class.WTF::VectorBufferBase.1456" }
%"class.WTF::VectorBufferBase.1456" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1459" = type { %"class.WTF::HashTable.1460" }
%"class.WTF::HashTable.1460" = type <{ %"struct.WTF::KeyValuePair.1463"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1463" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1464", %"class.WTF::Vector.1469" }
%"class.WTF::HashMap.1464" = type { %"class.WTF::HashTable.1465" }
%"class.WTF::HashTable.1465" = type <{ %"struct.WTF::KeyValuePair.1468"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1468" = type opaque
%"class.WTF::Vector.1469" = type { %"class.WTF::VectorBuffer.1470" }
%"class.WTF::VectorBuffer.1470" = type { %"class.WTF::VectorBufferBase.1471" }
%"class.WTF::VectorBufferBase.1471" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1477" = type { %"class.std::__1::__compressed_pair.1478" }
%"class.std::__1::__compressed_pair.1478" = type { %"struct.std::__1::__compressed_pair_elem.1479" }
%"struct.std::__1::__compressed_pair_elem.1479" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1483" = type { %"class.WTF::VectorBuffer.1484" }
%"class.WTF::VectorBuffer.1484" = type { %"class.WTF::VectorBufferBase.1485" }
%"class.WTF::VectorBufferBase.1485" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1488 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1491" = type { %"class.blink::MemberBase.1492" }
%"class.blink::MemberBase.1492" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1495" = type { %"class.WTF::HashSet.1498" }
%"class.WTF::HashSet.1498" = type { %"class.WTF::HashTable.1499" }
%"class.WTF::HashTable.1499" = type <{ %"class.blink::WeakMember.1501"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1501" = type opaque
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::WeakMember.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1508" = type opaque
%"class.std::__1::unique_ptr.1509" = type { %"class.std::__1::__compressed_pair.1510" }
%"class.std::__1::__compressed_pair.1510" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"struct.std::__1::__compressed_pair_elem.1511" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1512" }
%"class.base::time_internal::TimeBase.1512" = type { i64 }
%"class.std::__1::unique_ptr.1516" = type { %"class.std::__1::__compressed_pair.1517" }
%"class.std::__1::__compressed_pair.1517" = type { %"struct.std::__1::__compressed_pair_elem.1518" }
%"struct.std::__1::__compressed_pair_elem.1518" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1519", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1519" = type { %"class.absl::optional_internal::optional_data.1520" }
%"class.absl::optional_internal::optional_data.1520" = type { %"class.absl::optional_internal::optional_data_base.1521" }
%"class.absl::optional_internal::optional_data_base.1521" = type { %"class.absl::optional_internal::optional_data_dtor_base.1522" }
%"class.absl::optional_internal::optional_data_dtor_base.1522" = type { i8, %union.anon.1523 }
%union.anon.1523 = type { %"class.base::Time" }
%"class.WTF::Vector.1026" = type { %"class.WTF::VectorBuffer.1027" }
%"class.WTF::VectorBuffer.1027" = type { %"class.WTF::VectorBufferBase.1028" }
%"class.WTF::VectorBufferBase.1028" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.792" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.781", %"class.blink::Member.781" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.781", %"class.blink::Member.783", %"class.blink::Member.781", %"class.blink::Member.781", %"class.blink::Member.785" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.938", %"class.blink::Member.940", %"class.blink::Member.783", %"class.blink::Member.942", %"class.blink::Member.942", %"class.blink::Member.964", %"class.blink::Member.966", %"class.blink::Member.968", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.973", %"class.blink::HeapVector.975" }
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1018", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1026", %"class.WTF::Vector.1026", i8, i32, %"class.blink::Member.1031", %"class.blink::Member.500", %"class.blink::Member.1033", %"class.blink::Member.1035", %"class.blink::Member.1037", %"class.blink::Member.1039", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1041", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1047", %"class.blink::Member.1049", %"class.blink::Member.981", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1051", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.957", %"class.blink::Member.779", %"class.blink::Member.1058", %"class.blink::Member.779", %"class.blink::Member.779", %"class.blink::Member.779", %"class.blink::UserActionElementSet", %"class.blink::Member.1067", double, double, i64, i64, %"class.blink::HeapHashSet.1069", %"class.blink::HeapHashSet.1076", i16, i8, %"class.blink::Member.1083", %"class.blink::Member.1085", %"class.blink::Member.1087", %"class.blink::Member.1089", %"class.blink::TextLinkColors", %"class.blink::Member.1091", i8, [7 x i8], %"class.blink::HeapHashMap.1093", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.779", %"class.WTF::Vector.1100", %"class.blink::Member.1105", %"class.blink::Member.1107", i8, %"class.blink::Member.779", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1109", %"class.blink::HeapVector.1111", %"class.std::__1::unique_ptr.1119", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1125", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1138", %"class.WTF::Vector.1140", i8, i8, %"class.std::__1::unique_ptr.1145", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.957", %"class.blink::HeapVector.1151", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1159", i8, i32, %"class.blink::Member.1161", %"class.blink::Member.1163", %"class.blink::Member.1165", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1167", %"class.WTF::HashMap.1169", %"class.blink::Member.1174", %"class.blink::Member.1176", %"class.blink::Member.1178", %"class.blink::Member.1180", %"class.blink::Member.940", %"class.blink::Member.940", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1182", i8, i32, %"class.blink::Member.1189", %"class.blink::Member.1191", i32, %"class.blink::Member.1193", %"class.blink::Member.1195", %"class.blink::Member.1197", %"class.std::__1::unique_ptr.1199", i64, %"class.std::__1::unique_ptr.1205", i32, i32, %"class.blink::Member.1211", %"class.blink::Member.1213", %"class.blink::Member.1215", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1217", %"class.WTF::Vector.1219", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1224", %"class.blink::Member.1231", %"class.std::__1::unique_ptr.1233", %"class.blink::Member.1239", i8, i8, %"class.WTF::String", %"class.blink::Member.1241", i8, [7 x i8], %"class.blink::HeapHashMap.1243", %"class.blink::HeapObserverSet.1250", %"class.blink::Member.1258", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1260", i32, i8, i8, %"class.blink::WeakMember.1262", %"class.blink::Member.1263" }
%"class.blink::Supplementable.1018" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1019" }
%"class.blink::HeapHashMap.1019" = type { %"class.WTF::HashMap.1022" }
%"class.WTF::HashMap.1022" = type { %"class.WTF::HashTable.1023" }
%"class.WTF::HashTable.1023" = type <{ %"struct.WTF::KeyValuePair.1025"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1025" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1031" = type { %"class.blink::MemberBase.1032" }
%"class.blink::MemberBase.1032" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1035" = type { %"class.blink::MemberBase.1036" }
%"class.blink::MemberBase.1036" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1037" = type { %"class.blink::MemberBase.1038" }
%"class.blink::MemberBase.1038" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1039" = type { %"class.blink::MemberBase.1040" }
%"class.blink::MemberBase.1040" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1041" = type { %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.981" = type { %"class.blink::MemberBase.982" }
%"class.blink::MemberBase.982" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.983", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.985, %"class.WTF::Vector.986", %"class.WTF::Vector.986", %"class.blink::Member.781", %"class.blink::Member.991", %"class.blink::HeapHashSet.995", %"class.blink::Member.940", %"class.WTF::HashSet.1002", %"class.WTF::TextPosition", %"class.blink::Member.1006", %"class.blink::HeapVector.1008", %"class.blink::Member.1015" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.983" = type { %"class.blink::MemberBase.984" }
%"class.blink::MemberBase.984" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.985 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.986" = type { %"class.WTF::VectorBuffer.987" }
%"class.WTF::VectorBuffer.987" = type { %"class.WTF::VectorBufferBase.988" }
%"class.WTF::VectorBufferBase.988" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.993" }
%"class.blink::Member.993" = type { %"class.blink::MemberBase.994" }
%"class.blink::MemberBase.994" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.995" = type { %"class.WTF::HashSet.998" }
%"class.WTF::HashSet.998" = type { %"class.WTF::HashTable.999" }
%"class.WTF::HashTable.999" = type <{ %"class.blink::WeakMember.1001"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1001" = type { %"class.blink::MemberBase.784" }
%"class.WTF::HashSet.1002" = type { %"class.WTF::HashTable.1003" }
%"class.WTF::HashTable.1003" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1008" = type { %"class.WTF::Vector.1011" }
%"class.WTF::Vector.1011" = type { %"class.WTF::VectorBuffer.1012" }
%"class.WTF::VectorBuffer.1012" = type { %"class.WTF::VectorBufferBase.1013" }
%"class.WTF::VectorBufferBase.1013" = type { %"class.blink::Member.991"*, i32, i32 }
%"class.blink::Member.1015" = type { %"class.blink::MemberBase.1016" }
%"class.blink::MemberBase.1016" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1051" = type { %"class.WTF::VectorBuffer.1052" }
%"class.WTF::VectorBuffer.1052" = type { %"class.WTF::VectorBufferBase.1053" }
%"class.WTF::VectorBufferBase.1053" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.200 }
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1060" }
%"class.blink::HeapHashMap.1060" = type { %"class.WTF::HashMap.1063" }
%"class.WTF::HashMap.1063" = type { %"class.WTF::HashTable.1064" }
%"class.WTF::HashTable.1064" = type <{ %"struct.WTF::KeyValuePair.1066"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1066" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1069" = type { %"class.WTF::HashSet.1072" }
%"class.WTF::HashSet.1072" = type { %"class.WTF::HashTable.1073" }
%"class.WTF::HashTable.1073" = type <{ %"class.blink::WeakMember.1075"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1075" = type opaque
%"class.blink::HeapHashSet.1076" = type { %"class.WTF::HashSet.1079" }
%"class.WTF::HashSet.1079" = type { %"class.WTF::HashTable.1080" }
%"class.WTF::HashTable.1080" = type <{ %"class.blink::WeakMember.1082"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1082" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1085" = type { %"class.blink::MemberBase.1086" }
%"class.blink::MemberBase.1086" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.783", %"class.blink::HeapVector.975" }
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1093" = type { %"class.WTF::HashMap.1096" }
%"class.WTF::HashMap.1096" = type { %"class.WTF::HashTable.1097" }
%"class.WTF::HashTable.1097" = type <{ %"struct.WTF::KeyValuePair.1099"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1099" = type opaque
%"class.WTF::Vector.1100" = type { %"class.WTF::VectorBuffer.1101" }
%"class.WTF::VectorBuffer.1101" = type { %"class.WTF::VectorBufferBase.1102" }
%"class.WTF::VectorBufferBase.1102" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1111" = type { %"class.WTF::Vector.1114" }
%"class.WTF::Vector.1114" = type { %"class.WTF::VectorBuffer.1115" }
%"class.WTF::VectorBuffer.1115" = type { %"class.WTF::VectorBufferBase.1116" }
%"class.WTF::VectorBufferBase.1116" = type { %"class.blink::Member.1117"*, i32, i32 }
%"class.blink::Member.1117" = type opaque
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1125" = type { %"class.WTF::HashSet.1128" }
%"class.WTF::HashSet.1128" = type { %"class.WTF::HashTable.1129" }
%"class.WTF::HashTable.1129" = type <{ %"class.blink::WeakMember.1131"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1131" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1132", i32, [4 x i8] }>
%"class.WTF::Vector.1132" = type { %"class.WTF::VectorBuffer.1133" }
%"class.WTF::VectorBuffer.1133" = type { %"class.WTF::VectorBufferBase.1134" }
%"class.WTF::VectorBufferBase.1134" = type { %"struct.std::__1::pair.1135"*, i32, i32 }
%"struct.std::__1::pair.1135" = type opaque
%"class.blink::Member.1138" = type { %"class.blink::MemberBase.1139" }
%"class.blink::MemberBase.1139" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1140" = type { %"class.WTF::VectorBuffer.1141" }
%"class.WTF::VectorBuffer.1141" = type { %"class.WTF::VectorBufferBase.1142" }
%"class.WTF::VectorBufferBase.1142" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1145" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.957" = type { %"class.WTF::Vector.960" }
%"class.WTF::Vector.960" = type { %"class.WTF::VectorBuffer.961" }
%"class.WTF::VectorBuffer.961" = type { %"class.WTF::VectorBufferBase.962" }
%"class.WTF::VectorBufferBase.962" = type { %"class.blink::Member.779"*, i32, i32 }
%"class.blink::HeapVector.1151" = type { %"class.WTF::Vector.1154" }
%"class.WTF::Vector.1154" = type { %"class.WTF::VectorBuffer.1155" }
%"class.WTF::VectorBuffer.1155" = type { %"class.WTF::VectorBufferBase.1156" }
%"class.WTF::VectorBufferBase.1156" = type { %"class.blink::Member.1157"*, i32, i32 }
%"class.blink::Member.1157" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.940" }
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1167" = type { %"class.blink::MemberBase.1168" }
%"class.blink::MemberBase.1168" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1169" = type { %"class.WTF::HashTable.1170" }
%"class.WTF::HashTable.1170" = type <{ %"struct.WTF::KeyValuePair.1173"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1173" = type opaque
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1057", { i64, i64 } }
%"class.blink::WeakMember.1057" = type { %"class.blink::MemberBase.941" }
%"class.blink::HeapHashSet.1182" = type { %"class.WTF::HashSet.1185" }
%"class.WTF::HashSet.1185" = type { %"class.WTF::HashTable.1186" }
%"class.WTF::HashTable.1186" = type <{ %"class.blink::Member.1188"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1188" = type opaque
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1199" = type { %"class.std::__1::__compressed_pair.1200" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1205" = type { %"class.std::__1::__compressed_pair.1206" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1211" = type { %"class.blink::MemberBase.1212" }
%"class.blink::MemberBase.1212" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1219" = type { %"class.WTF::VectorBuffer.1220" }
%"class.WTF::VectorBuffer.1220" = type { %"class.WTF::VectorBufferBase.1221" }
%"class.WTF::VectorBufferBase.1221" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1224" = type { %"class.WTF::HashMap.1227" }
%"class.WTF::HashMap.1227" = type { %"class.WTF::HashTable.1228" }
%"class.WTF::HashTable.1228" = type <{ %"struct.WTF::KeyValuePair.1230"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1230" = type opaque
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1233" = type { %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1239" = type { %"class.blink::MemberBase.1240" }
%"class.blink::MemberBase.1240" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1243" = type { %"class.WTF::HashMap.1246" }
%"class.WTF::HashMap.1246" = type { %"class.WTF::HashTable.1247" }
%"class.WTF::HashTable.1247" = type <{ %"struct.WTF::KeyValuePair.1249"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1249" = type opaque
%"class.blink::HeapObserverSet.1250" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1251" }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::WeakMember.1257"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1257" = type opaque
%"class.blink::Member.1258" = type { %"class.blink::MemberBase.1259" }
%"class.blink::MemberBase.1259" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.940", %"class.blink::HeapHashSet.1267", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1274", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1267" = type { %"class.WTF::HashSet.1270" }
%"class.WTF::HashSet.1270" = type { %"class.WTF::HashTable.1271" }
%"class.WTF::HashTable.1271" = type <{ %"class.blink::Member.1273"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1273" = type opaque
%"class.blink::HeapTaskRunnerTimer.1274" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1275", { i64, i64 } }
%"class.blink::WeakMember.1275" = type { %"class.blink::MemberBase.1261" }
%"class.blink::WeakMember.1262" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::Node"* }
%"class.blink::Member.1263" = type { %"class.blink::MemberBase.1264" }
%"class.blink::MemberBase.1264" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.946" }
%"class.blink::HeapHashMap.946" = type { %"class.WTF::HashMap.949" }
%"class.WTF::HashMap.949" = type { %"class.WTF::HashTable.950" }
%"class.WTF::HashTable.950" = type <{ %"struct.WTF::KeyValuePair.952"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.952" = type { %"class.WTF::AtomicString", %"class.blink::Member.953" }
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.779", i32, %"class.blink::HeapVector.957" }
%"class.blink::Member.964" = type { %"class.blink::MemberBase.965" }
%"class.blink::MemberBase.965" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.970" }
%"class.blink::Member.970" = type { %"class.blink::MemberBase.971" }
%"class.blink::MemberBase.971" = type { %"class.blink::HeapHashMap.972"* }
%"class.blink::HeapHashMap.972" = type opaque
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.975" = type { %"class.WTF::Vector.978" }
%"class.WTF::Vector.978" = type { %"class.WTF::VectorBuffer.979" }
%"class.WTF::VectorBuffer.979" = type { %"class.WTF::VectorBufferBase.980" }
%"class.WTF::VectorBufferBase.980" = type { %"class.blink::Member.981"*, i32, i32 }
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.789 }
%class.scoped_refptr.789 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.790", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.790" = type { %"class.base::RefCounted.791" }
%"class.base::RefCounted.791" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.792" = type { %"class.blink::MemberBase.793" }
%"class.blink::MemberBase.793" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.796", %"class.blink::Member.798", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.796" = type { %"class.WTF::SingleThreadedBitField.797" }
%"class.WTF::SingleThreadedBitField.797" = type { i32 }
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.800 }
%class.scoped_refptr.800 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.801", %"class.WTF::AtomicString", %"class.WTF::Vector.803" }
%"class.WTF::RefCounted.801" = type { %"class.base::RefCounted.802" }
%"class.base::RefCounted.802" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.803" = type { %"class.WTF::VectorBuffer.804" }
%"class.WTF::VectorBuffer.804" = type { %"class.WTF::VectorBufferBase.805", [32 x i8] }
%"class.WTF::VectorBufferBase.805" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.814" = type { %"class.blink::MemberBase.815" }
%"class.blink::MemberBase.815" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.816" = type { %"class.blink::MemberBase.817" }
%"class.blink::MemberBase.817" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.818 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.833" = type { %"class.blink::Member.834" }
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.838" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.250, %"class.std::__1::unique_ptr.361", %"class.mojo::ScopedHandleBase.271", [4 x i8], %class.scoped_refptr.238, i32 }>
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.850" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.707" = type { %"class.absl::optional_internal::optional_data.708" }
%"class.absl::optional_internal::optional_data.708" = type { %"class.absl::optional_internal::optional_data_base.709" }
%"class.absl::optional_internal::optional_data_base.709" = type { %"class.absl::optional_internal::optional_data_dtor_base.710" }
%"class.absl::optional_internal::optional_data_dtor_base.710" = type { i8, %union.anon.711 }
%union.anon.711 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.863" }
%"class.blink::Member.863" = type { %"class.blink::MemberBase.864" }
%"class.blink::MemberBase.864" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.867" }
%"class.mojo::AssociatedRemote.867" = type { %"class.mojo::internal::AssociatedInterfacePtrState.868" }
%"class.mojo::internal::AssociatedInterfacePtrState.868" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.869" }
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.875" = type { %"class.blink::Member.876" }
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.880" }
%"class.mojo::AssociatedRemote.880" = type { %"class.mojo::internal::AssociatedInterfacePtrState.881" }
%"class.mojo::internal::AssociatedInterfacePtrState.881" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.882" }
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.888" }
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.892", %"class.blink::Member.690", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.892" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.893" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.361" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.893" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.894" = type { %"class.blink::Member.895" }
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.899", %"class.blink::Member.690", %"class.mojo::AssociatedReceiver.900" }
%"class.blink::ThreadState::PrefinalizerRegistration.899" = type { i8 }
%"class.mojo::AssociatedReceiver.900" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.901" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.901" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.902" }
%"class.blink::Member.902" = type { %"class.blink::MemberBase.903" }
%"class.blink::MemberBase.903" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.906", %"class.blink::Member.690", %"class.mojo::Receiver.907" }
%"class.blink::ThreadState::PrefinalizerRegistration.906" = type { i8 }
%"class.mojo::Receiver.907" = type { %"class.mojo::internal::BindingState.908" }
%"class.mojo::internal::BindingState.908" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.909" = type { %"class.blink::Member.910" }
%"class.blink::Member.910" = type { %"class.blink::MemberBase.911" }
%"class.blink::MemberBase.911" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.914", %"class.blink::Member.690", %"class.mojo::AssociatedReceiver.915" }
%"class.blink::ThreadState::PrefinalizerRegistration.914" = type { i8 }
%"class.mojo::AssociatedReceiver.915" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.916" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.916" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::HeapHashMap.921"* }
%"class.blink::HeapHashMap.921" = type opaque
%"class.mojo::StructPtr.922" = type { %"class.std::__1::unique_ptr.923" }
%"class.std::__1::unique_ptr.923" = type { %"class.std::__1::__compressed_pair.924" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.926", %"class.mojo::InlinedStructPtr.927" }
%"class.mojo::InlinedStructPtr.926" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.927" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.931" = type { %"class.blink::MemberBase.932" }
%"class.blink::MemberBase.932" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.933" = type { %"class.absl::optional_internal::optional_data.934" }
%"class.absl::optional_internal::optional_data.934" = type { %"class.absl::optional_internal::optional_data_base.935" }
%"class.absl::optional_internal::optional_data_base.935" = type { %"class.absl::optional_internal::optional_data_dtor_base.936" }
%"class.absl::optional_internal::optional_data_dtor_base.936" = type { i8, %union.anon.937 }
%union.anon.937 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::(anonymous namespace)::ClipboardTextWriter" = type { %"class.blink::ClipboardWriter" }
%"class.blink::CrossThreadPersistent.1548" = type { %"class.blink::PersistentBase.1549" }
%"class.blink::PersistentBase.1549" = type { %"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::(anonymous namespace)::ClipboardHtmlWriter" = type { %"class.blink::ClipboardWriter" }
%"class.blink::HeapHashSet.1561" = type { %"class.WTF::HashSet.1564" }
%"class.WTF::HashSet.1564" = type { %"class.WTF::HashTable.1565" }
%"class.WTF::HashTable.1565" = type <{ %"class.blink::Member.1567"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1567" = type { %"class.blink::MemberBase.1568" }
%"class.blink::MemberBase.1568" = type { %"class.blink::ShadowRoot"* }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1087", %"class.blink::Member.1569", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.1569" = type { %"class.blink::MemberBase.1570" }
%"class.blink::MemberBase.1570" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::(anonymous namespace)::ClipboardSvgWriter" = type { %"class.blink::ClipboardWriter" }
%"class.blink::(anonymous namespace)::ClipboardRawDataWriter" = type { %"class.blink::ClipboardWriter", %"class.WTF::String" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.647", i64, %"class.absl::optional.1571" }
%"class.absl::optional.1571" = type { %"class.absl::optional_internal::optional_data.1572" }
%"class.absl::optional_internal::optional_data.1572" = type { %"class.absl::optional_internal::optional_data_base.1573" }
%"class.absl::optional_internal::optional_data_base.1573" = type { %"class.absl::optional_internal::optional_data_dtor_base.1574" }
%"class.absl::optional_internal::optional_data_dtor_base.1574" = type { i8, %union.anon.1575 }
%union.anon.1575 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.1576", %"class.std::__1::unique_ptr.1577" }
%"class.mojo::ScopedHandleBase.1576" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1577" = type { %"class.std::__1::__compressed_pair.1578" }
%"class.std::__1::__compressed_pair.1578" = type { %"struct.std::__1::__compressed_pair_elem.1579" }
%"struct.std::__1::__compressed_pair_elem.1579" = type { i8* }
%"class.std::__1::vector.1585" = type { %"class.std::__1::__vector_base.1586" }
%"class.std::__1::__vector_base.1586" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1587" }
%"class.std::__1::__compressed_pair.1587" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN5blink22FileReaderLoaderClient23DidReceiveDataForClientEPKcj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ClipboardWriterEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ClipboardWriterEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ClipboardWriterEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ClipboardWriterEE7GetNameEPKv = comdat any

$_ZN5blink14PersistentBaseINS_14DOMArrayBufferELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14DOMArrayBufferELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_14DOMArrayBufferEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_ = comdat any

$_ZN5blink14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18RawSystemClipboardEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ClipboardWriterEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ClipboardWriterEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink17kMimeTypeImagePngE = external constant [0 x i8], align 1
@_ZN5blink18kMimeTypeTextPlainE = external constant [0 x i8], align 1
@_ZN5blink17kMimeTypeTextHTMLE = external constant [0 x i8], align 1
@_ZN5blink17kMimeTypeImageSvgE = external constant [0 x i8], align 1
@_ZTVN5blink15ClipboardWriterE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriterD2Ev to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriterD0Ev to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter15DidStartLoadingEv to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter14DidReceiveDataEv to i8*), i8* bitcast (void (%"class.blink::FileReaderLoaderClient"*, i8*, i32)* @_ZN5blink22FileReaderLoaderClient23DidReceiveDataForClientEPKcj to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter16DidFinishLoadingEv to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*, i32)* @_ZN5blink15ClipboardWriter7DidFailENS_13FileErrorCodeE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase25is_clipboard_svg_enabled_E = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.1 = private unnamed_addr constant [65 x i8] c"../../third_party/blink/renderer/platform/heap/self_keep_alive.h\00", section "llvm.metadata"
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ClipboardWriterEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ClipboardWriterEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ClipboardWriterEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ClipboardWriterEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ClipboardWriterEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink12_GLOBAL__N_120ClipboardImageWriterE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriterD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardImageWriter"*)* @_ZN5blink12_GLOBAL__N_120ClipboardImageWriterD0Ev to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter15DidStartLoadingEv to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter14DidReceiveDataEv to i8*), i8* bitcast (void (%"class.blink::FileReaderLoaderClient"*, i8*, i32)* @_ZN5blink22FileReaderLoaderClient23DidReceiveDataForClientEPKcj to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter16DidFinishLoadingEv to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*, i32)* @_ZN5blink15ClipboardWriter7DidFailENS_13FileErrorCodeE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink12_GLOBAL__N_120ClipboardImageWriter10StartWriteEPNS_14DOMArrayBufferE13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i8*)] }, align 8
@.str.7 = private unnamed_addr constant [11 x i8] c"StartWrite\00", align 1
@.str.8 = private unnamed_addr constant [71 x i8] c"../../third_party/blink/renderer/modules/clipboard/clipboard_writer.cc\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"DecodeOnBackgroundThread\00", align 1
@_ZTVN5blink12_GLOBAL__N_119ClipboardTextWriterE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriterD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardTextWriter"*)* @_ZN5blink12_GLOBAL__N_119ClipboardTextWriterD0Ev to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter15DidStartLoadingEv to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter14DidReceiveDataEv to i8*), i8* bitcast (void (%"class.blink::FileReaderLoaderClient"*, i8*, i32)* @_ZN5blink22FileReaderLoaderClient23DidReceiveDataForClientEPKcj to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter16DidFinishLoadingEv to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*, i32)* @_ZN5blink15ClipboardWriter7DidFailENS_13FileErrorCodeE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink12_GLOBAL__N_119ClipboardTextWriter10StartWriteEPNS_14DOMArrayBufferE13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i8*)] }, align 8
@_ZTVN5blink12_GLOBAL__N_119ClipboardHtmlWriterE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriterD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardHtmlWriter"*)* @_ZN5blink12_GLOBAL__N_119ClipboardHtmlWriterD0Ev to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter15DidStartLoadingEv to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter14DidReceiveDataEv to i8*), i8* bitcast (void (%"class.blink::FileReaderLoaderClient"*, i8*, i32)* @_ZN5blink22FileReaderLoaderClient23DidReceiveDataForClientEPKcj to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter16DidFinishLoadingEv to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*, i32)* @_ZN5blink15ClipboardWriter7DidFailENS_13FileErrorCodeE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardHtmlWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink12_GLOBAL__N_119ClipboardHtmlWriter10StartWriteEPNS_14DOMArrayBufferE13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i8*)] }, align 8
@_ZTVN5blink12_GLOBAL__N_118ClipboardSvgWriterE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriterD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardSvgWriter"*)* @_ZN5blink12_GLOBAL__N_118ClipboardSvgWriterD0Ev to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter15DidStartLoadingEv to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter14DidReceiveDataEv to i8*), i8* bitcast (void (%"class.blink::FileReaderLoaderClient"*, i8*, i32)* @_ZN5blink22FileReaderLoaderClient23DidReceiveDataForClientEPKcj to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter16DidFinishLoadingEv to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*, i32)* @_ZN5blink15ClipboardWriter7DidFailENS_13FileErrorCodeE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardSvgWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink12_GLOBAL__N_118ClipboardSvgWriter10StartWriteEPNS_14DOMArrayBufferE13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i8*)] }, align 8
@_ZTVN5blink12_GLOBAL__N_122ClipboardRawDataWriterE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardRawDataWriter"*)* @_ZN5blink12_GLOBAL__N_122ClipboardRawDataWriterD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardRawDataWriter"*)* @_ZN5blink12_GLOBAL__N_122ClipboardRawDataWriterD0Ev to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter15DidStartLoadingEv to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter14DidReceiveDataEv to i8*), i8* bitcast (void (%"class.blink::FileReaderLoaderClient"*, i8*, i32)* @_ZN5blink22FileReaderLoaderClient23DidReceiveDataForClientEPKcj to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriter16DidFinishLoadingEv to i8*), i8* bitcast (void (%"class.blink::ClipboardWriter"*, i32)* @_ZN5blink15ClipboardWriter7DidFailENS_13FileErrorCodeE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardRawDataWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink12_GLOBAL__N_122ClipboardRawDataWriter10StartWriteEPNS_14DOMArrayBufferE13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i8*)] }, align 8

@_ZN5blink15ClipboardWriterD1Ev = hidden unnamed_addr alias void (%"class.blink::ClipboardWriter"*), void (%"class.blink::ClipboardWriter"*)* @_ZN5blink15ClipboardWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ClipboardWriter"* @_ZN5blink15ClipboardWriter6CreateEPNS_15SystemClipboardERKN3WTF6StringEPNS_16ClipboardPromiseE(%"class.blink::SystemClipboard"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ClipboardPromise"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PersistentLocation", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.blink::PersistentLocation", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.blink::PersistentLocation", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.blink::PersistentLocation", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = ptrtoint %"class.blink::SystemClipboard"* %0 to i64
  %17 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %22, align 8
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %24 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %23, i64* %24, align 8
  br label %32

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %31 = bitcast i8** %30 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %31, align 8
  br label %32

32:                                               ; preds = %25, %21
  %33 = phi i32 [ %28, %25 ], [ 0, %21 ]
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %33, i32* %34, align 8
  %35 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #7
  %36 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0)) #14
  %37 = icmp ult i64 %36, 4294967296
  br i1 %37, label %39, label %38, !prof !2

38:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

39:                                               ; preds = %32
  %40 = trunc i64 %36 to i32
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0), i8** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %40, i32* %44, align 8
  %45 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #7
  br i1 %45, label %46, label %83

46:                                               ; preds = %39
  %47 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ClipboardWriterEEEPhm(i64 72) #7
  %48 = bitcast i8* %47 to %"class.blink::ClipboardWriter"*
  %49 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink15ClipboardWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds i8, i8* %47, i64 8
  %51 = bitcast i8* %50 to %"class.blink::ClipboardPromise"**
  store %"class.blink::ClipboardPromise"* %2, %"class.blink::ClipboardPromise"** %51, align 8
  %52 = bitcast %"class.blink::ClipboardPromise"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %53 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %52) #7
  %54 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %53, i64 0, i32 1
  %55 = bitcast %"class.blink::MojoBindingContext"* %54 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %56 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %55, align 8
  %57 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %56, i64 6
  %58 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %57, align 8
  %59 = call %"class.base::SingleThreadTaskRunner"* %58(%"class.blink::MojoBindingContext"* %54, i8 zeroext 2) #7
  %60 = getelementptr inbounds i8, i8* %47, i64 16
  %61 = bitcast i8* %60 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %59, %"class.base::SingleThreadTaskRunner"** %61, align 8
  %62 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %52) #7
  %63 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %62, i64 0, i32 1
  %64 = bitcast %"class.blink::MojoBindingContext"* %63 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %65 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %64, align 8
  %66 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %65, i64 6
  %67 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %66, align 8
  %68 = call %"class.base::SingleThreadTaskRunner"* %67(%"class.blink::MojoBindingContext"* %63, i8 zeroext 15) #7
  %69 = getelementptr inbounds i8, i8* %47, i64 24
  %70 = bitcast i8* %69 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %68, %"class.base::SingleThreadTaskRunner"** %70, align 8
  %71 = getelementptr inbounds i8, i8* %47, i64 32
  %72 = bitcast i8* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds i8, i8* %47, i64 40
  %74 = bitcast i8* %73 to i64*
  store i64 %16, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %47, i64 48
  %76 = bitcast i8* %75 to %"class.blink::RawSystemClipboard"**
  store %"class.blink::RawSystemClipboard"* null, %"class.blink::RawSystemClipboard"** %76, align 8
  %77 = getelementptr inbounds i8, i8* %47, i64 56
  %78 = bitcast %"class.blink::PersistentLocation"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %78) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 32, i1 false) #7
  %79 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %13, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %79) #7
  %80 = call i8* @llvm.ptr.annotation.p0i8(i8* %77, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false) #7
  %81 = call i8* @llvm.ptr.annotation.p0i8(i8* %77, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  %82 = bitcast i8* %81 to %"class.blink::PersistentBase.436"*
  call void @_ZN5blink14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.436"* %82, %"class.blink::ClipboardWriter"* %48) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %78) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink12_GLOBAL__N_120ClipboardImageWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  br label %284

83:                                               ; preds = %39
  %84 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #7
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %87, label %91

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %88, align 8
  %89 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %90 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %89, i64* %90, align 8
  br label %98

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"** %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 1
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %97 = bitcast i8** %96 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %95, %"class.WTF::StringImpl"** %97, align 8
  br label %98

98:                                               ; preds = %91, %87
  %99 = phi i32 [ %94, %91 ], [ 0, %87 ]
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %99, i32* %100, align 8
  %101 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #7
  %102 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0)) #14
  %103 = icmp ult i64 %102, 4294967296
  br i1 %103, label %105, label %104, !prof !2

104:                                              ; preds = %98
  call void @llvm.trap() #7
  unreachable

105:                                              ; preds = %98
  %106 = trunc i64 %102 to i32
  %107 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %108 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), i8** %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %106, i32* %110, align 8
  %111 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #7
  br i1 %111, label %112, label %149

112:                                              ; preds = %105
  %113 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ClipboardWriterEEEPhm(i64 72) #7
  %114 = bitcast i8* %113 to %"class.blink::ClipboardWriter"*
  %115 = bitcast i8* %113 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink15ClipboardWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %115, align 8
  %116 = getelementptr inbounds i8, i8* %113, i64 8
  %117 = bitcast i8* %116 to %"class.blink::ClipboardPromise"**
  store %"class.blink::ClipboardPromise"* %2, %"class.blink::ClipboardPromise"** %117, align 8
  %118 = bitcast %"class.blink::ClipboardPromise"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %119 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %118) #7
  %120 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %119, i64 0, i32 1
  %121 = bitcast %"class.blink::MojoBindingContext"* %120 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %122 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %121, align 8
  %123 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %122, i64 6
  %124 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %123, align 8
  %125 = call %"class.base::SingleThreadTaskRunner"* %124(%"class.blink::MojoBindingContext"* %120, i8 zeroext 2) #7
  %126 = getelementptr inbounds i8, i8* %113, i64 16
  %127 = bitcast i8* %126 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %125, %"class.base::SingleThreadTaskRunner"** %127, align 8
  %128 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %118) #7
  %129 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %128, i64 0, i32 1
  %130 = bitcast %"class.blink::MojoBindingContext"* %129 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %131 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %130, align 8
  %132 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %131, i64 6
  %133 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %132, align 8
  %134 = call %"class.base::SingleThreadTaskRunner"* %133(%"class.blink::MojoBindingContext"* %129, i8 zeroext 15) #7
  %135 = getelementptr inbounds i8, i8* %113, i64 24
  %136 = bitcast i8* %135 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %134, %"class.base::SingleThreadTaskRunner"** %136, align 8
  %137 = getelementptr inbounds i8, i8* %113, i64 32
  %138 = bitcast i8* %137 to i64*
  store i64 0, i64* %138, align 8
  %139 = getelementptr inbounds i8, i8* %113, i64 40
  %140 = bitcast i8* %139 to i64*
  store i64 %16, i64* %140, align 8
  %141 = getelementptr inbounds i8, i8* %113, i64 48
  %142 = bitcast i8* %141 to %"class.blink::RawSystemClipboard"**
  store %"class.blink::RawSystemClipboard"* null, %"class.blink::RawSystemClipboard"** %142, align 8
  %143 = getelementptr inbounds i8, i8* %113, i64 56
  %144 = bitcast %"class.blink::PersistentLocation"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %144) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 0, i64 32, i1 false) #7
  %145 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %10, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %145) #7
  %146 = call i8* @llvm.ptr.annotation.p0i8(i8* %143, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 16, i1 false) #7
  %147 = call i8* @llvm.ptr.annotation.p0i8(i8* %143, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  %148 = bitcast i8* %147 to %"class.blink::PersistentBase.436"*
  call void @_ZN5blink14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.436"* %148, %"class.blink::ClipboardWriter"* %114) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %144) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119ClipboardTextWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %115, align 8
  br label %284

149:                                              ; preds = %105
  %150 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #7
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %153, label %157

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %154, align 8
  %155 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %156 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %155, i64* %156, align 8
  br label %164

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %158, align 8
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 1
  %162 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %163 = bitcast i8** %162 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %163, align 8
  br label %164

164:                                              ; preds = %157, %153
  %165 = phi i32 [ %160, %157 ], [ 0, %153 ]
  %166 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %165, i32* %166, align 8
  %167 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #7
  %168 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0)) #14
  %169 = icmp ult i64 %168, 4294967296
  br i1 %169, label %171, label %170, !prof !2

170:                                              ; preds = %164
  call void @llvm.trap() #7
  unreachable

171:                                              ; preds = %164
  %172 = trunc i64 %168 to i32
  %173 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %174 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0), i8** %175, align 8
  %176 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %172, i32* %176, align 8
  %177 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #7
  br i1 %177, label %178, label %215

178:                                              ; preds = %171
  %179 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ClipboardWriterEEEPhm(i64 72) #7
  %180 = bitcast i8* %179 to %"class.blink::ClipboardWriter"*
  %181 = bitcast i8* %179 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink15ClipboardWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %181, align 8
  %182 = getelementptr inbounds i8, i8* %179, i64 8
  %183 = bitcast i8* %182 to %"class.blink::ClipboardPromise"**
  store %"class.blink::ClipboardPromise"* %2, %"class.blink::ClipboardPromise"** %183, align 8
  %184 = bitcast %"class.blink::ClipboardPromise"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %185 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %184) #7
  %186 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %185, i64 0, i32 1
  %187 = bitcast %"class.blink::MojoBindingContext"* %186 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %188 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %187, align 8
  %189 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %188, i64 6
  %190 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %189, align 8
  %191 = call %"class.base::SingleThreadTaskRunner"* %190(%"class.blink::MojoBindingContext"* %186, i8 zeroext 2) #7
  %192 = getelementptr inbounds i8, i8* %179, i64 16
  %193 = bitcast i8* %192 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %191, %"class.base::SingleThreadTaskRunner"** %193, align 8
  %194 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %184) #7
  %195 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %194, i64 0, i32 1
  %196 = bitcast %"class.blink::MojoBindingContext"* %195 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %197 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %196, align 8
  %198 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %197, i64 6
  %199 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %198, align 8
  %200 = call %"class.base::SingleThreadTaskRunner"* %199(%"class.blink::MojoBindingContext"* %195, i8 zeroext 15) #7
  %201 = getelementptr inbounds i8, i8* %179, i64 24
  %202 = bitcast i8* %201 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %200, %"class.base::SingleThreadTaskRunner"** %202, align 8
  %203 = getelementptr inbounds i8, i8* %179, i64 32
  %204 = bitcast i8* %203 to i64*
  store i64 0, i64* %204, align 8
  %205 = getelementptr inbounds i8, i8* %179, i64 40
  %206 = bitcast i8* %205 to i64*
  store i64 %16, i64* %206, align 8
  %207 = getelementptr inbounds i8, i8* %179, i64 48
  %208 = bitcast i8* %207 to %"class.blink::RawSystemClipboard"**
  store %"class.blink::RawSystemClipboard"* null, %"class.blink::RawSystemClipboard"** %208, align 8
  %209 = getelementptr inbounds i8, i8* %179, i64 56
  %210 = bitcast %"class.blink::PersistentLocation"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %210) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %210, i8 0, i64 32, i1 false) #7
  %211 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %7, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %211) #7
  %212 = call i8* @llvm.ptr.annotation.p0i8(i8* %209, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %212, i8 0, i64 16, i1 false) #7
  %213 = call i8* @llvm.ptr.annotation.p0i8(i8* %209, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  %214 = bitcast i8* %213 to %"class.blink::PersistentBase.436"*
  call void @_ZN5blink14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.436"* %214, %"class.blink::ClipboardWriter"* %180) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %210) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119ClipboardHtmlWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %181, align 8
  br label %284

215:                                              ; preds = %171
  %216 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %216) #7
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %219, label %223

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %220, align 8
  %221 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %222 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %221, i64* %222, align 8
  br label %230

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %217, %"class.WTF::StringImpl"** %224, align 8
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 1
  %228 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %229 = bitcast i8** %228 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %227, %"class.WTF::StringImpl"** %229, align 8
  br label %230

230:                                              ; preds = %223, %219
  %231 = phi i32 [ %226, %223 ], [ 0, %219 ]
  %232 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %231, i32* %232, align 8
  %233 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #7
  %234 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImageSvgE, i64 0, i64 0)) #14
  %235 = icmp ult i64 %234, 4294967296
  br i1 %235, label %237, label %236, !prof !2

236:                                              ; preds = %230
  call void @llvm.trap() #7
  unreachable

237:                                              ; preds = %230
  %238 = trunc i64 %234 to i32
  %239 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %240 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %239, i64* %240, align 8
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImageSvgE, i64 0, i64 0), i8** %241, align 8
  %242 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %238, i32* %242, align 8
  %243 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %216) #7
  %244 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase25is_clipboard_svg_enabled_E, align 1
  %245 = icmp ne i8 %244, 0
  %246 = and i1 %243, %245
  br i1 %246, label %247, label %291

247:                                              ; preds = %237
  %248 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ClipboardWriterEEEPhm(i64 72) #7
  %249 = bitcast i8* %248 to %"class.blink::ClipboardWriter"*
  %250 = bitcast i8* %248 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink15ClipboardWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %250, align 8
  %251 = getelementptr inbounds i8, i8* %248, i64 8
  %252 = bitcast i8* %251 to %"class.blink::ClipboardPromise"**
  store %"class.blink::ClipboardPromise"* %2, %"class.blink::ClipboardPromise"** %252, align 8
  %253 = bitcast %"class.blink::ClipboardPromise"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %254 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %253) #7
  %255 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %254, i64 0, i32 1
  %256 = bitcast %"class.blink::MojoBindingContext"* %255 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %257 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %256, align 8
  %258 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %257, i64 6
  %259 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %258, align 8
  %260 = call %"class.base::SingleThreadTaskRunner"* %259(%"class.blink::MojoBindingContext"* %255, i8 zeroext 2) #7
  %261 = getelementptr inbounds i8, i8* %248, i64 16
  %262 = bitcast i8* %261 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %260, %"class.base::SingleThreadTaskRunner"** %262, align 8
  %263 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %253) #7
  %264 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %263, i64 0, i32 1
  %265 = bitcast %"class.blink::MojoBindingContext"* %264 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %266 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %265, align 8
  %267 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %266, i64 6
  %268 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %267, align 8
  %269 = call %"class.base::SingleThreadTaskRunner"* %268(%"class.blink::MojoBindingContext"* %264, i8 zeroext 15) #7
  %270 = getelementptr inbounds i8, i8* %248, i64 24
  %271 = bitcast i8* %270 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %269, %"class.base::SingleThreadTaskRunner"** %271, align 8
  %272 = getelementptr inbounds i8, i8* %248, i64 32
  %273 = bitcast i8* %272 to i64*
  store i64 0, i64* %273, align 8
  %274 = getelementptr inbounds i8, i8* %248, i64 40
  %275 = bitcast i8* %274 to i64*
  store i64 %16, i64* %275, align 8
  %276 = getelementptr inbounds i8, i8* %248, i64 48
  %277 = bitcast i8* %276 to %"class.blink::RawSystemClipboard"**
  store %"class.blink::RawSystemClipboard"* null, %"class.blink::RawSystemClipboard"** %277, align 8
  %278 = getelementptr inbounds i8, i8* %248, i64 56
  %279 = bitcast %"class.blink::PersistentLocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %279) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %279, i8 0, i64 32, i1 false) #7
  %280 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %4, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %280) #7
  %281 = call i8* @llvm.ptr.annotation.p0i8(i8* %278, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %281, i8 0, i64 16, i1 false) #7
  %282 = call i8* @llvm.ptr.annotation.p0i8(i8* %278, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  %283 = bitcast i8* %282 to %"class.blink::PersistentBase.436"*
  call void @_ZN5blink14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.436"* %283, %"class.blink::ClipboardWriter"* %249) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %279) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink12_GLOBAL__N_118ClipboardSvgWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %250, align 8
  br label %284

284:                                              ; preds = %46, %112, %178, %247
  %285 = phi i8* [ %47, %46 ], [ %113, %112 ], [ %179, %178 ], [ %248, %247 ]
  %286 = phi %"class.blink::ClipboardWriter"* [ %48, %46 ], [ %114, %112 ], [ %180, %178 ], [ %249, %247 ]
  %287 = getelementptr inbounds i8, i8* %285, i64 -4
  %288 = bitcast i8* %287 to i16*
  %289 = load atomic i16, i16* %288 monotonic, align 2
  %290 = or i16 %289, 1
  store atomic i16 %290, i16* %288 release, align 2
  br label %291

291:                                              ; preds = %284, %237
  %292 = phi %"class.blink::ClipboardWriter"* [ null, %237 ], [ %286, %284 ]
  ret %"class.blink::ClipboardWriter"* %292
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ClipboardWriter"* @_ZN5blink15ClipboardWriter6CreateEPNS_18RawSystemClipboardERKN3WTF6StringEPNS_16ClipboardPromiseE(%"class.blink::RawSystemClipboard"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ClipboardPromise"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PersistentLocation", align 8
  %5 = ptrtoint %"class.blink::RawSystemClipboard"* %0 to i64
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ClipboardWriterEEEPhm(i64 80) #7
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #7
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #7
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %3
  %28 = bitcast i8* %6 to %"class.blink::ClipboardWriter"*
  %29 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink15ClipboardWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds i8, i8* %6, i64 8
  %31 = bitcast i8* %30 to %"class.blink::ClipboardPromise"**
  store %"class.blink::ClipboardPromise"* %2, %"class.blink::ClipboardPromise"** %31, align 8
  %32 = bitcast %"class.blink::ClipboardPromise"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %33 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %32) #7
  %34 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %33, i64 0, i32 1
  %35 = bitcast %"class.blink::MojoBindingContext"* %34 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %36 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %35, align 8
  %37 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %36, i64 6
  %38 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %37, align 8
  %39 = tail call %"class.base::SingleThreadTaskRunner"* %38(%"class.blink::MojoBindingContext"* %34, i8 zeroext 2) #7
  %40 = getelementptr inbounds i8, i8* %6, i64 16
  %41 = bitcast i8* %40 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %39, %"class.base::SingleThreadTaskRunner"** %41, align 8
  %42 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %32) #7
  %43 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %42, i64 0, i32 1
  %44 = bitcast %"class.blink::MojoBindingContext"* %43 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %45 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %44, align 8
  %46 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %45, i64 6
  %47 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %46, align 8
  %48 = tail call %"class.base::SingleThreadTaskRunner"* %47(%"class.blink::MojoBindingContext"* %43, i8 zeroext 15) #7
  %49 = getelementptr inbounds i8, i8* %6, i64 24
  %50 = bitcast i8* %49 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %48, %"class.base::SingleThreadTaskRunner"** %50, align 8
  %51 = getelementptr inbounds i8, i8* %6, i64 32
  %52 = getelementptr inbounds i8, i8* %6, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #7
  %53 = bitcast i8* %52 to i64*
  store i64 %5, i64* %53, align 8
  %54 = getelementptr inbounds i8, i8* %6, i64 56
  %55 = bitcast %"class.blink::PersistentLocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 32, i1 false) #7
  %56 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %4, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %56) #7
  %57 = call i8* @llvm.ptr.annotation.p0i8(i8* %54, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #7
  %58 = call i8* @llvm.ptr.annotation.p0i8(i8* %54, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  %59 = bitcast i8* %58 to %"class.blink::PersistentBase.436"*
  call void @_ZN5blink14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.436"* %59, %"class.blink::ClipboardWriter"* %28) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122ClipboardRawDataWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %60 = getelementptr inbounds i8, i8* %6, i64 72
  %61 = bitcast i8* %60 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %61, align 8
  br i1 %9, label %90, label %62

62:                                               ; preds = %27
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %79

69:                                               ; preds = %62
  %70 = zext i32 %68 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #7
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !3

76:                                               ; preds = %69
  call void @llvm.trap() #7
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %67, align 4
  br label %79

79:                                               ; preds = %77, %62
  %80 = phi i32 [ %78, %77 ], [ %68, %62 ]
  %81 = load atomic i32, i32* %63 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  %85 = add i32 %80, -1
  store i32 %85, i32* %67, align 4
  br label %86

86:                                               ; preds = %84, %79
  %87 = phi i32 [ %85, %84 ], [ %80, %79 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #7
  br label %90

90:                                               ; preds = %27, %86, %89
  %91 = getelementptr inbounds i8, i8* %6, i64 -4
  %92 = bitcast i8* %91 to i16*
  %93 = load atomic i16, i16* %92 monotonic, align 2
  %94 = or i16 %93, 1
  store atomic i16 %94, i16* %92 release, align 2
  ret %"class.blink::ClipboardWriter"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ClipboardWriterC2EPNS_15SystemClipboardEPNS_16ClipboardPromiseE(%"class.blink::ClipboardWriter"*, %"class.blink::SystemClipboard"*, %"class.blink::ClipboardPromise"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PersistentLocation", align 8
  %5 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink15ClipboardWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ClipboardPromise"* %2, %"class.blink::ClipboardPromise"** %6, align 8
  %7 = bitcast %"class.blink::ClipboardPromise"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %8 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %7) #7
  %9 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 1
  %10 = bitcast %"class.blink::MojoBindingContext"* %9 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %11 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %10, align 8
  %12 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %11, i64 6
  %13 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %12, align 8
  %14 = tail call %"class.base::SingleThreadTaskRunner"* %13(%"class.blink::MojoBindingContext"* %9, i8 zeroext 2) #7
  %15 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 2, i32 0
  store %"class.base::SingleThreadTaskRunner"* %14, %"class.base::SingleThreadTaskRunner"** %15, align 8
  %16 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %7) #7
  %17 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %16, i64 0, i32 1
  %18 = bitcast %"class.blink::MojoBindingContext"* %17 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %19 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %18, align 8
  %20 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %19, i64 6
  %21 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %20, align 8
  %22 = tail call %"class.base::SingleThreadTaskRunner"* %21(%"class.blink::MojoBindingContext"* %17, i8 zeroext 15) #7
  %23 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 3, i32 0
  store %"class.base::SingleThreadTaskRunner"* %22, %"class.base::SingleThreadTaskRunner"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 4
  %25 = bitcast %"class.std::__1::unique_ptr.227"* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::SystemClipboard"* %1, %"class.blink::SystemClipboard"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.blink::RawSystemClipboard"* null, %"class.blink::RawSystemClipboard"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 7
  %29 = bitcast %"class.blink::PersistentLocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 32, i1 false) #7
  %30 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %4, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %30) #7
  %31 = bitcast %"class.blink::SelfKeepAlive.434"* %28 to i8*
  %32 = call i8* @llvm.ptr.annotation.p0i8(i8* %31, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #7
  %33 = call i8* @llvm.ptr.annotation.p0i8(i8* %31, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  %34 = bitcast i8* %33 to %"class.blink::PersistentBase.436"*
  call void @_ZN5blink14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.436"* %34, %"class.blink::ClipboardWriter"* %0) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ClipboardWriterC2EPNS_15SystemClipboardEPNS_18RawSystemClipboardEPNS_16ClipboardPromiseE(%"class.blink::ClipboardWriter"*, %"class.blink::SystemClipboard"*, %"class.blink::RawSystemClipboard"*, %"class.blink::ClipboardPromise"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::PersistentLocation", align 8
  %6 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink15ClipboardWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ClipboardPromise"* %3, %"class.blink::ClipboardPromise"** %7, align 8
  %8 = bitcast %"class.blink::ClipboardPromise"* %3 to %"class.blink::ExecutionContextLifecycleObserver"*
  %9 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %8) #7
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 1
  %11 = bitcast %"class.blink::MojoBindingContext"* %10 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %12 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %11, align 8
  %13 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %12, i64 6
  %14 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %13, align 8
  %15 = tail call %"class.base::SingleThreadTaskRunner"* %14(%"class.blink::MojoBindingContext"* %10, i8 zeroext 2) #7
  %16 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 2, i32 0
  store %"class.base::SingleThreadTaskRunner"* %15, %"class.base::SingleThreadTaskRunner"** %16, align 8
  %17 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %8) #7
  %18 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %17, i64 0, i32 1
  %19 = bitcast %"class.blink::MojoBindingContext"* %18 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %20 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %19, align 8
  %21 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %20, i64 6
  %22 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %21, align 8
  %23 = tail call %"class.base::SingleThreadTaskRunner"* %22(%"class.blink::MojoBindingContext"* %18, i8 zeroext 15) #7
  %24 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 3, i32 0
  store %"class.base::SingleThreadTaskRunner"* %23, %"class.base::SingleThreadTaskRunner"** %24, align 8
  %25 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 4
  %26 = bitcast %"class.std::__1::unique_ptr.227"* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::SystemClipboard"* %1, %"class.blink::SystemClipboard"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.blink::RawSystemClipboard"* %2, %"class.blink::RawSystemClipboard"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 7
  %30 = bitcast %"class.blink::PersistentLocation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 32, i1 false)
  %31 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %5, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %31) #7
  %32 = bitcast %"class.blink::SelfKeepAlive.434"* %29 to i8*
  %33 = call i8* @llvm.ptr.annotation.p0i8(i8* %32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #7
  %34 = call i8* @llvm.ptr.annotation.p0i8(i8* %32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  %35 = bitcast i8* %34 to %"class.blink::PersistentBase.436"*
  call void @_ZN5blink14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.436"* %35, %"class.blink::ClipboardWriter"* %0) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ClipboardWriterC2EPNS_18RawSystemClipboardEPNS_16ClipboardPromiseE(%"class.blink::ClipboardWriter"*, %"class.blink::RawSystemClipboard"*, %"class.blink::ClipboardPromise"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PersistentLocation", align 8
  %5 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink15ClipboardWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ClipboardPromise"* %2, %"class.blink::ClipboardPromise"** %6, align 8
  %7 = bitcast %"class.blink::ClipboardPromise"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %8 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %7) #7
  %9 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 1
  %10 = bitcast %"class.blink::MojoBindingContext"* %9 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %11 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %10, align 8
  %12 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %11, i64 6
  %13 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %12, align 8
  %14 = tail call %"class.base::SingleThreadTaskRunner"* %13(%"class.blink::MojoBindingContext"* %9, i8 zeroext 2) #7
  %15 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 2, i32 0
  store %"class.base::SingleThreadTaskRunner"* %14, %"class.base::SingleThreadTaskRunner"** %15, align 8
  %16 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %7) #7
  %17 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %16, i64 0, i32 1
  %18 = bitcast %"class.blink::MojoBindingContext"* %17 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %19 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %18, align 8
  %20 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %19, i64 6
  %21 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %20, align 8
  %22 = tail call %"class.base::SingleThreadTaskRunner"* %21(%"class.blink::MojoBindingContext"* %17, i8 zeroext 15) #7
  %23 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 3, i32 0
  store %"class.base::SingleThreadTaskRunner"* %22, %"class.base::SingleThreadTaskRunner"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 4
  %25 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 6, i32 0, i32 0
  %26 = bitcast %"class.std::__1::unique_ptr.227"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  store %"class.blink::RawSystemClipboard"* %1, %"class.blink::RawSystemClipboard"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 7
  %28 = bitcast %"class.blink::PersistentLocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 32, i1 false) #7
  %29 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %4, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %29) #7
  %30 = bitcast %"class.blink::SelfKeepAlive.434"* %27 to i8*
  %31 = call i8* @llvm.ptr.annotation.p0i8(i8* %30, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #7
  %32 = call i8* @llvm.ptr.annotation.p0i8(i8* %30, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  %33 = bitcast i8* %32 to %"class.blink::PersistentBase.436"*
  call void @_ZN5blink14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.436"* %33, %"class.blink::ClipboardWriter"* %0) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #7
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink15ClipboardWriterD0Ev(%"class.blink::ClipboardWriter"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15ClipboardWriter11IsValidTypeERKN3WTF6StringEb(%"class.WTF::String"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  br i1 %1, label %11, label %19

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %139, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ult i32 %17, 1024
  br label %139

19:                                               ; preds = %2
  %20 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %25, align 8
  %26 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %27 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %26, i64* %27, align 8
  br label %35

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 1
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %34, align 8
  br label %35

35:                                               ; preds = %28, %24
  %36 = phi i32 [ %31, %28 ], [ 0, %24 ]
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %36, i32* %37, align 8
  %38 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #7
  %39 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImageSvgE, i64 0, i64 0)) #14
  %40 = icmp ult i64 %39, 4294967296
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %35
  %43 = trunc i64 %39 to i32
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %45 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImageSvgE, i64 0, i64 0), i8** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %43, i32* %47, align 8
  %48 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #7
  br i1 %48, label %49, label %52

49:                                               ; preds = %42
  %50 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase25is_clipboard_svg_enabled_E, align 1, !range !4
  %51 = icmp ne i8 %50, 0
  br label %139

52:                                               ; preds = %42
  %53 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #7
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %57, align 8
  %58 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %59 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %58, i64* %59, align 8
  br label %67

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 1
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %66 = bitcast i8** %65 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %66, align 8
  br label %67

67:                                               ; preds = %60, %56
  %68 = phi i32 [ %63, %60 ], [ 0, %56 ]
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %68, i32* %69, align 8
  %70 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #7
  %71 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0)) #14
  %72 = icmp ult i64 %71, 4294967296
  br i1 %72, label %74, label %73, !prof !2

73:                                               ; preds = %67
  call void @llvm.trap() #7
  unreachable

74:                                               ; preds = %67
  %75 = trunc i64 %71 to i32
  %76 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %77 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0), i8** %78, align 8
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %75, i32* %79, align 8
  %80 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #7
  br i1 %80, label %139, label %81

81:                                               ; preds = %74
  %82 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #7
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %86, align 8
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %88 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %87, i64* %88, align 8
  br label %96

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 1
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %95 = bitcast i8** %94 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %95, align 8
  br label %96

96:                                               ; preds = %89, %85
  %97 = phi i32 [ %92, %89 ], [ 0, %85 ]
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %97, i32* %98, align 8
  %99 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #7
  %100 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0)) #14
  %101 = icmp ult i64 %100, 4294967296
  br i1 %101, label %103, label %102, !prof !2

102:                                              ; preds = %96
  call void @llvm.trap() #7
  unreachable

103:                                              ; preds = %96
  %104 = trunc i64 %100 to i32
  %105 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %106 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), i8** %107, align 8
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %104, i32* %108, align 8
  %109 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #7
  br i1 %109, label %139, label %110

110:                                              ; preds = %103
  %111 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #7
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %114, label %118

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %115, align 8
  %116 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %117 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %116, i64* %117, align 8
  br label %125

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %112, %"class.WTF::StringImpl"** %119, align 8
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 1
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %124 = bitcast i8** %123 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %124, align 8
  br label %125

125:                                              ; preds = %118, %114
  %126 = phi i32 [ %121, %118 ], [ 0, %114 ]
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %126, i32* %127, align 8
  %128 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #7
  %129 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0)) #14
  %130 = icmp ult i64 %129, 4294967296
  br i1 %130, label %132, label %131, !prof !2

131:                                              ; preds = %125
  call void @llvm.trap() #7
  unreachable

132:                                              ; preds = %125
  %133 = trunc i64 %129 to i32
  %134 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %135 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0), i8** %136, align 8
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %133, i32* %137, align 8
  %138 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #7
  br label %139

139:                                              ; preds = %15, %11, %74, %103, %132, %49
  %140 = phi i1 [ %51, %49 ], [ true, %103 ], [ true, %74 ], [ %138, %132 ], [ %18, %15 ], [ true, %11 ]
  ret i1 %140
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ClipboardWriter13WriteToSystemEPNS_4BlobE(%"class.blink::ClipboardWriter"*, %"class.blink::Blob"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = tail call noalias i8* @malloc(i64 296) #7
  %5 = bitcast i8* %4 to %"class.blink::FileReaderLoader"*
  %6 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 3, i32 0
  %8 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %7, align 8
  %9 = icmp eq %"class.base::SingleThreadTaskRunner"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %2, %10
  tail call void @_ZN5blink16FileReaderLoaderC1ENS0_8ReadTypeEPNS_22FileReaderLoaderClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::FileReaderLoader"* %5, i32 0, %"class.blink::FileReaderLoaderClient"* %6, %"class.base::SingleThreadTaskRunner"* %8) #7
  %14 = ptrtoint i8* %4 to i64
  %15 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.227"* %15 to i64*
  store i64 %14, i64* %18, align 8
  %19 = icmp eq %"class.blink::FileReaderLoader"* %17, null
  %20 = bitcast i8* %4 to %"class.blink::FileReaderLoader"*
  br i1 %19, label %27, label %21

21:                                               ; preds = %13
  %22 = bitcast %"class.blink::FileReaderLoader"* %17 to void (%"class.blink::FileReaderLoader"*)***
  %23 = load void (%"class.blink::FileReaderLoader"*)**, void (%"class.blink::FileReaderLoader"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %23, i64 1
  %25 = load void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %24, align 8
  tail call void %25(%"class.blink::FileReaderLoader"* nonnull %17) #7
  %26 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %16, align 8
  br label %27

27:                                               ; preds = %21, %13
  %28 = phi %"class.blink::FileReaderLoader"* [ %26, %21 ], [ %20, %13 ]
  %29 = getelementptr inbounds %"class.blink::Blob", %"class.blink::Blob"* %1, i64 0, i32 3, i32 0
  %30 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %29, align 8
  %31 = icmp eq %"class.blink::BlobDataHandle"* %30, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #7
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #7
  br label %39

39:                                               ; preds = %27, %32, %36
  call void @_ZN5blink16FileReaderLoader5StartE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::FileReaderLoader"* %28, %"class.blink::BlobDataHandle"* %30) #7
  ret void
}

declare void @_ZN5blink16FileReaderLoader5StartE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::FileReaderLoader"*, %"class.blink::BlobDataHandle"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink15ClipboardWriter15DidStartLoadingEv(%"class.blink::ClipboardWriter"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink15ClipboardWriter14DidReceiveDataEv(%"class.blink::ClipboardWriter"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ClipboardWriter16DidFinishLoadingEv(%"class.blink::ClipboardWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %2, align 8
  %4 = tail call %"class.blink::DOMArrayBuffer"* @_ZN5blink16FileReaderLoader17ArrayBufferResultEv(%"class.blink::FileReaderLoader"* %3) #7
  %5 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %2, align 8
  store %"class.blink::FileReaderLoader"* null, %"class.blink::FileReaderLoader"** %2, align 8
  %6 = icmp eq %"class.blink::FileReaderLoader"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::FileReaderLoader"* %5 to void (%"class.blink::FileReaderLoader"*)***
  %9 = load void (%"class.blink::FileReaderLoader"*)**, void (%"class.blink::FileReaderLoader"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %9, i64 1
  %11 = load void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %10, align 8
  tail call void %11(%"class.blink::FileReaderLoader"* nonnull %5) #7
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 7
  %14 = bitcast %"class.blink::SelfKeepAlive.434"* %13 to i8*
  %15 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %14, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  %16 = bitcast i8* %15 to %"class.blink::ClipboardWriter"**
  store %"class.blink::ClipboardWriter"* null, %"class.blink::ClipboardWriter"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = bitcast i8* %17 to %"class.blink::PersistentNode"**
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %18, align 8
  %20 = icmp eq %"class.blink::PersistentNode"* %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %12
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #7
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !3

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #7
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %32, align 8
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %18, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %33, i64 0, i32 0, i32 0
  %36 = bitcast %"class.blink::PersistentRegion"* %33 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.blink::PersistentNode"* %34 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %34, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %39, align 8
  store %"class.blink::PersistentNode"* %34, %"class.blink::PersistentNode"** %35, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %18, align 8
  br label %40

40:                                               ; preds = %12, %28
  %41 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 2, i32 0
  %42 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %41, align 8
  %43 = icmp eq %"class.base::SingleThreadTaskRunner"* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  br label %47

47:                                               ; preds = %40, %44
  %48 = bitcast %"class.blink::ClipboardWriter"* %0 to void (%"class.blink::ClipboardWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*)***
  %49 = load void (%"class.blink::ClipboardWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*)**, void (%"class.blink::ClipboardWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::ClipboardWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*)*, void (%"class.blink::ClipboardWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*)** %49, i64 7
  %51 = load void (%"class.blink::ClipboardWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*)*, void (%"class.blink::ClipboardWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*)** %50, align 8
  tail call void %51(%"class.blink::ClipboardWriter"* %0, %"class.blink::DOMArrayBuffer"* %4, %"class.base::SingleThreadTaskRunner"* %42) #7
  ret void
}

declare %"class.blink::DOMArrayBuffer"* @_ZN5blink16FileReaderLoader17ArrayBufferResultEv(%"class.blink::FileReaderLoader"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ClipboardWriter7DidFailENS_13FileErrorCodeE(%"class.blink::ClipboardWriter"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %3, align 8
  store %"class.blink::FileReaderLoader"* null, %"class.blink::FileReaderLoader"** %3, align 8
  %5 = icmp eq %"class.blink::FileReaderLoader"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::FileReaderLoader"* %4 to void (%"class.blink::FileReaderLoader"*)***
  %8 = load void (%"class.blink::FileReaderLoader"*)**, void (%"class.blink::FileReaderLoader"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %8, i64 1
  %10 = load void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %9, align 8
  tail call void %10(%"class.blink::FileReaderLoader"* nonnull %4) #7
  br label %11

11:                                               ; preds = %2, %6
  %12 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 7
  %13 = bitcast %"class.blink::SelfKeepAlive.434"* %12 to i8*
  %14 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  %15 = bitcast i8* %14 to %"class.blink::ClipboardWriter"**
  store %"class.blink::ClipboardWriter"* null, %"class.blink::ClipboardWriter"** %15, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = bitcast i8* %16 to %"class.blink::PersistentNode"**
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %19 = icmp eq %"class.blink::PersistentNode"* %18, null
  br i1 %19, label %39, label %20

20:                                               ; preds = %11
  %21 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %22 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %21, i64 0, i32 1
  %23 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %22) #7
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27, !prof !3

25:                                               ; preds = %20
  %26 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %22, i8* %26) #7
  br label %27

27:                                               ; preds = %25, %20
  %28 = phi i8* [ %26, %25 ], [ %23, %20 ]
  %29 = bitcast i8* %28 to %"class.blink::ThreadState"**
  %30 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %31, align 8
  %33 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %32, i64 0, i32 0, i32 0
  %35 = bitcast %"class.blink::PersistentRegion"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::PersistentNode"* %33 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %33, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %38, align 8
  store %"class.blink::PersistentNode"* %33, %"class.blink::PersistentNode"** %34, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %17, align 8
  br label %39

39:                                               ; preds = %11, %27
  %40 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %40, align 8
  tail call void @_ZN5blink16ClipboardPromise29RejectFromReadOrDecodeFailureEv(%"class.blink::ClipboardPromise"* %41) #7
  ret void
}

declare void @_ZN5blink16ClipboardPromise29RejectFromReadOrDecodeFailureEv(%"class.blink::ClipboardPromise"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15ClipboardWriter5TraceEPNS_7VisitorE(%"class.blink::ClipboardWriter"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 5
  %15 = bitcast %"class.blink::Member.416"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv) #7
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 6
  %26 = bitcast %"class.blink::Member.427"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18RawSystemClipboardEE5TraceEPNS_7VisitorEPKv) #7
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22FileReaderLoaderClient23DidReceiveDataForClientEPKcj(%"class.blink::FileReaderLoaderClient"*, i8*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #7

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ClipboardWriterEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ClipboardWriterEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ClipboardWriterEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.209"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ClipboardWriterEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.209"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ClipboardWriterEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 40
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv) #7
  br label %24

24:                                               ; preds = %18, %13
  %25 = getelementptr inbounds i8, i8* %1, i64 48
  %26 = bitcast i8* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %0, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18RawSystemClipboardEE5TraceEPNS_7VisitorEPKv) #7
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ClipboardWriterEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ClipboardWriter"*
  %3 = bitcast i8* %0 to void (%"class.blink::ClipboardWriter"*)***
  %4 = load void (%"class.blink::ClipboardWriter"*)**, void (%"class.blink::ClipboardWriter"*)*** %3, align 8
  %5 = load void (%"class.blink::ClipboardWriter"*)*, void (%"class.blink::ClipboardWriter"*)** %4, align 8
  tail call void %5(%"class.blink::ClipboardWriter"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ClipboardWriterEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.209"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ClipboardWriterD2Ev(%"class.blink::ClipboardWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink15ClipboardWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 7
  %4 = bitcast %"class.blink::SelfKeepAlive.434"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #7
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to %"class.blink::PersistentNode"**
  %8 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %7, align 8
  %9 = icmp eq %"class.blink::PersistentNode"* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %1
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #7
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !3

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #7
  br label %17

17:                                               ; preds = %15, %10
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %21, align 8
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %7, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %22, i64 0, i32 0, i32 0
  %25 = bitcast %"class.blink::PersistentRegion"* %22 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PersistentNode"* %23 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %23, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %28, align 8
  store %"class.blink::PersistentNode"* %23, %"class.blink::PersistentNode"** %24, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %7, align 8
  br label %29

29:                                               ; preds = %1, %17
  %30 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %31 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %30, align 8
  store %"class.blink::FileReaderLoader"* null, %"class.blink::FileReaderLoader"** %30, align 8
  %32 = icmp eq %"class.blink::FileReaderLoader"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::FileReaderLoader"* %31 to void (%"class.blink::FileReaderLoader"*)***
  %35 = load void (%"class.blink::FileReaderLoader"*)**, void (%"class.blink::FileReaderLoader"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %35, i64 1
  %37 = load void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %36, align 8
  tail call void %37(%"class.blink::FileReaderLoader"* nonnull %31) #7
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %39, align 8
  %41 = icmp eq %"class.base::SingleThreadTaskRunner"* %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %40, i64 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %43, i64 -2
  %49 = bitcast %"class.base::RefCountedThreadSafe"* %48 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %49) #7
  br label %50

50:                                               ; preds = %38, %42, %47
  %51 = getelementptr inbounds %"class.blink::ClipboardWriter", %"class.blink::ClipboardWriter"* %0, i64 0, i32 2, i32 0
  %52 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %51, align 8
  %53 = icmp eq %"class.base::SingleThreadTaskRunner"* %52, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %52, i64 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe"* %60 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #7
  br label %62

62:                                               ; preds = %50, %54, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_120ClipboardImageWriterD0Ev(%"class.blink::(anonymous namespace)::ClipboardImageWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardImageWriter", %"class.blink::(anonymous namespace)::ClipboardImageWriter"* %0, i64 0, i32 0
  tail call void @_ZN5blink15ClipboardWriterD2Ev(%"class.blink::ClipboardWriter"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_120ClipboardImageWriter10StartWriteEPNS_14DOMArrayBufferE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.blink::CrossThreadPersistent", align 8
  %7 = alloca %"class.blink::CrossThreadPersistent.616", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = alloca %"class.blink::CrossThreadPersistent", align 8
  %11 = alloca %"class.blink::CrossThreadPersistent.616", align 8
  %12 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 45) #7
  %13 = bitcast %"class.blink::CrossThreadPersistent"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %10, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %10, i64 0, i32 0, i32 0
  store %"class.blink::DOMArrayBuffer"* %1, %"class.blink::DOMArrayBuffer"** %15, align 8, !alias.scope !5
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %10, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %17, align 8, !alias.scope !5
  %18 = ptrtoint %"class.blink::DOMArrayBuffer"* %1 to i64
  switch i64 %18, label %19 [
    i64 0, label %38
    i64 -1, label %38
  ]

19:                                               ; preds = %3
  %20 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !5
  %21 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %20, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %21) #7, !noalias !5
  %22 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !5
  %23 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %23, align 8, !noalias !5
  %25 = icmp eq %"class.blink::PersistentNode"* %24, null
  br i1 %25, label %26, label %29, !prof !3

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %22, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %27) #7
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %23, align 8
  br label %29

29:                                               ; preds = %26, %19
  %30 = phi %"class.blink::PersistentNode"* [ %28, %26 ], [ %24, %19 ]
  %31 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !5
  %33 = bitcast %"class.blink::CrossThreadPersistentRegion"* %22 to i64*
  store i64 %32, i64* %33, align 8, !noalias !5
  %34 = bitcast %"class.blink::PersistentNode"* %30 to %"class.blink::PersistentBase.611"**
  store %"class.blink::PersistentBase.611"* %14, %"class.blink::PersistentBase.611"** %34, align 8, !noalias !5
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14DOMArrayBufferELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  %36 = ptrtoint %"class.blink::PersistentNode"* %30 to i64
  %37 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %16 to i64*
  store atomic i64 %36, i64* %37 release, align 8, !alias.scope !5
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %21) #7
  br label %38

38:                                               ; preds = %3, %3, %29
  %39 = bitcast %"class.blink::CrossThreadPersistent.616"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #7
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistent.616", %"class.blink::CrossThreadPersistent.616"* %11, i64 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CrossThreadPersistent.616", %"class.blink::CrossThreadPersistent.616"* %11, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardImageWriter"* %0, %"class.blink::(anonymous namespace)::ClipboardImageWriter"** %41, align 8, !alias.scope !8
  %42 = getelementptr inbounds %"class.blink::CrossThreadPersistent.616", %"class.blink::CrossThreadPersistent.616"* %11, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8, !alias.scope !8
  %44 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardImageWriter"* %0 to i64
  switch i64 %44, label %45 [
    i64 0, label %64
    i64 -1, label %64
  ]

45:                                               ; preds = %38
  %46 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !8
  %47 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %46, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %47) #7, !noalias !8
  %48 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !8
  %49 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8, !noalias !8
  %51 = icmp eq %"class.blink::PersistentNode"* %50, null
  br i1 %51, label %52, label %55, !prof !3

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %48, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %53) #7
  %54 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8
  br label %55

55:                                               ; preds = %52, %45
  %56 = phi %"class.blink::PersistentNode"* [ %54, %52 ], [ %50, %45 ]
  %57 = bitcast %"class.blink::PersistentNode"* %56 to i64*
  %58 = load i64, i64* %57, align 8, !noalias !8
  %59 = bitcast %"class.blink::CrossThreadPersistentRegion"* %48 to i64*
  store i64 %58, i64* %59, align 8, !noalias !8
  %60 = bitcast %"class.blink::PersistentNode"* %56 to %"class.blink::PersistentBase.617"**
  store %"class.blink::PersistentBase.617"* %40, %"class.blink::PersistentBase.617"** %60, align 8, !noalias !8
  %61 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %56, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_120ClipboardImageWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %61, align 8
  %62 = ptrtoint %"class.blink::PersistentNode"* %56 to i64
  %63 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %42 to i64*
  store atomic i64 %62, i64* %63 release, align 8, !alias.scope !8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %47) #7
  br label %64

64:                                               ; preds = %38, %38, %55
  %65 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  %66 = bitcast %"class.blink::CrossThreadPersistent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #7, !noalias !11
  %67 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #7, !alias.scope !14, !noalias !11
  %68 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !17
  %69 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %68, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %69) #7, !noalias !17
  %70 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %15, align 8, !noalias !17
  call void @_ZN5blink14PersistentBaseINS_14DOMArrayBufferELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.611"* nonnull %67, %"class.blink::DOMArrayBuffer"* %70) #7, !noalias !11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %69) #7, !noalias !11
  %71 = bitcast %"class.blink::CrossThreadPersistent.616"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #7, !noalias !11
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_120ClipboardImageWriterEEC2ERKS3_(%"class.blink::CrossThreadPersistent.616"* nonnull %7, %"class.blink::CrossThreadPersistent.616"* nonnull dereferenceable(16) %11) #7, !noalias !11
  %72 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 1 monotonic, !noalias !11
  br label %76

76:                                               ; preds = %73, %64
  %77 = ptrtoint %"class.base::SingleThreadTaskRunner"* %2 to i64
  %78 = call i8* @_Znwm(i64 80) #16, !noalias !18
  %79 = bitcast i8* %78 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %79, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink14DOMArrayBufferEPNS3_12_GLOBAL__N_120ClipboardImageWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS3_21CrossThreadPersistentIS4_EENSE_IS7_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPN5blink14DOMArrayBufferEPNS2_12_GLOBAL__N_120ClipboardImageWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS2_21CrossThreadPersistentIS3_EENSD_IS6_EESA_EE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !18
  %80 = getelementptr inbounds i8, i8* %78, i64 32
  %81 = bitcast i8* %80 to i64*
  store i64 ptrtoint (void (%"class.blink::DOMArrayBuffer"*, %"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink12_GLOBAL__N_120ClipboardImageWriter24DecodeOnBackgroundThreadEPNS_14DOMArrayBufferEPS1_13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i64), i64* %81, align 8, !noalias !18
  %82 = getelementptr inbounds i8, i8* %78, i64 40
  %83 = bitcast i8* %82 to %"class.blink::PersistentBase.611"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false) #7, !noalias !18
  %84 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !18
  %85 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %84, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %85) #7, !noalias !18
  %86 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 0
  %87 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %86, align 8, !noalias !18
  call void @_ZN5blink14PersistentBaseINS_14DOMArrayBufferELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.611"* %83, %"class.blink::DOMArrayBuffer"* %87) #7, !noalias !18
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %85) #7, !noalias !18
  %88 = getelementptr inbounds i8, i8* %78, i64 56
  %89 = bitcast i8* %88 to %"class.blink::CrossThreadPersistent.616"*
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_120ClipboardImageWriterEEC2ERKS3_(%"class.blink::CrossThreadPersistent.616"* %89, %"class.blink::CrossThreadPersistent.616"* nonnull dereferenceable(16) %7) #7, !noalias !18
  %90 = getelementptr inbounds i8, i8* %78, i64 72
  %91 = bitcast i8* %90 to i64*
  store i64 %77, i64* %91, align 8, !noalias !18
  %92 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #7, !noalias !11
  %93 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %94 = ptrtoint i8* %78 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %93, align 8, !noalias !23
  %95 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.WTF::CrossThreadOnceFunction"* %9 to i64*
  store i64 %94, i64* %96, align 8, !alias.scope !23
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %95, align 8, !noalias !23
  %97 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %97) #7, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #7, !noalias !11
  %98 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %98) #7, !noalias !11
  %99 = getelementptr inbounds %"class.blink::CrossThreadPersistent.616", %"class.blink::CrossThreadPersistent.616"* %7, i64 0, i32 0, i32 1
  %100 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %99 to i64*
  %101 = load atomic i64, i64* %100 acquire, align 8, !noalias !11
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %117, label %103

103:                                              ; preds = %76
  %104 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !11
  %105 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %104, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %105) #7, !noalias !11
  %106 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !11
  %107 = load atomic i64, i64* %100 monotonic, align 8, !noalias !11
  %108 = inttoptr i64 %107 to %"class.blink::PersistentNode"*
  %109 = icmp eq i64 %107, 0
  br i1 %109, label %116, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %106, i64 0, i32 0, i32 0
  %112 = bitcast %"class.blink::CrossThreadPersistentRegion"* %106 to i64*
  %113 = load i64, i64* %112, align 8, !noalias !11
  %114 = inttoptr i64 %107 to i64*
  store i64 %113, i64* %114, align 8, !noalias !11
  %115 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %108, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %115, align 8, !noalias !11
  store %"class.blink::PersistentNode"* %108, %"class.blink::PersistentNode"** %111, align 8, !noalias !11
  br label %116

116:                                              ; preds = %110, %103
  store atomic i64 0, i64* %100 release, align 8, !noalias !11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %105) #7, !noalias !11
  br label %117

117:                                              ; preds = %116, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #7, !noalias !11
  %118 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 1
  %119 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %118 to i64*
  %120 = load atomic i64, i64* %119 acquire, align 8, !noalias !11
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %136, label %122

122:                                              ; preds = %117
  %123 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !11
  %124 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %123, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %124) #7, !noalias !11
  %125 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !11
  %126 = load atomic i64, i64* %119 monotonic, align 8, !noalias !11
  %127 = inttoptr i64 %126 to %"class.blink::PersistentNode"*
  %128 = icmp eq i64 %126, 0
  br i1 %128, label %135, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %125, i64 0, i32 0, i32 0
  %131 = bitcast %"class.blink::CrossThreadPersistentRegion"* %125 to i64*
  %132 = load i64, i64* %131, align 8, !noalias !11
  %133 = inttoptr i64 %126 to i64*
  store i64 %132, i64* %133, align 8, !noalias !11
  %134 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %127, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %134, align 8, !noalias !11
  store %"class.blink::PersistentNode"* %127, %"class.blink::PersistentNode"** %130, align 8, !noalias !11
  br label %135

135:                                              ; preds = %129, %122
  store atomic i64 0, i64* %119 release, align 8, !noalias !11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %124) #7, !noalias !11
  br label %136

136:                                              ; preds = %117, %135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #7, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  call void @_ZN5blink11worker_pool8PostTaskERKN4base8LocationEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %8, %"class.WTF::CrossThreadOnceFunction"* nonnull %9) #7
  %137 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %137) #7
  %138 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %42 to i64*
  %139 = load atomic i64, i64* %138 acquire, align 8
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %155, label %141

141:                                              ; preds = %136
  %142 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %143 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %142, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %143) #7
  %144 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %145 = load atomic i64, i64* %138 monotonic, align 8
  %146 = inttoptr i64 %145 to %"class.blink::PersistentNode"*
  %147 = icmp eq i64 %145, 0
  br i1 %147, label %154, label %148

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %144, i64 0, i32 0, i32 0
  %150 = bitcast %"class.blink::CrossThreadPersistentRegion"* %144 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = inttoptr i64 %145 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %146, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %153, align 8
  store %"class.blink::PersistentNode"* %146, %"class.blink::PersistentNode"** %149, align 8
  br label %154

154:                                              ; preds = %148, %141
  store atomic i64 0, i64* %138 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %143) #7
  br label %155

155:                                              ; preds = %136, %154
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #7
  %156 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %16 to i64*
  %157 = load atomic i64, i64* %156 acquire, align 8
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %173, label %159

159:                                              ; preds = %155
  %160 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %161 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %160, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %161) #7
  %162 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %163 = load atomic i64, i64* %156 monotonic, align 8
  %164 = inttoptr i64 %163 to %"class.blink::PersistentNode"*
  %165 = icmp eq i64 %163, 0
  br i1 %165, label %172, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %162, i64 0, i32 0, i32 0
  %168 = bitcast %"class.blink::CrossThreadPersistentRegion"* %162 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = inttoptr i64 %163 to i64*
  store i64 %169, i64* %170, align 8
  %171 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %164, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %171, align 8
  store %"class.blink::PersistentNode"* %164, %"class.blink::PersistentNode"** %167, align 8
  br label %172

172:                                              ; preds = %166, %159
  store atomic i64 0, i64* %156 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %161) #7
  br label %173

173:                                              ; preds = %155, %172
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #7
  br i1 %72, label %182, label %174

174:                                              ; preds = %173
  %175 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %176 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw sub i32* %176, i32 1 acq_rel
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %179, label %182

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %175, i64 -2
  %181 = bitcast %"class.base::RefCountedThreadSafe"* %180 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %181) #7
  br label %182

182:                                              ; preds = %173, %174, %179
  ret void
}

declare void @_ZN5blink11worker_pool8PostTaskERKN4base8LocationEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.base::Location"* dereferenceable(32), %"class.WTF::CrossThreadOnceFunction"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_120ClipboardImageWriter24DecodeOnBackgroundThreadEPNS_14DOMArrayBufferEPS1_13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::DOMArrayBuffer"* nocapture readonly, %"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %"class.base::SingleThreadTaskRunner"*) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.blink::CrossThreadPersistent.616", align 8
  %9 = alloca %class.sk_sp.665, align 8
  %10 = alloca %"class.blink::ColorBehavior", align 4
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %struct.SkISize*
  %13 = alloca %class.sk_sp.667, align 8
  %14 = alloca %"class.base::Location", align 8
  %15 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %16 = alloca %"class.blink::CrossThreadPersistent.616", align 8
  %17 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %17, align 8
  %19 = icmp eq %"class.v8::BackingStore"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %3
  %21 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %18) #7
  %22 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %17, align 8
  %23 = icmp eq %"class.v8::BackingStore"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %22) #7
  br label %26

26:                                               ; preds = %3, %20, %24
  %27 = phi i8* [ %21, %24 ], [ %21, %20 ], [ null, %3 ]
  %28 = phi i64 [ %25, %24 ], [ 0, %20 ], [ 0, %3 ]
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp.665* nonnull sret %9, i8* %27, i64 %28, void (i8*, i8*)* nonnull @_ZN6SkData16DummyReleaseProcEPKvPv, i8* null) #7
  %29 = call %"class.blink::SegmentReader"* @_ZN5blink13SegmentReader16CreateFromSkDataE5sk_spI6SkDataE(%class.sk_sp.665* nonnull %9) #7
  %30 = bitcast %"class.blink::ColorBehavior"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #7
  %31 = getelementptr inbounds %"class.blink::ColorBehavior", %"class.blink::ColorBehavior"* %10, i64 0, i32 0
  store i32 1, i32* %31, align 4
  %32 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7
  store i64 0, i64* %11, align 8
  %33 = call %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder6CreateE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.blink::SegmentReader"* %29, i1 zeroext true, i32 0, i32 0, %"class.blink::ColorBehavior"* nonnull dereferenceable(4) %10, %struct.SkISize* nonnull dereferenceable(8) %12, i32 0) #7
  %34 = ptrtoint %"class.blink::ImageDecoder"* %33 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #7
  %35 = getelementptr inbounds %class.sk_sp.665, %class.sk_sp.665* %9, i64 0, i32 0
  %36 = load %class.SkData*, %class.SkData** %35, align 8
  %37 = icmp eq %class.SkData* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %26
  %39 = getelementptr inbounds %class.SkData, %class.SkData* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %36) #7
  %43 = bitcast %class.SkData* %36 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %43) #7
  br label %44

44:                                               ; preds = %26, %38, %42
  %45 = icmp eq %"class.blink::ImageDecoder"* %33, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %44
  %47 = bitcast %class.sk_sp.667* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  call void @_ZN5blink11ImageBitmap21GetSkImageFromDecoderENSt3__110unique_ptrINS_12ImageDecoderENS1_14default_deleteIS3_EEEE(%class.sk_sp.667* nonnull sret %13, %"class.blink::ImageDecoder"* nonnull %33) #7
  %48 = bitcast %class.sk_sp.667* %13 to i64*
  %49 = load i64, i64* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  br label %50

50:                                               ; preds = %44, %46
  %51 = phi i64 [ %49, %46 ], [ 0, %44 ]
  %52 = phi i64 [ 0, %46 ], [ %34, %44 ]
  %53 = bitcast %"class.base::Location"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %14, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 65) #7
  %54 = bitcast %"class.blink::CrossThreadPersistent.616"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #7
  %55 = getelementptr inbounds %"class.blink::CrossThreadPersistent.616", %"class.blink::CrossThreadPersistent.616"* %16, i64 0, i32 0
  %56 = getelementptr inbounds %"class.blink::CrossThreadPersistent.616", %"class.blink::CrossThreadPersistent.616"* %16, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardImageWriter"* %1, %"class.blink::(anonymous namespace)::ClipboardImageWriter"** %56, align 8, !alias.scope !26
  %57 = getelementptr inbounds %"class.blink::CrossThreadPersistent.616", %"class.blink::CrossThreadPersistent.616"* %16, i64 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %58, align 8, !alias.scope !26
  %59 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardImageWriter"* %1 to i64
  switch i64 %59, label %60 [
    i64 0, label %79
    i64 -1, label %79
  ]

60:                                               ; preds = %50
  %61 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !26
  %62 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %61, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %62) #7, !noalias !26
  %63 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !26
  %64 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %64, align 8, !noalias !26
  %66 = icmp eq %"class.blink::PersistentNode"* %65, null
  br i1 %66, label %67, label %70, !prof !3

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %63, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %68) #7
  %69 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %64, align 8
  br label %70

70:                                               ; preds = %67, %60
  %71 = phi %"class.blink::PersistentNode"* [ %69, %67 ], [ %65, %60 ]
  %72 = bitcast %"class.blink::PersistentNode"* %71 to i64*
  %73 = load i64, i64* %72, align 8, !noalias !26
  %74 = bitcast %"class.blink::CrossThreadPersistentRegion"* %63 to i64*
  store i64 %73, i64* %74, align 8, !noalias !26
  %75 = bitcast %"class.blink::PersistentNode"* %71 to %"class.blink::PersistentBase.617"**
  store %"class.blink::PersistentBase.617"* %55, %"class.blink::PersistentBase.617"** %75, align 8, !noalias !26
  %76 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %71, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_120ClipboardImageWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %76, align 8
  %77 = ptrtoint %"class.blink::PersistentNode"* %71 to i64
  %78 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %57 to i64*
  store atomic i64 %77, i64* %78 release, align 8, !alias.scope !26
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %62) #7
  br label %79

79:                                               ; preds = %50, %50, %70
  %80 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80)
  %81 = bitcast %"class.blink::CrossThreadPersistent.616"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #7, !noalias !29
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_120ClipboardImageWriterEEC2ERKS3_(%"class.blink::CrossThreadPersistent.616"* nonnull %8, %"class.blink::CrossThreadPersistent.616"* nonnull dereferenceable(16) %16) #7, !noalias !29
  %82 = inttoptr i64 %51 to %class.SkImage*
  %83 = icmp eq i64 %51, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %class.SkImage, %class.SkImage* %82, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 1 monotonic, !noalias !32
  br label %87

87:                                               ; preds = %84, %79
  %88 = call i8* @_Znwm(i64 72) #16, !noalias !35
  %89 = bitcast i8* %88 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %89, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_120ClipboardImageWriterEFv5sk_spI7SkImageEEJNS3_21CrossThreadPersistentIS5_EES8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_120ClipboardImageWriterEFv5sk_spI7SkImageEEJNS2_21CrossThreadPersistentIS4_EES7_EE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !35
  %90 = getelementptr inbounds i8, i8* %88, i64 32
  %91 = bitcast i8* %90 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %class.sk_sp.667*)* @_ZN5blink12_GLOBAL__N_120ClipboardImageWriter5WriteE5sk_spI7SkImageE to i64), i64 0>, <2 x i64>* %91, align 8, !noalias !35
  %92 = getelementptr inbounds i8, i8* %88, i64 48
  %93 = bitcast i8* %92 to %"class.blink::CrossThreadPersistent.616"*
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_120ClipboardImageWriterEEC2ERKS3_(%"class.blink::CrossThreadPersistent.616"* %93, %"class.blink::CrossThreadPersistent.616"* nonnull dereferenceable(16) %8) #7, !noalias !35
  %94 = getelementptr inbounds i8, i8* %88, i64 64
  %95 = bitcast i8* %94 to i64*
  store i64 %51, i64* %95, align 8, !noalias !35
  %96 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #7, !noalias !29
  %97 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %98 = ptrtoint i8* %88 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %97, align 8, !noalias !40
  %99 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::CrossThreadOnceFunction"* %15 to i64*
  store i64 %98, i64* %100, align 8, !alias.scope !40
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %99, align 8, !noalias !40
  %101 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %101) #7, !noalias !40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #7, !noalias !29
  %102 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %102) #7, !noalias !29
  %103 = getelementptr inbounds %"class.blink::CrossThreadPersistent.616", %"class.blink::CrossThreadPersistent.616"* %8, i64 0, i32 0, i32 1
  %104 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %103 to i64*
  %105 = load atomic i64, i64* %104 acquire, align 8, !noalias !29
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %121, label %107

107:                                              ; preds = %87
  %108 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !29
  %109 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %108, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %109) #7, !noalias !29
  %110 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !29
  %111 = load atomic i64, i64* %104 monotonic, align 8, !noalias !29
  %112 = inttoptr i64 %111 to %"class.blink::PersistentNode"*
  %113 = icmp eq i64 %111, 0
  br i1 %113, label %120, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %110, i64 0, i32 0, i32 0
  %116 = bitcast %"class.blink::CrossThreadPersistentRegion"* %110 to i64*
  %117 = load i64, i64* %116, align 8, !noalias !29
  %118 = inttoptr i64 %111 to i64*
  store i64 %117, i64* %118, align 8, !noalias !29
  %119 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %112, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %119, align 8, !noalias !29
  store %"class.blink::PersistentNode"* %112, %"class.blink::PersistentNode"** %115, align 8, !noalias !29
  br label %120

120:                                              ; preds = %114, %107
  store atomic i64 0, i64* %104 release, align 8, !noalias !29
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %109) #7, !noalias !29
  br label %121

121:                                              ; preds = %87, %120
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #7, !noalias !29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80)
  %122 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122)
  %123 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123)
  %124 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to %"class.base::TaskRunner"*
  %125 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i64, i64* %100, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %125, align 8
  %127 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %126, i64* %128, align 8, !alias.scope !43
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %127, align 8, !noalias !43
  %129 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %130 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %129, align 8
  %131 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %130, align 8
  %132 = call zeroext i1 %131(%"class.base::TaskRunner"* %124, %"class.base::Location"* nonnull dereferenceable(32) %14, %"class.base::OnceCallback"* nonnull %4, i64 0) #7
  %133 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %133) #7
  %134 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %134) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123)
  %135 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %15, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %135) #7
  %136 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %57 to i64*
  %137 = load atomic i64, i64* %136 acquire, align 8
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %153, label %139

139:                                              ; preds = %121
  %140 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %141 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %140, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %141) #7
  %142 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %143 = load atomic i64, i64* %136 monotonic, align 8
  %144 = inttoptr i64 %143 to %"class.blink::PersistentNode"*
  %145 = icmp eq i64 %143, 0
  br i1 %145, label %152, label %146

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %142, i64 0, i32 0, i32 0
  %148 = bitcast %"class.blink::CrossThreadPersistentRegion"* %142 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = inttoptr i64 %143 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %144, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %151, align 8
  store %"class.blink::PersistentNode"* %144, %"class.blink::PersistentNode"** %147, align 8
  br label %152

152:                                              ; preds = %146, %139
  store atomic i64 0, i64* %136 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %141) #7
  br label %153

153:                                              ; preds = %121, %152
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #7
  br i1 %83, label %164, label %154

154:                                              ; preds = %153
  %155 = getelementptr inbounds %class.SkImage, %class.SkImage* %82, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = atomicrmw add i32* %155, i32 -1 acq_rel
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %164

158:                                              ; preds = %154
  %159 = inttoptr i64 %51 to %class.SkRefCntBase*
  %160 = inttoptr i64 %51 to void (%class.SkRefCntBase*)***
  %161 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %160, align 8
  %162 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %161, i64 2
  %163 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %162, align 8
  call void %163(%class.SkRefCntBase* nonnull %159) #7
  br label %164

164:                                              ; preds = %153, %154, %158
  %165 = icmp eq i64 %52, 0
  br i1 %165, label %172, label %166

166:                                              ; preds = %164
  %167 = inttoptr i64 %52 to %"class.blink::ImageDecoder"*
  %168 = inttoptr i64 %52 to void (%"class.blink::ImageDecoder"*)***
  %169 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %169, i64 1
  %171 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %170, align 8
  call void %171(%"class.blink::ImageDecoder"* nonnull %167) #7
  br label %172

172:                                              ; preds = %164, %166
  %173 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %173, label %182, label %174

174:                                              ; preds = %172
  %175 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %176 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw sub i32* %176, i32 1 acq_rel
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %179, label %182

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %175, i64 -2
  %181 = bitcast %"class.base::RefCountedThreadSafe"* %180 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %181) #7
  br label %182

182:                                              ; preds = %172, %174, %179
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink14DOMArrayBufferEPNS3_12_GLOBAL__N_120ClipboardImageWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS3_21CrossThreadPersistentIS4_EENSE_IS7_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"class.blink::DOMArrayBuffer"*, %"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %"class.base::SingleThreadTaskRunner"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = load void (%"class.blink::DOMArrayBuffer"*, %"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %"class.base::SingleThreadTaskRunner"*)*, void (%"class.blink::DOMArrayBuffer"*, %"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %"class.base::SingleThreadTaskRunner"*)** %3, align 8
  %6 = bitcast void ()** %4 to %"class.blink::DOMArrayBuffer"**
  %7 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %6, align 8
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.blink::(anonymous namespace)::ClipboardImageWriter"**
  %10 = load %"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %"class.blink::(anonymous namespace)::ClipboardImageWriter"** %9, align 8
  %11 = getelementptr inbounds void ()*, void ()** %4, i64 4
  %12 = bitcast void ()** %11 to %"class.base::SingleThreadTaskRunner"**
  %13 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %12, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %12, align 8
  tail call void %5(%"class.blink::DOMArrayBuffer"* %7, %"class.blink::(anonymous namespace)::ClipboardImageWriter"* %10, %"class.base::SingleThreadTaskRunner"* %13) #7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIPFvPN5blink14DOMArrayBufferEPNS2_12_GLOBAL__N_120ClipboardImageWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS2_21CrossThreadPersistentIS3_EENSD_IS6_EESA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %56, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 1
  %5 = bitcast void ()** %4 to %"class.base::SingleThreadTaskRunner"**
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #7
  br label %16

16:                                               ; preds = %13, %8, %3
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %18 = bitcast %"class.base::internal::BindStateBase"* %17 to i64*
  %19 = load atomic i64, i64* %18 acquire, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %16
  %22 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %23 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %22, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %23) #7
  %24 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %25 = load atomic i64, i64* %18 monotonic, align 8
  %26 = inttoptr i64 %25 to %"class.blink::PersistentNode"*
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %24, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::CrossThreadPersistentRegion"* %24 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = inttoptr i64 %25 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %26, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %26, %"class.blink::PersistentNode"** %29, align 8
  br label %34

34:                                               ; preds = %28, %21
  store atomic i64 0, i64* %18 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %23) #7
  br label %35

35:                                               ; preds = %34, %16
  %36 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %37 = bitcast void (%"class.base::internal::BindStateBase"*)** %36 to i64*
  %38 = load atomic i64, i64* %37 acquire, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %54, label %40

40:                                               ; preds = %35
  %41 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %42 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %41, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %42) #7
  %43 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %44 = load atomic i64, i64* %37 monotonic, align 8
  %45 = inttoptr i64 %44 to %"class.blink::PersistentNode"*
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %43, i64 0, i32 0, i32 0
  %49 = bitcast %"class.blink::CrossThreadPersistentRegion"* %43 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = inttoptr i64 %44 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %45, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %52, align 8
  store %"class.blink::PersistentNode"* %45, %"class.blink::PersistentNode"** %48, align 8
  br label %53

53:                                               ; preds = %47, %40
  store atomic i64 0, i64* %37 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %42) #7
  br label %54

54:                                               ; preds = %35, %53
  %55 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %55) #16
  br label %56

56:                                               ; preds = %54, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_14DOMArrayBufferELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.611"*, %"class.blink::DOMArrayBuffer"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.611", %"class.blink::PersistentBase.611"* %0, i64 0, i32 0
  store %"class.blink::DOMArrayBuffer"* %1, %"class.blink::DOMArrayBuffer"** %3, align 8
  %4 = ptrtoint %"class.blink::DOMArrayBuffer"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.611", %"class.blink::PersistentBase.611"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.611"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !3

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #7
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.611"**
  store %"class.blink::PersistentBase.611"* %0, %"class.blink::PersistentBase.611"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14DOMArrayBufferELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.611", %"class.blink::PersistentBase.611"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14DOMArrayBufferELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::DOMArrayBuffer"**
  %5 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #7
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #7
  %7 = icmp eq %"class.blink::DOMArrayBuffer"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::DOMArrayBuffer"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14DOMArrayBufferEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #7
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14DOMArrayBufferEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_120ClipboardImageWriterEEC2ERKS3_(%"class.blink::CrossThreadPersistent.616"*, %"class.blink::CrossThreadPersistent.616"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent.616", %"class.blink::CrossThreadPersistent.616"* %0, i64 0, i32 0
  %4 = bitcast %"class.blink::CrossThreadPersistent.616"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #7
  %5 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %6 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %5, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #7
  %7 = getelementptr inbounds %"class.blink::CrossThreadPersistent.616", %"class.blink::CrossThreadPersistent.616"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %"class.blink::(anonymous namespace)::ClipboardImageWriter"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CrossThreadPersistent.616", %"class.blink::CrossThreadPersistent.616"* %0, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardImageWriter"* %8, %"class.blink::(anonymous namespace)::ClipboardImageWriter"** %9, align 8
  %10 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardImageWriter"* %8 to i64
  switch i64 %10, label %11 [
    i64 0, label %35
    i64 -1, label %35
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::CrossThreadPersistent.616", %"class.blink::CrossThreadPersistent.616"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %12 to i64*
  %14 = load atomic i64, i64* %13 acquire, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %52

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::CrossThreadPersistent.616"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %19 [
    i64 0, label %52
    i64 -1, label %52
  ]

19:                                               ; preds = %16
  %20 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %21 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %23 = icmp eq %"class.blink::PersistentNode"* %22, null
  br i1 %23, label %24, label %27, !prof !3

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %20, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %25) #7
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  br label %27

27:                                               ; preds = %24, %19
  %28 = phi %"class.blink::PersistentNode"* [ %26, %24 ], [ %22, %19 ]
  %29 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::CrossThreadPersistentRegion"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to %"class.blink::PersistentBase.617"**
  store %"class.blink::PersistentBase.617"* %3, %"class.blink::PersistentBase.617"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_120ClipboardImageWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  %34 = ptrtoint %"class.blink::PersistentNode"* %28 to i64
  store atomic i64 %34, i64* %13 release, align 8
  br label %52

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::CrossThreadPersistent.616", %"class.blink::CrossThreadPersistent.616"* %0, i64 0, i32 0, i32 1
  %37 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %36 to i64*
  %38 = load atomic i64, i64* %37 acquire, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %35
  %41 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %42 = load atomic i64, i64* %37 monotonic, align 8
  %43 = inttoptr i64 %42 to %"class.blink::PersistentNode"*
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %41, i64 0, i32 0, i32 0
  %47 = bitcast %"class.blink::CrossThreadPersistentRegion"* %41 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = inttoptr i64 %42 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %50, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %46, align 8
  br label %51

51:                                               ; preds = %45, %40
  store atomic i64 0, i64* %37 release, align 8
  br label %52

52:                                               ; preds = %11, %16, %16, %27, %35, %51
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_120ClipboardImageWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::ClipboardImageWriter"**
  %5 = load %"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %"class.blink::(anonymous namespace)::ClipboardImageWriter"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #7
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #7
  %7 = icmp eq %"class.blink::(anonymous namespace)::ClipboardImageWriter"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::(anonymous namespace)::ClipboardImageWriter"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_120ClipboardImageWriterEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #7
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_120ClipboardImageWriterEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 40
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv) #7
  br label %24

24:                                               ; preds = %18, %13
  %25 = getelementptr inbounds i8, i8* %1, i64 48
  %26 = bitcast i8* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %0, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18RawSystemClipboardEE5TraceEPNS_7VisitorEPKv) #7
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

declare %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder6CreateE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.blink::SegmentReader"*, i1 zeroext, i32, i32, %"class.blink::ColorBehavior"* dereferenceable(4), %struct.SkISize* dereferenceable(8), i32) local_unnamed_addr #1

declare %"class.blink::SegmentReader"* @_ZN5blink13SegmentReader16CreateFromSkDataE5sk_spI6SkDataE(%class.sk_sp.665*) local_unnamed_addr #1

declare void @_ZN5blink11ImageBitmap21GetSkImageFromDecoderENSt3__110unique_ptrINS_12ImageDecoderENS1_14default_deleteIS3_EEEE(%class.sk_sp.667* sret, %"class.blink::ImageDecoder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_120ClipboardImageWriter5WriteE5sk_spI7SkImageE(%"class.blink::(anonymous namespace)::ClipboardImageWriter"* nocapture readonly, %class.sk_sp.667* nocapture readonly) #0 align 2 {
  %3 = alloca %class.SkBitmap, align 8
  %4 = getelementptr inbounds %class.sk_sp.667, %class.sk_sp.667* %1, i64 0, i32 0
  %5 = load %class.SkImage*, %class.SkImage** %4, align 8
  %6 = icmp eq %class.SkImage* %5, null
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardImageWriter", %"class.blink::(anonymous namespace)::ClipboardImageWriter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %7, align 8
  br i1 %6, label %9, label %10

9:                                                ; preds = %2
  tail call void @_ZN5blink16ClipboardPromise29RejectFromReadOrDecodeFailureEv(%"class.blink::ClipboardPromise"* %8) #7
  br label %20

10:                                               ; preds = %2
  %11 = tail call %"class.blink::LocalFrame"* @_ZNK5blink16ClipboardPromise13GetLocalFrameEv(%"class.blink::ClipboardPromise"* %8) #7
  %12 = icmp eq %"class.blink::LocalFrame"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %10
  %14 = bitcast %class.SkBitmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %3) #7
  %15 = load %class.SkImage*, %class.SkImage** %4, align 8
  %16 = call zeroext i1 @_ZNK7SkImage14asLegacyBitmapEP8SkBitmapNS_16LegacyBitmapModeE(%class.SkImage* %15, %class.SkBitmap* nonnull %3, i32 0) #7
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardImageWriter", %"class.blink::(anonymous namespace)::ClipboardImageWriter"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %18 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %17, align 8
  call void @_ZN5blink15SystemClipboard10WriteImageERK8SkBitmap(%"class.blink::SystemClipboard"* %18, %class.SkBitmap* nonnull dereferenceable(56) %3) #7
  %19 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %7, align 8
  call void @_ZN5blink16ClipboardPromise27CompleteWriteRepresentationEv(%"class.blink::ClipboardPromise"* %19) #7
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #7
  br label %20

20:                                               ; preds = %10, %13, %9
  ret void
}

declare void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp.665* sret, i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #1

declare void @_ZN6SkData16DummyReleaseProcEPKvPv(i8*, i8*) #1

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #1

declare i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_120ClipboardImageWriterEFv5sk_spI7SkImageEEJNS3_21CrossThreadPersistentIS5_EES8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = alloca %class.sk_sp.667, align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.sk_sp.667* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %10
  %15 = bitcast i8* %14 to %"class.blink::(anonymous namespace)::ClipboardImageWriter"*
  %16 = and i64 %7, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %1
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %7, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %class.sk_sp.667*)**
  %24 = load void (%"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %class.sk_sp.667*)*, void (%"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %class.sk_sp.667*)** %23, align 8
  br label %27

25:                                               ; preds = %1
  %26 = inttoptr i64 %7 to void (%"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %class.sk_sp.667*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.blink::(anonymous namespace)::ClipboardImageWriter"*, %class.sk_sp.667*)* [ %24, %18 ], [ %26, %25 ]
  %29 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %class.SkImage**
  %30 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i64*
  %31 = load i64, i64* %30, align 8
  store %class.SkImage* null, %class.SkImage** %29, align 8
  %32 = bitcast %class.sk_sp.667* %2 to i64*
  store i64 %31, i64* %32, align 8
  call void %28(%"class.blink::(anonymous namespace)::ClipboardImageWriter"* %15, %class.sk_sp.667* nonnull %2) #7
  %33 = getelementptr inbounds %class.sk_sp.667, %class.sk_sp.667* %2, i64 0, i32 0
  %34 = load %class.SkImage*, %class.SkImage** %33, align 8
  %35 = icmp eq %class.SkImage* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %class.SkImage, %class.SkImage* %34, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %46

40:                                               ; preds = %36
  %41 = bitcast %class.SkImage* %34 to %class.SkRefCntBase*
  %42 = bitcast %class.SkImage* %34 to void (%class.SkRefCntBase*)***
  %43 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, i64 2
  %45 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, align 8
  call void %45(%class.SkRefCntBase* nonnull %41) #7
  br label %46

46:                                               ; preds = %27, %36, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_120ClipboardImageWriterEFv5sk_spI7SkImageEEJNS2_21CrossThreadPersistentIS4_EES7_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %39, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %class.SkImage**
  %6 = load %class.SkImage*, %class.SkImage** %5, align 8
  %7 = icmp eq %class.SkImage* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkImage, %class.SkImage* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 -1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = bitcast %class.SkImage* %6 to %class.SkRefCntBase*
  %14 = bitcast %class.SkImage* %6 to void (%class.SkRefCntBase*)***
  %15 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %15, i64 2
  %17 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %16, align 8
  tail call void %17(%class.SkRefCntBase* nonnull %13) #7
  br label %18

18:                                               ; preds = %12, %8, %3
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %20 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %19 to i64*
  %21 = load atomic i64, i64* %20 acquire, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %37, label %23

23:                                               ; preds = %18
  %24 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %25 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %24, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %25) #7
  %26 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %27 = load atomic i64, i64* %20 monotonic, align 8
  %28 = inttoptr i64 %27 to %"class.blink::PersistentNode"*
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %26, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::CrossThreadPersistentRegion"* %26 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = inttoptr i64 %27 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %31, align 8
  br label %36

36:                                               ; preds = %30, %23
  store atomic i64 0, i64* %20 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %25) #7
  br label %37

37:                                               ; preds = %18, %36
  %38 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %38) #16
  br label %39

39:                                               ; preds = %37, %1
  ret void
}

declare %"class.blink::LocalFrame"* @_ZNK5blink16ClipboardPromise13GetLocalFrameEv(%"class.blink::ClipboardPromise"*) local_unnamed_addr #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare zeroext i1 @_ZNK7SkImage14asLegacyBitmapEP8SkBitmapNS_16LegacyBitmapModeE(%class.SkImage*, %class.SkBitmap*, i32) local_unnamed_addr #1

declare void @_ZN5blink15SystemClipboard10WriteImageERK8SkBitmap(%"class.blink::SystemClipboard"*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZN5blink16ClipboardPromise27CompleteWriteRepresentationEv(%"class.blink::ClipboardPromise"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardTextWriterD0Ev(%"class.blink::(anonymous namespace)::ClipboardTextWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardTextWriter", %"class.blink::(anonymous namespace)::ClipboardTextWriter"* %0, i64 0, i32 0
  tail call void @_ZN5blink15ClipboardWriterD2Ev(%"class.blink::ClipboardWriter"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardTextWriter10StartWriteEPNS_14DOMArrayBufferE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.blink::DOMArrayBuffer"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.blink::CrossThreadPersistent", align 8
  %7 = alloca %"class.blink::CrossThreadPersistent.1548", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = alloca %"class.blink::CrossThreadPersistent", align 8
  %11 = alloca %"class.blink::CrossThreadPersistent.1548", align 8
  %12 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 100) #7
  %13 = bitcast %"class.blink::CrossThreadPersistent"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %10, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %10, i64 0, i32 0, i32 0
  store %"class.blink::DOMArrayBuffer"* %1, %"class.blink::DOMArrayBuffer"** %15, align 8, !alias.scope !46
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %10, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %17, align 8, !alias.scope !46
  %18 = ptrtoint %"class.blink::DOMArrayBuffer"* %1 to i64
  switch i64 %18, label %19 [
    i64 0, label %38
    i64 -1, label %38
  ]

19:                                               ; preds = %3
  %20 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !46
  %21 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %20, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %21) #7, !noalias !46
  %22 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !46
  %23 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %23, align 8, !noalias !46
  %25 = icmp eq %"class.blink::PersistentNode"* %24, null
  br i1 %25, label %26, label %29, !prof !3

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %22, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %27) #7
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %23, align 8
  br label %29

29:                                               ; preds = %26, %19
  %30 = phi %"class.blink::PersistentNode"* [ %28, %26 ], [ %24, %19 ]
  %31 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !46
  %33 = bitcast %"class.blink::CrossThreadPersistentRegion"* %22 to i64*
  store i64 %32, i64* %33, align 8, !noalias !46
  %34 = bitcast %"class.blink::PersistentNode"* %30 to %"class.blink::PersistentBase.611"**
  store %"class.blink::PersistentBase.611"* %14, %"class.blink::PersistentBase.611"** %34, align 8, !noalias !46
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14DOMArrayBufferELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  %36 = ptrtoint %"class.blink::PersistentNode"* %30 to i64
  %37 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %16 to i64*
  store atomic i64 %36, i64* %37 release, align 8, !alias.scope !46
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %21) #7
  br label %38

38:                                               ; preds = %3, %3, %29
  %39 = bitcast %"class.blink::CrossThreadPersistent.1548"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #7
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1548", %"class.blink::CrossThreadPersistent.1548"* %11, i64 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1548", %"class.blink::CrossThreadPersistent.1548"* %11, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardTextWriter"* %0, %"class.blink::(anonymous namespace)::ClipboardTextWriter"** %41, align 8, !alias.scope !49
  %42 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1548", %"class.blink::CrossThreadPersistent.1548"* %11, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8, !alias.scope !49
  %44 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardTextWriter"* %0 to i64
  switch i64 %44, label %45 [
    i64 0, label %64
    i64 -1, label %64
  ]

45:                                               ; preds = %38
  %46 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !49
  %47 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %46, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %47) #7, !noalias !49
  %48 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !49
  %49 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8, !noalias !49
  %51 = icmp eq %"class.blink::PersistentNode"* %50, null
  br i1 %51, label %52, label %55, !prof !3

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %48, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %53) #7
  %54 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8
  br label %55

55:                                               ; preds = %52, %45
  %56 = phi %"class.blink::PersistentNode"* [ %54, %52 ], [ %50, %45 ]
  %57 = bitcast %"class.blink::PersistentNode"* %56 to i64*
  %58 = load i64, i64* %57, align 8, !noalias !49
  %59 = bitcast %"class.blink::CrossThreadPersistentRegion"* %48 to i64*
  store i64 %58, i64* %59, align 8, !noalias !49
  %60 = bitcast %"class.blink::PersistentNode"* %56 to %"class.blink::PersistentBase.1549"**
  store %"class.blink::PersistentBase.1549"* %40, %"class.blink::PersistentBase.1549"** %60, align 8, !noalias !49
  %61 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %56, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_119ClipboardTextWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %61, align 8
  %62 = ptrtoint %"class.blink::PersistentNode"* %56 to i64
  %63 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %42 to i64*
  store atomic i64 %62, i64* %63 release, align 8, !alias.scope !49
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %47) #7
  br label %64

64:                                               ; preds = %38, %38, %55
  %65 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  %66 = bitcast %"class.blink::CrossThreadPersistent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #7, !noalias !52
  %67 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #7, !alias.scope !55, !noalias !52
  %68 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !58
  %69 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %68, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %69) #7, !noalias !58
  %70 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %15, align 8, !noalias !58
  call void @_ZN5blink14PersistentBaseINS_14DOMArrayBufferELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.611"* nonnull %67, %"class.blink::DOMArrayBuffer"* %70) #7, !noalias !52
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %69) #7, !noalias !52
  %71 = bitcast %"class.blink::CrossThreadPersistent.1548"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #7, !noalias !52
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardTextWriterEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1548"* nonnull %7, %"class.blink::CrossThreadPersistent.1548"* nonnull dereferenceable(16) %11) #7, !noalias !52
  %72 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 1 monotonic, !noalias !52
  br label %76

76:                                               ; preds = %73, %64
  %77 = ptrtoint %"class.base::SingleThreadTaskRunner"* %2 to i64
  %78 = call i8* @_Znwm(i64 80) #16, !noalias !59
  %79 = bitcast i8* %78 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %79, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink14DOMArrayBufferEPNS3_12_GLOBAL__N_119ClipboardTextWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS3_21CrossThreadPersistentIS4_EENSE_IS7_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPN5blink14DOMArrayBufferEPNS2_12_GLOBAL__N_119ClipboardTextWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS2_21CrossThreadPersistentIS3_EENSD_IS6_EESA_EE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !59
  %80 = getelementptr inbounds i8, i8* %78, i64 32
  %81 = bitcast i8* %80 to i64*
  store i64 ptrtoint (void (%"class.blink::DOMArrayBuffer"*, %"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink12_GLOBAL__N_119ClipboardTextWriter24DecodeOnBackgroundThreadEPNS_14DOMArrayBufferEPS1_13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i64), i64* %81, align 8, !noalias !59
  %82 = getelementptr inbounds i8, i8* %78, i64 40
  %83 = bitcast i8* %82 to %"class.blink::PersistentBase.611"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false) #7, !noalias !59
  %84 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !59
  %85 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %84, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %85) #7, !noalias !59
  %86 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 0
  %87 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %86, align 8, !noalias !59
  call void @_ZN5blink14PersistentBaseINS_14DOMArrayBufferELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.611"* %83, %"class.blink::DOMArrayBuffer"* %87) #7, !noalias !59
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %85) #7, !noalias !59
  %88 = getelementptr inbounds i8, i8* %78, i64 56
  %89 = bitcast i8* %88 to %"class.blink::CrossThreadPersistent.1548"*
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardTextWriterEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1548"* %89, %"class.blink::CrossThreadPersistent.1548"* nonnull dereferenceable(16) %7) #7, !noalias !59
  %90 = getelementptr inbounds i8, i8* %78, i64 72
  %91 = bitcast i8* %90 to i64*
  store i64 %77, i64* %91, align 8, !noalias !59
  %92 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #7, !noalias !52
  %93 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %94 = ptrtoint i8* %78 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %93, align 8, !noalias !64
  %95 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.WTF::CrossThreadOnceFunction"* %9 to i64*
  store i64 %94, i64* %96, align 8, !alias.scope !64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %95, align 8, !noalias !64
  %97 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %97) #7, !noalias !64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #7, !noalias !52
  %98 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %98) #7, !noalias !52
  %99 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1548", %"class.blink::CrossThreadPersistent.1548"* %7, i64 0, i32 0, i32 1
  %100 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %99 to i64*
  %101 = load atomic i64, i64* %100 acquire, align 8, !noalias !52
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %117, label %103

103:                                              ; preds = %76
  %104 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !52
  %105 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %104, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %105) #7, !noalias !52
  %106 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !52
  %107 = load atomic i64, i64* %100 monotonic, align 8, !noalias !52
  %108 = inttoptr i64 %107 to %"class.blink::PersistentNode"*
  %109 = icmp eq i64 %107, 0
  br i1 %109, label %116, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %106, i64 0, i32 0, i32 0
  %112 = bitcast %"class.blink::CrossThreadPersistentRegion"* %106 to i64*
  %113 = load i64, i64* %112, align 8, !noalias !52
  %114 = inttoptr i64 %107 to i64*
  store i64 %113, i64* %114, align 8, !noalias !52
  %115 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %108, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %115, align 8, !noalias !52
  store %"class.blink::PersistentNode"* %108, %"class.blink::PersistentNode"** %111, align 8, !noalias !52
  br label %116

116:                                              ; preds = %110, %103
  store atomic i64 0, i64* %100 release, align 8, !noalias !52
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %105) #7, !noalias !52
  br label %117

117:                                              ; preds = %116, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #7, !noalias !52
  %118 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 1
  %119 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %118 to i64*
  %120 = load atomic i64, i64* %119 acquire, align 8, !noalias !52
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %136, label %122

122:                                              ; preds = %117
  %123 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !52
  %124 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %123, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %124) #7, !noalias !52
  %125 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !52
  %126 = load atomic i64, i64* %119 monotonic, align 8, !noalias !52
  %127 = inttoptr i64 %126 to %"class.blink::PersistentNode"*
  %128 = icmp eq i64 %126, 0
  br i1 %128, label %135, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %125, i64 0, i32 0, i32 0
  %131 = bitcast %"class.blink::CrossThreadPersistentRegion"* %125 to i64*
  %132 = load i64, i64* %131, align 8, !noalias !52
  %133 = inttoptr i64 %126 to i64*
  store i64 %132, i64* %133, align 8, !noalias !52
  %134 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %127, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %134, align 8, !noalias !52
  store %"class.blink::PersistentNode"* %127, %"class.blink::PersistentNode"** %130, align 8, !noalias !52
  br label %135

135:                                              ; preds = %129, %122
  store atomic i64 0, i64* %119 release, align 8, !noalias !52
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %124) #7, !noalias !52
  br label %136

136:                                              ; preds = %117, %135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #7, !noalias !52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  call void @_ZN5blink11worker_pool8PostTaskERKN4base8LocationEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %8, %"class.WTF::CrossThreadOnceFunction"* nonnull %9) #7
  %137 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %137) #7
  %138 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %42 to i64*
  %139 = load atomic i64, i64* %138 acquire, align 8
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %155, label %141

141:                                              ; preds = %136
  %142 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %143 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %142, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %143) #7
  %144 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %145 = load atomic i64, i64* %138 monotonic, align 8
  %146 = inttoptr i64 %145 to %"class.blink::PersistentNode"*
  %147 = icmp eq i64 %145, 0
  br i1 %147, label %154, label %148

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %144, i64 0, i32 0, i32 0
  %150 = bitcast %"class.blink::CrossThreadPersistentRegion"* %144 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = inttoptr i64 %145 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %146, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %153, align 8
  store %"class.blink::PersistentNode"* %146, %"class.blink::PersistentNode"** %149, align 8
  br label %154

154:                                              ; preds = %148, %141
  store atomic i64 0, i64* %138 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %143) #7
  br label %155

155:                                              ; preds = %136, %154
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #7
  %156 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %16 to i64*
  %157 = load atomic i64, i64* %156 acquire, align 8
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %173, label %159

159:                                              ; preds = %155
  %160 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %161 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %160, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %161) #7
  %162 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %163 = load atomic i64, i64* %156 monotonic, align 8
  %164 = inttoptr i64 %163 to %"class.blink::PersistentNode"*
  %165 = icmp eq i64 %163, 0
  br i1 %165, label %172, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %162, i64 0, i32 0, i32 0
  %168 = bitcast %"class.blink::CrossThreadPersistentRegion"* %162 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = inttoptr i64 %163 to i64*
  store i64 %169, i64* %170, align 8
  %171 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %164, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %171, align 8
  store %"class.blink::PersistentNode"* %164, %"class.blink::PersistentNode"** %167, align 8
  br label %172

172:                                              ; preds = %166, %159
  store atomic i64 0, i64* %156 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %161) #7
  br label %173

173:                                              ; preds = %155, %172
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #7
  br i1 %72, label %182, label %174

174:                                              ; preds = %173
  %175 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %176 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw sub i32* %176, i32 1 acq_rel
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %179, label %182

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %175, i64 -2
  %181 = bitcast %"class.base::RefCountedThreadSafe"* %180 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %181) #7
  br label %182

182:                                              ; preds = %173, %174, %179
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardTextWriter24DecodeOnBackgroundThreadEPNS_14DOMArrayBufferEPS1_13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::DOMArrayBuffer"* nocapture readonly, %"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.base::SingleThreadTaskRunner"*) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.blink::CrossThreadPersistent.1548", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %12 = alloca %"class.blink::CrossThreadPersistent.1548", align 8
  %13 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %15, align 8
  %17 = icmp eq %"class.v8::BackingStore"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %3
  %19 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %16) #7
  %20 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %15, align 8
  %21 = icmp eq %"class.v8::BackingStore"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %20) #7
  br label %24

24:                                               ; preds = %3, %18, %22
  %25 = phi i8* [ %19, %22 ], [ %19, %18 ], [ null, %3 ]
  %26 = phi i64 [ %23, %22 ], [ 0, %18 ], [ 0, %3 ]
  %27 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %25, i64 %26) #7
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %14, align 8
  %28 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 115) #7
  %29 = bitcast %"class.blink::CrossThreadPersistent.1548"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #7
  %30 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1548", %"class.blink::CrossThreadPersistent.1548"* %12, i64 0, i32 0
  %31 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1548", %"class.blink::CrossThreadPersistent.1548"* %12, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardTextWriter"* %1, %"class.blink::(anonymous namespace)::ClipboardTextWriter"** %31, align 8, !alias.scope !67
  %32 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1548", %"class.blink::CrossThreadPersistent.1548"* %12, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %33, align 8, !alias.scope !67
  %34 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardTextWriter"* %1 to i64
  switch i64 %34, label %35 [
    i64 0, label %54
    i64 -1, label %54
  ]

35:                                               ; preds = %24
  %36 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !67
  %37 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %36, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %37) #7, !noalias !67
  %38 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !67
  %39 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %39, align 8, !noalias !67
  %41 = icmp eq %"class.blink::PersistentNode"* %40, null
  br i1 %41, label %42, label %45, !prof !3

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %38, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %43) #7
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %39, align 8
  br label %45

45:                                               ; preds = %42, %35
  %46 = phi %"class.blink::PersistentNode"* [ %44, %42 ], [ %40, %35 ]
  %47 = bitcast %"class.blink::PersistentNode"* %46 to i64*
  %48 = load i64, i64* %47, align 8, !noalias !67
  %49 = bitcast %"class.blink::CrossThreadPersistentRegion"* %38 to i64*
  store i64 %48, i64* %49, align 8, !noalias !67
  %50 = bitcast %"class.blink::PersistentNode"* %46 to %"class.blink::PersistentBase.1549"**
  store %"class.blink::PersistentBase.1549"* %30, %"class.blink::PersistentBase.1549"** %50, align 8, !noalias !67
  %51 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %46, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_119ClipboardTextWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %51, align 8
  %52 = ptrtoint %"class.blink::PersistentNode"* %46 to i64
  %53 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %32 to i64*
  store atomic i64 %52, i64* %53 release, align 8, !alias.scope !67
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %37) #7
  br label %54

54:                                               ; preds = %24, %24, %45
  %55 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55)
  %56 = bitcast %"class.blink::CrossThreadPersistent.1548"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #7, !noalias !70
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardTextWriterEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1548"* nonnull %8, %"class.blink::CrossThreadPersistent.1548"* nonnull dereferenceable(16) %12) #7, !noalias !70
  %57 = call %"class.WTF::StringImpl"* @_ZN3WTF17CrossThreadCopierINS_6StringEE4CopyERKS1_(%"class.WTF::String"* nonnull dereferenceable(8) %9) #7, !noalias !70
  %58 = ptrtoint %"class.WTF::StringImpl"* %57 to i64
  %59 = call i8* @_Znwm(i64 72) #16, !noalias !73
  %60 = bitcast i8* %59 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %60, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_119ClipboardTextWriterEFvRKN3WTF6StringEEJNS3_21CrossThreadPersistentIS5_EES7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_119ClipboardTextWriterEFvRKN3WTF6StringEEJNS2_21CrossThreadPersistentIS4_EES6_EE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !73
  %61 = getelementptr inbounds i8, i8* %59, i64 32
  %62 = bitcast i8* %61 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.WTF::String"*)* @_ZN5blink12_GLOBAL__N_119ClipboardTextWriter5WriteERKN3WTF6StringE to i64), i64 0>, <2 x i64>* %62, align 8, !noalias !73
  %63 = getelementptr inbounds i8, i8* %59, i64 48
  %64 = bitcast i8* %63 to %"class.blink::CrossThreadPersistent.1548"*
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardTextWriterEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1548"* %64, %"class.blink::CrossThreadPersistent.1548"* nonnull dereferenceable(16) %8) #7, !noalias !73
  %65 = getelementptr inbounds i8, i8* %59, i64 64
  %66 = bitcast i8* %65 to i64*
  store i64 %58, i64* %66, align 8, !noalias !73
  %67 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #7, !noalias !70
  %68 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %69 = ptrtoint i8* %59 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %68, align 8, !noalias !78
  %70 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.WTF::CrossThreadOnceFunction"* %11 to i64*
  store i64 %69, i64* %71, align 8, !alias.scope !78
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %70, align 8, !noalias !78
  %72 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %72) #7, !noalias !78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #7, !noalias !70
  %73 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %73) #7, !noalias !70
  %74 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1548", %"class.blink::CrossThreadPersistent.1548"* %8, i64 0, i32 0, i32 1
  %75 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %74 to i64*
  %76 = load atomic i64, i64* %75 acquire, align 8, !noalias !70
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %92, label %78

78:                                               ; preds = %54
  %79 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !70
  %80 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %79, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %80) #7, !noalias !70
  %81 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !70
  %82 = load atomic i64, i64* %75 monotonic, align 8, !noalias !70
  %83 = inttoptr i64 %82 to %"class.blink::PersistentNode"*
  %84 = icmp eq i64 %82, 0
  br i1 %84, label %91, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %81, i64 0, i32 0, i32 0
  %87 = bitcast %"class.blink::CrossThreadPersistentRegion"* %81 to i64*
  %88 = load i64, i64* %87, align 8, !noalias !70
  %89 = inttoptr i64 %82 to i64*
  store i64 %88, i64* %89, align 8, !noalias !70
  %90 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %83, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %90, align 8, !noalias !70
  store %"class.blink::PersistentNode"* %83, %"class.blink::PersistentNode"** %86, align 8, !noalias !70
  br label %91

91:                                               ; preds = %85, %78
  store atomic i64 0, i64* %75 release, align 8, !noalias !70
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %80) #7, !noalias !70
  br label %92

92:                                               ; preds = %54, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #7, !noalias !70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55)
  %93 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93)
  %94 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94)
  %95 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to %"class.base::TaskRunner"*
  %96 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i64, i64* %71, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %96, align 8
  %98 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %97, i64* %99, align 8, !alias.scope !81
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %98, align 8, !noalias !81
  %100 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %101 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %100, align 8
  %102 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %101, align 8
  %103 = call zeroext i1 %102(%"class.base::TaskRunner"* %95, %"class.base::Location"* nonnull dereferenceable(32) %10, %"class.base::OnceCallback"* nonnull %4, i64 0) #7
  %104 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %104) #7
  %105 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %105) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94)
  %106 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %106) #7
  %107 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %32 to i64*
  %108 = load atomic i64, i64* %107 acquire, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %124, label %110

110:                                              ; preds = %92
  %111 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %112 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %111, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %112) #7
  %113 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %114 = load atomic i64, i64* %107 monotonic, align 8
  %115 = inttoptr i64 %114 to %"class.blink::PersistentNode"*
  %116 = icmp eq i64 %114, 0
  br i1 %116, label %123, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %113, i64 0, i32 0, i32 0
  %119 = bitcast %"class.blink::CrossThreadPersistentRegion"* %113 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = inttoptr i64 %114 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %115, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %122, align 8
  store %"class.blink::PersistentNode"* %115, %"class.blink::PersistentNode"** %118, align 8
  br label %123

123:                                              ; preds = %117, %110
  store atomic i64 0, i64* %107 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %112) #7
  br label %124

124:                                              ; preds = %92, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #7
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #7
  br label %140

140:                                              ; preds = %124, %136, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  %141 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %141, label %150, label %142

142:                                              ; preds = %140
  %143 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %144 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = atomicrmw sub i32* %144, i32 1 acq_rel
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %150

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %143, i64 -2
  %149 = bitcast %"class.base::RefCountedThreadSafe"* %148 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %149) #7
  br label %150

150:                                              ; preds = %140, %142, %147
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink14DOMArrayBufferEPNS3_12_GLOBAL__N_119ClipboardTextWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS3_21CrossThreadPersistentIS4_EENSE_IS7_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"class.blink::DOMArrayBuffer"*, %"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.base::SingleThreadTaskRunner"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = load void (%"class.blink::DOMArrayBuffer"*, %"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.base::SingleThreadTaskRunner"*)*, void (%"class.blink::DOMArrayBuffer"*, %"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.base::SingleThreadTaskRunner"*)** %3, align 8
  %6 = bitcast void ()** %4 to %"class.blink::DOMArrayBuffer"**
  %7 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %6, align 8
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.blink::(anonymous namespace)::ClipboardTextWriter"**
  %10 = load %"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.blink::(anonymous namespace)::ClipboardTextWriter"** %9, align 8
  %11 = getelementptr inbounds void ()*, void ()** %4, i64 4
  %12 = bitcast void ()** %11 to %"class.base::SingleThreadTaskRunner"**
  %13 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %12, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %12, align 8
  tail call void %5(%"class.blink::DOMArrayBuffer"* %7, %"class.blink::(anonymous namespace)::ClipboardTextWriter"* %10, %"class.base::SingleThreadTaskRunner"* %13) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIPFvPN5blink14DOMArrayBufferEPNS2_12_GLOBAL__N_119ClipboardTextWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS2_21CrossThreadPersistentIS3_EENSD_IS6_EESA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %56, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 1
  %5 = bitcast void ()** %4 to %"class.base::SingleThreadTaskRunner"**
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #7
  br label %16

16:                                               ; preds = %13, %8, %3
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %18 = bitcast %"class.base::internal::BindStateBase"* %17 to i64*
  %19 = load atomic i64, i64* %18 acquire, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %16
  %22 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %23 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %22, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %23) #7
  %24 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %25 = load atomic i64, i64* %18 monotonic, align 8
  %26 = inttoptr i64 %25 to %"class.blink::PersistentNode"*
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %24, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::CrossThreadPersistentRegion"* %24 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = inttoptr i64 %25 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %26, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %26, %"class.blink::PersistentNode"** %29, align 8
  br label %34

34:                                               ; preds = %28, %21
  store atomic i64 0, i64* %18 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %23) #7
  br label %35

35:                                               ; preds = %34, %16
  %36 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %37 = bitcast void (%"class.base::internal::BindStateBase"*)** %36 to i64*
  %38 = load atomic i64, i64* %37 acquire, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %54, label %40

40:                                               ; preds = %35
  %41 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %42 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %41, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %42) #7
  %43 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %44 = load atomic i64, i64* %37 monotonic, align 8
  %45 = inttoptr i64 %44 to %"class.blink::PersistentNode"*
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %43, i64 0, i32 0, i32 0
  %49 = bitcast %"class.blink::CrossThreadPersistentRegion"* %43 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = inttoptr i64 %44 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %45, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %52, align 8
  store %"class.blink::PersistentNode"* %45, %"class.blink::PersistentNode"** %48, align 8
  br label %53

53:                                               ; preds = %47, %40
  store atomic i64 0, i64* %37 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %42) #7
  br label %54

54:                                               ; preds = %35, %53
  %55 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %55) #16
  br label %56

56:                                               ; preds = %54, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardTextWriterEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1548"*, %"class.blink::CrossThreadPersistent.1548"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1548", %"class.blink::CrossThreadPersistent.1548"* %0, i64 0, i32 0
  %4 = bitcast %"class.blink::CrossThreadPersistent.1548"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #7
  %5 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %6 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %5, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #7
  %7 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1548", %"class.blink::CrossThreadPersistent.1548"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.blink::(anonymous namespace)::ClipboardTextWriter"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1548", %"class.blink::CrossThreadPersistent.1548"* %0, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardTextWriter"* %8, %"class.blink::(anonymous namespace)::ClipboardTextWriter"** %9, align 8
  %10 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardTextWriter"* %8 to i64
  switch i64 %10, label %11 [
    i64 0, label %35
    i64 -1, label %35
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1548", %"class.blink::CrossThreadPersistent.1548"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %12 to i64*
  %14 = load atomic i64, i64* %13 acquire, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %52

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::CrossThreadPersistent.1548"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %19 [
    i64 0, label %52
    i64 -1, label %52
  ]

19:                                               ; preds = %16
  %20 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %21 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %23 = icmp eq %"class.blink::PersistentNode"* %22, null
  br i1 %23, label %24, label %27, !prof !3

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %20, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %25) #7
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  br label %27

27:                                               ; preds = %24, %19
  %28 = phi %"class.blink::PersistentNode"* [ %26, %24 ], [ %22, %19 ]
  %29 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::CrossThreadPersistentRegion"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to %"class.blink::PersistentBase.1549"**
  store %"class.blink::PersistentBase.1549"* %3, %"class.blink::PersistentBase.1549"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_119ClipboardTextWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  %34 = ptrtoint %"class.blink::PersistentNode"* %28 to i64
  store atomic i64 %34, i64* %13 release, align 8
  br label %52

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1548", %"class.blink::CrossThreadPersistent.1548"* %0, i64 0, i32 0, i32 1
  %37 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %36 to i64*
  %38 = load atomic i64, i64* %37 acquire, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %35
  %41 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %42 = load atomic i64, i64* %37 monotonic, align 8
  %43 = inttoptr i64 %42 to %"class.blink::PersistentNode"*
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %41, i64 0, i32 0, i32 0
  %47 = bitcast %"class.blink::CrossThreadPersistentRegion"* %41 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = inttoptr i64 %42 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %50, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %46, align 8
  br label %51

51:                                               ; preds = %45, %40
  store atomic i64 0, i64* %37 release, align 8
  br label %52

52:                                               ; preds = %11, %16, %16, %27, %35, %51
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_119ClipboardTextWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::ClipboardTextWriter"**
  %5 = load %"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.blink::(anonymous namespace)::ClipboardTextWriter"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #7
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #7
  %7 = icmp eq %"class.blink::(anonymous namespace)::ClipboardTextWriter"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::(anonymous namespace)::ClipboardTextWriter"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_119ClipboardTextWriterEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #7
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_119ClipboardTextWriterEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 40
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv) #7
  br label %24

24:                                               ; preds = %18, %13
  %25 = getelementptr inbounds i8, i8* %1, i64 48
  %26 = bitcast i8* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %0, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18RawSystemClipboardEE5TraceEPNS_7VisitorEPKv) #7
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardTextWriter5WriteERKN3WTF6StringE(%"class.blink::(anonymous namespace)::ClipboardTextWriter"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardTextWriter", %"class.blink::(anonymous namespace)::ClipboardTextWriter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %3, align 8
  %5 = tail call %"class.blink::LocalFrame"* @_ZNK5blink16ClipboardPromise13GetLocalFrameEv(%"class.blink::ClipboardPromise"* %4) #7
  %6 = icmp eq %"class.blink::LocalFrame"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardTextWriter", %"class.blink::(anonymous namespace)::ClipboardTextWriter"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %9 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %8, align 8
  tail call void @_ZN5blink15SystemClipboard14WritePlainTextERKN3WTF6StringENS0_18SmartReplaceOptionE(%"class.blink::SystemClipboard"* %9, %"class.WTF::String"* dereferenceable(8) %1, i32 1) #7
  %10 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %3, align 8
  tail call void @_ZN5blink16ClipboardPromise27CompleteWriteRepresentationEv(%"class.blink::ClipboardPromise"* %10) #7
  br label %11

11:                                               ; preds = %2, %7
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF17CrossThreadCopierINS_6StringEE4CopyERKS1_(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_119ClipboardTextWriterEFvRKN3WTF6StringEEJNS3_21CrossThreadPersistentIS5_EES7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.WTF::String"*
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  %14 = bitcast i8* %13 to %"class.blink::(anonymous namespace)::ClipboardTextWriter"*
  %15 = and i64 %7, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %7, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.WTF::String"*)**
  %23 = load void (%"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.WTF::String"*)*, void (%"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.WTF::String"*)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %7 to void (%"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.WTF::String"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.blink::(anonymous namespace)::ClipboardTextWriter"*, %"class.WTF::String"*)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%"class.blink::(anonymous namespace)::ClipboardTextWriter"* %14, %"class.WTF::String"* dereferenceable(8) %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_119ClipboardTextWriterEFvRKN3WTF6StringEEJNS2_21CrossThreadPersistentIS4_EES6_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %42, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.WTF::StringImpl"**
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #7
  br label %21

21:                                               ; preds = %20, %17, %3
  %22 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %23 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %22 to i64*
  %24 = load atomic i64, i64* %23 acquire, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %40, label %26

26:                                               ; preds = %21
  %27 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %28 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %27, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %28) #7
  %29 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %30 = load atomic i64, i64* %23 monotonic, align 8
  %31 = inttoptr i64 %30 to %"class.blink::PersistentNode"*
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %29, i64 0, i32 0, i32 0
  %35 = bitcast %"class.blink::CrossThreadPersistentRegion"* %29 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = inttoptr i64 %30 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %31, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %38, align 8
  store %"class.blink::PersistentNode"* %31, %"class.blink::PersistentNode"** %34, align 8
  br label %39

39:                                               ; preds = %33, %26
  store atomic i64 0, i64* %23 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %28) #7
  br label %40

40:                                               ; preds = %21, %39
  %41 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %41) #16
  br label %42

42:                                               ; preds = %40, %1
  ret void
}

declare void @_ZN5blink15SystemClipboard14WritePlainTextERKN3WTF6StringENS0_18SmartReplaceOptionE(%"class.blink::SystemClipboard"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardHtmlWriterD0Ev(%"class.blink::(anonymous namespace)::ClipboardHtmlWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardHtmlWriter", %"class.blink::(anonymous namespace)::ClipboardHtmlWriter"* %0, i64 0, i32 0
  tail call void @_ZN5blink15ClipboardWriterD2Ev(%"class.blink::ClipboardWriter"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardHtmlWriter10StartWriteEPNS_14DOMArrayBufferE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::(anonymous namespace)::ClipboardHtmlWriter"* nocapture readonly, %"class.blink::DOMArrayBuffer"* nocapture readonly, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::HeapHashSet.1561", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardHtmlWriter", %"class.blink::(anonymous namespace)::ClipboardHtmlWriter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.blink::ClipboardPromise"** %9 to %"class.blink::ExecutionContextLifecycleObserver"**
  %11 = load %"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContextLifecycleObserver"** %10, align 8
  %12 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %11) #7
  %13 = icmp eq %"class.blink::ExecutionContext"* %12, null
  br i1 %13, label %90, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %12, i64 0, i32 3
  %16 = bitcast %"class.blink::UseCounter"* %15 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* %15, i32 3363) #7
  %20 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %22, align 8
  %24 = icmp eq %"class.v8::BackingStore"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %14
  %26 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %23) #7
  %27 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %22, align 8
  %28 = icmp eq %"class.v8::BackingStore"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %27) #7
  br label %31

31:                                               ; preds = %14, %25, %29
  %32 = phi i8* [ %26, %29 ], [ %26, %25 ], [ null, %14 ]
  %33 = phi i64 [ %30, %29 ], [ 0, %25 ], [ 0, %14 ]
  %34 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %32, i64 %33) #7
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %21, align 8
  %35 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %35) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %5) #7
  %36 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %31, %37
  %41 = phi i32 [ %39, %37 ], [ 0, %31 ]
  %42 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %9, align 8
  %43 = call %"class.blink::LocalFrame"* @_ZNK5blink16ClipboardPromise13GetLocalFrameEv(%"class.blink::ClipboardPromise"* %42) #7
  %44 = icmp eq %"class.blink::LocalFrame"* %43, null
  br i1 %44, label %73, label %45

45:                                               ; preds = %40
  %46 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* nonnull %43) #7
  %47 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 4
  %48 = call %"class.blink::DocumentFragment"* @_ZN5blink44CreateSanitizedFragmentFromMarkupWithContextERNS_8DocumentERKN3WTF6StringEjjS5_(%"class.blink::Document"* dereferenceable(2848) %46, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0, i32 %41, %"class.WTF::String"* dereferenceable(8) %47) #7
  %49 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #7
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %48, i64 0, i32 0, i32 0
  %52 = bitcast %"class.blink::HeapHashSet.1561"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 20, i1 false) #7
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"* %51, i32 0, i32 1, i32 0, %"class.blink::HeapHashSet.1561"* nonnull %7) #7
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %50, align 8
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %8, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #7
  %54 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardHtmlWriter", %"class.blink::(anonymous namespace)::ClipboardHtmlWriter"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %55 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %54, align 8
  call void @_ZN5blink15SystemClipboard9WriteHTMLERKN3WTF6StringERKNS_4KURLENS0_18SmartReplaceOptionE(%"class.blink::SystemClipboard"* %55, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::KURL"* nonnull dereferenceable(112) %8, i32 1) #7
  %56 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %9, align 8
  call void @_ZN5blink16ClipboardPromise27CompleteWriteRepresentationEv(%"class.blink::ClipboardPromise"* %56) #7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #7
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %45
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #7
  br label %72

72:                                               ; preds = %45, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #7
  br label %73

73:                                               ; preds = %40, %72
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %35) #7
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #7
  br label %89

89:                                               ; preds = %73, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %90

90:                                               ; preds = %3, %89
  %91 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %91, label %100, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw sub i32* %94, i32 1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %100

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %93, i64 -2
  %99 = bitcast %"class.base::RefCountedThreadSafe"* %98 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %99) #7
  br label %100

100:                                              ; preds = %90, %92, %97
  ret void
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare %"class.blink::DocumentFragment"* @_ZN5blink44CreateSanitizedFragmentFromMarkupWithContextERNS_8DocumentERKN3WTF6StringEjjS5_(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"*, i32, i32, i32, %"class.blink::HeapHashSet.1561"*) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #8

declare void @_ZN5blink15SystemClipboard9WriteHTMLERKN3WTF6StringERKNS_4KURLENS0_18SmartReplaceOptionE(%"class.blink::SystemClipboard"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_118ClipboardSvgWriterD0Ev(%"class.blink::(anonymous namespace)::ClipboardSvgWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardSvgWriter", %"class.blink::(anonymous namespace)::ClipboardSvgWriter"* %0, i64 0, i32 0
  tail call void @_ZN5blink15ClipboardWriterD2Ev(%"class.blink::ClipboardWriter"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_118ClipboardSvgWriter10StartWriteEPNS_14DOMArrayBufferE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::(anonymous namespace)::ClipboardSvgWriter"* nocapture readonly, %"class.blink::DOMArrayBuffer"* nocapture readonly, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::HeapHashSet.1561", align 8
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %3
  %14 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %11) #7
  %15 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8
  %16 = icmp eq %"class.v8::BackingStore"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %15) #7
  br label %19

19:                                               ; preds = %3, %13, %17
  %20 = phi i8* [ %14, %17 ], [ %14, %13 ], [ null, %3 ]
  %21 = phi i64 [ %18, %17 ], [ 0, %13 ], [ 0, %3 ]
  %22 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %20, i64 %21) #7
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %9, align 8
  %23 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %23) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %5) #7
  %24 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  br label %28

28:                                               ; preds = %19, %25
  %29 = phi i32 [ %27, %25 ], [ 0, %19 ]
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardSvgWriter", %"class.blink::(anonymous namespace)::ClipboardSvgWriter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %30, align 8
  %32 = call %"class.blink::LocalFrame"* @_ZNK5blink16ClipboardPromise13GetLocalFrameEv(%"class.blink::ClipboardPromise"* %31) #7
  %33 = icmp eq %"class.blink::LocalFrame"* %32, null
  br i1 %33, label %62, label %34

34:                                               ; preds = %28
  %35 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* nonnull %32) #7
  %36 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 4
  %37 = call %"class.blink::DocumentFragment"* @_ZN5blink44CreateSanitizedFragmentFromMarkupWithContextERNS_8DocumentERKN3WTF6StringEjjS5_(%"class.blink::Document"* dereferenceable(2848) %35, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0, i32 %29, %"class.WTF::String"* dereferenceable(8) %36) #7
  %38 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #7
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %37, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::HeapHashSet.1561"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 20, i1 false) #7
  %42 = call %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"* %40, i32 0, i32 1, i32 0, %"class.blink::HeapHashSet.1561"* nonnull %7) #7
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %39, align 8
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardSvgWriter", %"class.blink::(anonymous namespace)::ClipboardSvgWriter"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %44 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %43, align 8
  call void @_ZN5blink15SystemClipboard8WriteSvgERKN3WTF6StringE(%"class.blink::SystemClipboard"* %44, %"class.WTF::String"* nonnull dereferenceable(8) %6) #7
  %45 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %30, align 8
  call void @_ZN5blink16ClipboardPromise27CompleteWriteRepresentationEv(%"class.blink::ClipboardPromise"* %45) #7
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #7
  br label %61

61:                                               ; preds = %34, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  br label %62

62:                                               ; preds = %28, %61
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %23) #7
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #7
  br label %78

78:                                               ; preds = %62, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  %79 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %79, label %88, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw sub i32* %82, i32 1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %81, i64 -2
  %87 = bitcast %"class.base::RefCountedThreadSafe"* %86 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %87) #7
  br label %88

88:                                               ; preds = %78, %80, %85
  ret void
}

declare void @_ZN5blink15SystemClipboard8WriteSvgERKN3WTF6StringE(%"class.blink::SystemClipboard"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122ClipboardRawDataWriterD2Ev(%"class.blink::(anonymous namespace)::ClipboardRawDataWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardRawDataWriter", %"class.blink::(anonymous namespace)::ClipboardRawDataWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122ClipboardRawDataWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardRawDataWriter", %"class.blink::(anonymous namespace)::ClipboardRawDataWriter"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #7
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardRawDataWriter", %"class.blink::(anonymous namespace)::ClipboardRawDataWriter"* %0, i64 0, i32 0
  tail call void @_ZN5blink15ClipboardWriterD2Ev(%"class.blink::ClipboardWriter"* %20) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122ClipboardRawDataWriterD0Ev(%"class.blink::(anonymous namespace)::ClipboardRawDataWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardRawDataWriter", %"class.blink::(anonymous namespace)::ClipboardRawDataWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122ClipboardRawDataWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardRawDataWriter", %"class.blink::(anonymous namespace)::ClipboardRawDataWriter"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #7
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardRawDataWriter", %"class.blink::(anonymous namespace)::ClipboardRawDataWriter"* %0, i64 0, i32 0
  tail call void @_ZN5blink15ClipboardWriterD2Ev(%"class.blink::ClipboardWriter"* %20) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122ClipboardRawDataWriter10StartWriteEPNS_14DOMArrayBufferE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::(anonymous namespace)::ClipboardRawDataWriter"*, %"class.blink::DOMArrayBuffer"* nocapture readonly, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo_base::BigBuffer", align 8
  %5 = alloca %"class.std::__1::vector.1585", align 8
  %6 = alloca %"class.mojo_base::BigBuffer", align 8
  %7 = bitcast %"class.mojo_base::BigBuffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7)
  %8 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  %10 = icmp eq %"class.v8::BackingStore"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %3
  %12 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %9) #7
  %13 = icmp ugt i64 %12, 1073741823
  br i1 %13, label %14, label %17

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardRawDataWriter", %"class.blink::(anonymous namespace)::ClipboardRawDataWriter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %15, align 8
  tail call void @_ZN5blink16ClipboardPromise29RejectFromReadOrDecodeFailureEv(%"class.blink::ClipboardPromise"* %16) #7
  br label %64

17:                                               ; preds = %11
  %18 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  %19 = icmp eq %"class.v8::BackingStore"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %18) #7
  %22 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  br label %23

23:                                               ; preds = %20, %17, %3
  %24 = phi %"class.v8::BackingStore"* [ null, %17 ], [ %22, %20 ], [ null, %3 ]
  %25 = phi i8* [ null, %17 ], [ %21, %20 ], [ null, %3 ]
  %26 = bitcast %"class.mojo_base::BigBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %26) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 56, i1 false) #7
  %27 = bitcast %"class.std::__1::vector.1585"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #7
  %28 = icmp eq %"class.v8::BackingStore"* %24, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #7
  br label %45

30:                                               ; preds = %23
  %31 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %24) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #7
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %30
  %34 = icmp slt i64 %31, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::vector.1585"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %36) #15
  unreachable

37:                                               ; preds = %33
  %38 = tail call i8* @_Znwm(i64 %31) #16
  %39 = getelementptr inbounds %"class.std::__1::vector.1585", %"class.std::__1::vector.1585"* %5, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::vector.1585", %"class.std::__1::vector.1585"* %5, i64 0, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %38, i64 %31
  %42 = getelementptr inbounds %"class.std::__1::vector.1585", %"class.std::__1::vector.1585"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %41, i8** %42, align 8
  %43 = bitcast i8** %39 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 %25, i64 %31, i1 false) #7
  %44 = ptrtoint i8* %41 to i64
  store i64 %44, i64* %43, align 8
  br label %45

45:                                               ; preds = %37, %30, %29
  call void @_ZN9mojo_base9BigBufferC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.mojo_base::BigBuffer"* nonnull %4, %"class.std::__1::vector.1585"* nonnull dereferenceable(24) %5) #7
  %46 = getelementptr inbounds %"class.std::__1::vector.1585", %"class.std::__1::vector.1585"* %5, i64 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %45
  %50 = ptrtoint i8* %47 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.1585", %"class.std::__1::vector.1585"* %5, i64 0, i32 0, i32 1
  %52 = bitcast i8** %51 to i64*
  store i64 %50, i64* %52, align 8
  call void @_ZdlPv(i8* nonnull %47) #16
  br label %53

53:                                               ; preds = %49, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #7
  %54 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardRawDataWriter", %"class.blink::(anonymous namespace)::ClipboardRawDataWriter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %55 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %54, align 8
  %56 = call %"class.blink::LocalFrame"* @_ZNK5blink16ClipboardPromise13GetLocalFrameEv(%"class.blink::ClipboardPromise"* %55) #7
  %57 = icmp eq %"class.blink::LocalFrame"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardRawDataWriter", %"class.blink::(anonymous namespace)::ClipboardRawDataWriter"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %60 = load %"class.blink::RawSystemClipboard"*, %"class.blink::RawSystemClipboard"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardRawDataWriter", %"class.blink::(anonymous namespace)::ClipboardRawDataWriter"* %0, i64 0, i32 1
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* nonnull %6, %"class.mojo_base::BigBuffer"* nonnull dereferenceable(56) %4) #7
  call void @_ZN5blink18RawSystemClipboard5WriteERKN3WTF6StringEN9mojo_base9BigBufferE(%"class.blink::RawSystemClipboard"* %60, %"class.WTF::String"* dereferenceable(8) %61, %"class.mojo_base::BigBuffer"* nonnull %6) #7
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %6) #7
  %62 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %54, align 8
  call void @_ZN5blink16ClipboardPromise27CompleteWriteRepresentationEv(%"class.blink::ClipboardPromise"* %62) #7
  br label %63

63:                                               ; preds = %58, %53
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %26) #7
  br label %64

64:                                               ; preds = %14, %63
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7)
  %65 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %65, label %74, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw sub i32* %68, i32 1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %67, i64 -2
  %73 = bitcast %"class.base::RefCountedThreadSafe"* %72 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %73) #7
  br label %74

74:                                               ; preds = %64, %66, %71
  ret void
}

declare void @_ZN9mojo_base9BigBufferC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.mojo_base::BigBuffer"*, %"class.std::__1::vector.1585"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN5blink18RawSystemClipboard5WriteERKN3WTF6StringEN9mojo_base9BigBufferE(%"class.blink::RawSystemClipboard"*, %"class.WTF::String"* dereferenceable(8), %"class.mojo_base::BigBuffer"*) local_unnamed_addr #1

declare void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"*, %"class.mojo_base::BigBuffer"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.436"*, %"class.blink::ClipboardWriter"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.436", %"class.blink::PersistentBase.436"* %0, i64 0, i32 0
  store %"class.blink::ClipboardWriter"* %1, %"class.blink::ClipboardWriter"** %3, align 8
  %4 = ptrtoint %"class.blink::ClipboardWriter"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %10
    i64 -1, label %10
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.436", %"class.blink::PersistentBase.436"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  tail call void @_ZN5blink14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.436"* %0) #7
  br label %33

10:                                               ; preds = %2, %2
  %11 = getelementptr inbounds %"class.blink::PersistentBase.436", %"class.blink::PersistentBase.436"* %0, i64 0, i32 1, i32 0
  %12 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %13 = icmp eq %"class.blink::PersistentNode"* %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %10
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #7
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !3

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #7
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentNode"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %28, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %11, align 8
  br label %33

33:                                               ; preds = %21, %10, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.436"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::PersistentBase.436"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %4 [
    i64 0, label %31
    i64 -1, label %31
  ]

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %19 = icmp eq %"class.blink::PersistentNode"* %18, null
  br i1 %19, label %20, label %23, !prof !3

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %21) #7
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  br label %23

23:                                               ; preds = %11, %20
  %24 = phi %"class.blink::PersistentNode"* [ %22, %20 ], [ %18, %11 ]
  %25 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PersistentRegion"* %16 to i64*
  store i64 %26, i64* %27, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to %"class.blink::PersistentBase.436"**
  store %"class.blink::PersistentBase.436"* %0, %"class.blink::PersistentBase.436"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentBase.436", %"class.blink::PersistentBase.436"* %0, i64 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %30, align 8
  br label %31

31:                                               ; preds = %1, %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15ClipboardWriterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::ClipboardWriter"**
  %5 = load %"class.blink::ClipboardWriter"*, %"class.blink::ClipboardWriter"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #7
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #7
  %7 = icmp eq %"class.blink::ClipboardWriter"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ClipboardWriter"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15ClipboardWriterEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #7
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #7
  ret void
}

declare void @_ZN5blink16FileReaderLoaderC1ENS0_8ReadTypeEPNS_22FileReaderLoaderClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::FileReaderLoader"*, i32, %"class.blink::FileReaderLoaderClient"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ClipboardPromise"*
  tail call void @_ZNK5blink16ClipboardPromise5TraceEPNS_7VisitorE(%"class.blink::ClipboardPromise"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink16ClipboardPromise5TraceEPNS_7VisitorE(%"class.blink::ClipboardPromise"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SystemClipboard"*
  tail call void @_ZNK5blink15SystemClipboard5TraceEPNS_7VisitorE(%"class.blink::SystemClipboard"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink15SystemClipboard5TraceEPNS_7VisitorE(%"class.blink::SystemClipboard"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18RawSystemClipboardEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RawSystemClipboard"*
  tail call void @_ZNK5blink18RawSystemClipboard5TraceEPNS_7VisitorE(%"class.blink::RawSystemClipboard"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink18RawSystemClipboard5TraceEPNS_7VisitorE(%"class.blink::RawSystemClipboard"*, %"class.blink::Visitor"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_14DOMArrayBufferEEENS_21CrossThreadPersistentIT_EEPS3_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_14DOMArrayBufferEEENS_21CrossThreadPersistentIT_EEPS3_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_120ClipboardImageWriterEEENS_21CrossThreadPersistentIT_EEPS4_: argument 0"}
!10 = distinct !{!10, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_120ClipboardImageWriterEEENS_21CrossThreadPersistentIT_EEPS4_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTF19CrossThreadBindOnceIPFvPN5blink14DOMArrayBufferEPNS1_12_GLOBAL__N_120ClipboardImageWriterE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEJNS1_21CrossThreadPersistentIS2_EENSD_IS5_EERSA_EEEDaOT_DpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF19CrossThreadBindOnceIPFvPN5blink14DOMArrayBufferEPNS1_12_GLOBAL__N_120ClipboardImageWriterE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEJNS1_21CrossThreadPersistentIS2_EENSD_IS5_EERSA_EEEDaOT_DpOT0_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_14DOMArrayBufferEEEE4CopyERKS4_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_14DOMArrayBufferEEEE4CopyERKS4_"}
!17 = !{!15, !12}
!18 = !{!19, !21, !12}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN5blink14DOMArrayBufferEPNS3_12_GLOBAL__N_120ClipboardImageWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS3_21CrossThreadPersistentIS4_EENSE_IS7_EESB_EEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN5blink14DOMArrayBufferEPNS3_12_GLOBAL__N_120ClipboardImageWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS3_21CrossThreadPersistentIS4_EENSE_IS7_EESB_EEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base8BindOnceIPFvPN5blink14DOMArrayBufferEPNS1_12_GLOBAL__N_120ClipboardImageWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS1_21CrossThreadPersistentIS2_EENSC_IS5_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8BindOnceIPFvPN5blink14DOMArrayBufferEPNS1_12_GLOBAL__N_120ClipboardImageWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS1_21CrossThreadPersistentIS2_EENSC_IS5_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!23 = !{!24, !12}
!24 = distinct !{!24, !25, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_120ClipboardImageWriterEEENS_21CrossThreadPersistentIT_EEPS4_: argument 0"}
!28 = distinct !{!28, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_120ClipboardImageWriterEEENS_21CrossThreadPersistentIT_EEPS4_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12_GLOBAL__N_120ClipboardImageWriterEFv5sk_spI7SkImageEEJNS1_21CrossThreadPersistentIS3_EES6_EEEDaOT_DpOT0_: argument 0"}
!31 = distinct !{!31, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12_GLOBAL__N_120ClipboardImageWriterEFv5sk_spI7SkImageEEJNS1_21CrossThreadPersistentIS3_EES6_EEEDaOT_DpOT0_"}
!32 = !{!33, !30}
!33 = distinct !{!33, !34, !"_ZN3WTF28CrossThreadCopierPassThroughI5sk_spI7SkImageEE4CopyERKS3_: argument 0"}
!34 = distinct !{!34, !"_ZN3WTF28CrossThreadCopierPassThroughI5sk_spI7SkImageEE4CopyERKS3_"}
!35 = !{!36, !38, !30}
!36 = distinct !{!36, !37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_120ClipboardImageWriterEFv5sk_spI7SkImageEEJNS3_21CrossThreadPersistentIS5_EES8_EEEDcOT0_DpOT1_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_120ClipboardImageWriterEFv5sk_spI7SkImageEEJNS3_21CrossThreadPersistentIS5_EES8_EEEDcOT0_DpOT1_"}
!38 = distinct !{!38, !39, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_120ClipboardImageWriterEFv5sk_spI7SkImageEEJNS1_21CrossThreadPersistentIS3_EES6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_120ClipboardImageWriterEFv5sk_spI7SkImageEEJNS1_21CrossThreadPersistentIS3_EES6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!40 = !{!41, !30}
!41 = distinct !{!41, !42, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!42 = distinct !{!42, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!45 = distinct !{!45, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_14DOMArrayBufferEEENS_21CrossThreadPersistentIT_EEPS3_: argument 0"}
!48 = distinct !{!48, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_14DOMArrayBufferEEENS_21CrossThreadPersistentIT_EEPS3_"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_119ClipboardTextWriterEEENS_21CrossThreadPersistentIT_EEPS4_: argument 0"}
!51 = distinct !{!51, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_119ClipboardTextWriterEEENS_21CrossThreadPersistentIT_EEPS4_"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN3WTF19CrossThreadBindOnceIPFvPN5blink14DOMArrayBufferEPNS1_12_GLOBAL__N_119ClipboardTextWriterE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEJNS1_21CrossThreadPersistentIS2_EENSD_IS5_EERSA_EEEDaOT_DpOT0_: argument 0"}
!54 = distinct !{!54, !"_ZN3WTF19CrossThreadBindOnceIPFvPN5blink14DOMArrayBufferEPNS1_12_GLOBAL__N_119ClipboardTextWriterE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEJNS1_21CrossThreadPersistentIS2_EENSD_IS5_EERSA_EEEDaOT_DpOT0_"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_14DOMArrayBufferEEEE4CopyERKS4_: argument 0"}
!57 = distinct !{!57, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_14DOMArrayBufferEEEE4CopyERKS4_"}
!58 = !{!56, !53}
!59 = !{!60, !62, !53}
!60 = distinct !{!60, !61, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN5blink14DOMArrayBufferEPNS3_12_GLOBAL__N_119ClipboardTextWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS3_21CrossThreadPersistentIS4_EENSE_IS7_EESB_EEEDcOT0_DpOT1_: argument 0"}
!61 = distinct !{!61, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN5blink14DOMArrayBufferEPNS3_12_GLOBAL__N_119ClipboardTextWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS3_21CrossThreadPersistentIS4_EENSE_IS7_EESB_EEEDcOT0_DpOT1_"}
!62 = distinct !{!62, !63, !"_ZN4base8BindOnceIPFvPN5blink14DOMArrayBufferEPNS1_12_GLOBAL__N_119ClipboardTextWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS1_21CrossThreadPersistentIS2_EENSC_IS5_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!63 = distinct !{!63, !"_ZN4base8BindOnceIPFvPN5blink14DOMArrayBufferEPNS1_12_GLOBAL__N_119ClipboardTextWriterE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJNS1_21CrossThreadPersistentIS2_EENSC_IS5_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!64 = !{!65, !53}
!65 = distinct !{!65, !66, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!66 = distinct !{!66, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_119ClipboardTextWriterEEENS_21CrossThreadPersistentIT_EEPS4_: argument 0"}
!69 = distinct !{!69, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_119ClipboardTextWriterEEENS_21CrossThreadPersistentIT_EEPS4_"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12_GLOBAL__N_119ClipboardTextWriterEFvRKNS_6StringEEJNS1_21CrossThreadPersistentIS3_EES4_EEEDaOT_DpOT0_: argument 0"}
!72 = distinct !{!72, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12_GLOBAL__N_119ClipboardTextWriterEFvRKNS_6StringEEJNS1_21CrossThreadPersistentIS3_EES4_EEEDaOT_DpOT0_"}
!73 = !{!74, !76, !71}
!74 = distinct !{!74, !75, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_119ClipboardTextWriterEFvRKN3WTF6StringEEJNS3_21CrossThreadPersistentIS5_EES7_EEEDcOT0_DpOT1_: argument 0"}
!75 = distinct !{!75, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_119ClipboardTextWriterEFvRKN3WTF6StringEEJNS3_21CrossThreadPersistentIS5_EES7_EEEDcOT0_DpOT1_"}
!76 = distinct !{!76, !77, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_119ClipboardTextWriterEFvRKN3WTF6StringEEJNS1_21CrossThreadPersistentIS3_EES5_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!77 = distinct !{!77, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_119ClipboardTextWriterEFvRKN3WTF6StringEEJNS1_21CrossThreadPersistentIS3_EES5_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!78 = !{!79, !71}
!79 = distinct !{!79, !80, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!80 = distinct !{!80, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!83 = distinct !{!83, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
