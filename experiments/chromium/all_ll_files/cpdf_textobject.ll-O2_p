; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_textobject.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_textobject.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.CPDF_TextObject::Item" = type { i32, %class.CFX_PTemplate }
%class.CFX_PTemplate = type { float, float }
%class.CPDF_TextObject = type { %class.CPDF_PageObject, %class.CFX_PTemplate, %"class.std::__1::vector.212", %"class.std::__1::vector.17" }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector", %"class.std::__1::vector.3" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.0" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %class.CPDF_TextObject* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr.5"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.12" }
%"class.fxcrt::SharedCopyOnWrite.12" = type { %"class.fxcrt::RetainPtr.13" }
%"class.fxcrt::RetainPtr.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.17" }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.26" }
%"class.fxcrt::SharedCopyOnWrite.26" = type { %"class.fxcrt::RetainPtr.27" }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.17", %"class.std::__1::unique_ptr.31", %"class.fxcrt::RetainPtr.35" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.PatternValue* }
%class.PatternValue = type opaque
%"class.fxcrt::RetainPtr.35" = type { %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.43" }
%"class.fxcrt::SharedCopyOnWrite.43" = type { %"class.fxcrt::RetainPtr.44" }
%"class.fxcrt::RetainPtr.44" = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.48", %"class.fxcrt::UnownedPtr.170", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.48" = type { %"class.std::__1::unique_ptr.49" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.CPDF_Font* }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %class.CFX_Font, %"class.std::__1::vector.109", %"class.fxcrt::RetainPtr.117", %"class.fxcrt::RetainPtr.156", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.162", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.60", %"class.std::__1::unique_ptr.66", %"class.fxcrt::RetainPtr.72", %"class.fxcrt::RetainPtr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::vector.104", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.60" = type { %"class.std::__1::unique_ptr.61" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.72" = type { %"class.std::__1::unique_ptr.73" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.76", %"class.fxcrt::RetainPtr.80" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.80" = type { %"class.std::__1::unique_ptr.81" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.88" = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { i8* }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { i8*, i8*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.108", i64 }
%"class.fxcrt::UnownedPtr.108" = type { i8* }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"*, %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::unique_ptr.111" = type opaque
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::unique_ptr.111"* }
%"class.fxcrt::RetainPtr.117" = type { %"class.std::__1::unique_ptr.118" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.127", %"class.fxcrt::RetainPtr.148" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.100", %"class.fxcrt::UnownedPtr.108" }
%"class.fxcrt::RetainPtr.127" = type { %"class.std::__1::unique_ptr.128" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.131" }
%"class.fxcrt::RetainPtr.131" = type { %"class.std::__1::unique_ptr.132" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.255" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.273", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree.137" }
%"class.std::__1::__tree.137" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.fxcrt::RetainPtr.148" = type { %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type opaque
%"class.fxcrt::RetainPtr.156" = type { %"class.std::__1::unique_ptr.157" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.121" }
%"class.fxcrt::RetainPtr.121" = type { %"class.std::__1::unique_ptr.122" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.fxcrt::UnownedPtr.170" = type { %class.CPDF_Document* }
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.173" }
%"class.fxcrt::SharedCopyOnWrite.173" = type { %"class.fxcrt::RetainPtr.174" }
%"class.fxcrt::RetainPtr.174" = type { %"class.std::__1::unique_ptr.175" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.178", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.184", %"class.fxcrt::RetainPtr.190", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.184", %"class.fxcrt::RetainPtr.184", %"class.fxcrt::RetainPtr.184", float, float }
%"class.fxcrt::RetainPtr.178" = type { %"class.std::__1::unique_ptr.179" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %class.CPDF_Object* }
%"class.fxcrt::RetainPtr.190" = type { %"class.std::__1::unique_ptr.191" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.fxcrt::RetainPtr.184" = type { %"class.std::__1::unique_ptr.185" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %class.CPDF_Object* }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.198" }
%"class.fxcrt::RetainPtr.198" = type { %"class.std::__1::unique_ptr.199" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.202" }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"class.fxcrt::RetainPtr.204"*, %"class.fxcrt::RetainPtr.204"*, %"class.std::__1::__compressed_pair.205" }
%"class.fxcrt::RetainPtr.204" = type opaque
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.fxcrt::RetainPtr.204"* }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { i32*, i32*, %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { i32* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { float*, float*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { float* }
%class.CFX_PTemplate.239 = type { i16, i16 }
%class.CPDF_CIDFont = type { %class.CPDF_Font, %"class.fxcrt::RetainPtr.219", %"class.fxcrt::UnownedPtr.225", %"class.fxcrt::RetainPtr.117", %"class.std::__1::unique_ptr.226", i8, i8, i8, i8, i8, i16, i16, i16, %"class.std::__1::vector.232", %"class.std::__1::vector.232", [256 x %struct.FX_RECT] }
%"class.fxcrt::RetainPtr.219" = type { %"class.std::__1::unique_ptr.220" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %class.CPDF_CMap* }
%class.CPDF_CMap = type opaque
%"class.fxcrt::UnownedPtr.225" = type { %class.CPDF_CID2UnicodeMap* }
%class.CPDF_CID2UnicodeMap = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %class.CFX_CTTGSUBTable* }
%class.CFX_CTTGSUBTable = type opaque
%"class.std::__1::vector.232" = type { %"class.std::__1::__vector_base.233" }
%"class.std::__1::__vector_base.233" = type { i32*, i32*, %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { i32* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.240" }
%"class.fxcrt::RetainPtr.240" = type { %"class.std::__1::unique_ptr.241" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.fxcrt::StringDataTemplate.244"* }
%"class.fxcrt::StringDataTemplate.244" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span.253" }
%"class.pdfium::span.253" = type { %"class.fxcrt::UnownedPtr.254", i64 }
%"class.fxcrt::UnownedPtr.254" = type { i8* }
%class.CPDF_PathObject = type opaque
%class.CPDF_ImageObject = type opaque
%class.CPDF_ShadingObject = type opaque
%class.CPDF_FormObject = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm = comdat any

@_ZTV15CPDF_TextObject = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_TextObject*)* @_ZN15CPDF_TextObjectD2Ev to i8*), i8* bitcast (void (%class.CPDF_TextObject*)* @_ZN15CPDF_TextObjectD0Ev to i8*), i8* bitcast (i32 (%class.CPDF_TextObject*)* @_ZNK15CPDF_TextObject7GetTypeEv to i8*), i8* bitcast (void (%class.CPDF_TextObject*, %class.CFX_Matrix*)* @_ZN15CPDF_TextObject9TransformERK10CFX_Matrix to i8*), i8* bitcast (i1 (%class.CPDF_TextObject*)* @_ZNK15CPDF_TextObject6IsTextEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6IsPathEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject7IsImageEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject9IsShadingEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6IsFormEv to i8*), i8* bitcast (%class.CPDF_TextObject* (%class.CPDF_TextObject*)* @_ZN15CPDF_TextObject6AsTextEv to i8*), i8* bitcast (%class.CPDF_TextObject* (%class.CPDF_TextObject*)* @_ZNK15CPDF_TextObject6AsTextEv to i8*), i8* bitcast (%class.CPDF_PathObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject6AsPathEv to i8*), i8* bitcast (%class.CPDF_PathObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6AsPathEv to i8*), i8* bitcast (%class.CPDF_ImageObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject7AsImageEv to i8*), i8* bitcast (%class.CPDF_ImageObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject7AsImageEv to i8*), i8* bitcast (%class.CPDF_ShadingObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject9AsShadingEv to i8*), i8* bitcast (%class.CPDF_ShadingObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject9AsShadingEv to i8*), i8* bitcast (%class.CPDF_FormObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject6AsFormEv to i8*), i8* bitcast (%class.CPDF_FormObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6AsFormEv to i8*)] }, align 8

@_ZN15CPDF_TextObject4ItemC1Ev = hidden unnamed_addr alias void (%"struct.CPDF_TextObject::Item"*), void (%"struct.CPDF_TextObject::Item"*)* @_ZN15CPDF_TextObject4ItemC2Ev
@_ZN15CPDF_TextObject4ItemC1ERKS0_ = hidden unnamed_addr alias void (%"struct.CPDF_TextObject::Item"*, %"struct.CPDF_TextObject::Item"*), void (%"struct.CPDF_TextObject::Item"*, %"struct.CPDF_TextObject::Item"*)* @_ZN15CPDF_TextObject4ItemC2ERKS0_
@_ZN15CPDF_TextObject4ItemD1Ev = hidden unnamed_addr alias void (%"struct.CPDF_TextObject::Item"*), void (%"struct.CPDF_TextObject::Item"*)* @_ZN15CPDF_TextObject4ItemD2Ev
@_ZN15CPDF_TextObjectC1Ei = hidden unnamed_addr alias void (%class.CPDF_TextObject*, i32), void (%class.CPDF_TextObject*, i32)* @_ZN15CPDF_TextObjectC2Ei
@_ZN15CPDF_TextObjectC1Ev = hidden unnamed_addr alias void (%class.CPDF_TextObject*), void (%class.CPDF_TextObject*)* @_ZN15CPDF_TextObjectC2Ev
@_ZN15CPDF_TextObjectD1Ev = hidden unnamed_addr alias void (%class.CPDF_TextObject*), void (%class.CPDF_TextObject*)* @_ZN15CPDF_TextObjectD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15CPDF_TextObject4ItemC2Ev(%"struct.CPDF_TextObject::Item"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %0, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %3, align 4
  %4 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %0, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15CPDF_TextObject4ItemC2ERKS0_(%"struct.CPDF_TextObject::Item"* nocapture, %"struct.CPDF_TextObject::Item"* nocapture readonly dereferenceable(12)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %1, i64 0, i32 1
  %8 = bitcast %class.CFX_PTemplate* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %class.CFX_PTemplate* %6 to i32*
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %0, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %1, i64 0, i32 1, i32 1
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = bitcast float* %11 to i32*
  store i32 %14, i32* %15, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN15CPDF_TextObject4ItemD2Ev(%"struct.CPDF_TextObject::Item"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_TextObjectC2Ei(%class.CPDF_TextObject*, i32) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectC2Ei(%class.CPDF_PageObject* %3, i32 %1) #13
  %4 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15CPDF_TextObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 1, i32 0
  %6 = bitcast float* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 56, i1 false)
  ret void
}

declare void @_ZN15CPDF_PageObjectC2Ei(%class.CPDF_PageObject*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_TextObjectC2Ev(%class.CPDF_TextObject*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectC2Ei(%class.CPDF_PageObject* %2, i32 -1) #13
  %3 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15CPDF_TextObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 1, i32 0
  %5 = bitcast float* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 56, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_TextObjectD2Ev(%class.CPDF_TextObject*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15CPDF_TextObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %3, i64 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = bitcast %"class.std::__1::vector.212"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #13
  %9 = icmp eq i32* %5, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast i32* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %10
  %13 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load float*, float** %13, align 8
  %15 = icmp eq float* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = ptrtoint float* %14 to i64
  %18 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 3, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast float* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %12, %16
  %22 = load i32*, i32** %4, align 8
  %23 = icmp eq i32* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = ptrtoint i32* %22 to i64
  store i64 %25, i64* %7, align 8
  %26 = bitcast i32* %22 to i8*
  tail call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %21, %24
  %28 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectD2Ev(%class.CPDF_PageObject* %28) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind
declare void @_ZN15CPDF_PageObjectD2Ev(%class.CPDF_PageObject*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_TextObjectD0Ev(%class.CPDF_TextObject*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15CPDF_TextObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %3, i64 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = bitcast %"class.std::__1::vector.212"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #13
  %9 = icmp eq i32* %5, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast i32* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %10, %1
  %13 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load float*, float** %13, align 8
  %15 = icmp eq float* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = ptrtoint float* %14 to i64
  %18 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 3, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast float* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %16, %12
  %22 = load i32*, i32** %4, align 8
  %23 = icmp eq i32* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = ptrtoint i32* %22 to i64
  store i64 %25, i64* %7, align 8
  %26 = bitcast i32* %22 to i8*
  tail call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %21, %24
  %28 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectD2Ev(%class.CPDF_PageObject* %28) #13
  %29 = bitcast %class.CPDF_TextObject* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK15CPDF_TextObject10CountItemsEv(%class.CPDF_TextObject* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2
  %3 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.212"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CPDF_TextObject11GetItemInfoEm(%"struct.CPDF_TextObject::Item"* noalias sret, %class.CPDF_TextObject*, i64) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.48", align 8
  %5 = alloca %class.CFX_PTemplate.239, align 2
  %6 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %0, i64 0, i32 1, i32 1
  %9 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %0, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %9, align 4
  store float 0.000000e+00, float* %8, align 4
  %10 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 2, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds i32, i32* %11, i64 %2
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %6, align 4
  %14 = icmp eq i64 %2, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %3
  %16 = add i64 %2, -1
  %17 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 3, i32 0, i32 0
  %18 = load float*, float** %17, align 8
  %19 = getelementptr inbounds float, float* %18, i64 %16
  %20 = load float, float* %19, align 4
  br label %21

21:                                               ; preds = %3, %15
  %22 = phi float [ %20, %15 ], [ 0.000000e+00, %3 ]
  store float %22, float* %7, align 4
  %23 = bitcast float* %8 to i32*
  store i32 0, i32* %23, align 4
  %24 = icmp eq i32 %13, -1
  br i1 %24, label %86, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.fxcrt::RetainPtr.48"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.fxcrt::RetainPtr.48", %"class.fxcrt::RetainPtr.48"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %27, align 8
  %28 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 0, i32 0, i32 4
  call void @_ZNK14CPDF_TextState7GetFontEv(%"class.fxcrt::RetainPtr.48"* nonnull sret %4, %class.CPDF_TextState* %28) #13
  %29 = load %class.CPDF_Font*, %class.CPDF_Font** %27, align 8
  %30 = bitcast %class.CPDF_Font* %29 to i1 (%class.CPDF_Font*)***
  %31 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %31, i64 5
  %33 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %32, align 8
  %34 = call zeroext i1 %33(%class.CPDF_Font* %29) #13
  br i1 %34, label %35, label %71

35:                                               ; preds = %25
  %36 = load %class.CPDF_Font*, %class.CPDF_Font** %27, align 8
  %37 = bitcast %class.CPDF_Font* %36 to %class.CPDF_CIDFont* (%class.CPDF_Font*)***
  %38 = load %class.CPDF_CIDFont* (%class.CPDF_Font*)**, %class.CPDF_CIDFont* (%class.CPDF_Font*)*** %37, align 8
  %39 = getelementptr inbounds %class.CPDF_CIDFont* (%class.CPDF_Font*)*, %class.CPDF_CIDFont* (%class.CPDF_Font*)** %38, i64 13
  %40 = load %class.CPDF_CIDFont* (%class.CPDF_Font*)*, %class.CPDF_CIDFont* (%class.CPDF_Font*)** %39, align 8
  %41 = call %class.CPDF_CIDFont* %40(%class.CPDF_Font* %36) #13
  %42 = call zeroext i1 @_ZNK12CPDF_CIDFont13IsVertWritingEv(%class.CPDF_CIDFont* %41) #13
  br i1 %42, label %43, label %71

43:                                               ; preds = %35
  %44 = load %class.CPDF_Font*, %class.CPDF_Font** %27, align 8
  %45 = bitcast %class.CPDF_Font* %44 to %class.CPDF_CIDFont* (%class.CPDF_Font*)***
  %46 = load %class.CPDF_CIDFont* (%class.CPDF_Font*)**, %class.CPDF_CIDFont* (%class.CPDF_Font*)*** %45, align 8
  %47 = getelementptr inbounds %class.CPDF_CIDFont* (%class.CPDF_Font*)*, %class.CPDF_CIDFont* (%class.CPDF_Font*)** %46, i64 13
  %48 = load %class.CPDF_CIDFont* (%class.CPDF_Font*)*, %class.CPDF_CIDFont* (%class.CPDF_Font*)** %47, align 8
  %49 = call %class.CPDF_CIDFont* %48(%class.CPDF_Font* %44) #13
  %50 = call zeroext i16 @_ZNK12CPDF_CIDFont15CIDFromCharCodeEj(%class.CPDF_CIDFont* %49, i32 %13) #13
  %51 = bitcast %class.CFX_PTemplate.239* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #13
  %52 = getelementptr inbounds %class.CFX_PTemplate.239, %class.CFX_PTemplate.239* %5, i64 0, i32 0
  store i16 -21846, i16* %52, align 2
  %53 = getelementptr inbounds %class.CFX_PTemplate.239, %class.CFX_PTemplate.239* %5, i64 0, i32 1
  store i16 -21846, i16* %53, align 2
  %54 = load %class.CPDF_Font*, %class.CPDF_Font** %27, align 8
  %55 = bitcast %class.CPDF_Font* %54 to %class.CPDF_CIDFont* (%class.CPDF_Font*)***
  %56 = load %class.CPDF_CIDFont* (%class.CPDF_Font*)**, %class.CPDF_CIDFont* (%class.CPDF_Font*)*** %55, align 8
  %57 = getelementptr inbounds %class.CPDF_CIDFont* (%class.CPDF_Font*)*, %class.CPDF_CIDFont* (%class.CPDF_Font*)** %56, i64 13
  %58 = load %class.CPDF_CIDFont* (%class.CPDF_Font*)*, %class.CPDF_CIDFont* (%class.CPDF_Font*)** %57, align 8
  %59 = call %class.CPDF_CIDFont* %58(%class.CPDF_Font* %54) #13
  call void @_ZNK12CPDF_CIDFont13GetVertOriginEt(%class.CFX_PTemplate.239* nonnull sret %5, %class.CPDF_CIDFont* %59, i16 zeroext %50) #13
  %60 = call float @_ZNK14CPDF_TextState11GetFontSizeEv(%class.CPDF_TextState* %28) #13
  %61 = load i16, i16* %52, align 2
  %62 = sitofp i16 %61 to float
  %63 = fmul float %60, %62
  %64 = fdiv float %63, 1.000000e+03
  %65 = fsub float 0.000000e+00, %64
  store float %65, float* %7, align 4
  %66 = load i16, i16* %53, align 2
  %67 = sitofp i16 %66 to float
  %68 = fmul float %60, %67
  %69 = fdiv float %68, 1.000000e+03
  %70 = fsub float %22, %69
  store float %70, float* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #13
  br label %71

71:                                               ; preds = %25, %35, %43
  %72 = load %class.CPDF_Font*, %class.CPDF_Font** %27, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %27, align 8
  %73 = icmp eq %class.CPDF_Font* %72, null
  br i1 %73, label %85, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %72, i64 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = add nsw i64 %76, -1
  store i64 %77, i64* %75, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %85

79:                                               ; preds = %74
  %80 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %72, i64 0, i32 0
  %81 = bitcast %class.CPDF_Font* %72 to void (%"class.fxcrt::Retainable"*)***
  %82 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %82, i64 1
  %84 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %83, align 8
  call void %84(%"class.fxcrt::Retainable"* nonnull %80) #13
  br label %85

85:                                               ; preds = %71, %74, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br label %86

86:                                               ; preds = %85, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CPDF_TextObject7GetFontEv(%"class.fxcrt::RetainPtr.48"* noalias sret, %class.CPDF_TextObject*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 0, i32 0, i32 4
  tail call void @_ZNK14CPDF_TextState7GetFontEv(%"class.fxcrt::RetainPtr.48"* sret %0, %class.CPDF_TextState* %3) #13
  ret void
}

declare zeroext i1 @_ZNK12CPDF_CIDFont13IsVertWritingEv(%class.CPDF_CIDFont*) unnamed_addr #4

declare zeroext i16 @_ZNK12CPDF_CIDFont15CIDFromCharCodeEj(%class.CPDF_CIDFont*, i32) local_unnamed_addr #4

declare void @_ZNK12CPDF_CIDFont13GetVertOriginEt(%class.CFX_PTemplate.239* sret, %class.CPDF_CIDFont*, i16 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK15CPDF_TextObject11GetFontSizeEv(%class.CPDF_TextObject*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 0, i32 4
  %3 = tail call float @_ZNK14CPDF_TextState11GetFontSizeEv(%class.CPDF_TextState* %2) #13
  ret float %3
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK15CPDF_TextObject10CountCharsEv(%class.CPDF_TextObject* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %3, %5
  br i1 %6, label %34, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i32* %3 to i64
  %9 = getelementptr i32, i32* %5, i64 -1
  %10 = ptrtoint i32* %9 to i64
  %11 = sub i64 %10, %8
  %12 = lshr i64 %11, 2
  %13 = add nuw nsw i64 %12, 1
  %14 = and i64 %13, 3
  %15 = icmp ult i64 %11, 12
  br i1 %15, label %18, label %16

16:                                               ; preds = %7
  %17 = sub nsw i64 %13, %14
  br label %36

18:                                               ; preds = %36, %7
  %19 = phi i64 [ undef, %7 ], [ %58, %36 ]
  %20 = phi i64 [ 0, %7 ], [ %58, %36 ]
  %21 = phi i32* [ %3, %7 ], [ %59, %36 ]
  %22 = icmp eq i64 %14, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %18, %23
  %24 = phi i64 [ %30, %23 ], [ %20, %18 ]
  %25 = phi i32* [ %31, %23 ], [ %21, %18 ]
  %26 = phi i64 [ %32, %23 ], [ %14, %18 ]
  %27 = load i32, i32* %25, align 4
  %28 = icmp ne i32 %27, -1
  %29 = zext i1 %28 to i64
  %30 = add i64 %24, %29
  %31 = getelementptr inbounds i32, i32* %25, i64 1
  %32 = add i64 %26, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %23, !llvm.loop !2

34:                                               ; preds = %18, %23, %1
  %35 = phi i64 [ 0, %1 ], [ %19, %18 ], [ %30, %23 ]
  ret i64 %35

36:                                               ; preds = %36, %16
  %37 = phi i64 [ 0, %16 ], [ %58, %36 ]
  %38 = phi i32* [ %3, %16 ], [ %59, %36 ]
  %39 = phi i64 [ %17, %16 ], [ %60, %36 ]
  %40 = load i32, i32* %38, align 4
  %41 = icmp ne i32 %40, -1
  %42 = zext i1 %41 to i64
  %43 = add i64 %37, %42
  %44 = getelementptr inbounds i32, i32* %38, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp ne i32 %45, -1
  %47 = zext i1 %46 to i64
  %48 = add i64 %43, %47
  %49 = getelementptr inbounds i32, i32* %38, i64 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp ne i32 %50, -1
  %52 = zext i1 %51 to i64
  %53 = add i64 %48, %52
  %54 = getelementptr inbounds i32, i32* %38, i64 3
  %55 = load i32, i32* %54, align 4
  %56 = icmp ne i32 %55, -1
  %57 = zext i1 %56 to i64
  %58 = add i64 %53, %57
  %59 = getelementptr inbounds i32, i32* %38, i64 4
  %60 = add i64 %39, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %18, label %36
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK15CPDF_TextObject11GetCharCodeEm(%class.CPDF_TextObject* nocapture readonly, i64) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  br i1 %7, label %20, label %8

8:                                                ; preds = %2, %16
  %9 = phi i64 [ %17, %16 ], [ 0, %2 ]
  %10 = phi i32* [ %18, %16 ], [ %4, %2 ]
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = add i64 %9, 1
  %15 = icmp eq i64 %9, %1
  br i1 %15, label %20, label %16

16:                                               ; preds = %8, %13
  %17 = phi i64 [ %14, %13 ], [ %9, %8 ]
  %18 = getelementptr inbounds i32, i32* %10, i64 1
  %19 = icmp eq i32* %18, %6
  br i1 %19, label %20, label %8

20:                                               ; preds = %13, %16, %2
  %21 = phi i32 [ -1, %2 ], [ -1, %16 ], [ %11, %13 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CPDF_TextObject11GetCharInfoEm(%"struct.CPDF_TextObject::Item"* noalias sret, %class.CPDF_TextObject*, i64) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 2
  %5 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast i32** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.212"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  %11 = inttoptr i64 %9 to i32*
  br i1 %10, label %29, label %12

12:                                               ; preds = %3
  %13 = sub i64 %7, %9
  %14 = ashr exact i64 %13, 2
  br label %15

15:                                               ; preds = %12, %24
  %16 = phi i64 [ 0, %12 ], [ %25, %24 ]
  %17 = phi i64 [ 0, %12 ], [ %26, %24 ]
  %18 = getelementptr inbounds i32, i32* %11, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = add i64 %16, 1
  %23 = icmp eq i64 %16, %2
  br i1 %23, label %28, label %24

24:                                               ; preds = %15, %21
  %25 = phi i64 [ %22, %21 ], [ %16, %15 ]
  %26 = add nuw i64 %17, 1
  %27 = icmp ult i64 %26, %14
  br i1 %27, label %15, label %29

28:                                               ; preds = %21
  tail call void @_ZNK15CPDF_TextObject11GetItemInfoEm(%"struct.CPDF_TextObject::Item"* sret %0, %class.CPDF_TextObject* %1, i64 %17)
  br label %33

29:                                               ; preds = %24, %3
  %30 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %0, i64 0, i32 0
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %0, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds %"struct.CPDF_TextObject::Item", %"struct.CPDF_TextObject::Item"* %0, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %32, align 4
  br label %33

33:                                               ; preds = %28, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK15CPDF_TextObject10CountWordsEv(%class.CPDF_TextObject*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr.48", align 8
  %3 = alloca %"class.fxcrt::WideString", align 8
  %4 = bitcast %"class.fxcrt::RetainPtr.48"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.fxcrt::RetainPtr.48", %"class.fxcrt::RetainPtr.48"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %5, align 8
  %6 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 0, i32 4
  call void @_ZNK14CPDF_TextState7GetFontEv(%"class.fxcrt::RetainPtr.48"* nonnull sret %2, %class.CPDF_TextState* %6) #13
  %7 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %8, %10
  br i1 %11, label %71, label %12

12:                                               ; preds = %1
  %13 = ptrtoint i32* %8 to i64
  %14 = getelementptr i32, i32* %10, i64 -1
  %15 = ptrtoint i32* %14 to i64
  %16 = sub i64 %15, %13
  %17 = lshr i64 %16, 2
  %18 = add nuw nsw i64 %17, 1
  %19 = and i64 %18, 3
  %20 = icmp ult i64 %16, 12
  br i1 %20, label %49, label %21

21:                                               ; preds = %12
  %22 = sub nsw i64 %18, %19
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i64 [ 0, %21 ], [ %45, %23 ]
  %25 = phi i32* [ %8, %21 ], [ %46, %23 ]
  %26 = phi i64 [ %22, %21 ], [ %47, %23 ]
  %27 = load i32, i32* %25, align 4
  %28 = icmp ne i32 %27, -1
  %29 = zext i1 %28 to i64
  %30 = add i64 %24, %29
  %31 = getelementptr inbounds i32, i32* %25, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp ne i32 %32, -1
  %34 = zext i1 %33 to i64
  %35 = add i64 %30, %34
  %36 = getelementptr inbounds i32, i32* %25, i64 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp ne i32 %37, -1
  %39 = zext i1 %38 to i64
  %40 = add i64 %35, %39
  %41 = getelementptr inbounds i32, i32* %25, i64 3
  %42 = load i32, i32* %41, align 4
  %43 = icmp ne i32 %42, -1
  %44 = zext i1 %43 to i64
  %45 = add i64 %40, %44
  %46 = getelementptr inbounds i32, i32* %25, i64 4
  %47 = add i64 %26, -4
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %23

49:                                               ; preds = %23, %12
  %50 = phi i64 [ undef, %12 ], [ %45, %23 ]
  %51 = phi i64 [ 0, %12 ], [ %45, %23 ]
  %52 = phi i32* [ %8, %12 ], [ %46, %23 ]
  %53 = icmp eq i64 %19, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %49, %54
  %55 = phi i64 [ %61, %54 ], [ %51, %49 ]
  %56 = phi i32* [ %62, %54 ], [ %52, %49 ]
  %57 = phi i64 [ %63, %54 ], [ %19, %49 ]
  %58 = load i32, i32* %56, align 4
  %59 = icmp ne i32 %58, -1
  %60 = zext i1 %59 to i64
  %61 = add i64 %55, %60
  %62 = getelementptr inbounds i32, i32* %56, i64 1
  %63 = add i64 %57, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %54, !llvm.loop !4

65:                                               ; preds = %54, %49
  %66 = phi i64 [ %50, %49 ], [ %61, %54 ]
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = bitcast %"class.fxcrt::WideString"* %3 to i8*
  %70 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %87

71:                                               ; preds = %122, %1, %65
  %72 = phi i32 [ 0, %65 ], [ 0, %1 ], [ %134, %122 ]
  %73 = load %class.CPDF_Font*, %class.CPDF_Font** %5, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %5, align 8
  %74 = icmp eq %class.CPDF_Font* %73, null
  br i1 %74, label %86, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %73, i64 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = add nsw i64 %77, -1
  store i64 %78, i64* %76, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %86

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %73, i64 0, i32 0
  %82 = bitcast %class.CPDF_Font* %73 to void (%"class.fxcrt::Retainable"*)***
  %83 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %83, i64 1
  %85 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %84, align 8
  call void %85(%"class.fxcrt::Retainable"* nonnull %81) #13
  br label %86

86:                                               ; preds = %71, %75, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret i32 %72

87:                                               ; preds = %137, %68
  %88 = phi i32* [ %10, %68 ], [ %141, %137 ]
  %89 = phi i32* [ %8, %68 ], [ %140, %137 ]
  %90 = phi i8 [ 0, %68 ], [ %139, %137 ]
  %91 = phi i64 [ 0, %68 ], [ %135, %137 ]
  %92 = phi i32 [ 0, %68 ], [ %134, %137 ]
  %93 = icmp eq i32* %89, %88
  br i1 %93, label %106, label %94

94:                                               ; preds = %87, %102
  %95 = phi i64 [ %103, %102 ], [ 0, %87 ]
  %96 = phi i32* [ %104, %102 ], [ %89, %87 ]
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, -1
  br i1 %98, label %102, label %99

99:                                               ; preds = %94
  %100 = add i64 %95, 1
  %101 = icmp eq i64 %95, %91
  br i1 %101, label %106, label %102

102:                                              ; preds = %99, %94
  %103 = phi i64 [ %100, %99 ], [ %95, %94 ]
  %104 = getelementptr inbounds i32, i32* %96, i64 1
  %105 = icmp eq i32* %104, %88
  br i1 %105, label %106, label %94

106:                                              ; preds = %99, %102, %87
  %107 = phi i32 [ -1, %87 ], [ %97, %99 ], [ -1, %102 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #13
  store %"class.fxcrt::StringDataTemplate.244"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.244"*), %"class.fxcrt::StringDataTemplate.244"** %70, align 8
  %108 = load %class.CPDF_Font*, %class.CPDF_Font** %5, align 8
  %109 = bitcast %class.CPDF_Font* %108 to void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)***
  %110 = load void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)**, void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)*, void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)** %110, i64 21
  %112 = load void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)*, void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)** %111, align 8
  call void %112(%"class.fxcrt::WideString"* nonnull sret %3, %class.CPDF_Font* %108, i32 %107) #13
  %113 = load %"class.fxcrt::StringDataTemplate.244"*, %"class.fxcrt::StringDataTemplate.244"** %70, align 8
  %114 = icmp eq %"class.fxcrt::StringDataTemplate.244"* %113, null
  br i1 %114, label %122, label %115

115:                                              ; preds = %106
  %116 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.244", %"class.fxcrt::StringDataTemplate.244"* %113, i64 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.244", %"class.fxcrt::StringDataTemplate.244"* %113, i64 0, i32 3, i64 0
  %121 = load i32, i32* %120, align 4
  br label %122

122:                                              ; preds = %106, %115, %119
  %123 = phi i32 [ %121, %119 ], [ 0, %115 ], [ 0, %106 ]
  %124 = and i32 %123, 65535
  %125 = icmp ne i32 %124, 32
  %126 = icmp ult i32 %124, 10496
  %127 = and i1 %125, %126
  %128 = xor i1 %127, true
  %129 = and i8 %90, 1
  %130 = icmp eq i8 %129, 0
  %131 = or i1 %130, %128
  %132 = and i1 %125, %131
  %133 = zext i1 %132 to i32
  %134 = add nuw nsw i32 %92, %133
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13
  %135 = add nuw i64 %91, 1
  %136 = icmp eq i64 %135, %66
  br i1 %136, label %71, label %137

137:                                              ; preds = %122
  %138 = zext i1 %127 to i8
  %139 = select i1 %131, i8 %138, i8 %90
  %140 = load i32*, i32** %7, align 8
  %141 = load i32*, i32** %9, align 8
  br label %87
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CPDF_TextObject13GetWordStringEi(%"class.fxcrt::WideString"* noalias sret, %class.CPDF_TextObject*, i32) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.48", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = bitcast %"class.fxcrt::RetainPtr.48"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.fxcrt::RetainPtr.48", %"class.fxcrt::RetainPtr.48"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %7, align 8
  %8 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 0, i32 0, i32 4
  call void @_ZNK14CPDF_TextState7GetFontEv(%"class.fxcrt::RetainPtr.48"* nonnull sret %4, %class.CPDF_TextState* %8) #13
  %9 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.244"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.244"*), %"class.fxcrt::StringDataTemplate.244"** %9, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #13
  %10 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 2, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 2, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %11, %13
  br i1 %14, label %134, label %15

15:                                               ; preds = %3
  %16 = ptrtoint i32* %11 to i64
  %17 = getelementptr i32, i32* %13, i64 -1
  %18 = ptrtoint i32* %17 to i64
  %19 = sub i64 %18, %16
  %20 = lshr i64 %19, 2
  %21 = add nuw nsw i64 %20, 1
  %22 = and i64 %21, 3
  %23 = icmp ult i64 %19, 12
  br i1 %23, label %52, label %24

24:                                               ; preds = %15
  %25 = sub nsw i64 %21, %22
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i64 [ 0, %24 ], [ %48, %26 ]
  %28 = phi i32* [ %11, %24 ], [ %49, %26 ]
  %29 = phi i64 [ %25, %24 ], [ %50, %26 ]
  %30 = load i32, i32* %28, align 4
  %31 = icmp ne i32 %30, -1
  %32 = zext i1 %31 to i64
  %33 = add i64 %27, %32
  %34 = getelementptr inbounds i32, i32* %28, i64 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp ne i32 %35, -1
  %37 = zext i1 %36 to i64
  %38 = add i64 %33, %37
  %39 = getelementptr inbounds i32, i32* %28, i64 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp ne i32 %40, -1
  %42 = zext i1 %41 to i64
  %43 = add i64 %38, %42
  %44 = getelementptr inbounds i32, i32* %28, i64 3
  %45 = load i32, i32* %44, align 4
  %46 = icmp ne i32 %45, -1
  %47 = zext i1 %46 to i64
  %48 = add i64 %43, %47
  %49 = getelementptr inbounds i32, i32* %28, i64 4
  %50 = add i64 %29, -4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %26

52:                                               ; preds = %26, %15
  %53 = phi i64 [ undef, %15 ], [ %48, %26 ]
  %54 = phi i64 [ 0, %15 ], [ %48, %26 ]
  %55 = phi i32* [ %11, %15 ], [ %49, %26 ]
  %56 = icmp eq i64 %22, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %52, %57
  %58 = phi i64 [ %64, %57 ], [ %54, %52 ]
  %59 = phi i32* [ %65, %57 ], [ %55, %52 ]
  %60 = phi i64 [ %66, %57 ], [ %22, %52 ]
  %61 = load i32, i32* %59, align 4
  %62 = icmp ne i32 %61, -1
  %63 = zext i1 %62 to i64
  %64 = add i64 %58, %63
  %65 = getelementptr inbounds i32, i32* %59, i64 1
  %66 = add i64 %60, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %57, !llvm.loop !5

68:                                               ; preds = %57, %52
  %69 = phi i64 [ %53, %52 ], [ %64, %57 ]
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %134, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  %73 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %74

74:                                               ; preds = %131, %71
  %75 = phi i32* [ %13, %71 ], [ %133, %131 ]
  %76 = phi i32* [ %11, %71 ], [ %132, %131 ]
  %77 = phi i64 [ 0, %71 ], [ %129, %131 ]
  %78 = phi i8 [ 0, %71 ], [ %123, %131 ]
  %79 = phi i32 [ 0, %71 ], [ %122, %131 ]
  %80 = icmp eq i32* %76, %75
  br i1 %80, label %93, label %81

81:                                               ; preds = %74, %89
  %82 = phi i64 [ %90, %89 ], [ 0, %74 ]
  %83 = phi i32* [ %91, %89 ], [ %76, %74 ]
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %89, label %86

86:                                               ; preds = %81
  %87 = add i64 %82, 1
  %88 = icmp eq i64 %82, %77
  br i1 %88, label %93, label %89

89:                                               ; preds = %86, %81
  %90 = phi i64 [ %87, %86 ], [ %82, %81 ]
  %91 = getelementptr inbounds i32, i32* %83, i64 1
  %92 = icmp eq i32* %91, %75
  br i1 %92, label %93, label %81

93:                                               ; preds = %86, %89, %74
  %94 = phi i32 [ -1, %74 ], [ %84, %86 ], [ -1, %89 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #13
  store %"class.fxcrt::StringDataTemplate.244"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.244"*), %"class.fxcrt::StringDataTemplate.244"** %73, align 8
  %95 = load %class.CPDF_Font*, %class.CPDF_Font** %7, align 8
  %96 = bitcast %class.CPDF_Font* %95 to void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)***
  %97 = load void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)**, void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)*, void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)** %97, i64 21
  %99 = load void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)*, void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)** %98, align 8
  call void %99(%"class.fxcrt::WideString"* nonnull sret %5, %class.CPDF_Font* %95, i32 %94) #13
  %100 = load %"class.fxcrt::StringDataTemplate.244"*, %"class.fxcrt::StringDataTemplate.244"** %73, align 8
  %101 = icmp eq %"class.fxcrt::StringDataTemplate.244"* %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.244", %"class.fxcrt::StringDataTemplate.244"* %100, i64 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.244", %"class.fxcrt::StringDataTemplate.244"* %100, i64 0, i32 3, i64 0
  %108 = load i32, i32* %107, align 4
  br label %109

109:                                              ; preds = %93, %102, %106
  %110 = phi i32 [ %108, %106 ], [ 0, %102 ], [ 0, %93 ]
  %111 = and i32 %110, 65535
  %112 = icmp ne i32 %111, 32
  %113 = icmp ult i32 %111, 10496
  %114 = and i1 %112, %113
  %115 = zext i1 %114 to i8
  %116 = xor i1 %114, true
  %117 = and i8 %78, 1
  %118 = icmp eq i8 %117, 0
  %119 = or i1 %118, %116
  %120 = and i1 %112, %119
  %121 = zext i1 %120 to i32
  %122 = add nuw nsw i32 %79, %121
  %123 = select i1 %119, i8 %115, i8 %78
  %124 = add nsw i32 %122, -1
  %125 = icmp eq i32 %124, %2
  br i1 %125, label %126, label %128

126:                                              ; preds = %109
  %127 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %0, i32 signext %111) #13
  br label %128

128:                                              ; preds = %126, %109
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #13
  %129 = add nuw i64 %77, 1
  %130 = icmp eq i64 %129, %69
  br i1 %130, label %134, label %131

131:                                              ; preds = %128
  %132 = load i32*, i32** %10, align 8
  %133 = load i32*, i32** %12, align 8
  br label %74

134:                                              ; preds = %128, %3, %68
  %135 = load %class.CPDF_Font*, %class.CPDF_Font** %7, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %7, align 8
  %136 = icmp eq %class.CPDF_Font* %135, null
  br i1 %136, label %148, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %135, i64 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = add nsw i64 %139, -1
  store i64 %140, i64* %138, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %148

142:                                              ; preds = %137
  %143 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %135, i64 0, i32 0
  %144 = bitcast %class.CPDF_Font* %135 to void (%"class.fxcrt::Retainable"*)***
  %145 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %145, i64 1
  %147 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %146, align 8
  call void %147(%"class.fxcrt::Retainable"* nonnull %143) #13
  br label %148

148:                                              ; preds = %134, %137, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret void
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #4

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"*, i32 signext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.CPDF_TextObject* @_ZNK15CPDF_TextObject5CloneEv(%class.CPDF_TextObject*) local_unnamed_addr #3 align 2 {
  %2 = tail call i8* @_Znwm(i64 136) #14
  %3 = bitcast i8* %2 to %class.CPDF_TextObject*
  %4 = bitcast i8* %2 to %class.CPDF_PageObject*
  tail call void @_ZN15CPDF_PageObjectC2Ei(%class.CPDF_PageObject* nonnull %4, i32 -1) #13
  %5 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15CPDF_TextObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 56, i1 false) #13
  %7 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObject8CopyDataEPKS_(%class.CPDF_PageObject* nonnull %4, %class.CPDF_PageObject* %7) #13
  %8 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2
  %9 = getelementptr inbounds i8, i8* %2, i64 88
  %10 = bitcast i8* %9 to %"class.std::__1::vector.212"*
  %11 = icmp eq %"class.std::__1::vector.212"* %8, %10
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %8, i64 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.212"* %10, i32* %14, i32* %16) #13
  br label %17

17:                                               ; preds = %1, %12
  %18 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 3
  %19 = getelementptr inbounds i8, i8* %2, i64 112
  %20 = bitcast i8* %19 to %"class.std::__1::vector.17"*
  %21 = icmp eq %"class.std::__1::vector.17"* %18, %20
  br i1 %21, label %27, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %18, i64 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 3, i32 0, i32 1
  %26 = load float*, float** %25, align 8
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.17"* %20, float* %24, float* %26) #13
  br label %27

27:                                               ; preds = %17, %22
  %28 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 1
  %29 = bitcast i8* %6 to %class.CFX_PTemplate*
  %30 = icmp eq %class.CFX_PTemplate* %28, %29
  br i1 %30, label %40, label %31

31:                                               ; preds = %27
  %32 = bitcast %class.CFX_PTemplate* %28 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = bitcast i8* %6 to i32*
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 1, i32 1
  %36 = bitcast float* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds i8, i8* %2, i64 84
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 4
  br label %40

40:                                               ; preds = %27, %31
  ret %class.CPDF_TextObject* %3
}

declare void @_ZN15CPDF_PageObject8CopyDataEPKS_(%class.CPDF_PageObject*, %class.CPDF_PageObject*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK15CPDF_TextObject7GetTypeEv(%class.CPDF_TextObject* nocapture readnone) unnamed_addr #2 align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_TextObject9TransformERK10CFX_Matrix(%class.CPDF_TextObject*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) unnamed_addr #3 align 2 {
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 0, i32 4
  %5 = tail call float* @_ZNK14CPDF_TextState9GetMatrixEv(%class.CPDF_TextState* %4) #13, !noalias !6
  %6 = getelementptr inbounds float, float* %5, i64 2
  %7 = bitcast float* %5 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4, !noalias !6
  %9 = shufflevector <2 x float> %8, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %10 = bitcast float* %6 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4, !noalias !6
  %12 = shufflevector <2 x float> %11, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %13 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 1, i32 0
  %14 = load float, float* %13, align 8, !noalias !6
  %15 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 1, i32 1
  %16 = load float, float* %15, align 4, !noalias !6
  %17 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 2
  %18 = bitcast %class.CFX_Matrix* %1 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4, !noalias !9
  %20 = shufflevector <2 x float> %19, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %21 = bitcast float* %17 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4, !noalias !9
  %23 = shufflevector <2 x float> %22, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %24 = fmul <4 x float> %9, %20
  %25 = fmul <4 x float> %12, %23
  %26 = fadd <4 x float> %24, %25
  %27 = extractelement <2 x float> %19, i32 0
  %28 = fmul float %14, %27
  %29 = extractelement <2 x float> %22, i32 0
  %30 = fmul float %16, %29
  %31 = fadd float %28, %30
  %32 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 4
  %33 = load float, float* %32, align 4, !noalias !9
  %34 = fadd float %31, %33
  %35 = extractelement <2 x float> %19, i32 1
  %36 = fmul float %14, %35
  %37 = extractelement <2 x float> %22, i32 1
  %38 = fmul float %16, %37
  %39 = fadd float %36, %38
  %40 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 5
  %41 = load float, float* %40, align 4, !noalias !9
  %42 = fadd float %39, %41
  %43 = tail call float* @_ZN14CPDF_TextState16GetMutableMatrixEv(%class.CPDF_TextState* %4) #13
  %44 = bitcast float* %43 to <4 x float>*
  store <4 x float> %26, <4 x float>* %44, align 4
  store float %34, float* %13, align 4
  store float %42, float* %15, align 4
  %45 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #13
  call void @_ZN15CPDF_TextObject16CalcPositionDataEf(%class.CFX_PTemplate* nonnull sret %3, %class.CPDF_TextObject* %0, float 0.000000e+00)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  %46 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %46, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CPDF_TextObject13GetTextMatrixEv(%class.CFX_Matrix* noalias nocapture sret, %class.CPDF_TextObject*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 0, i32 0, i32 4
  %4 = tail call float* @_ZNK14CPDF_TextState9GetMatrixEv(%class.CPDF_TextState* %3) #13
  %5 = bitcast float* %4 to <4 x i32>*
  %6 = load <4 x i32>, <4 x i32>* %5, align 4
  %7 = shufflevector <4 x i32> %6, <4 x i32> undef, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  %8 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 1, i32 0
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 1, i32 1
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %class.CFX_Matrix* %0 to <4 x i32>*
  store <4 x i32> %7, <4 x i32>* %14, align 4
  %15 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 4
  %16 = bitcast float* %15 to i32*
  store i32 %10, i32* %16, align 4
  %17 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 5
  %18 = bitcast float* %17 to i32*
  store i32 %13, i32* %18, align 4
  ret void
}

declare float* @_ZN14CPDF_TextState16GetMutableMatrixEv(%class.CPDF_TextState*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_TextObject16CalcPositionDataEf(%class.CFX_PTemplate* noalias nocapture sret, %class.CPDF_TextObject*, float) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.48", align 8
  %5 = alloca %class.CFX_PTemplate.239, align 2
  %6 = alloca %class.CFX_Matrix, align 16
  %7 = alloca %class.CFX_FloatRect, align 4
  %8 = alloca i32, align 4
  %9 = bitcast %"class.fxcrt::RetainPtr.48"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.fxcrt::RetainPtr.48", %"class.fxcrt::RetainPtr.48"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %10, align 8
  %11 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 0, i32 0, i32 4
  call void @_ZNK14CPDF_TextState7GetFontEv(%"class.fxcrt::RetainPtr.48"* nonnull sret %4, %class.CPDF_TextState* %11) #13
  %12 = load %class.CPDF_Font*, %class.CPDF_Font** %10, align 8
  %13 = bitcast %class.CPDF_Font* %12 to %class.CPDF_CIDFont* (%class.CPDF_Font*)***
  %14 = load %class.CPDF_CIDFont* (%class.CPDF_Font*)**, %class.CPDF_CIDFont* (%class.CPDF_Font*)*** %13, align 8
  %15 = getelementptr inbounds %class.CPDF_CIDFont* (%class.CPDF_Font*)*, %class.CPDF_CIDFont* (%class.CPDF_Font*)** %14, i64 13
  %16 = load %class.CPDF_CIDFont* (%class.CPDF_Font*)*, %class.CPDF_CIDFont* (%class.CPDF_Font*)** %15, align 8
  %17 = call %class.CPDF_CIDFont* %16(%class.CPDF_Font* %12) #13
  %18 = icmp ne %class.CPDF_CIDFont* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %3
  %20 = call zeroext i1 @_ZNK12CPDF_CIDFont13IsVertWritingEv(%class.CPDF_CIDFont* nonnull %17) #13
  br label %21

21:                                               ; preds = %19, %3
  %22 = phi i1 [ %20, %19 ], [ false, %3 ]
  %23 = call float @_ZNK14CPDF_TextState11GetFontSizeEv(%class.CPDF_TextState* %11) #13
  %24 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 2
  %25 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 2, i32 0, i32 1
  %26 = bitcast i32** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.212"* %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %27, %29
  br i1 %30, label %41, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 3, i32 0, i32 0
  %33 = bitcast %class.CFX_PTemplate.239* %5 to i8*
  %34 = getelementptr inbounds %class.CFX_PTemplate.239, %class.CFX_PTemplate.239* %5, i64 0, i32 0
  %35 = getelementptr inbounds %class.CFX_PTemplate.239, %class.CFX_PTemplate.239* %5, i64 0, i32 1
  br label %53

36:                                               ; preds = %187
  %37 = bitcast float %191 to i32
  %38 = bitcast float %193 to i32
  %39 = bitcast float %190 to i32
  %40 = bitcast float %192 to i32
  br label %41

41:                                               ; preds = %21, %36
  %42 = phi i32 [ %40, %36 ], [ -971227136, %21 ]
  %43 = phi i32 [ %39, %36 ], [ -971227136, %21 ]
  %44 = phi i32 [ %38, %36 ], [ 1176256512, %21 ]
  %45 = phi i32 [ %37, %36 ], [ 1176256512, %21 ]
  %46 = phi float [ %190, %36 ], [ -1.000000e+04, %21 ]
  %47 = phi float [ %191, %36 ], [ 1.000000e+04, %21 ]
  %48 = phi float [ %192, %36 ], [ -1.000000e+04, %21 ]
  %49 = phi float [ %193, %36 ], [ 1.000000e+04, %21 ]
  %50 = phi float [ %194, %36 ], [ 0.000000e+00, %21 ]
  %51 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  %52 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float 0.000000e+00, float* %51, align 4
  store float 0.000000e+00, float* %52, align 4
  br i1 %22, label %199, label %206

53:                                               ; preds = %31, %187
  %54 = phi i64 [ %29, %31 ], [ %188, %187 ]
  %55 = phi i64 [ %27, %31 ], [ %189, %187 ]
  %56 = phi float [ -1.000000e+04, %31 ], [ %190, %187 ]
  %57 = phi float [ 1.000000e+04, %31 ], [ %191, %187 ]
  %58 = phi float [ -1.000000e+04, %31 ], [ %192, %187 ]
  %59 = phi float [ 1.000000e+04, %31 ], [ %193, %187 ]
  %60 = phi float [ 0.000000e+00, %31 ], [ %194, %187 ]
  %61 = phi i64 [ 0, %31 ], [ %195, %187 ]
  %62 = inttoptr i64 %54 to i32*
  %63 = getelementptr inbounds i32, i32* %62, i64 %61
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i64 %61, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %53
  %67 = icmp eq i32 %64, -1
  %68 = add i64 %61, -1
  %69 = load float*, float** %32, align 8
  %70 = getelementptr inbounds float, float* %69, i64 %68
  br i1 %67, label %71, label %76

71:                                               ; preds = %66
  %72 = load float, float* %70, align 4
  %73 = fmul float %23, %72
  %74 = fdiv float %73, 1.000000e+03
  %75 = fsub float %60, %74
  br label %187

76:                                               ; preds = %66
  store float %60, float* %70, align 4
  br label %77

77:                                               ; preds = %53, %76
  %78 = load %class.CPDF_Font*, %class.CPDF_Font** %10, align 8
  %79 = bitcast %class.CPDF_Font* %78 to { i64, i64 } (%class.CPDF_Font*, i32)***
  %80 = load { i64, i64 } (%class.CPDF_Font*, i32)**, { i64, i64 } (%class.CPDF_Font*, i32)*** %79, align 8
  %81 = getelementptr inbounds { i64, i64 } (%class.CPDF_Font*, i32)*, { i64, i64 } (%class.CPDF_Font*, i32)** %80, i64 25
  %82 = load { i64, i64 } (%class.CPDF_Font*, i32)*, { i64, i64 } (%class.CPDF_Font*, i32)** %81, align 8
  %83 = call { i64, i64 } %82(%class.CPDF_Font* %78, i32 %64) #13
  %84 = extractvalue { i64, i64 } %83, 0
  %85 = trunc i64 %84 to i32
  %86 = lshr i64 %84, 32
  %87 = trunc i64 %86 to i32
  %88 = extractvalue { i64, i64 } %83, 1
  %89 = trunc i64 %88 to i32
  %90 = lshr i64 %88, 32
  %91 = trunc i64 %90 to i32
  br i1 %22, label %126, label %92

92:                                               ; preds = %77
  %93 = icmp slt i32 %91, %87
  %94 = select i1 %93, i32 %91, i32 %87
  %95 = sitofp i32 %94 to float
  %96 = fcmp ogt float %59, %95
  %97 = select i1 %96, float %95, float %59
  %98 = icmp slt i32 %87, %91
  %99 = select i1 %98, i32 %91, i32 %87
  %100 = sitofp i32 %99 to float
  %101 = fcmp olt float %58, %100
  %102 = select i1 %101, float %100, float %58
  %103 = sitofp i32 %85 to float
  %104 = fmul float %23, %103
  %105 = fdiv float %104, 1.000000e+03
  %106 = fadd float %60, %105
  %107 = sitofp i32 %89 to float
  %108 = fmul float %23, %107
  %109 = fdiv float %108, 1.000000e+03
  %110 = fadd float %60, %109
  %111 = fcmp olt float %110, %106
  %112 = select i1 %111, float %110, float %106
  %113 = fcmp olt float %112, %57
  %114 = select i1 %113, float %112, float %57
  %115 = fcmp olt float %106, %110
  %116 = select i1 %115, float %110, float %106
  %117 = fcmp olt float %56, %116
  %118 = select i1 %117, float %116, float %56
  %119 = load %class.CPDF_Font*, %class.CPDF_Font** %10, align 8
  %120 = bitcast %class.CPDF_Font* %119 to i32 (%class.CPDF_Font*, i32)***
  %121 = load i32 (%class.CPDF_Font*, i32)**, i32 (%class.CPDF_Font*, i32)*** %120, align 8
  %122 = getelementptr inbounds i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %121, i64 24
  %123 = load i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %122, align 8
  %124 = call i32 %123(%class.CPDF_Font* %119, i32 %64) #13
  %125 = sitofp i32 %124 to float
  br label %164

126:                                              ; preds = %77
  %127 = call zeroext i16 @_ZNK12CPDF_CIDFont15CIDFromCharCodeEj(%class.CPDF_CIDFont* %17, i32 %64) #13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #13
  store i16 -21846, i16* %34, align 2
  store i16 -21846, i16* %35, align 2
  call void @_ZNK12CPDF_CIDFont13GetVertOriginEt(%class.CFX_PTemplate.239* nonnull sret %5, %class.CPDF_CIDFont* %17, i16 zeroext %127) #13
  %128 = load i16, i16* %34, align 2
  %129 = sext i16 %128 to i32
  %130 = sub nsw i32 %85, %129
  %131 = sub nsw i32 %89, %129
  %132 = load i16, i16* %35, align 2
  %133 = sext i16 %132 to i32
  %134 = sub nsw i32 %87, %133
  %135 = sub nsw i32 %91, %133
  %136 = icmp slt i32 %131, %130
  %137 = select i1 %136, i32 %131, i32 %130
  %138 = sitofp i32 %137 to float
  %139 = fcmp ogt float %57, %138
  %140 = select i1 %139, float %138, float %57
  %141 = icmp slt i32 %130, %131
  %142 = select i1 %141, i32 %131, i32 %130
  %143 = sitofp i32 %142 to float
  %144 = fcmp olt float %56, %143
  %145 = select i1 %144, float %143, float %56
  %146 = sitofp i32 %134 to float
  %147 = fmul float %23, %146
  %148 = fdiv float %147, 1.000000e+03
  %149 = fadd float %60, %148
  %150 = sitofp i32 %135 to float
  %151 = fmul float %23, %150
  %152 = fdiv float %151, 1.000000e+03
  %153 = fadd float %60, %152
  %154 = fcmp olt float %153, %149
  %155 = select i1 %154, float %153, float %149
  %156 = fcmp olt float %155, %59
  %157 = select i1 %156, float %155, float %59
  %158 = fcmp olt float %149, %153
  %159 = select i1 %158, float %153, float %149
  %160 = fcmp olt float %58, %159
  %161 = select i1 %160, float %159, float %58
  %162 = call signext i16 @_ZNK12CPDF_CIDFont12GetVertWidthEt(%class.CPDF_CIDFont* %17, i16 zeroext %127) #13
  %163 = sitofp i16 %162 to float
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #13
  br label %164

164:                                              ; preds = %126, %92
  %165 = phi float [ %145, %126 ], [ %118, %92 ]
  %166 = phi float [ %140, %126 ], [ %114, %92 ]
  %167 = phi float [ %161, %126 ], [ %102, %92 ]
  %168 = phi float [ %157, %126 ], [ %97, %92 ]
  %169 = phi float [ %163, %126 ], [ %125, %92 ]
  %170 = fmul float %23, %169
  %171 = fdiv float %170, 1.000000e+03
  %172 = fadd float %60, %171
  %173 = icmp eq i32 %64, 32
  br i1 %173, label %174, label %181

174:                                              ; preds = %164
  br i1 %18, label %175, label %178

175:                                              ; preds = %174
  %176 = call i32 @_ZNK12CPDF_CIDFont11GetCharSizeEj(%class.CPDF_CIDFont* nonnull %17, i32 32) #13
  %177 = icmp eq i32 %176, 1
  br i1 %177, label %178, label %181

178:                                              ; preds = %175, %174
  %179 = call float @_ZNK14CPDF_TextState12GetWordSpaceEv(%class.CPDF_TextState* %11) #13
  %180 = fadd float %172, %179
  br label %181

181:                                              ; preds = %178, %175, %164
  %182 = phi float [ %180, %178 ], [ %172, %175 ], [ %172, %164 ]
  %183 = call float @_ZNK14CPDF_TextState12GetCharSpaceEv(%class.CPDF_TextState* %11) #13
  %184 = fadd float %182, %183
  %185 = load i64, i64* %26, align 8
  %186 = load i64, i64* %28, align 8
  br label %187

187:                                              ; preds = %181, %71
  %188 = phi i64 [ %54, %71 ], [ %186, %181 ]
  %189 = phi i64 [ %55, %71 ], [ %185, %181 ]
  %190 = phi float [ %56, %71 ], [ %165, %181 ]
  %191 = phi float [ %57, %71 ], [ %166, %181 ]
  %192 = phi float [ %58, %71 ], [ %167, %181 ]
  %193 = phi float [ %59, %71 ], [ %168, %181 ]
  %194 = phi float [ %75, %71 ], [ %184, %181 ]
  %195 = add nuw i64 %61, 1
  %196 = sub i64 %189, %188
  %197 = ashr exact i64 %196, 2
  %198 = icmp ult i64 %195, %197
  br i1 %198, label %53, label %36

199:                                              ; preds = %41
  store float %50, float* %52, align 4
  %200 = fmul float %23, %47
  %201 = fdiv float %200, 1.000000e+03
  %202 = fmul float %23, %46
  %203 = fdiv float %202, 1.000000e+03
  %204 = bitcast float %201 to i32
  %205 = bitcast float %203 to i32
  br label %214

206:                                              ; preds = %41
  %207 = fmul float %50, %2
  store float %207, float* %51, align 4
  %208 = fmul float %23, %49
  %209 = fdiv float %208, 1.000000e+03
  %210 = fmul float %23, %48
  %211 = fdiv float %210, 1.000000e+03
  %212 = bitcast float %209 to i32
  %213 = bitcast float %211 to i32
  br label %214

214:                                              ; preds = %206, %199
  %215 = phi i32 [ %213, %206 ], [ %42, %199 ]
  %216 = phi i32 [ %43, %206 ], [ %205, %199 ]
  %217 = phi i32 [ %212, %206 ], [ %44, %199 ]
  %218 = phi i32 [ %45, %206 ], [ %204, %199 ]
  %219 = bitcast %class.CFX_Matrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #13
  %220 = call float* @_ZNK14CPDF_TextState9GetMatrixEv(%class.CPDF_TextState* %11) #13, !noalias !12
  %221 = bitcast float* %220 to <4 x i32>*
  %222 = load <4 x i32>, <4 x i32>* %221, align 4, !noalias !12
  %223 = shufflevector <4 x i32> %222, <4 x i32> undef, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  %224 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 1, i32 0
  %225 = bitcast float* %224 to i32*
  %226 = load i32, i32* %225, align 8, !noalias !12
  %227 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 1, i32 1
  %228 = bitcast float* %227 to i32*
  %229 = load i32, i32* %228, align 4, !noalias !12
  %230 = bitcast %class.CFX_Matrix* %6 to <4 x i32>*
  store <4 x i32> %223, <4 x i32>* %230, align 16, !alias.scope !12
  %231 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %6, i64 0, i32 4
  %232 = bitcast float* %231 to i32*
  store i32 %226, i32* %232, align 16, !alias.scope !12
  %233 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %6, i64 0, i32 5
  %234 = bitcast float* %233 to i32*
  store i32 %229, i32* %234, align 4, !alias.scope !12
  %235 = bitcast %class.CFX_FloatRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %235) #13
  %236 = bitcast %class.CFX_FloatRect* %7 to i32*
  store i32 %218, i32* %236, align 4
  %237 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %7, i64 0, i32 1
  %238 = bitcast float* %237 to i32*
  store i32 %217, i32* %238, align 4
  %239 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %7, i64 0, i32 2
  %240 = bitcast float* %239 to i32*
  store i32 %216, i32* %240, align 4
  %241 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %7, i64 0, i32 3
  %242 = bitcast float* %241 to i32*
  store i32 %215, i32* %242, align 4
  %243 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %6, %class.CFX_FloatRect* nonnull dereferenceable(16) %7) #13
  %244 = extractvalue { <2 x float>, <2 x float> } %243, 0
  %245 = extractvalue { <2 x float>, <2 x float> } %243, 1
  %246 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 0, i32 1
  %247 = bitcast %class.CFX_FloatRect* %246 to <2 x float>*
  store <2 x float> %244, <2 x float>* %247, align 8
  %248 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 0, i32 1, i32 2
  %249 = bitcast float* %248 to <2 x float>*
  store <2 x float> %245, <2 x float>* %249, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %235) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #13
  %250 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %250) #13
  %251 = call i32 @_ZNK14CPDF_TextState11GetTextModeEv(%class.CPDF_TextState* %11) #13
  store i32 %251, i32* %8, align 4
  %252 = call zeroext i1 @_Z29TextRenderingModeIsStrokeModeRK17TextRenderingMode(i32* nonnull dereferenceable(4) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %250) #13
  br i1 %252, label %253, label %266

253:                                              ; preds = %214
  %254 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 0, i32 0, i32 2
  %255 = call float @_ZNK14CFX_GraphState12GetLineWidthEv(%class.CFX_GraphState* %254) #13
  %256 = fmul float %255, 5.000000e-01
  %257 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %1, i64 0, i32 0, i32 1, i32 0
  %258 = bitcast float* %257 to <4 x float>*
  %259 = load <4 x float>, <4 x float>* %258, align 8
  %260 = insertelement <4 x float> undef, float %256, i32 0
  %261 = shufflevector <4 x float> %260, <4 x float> undef, <4 x i32> zeroinitializer
  %262 = fsub <4 x float> %259, %261
  %263 = fadd <4 x float> %259, %261
  %264 = shufflevector <4 x float> %262, <4 x float> %263, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %265 = bitcast float* %257 to <4 x float>*
  store <4 x float> %264, <4 x float>* %265, align 8
  br label %266

266:                                              ; preds = %214, %253
  %267 = load %class.CPDF_Font*, %class.CPDF_Font** %10, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %10, align 8
  %268 = icmp eq %class.CPDF_Font* %267, null
  br i1 %268, label %280, label %269

269:                                              ; preds = %266
  %270 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %267, i64 0, i32 0, i32 1
  %271 = load i64, i64* %270, align 8
  %272 = add nsw i64 %271, -1
  store i64 %272, i64* %270, align 8
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %280

274:                                              ; preds = %269
  %275 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %267, i64 0, i32 0
  %276 = bitcast %class.CPDF_Font* %267 to void (%"class.fxcrt::Retainable"*)***
  %277 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %276, align 8
  %278 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %277, i64 1
  %279 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %278, align 8
  call void %279(%"class.fxcrt::Retainable"* nonnull %275) #13
  br label %280

280:                                              ; preds = %266, %269, %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_TextObject6IsTextEv(%class.CPDF_TextObject* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_TextObject* @_ZN15CPDF_TextObject6AsTextEv(%class.CPDF_TextObject* readnone returned) unnamed_addr #2 align 2 {
  ret %class.CPDF_TextObject* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_TextObject* @_ZNK15CPDF_TextObject6AsTextEv(%class.CPDF_TextObject* readnone returned) unnamed_addr #2 align 2 {
  ret %class.CPDF_TextObject* %0
}

declare float* @_ZNK14CPDF_TextState9GetMatrixEv(%class.CPDF_TextState*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_TextObject11SetSegmentsEPKN5fxcrt10ByteStringERKNSt3__16vectorIfNS4_9allocatorIfEEEEm(%class.CPDF_TextObject*, %"class.fxcrt::ByteString"* nocapture readonly, %"class.std::__1::vector.17"* nocapture readonly dereferenceable(24), i64) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.fxcrt::RetainPtr.48", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::vector.212"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 2, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 3
  %15 = bitcast %"class.std::__1::vector.17"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 3, i32 0, i32 1
  %18 = bitcast float** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.fxcrt::RetainPtr.48"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.fxcrt::RetainPtr.48", %"class.fxcrt::RetainPtr.48"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %20, align 8
  %21 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 0, i32 4
  call void @_ZNK14CPDF_TextState7GetFontEv(%"class.fxcrt::RetainPtr.48"* nonnull sret %5, %class.CPDF_TextState* %21) #13
  %22 = icmp eq i64 %3, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  br label %67

26:                                               ; preds = %79, %4
  %27 = phi i64 [ 0, %4 ], [ %89, %79 ]
  %28 = add i64 %3, -1
  %29 = add i64 %27, %28
  %30 = shl i64 %29, 32
  %31 = ashr exact i64 %30, 32
  %32 = load i64, i64* %13, align 8
  %33 = load i64, i64* %10, align 8
  %34 = sub i64 %32, %33
  %35 = ashr exact i64 %34, 2
  %36 = icmp ugt i64 %31, %35
  %37 = inttoptr i64 %33 to i32*
  br i1 %36, label %38, label %40

38:                                               ; preds = %26
  %39 = sub nsw i64 %31, %35
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.212"* %9, i64 %39) #13
  br label %44

40:                                               ; preds = %26
  %41 = icmp ult i64 %31, %35
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = getelementptr inbounds i32, i32* %37, i64 %31
  store i32* %43, i32** %12, align 8
  br label %44

44:                                               ; preds = %38, %40, %42
  %45 = add i64 %30, -4294967296
  %46 = ashr exact i64 %45, 32
  %47 = load i64, i64* %18, align 8
  %48 = load i64, i64* %15, align 8
  %49 = sub i64 %47, %48
  %50 = ashr exact i64 %49, 2
  %51 = icmp ugt i64 %46, %50
  %52 = inttoptr i64 %48 to float*
  br i1 %51, label %53, label %55

53:                                               ; preds = %44
  %54 = sub nsw i64 %46, %50
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.17"* %14, i64 %54) #13
  br label %59

55:                                               ; preds = %44
  %56 = icmp ult i64 %46, %50
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = getelementptr inbounds float, float* %52, i64 %46
  store float* %58, float** %17, align 8
  br label %59

59:                                               ; preds = %53, %55, %57
  br i1 %22, label %91, label %60

60:                                               ; preds = %59
  %61 = bitcast i64* %7 to i8*
  %62 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %9, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %2, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %14, i64 0, i32 0, i32 0
  br label %106

67:                                               ; preds = %79, %23
  %68 = phi i64 [ 0, %23 ], [ %87, %79 ]
  %69 = phi i64 [ 0, %23 ], [ %89, %79 ]
  %70 = load %class.CPDF_Font*, %class.CPDF_Font** %20, align 8
  %71 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 %68, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %71, align 8, !noalias !15
  %73 = icmp eq %"class.fxcrt::StringDataTemplate"* %72, null
  %74 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %72, i64 0, i32 3, i64 0
  %75 = select i1 %73, i8* null, i8* %74
  br i1 %73, label %79, label %76

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %72, i64 0, i32 1
  %78 = load i64, i64* %77, align 8, !noalias !15
  br label %79

79:                                               ; preds = %67, %76
  %80 = phi i64 [ %78, %76 ], [ 0, %67 ]
  store i8* %75, i8** %24, align 8, !alias.scope !15
  store i64 %80, i64* %25, align 8, !alias.scope !15
  %81 = bitcast %class.CPDF_Font* %70 to i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)***
  %82 = load i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)**, i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)*** %81, align 8
  %83 = getelementptr inbounds i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)*, i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)** %82, i64 18
  %84 = load i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)*, i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)** %83, align 8
  %85 = call i64 %84(%class.CPDF_Font* %70, %"class.fxcrt::StringViewTemplate"* nonnull %6) #13
  %86 = add i64 %85, %69
  %87 = add nuw i64 %68, 1
  %88 = shl i64 %86, 32
  %89 = ashr exact i64 %88, 32
  %90 = icmp eq i64 %87, %3
  br i1 %90, label %26, label %67

91:                                               ; preds = %147, %59
  %92 = load %class.CPDF_Font*, %class.CPDF_Font** %20, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %20, align 8
  %93 = icmp eq %class.CPDF_Font* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %92, i64 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = add nsw i64 %96, -1
  store i64 %97, i64* %95, align 8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %105

99:                                               ; preds = %94
  %100 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %92, i64 0, i32 0
  %101 = bitcast %class.CPDF_Font* %92 to void (%"class.fxcrt::Retainable"*)***
  %102 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %102, i64 1
  %104 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %103, align 8
  call void %104(%"class.fxcrt::Retainable"* nonnull %100) #13
  br label %105

105:                                              ; preds = %91, %94, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  ret void

106:                                              ; preds = %147, %60
  %107 = phi i64 [ 0, %60 ], [ %149, %147 ]
  %108 = phi i64 [ 0, %60 ], [ %148, %147 ]
  %109 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 %107, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %109, align 8, !noalias !18
  %111 = icmp eq %"class.fxcrt::StringDataTemplate"* %110, null
  %112 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %110, i64 0, i32 3, i64 0
  %113 = select i1 %111, i8* null, i8* %112
  br i1 %111, label %114, label %115

114:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #13
  store i64 0, i64* %7, align 8
  br label %132

115:                                              ; preds = %106
  %116 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %110, i64 0, i32 1
  %117 = load i64, i64* %116, align 8, !noalias !18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #13
  store i64 0, i64* %7, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %132, label %119

119:                                              ; preds = %115, %119
  %120 = phi i64 [ %127, %119 ], [ %108, %115 ]
  %121 = load %class.CPDF_Font*, %class.CPDF_Font** %20, align 8
  store i8* %113, i8** %62, align 8
  store i64 %117, i64* %63, align 8
  %122 = bitcast %class.CPDF_Font* %121 to i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)***
  %123 = load i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)**, i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)*** %122, align 8
  %124 = getelementptr inbounds i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)*, i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)** %123, i64 17
  %125 = load i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)*, i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)** %124, align 8
  %126 = call i32 %125(%class.CPDF_Font* %121, %"class.fxcrt::StringViewTemplate"* nonnull %8, i64* nonnull %7) #13
  %127 = add i64 %120, 1
  %128 = load i32*, i32** %64, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 %120
  store i32 %126, i32* %129, align 4
  %130 = load i64, i64* %7, align 8
  %131 = icmp ult i64 %130, %117
  br i1 %131, label %119, label %132

132:                                              ; preds = %119, %114, %115
  %133 = phi i64 [ %108, %115 ], [ %108, %114 ], [ %127, %119 ]
  %134 = icmp eq i64 %107, %28
  br i1 %134, label %147, label %135

135:                                              ; preds = %132
  %136 = load float*, float** %65, align 8
  %137 = getelementptr inbounds float, float* %136, i64 %107
  %138 = bitcast float* %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = add i64 %133, -1
  %141 = load float*, float** %66, align 8
  %142 = getelementptr inbounds float, float* %141, i64 %140
  %143 = bitcast float* %142 to i32*
  store i32 %139, i32* %143, align 4
  %144 = add i64 %133, 1
  %145 = load i32*, i32** %64, align 8
  %146 = getelementptr inbounds i32, i32* %145, i64 %133
  store i32 -1, i32* %146, align 4
  br label %147

147:                                              ; preds = %132, %135
  %148 = phi i64 [ %144, %135 ], [ %133, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #13
  %149 = add nuw i64 %107, 1
  %150 = icmp eq i64 %149, %3
  br i1 %150, label %91, label %106
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_TextObject7SetTextERKN5fxcrt10ByteStringE(%class.CPDF_TextObject*, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = alloca %"class.std::__1::vector.17", align 8
  %5 = bitcast %"class.std::__1::vector.17"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #13
  call void @_ZN15CPDF_TextObject11SetSegmentsEPKN5fxcrt10ByteStringERKNSt3__16vectorIfNS4_9allocatorIfEEEEm(%class.CPDF_TextObject* %0, %"class.fxcrt::ByteString"* %1, %"class.std::__1::vector.17"* nonnull dereferenceable(24) %4, i64 1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  %6 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  call void @_ZN15CPDF_TextObject16CalcPositionDataEf(%class.CFX_PTemplate* nonnull sret %3, %class.CPDF_TextObject* %0, float 1.000000e+00) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_TextObject18RecalcPositionDataEv(%class.CPDF_TextObject*) local_unnamed_addr #3 align 2 {
  %2 = alloca %class.CFX_PTemplate, align 4
  %3 = bitcast %class.CFX_PTemplate* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #13
  call void @_ZN15CPDF_TextObject16CalcPositionDataEf(%class.CFX_PTemplate* nonnull sret %2, %class.CPDF_TextObject* %0, float 1.000000e+00)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK15CPDF_TextObject12GetCharWidthEj(%class.CPDF_TextObject*, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr.48", align 8
  %4 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 0, i32 4
  %5 = tail call float @_ZNK14CPDF_TextState11GetFontSizeEv(%class.CPDF_TextState* %4) #13
  %6 = fdiv float %5, 1.000000e+03
  %7 = bitcast %"class.fxcrt::RetainPtr.48"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.fxcrt::RetainPtr.48", %"class.fxcrt::RetainPtr.48"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %8, align 8
  call void @_ZNK14CPDF_TextState7GetFontEv(%"class.fxcrt::RetainPtr.48"* nonnull sret %3, %class.CPDF_TextState* %4) #13
  %9 = load %class.CPDF_Font*, %class.CPDF_Font** %8, align 8
  %10 = bitcast %class.CPDF_Font* %9 to %class.CPDF_CIDFont* (%class.CPDF_Font*)***
  %11 = load %class.CPDF_CIDFont* (%class.CPDF_Font*)**, %class.CPDF_CIDFont* (%class.CPDF_Font*)*** %10, align 8
  %12 = getelementptr inbounds %class.CPDF_CIDFont* (%class.CPDF_Font*)*, %class.CPDF_CIDFont* (%class.CPDF_Font*)** %11, i64 13
  %13 = load %class.CPDF_CIDFont* (%class.CPDF_Font*)*, %class.CPDF_CIDFont* (%class.CPDF_Font*)** %12, align 8
  %14 = call %class.CPDF_CIDFont* %13(%class.CPDF_Font* %9) #13
  %15 = icmp eq %class.CPDF_CIDFont* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = call zeroext i1 @_ZNK12CPDF_CIDFont13IsVertWritingEv(%class.CPDF_CIDFont* nonnull %14) #13
  br i1 %17, label %26, label %18

18:                                               ; preds = %2, %16
  %19 = load %class.CPDF_Font*, %class.CPDF_Font** %8, align 8
  %20 = bitcast %class.CPDF_Font* %19 to i32 (%class.CPDF_Font*, i32)***
  %21 = load i32 (%class.CPDF_Font*, i32)**, i32 (%class.CPDF_Font*, i32)*** %20, align 8
  %22 = getelementptr inbounds i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %21, i64 24
  %23 = load i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %22, align 8
  %24 = call i32 %23(%class.CPDF_Font* %19, i32 %1) #13
  %25 = sitofp i32 %24 to float
  br label %30

26:                                               ; preds = %16
  %27 = call zeroext i16 @_ZNK12CPDF_CIDFont15CIDFromCharCodeEj(%class.CPDF_CIDFont* nonnull %14, i32 %1) #13
  %28 = call signext i16 @_ZNK12CPDF_CIDFont12GetVertWidthEt(%class.CPDF_CIDFont* nonnull %14, i16 zeroext %27) #13
  %29 = sitofp i16 %28 to float
  br label %30

30:                                               ; preds = %26, %18
  %31 = phi float [ %29, %26 ], [ %25, %18 ]
  %32 = fmul float %6, %31
  %33 = load %class.CPDF_Font*, %class.CPDF_Font** %8, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %8, align 8
  %34 = icmp eq %class.CPDF_Font* %33, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %33, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add nsw i64 %37, -1
  store i64 %38, i64* %36, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %35
  %41 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %33, i64 0, i32 0
  %42 = bitcast %class.CPDF_Font* %33 to void (%"class.fxcrt::Retainable"*)***
  %43 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %43, i64 1
  %45 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %44, align 8
  call void %45(%"class.fxcrt::Retainable"* nonnull %41) #13
  br label %46

46:                                               ; preds = %30, %35, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret float %32
}

declare signext i16 @_ZNK12CPDF_CIDFont12GetVertWidthEt(%class.CPDF_CIDFont*, i16 zeroext) local_unnamed_addr #4

declare void @_ZNK14CPDF_TextState7GetFontEv(%"class.fxcrt::RetainPtr.48"* sret, %class.CPDF_TextState*) local_unnamed_addr #4

declare float @_ZNK14CPDF_TextState11GetFontSizeEv(%class.CPDF_TextState*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK15CPDF_TextObject17GetTextRenderModeEv(%class.CPDF_TextObject*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 0, i32 4
  %3 = tail call i32 @_ZNK14CPDF_TextState11GetTextModeEv(%class.CPDF_TextState* %2) #13
  ret i32 %3
}

declare i32 @_ZNK14CPDF_TextState11GetTextModeEv(%class.CPDF_TextState*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_TextObject17SetTextRenderModeE17TextRenderingMode(%class.CPDF_TextObject*, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 0, i32 4
  tail call void @_ZN14CPDF_TextState11SetTextModeE17TextRenderingMode(%class.CPDF_TextState* %3, i32 %1) #13
  %4 = getelementptr inbounds %class.CPDF_TextObject, %class.CPDF_TextObject* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %4, align 8
  ret void
}

declare void @_ZN14CPDF_TextState11SetTextModeE17TextRenderingMode(%class.CPDF_TextState*, i32) local_unnamed_addr #4

declare i32 @_ZNK12CPDF_CIDFont11GetCharSizeEj(%class.CPDF_CIDFont*, i32) local_unnamed_addr #4

declare float @_ZNK14CPDF_TextState12GetWordSpaceEv(%class.CPDF_TextState*) local_unnamed_addr #4

declare float @_ZNK14CPDF_TextState12GetCharSpaceEv(%class.CPDF_TextState*) local_unnamed_addr #4

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #4

declare zeroext i1 @_Z29TextRenderingModeIsStrokeModeRK17TextRenderingMode(i32* dereferenceable(4)) local_unnamed_addr #4

declare float @_ZNK14CFX_GraphState12GetLineWidthEv(%class.CFX_GraphState*) local_unnamed_addr #4

declare zeroext i1 @_ZNK15CPDF_PageObject6IsPathEv(%class.CPDF_PageObject*) unnamed_addr #4

declare zeroext i1 @_ZNK15CPDF_PageObject7IsImageEv(%class.CPDF_PageObject*) unnamed_addr #4

declare zeroext i1 @_ZNK15CPDF_PageObject9IsShadingEv(%class.CPDF_PageObject*) unnamed_addr #4

declare zeroext i1 @_ZNK15CPDF_PageObject6IsFormEv(%class.CPDF_PageObject*) unnamed_addr #4

declare %class.CPDF_PathObject* @_ZN15CPDF_PageObject6AsPathEv(%class.CPDF_PageObject*) unnamed_addr #4

declare %class.CPDF_PathObject* @_ZNK15CPDF_PageObject6AsPathEv(%class.CPDF_PageObject*) unnamed_addr #4

declare %class.CPDF_ImageObject* @_ZN15CPDF_PageObject7AsImageEv(%class.CPDF_PageObject*) unnamed_addr #4

declare %class.CPDF_ImageObject* @_ZNK15CPDF_PageObject7AsImageEv(%class.CPDF_PageObject*) unnamed_addr #4

declare %class.CPDF_ShadingObject* @_ZN15CPDF_PageObject9AsShadingEv(%class.CPDF_PageObject*) unnamed_addr #4

declare %class.CPDF_ShadingObject* @_ZNK15CPDF_PageObject9AsShadingEv(%class.CPDF_PageObject*) unnamed_addr #4

declare %class.CPDF_FormObject* @_ZN15CPDF_PageObject6AsFormEv(%class.CPDF_PageObject*) unnamed_addr #4

declare %class.CPDF_FormObject* @_ZNK15CPDF_PageObject6AsFormEv(%class.CPDF_PageObject*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.212"*, i32*, i32*) local_unnamed_addr #3 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.212"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.212"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.212"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.212"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #15
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.212"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.17"*, float*, float*) local_unnamed_addr #3 comdat align 2 {
  %4 = ptrtoint float* %2 to i64
  %5 = ptrtoint float* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast float** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to float*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds float, float* %1, i64 %22
  %25 = select i1 %23, float* %24, float* %2
  %26 = ptrtoint float* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast float* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast float* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to float*
  %43 = getelementptr inbounds float, float* %42, i64 %39
  %44 = ptrtoint float* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds float, float* %16, i64 %28
  store float* %48, float** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %53 = bitcast float** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.17"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #15
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to float*
  %76 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %77 = bitcast float** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.17"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds float, float* %75, i64 %72
  store float* %79, float** %8, align 8
  %80 = bitcast float** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast float* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds float, float* %75, i64 %84
  %87 = ptrtoint float* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.212"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #13
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.212"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.212"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #15
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #15
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #13
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #13
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.17"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast float** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to float*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds float, float* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr float, float* %13, i64 %18
  %20 = bitcast float* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #13
  %26 = ptrtoint float* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #15
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #15
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to float*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi float* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds float, float* %57, i64 %33
  %59 = getelementptr inbounds float, float* %57, i64 %56
  %60 = getelementptr inbounds float, float* %58, i64 %1
  %61 = bitcast float* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #13
  %63 = ptrtoint float* %59 to i64
  %64 = ptrtoint float* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %66 = load float*, float** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint float* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds float, float* %58, i64 %71
  %73 = ptrtoint float* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast float* %72 to i8*
  %77 = bitcast float* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #13
  %78 = load float*, float** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi float* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq float* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast float* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK15CPDF_TextObject13GetTextMatrixEv: argument 0"}
!8 = distinct !{!8, !"_ZNK15CPDF_TextObject13GetTextMatrixEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!11 = distinct !{!11, !"_ZNK10CFX_MatrixmlERKS_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK15CPDF_TextObject13GetTextMatrixEv: argument 0"}
!14 = distinct !{!14, !"_ZNK15CPDF_TextObject13GetTextMatrixEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
