; ModuleID = '../../components/autofill/core/browser/autofill_driver_factory.cc'
source_filename = "../../components/autofill/core/browser/autofill_driver_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::AutofillDriverFactory" = type { %"class.autofill::AutofillClient"*, %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.autofill::AutofillClient" = type { %"class.autofill::RiskDataLoader" }
%"class.autofill::RiskDataLoader" = type { i32 (...)** }
%"class.autofill::AutofillDriver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::pair.20" = type { i8*, i8* }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i8*, %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.autofill::AutofillDriver"* }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.7"*, i8, [7 x i8] }>
%"class.std::__1::allocator.7" = type { i8 }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS2_JNS_4pairIS2_DnEEEEENSM_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_S2_EEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE14__erase_uniqueIS2_EEmRKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_S2_EEEE = comdat any

@_ZN8autofill21AutofillDriverFactoryC1EPNS_14AutofillClientE = hidden unnamed_addr alias void (%"class.autofill::AutofillDriverFactory"*, %"class.autofill::AutofillClient"*), void (%"class.autofill::AutofillDriverFactory"*, %"class.autofill::AutofillClient"*)* @_ZN8autofill21AutofillDriverFactoryC2EPNS_14AutofillClientE
@_ZN8autofill21AutofillDriverFactoryD1Ev = hidden unnamed_addr alias void (%"class.autofill::AutofillDriverFactory"*), void (%"class.autofill::AutofillDriverFactory"*)* @_ZN8autofill21AutofillDriverFactoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill21AutofillDriverFactoryC2EPNS_14AutofillClientE(%"class.autofill::AutofillDriverFactory"* nocapture, %"class.autofill::AutofillClient"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AutofillDriverFactory", %"class.autofill::AutofillDriverFactory"* %0, i64 0, i32 0
  store %"class.autofill::AutofillClient"* %1, %"class.autofill::AutofillClient"** %3, align 8
  %4 = getelementptr inbounds %"class.autofill::AutofillDriverFactory", %"class.autofill::AutofillDriverFactory"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.autofill::AutofillDriverFactory", %"class.autofill::AutofillDriverFactory"* %0, i64 0, i32 1, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.11"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_map"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #8
  store i32 1065353216, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill21AutofillDriverFactoryD2Ev(%"class.autofill::AutofillDriverFactory"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillDriverFactory", %"class.autofill::AutofillDriverFactory"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base"* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1, %18
  %6 = phi %"struct.std::__1::__hash_node_base"* [ %8, %18 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %6, i64 3
  %10 = bitcast %"struct.std::__1::__hash_node_base"* %9 to %"class.autofill::AutofillDriver"**
  %11 = load %"class.autofill::AutofillDriver"*, %"class.autofill::AutofillDriver"** %10, align 8
  store %"class.autofill::AutofillDriver"* null, %"class.autofill::AutofillDriver"** %10, align 8
  %12 = icmp eq %"class.autofill::AutofillDriver"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %5
  %14 = bitcast %"class.autofill::AutofillDriver"* %11 to void (%"class.autofill::AutofillDriver"*)***
  %15 = load void (%"class.autofill::AutofillDriver"*)**, void (%"class.autofill::AutofillDriver"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.autofill::AutofillDriver"*)*, void (%"class.autofill::AutofillDriver"*)** %15, i64 1
  %17 = load void (%"class.autofill::AutofillDriver"*)*, void (%"class.autofill::AutofillDriver"*)** %16, align 8
  tail call void %17(%"class.autofill::AutofillDriver"* nonnull %11) #8
  br label %18

18:                                               ; preds = %13, %5
  %19 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  %20 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  br i1 %20, label %21, label %5

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"class.autofill::AutofillDriverFactory", %"class.autofill::AutofillDriverFactory"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #9
  br label %27

27:                                               ; preds = %21, %25
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.autofill::AutofillDriver"* @_ZN8autofill21AutofillDriverFactory12DriverForKeyEPv(%"class.autofill::AutofillDriverFactory"* nocapture readonly, i8*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint i8* %1 to i64
  %4 = lshr i64 %3, 32
  %5 = shl i64 %3, 3
  %6 = and i64 %5, 4294967288
  %7 = add nuw nsw i64 %6, 8
  %8 = xor i64 %7, %4
  %9 = mul i64 %8, -7070675565921424023
  %10 = lshr i64 %9, 47
  %11 = xor i64 %9, %4
  %12 = xor i64 %11, %10
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %14, %13
  %16 = mul i64 %15, -7070675565921424023
  %17 = getelementptr inbounds %"class.autofill::AutofillDriverFactory", %"class.autofill::AutofillDriverFactory"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %2
  %21 = tail call i64 @llvm.ctpop.i64(i64 %18) #8, !range !2
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = add i64 %18, -1
  %25 = and i64 %24, %16
  br label %30

26:                                               ; preds = %20
  %27 = icmp ult i64 %16, %18
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = urem i64 %16, %18
  br label %30

30:                                               ; preds = %28, %26, %23
  %31 = phi i64 [ %25, %23 ], [ %29, %28 ], [ %16, %26 ]
  %32 = getelementptr inbounds %"class.autofill::AutofillDriverFactory", %"class.autofill::AutofillDriverFactory"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, i64 %31
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %72, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %72, label %41

41:                                               ; preds = %37
  %42 = add i64 %18, -1
  br label %43

43:                                               ; preds = %64, %41
  %44 = phi %"struct.std::__1::__hash_node_base"* [ %39, %41 ], [ %66, %64 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %46 = bitcast %"struct.std::__1::__hash_node_base"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %16
  br i1 %48, label %59, label %49

49:                                               ; preds = %43
  br i1 %22, label %52, label %50

50:                                               ; preds = %49
  %51 = and i64 %47, %42
  br label %56

52:                                               ; preds = %49
  %53 = icmp ult i64 %47, %18
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = urem i64 %47, %18
  br label %56

56:                                               ; preds = %54, %52, %50
  %57 = phi i64 [ %51, %50 ], [ %55, %54 ], [ %47, %52 ]
  %58 = icmp eq i64 %57, %31
  br i1 %58, label %64, label %72

59:                                               ; preds = %43
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 2
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, %1
  br i1 %63, label %68, label %64

64:                                               ; preds = %59, %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base"* %66, null
  br i1 %67, label %72, label %43

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 3
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"class.autofill::AutofillDriver"**
  %71 = load %"class.autofill::AutofillDriver"*, %"class.autofill::AutofillDriver"** %70, align 8
  br label %72

72:                                               ; preds = %64, %56, %37, %2, %30, %68
  %73 = phi %"class.autofill::AutofillDriver"* [ %71, %68 ], [ null, %30 ], [ null, %2 ], [ null, %37 ], [ null, %56 ], [ null, %64 ]
  ret %"class.autofill::AutofillDriver"* %73
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill21AutofillDriverFactory18NavigationFinishedEv(%"class.autofill::AutofillDriverFactory"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillDriverFactory", %"class.autofill::AutofillDriverFactory"* %0, i64 0, i32 0
  %3 = load %"class.autofill::AutofillClient"*, %"class.autofill::AutofillClient"** %2, align 8
  %4 = bitcast %"class.autofill::AutofillClient"* %3 to void (%"class.autofill::AutofillClient"*, i32)***
  %5 = load void (%"class.autofill::AutofillClient"*, i32)**, void (%"class.autofill::AutofillClient"*, i32)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.autofill::AutofillClient"*, i32)*, void (%"class.autofill::AutofillClient"*, i32)** %5, i64 51
  %7 = load void (%"class.autofill::AutofillClient"*, i32)*, void (%"class.autofill::AutofillClient"*, i32)** %6, align 8
  tail call void %7(%"class.autofill::AutofillClient"* %3, i32 5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill21AutofillDriverFactory9TabHiddenEv(%"class.autofill::AutofillDriverFactory"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillDriverFactory", %"class.autofill::AutofillDriverFactory"* %0, i64 0, i32 0
  %3 = load %"class.autofill::AutofillClient"*, %"class.autofill::AutofillClient"** %2, align 8
  %4 = bitcast %"class.autofill::AutofillClient"* %3 to void (%"class.autofill::AutofillClient"*, i32)***
  %5 = load void (%"class.autofill::AutofillClient"*, i32)**, void (%"class.autofill::AutofillClient"*, i32)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.autofill::AutofillClient"*, i32)*, void (%"class.autofill::AutofillClient"*, i32)** %5, i64 51
  %7 = load void (%"class.autofill::AutofillClient"*, i32)*, void (%"class.autofill::AutofillClient"*, i32)** %6, align 8
  tail call void %7(%"class.autofill::AutofillClient"* %3, i32 8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill21AutofillDriverFactory9AddForKeyEPvRKN4base17RepeatingCallbackIFNSt3__110unique_ptrINS_14AutofillDriverENS4_14default_deleteIS6_EEEEvEEE(%"class.autofill::AutofillDriverFactory"*, i8*, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.20", align 8
  %5 = ptrtoint i8* %1 to i64
  %6 = bitcast %"struct.std::__1::pair.20"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = bitcast %"struct.std::__1::pair.20"* %4 to i64*
  store i64 %5, i64* %7, align 8, !alias.scope !3
  %8 = getelementptr inbounds %"struct.std::__1::pair.20", %"struct.std::__1::pair.20"* %4, i64 0, i32 1
  store i8* null, i8** %8, align 8, !alias.scope !3
  %9 = getelementptr inbounds %"class.autofill::AutofillDriverFactory", %"class.autofill::AutofillDriverFactory"* %0, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"struct.std::__1::pair.20", %"struct.std::__1::pair.20"* %4, i64 0, i32 0
  %11 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS2_JNS_4pairIS2_DnEEEEENSM_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %9, i8** nonnull dereferenceable(8) %10, %"struct.std::__1::pair.20"* nonnull dereferenceable(16) %4) #8
  %12 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %11, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %3
  %16 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %11, 0
  %17 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %17, align 8
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %18, i64 0, i32 1
  %20 = bitcast void ()** %19 to %"class.autofill::AutofillDriver"* (%"class.base::internal::BindStateBase"*)**
  %21 = load %"class.autofill::AutofillDriver"* (%"class.base::internal::BindStateBase"*)*, %"class.autofill::AutofillDriver"* (%"class.base::internal::BindStateBase"*)** %20, align 8
  %22 = call %"class.autofill::AutofillDriver"* %21(%"class.base::internal::BindStateBase"* %18) #8
  %23 = ptrtoint %"class.autofill::AutofillDriver"* %22 to i64
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %16, i64 3
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %24 to %"class.autofill::AutofillDriver"**
  %26 = load %"class.autofill::AutofillDriver"*, %"class.autofill::AutofillDriver"** %25, align 8
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %24 to i64*
  store i64 %23, i64* %27, align 8
  %28 = icmp eq %"class.autofill::AutofillDriver"* %26, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %15
  %30 = bitcast %"class.autofill::AutofillDriver"* %26 to void (%"class.autofill::AutofillDriver"*)***
  %31 = load void (%"class.autofill::AutofillDriver"*)**, void (%"class.autofill::AutofillDriver"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.autofill::AutofillDriver"*)*, void (%"class.autofill::AutofillDriver"*)** %31, i64 1
  %33 = load void (%"class.autofill::AutofillDriver"*)*, void (%"class.autofill::AutofillDriver"*)** %32, align 8
  call void %33(%"class.autofill::AutofillDriver"* nonnull %26) #8
  br label %34

34:                                               ; preds = %15, %29, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill21AutofillDriverFactory12DeleteForKeyEPv(%"class.autofill::AutofillDriverFactory"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds %"class.autofill::AutofillDriverFactory", %"class.autofill::AutofillDriverFactory"* %0, i64 0, i32 1, i32 0
  %5 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE14__erase_uniqueIS2_EEmRKT_(%"class.std::__1::__hash_table"* %4, i8** nonnull dereferenceable(8) %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS2_JNS_4pairIS2_DnEEEEENSM_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i8** dereferenceable(8), %"struct.std::__1::pair.20"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i8** %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = inttoptr i64 %5 to i8*
  br i1 %21, label %67, label %23

23:                                               ; preds = %3
  %24 = tail call i64 @llvm.ctpop.i64(i64 %20) #8, !range !2
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %20, -1
  %28 = and i64 %18, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %18, %20
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %18, %20
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %18, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %67, label %40

40:                                               ; preds = %33
  %41 = add i64 %20, -1
  br label %42

42:                                               ; preds = %40, %62
  %43 = phi %"struct.std::__1::__hash_node_base"* [ %45, %62 ], [ %38, %40 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base"* %45, null
  br i1 %46, label %67, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %18
  br i1 %51, label %62, label %52

52:                                               ; preds = %47
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %41
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %20
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %20
  br label %59

59:                                               ; preds = %53, %55, %57
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %62, label %67

62:                                               ; preds = %47, %59
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, %22
  br i1 %66, label %157, label %42

67:                                               ; preds = %42, %59, %33, %3
  %68 = phi i64 [ %34, %33 ], [ -6148914691236517206, %3 ], [ %34, %59 ], [ %34, %42 ]
  %69 = tail call i8* @_Znwm(i64 32) #9, !noalias !6
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast %"struct.std::__1::pair.20"* %2 to i64*
  %72 = load i64, i64* %71, align 8, !noalias !6
  %73 = bitcast i8* %70 to i64*
  store i64 %72, i64* %73, align 8, !noalias !6
  %74 = getelementptr inbounds i8, i8* %69, i64 24
  %75 = bitcast i8* %74 to i64*
  store i64 0, i64* %75, align 8, !noalias !6
  %76 = getelementptr inbounds i8, i8* %69, i64 8
  %77 = bitcast i8* %76 to i64*
  store i64 %18, i64* %77, align 8, !noalias !6
  %78 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %78, align 8, !noalias !6
  %79 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 1
  %82 = uitofp i64 %81 to float
  %83 = uitofp i64 %20 to float
  %84 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %85 = load float, float* %84, align 4
  %86 = fmul float %85, %83
  %87 = fcmp olt float %86, %82
  %88 = or i1 %21, %87
  br i1 %88, label %89, label %112

89:                                               ; preds = %67
  %90 = shl i64 %20, 1
  %91 = icmp ult i64 %20, 3
  %92 = tail call i64 @llvm.ctpop.i64(i64 %20) #8, !range !2
  %93 = icmp ugt i64 %92, 1
  %94 = or i1 %91, %93
  %95 = zext i1 %94 to i64
  %96 = or i64 %90, %95
  %97 = fdiv float %82, %85
  %98 = tail call float @llvm.ceil.f32(float %97) #8
  %99 = fptoui float %98 to i64
  %100 = icmp ult i64 %96, %99
  %101 = select i1 %100, i64 %99, i64 %96
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %101)
  %102 = load i64, i64* %19, align 8
  %103 = tail call i64 @llvm.ctpop.i64(i64 %102) #8, !range !2
  %104 = icmp ugt i64 %103, 1
  br i1 %104, label %108, label %105

105:                                              ; preds = %89
  %106 = add i64 %102, -1
  %107 = and i64 %106, %18
  br label %112

108:                                              ; preds = %89
  %109 = icmp ult i64 %18, %102
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = urem i64 %18, %102
  br label %112

112:                                              ; preds = %110, %108, %105, %67
  %113 = phi i64 [ %20, %67 ], [ %102, %105 ], [ %102, %108 ], [ %102, %110 ]
  %114 = phi i64 [ %68, %67 ], [ %107, %105 ], [ %18, %108 ], [ %111, %110 ]
  %115 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %115, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %116, i64 %114
  %118 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, align 8
  %119 = icmp eq %"struct.std::__1::__hash_node_base"* %118, null
  br i1 %119, label %120, label %146

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i8* %69 to i64*
  store i64 %123, i64* %124, align 8
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i8**
  store i8* %69, i8** %125, align 8
  store %"struct.std::__1::__hash_node_base"* %121, %"struct.std::__1::__hash_node_base"** %117, align 8
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %78, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %153, label %128

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 1
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = tail call i64 @llvm.ctpop.i64(i64 %113) #8, !range !2
  %133 = icmp ugt i64 %132, 1
  br i1 %133, label %137, label %134

134:                                              ; preds = %128
  %135 = add i64 %113, -1
  %136 = and i64 %131, %135
  br label %141

137:                                              ; preds = %128
  %138 = icmp ult i64 %131, %113
  br i1 %138, label %141, label %139

139:                                              ; preds = %137
  %140 = urem i64 %131, %113
  br label %141

141:                                              ; preds = %134, %137, %139
  %142 = phi i64 [ %136, %134 ], [ %140, %139 ], [ %131, %137 ]
  %143 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %115, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %143, i64 %142
  %145 = bitcast %"struct.std::__1::__hash_node_base"** %144 to i8**
  br label %151

146:                                              ; preds = %112
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast i8* %69 to i64*
  store i64 %148, i64* %149, align 8
  %150 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i8**
  br label %151

151:                                              ; preds = %141, %146
  %152 = phi i8** [ %150, %146 ], [ %145, %141 ]
  store i8* %69, i8** %152, align 8
  br label %153

153:                                              ; preds = %151, %120
  %154 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base"*
  %155 = load i64, i64* %79, align 8
  %156 = add i64 %155, 1
  store i64 %156, i64* %79, align 8
  br label %157

157:                                              ; preds = %62, %153
  %158 = phi i8 [ 1, %153 ], [ 0, %62 ]
  %159 = phi %"struct.std::__1::__hash_node_base"* [ %154, %153 ], [ %45, %62 ]
  %160 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %159, 0
  %161 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %160, i8 %158, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %161
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #8
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #8, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #8
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #8, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #8
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #10
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #9
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !9

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #8, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i8**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  %112 = load i8*, i8** %102, align 8
  %113 = load i8*, i8** %111, align 8
  %114 = icmp eq i8* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #9
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE14__erase_uniqueIS2_EEmRKT_(%"class.std::__1::__hash_table"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.24", align 8
  %4 = bitcast i8** %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = inttoptr i64 %5 to i8*
  br i1 %21, label %92, label %23

23:                                               ; preds = %2
  %24 = tail call i64 @llvm.ctpop.i64(i64 %20) #8, !range !2
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %20, -1
  %28 = and i64 %18, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %18, %20
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %18, %20
  br label %33

33:                                               ; preds = %31, %29, %26
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %18, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %92, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %42, null
  br i1 %43, label %92, label %44

44:                                               ; preds = %40
  %45 = add i64 %20, -1
  br label %46

46:                                               ; preds = %67, %44
  %47 = phi %"struct.std::__1::__hash_node_base"* [ %42, %44 ], [ %69, %67 ]
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %18
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %45
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %20
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %20
  br label %59

59:                                               ; preds = %57, %55, %53
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %67, label %92

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, %22
  br i1 %66, label %71, label %67

67:                                               ; preds = %62, %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base"* %69, null
  br i1 %70, label %92, label %46

71:                                               ; preds = %62
  %72 = bitcast %"class.std::__1::unique_ptr.24"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_S2_EEEE(%"class.std::__1::unique_ptr.24"* nonnull sret %3, %"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node_base"* nonnull %47) #8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %3, i64 0, i32 0, i32 0, i32 0
  %74 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %73, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node"* %74, null
  br i1 %75, label %91, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %78 = load i8, i8* %77, align 8, !range !11
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %74, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %82 = load %"class.autofill::AutofillDriver"*, %"class.autofill::AutofillDriver"** %81, align 8
  store %"class.autofill::AutofillDriver"* null, %"class.autofill::AutofillDriver"** %81, align 8
  %83 = icmp eq %"class.autofill::AutofillDriver"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = bitcast %"class.autofill::AutofillDriver"* %82 to void (%"class.autofill::AutofillDriver"*)***
  %86 = load void (%"class.autofill::AutofillDriver"*)**, void (%"class.autofill::AutofillDriver"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.autofill::AutofillDriver"*)*, void (%"class.autofill::AutofillDriver"*)** %86, i64 1
  %88 = load void (%"class.autofill::AutofillDriver"*)*, void (%"class.autofill::AutofillDriver"*)** %87, align 8
  call void %88(%"class.autofill::AutofillDriver"* nonnull %82) #8
  br label %89

89:                                               ; preds = %84, %80, %76
  %90 = bitcast %"struct.std::__1::__hash_node"* %74 to i8*
  call void @_ZdlPv(i8* %90) #9
  br label %91

91:                                               ; preds = %71, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72)
  br label %92

92:                                               ; preds = %59, %67, %40, %2, %33, %91
  %93 = phi i64 [ 1, %91 ], [ 0, %33 ], [ 0, %2 ], [ 0, %40 ], [ 0, %67 ], [ 0, %59 ]
  ret i64 %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_S2_EEEE(%"class.std::__1::unique_ptr.24"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #8, !range !2
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.4"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.24"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.7"** %98 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %30, %"class.std::__1::__compressed_pair.4"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__19make_pairIRPvDnEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS4_IT0_E4typeEEEOS5_OS8_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__19make_pairIRPvDnEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS4_IT0_E4typeEEEOS5_OS8_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashINS_4pairIS2_DnEEJEEENS3_INS_11__hash_nodeIS9_S2_EENS_22__hash_node_destructorINSI_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvNS_10unique_ptrIN8autofill14AutofillDriverENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIS2_S9_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S9_SE_SC_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashINS_4pairIS2_DnEEJEEENS3_INS_11__hash_nodeIS9_S2_EENS_22__hash_node_destructorINSI_ISP_EEEEEEmOT_DpOT0_"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = !{i8 0, i8 2}
