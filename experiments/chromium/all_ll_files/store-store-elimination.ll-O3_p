; ModuleID = '../../v8/src/compiler/store-store-elimination.cc'
source_filename = "../../v8/src/compiler/store-store-elimination.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::JSGraph" = type { %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::JSOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::MachineGraph" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.8" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::MachineOperatorBuilder" = type <{ %"class.v8::internal::Zone"*, %"struct.v8::internal::compiler::MachineOperatorGlobalCache"*, i8, [3 x i8], %"class.v8::base::Flags.11", %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements", [4 x i8] }>
%"struct.v8::internal::compiler::MachineOperatorGlobalCache" = type opaque
%"class.v8::base::Flags.11" = type { i32 }
%"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements" = type { i32, %"class.v8::base::EnumSet", %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.v8::internal::compiler::CommonNodeCache" = type { %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.56", %"class.v8::internal::compiler::NodeCache.83" }
%"class.v8::internal::compiler::NodeCache" = type { %"class.v8::internal::ZoneUnorderedMap" }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.12", %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.26", [4 x i8] }>
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.v8::internal::ZoneAllocator.19" }
%"class.v8::internal::ZoneAllocator.19" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.v8::internal::ZoneAllocator.23" }
%"class.v8::internal::ZoneAllocator.23" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { float }
%"class.v8::internal::compiler::NodeCache.29" = type { %"class.v8::internal::ZoneUnorderedMap.30" }
%"class.v8::internal::ZoneUnorderedMap.30" = type { %"class.std::__1::unordered_map.31" }
%"class.std::__1::unordered_map.31" = type { %"class.std::__1::__hash_table.32" }
%"class.std::__1::__hash_table.32" = type <{ %"class.std::__1::unique_ptr.33", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50", [4 x i8] }>
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base.36"** }
%"struct.std::__1::__hash_node_base.36" = type { %"struct.std::__1::__hash_node_base.36"* }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::__bucket_list_deallocator.38" }
%"class.std::__1::__bucket_list_deallocator.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.v8::internal::ZoneAllocator.41" }
%"class.v8::internal::ZoneAllocator.41" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43", %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base.36" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.v8::internal::ZoneAllocator.45" }
%"class.v8::internal::ZoneAllocator.45" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::compiler::NodeCache.56" = type { %"class.v8::internal::ZoneUnorderedMap.57" }
%"class.v8::internal::ZoneUnorderedMap.57" = type { %"class.std::__1::unordered_map.58" }
%"class.std::__1::unordered_map.58" = type { %"class.std::__1::__hash_table.59" }
%"class.std::__1::__hash_table.59" = type <{ %"class.std::__1::unique_ptr.60", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.77", [4 x i8] }>
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62", %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base.63"** }
%"struct.std::__1::__hash_node_base.63" = type { %"struct.std::__1::__hash_node_base.63"* }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.std::__1::__bucket_list_deallocator.65" }
%"class.std::__1::__bucket_list_deallocator.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.v8::internal::ZoneAllocator.68" }
%"class.v8::internal::ZoneAllocator.68" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70", %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base.63" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.v8::internal::ZoneAllocator.72" }
%"class.v8::internal::ZoneAllocator.72" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::compiler::NodeCache.83" = type { %"class.v8::internal::ZoneUnorderedMap.84" }
%"class.v8::internal::ZoneUnorderedMap.84" = type { %"class.std::__1::unordered_map.85" }
%"class.std::__1::unordered_map.85" = type { %"class.std::__1::__hash_table.86" }
%"class.std::__1::__hash_table.86" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.104", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base.90"** }
%"struct.std::__1::__hash_node_base.90" = type { %"struct.std::__1::__hash_node_base.90"* }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::__bucket_list_deallocator.92" }
%"class.std::__1::__bucket_list_deallocator.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.v8::internal::ZoneAllocator.95" }
%"class.v8::internal::ZoneAllocator.95" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base.90" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.v8::internal::ZoneAllocator.99" }
%"class.v8::internal::ZoneAllocator.99" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.115", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.441", %"class.std::__1::unique_ptr.442", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.448", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.463", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.470", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.480", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.490", %"struct.std::__1::atomic.167", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.524", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.541"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.542", i32, i8, i8, i32, i32, %"class.std::__1::vector.548", %"class.std::__1::vector.548", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.555", i64, %"class.std::__1::unordered_map.556", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.316", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.175", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.615", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.621", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.655", %"class.std::__1::vector.659", %"class.std::__1::vector.659", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.110", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.110" = type { %"struct.std::__1::__atomic_base.111" }
%"struct.std::__1::__atomic_base.111" = type { %"struct.std::__1::__cxx_atomic_impl.112" }
%"struct.std::__1::__cxx_atomic_impl.112" = type { %"struct.std::__1::__cxx_atomic_base_impl.113" }
%"struct.std::__1::__cxx_atomic_base_impl.113" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map.121", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.150", %"class.std::__1::vector.154", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.161", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.176", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.180", %"class.std::__1::vector.180", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.271", %"class.std::__1::shared_ptr.277", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.278", %"class.std::__1::unique_ptr.304", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.310", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.323", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set", i8, [7 x i8], %"class.std::__1::unordered_map.352", %"class.std::__1::unordered_map.378", %"class.std::__1::unordered_map.352", %"class.std::__1::unordered_map.402", %"class.std::__1::vector.428", i8, %"class.std::__1::unique_ptr.435", i32, i32 }
%"class.std::__1::unordered_map.121" = type { %"class.std::__1::__hash_table.122" }
%"class.std::__1::__hash_table.122" = type <{ %"class.std::__1::unique_ptr.123", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.139", [4 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125", %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.126"** }
%"struct.std::__1::__hash_node_base.126" = type { %"struct.std::__1::__hash_node_base.126"* }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::__bucket_list_deallocator.128" }
%"class.std::__1::__bucket_list_deallocator.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.126" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.145", %"struct.std::__1::atomic.145", %"struct.std::__1::atomic.145" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__atomic_base.147" }
%"struct.std::__1::__atomic_base.147" = type { %"struct.std::__1::__cxx_atomic_impl.148" }
%"struct.std::__1::__cxx_atomic_impl.148" = type { %"struct.std::__1::__cxx_atomic_base_impl.149" }
%"struct.std::__1::__cxx_atomic_base_impl.149" = type { i64 }
%"struct.std::__1::atomic.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i32 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.156" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type opaque
%"class.v8::internal::Space" = type opaque
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.167", %"struct.std::__1::atomic.171", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__cxx_atomic_impl.173" }
%"struct.std::__1::__cxx_atomic_impl.173" = type { %"struct.std::__1::__cxx_atomic_base_impl.174" }
%"struct.std::__1::__cxx_atomic_base_impl.174" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.175" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.182" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.277" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.278" = type { %"class.std::__1::__hash_table.279" }
%"class.std::__1::__hash_table.279" = type <{ %"class.std::__1::unique_ptr.280", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282", %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::__hash_node_base.283"** }
%"struct.std::__1::__hash_node_base.283" = type { %"struct.std::__1::__hash_node_base.283"* }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.std::__1::__bucket_list_deallocator.285" }
%"class.std::__1::__bucket_list_deallocator.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__hash_node_base.283" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.316", %"class.std::__1::vector.316" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.347", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.378" = type { %"class.std::__1::__hash_table.379" }
%"class.std::__1::__hash_table.379" = type <{ %"class.std::__1::unique_ptr.380", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", %"class.std::__1::__compressed_pair.398", [4 x i8] }>
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382", %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.std::__1::__hash_node_base.383"** }
%"struct.std::__1::__hash_node_base.383" = type { %"struct.std::__1::__hash_node_base.383"* }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.std::__1::__bucket_list_deallocator.385" }
%"class.std::__1::__bucket_list_deallocator.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::__hash_node_base.383" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.352" = type { %"class.std::__1::__hash_table.353" }
%"class.std::__1::__hash_table.353" = type <{ %"class.std::__1::unique_ptr.354", %"class.std::__1::__compressed_pair.364", %"class.std::__1::__compressed_pair.369", %"class.std::__1::__compressed_pair.372", [4 x i8] }>
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356", %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"struct.std::__1::__hash_node_base.357"** }
%"struct.std::__1::__hash_node_base.357" = type { %"struct.std::__1::__hash_node_base.357"* }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.std::__1::__bucket_list_deallocator.359" }
%"class.std::__1::__bucket_list_deallocator.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node_base.357" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.424", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.428" = type { %"class.std::__1::__vector_base.429" }
%"class.std::__1::__vector_base.429" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.430" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.316" }
%"class.std::__1::shared_ptr.441" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type opaque
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type opaque
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.448" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type opaque
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type opaque
%"class.v8::internal::StubCache" = type opaque
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type opaque
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.449", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.455", %"class.v8::internal::DetachableVector.456", %"class.v8::internal::DetachableVector.455", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.456" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.455" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type opaque
%"class.v8::internal::EternalHandles" = type opaque
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.457" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { i32*, i32*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type opaque
%"struct.std::__1::atomic.470" = type { %"struct.std::__1::__atomic_base.471" }
%"struct.std::__1::__atomic_base.471" = type { %"struct.std::__1::__cxx_atomic_impl.472" }
%"struct.std::__1::__cxx_atomic_impl.472" = type { %"struct.std::__1::__cxx_atomic_base_impl.473" }
%"struct.std::__1::__cxx_atomic_base_impl.473" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.480" = type { %"struct.std::__1::__atomic_base.481" }
%"struct.std::__1::__atomic_base.481" = type { %"struct.std::__1::__cxx_atomic_impl.482" }
%"struct.std::__1::__cxx_atomic_impl.482" = type { %"struct.std::__1::__cxx_atomic_base_impl.483" }
%"struct.std::__1::__cxx_atomic_base_impl.483" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.490" = type { %"class.std::__1::__hash_table.491" }
%"class.std::__1::__hash_table.491" = type <{ %"class.std::__1::unique_ptr.492", %"class.std::__1::__compressed_pair.502", %"class.std::__1::__compressed_pair.507", %"class.std::__1::__compressed_pair.510", [4 x i8] }>
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494", %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"struct.std::__1::__hash_node_base.495"** }
%"struct.std::__1::__hash_node_base.495" = type { %"struct.std::__1::__hash_node_base.495"* }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.std::__1::__bucket_list_deallocator.497" }
%"class.std::__1::__bucket_list_deallocator.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"struct.std::__1::__hash_node_base.495" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.516", %"class.v8::internal::Handle.522", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.523", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.522" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.523" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type opaque
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type opaque
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.536" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.530"**, %"struct.std::__1::pair.530"**, %"struct.std::__1::pair.530"**, %"class.std::__1::__compressed_pair.531" }
%"struct.std::__1::pair.530" = type opaque
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"struct.std::__1::pair.530"** }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.541" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.475", i32, %"class.v8::Local.114" }
%"class.v8::Local.475" = type { %"class.v8::Promise"* }
%"class.v8::Local.114" = type { %"class.v8::Value"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type opaque
%"class.std::__1::vector.548" = type { %"class.std::__1::__vector_base.549" }
%"class.std::__1::__vector_base.549" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.555" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.556" = type { %"class.std::__1::__hash_table.557" }
%"class.std::__1::__hash_table.557" = type <{ %"class.std::__1::unique_ptr.558", %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.578", [4 x i8] }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.std::__1::__hash_node_base.561"** }
%"struct.std::__1::__hash_node_base.561" = type { %"struct.std::__1::__hash_node_base.561"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::__bucket_list_deallocator.563" }
%"class.std::__1::__bucket_list_deallocator.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.561" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.175" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.584", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.613", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.584" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.609, %union.anon.611, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.609 = type { i64 }
%union.anon.611 = type { i64 }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.613" = type { %"class.v8::PersistentBase.614" }
%"class.v8::PersistentBase.614" = type { %"class.v8::Context"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.585", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.585" = type { %"class.std::__1::__hash_table.586" }
%"class.std::__1::__hash_table.586" = type <{ %"class.std::__1::unique_ptr.587", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.602", %"class.std::__1::__compressed_pair.605", [4 x i8] }>
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589", %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"struct.std::__1::__hash_node_base.590"** }
%"struct.std::__1::__hash_node_base.590" = type { %"struct.std::__1::__hash_node_base.590"* }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.std::__1::__bucket_list_deallocator.592" }
%"class.std::__1::__bucket_list_deallocator.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"struct.std::__1::__hash_node_base.590" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type opaque
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.476", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.476" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.629" }
%"class.std::__1::unordered_map.629" = type { %"class.std::__1::__hash_table.630" }
%"class.std::__1::__hash_table.630" = type <{ %"class.std::__1::unique_ptr.631", %"class.std::__1::__compressed_pair.641", %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.649", [4 x i8] }>
%"class.std::__1::unique_ptr.631" = type { %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633", %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"struct.std::__1::__hash_node_base.634"** }
%"struct.std::__1::__hash_node_base.634" = type { %"struct.std::__1::__hash_node_base.634"* }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.std::__1::__bucket_list_deallocator.636" }
%"class.std::__1::__bucket_list_deallocator.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"struct.std::__1::__hash_node_base.634" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.655" = type { %"struct.std::__1::__atomic_base.656" }
%"struct.std::__1::__atomic_base.656" = type { %"struct.std::__1::__cxx_atomic_impl.657" }
%"struct.std::__1::__cxx_atomic_impl.657" = type { %"struct.std::__1::__cxx_atomic_base_impl.658" }
%"struct.std::__1::__cxx_atomic_base_impl.658" = type { %"class.std::__1::vector.659"* }
%"class.std::__1::vector.659" = type { %"class.std::__1::__vector_base.660" }
%"class.std::__1::__vector_base.660" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.661" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::compiler::JSOperatorBuilder" = type { %"struct.v8::internal::compiler::JSOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::JSOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::SimplifiedOperatorBuilder" = type { %"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::TickCounter" = type { i64, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::ZoneAllocator.706" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque.666" }
%"class.std::__1::deque.666" = type { %"class.std::__1::__deque_base.667" }
%"class.std::__1::__deque_base.667" = type { %"struct.std::__1::__split_buffer.668", i64, %"class.std::__1::__compressed_pair.673" }
%"struct.std::__1::__split_buffer.668" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670", %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::compiler::Node"*** }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.672", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.672" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.v8::internal::RecyclingZoneAllocator.675" }
%"class.v8::internal::RecyclingZoneAllocator.675" = type { %"class.v8::internal::ZoneAllocator.676", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.676" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, i64 }
%"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder" = type { %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::TickCounter"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneVector.677", %"class.v8::internal::ZoneVector.682", %"class.v8::internal::ZoneSet", %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet" }
%"class.v8::internal::ZoneStack" = type { %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.v8::internal::ZoneDeque" }
%"class.v8::internal::ZoneVector.677" = type { %"class.std::__1::vector.678" }
%"class.std::__1::vector.678" = type { i64*, i64, %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.v8::internal::ZoneAllocator.681" }
%"class.v8::internal::ZoneAllocator.681" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.682" = type { %"class.std::__1::vector.683" }
%"class.std::__1::vector.683" = type { %"class.std::__1::__vector_base.684" }
%"class.std::__1::__vector_base.684" = type { %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"*, %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"*, %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694", %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::ZoneAllocator.696" }
%"class.v8::internal::ZoneAllocator.696" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.697" }
%"class.std::__1::__tree.697" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.698", %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.687", %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.v8::internal::ZoneAllocator.700" }
%"class.v8::internal::ZoneAllocator.700" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet" = type { %"class.v8::internal::compiler::PersistentMap"* }
%"class.v8::internal::compiler::PersistentMap" = type { %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, i8, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree" = type { %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::KeyValue", i8, %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::HashValue", %"class.v8::internal::ZoneMap"*, [1 x %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*] }
%"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::KeyValue" = type { %"struct.std::__1::pair.base", [3 x i8] }
%"struct.std::__1::pair.base" = type <{ %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore", i8 }>
%"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore" = type { i32, i32 }
%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::HashValue" = type { i32 }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.686", %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687", %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::ZoneAllocator.689" }
%"class.v8::internal::ZoneAllocator.689" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node.745" = type { %"class.std::__1::__tree_node_base.base", %"class.v8::internal::compiler::Node"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator" = type <{ i32, [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.std::__1::array", i8, [7 x i8] }>
%"class.std::__1::__map_const_iterator" = type { %"class.std::__1::__tree_const_iterator.714" }
%"class.std::__1::__tree_const_iterator.714" = type { %"class.std::__1::__tree_end_node"* }
%"struct.std::__1::array" = type { [32 x %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*] }
%"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable" = type { %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap" }
%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator" = type { %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", i8, i8, [6 x i8] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [3 x i8], %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.717" }
%"struct.std::__1::pair.717" = type <{ %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore", i8, [3 x i8] }>
%"struct.v8::internal::compiler::FieldAccess" = type <{ i8, [3 x i8], i32, %"class.v8::internal::MaybeHandle", %"class.v8::internal::MaybeHandle.739", %"class.v8::internal::compiler::Type", %"class.v8::internal::MachineType", i8, i8, i32, %"struct.v8::internal::compiler::ConstFieldInfo", i8, [7 x i8] }>
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::internal::MaybeHandle.739" = type { i64* }
%"class.v8::internal::MachineType" = type { i8, i8 }
%"struct.v8::internal::compiler::ConstFieldInfo" = type { %"class.v8::internal::MaybeHandle.739" }
%"struct.std::__1::__split_buffer.707" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.670", %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.v8::internal::RecyclingZoneAllocator"* }

$_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_ = comdat any

$_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

@_ZN2v88internal28FLAG_trace_store_eliminationE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [53 x i8] c"StoreStoreElimination::Run: Eliminating node #%d:%s\0A\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"RedundantStoreFinder: - Revisiting: #%d:%s\0A\00", align 1
@.str.5 = private unnamed_addr constant [76 x i8] c"RedundantStoreFinder: + No change: stabilized. Not visiting effect inputs.\0A\00", align 1
@.str.6 = private unnamed_addr constant [54 x i8] c"RedundantStoreFinder:     marking #%d:%s for revisit\0A\00", align 1
@.str.8 = private unnamed_addr constant [70 x i8] c"RedundantStoreFinder:   #%d is StoreField[+%d,%s](#%d), unobservable\0A\00", align 1
@.str.9 = private unnamed_addr constant [86 x i8] c"RedundantStoreFinder:   #%d is StoreField[+%d,%s](#%d), observable, recording in set\0A\00", align 1
@.str.10 = private unnamed_addr constant [92 x i8] c"RedundantStoreFinder:   #%d is LoadField[+%d,%s](#%d), removing all offsets [+%d] from set\0A\00", align 1
@.str.11 = private unnamed_addr constant [73 x i8] c"RedundantStoreFinder:   #%d:%s can observe nothing, set stays unchanged\0A\00", align 1
@.str.12 = private unnamed_addr constant [76 x i8] c"RedundantStoreFinder:   #%d:%s might observe anything, recording empty set\0A\00", align 1
@.str.13 = private unnamed_addr constant [39 x i8] c"index < node->op()->EffectInputCount()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21StoreStoreElimination3RunEPNS1_7JSGraphEPNS0_11TickCounterEPNS0_4ZoneE(%"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::TickCounter"*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.v8::internal::ZoneAllocator.706", align 8
  %6 = alloca %"class.v8::internal::ZoneDeque", align 8
  %7 = alloca %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", align 8
  %8 = bitcast %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %8) #5
  %9 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 0
  store %"class.v8::internal::compiler::JSGraph"* %0, %"class.v8::internal::compiler::JSGraph"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 1
  store %"class.v8::internal::TickCounter"* %1, %"class.v8::internal::TickCounter"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 2
  store %"class.v8::internal::Zone"* %2, %"class.v8::internal::Zone"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 3
  %13 = bitcast %"class.v8::internal::ZoneDeque"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #5
  %14 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #5
  %15 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %6, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %16 = bitcast %"struct.std::__1::__compressed_pair_elem.671"* %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %6, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %18 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #5
  %19 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %6, i64 0, i32 0, i32 0, i32 2, i32 1
  %20 = bitcast %"struct.std::__1::__compressed_pair_elem.674"* %19 to i64*
  store i64 %14, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %6, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %23 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %6, i64 0, i32 0, i32 0, i32 0, i32 3
  %24 = bitcast %"class.std::__1::__compressed_pair.669"* %22 to i8*
  %25 = bitcast %"class.std::__1::__compressed_pair.669"* %23 to i8*
  %26 = bitcast %"class.v8::internal::ZoneStack"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #5
  %27 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %6, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %6, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast %"class.std::__1::__compressed_pair.673"* %29 to i8*
  %32 = bitcast %"class.std::__1::__compressed_pair.673"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false) #5
  %33 = bitcast i64* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #5
  %34 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %6, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base.667"* nonnull %34) #5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #5
  %35 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %0, i64 0, i32 0, i32 0
  %36 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %36, i64 0, i32 4
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 4, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #5
  store i8 0, i8* %4, align 1
  %41 = bitcast %"class.v8::internal::ZoneAllocator.706"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #5
  %42 = getelementptr inbounds %"class.v8::internal::ZoneAllocator.706", %"class.v8::internal::ZoneAllocator.706"* %5, i64 0, i32 0
  store %"class.v8::internal::Zone"* %2, %"class.v8::internal::Zone"** %42, align 8
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.678"* %40, i64 %39, i8* nonnull dereferenceable(1) %4, %"class.v8::internal::ZoneAllocator.706"* nonnull dereferenceable(8) %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #5
  %43 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 5
  %44 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %35, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %44, i64 0, i32 4
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1
  %49 = bitcast %"struct.std::__1::__compressed_pair_elem.695"* %48 to i64*
  %50 = bitcast %"class.v8::internal::ZoneVector.682"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #5
  store i64 %14, i64* %49, align 8
  %51 = icmp eq i32 %46, 0
  br i1 %51, label %78, label %52

52:                                               ; preds = %3
  %53 = icmp ugt i32 %46, 268435455
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = bitcast %"class.v8::internal::ZoneVector.682"* %43 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #6
  unreachable

56:                                               ; preds = %52
  %57 = shl nuw nsw i64 %47, 3
  %58 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %61, %59
  %63 = icmp ugt i64 %57, %62
  br i1 %63, label %64, label %66, !prof !2

64:                                               ; preds = %56
  %65 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 %57) #5
  br label %68

66:                                               ; preds = %56
  %67 = add i64 %59, %57
  store i64 %67, i64* %58, align 8
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi i64 [ %65, %64 ], [ %59, %66 ]
  %70 = inttoptr i64 %69 to %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"*
  %71 = inttoptr i64 %69 to i8*
  %72 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 5, i32 0, i32 0, i32 1
  %73 = getelementptr %"class.v8::internal::ZoneVector.682", %"class.v8::internal::ZoneVector.682"* %43, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %70, %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"** %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet", %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %70, i64 %47
  %75 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %74, %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"** %75, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 %57, i1 false) #5
  %76 = bitcast %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"** %72 to i64*
  %77 = ptrtoint %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %74 to i64
  store i64 %77, i64* %76, align 8
  br label %78

78:                                               ; preds = %68, %3
  %79 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 6, i32 0, i32 0, i32 1, i32 1
  %81 = bitcast %"struct.std::__1::__compressed_pair_elem.699"* %80 to i64*
  %82 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 6, i32 0, i32 0, i32 1
  %83 = bitcast %"class.std::__1::__compressed_pair.698"* %82 to i64*
  store i64 0, i64* %83, align 8
  store i64 %14, i64* %81, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 6, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %85, %"class.std::__1::__tree_end_node"** %79, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %89, %87
  %91 = icmp ult i64 %90, 24
  br i1 %91, label %92, label %94, !prof !2

92:                                               ; preds = %78
  %93 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 24) #5
  br label %96

94:                                               ; preds = %78
  %95 = add i64 %87, 24
  store i64 %95, i64* %86, align 8
  br label %96

96:                                               ; preds = %92, %94
  %97 = phi i64 [ %93, %92 ], [ %87, %94 ]
  %98 = inttoptr i64 %97 to %"class.v8::internal::compiler::PersistentMap"*
  %99 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %98, i64 0, i32 0
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* null, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %98, i64 0, i32 1
  store i8 0, i8* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %98, i64 0, i32 2
  %102 = bitcast %"class.v8::internal::Zone"** %101 to i64*
  store i64 %14, i64* %102, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 7, i32 0
  store %"class.v8::internal::compiler::PersistentMap"* %98, %"class.v8::internal::compiler::PersistentMap"** %103, align 8
  %104 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %9, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %106, i64 0, i32 2
  %108 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, align 8
  call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_120RedundantStoreFinder5VisitEPNS1_4NodeE(%"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* nonnull %7, %"class.v8::internal::compiler::Node"* %108) #5
  %109 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %178, label %112

112:                                              ; preds = %96
  %113 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %115 = bitcast %"class.v8::internal::compiler::Node"**** %114 to i64*
  %116 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %117 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %116 to i64*
  %118 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %116 to %"class.v8::internal::compiler::Node"***
  %119 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 4, i32 0, i32 0
  br label %120

120:                                              ; preds = %163, %112
  %121 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %10, align 8
  call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %121) #5
  %122 = load i64, i64* %109, align 8
  %123 = load i64, i64* %27, align 8
  %124 = add i64 %122, -1
  %125 = add i64 %124, %123
  %126 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %113, align 8
  %127 = lshr i64 %125, 9
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %126, i64 %127
  %129 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %128, align 8
  %130 = and i64 %125, 511
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, i64 %130
  %132 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %131, align 8
  store i64 %124, i64* %109, align 8
  %133 = load i64, i64* %115, align 8
  %134 = ptrtoint %"class.v8::internal::compiler::Node"*** %126 to i64
  %135 = sub i64 %133, %134
  %136 = icmp eq i64 %135, 0
  %137 = shl i64 %135, 6
  %138 = add i64 %137, -1
  %139 = select i1 %136, i64 0, i64 %138
  %140 = sub i64 1, %122
  %141 = sub i64 %140, %123
  %142 = add i64 %141, %139
  %143 = icmp ult i64 %142, 1024
  %144 = inttoptr i64 %133 to %"class.v8::internal::compiler::Node"***
  br i1 %143, label %163, label %145

145:                                              ; preds = %120
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %144, i64 -1
  %147 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %146, align 8
  %148 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %116, align 8
  %149 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %148, null
  br i1 %149, label %154, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %148, i64 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = icmp ugt i64 %152, 512
  br i1 %153, label %160, label %154

154:                                              ; preds = %150, %145
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %147, i64 1
  %156 = bitcast %"class.v8::internal::compiler::Node"** %155 to i64*
  store i64 512, i64* %156, align 8
  %157 = load i64, i64* %117, align 8
  %158 = bitcast %"class.v8::internal::compiler::Node"** %147 to i64*
  store i64 %157, i64* %158, align 8
  store %"class.v8::internal::compiler::Node"** %147, %"class.v8::internal::compiler::Node"*** %118, align 8
  %159 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %114, align 8
  br label %160

160:                                              ; preds = %154, %150
  %161 = phi %"class.v8::internal::compiler::Node"*** [ %144, %150 ], [ %159, %154 ]
  %162 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %161, i64 -1
  store %"class.v8::internal::compiler::Node"*** %162, %"class.v8::internal::compiler::Node"**** %114, align 8
  br label %163

163:                                              ; preds = %160, %120
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %132, i64 0, i32 3
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 16777215
  %167 = zext i32 %166 to i64
  %168 = load i64*, i64** %119, align 8
  %169 = lshr i64 %167, 6
  %170 = getelementptr inbounds i64, i64* %168, i64 %169
  %171 = and i64 %167, 63
  %172 = shl i64 1, %171
  %173 = xor i64 %172, -1
  %174 = load i64, i64* %170, align 8
  %175 = and i64 %174, %173
  store i64 %175, i64* %170, align 8
  call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_120RedundantStoreFinder5VisitEPNS1_4NodeE(%"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* nonnull %7, %"class.v8::internal::compiler::Node"* %132) #5
  %176 = load i64, i64* %109, align 8
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %120

178:                                              ; preds = %163, %96
  %179 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %79, align 8
  %180 = icmp eq %"class.std::__1::__tree_end_node"* %179, %85
  br i1 %180, label %181, label %194

181:                                              ; preds = %269, %178
  %182 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 6, i32 0, i32 0
  %183 = bitcast %"class.std::__1::__tree_end_node"* %85 to %"class.std::__1::__tree_node.745"**
  %184 = load %"class.std::__1::__tree_node.745"*, %"class.std::__1::__tree_node.745"** %183, align 8
  call void @_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.697"* %182, %"class.std::__1::__tree_node.745"* %184) #5
  %185 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %186 = load %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"*, %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"** %185, align 8
  %187 = icmp eq %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %186, null
  br i1 %187, label %192, label %188

188:                                              ; preds = %181
  %189 = ptrtoint %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %186 to i64
  %190 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 5, i32 0, i32 0, i32 1
  %191 = bitcast %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"** %190 to i64*
  store i64 %189, i64* %191, align 8
  br label %192

192:                                              ; preds = %181, %188
  %193 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base.667"* %193) #5
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %8) #5
  ret void

194:                                              ; preds = %178, %269
  %195 = phi %"class.std::__1::__tree_end_node"* [ %270, %269 ], [ %179, %178 ]
  %196 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 4
  %197 = bitcast %"class.std::__1::__tree_end_node"* %196 to %"class.v8::internal::compiler::Node"**
  %198 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, align 8
  %199 = load i8, i8* @_ZN2v88internal28FLAG_trace_store_eliminationE, align 1, !range !3
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %209, label %201

201:                                              ; preds = %194
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %198, i64 0, i32 3
  %203 = load i32, i32* %202, align 4
  %204 = and i32 %203, 16777215
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %198, i64 0, i32 0
  %206 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %205, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %206, i64 0, i32 1
  %208 = load i8*, i8** %207, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 %204, i8* %208) #5
  br label %209

209:                                              ; preds = %194, %201
  %210 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %198, i64 0, i32 0
  %211 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %210, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %211, i64 0, i32 6
  %213 = load i32, i32* %212, align 8
  %214 = icmp sgt i32 %213, 0
  br i1 %214, label %216, label %215, !prof !4

215:                                              ; preds = %209
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.13, i64 0, i64 0)) #6
  unreachable

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %211, i64 0, i32 5
  %218 = load i32, i32* %217, align 4
  %219 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %211) #5
  %220 = zext i1 %219 to i32
  %221 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %210, align 8
  %222 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %221) #5
  %223 = zext i1 %222 to i32
  %224 = add i32 %218, %220
  %225 = add i32 %224, %223
  %226 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %198, i64 0, i32 3
  %227 = load i32, i32* %226, align 4
  %228 = and i32 %227, 251658240
  %229 = icmp eq i32 %228, 251658240
  %230 = ptrtoint %"class.v8::internal::compiler::Node"* %198 to i64
  %231 = add i64 %230, 32
  br i1 %229, label %232, label %236

232:                                              ; preds = %216
  %233 = inttoptr i64 %231 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = add i64 %234, 16
  br label %236

236:                                              ; preds = %216, %232
  %237 = phi i64 [ %235, %232 ], [ %231, %216 ]
  %238 = inttoptr i64 %237 to %"class.v8::internal::compiler::Node"**
  %239 = sext i32 %225 to i64
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %238, i64 %239
  %241 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %240, align 8
  call void @_ZN2v88internal8compiler14NodeProperties11ReplaceUsesEPNS1_4NodeES4_S4_S4_S4_(%"class.v8::internal::compiler::Node"* %198, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* %241, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #5
  call void @_ZN2v88internal8compiler4Node4KillEv(%"class.v8::internal::compiler::Node"* %198) #5
  %242 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 1, i32 0
  %243 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %242, align 8
  %244 = icmp eq %"class.std::__1::__tree_node_base"* %243, null
  br i1 %244, label %245, label %253

245:                                              ; preds = %236
  %246 = bitcast %"class.std::__1::__tree_end_node"* %195 to %"class.std::__1::__tree_node_base"*
  %247 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 2
  %248 = bitcast %"class.std::__1::__tree_end_node"* %247 to %"class.std::__1::__tree_end_node"**
  %249 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %249, i64 0, i32 0
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, %246
  br i1 %252, label %269, label %260

253:                                              ; preds = %236, %253
  %254 = phi %"class.std::__1::__tree_node_base"* [ %256, %253 ], [ %243, %236 ]
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %254, i64 0, i32 0, i32 0
  %256 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %255, align 8
  %257 = icmp eq %"class.std::__1::__tree_node_base"* %256, null
  br i1 %257, label %258, label %253

258:                                              ; preds = %253
  %259 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %254, i64 0, i32 0
  br label %269

260:                                              ; preds = %245, %260
  %261 = phi %"class.std::__1::__tree_end_node"** [ %264, %260 ], [ %248, %245 ]
  %262 = bitcast %"class.std::__1::__tree_end_node"** %261 to %"class.std::__1::__tree_node_base"**
  %263 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %262, align 8
  %264 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %263, i64 0, i32 2
  %265 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %264, align 8
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %265, i64 0, i32 0
  %267 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %266, align 8
  %268 = icmp eq %"class.std::__1::__tree_node_base"* %267, %263
  br i1 %268, label %269, label %260

269:                                              ; preds = %260, %245, %258
  %270 = phi %"class.std::__1::__tree_end_node"* [ %259, %258 ], [ %249, %245 ], [ %265, %260 ]
  %271 = icmp eq %"class.std::__1::__tree_end_node"* %270, %85
  br i1 %271, label %181, label %194
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties11ReplaceUsesEPNS1_4NodeES4_S4_S4_S4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node4KillEv(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base.667"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base.667", %"class.std::__1::__deque_base.667"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base.667", %"class.std::__1::__deque_base.667"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base.667", %"class.std::__1::__deque_base.667"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::Node"*** %9, %3
  %11 = ptrtoint %"class.v8::internal::compiler::Node"*** %9 to i64
  %12 = ptrtoint %"class.v8::internal::compiler::Node"*** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base.667", %"class.std::__1::__deque_base.667"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %7, align 8
  %17 = and i64 %5, 511
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base.667", %"class.std::__1::__deque_base.667"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 9
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, i64 %22
  %24 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, align 8
  %25 = and i64 %21, 511
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, i64 %25
  %27 = icmp eq %"class.v8::internal::compiler::Node"** %26, %18
  br i1 %27, label %28, label %39

28:                                               ; preds = %52, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %52 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.v8::internal::compiler::Node"**** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::__deque_base.667", %"class.std::__1::__deque_base.667"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35 to i64*
  %37 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35 to %"class.v8::internal::compiler::Node"***
  %38 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35, align 8
  br label %57

39:                                               ; preds = %15, %52
  %40 = phi %"class.v8::internal::compiler::Node"** [ %55, %52 ], [ %18, %15 ]
  %41 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %7, %15 ]
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, i64 1
  %43 = ptrtoint %"class.v8::internal::compiler::Node"** %42 to i64
  %44 = bitcast %"class.v8::internal::compiler::Node"*** %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 4096
  br i1 %47, label %48, label %52

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %41, i64 1
  %50 = bitcast %"class.v8::internal::compiler::Node"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %48, %39
  %53 = phi %"class.v8::internal::compiler::Node"*** [ %49, %48 ], [ %41, %39 ]
  %54 = phi i64 [ %51, %48 ], [ %43, %39 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::compiler::Node"**
  %56 = icmp eq %"class.v8::internal::compiler::Node"** %26, %55
  br i1 %56, label %28, label %39

57:                                               ; preds = %78, %34
  %58 = phi %"class.v8::internal::compiler::Node"*** [ %9, %34 ], [ %79, %78 ]
  %59 = phi %"class.v8::internal::compiler::Node"*** [ %9, %34 ], [ %80, %78 ]
  %60 = phi i64 [ %11, %34 ], [ %81, %78 ]
  %61 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %38, %34 ], [ %83, %78 ]
  %62 = phi %"class.v8::internal::compiler::Node"*** [ %3, %34 ], [ %84, %78 ]
  %63 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %62, align 8
  %64 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %61, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %61, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %67, 512
  br i1 %68, label %78, label %69

69:                                               ; preds = %65, %57
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %63, i64 1
  %71 = bitcast %"class.v8::internal::compiler::Node"** %70 to i64*
  store i64 512, i64* %71, align 8
  %72 = load i64, i64* %36, align 8
  %73 = bitcast %"class.v8::internal::compiler::Node"** %63 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.v8::internal::compiler::Node"** %63, %"class.v8::internal::compiler::Node"*** %37, align 8
  %74 = bitcast %"class.v8::internal::compiler::Node"** %63 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %76 = load i64, i64* %30, align 8
  %77 = inttoptr i64 %76 to %"class.v8::internal::compiler::Node"***
  br label %78

78:                                               ; preds = %69, %65
  %79 = phi %"class.v8::internal::compiler::Node"*** [ %58, %65 ], [ %77, %69 ]
  %80 = phi %"class.v8::internal::compiler::Node"*** [ %59, %65 ], [ %77, %69 ]
  %81 = phi i64 [ %60, %65 ], [ %76, %69 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %62, %65 ], [ %75, %69 ]
  %83 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %61, %65 ], [ %74, %69 ]
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 1
  store %"class.v8::internal::compiler::Node"*** %84, %"class.v8::internal::compiler::Node"**** %2, align 8
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = sub i64 %81, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, 2
  br i1 %88, label %57, label %89

89:                                               ; preds = %78, %28
  %90 = phi %"class.v8::internal::compiler::Node"*** [ %9, %28 ], [ %79, %78 ]
  %91 = phi %"class.v8::internal::compiler::Node"*** [ %9, %28 ], [ %80, %78 ]
  %92 = phi %"class.v8::internal::compiler::Node"*** [ %3, %28 ], [ %84, %78 ]
  %93 = phi i64 [ %32, %28 ], [ %87, %78 ]
  %94 = ptrtoint %"class.v8::internal::compiler::Node"*** %92 to i64
  switch i64 %93, label %98 [
    i64 1, label %96
    i64 2, label %95
  ]

95:                                               ; preds = %89
  br label %96

96:                                               ; preds = %89, %95
  %97 = phi i64 [ 512, %95 ], [ 256, %89 ]
  store i64 %97, i64* %4, align 8
  br label %98

98:                                               ; preds = %96, %89
  %99 = icmp eq %"class.v8::internal::compiler::Node"*** %92, %91
  br i1 %99, label %153, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__deque_base.667", %"class.std::__1::__deque_base.667"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %102 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101 to i64*
  %103 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101 to %"class.v8::internal::compiler::Node"***
  %104 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101, align 8
  %105 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %91, i64 -1
  %106 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  %107 = sub i64 %106, %94
  %108 = and i64 %107, 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %100
  %111 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %92, align 8
  %112 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %104, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %104, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, 512
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %110
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 1
  %119 = bitcast %"class.v8::internal::compiler::Node"** %118 to i64*
  store i64 512, i64* %119, align 8
  %120 = load i64, i64* %102, align 8
  %121 = bitcast %"class.v8::internal::compiler::Node"** %111 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.v8::internal::compiler::Node"** %111, %"class.v8::internal::compiler::Node"*** %103, align 8
  %122 = bitcast %"class.v8::internal::compiler::Node"** %111 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %123

123:                                              ; preds = %117, %113
  %124 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %104, %113 ], [ %122, %117 ]
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %92, i64 1
  br label %126

126:                                              ; preds = %123, %100
  %127 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %104, %100 ], [ %124, %123 ]
  %128 = phi %"class.v8::internal::compiler::Node"*** [ %92, %100 ], [ %125, %123 ]
  %129 = icmp ult i64 %107, 8
  br i1 %129, label %150, label %130

130:                                              ; preds = %126, %203
  %131 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %204, %203 ], [ %127, %126 ]
  %132 = phi %"class.v8::internal::compiler::Node"*** [ %205, %203 ], [ %128, %126 ]
  %133 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, align 8
  %134 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %131, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %131, i64 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp ugt i64 %137, 512
  br i1 %138, label %145, label %139

139:                                              ; preds = %135, %130
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, i64 1
  %141 = bitcast %"class.v8::internal::compiler::Node"** %140 to i64*
  store i64 512, i64* %141, align 8
  %142 = load i64, i64* %102, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"** %133 to i64*
  store i64 %142, i64* %143, align 8
  store %"class.v8::internal::compiler::Node"** %133, %"class.v8::internal::compiler::Node"*** %103, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"** %133 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %145

145:                                              ; preds = %135, %139
  %146 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %131, %135 ], [ %144, %139 ]
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, i64 1
  %148 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %147, align 8
  %149 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %146, null
  br i1 %149, label %197, label %193

150:                                              ; preds = %203, %126
  %151 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %152 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %8, align 8
  br label %153

153:                                              ; preds = %150, %98
  %154 = phi %"class.v8::internal::compiler::Node"*** [ %152, %150 ], [ %90, %98 ]
  %155 = phi %"class.v8::internal::compiler::Node"*** [ %151, %150 ], [ %91, %98 ]
  %156 = icmp eq %"class.v8::internal::compiler::Node"*** %154, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"class.v8::internal::compiler::Node"*** %155 to i64
  %159 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %154, i64 -1
  %160 = ptrtoint %"class.v8::internal::compiler::Node"*** %159 to i64
  %161 = sub i64 %160, %158
  %162 = lshr i64 %161, 3
  %163 = xor i64 %162, -1
  %164 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %154, i64 %163
  store %"class.v8::internal::compiler::Node"*** %164, %"class.v8::internal::compiler::Node"**** %8, align 8
  br label %165

165:                                              ; preds = %157, %153
  %166 = getelementptr inbounds %"class.std::__1::__deque_base.667", %"class.std::__1::__deque_base.667"* %0, i64 0, i32 0, i32 0
  %167 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %166, align 8
  %168 = icmp eq %"class.v8::internal::compiler::Node"*** %167, null
  br i1 %168, label %192, label %169

169:                                              ; preds = %165
  %170 = ptrtoint %"class.v8::internal::compiler::Node"*** %167 to i64
  %171 = getelementptr inbounds %"class.std::__1::__deque_base.667", %"class.std::__1::__deque_base.667"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::compiler::Node"**** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %170
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.std::__1::__deque_base.667", %"class.std::__1::__deque_base.667"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %179 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178, align 8
  %180 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %179, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %179, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %183, %175
  br i1 %184, label %192, label %185

185:                                              ; preds = %181, %177
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %167, i64 1
  %187 = bitcast %"class.v8::internal::compiler::Node"*** %186 to i64*
  store i64 %175, i64* %187, align 8
  %188 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.v8::internal::compiler::Node"*** %167 to i64*
  store i64 %189, i64* %190, align 8
  %191 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %167, %"class.v8::internal::compiler::Node"**** %191, align 8
  br label %192

192:                                              ; preds = %165, %169, %181, %185
  ret void

193:                                              ; preds = %145
  %194 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %146, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = icmp ugt i64 %195, 512
  br i1 %196, label %203, label %197

197:                                              ; preds = %193, %145
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %148, i64 1
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  store i64 512, i64* %199, align 8
  %200 = load i64, i64* %102, align 8
  %201 = bitcast %"class.v8::internal::compiler::Node"** %148 to i64*
  store i64 %200, i64* %201, align 8
  store %"class.v8::internal::compiler::Node"** %148, %"class.v8::internal::compiler::Node"*** %103, align 8
  %202 = bitcast %"class.v8::internal::compiler::Node"** %148 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %203

203:                                              ; preds = %197, %193
  %204 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %146, %193 ], [ %202, %197 ]
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, i64 2
  %206 = icmp eq %"class.v8::internal::compiler::Node"*** %205, %91
  br i1 %206, label %150, label %130
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.678"*, i64, i8* dereferenceable(1), %"class.v8::internal::ZoneAllocator.706"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.678", %"class.std::__1::vector.678"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.678", %"class.std::__1::vector.678"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::ZoneAllocator.706"* %3 to i64*
  %8 = bitcast %"class.std::__1::vector.678"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load i64, i64* %7, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.678", %"class.std::__1::vector.678"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.678", %"class.std::__1::vector.678"* %0, i64 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.680"* %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = icmp eq i64 %1, 0
  %14 = inttoptr i64 %9 to %"class.v8::internal::Zone"*
  br i1 %13, label %68, label %15

15:                                               ; preds = %4
  %16 = icmp ugt i64 %1, 17179869120
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector.678"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #6
  unreachable

19:                                               ; preds = %15
  %20 = add nsw i64 %1, -1
  %21 = lshr i64 %20, 6
  %22 = add nuw nsw i64 %21, 1
  %23 = shl nuw nsw i64 %22, 3
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ugt i64 %23, %28
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %19
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 %23) #5
  br label %34

32:                                               ; preds = %19
  %33 = add i64 %25, %23
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %5, align 8
  store i64 0, i64* %6, align 8
  store i64 %22, i64* %10, align 8
  %37 = load i8, i8* %2, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  store i64 %1, i64* %6, align 8
  %39 = icmp ult i64 %1, 65
  %40 = getelementptr inbounds i64, i64* %36, i64 %21
  %41 = select i1 %39, i64* %36, i64* %40
  store i64 0, i64* %41, align 8
  %42 = bitcast %"class.std::__1::vector.678"* %0 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !5
  %44 = inttoptr i64 %43 to i8*
  %45 = lshr i64 %1, 6
  %46 = shl nuw nsw i64 %45, 3
  br i1 %38, label %57, label %47

47:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 -1, i64 %46, i1 false) #5
  %48 = and i64 %1, 63
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %68, label %50

50:                                               ; preds = %47
  %51 = inttoptr i64 %43 to i64*
  %52 = getelementptr inbounds i64, i64* %51, i64 %45
  %53 = sub nuw nsw i64 64, %48
  %54 = lshr i64 -1, %53
  %55 = load i64, i64* %52, align 8
  %56 = or i64 %55, %54
  store i64 %56, i64* %52, align 8
  br label %68

57:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 %46, i1 false) #5
  %58 = and i64 %1, 63
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %43 to i64*
  %62 = getelementptr inbounds i64, i64* %61, i64 %45
  %63 = sub nuw nsw i64 64, %58
  %64 = lshr i64 -1, %63
  %65 = xor i64 %64, -1
  %66 = load i64, i64* %62, align 8
  %67 = and i64 %66, %65
  store i64 %67, i64* %62, align 8
  br label %68

68:                                               ; preds = %60, %57, %50, %47, %4
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_120RedundantStoreFinder5VisitEPNS1_4NodeE(%"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", align 8
  %4 = alloca %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable", align 8
  %5 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", align 8
  %6 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", align 8
  %10 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", align 8
  %11 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", align 8
  %12 = alloca %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable", align 8
  %13 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", align 8
  %14 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", align 8
  %15 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", align 8
  %16 = getelementptr %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %17 = load %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"*, %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"** %16, align 8
  %18 = getelementptr %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 16777215
  %21 = zext i32 %20 to i64
  %22 = getelementptr %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet", %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %17, i64 %21, i32 0
  %23 = load %"class.v8::internal::compiler::PersistentMap"*, %"class.v8::internal::compiler::PersistentMap"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::PersistentMap"* %23, null
  %25 = getelementptr %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %26 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %25, align 8
  br i1 %24, label %27, label %148

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %26, i64 0, i32 7
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %148

31:                                               ; preds = %27
  %32 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %33 = add i64 %32, 32
  %34 = inttoptr i64 %33 to i64*
  %35 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 4, i32 0, i32 0
  %36 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = bitcast %"class.v8::internal::compiler::Node"**** %36 to i64*
  %38 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.v8::internal::compiler::Node"**** %38 to i64*
  %40 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  br label %43

43:                                               ; preds = %31, %137
  %44 = phi %"class.v8::internal::compiler::Operator"* [ %26, %31 ], [ %138, %137 ]
  %45 = phi i32 [ 0, %31 ], [ %139, %137 ]
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %44, i64 0, i32 5
  %47 = load i32, i32* %46, align 4
  %48 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %44) #5
  %49 = zext i1 %48 to i32
  %50 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %25, align 8
  %51 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %50) #5
  %52 = zext i1 %51 to i32
  %53 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %25, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %53, i64 0, i32 6
  %55 = load i32, i32* %54, align 8
  %56 = add i32 %47, %45
  %57 = add i32 %56, %49
  %58 = add i32 %57, %52
  %59 = add i32 %58, %55
  %60 = load i32, i32* %18, align 4
  %61 = and i32 %60, 251658240
  %62 = icmp eq i32 %61, 251658240
  br i1 %62, label %63, label %66

63:                                               ; preds = %43
  %64 = load i64, i64* %34, align 8
  %65 = add i64 %64, 16
  br label %66

66:                                               ; preds = %43, %63
  %67 = phi i64 [ %65, %63 ], [ %33, %43 ]
  %68 = inttoptr i64 %67 to %"class.v8::internal::compiler::Node"**
  %69 = sext i32 %59 to i64
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 %69
  %71 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, align 8
  %72 = load %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"*, %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"** %16, align 8
  %73 = getelementptr %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %71, i64 0, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, 16777215
  %76 = zext i32 %75 to i64
  %77 = getelementptr %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet", %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %72, i64 %76, i32 0
  %78 = load %"class.v8::internal::compiler::PersistentMap"*, %"class.v8::internal::compiler::PersistentMap"** %77, align 8
  %79 = icmp eq %"class.v8::internal::compiler::PersistentMap"* %78, null
  br i1 %79, label %80, label %137

80:                                               ; preds = %66
  %81 = ptrtoint %"class.v8::internal::compiler::Node"* %71 to i64
  %82 = load i64*, i64** %35, align 8
  %83 = lshr i64 %76, 6
  %84 = getelementptr inbounds i64, i64* %82, i64 %83
  %85 = and i64 %76, 63
  %86 = shl i64 1, %85
  %87 = load i64, i64* %84, align 8
  %88 = and i64 %87, %86
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %137

90:                                               ; preds = %80
  %91 = load i64, i64* %37, align 8
  %92 = load i64, i64* %39, align 8
  %93 = sub i64 %91, %92
  %94 = icmp eq i64 %93, 0
  %95 = shl i64 %93, 6
  %96 = add i64 %95, -1
  %97 = select i1 %94, i64 0, i64 %96
  %98 = load i64, i64* %40, align 8
  %99 = load i64, i64* %41, align 8
  %100 = add i64 %99, %98
  %101 = icmp eq i64 %97, %100
  %102 = inttoptr i64 %92 to %"class.v8::internal::compiler::Node"***
  %103 = inttoptr i64 %91 to %"class.v8::internal::compiler::Node"***
  br i1 %101, label %104, label %110

104:                                              ; preds = %90
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.666"* %42) #5
  %105 = load i64, i64* %41, align 8
  %106 = load i64, i64* %40, align 8
  %107 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %38, align 8
  %108 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %36, align 8
  %109 = add i64 %106, %105
  br label %110

110:                                              ; preds = %104, %90
  %111 = phi i64 [ %109, %104 ], [ %100, %90 ]
  %112 = phi %"class.v8::internal::compiler::Node"*** [ %108, %104 ], [ %103, %90 ]
  %113 = phi %"class.v8::internal::compiler::Node"*** [ %107, %104 ], [ %102, %90 ]
  %114 = icmp eq %"class.v8::internal::compiler::Node"*** %112, %113
  br i1 %114, label %122, label %115

115:                                              ; preds = %110
  %116 = lshr i64 %111, 9
  %117 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %113, i64 %116
  %118 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %117, align 8
  %119 = and i64 %111, 511
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 %119
  %121 = bitcast %"class.v8::internal::compiler::Node"** %120 to i64*
  br label %122

122:                                              ; preds = %110, %115
  %123 = phi i64* [ %121, %115 ], [ null, %110 ]
  store i64 %81, i64* %123, align 8
  %124 = load i64, i64* %41, align 8
  %125 = add i64 %124, 1
  store i64 %125, i64* %41, align 8
  %126 = load i32, i32* %73, align 4
  %127 = and i32 %126, 16777215
  %128 = zext i32 %127 to i64
  %129 = load i64*, i64** %35, align 8
  %130 = lshr i64 %128, 6
  %131 = getelementptr inbounds i64, i64* %129, i64 %130
  %132 = and i64 %128, 63
  %133 = shl i64 1, %132
  %134 = load i64, i64* %131, align 8
  %135 = or i64 %133, %134
  store i64 %135, i64* %131, align 8
  %136 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %25, align 8
  br label %137

137:                                              ; preds = %66, %122, %80
  %138 = phi %"class.v8::internal::compiler::Operator"* [ %53, %66 ], [ %136, %122 ], [ %53, %80 ]
  %139 = add nuw nsw i32 %45, 1
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %138, i64 0, i32 7
  %141 = load i32, i32* %140, align 4
  %142 = icmp slt i32 %139, %141
  br i1 %142, label %43, label %143

143:                                              ; preds = %137
  %144 = load %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"*, %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"** %16, align 8
  %145 = load i32, i32* %18, align 4
  %146 = and i32 %145, 16777215
  %147 = zext i32 %146 to i64
  br label %148

148:                                              ; preds = %2, %143, %27
  %149 = phi i64 [ %147, %143 ], [ %21, %27 ], [ %21, %2 ]
  %150 = phi i32 [ %146, %143 ], [ %20, %27 ], [ %20, %2 ]
  %151 = phi %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* [ %144, %143 ], [ %17, %27 ], [ %17, %2 ]
  %152 = phi %"class.v8::internal::compiler::Operator"* [ %138, %143 ], [ %26, %27 ], [ %26, %2 ]
  %153 = getelementptr %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %152, i64 0, i32 6
  %155 = load i32, i32* %154, align 8
  %156 = icmp sgt i32 %155, 0
  %157 = getelementptr %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet", %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %151, i64 %149, i32 0
  %158 = load %"class.v8::internal::compiler::PersistentMap"*, %"class.v8::internal::compiler::PersistentMap"** %157, align 8
  %159 = icmp eq %"class.v8::internal::compiler::PersistentMap"* %158, null
  br i1 %156, label %160, label %1648

160:                                              ; preds = %148
  %161 = load i8, i8* @_ZN2v88internal28FLAG_trace_store_eliminationE, align 1
  %162 = icmp eq i8 %161, 0
  %163 = or i1 %159, %162
  br i1 %163, label %168, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %152, i64 0, i32 1
  %166 = load i8*, i8** %165, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i32 %150, i8* %166) #5
  %167 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %153, align 8
  br label %168

168:                                              ; preds = %164, %160
  %169 = phi %"class.v8::internal::compiler::Operator"* [ %167, %164 ], [ %152, %160 ]
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %169, i64 0, i32 9
  %171 = load i8, i8* %170, align 4
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 7, i32 0
  %175 = load %"class.v8::internal::compiler::PersistentMap"*, %"class.v8::internal::compiler::PersistentMap"** %174, align 8
  br label %706

176:                                              ; preds = %168
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %178 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %177, align 8
  %179 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %178, null
  br i1 %179, label %702, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 7
  %182 = bitcast %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %181 to i64*
  %183 = getelementptr %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 2
  %184 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %11 to i8*
  %185 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %11, i64 0, i32 0
  %186 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %11, i64 0, i32 2, i32 0, i32 0
  %187 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %11, i64 0, i32 5
  %188 = bitcast %"class.std::__1::__tree_end_node"** %186 to i8*
  %189 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %11, i64 0, i32 3
  %190 = bitcast %"class.std::__1::__tree_end_node"** %186 to i64*
  %191 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %11, i64 0, i32 2
  %192 = bitcast %"class.std::__1::__map_const_iterator"* %191 to %"class.std::__1::__tree_node"**
  %193 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %10 to i8*
  %194 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %10, i64 0, i32 0
  %195 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %10, i64 0, i32 2, i32 0, i32 0
  %196 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %10, i64 0, i32 5
  %197 = bitcast %"class.std::__1::__tree_end_node"** %195 to i8*
  %198 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %10, i64 0, i32 3
  %199 = bitcast %"class.std::__1::__tree_end_node"** %195 to i64*
  %200 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %10, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__map_const_iterator"* %200 to %"class.std::__1::__tree_node"**
  %202 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* %12 to i8*
  %203 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* %12, i64 0, i32 1
  %204 = bitcast %"class.v8::internal::compiler::PersistentMap"* %203 to i8*
  %205 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %13 to i8*
  %206 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %14 to i8*
  %207 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %13, i64 0, i32 0, i32 3
  %208 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %14, i64 0, i32 0, i32 3
  %209 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %13, i64 0, i32 0, i32 2
  %210 = bitcast %"class.std::__1::__map_const_iterator"* %209 to %"class.std::__1::__tree_node"**
  %211 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %14, i64 0, i32 0, i32 2
  %212 = bitcast %"class.std::__1::__map_const_iterator"* %211 to %"class.std::__1::__tree_node"**
  %213 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %13, i64 0, i32 1, i32 3
  %214 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %14, i64 0, i32 1, i32 3
  %215 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %13, i64 0, i32 1, i32 2
  %216 = bitcast %"class.std::__1::__map_const_iterator"* %215 to %"class.std::__1::__tree_node"**
  %217 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %14, i64 0, i32 1, i32 2
  %218 = bitcast %"class.std::__1::__map_const_iterator"* %217 to %"class.std::__1::__tree_node"**
  %219 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %13, i64 0, i32 2
  %220 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %13, i64 0, i32 3
  %221 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %13, i64 0, i32 1, i32 5
  %222 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %13, i64 0, i32 0, i32 5
  %223 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 7, i32 0
  %224 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %15 to i8*
  %225 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %15, i64 0, i32 0
  %226 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %15, i64 0, i32 2, i32 0, i32 0
  %227 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %15, i64 0, i32 5
  %228 = bitcast %"class.std::__1::__tree_end_node"** %226 to i8*
  %229 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %15, i64 0, i32 3
  %230 = bitcast %"class.std::__1::__tree_end_node"** %226 to i64*
  %231 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %15, i64 0, i32 2
  %232 = bitcast %"class.std::__1::__map_const_iterator"* %231 to %"class.std::__1::__tree_node"**
  br label %233

233:                                              ; preds = %698, %180
  %234 = phi i8 [ 1, %180 ], [ %699, %698 ]
  %235 = phi i64 [ 0, %180 ], [ %700, %698 ]
  %236 = phi %"struct.v8::internal::compiler::Node::Use"* [ %178, %180 ], [ %238, %698 ]
  %237 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %236, i64 0, i32 0
  %238 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %237, align 8
  %239 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %236, i64 0, i32 2
  %240 = load i32, i32* %239, align 8
  %241 = lshr i32 %240, 1
  %242 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %236, i64 1
  %243 = zext i32 %241 to i64
  %244 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %242, i64 %243
  %245 = and i32 %240, 1
  %246 = icmp eq i32 %245, 0
  %247 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %244 to i64
  %248 = select i1 %246, i64 16, i64 32
  %249 = add i64 %248, %247
  %250 = inttoptr i64 %249 to %"class.v8::internal::compiler::Node"**
  %251 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %250, i64 %243
  %252 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties12IsEffectEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %236, %"class.v8::internal::compiler::Node"** %251) #5
  br i1 %252, label %253, label %698

253:                                              ; preds = %233
  %254 = load i32, i32* %239, align 8
  %255 = lshr i32 %254, 1
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %242, i64 %256
  %258 = and i32 %254, 1
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %253
  %261 = bitcast %"struct.v8::internal::compiler::Node::Use"* %257 to %"class.v8::internal::compiler::Node"*
  br label %265

262:                                              ; preds = %253
  %263 = bitcast %"struct.v8::internal::compiler::Node::Use"* %257 to %"class.v8::internal::compiler::Node"**
  %264 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %263, align 8
  br label %265

265:                                              ; preds = %262, %260
  %266 = phi %"class.v8::internal::compiler::Node"* [ %261, %260 ], [ %264, %262 ]
  %267 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %266, i64 0, i32 3
  %268 = load i32, i32* %267, align 4
  %269 = and i32 %268, 16777215
  %270 = zext i32 %269 to i64
  %271 = load %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"*, %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"** %16, align 8
  %272 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet", %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %271, i64 %270
  %273 = bitcast %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = and i8 %234, 1
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %282, label %277

277:                                              ; preds = %265
  %278 = icmp eq i64 %274, 0
  br i1 %278, label %280, label %279

279:                                              ; preds = %277
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %224) #5
  br label %618

280:                                              ; preds = %277
  %281 = load i64, i64* %182, align 8
  br label %613

282:                                              ; preds = %265
  %283 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %183, align 8
  %284 = inttoptr i64 %235 to %"class.v8::internal::compiler::PersistentMap"*
  %285 = icmp eq i64 %235, 0
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %184) #5
  br i1 %285, label %286, label %287

286:                                              ; preds = %282
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %184) #5
  br label %445

287:                                              ; preds = %282
  %288 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %284, i64 0, i32 0
  %289 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %288, align 8, !noalias !8
  %290 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %289, null
  %291 = getelementptr %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %284, i64 0, i32 1
  %292 = load i8, i8* %291, align 8, !noalias !8
  %293 = icmp ne i8 %292, 0
  %294 = zext i1 %293 to i8
  store i32 0, i32* %185, align 8, !alias.scope !8
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 16, i1 false) #5, !alias.scope !8
  store i8 %294, i8* %187, align 8, !alias.scope !8
  br i1 %290, label %361, label %295

295:                                              ; preds = %287
  %296 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %289, i64 0, i32 1
  %297 = load i8, i8* %296, align 4, !noalias !11
  %298 = icmp sgt i8 %297, 0
  br i1 %298, label %299, label %324

299:                                              ; preds = %295, %314
  %300 = phi i32 [ %319, %314 ], [ 0, %295 ]
  %301 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %316, %314 ], [ %289, %295 ]
  %302 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %301, i64 0, i32 2, i32 0
  %303 = load i32, i32* %302, align 4, !noalias !11
  %304 = lshr i32 -2147483648, %300
  %305 = and i32 %303, %304
  %306 = icmp eq i32 %305, 0
  %307 = sext i32 %300 to i64
  %308 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %301, i64 0, i32 4, i64 %307
  %309 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %308, align 8, !noalias !8
  br i1 %306, label %314, label %310

310:                                              ; preds = %299
  %311 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %309, null
  %312 = select i1 %311, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* null, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %301
  %313 = select i1 %311, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %301, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %309
  br label %314

314:                                              ; preds = %310, %299
  %315 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %309, %299 ], [ %312, %310 ]
  %316 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %301, %299 ], [ %313, %310 ]
  %317 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %11, i64 0, i32 4, i32 0, i64 %307
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %315, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %317, align 8, !alias.scope !11
  %318 = load i32, i32* %185, align 8, !alias.scope !11
  %319 = add nsw i32 %318, 1
  store i32 %319, i32* %185, align 8, !alias.scope !11
  %320 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %316, i64 0, i32 1
  %321 = load i8, i8* %320, align 4, !noalias !11
  %322 = sext i8 %321 to i32
  %323 = icmp slt i32 %319, %322
  br i1 %323, label %299, label %324

324:                                              ; preds = %314, %295
  %325 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %289, %295 ], [ %316, %314 ]
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %325, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %189, align 8, !alias.scope !11
  %326 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %325, i64 0, i32 3
  %327 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %326, align 8, !noalias !11
  %328 = icmp eq %"class.v8::internal::ZoneMap"* %327, null
  br i1 %328, label %329, label %331

329:                                              ; preds = %324
  %330 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %192, align 8
  br label %335

331:                                              ; preds = %324
  %332 = bitcast %"class.v8::internal::ZoneMap"* %327 to i64*
  %333 = load i64, i64* %332, align 8, !noalias !11
  store i64 %333, i64* %190, align 8, !alias.scope !11
  %334 = inttoptr i64 %333 to %"class.std::__1::__tree_node"*
  br label %335

335:                                              ; preds = %331, %329
  %336 = phi %"class.std::__1::__tree_node"* [ %330, %329 ], [ %334, %331 ]
  %337 = zext i1 %293 to i32
  %338 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %325, i64 0, i32 0, i32 0, i32 1
  %339 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %336, i64 0, i32 2, i32 0, i32 1
  %340 = select i1 %328, i8* %338, i8* %339
  %341 = load i8, i8* %340, align 4, !noalias !11
  %342 = and i8 %341, 1
  %343 = zext i8 %342 to i32
  %344 = icmp eq i32 %343, %337
  br i1 %344, label %345, label %362

345:                                              ; preds = %335, %348
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* nonnull %11) #5
  %346 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %189, align 8, !alias.scope !11
  %347 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %346, null
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %346, i64 0, i32 3
  %350 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %349, align 8, !noalias !11
  %351 = icmp eq %"class.v8::internal::ZoneMap"* %350, null
  %352 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %346, i64 0, i32 0, i32 0, i32 1
  %353 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %192, align 8
  %354 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %353, i64 0, i32 2, i32 0, i32 1
  %355 = select i1 %351, i8* %352, i8* %354
  %356 = load i8, i8* %355, align 4, !noalias !11
  %357 = and i8 %356, 1
  %358 = zext i8 %357 to i32
  %359 = icmp eq i32 %358, %337
  br i1 %359, label %345, label %360

360:                                              ; preds = %348
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %184) #5
  br label %364

361:                                              ; preds = %345, %287
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %184) #5
  br label %445

362:                                              ; preds = %335
  %363 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %325, null
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %184) #5
  br i1 %363, label %445, label %364

364:                                              ; preds = %362, %360
  %365 = inttoptr i64 %274 to %"class.v8::internal::compiler::PersistentMap"*
  %366 = icmp eq i64 %274, 0
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %193) #5
  br i1 %366, label %367, label %368

367:                                              ; preds = %364
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %193) #5
  br label %445

368:                                              ; preds = %364
  %369 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %365, i64 0, i32 0
  %370 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %369, align 8, !noalias !14
  %371 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %370, null
  %372 = getelementptr %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %365, i64 0, i32 1
  %373 = load i8, i8* %372, align 8, !noalias !14
  %374 = icmp ne i8 %373, 0
  %375 = zext i1 %374 to i8
  store i32 0, i32* %194, align 8, !alias.scope !14
  call void @llvm.memset.p0i8.i64(i8* align 8 %197, i8 0, i64 16, i1 false) #5, !alias.scope !14
  store i8 %375, i8* %196, align 8, !alias.scope !14
  br i1 %371, label %442, label %376

376:                                              ; preds = %368
  %377 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %370, i64 0, i32 1
  %378 = load i8, i8* %377, align 4, !noalias !17
  %379 = icmp sgt i8 %378, 0
  br i1 %379, label %380, label %405

380:                                              ; preds = %376, %395
  %381 = phi i32 [ %400, %395 ], [ 0, %376 ]
  %382 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %397, %395 ], [ %370, %376 ]
  %383 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %382, i64 0, i32 2, i32 0
  %384 = load i32, i32* %383, align 4, !noalias !17
  %385 = lshr i32 -2147483648, %381
  %386 = and i32 %384, %385
  %387 = icmp eq i32 %386, 0
  %388 = sext i32 %381 to i64
  %389 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %382, i64 0, i32 4, i64 %388
  %390 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %389, align 8, !noalias !14
  br i1 %387, label %395, label %391

391:                                              ; preds = %380
  %392 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %390, null
  %393 = select i1 %392, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* null, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %382
  %394 = select i1 %392, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %382, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %390
  br label %395

395:                                              ; preds = %391, %380
  %396 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %390, %380 ], [ %393, %391 ]
  %397 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %382, %380 ], [ %394, %391 ]
  %398 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %10, i64 0, i32 4, i32 0, i64 %388
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %396, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %398, align 8, !alias.scope !17
  %399 = load i32, i32* %194, align 8, !alias.scope !17
  %400 = add nsw i32 %399, 1
  store i32 %400, i32* %194, align 8, !alias.scope !17
  %401 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %397, i64 0, i32 1
  %402 = load i8, i8* %401, align 4, !noalias !17
  %403 = sext i8 %402 to i32
  %404 = icmp slt i32 %400, %403
  br i1 %404, label %380, label %405

405:                                              ; preds = %395, %376
  %406 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %370, %376 ], [ %397, %395 ]
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %406, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %198, align 8, !alias.scope !17
  %407 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %406, i64 0, i32 3
  %408 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %407, align 8, !noalias !17
  %409 = icmp eq %"class.v8::internal::ZoneMap"* %408, null
  br i1 %409, label %410, label %412

410:                                              ; preds = %405
  %411 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %201, align 8
  br label %416

412:                                              ; preds = %405
  %413 = bitcast %"class.v8::internal::ZoneMap"* %408 to i64*
  %414 = load i64, i64* %413, align 8, !noalias !17
  store i64 %414, i64* %199, align 8, !alias.scope !17
  %415 = inttoptr i64 %414 to %"class.std::__1::__tree_node"*
  br label %416

416:                                              ; preds = %412, %410
  %417 = phi %"class.std::__1::__tree_node"* [ %411, %410 ], [ %415, %412 ]
  %418 = zext i1 %374 to i32
  %419 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %406, i64 0, i32 0, i32 0, i32 1
  %420 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %417, i64 0, i32 2, i32 0, i32 1
  %421 = select i1 %409, i8* %419, i8* %420
  %422 = load i8, i8* %421, align 4, !noalias !17
  %423 = and i8 %422, 1
  %424 = zext i8 %423 to i32
  %425 = icmp eq i32 %424, %418
  br i1 %425, label %426, label %443

426:                                              ; preds = %416, %429
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* nonnull %10) #5
  %427 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %198, align 8, !alias.scope !17
  %428 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %427, null
  br i1 %428, label %442, label %429

429:                                              ; preds = %426
  %430 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %427, i64 0, i32 3
  %431 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %430, align 8, !noalias !17
  %432 = icmp eq %"class.v8::internal::ZoneMap"* %431, null
  %433 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %427, i64 0, i32 0, i32 0, i32 1
  %434 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %201, align 8
  %435 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %434, i64 0, i32 2, i32 0, i32 1
  %436 = select i1 %432, i8* %433, i8* %435
  %437 = load i8, i8* %436, align 4, !noalias !17
  %438 = and i8 %437, 1
  %439 = zext i8 %438 to i32
  %440 = icmp eq i32 %439, %418
  br i1 %440, label %426, label %441

441:                                              ; preds = %429
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %193) #5
  br label %447

442:                                              ; preds = %426, %368
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %193) #5
  br label %445

443:                                              ; preds = %416
  %444 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %406, null
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %193) #5
  br i1 %444, label %445, label %447

445:                                              ; preds = %443, %442, %367, %362, %361, %286
  %446 = load %"class.v8::internal::compiler::PersistentMap"*, %"class.v8::internal::compiler::PersistentMap"** %223, align 8
  br label %610

447:                                              ; preds = %443, %441
  %448 = ptrtoint %"class.v8::internal::Zone"* %283 to i64
  %449 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %283, i64 0, i32 2
  %450 = load i64, i64* %449, align 8
  %451 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %283, i64 0, i32 3
  %452 = load i64, i64* %451, align 8
  %453 = sub i64 %452, %450
  %454 = icmp ult i64 %453, 24
  br i1 %454, label %455, label %457, !prof !2

455:                                              ; preds = %447
  %456 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %283, i64 24) #5
  br label %459

457:                                              ; preds = %447
  %458 = add i64 %450, 24
  store i64 %458, i64* %449, align 8
  br label %459

459:                                              ; preds = %457, %455
  %460 = phi i64 [ %456, %455 ], [ %450, %457 ]
  %461 = inttoptr i64 %460 to %"class.v8::internal::compiler::PersistentMap"*
  %462 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %461, i64 0, i32 0
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* null, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %462, align 8
  %463 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %461, i64 0, i32 1
  store i8 0, i8* %463, align 8
  %464 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %461, i64 0, i32 2
  %465 = bitcast %"class.v8::internal::Zone"** %464 to i64*
  store i64 %448, i64* %465, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %202) #5
  %466 = inttoptr i64 %235 to i8*
  %467 = inttoptr i64 %274 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %202, i8* align 8 %466, i64 24, i1 false) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* align 8 %467, i64 24, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 584, i8* nonnull %205) #5
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE11ZipIterable5beginEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* noalias nonnull %13, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* nonnull %12) #5
  call void @llvm.lifetime.start.p0i8(i64 584, i8* nonnull %206) #5
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE11ZipIterable3endEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* noalias nonnull %14, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* nonnull %12) #5
  %468 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %208, align 8
  %469 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %468, null
  %470 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %468, i64 0, i32 2, i32 0
  %471 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %468, i64 0, i32 3
  %472 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %468 to i64*
  %473 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %212, align 8
  %474 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %473, i64 0, i32 2, i32 0
  %475 = bitcast %"struct.std::__1::pair.717"* %474 to i64*
  %476 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %214, align 8
  %477 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %476, null
  %478 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %476, i64 0, i32 2, i32 0
  %479 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %476, i64 0, i32 3
  %480 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %476 to i64*
  %481 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %218, align 8
  %482 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %481, i64 0, i32 2, i32 0
  %483 = bitcast %"struct.std::__1::pair.717"* %482 to i64*
  br label %484

484:                                              ; preds = %609, %459
  %485 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %207, align 8
  %486 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %485, null
  %487 = or i1 %469, %486
  br i1 %487, label %516, label %488

488:                                              ; preds = %484
  %489 = load i32, i32* %470, align 8
  %490 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %485, i64 0, i32 2, i32 0
  %491 = load i32, i32* %490, align 4
  %492 = icmp eq i32 %491, %489
  br i1 %492, label %493, label %553

493:                                              ; preds = %488
  %494 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %485, i64 0, i32 3
  %495 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %494, align 8
  %496 = icmp eq %"class.v8::internal::ZoneMap"* %495, null
  %497 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %485 to i64*
  %498 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %210, align 8
  %499 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %498, i64 0, i32 2, i32 0
  %500 = bitcast %"struct.std::__1::pair.717"* %499 to i64*
  %501 = select i1 %496, i64* %497, i64* %500
  %502 = load i64, i64* %501, align 4
  %503 = trunc i64 %502 to i32
  %504 = lshr i64 %502, 32
  %505 = trunc i64 %504 to i32
  %506 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %471, align 8
  %507 = icmp eq %"class.v8::internal::ZoneMap"* %506, null
  %508 = select i1 %507, i64* %472, i64* %475
  %509 = load i64, i64* %508, align 4
  %510 = trunc i64 %509 to i32
  %511 = icmp eq i32 %510, %503
  %512 = lshr i64 %509, 32
  %513 = trunc i64 %512 to i32
  %514 = icmp eq i32 %513, %505
  %515 = and i1 %511, %514
  br i1 %515, label %518, label %553

516:                                              ; preds = %484
  %517 = and i1 %469, %486
  br i1 %517, label %518, label %553

518:                                              ; preds = %516, %493
  %519 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %213, align 8
  %520 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %519, null
  %521 = or i1 %477, %520
  br i1 %521, label %550, label %522

522:                                              ; preds = %518
  %523 = load i32, i32* %478, align 8
  %524 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %519, i64 0, i32 2, i32 0
  %525 = load i32, i32* %524, align 4
  %526 = icmp eq i32 %525, %523
  br i1 %526, label %527, label %553

527:                                              ; preds = %522
  %528 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %519, i64 0, i32 3
  %529 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %528, align 8
  %530 = icmp eq %"class.v8::internal::ZoneMap"* %529, null
  %531 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %519 to i64*
  %532 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %216, align 8
  %533 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %532, i64 0, i32 2, i32 0
  %534 = bitcast %"struct.std::__1::pair.717"* %533 to i64*
  %535 = select i1 %530, i64* %531, i64* %534
  %536 = load i64, i64* %535, align 4
  %537 = trunc i64 %536 to i32
  %538 = lshr i64 %536, 32
  %539 = trunc i64 %538 to i32
  %540 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %479, align 8
  %541 = icmp eq %"class.v8::internal::ZoneMap"* %540, null
  %542 = select i1 %541, i64* %480, i64* %483
  %543 = load i64, i64* %542, align 4
  %544 = trunc i64 %543 to i32
  %545 = icmp eq i32 %544, %537
  %546 = lshr i64 %543, 32
  %547 = trunc i64 %546 to i32
  %548 = icmp eq i32 %547, %539
  %549 = and i1 %545, %548
  br i1 %549, label %552, label %553

550:                                              ; preds = %518
  %551 = and i1 %477, %520
  br i1 %551, label %552, label %553

552:                                              ; preds = %550, %527
  call void @llvm.lifetime.end.p0i8(i64 584, i8* nonnull %206) #5
  call void @llvm.lifetime.end.p0i8(i64 584, i8* nonnull %205) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %202) #5
  br label %610

553:                                              ; preds = %550, %527, %522, %516, %493, %488
  %554 = load i8, i8* %219, align 8, !range !3
  %555 = icmp eq i8 %554, 0
  br i1 %555, label %585, label %556

556:                                              ; preds = %553
  %557 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %485, i64 0, i32 3
  %558 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %557, align 8
  %559 = icmp eq %"class.v8::internal::ZoneMap"* %558, null
  %560 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %485 to i64*
  %561 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %485, i64 0, i32 0, i32 0, i32 1
  %562 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %210, align 8
  %563 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %562, i64 0, i32 2, i32 0
  %564 = bitcast %"struct.std::__1::pair.717"* %563 to i64*
  %565 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %562, i64 0, i32 2, i32 0, i32 1
  %566 = select i1 %559, i8* %561, i8* %565
  %567 = select i1 %559, i64* %560, i64* %564
  %568 = load i64, i64* %567, align 4
  %569 = load i8, i8* %566, align 4
  %570 = load i8, i8* %220, align 1, !range !3
  %571 = icmp eq i8 %570, 0
  br i1 %571, label %583, label %572

572:                                              ; preds = %556
  %573 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %213, align 8
  %574 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %573, i64 0, i32 3
  %575 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %574, align 8
  %576 = icmp eq %"class.v8::internal::ZoneMap"* %575, null
  %577 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %573, i64 0, i32 0, i32 0, i32 1
  %578 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %216, align 8
  %579 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %578, i64 0, i32 2, i32 0, i32 1
  %580 = select i1 %576, i8* %577, i8* %579
  %581 = load i8, i8* %580, align 4
  %582 = and i8 %581, 1
  br label %601

583:                                              ; preds = %556
  %584 = load i8, i8* %221, align 8, !range !3
  br label %601

585:                                              ; preds = %553
  %586 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %213, align 8
  %587 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %586, i64 0, i32 3
  %588 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %587, align 8
  %589 = icmp eq %"class.v8::internal::ZoneMap"* %588, null
  %590 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %586 to i64*
  %591 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %586, i64 0, i32 0, i32 0, i32 1
  %592 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %216, align 8
  %593 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %592, i64 0, i32 2, i32 0
  %594 = bitcast %"struct.std::__1::pair.717"* %593 to i64*
  %595 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %592, i64 0, i32 2, i32 0, i32 1
  %596 = select i1 %589, i8* %591, i8* %595
  %597 = select i1 %589, i64* %590, i64* %594
  %598 = load i64, i64* %597, align 4
  %599 = load i8, i8* %596, align 4
  %600 = load i8, i8* %222, align 8
  br label %601

601:                                              ; preds = %572, %583, %585
  %602 = phi i8 [ %599, %585 ], [ %582, %572 ], [ %584, %583 ]
  %603 = phi i8 [ %600, %585 ], [ %569, %572 ], [ %569, %583 ]
  %604 = phi i64 [ %598, %585 ], [ %568, %572 ], [ %568, %583 ]
  %605 = icmp eq i8 %603, 0
  %606 = icmp eq i8 %602, 0
  %607 = or i1 %605, %606
  br i1 %607, label %609, label %608

608:                                              ; preds = %601
  tail call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE3SetES4_b(%"class.v8::internal::compiler::PersistentMap"* %461, i64 %604, i1 zeroext true) #5
  br label %609

609:                                              ; preds = %608, %601
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE15double_iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* nonnull %13) #5
  br label %484

610:                                              ; preds = %552, %445
  %611 = phi %"class.v8::internal::compiler::PersistentMap"* [ %461, %552 ], [ %446, %445 ]
  %612 = ptrtoint %"class.v8::internal::compiler::PersistentMap"* %611 to i64
  br label %613

613:                                              ; preds = %610, %280
  %614 = phi i64 [ %612, %610 ], [ %281, %280 ]
  %615 = phi i8 [ %234, %610 ], [ 0, %280 ]
  %616 = icmp eq i64 %614, 0
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %224) #5
  br i1 %616, label %617, label %618

617:                                              ; preds = %613
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %224) #5
  br label %702

618:                                              ; preds = %613, %279
  %619 = phi i64 [ %274, %279 ], [ %614, %613 ]
  %620 = phi i8 [ 0, %279 ], [ %615, %613 ]
  %621 = inttoptr i64 %619 to %"class.v8::internal::compiler::PersistentMap"*
  %622 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %621, i64 0, i32 0
  %623 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %622, align 8, !noalias !20
  %624 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %623, null
  %625 = getelementptr %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %621, i64 0, i32 1
  %626 = load i8, i8* %625, align 8, !noalias !20
  %627 = icmp ne i8 %626, 0
  %628 = zext i1 %627 to i8
  store i32 0, i32* %225, align 8, !alias.scope !20
  call void @llvm.memset.p0i8.i64(i8* align 8 %228, i8 0, i64 16, i1 false) #5, !alias.scope !20
  store i8 %628, i8* %227, align 8, !alias.scope !20
  br i1 %624, label %695, label %629

629:                                              ; preds = %618
  %630 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %623, i64 0, i32 1
  %631 = load i8, i8* %630, align 4, !noalias !23
  %632 = icmp sgt i8 %631, 0
  br i1 %632, label %633, label %658

633:                                              ; preds = %629, %648
  %634 = phi i32 [ %653, %648 ], [ 0, %629 ]
  %635 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %650, %648 ], [ %623, %629 ]
  %636 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %635, i64 0, i32 2, i32 0
  %637 = load i32, i32* %636, align 4, !noalias !23
  %638 = lshr i32 -2147483648, %634
  %639 = and i32 %637, %638
  %640 = icmp eq i32 %639, 0
  %641 = sext i32 %634 to i64
  %642 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %635, i64 0, i32 4, i64 %641
  %643 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %642, align 8, !noalias !20
  br i1 %640, label %648, label %644

644:                                              ; preds = %633
  %645 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %643, null
  %646 = select i1 %645, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* null, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %635
  %647 = select i1 %645, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %635, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %643
  br label %648

648:                                              ; preds = %644, %633
  %649 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %643, %633 ], [ %646, %644 ]
  %650 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %635, %633 ], [ %647, %644 ]
  %651 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %15, i64 0, i32 4, i32 0, i64 %641
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %649, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %651, align 8, !alias.scope !23
  %652 = load i32, i32* %225, align 8, !alias.scope !23
  %653 = add nsw i32 %652, 1
  store i32 %653, i32* %225, align 8, !alias.scope !23
  %654 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %650, i64 0, i32 1
  %655 = load i8, i8* %654, align 4, !noalias !23
  %656 = sext i8 %655 to i32
  %657 = icmp slt i32 %653, %656
  br i1 %657, label %633, label %658

658:                                              ; preds = %648, %629
  %659 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %623, %629 ], [ %650, %648 ]
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %659, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %229, align 8, !alias.scope !23
  %660 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %659, i64 0, i32 3
  %661 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %660, align 8, !noalias !23
  %662 = icmp eq %"class.v8::internal::ZoneMap"* %661, null
  br i1 %662, label %663, label %665

663:                                              ; preds = %658
  %664 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %232, align 8
  br label %669

665:                                              ; preds = %658
  %666 = bitcast %"class.v8::internal::ZoneMap"* %661 to i64*
  %667 = load i64, i64* %666, align 8, !noalias !23
  store i64 %667, i64* %230, align 8, !alias.scope !23
  %668 = inttoptr i64 %667 to %"class.std::__1::__tree_node"*
  br label %669

669:                                              ; preds = %665, %663
  %670 = phi %"class.std::__1::__tree_node"* [ %664, %663 ], [ %668, %665 ]
  %671 = zext i1 %627 to i32
  %672 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %659, i64 0, i32 0, i32 0, i32 1
  %673 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %670, i64 0, i32 2, i32 0, i32 1
  %674 = select i1 %662, i8* %672, i8* %673
  %675 = load i8, i8* %674, align 4, !noalias !23
  %676 = and i8 %675, 1
  %677 = zext i8 %676 to i32
  %678 = icmp eq i32 %677, %671
  br i1 %678, label %679, label %696

679:                                              ; preds = %669, %682
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* nonnull %15) #5
  %680 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %229, align 8, !alias.scope !23
  %681 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %680, null
  br i1 %681, label %695, label %682

682:                                              ; preds = %679
  %683 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %680, i64 0, i32 3
  %684 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %683, align 8, !noalias !23
  %685 = icmp eq %"class.v8::internal::ZoneMap"* %684, null
  %686 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %680, i64 0, i32 0, i32 0, i32 1
  %687 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %232, align 8
  %688 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %687, i64 0, i32 2, i32 0, i32 1
  %689 = select i1 %685, i8* %686, i8* %688
  %690 = load i8, i8* %689, align 4, !noalias !23
  %691 = and i8 %690, 1
  %692 = zext i8 %691 to i32
  %693 = icmp eq i32 %692, %671
  br i1 %693, label %679, label %694

694:                                              ; preds = %682
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %224) #5
  br label %698

695:                                              ; preds = %618, %679
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %224) #5
  br label %702

696:                                              ; preds = %669
  %697 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %659, null
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %224) #5
  br i1 %697, label %702, label %698

698:                                              ; preds = %696, %694, %233
  %699 = phi i8 [ %234, %233 ], [ %620, %696 ], [ %620, %694 ]
  %700 = phi i64 [ %235, %233 ], [ %619, %696 ], [ %619, %694 ]
  %701 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %238, null
  br i1 %701, label %702, label %233

702:                                              ; preds = %698, %696, %695, %617, %176
  %703 = phi i64 [ 0, %617 ], [ %619, %695 ], [ 0, %176 ], [ %700, %698 ], [ %619, %696 ]
  %704 = inttoptr i64 %703 to %"class.v8::internal::compiler::PersistentMap"*
  %705 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %153, align 8
  br label %706

706:                                              ; preds = %702, %173
  %707 = phi %"class.v8::internal::compiler::Operator"* [ %169, %173 ], [ %705, %702 ]
  %708 = phi %"class.v8::internal::compiler::PersistentMap"* [ %175, %173 ], [ %704, %702 ]
  %709 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %710 = getelementptr %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %707, i64 0, i32 2
  %711 = load i16, i16* %710, align 8
  switch i16 %711, label %1041 [
    i16 272, label %712
    i16 230, label %876
    i16 520, label %1033
    i16 440, label %1033
    i16 439, label %1033
    i16 437, label %1033
    i16 271, label %1033
    i16 229, label %1033
    i16 36, label %1033
    i16 56, label %1033
  ]

712:                                              ; preds = %706
  %713 = load i32, i32* %18, align 4
  %714 = and i32 %713, 251658240
  %715 = icmp eq i32 %714, 251658240
  %716 = add i64 %709, 32
  br i1 %715, label %717, label %721

717:                                              ; preds = %712
  %718 = inttoptr i64 %716 to i64*
  %719 = load i64, i64* %718, align 8
  %720 = add i64 %719, 16
  br label %721

721:                                              ; preds = %717, %712
  %722 = phi i64 [ %720, %717 ], [ %716, %712 ]
  %723 = inttoptr i64 %722 to %"class.v8::internal::compiler::Node"**
  %724 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %723, align 8
  %725 = tail call dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %707) #5
  %726 = getelementptr %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %725, i64 0, i32 2
  %727 = load i32, i32* %726, align 4
  %728 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %724, i64 0, i32 3
  %729 = load i32, i32* %728, align 4
  %730 = and i32 %729, 16777215
  %731 = zext i32 %727 to i64
  %732 = shl nuw i64 %731, 32
  %733 = zext i32 %730 to i64
  %734 = or i64 %732, %733
  %735 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %735) #5
  store i64 %734, i64* %7, align 8
  %736 = icmp eq %"class.v8::internal::compiler::PersistentMap"* %708, null
  br i1 %736, label %737, label %740

737:                                              ; preds = %721
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %735) #5
  %738 = load i8, i8* @_ZN2v88internal28FLAG_trace_store_eliminationE, align 1, !range !3
  %739 = icmp eq i8 %738, 0
  br i1 %739, label %844, label %836

740:                                              ; preds = %721
  %741 = bitcast i64* %7 to %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"*
  %742 = call fastcc dereferenceable(1) i8* @_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE3GetERKS4_(%"class.v8::internal::compiler::PersistentMap"* nonnull %708, %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"* nonnull dereferenceable(8) %741) #5
  %743 = load i8, i8* %742, align 1, !range !3
  %744 = icmp eq i8 %743, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %735) #5
  %745 = load i8, i8* @_ZN2v88internal28FLAG_trace_store_eliminationE, align 1, !range !3
  %746 = icmp ne i8 %745, 0
  br i1 %744, label %835, label %747

747:                                              ; preds = %740
  br i1 %746, label %748, label %756

748:                                              ; preds = %747
  %749 = load i32, i32* %18, align 4
  %750 = and i32 %749, 16777215
  %751 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %725, i64 0, i32 6, i32 0
  %752 = load i8, i8* %751, align 1
  %753 = tail call i8* @_ZN2v88internal19MachineReprToStringENS0_21MachineRepresentationE(i8 zeroext %752) #5
  %754 = load i32, i32* %728, align 4
  %755 = and i32 %754, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.8, i64 0, i64 0), i32 %750, i32 %727, i8* %753, i32 %755) #5
  br label %756

756:                                              ; preds = %748, %747
  %757 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 6, i32 0, i32 0
  %758 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  %759 = bitcast %"class.std::__1::__tree_end_node"* %758 to %"class.std::__1::__tree_node.745"**
  %760 = load %"class.std::__1::__tree_node.745"*, %"class.std::__1::__tree_node.745"** %759, align 8
  %761 = icmp eq %"class.std::__1::__tree_node.745"* %760, null
  br i1 %761, label %790, label %762

762:                                              ; preds = %756
  %763 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %764

764:                                              ; preds = %786, %762
  %765 = phi %"class.std::__1::__tree_node.745"* [ %789, %786 ], [ %760, %762 ]
  %766 = phi %"class.std::__1::__tree_node_base"** [ %788, %786 ], [ %763, %762 ]
  %767 = getelementptr inbounds %"class.std::__1::__tree_node.745", %"class.std::__1::__tree_node.745"* %765, i64 0, i32 1
  %768 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %767, align 8
  %769 = icmp ugt %"class.v8::internal::compiler::Node"* %768, %1
  br i1 %769, label %770, label %776

770:                                              ; preds = %764
  %771 = getelementptr inbounds %"class.std::__1::__tree_node.745", %"class.std::__1::__tree_node.745"* %765, i64 0, i32 0, i32 0, i32 0
  %772 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %771, align 8
  %773 = icmp eq %"class.std::__1::__tree_node_base"* %772, null
  br i1 %773, label %774, label %786

774:                                              ; preds = %770
  %775 = getelementptr inbounds %"class.std::__1::__tree_node.745", %"class.std::__1::__tree_node.745"* %765, i64 0, i32 0, i32 0
  br label %792

776:                                              ; preds = %764
  %777 = icmp ult %"class.v8::internal::compiler::Node"* %768, %1
  br i1 %777, label %778, label %784

778:                                              ; preds = %776
  %779 = getelementptr inbounds %"class.std::__1::__tree_node.745", %"class.std::__1::__tree_node.745"* %765, i64 0, i32 0, i32 1
  %780 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %779, align 8
  %781 = icmp eq %"class.std::__1::__tree_node_base"* %780, null
  br i1 %781, label %782, label %786

782:                                              ; preds = %778
  %783 = getelementptr inbounds %"class.std::__1::__tree_node.745", %"class.std::__1::__tree_node.745"* %765, i64 0, i32 0, i32 0
  br label %792

784:                                              ; preds = %776
  %785 = getelementptr inbounds %"class.std::__1::__tree_node.745", %"class.std::__1::__tree_node.745"* %765, i64 0, i32 0, i32 0
  br label %792

786:                                              ; preds = %778, %770
  %787 = phi %"class.std::__1::__tree_node_base"* [ %772, %770 ], [ %780, %778 ]
  %788 = phi %"class.std::__1::__tree_node_base"** [ %771, %770 ], [ %779, %778 ]
  %789 = bitcast %"class.std::__1::__tree_node_base"* %787 to %"class.std::__1::__tree_node.745"*
  br label %764

790:                                              ; preds = %756
  %791 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %758, i64 0, i32 0
  br label %792

792:                                              ; preds = %790, %784, %782, %774
  %793 = phi %"class.std::__1::__tree_end_node"* [ %758, %790 ], [ %775, %774 ], [ %783, %782 ], [ %785, %784 ]
  %794 = phi %"class.std::__1::__tree_node_base"** [ %791, %790 ], [ %771, %774 ], [ %779, %782 ], [ %766, %784 ]
  %795 = bitcast %"class.std::__1::__tree_node_base"** %794 to %"class.std::__1::__tree_node.745"**
  %796 = load %"class.std::__1::__tree_node.745"*, %"class.std::__1::__tree_node.745"** %795, align 8
  %797 = icmp eq %"class.std::__1::__tree_node.745"* %796, null
  br i1 %797, label %798, label %1052

798:                                              ; preds = %792
  %799 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %800 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %799, align 8, !noalias !26
  %801 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %800, i64 0, i32 2
  %802 = load i64, i64* %801, align 8, !noalias !26
  %803 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %800, i64 0, i32 3
  %804 = load i64, i64* %803, align 8, !noalias !26
  %805 = sub i64 %804, %802
  %806 = icmp ult i64 %805, 40
  br i1 %806, label %807, label %809, !prof !2

807:                                              ; preds = %798
  %808 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %800, i64 40) #5, !noalias !26
  br label %811

809:                                              ; preds = %798
  %810 = add i64 %802, 40
  store i64 %810, i64* %801, align 8, !noalias !26
  br label %811

811:                                              ; preds = %809, %807
  %812 = phi i64 [ %808, %807 ], [ %802, %809 ]
  %813 = inttoptr i64 %812 to %"class.std::__1::__tree_node.745"*
  %814 = getelementptr inbounds %"class.std::__1::__tree_node.745", %"class.std::__1::__tree_node.745"* %813, i64 0, i32 1
  %815 = bitcast %"class.v8::internal::compiler::Node"** %814 to i64*
  store i64 %709, i64* %815, align 8, !noalias !26
  %816 = inttoptr i64 %812 to %"class.std::__1::__tree_node_base"*
  %817 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %816, i64 0, i32 2
  %818 = inttoptr i64 %812 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %818, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %793, %"class.std::__1::__tree_end_node"** %817, align 8
  store %"class.std::__1::__tree_node_base"* %816, %"class.std::__1::__tree_node_base"** %794, align 8
  %819 = getelementptr inbounds %"class.std::__1::__tree.697", %"class.std::__1::__tree.697"* %757, i64 0, i32 0
  %820 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %819, align 8
  %821 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %820, i64 0, i32 0
  %822 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %821, align 8
  %823 = icmp eq %"class.std::__1::__tree_node_base"* %822, null
  br i1 %823, label %828, label %824

824:                                              ; preds = %811
  %825 = ptrtoint %"class.std::__1::__tree_node_base"* %822 to i64
  %826 = bitcast %"class.std::__1::__tree.697"* %757 to i64*
  store i64 %825, i64* %826, align 8
  %827 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %794, align 8
  br label %828

828:                                              ; preds = %824, %811
  %829 = phi %"class.std::__1::__tree_node_base"* [ %816, %811 ], [ %827, %824 ]
  %830 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %831 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %830, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %831, %"class.std::__1::__tree_node_base"* %829) #5
  %832 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 0, i32 0
  %833 = load i64, i64* %832, align 8
  %834 = add i64 %833, 1
  store i64 %834, i64* %832, align 8
  br label %1052

835:                                              ; preds = %740
  br i1 %746, label %836, label %844

836:                                              ; preds = %835, %737
  %837 = load i32, i32* %18, align 4
  %838 = and i32 %837, 16777215
  %839 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %725, i64 0, i32 6, i32 0
  %840 = load i8, i8* %839, align 1
  %841 = tail call i8* @_ZN2v88internal19MachineReprToStringENS0_21MachineRepresentationE(i8 zeroext %840) #5
  %842 = load i32, i32* %728, align 4
  %843 = and i32 %842, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.9, i64 0, i64 0), i32 %838, i32 %727, i8* %841, i32 %843) #5
  br label %844

844:                                              ; preds = %836, %835, %737
  %845 = getelementptr %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 2
  %846 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %845, align 8
  %847 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %847) #5
  %848 = bitcast i64* %8 to %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"*
  store i64 %734, i64* %8, align 8
  %849 = call fastcc dereferenceable(1) i8* @_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE3GetERKS4_(%"class.v8::internal::compiler::PersistentMap"* %708, %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"* nonnull dereferenceable(8) %848) #5
  %850 = load i8, i8* %849, align 1, !range !3
  %851 = icmp eq i8 %850, 0
  br i1 %851, label %852, label %874

852:                                              ; preds = %844
  %853 = ptrtoint %"class.v8::internal::Zone"* %846 to i64
  %854 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %846, i64 0, i32 2
  %855 = load i64, i64* %854, align 8
  %856 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %846, i64 0, i32 3
  %857 = load i64, i64* %856, align 8
  %858 = sub i64 %857, %855
  %859 = icmp ult i64 %858, 24
  br i1 %859, label %860, label %862, !prof !2

860:                                              ; preds = %852
  %861 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %846, i64 24) #5
  br label %864

862:                                              ; preds = %852
  %863 = add i64 %855, 24
  store i64 %863, i64* %854, align 8
  br label %864

864:                                              ; preds = %862, %860
  %865 = phi i64 [ %861, %860 ], [ %855, %862 ]
  %866 = inttoptr i64 %865 to %"class.v8::internal::compiler::PersistentMap"*
  %867 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %866, i64 0, i32 0
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* null, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %867, align 8
  %868 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %866, i64 0, i32 1
  store i8 0, i8* %868, align 8
  %869 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %866, i64 0, i32 2
  %870 = bitcast %"class.v8::internal::Zone"** %869 to i64*
  store i64 %853, i64* %870, align 8
  %871 = bitcast %"class.v8::internal::compiler::PersistentMap"* %708 to i8*
  %872 = inttoptr i64 %865 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %872, i8* align 8 %871, i64 24, i1 false) #5
  %873 = load i64, i64* %8, align 8
  tail call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE3SetES4_b(%"class.v8::internal::compiler::PersistentMap"* %866, i64 %873, i1 zeroext true) #5
  br label %874

874:                                              ; preds = %864, %844
  %875 = phi %"class.v8::internal::compiler::PersistentMap"* [ %866, %864 ], [ %708, %844 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %847) #5
  br label %1052

876:                                              ; preds = %706
  %877 = load i32, i32* %18, align 4
  %878 = and i32 %877, 251658240
  %879 = icmp eq i32 %878, 251658240
  %880 = add i64 %709, 32
  br i1 %879, label %881, label %885

881:                                              ; preds = %876
  %882 = inttoptr i64 %880 to i64*
  %883 = load i64, i64* %882, align 8
  %884 = add i64 %883, 16
  br label %885

885:                                              ; preds = %881, %876
  %886 = phi i64 [ %884, %881 ], [ %880, %876 ]
  %887 = inttoptr i64 %886 to %"class.v8::internal::compiler::Node"**
  %888 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %887, align 8
  %889 = tail call dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %707) #5
  %890 = getelementptr %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %889, i64 0, i32 2
  %891 = load i32, i32* %890, align 4
  %892 = load i8, i8* @_ZN2v88internal28FLAG_trace_store_eliminationE, align 1, !range !3
  %893 = icmp eq i8 %892, 0
  br i1 %893, label %903, label %894

894:                                              ; preds = %885
  %895 = load i32, i32* %18, align 4
  %896 = and i32 %895, 16777215
  %897 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %889, i64 0, i32 6, i32 0
  %898 = load i8, i8* %897, align 1
  %899 = tail call i8* @_ZN2v88internal19MachineReprToStringENS0_21MachineRepresentationE(i8 zeroext %898) #5
  %900 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %888, i64 0, i32 3
  %901 = load i32, i32* %900, align 4
  %902 = and i32 %901, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.10, i64 0, i64 0), i32 %896, i32 %891, i8* %899, i32 %902, i32 %891) #5
  br label %903

903:                                              ; preds = %894, %885
  %904 = getelementptr %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 2
  %905 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %904, align 8
  %906 = ptrtoint %"class.v8::internal::Zone"* %905 to i64
  %907 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %905, i64 0, i32 2
  %908 = load i64, i64* %907, align 8
  %909 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %905, i64 0, i32 3
  %910 = load i64, i64* %909, align 8
  %911 = sub i64 %910, %908
  %912 = icmp ult i64 %911, 24
  br i1 %912, label %913, label %915, !prof !2

913:                                              ; preds = %903
  %914 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %905, i64 24) #5
  br label %917

915:                                              ; preds = %903
  %916 = add i64 %908, 24
  store i64 %916, i64* %907, align 8
  br label %917

917:                                              ; preds = %915, %913
  %918 = phi i64 [ %914, %913 ], [ %908, %915 ]
  %919 = inttoptr i64 %918 to %"class.v8::internal::compiler::PersistentMap"*
  %920 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %919, i64 0, i32 0
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* null, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %920, align 8
  %921 = getelementptr %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %919, i64 0, i32 1
  store i8 0, i8* %921, align 8
  %922 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %919, i64 0, i32 2
  %923 = bitcast %"class.v8::internal::Zone"** %922 to i64*
  store i64 %906, i64* %923, align 8
  %924 = bitcast %"class.v8::internal::compiler::PersistentMap"* %708 to i8*
  %925 = inttoptr i64 %918 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %925, i8* align 8 %924, i64 24, i1 false) #5
  %926 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %926) #5
  %927 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %920, align 8, !noalias !29
  %928 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %927, null
  %929 = load i8, i8* %921, align 8, !noalias !29
  %930 = icmp ne i8 %929, 0
  %931 = zext i1 %930 to i8
  %932 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %9, i64 0, i32 0
  store i32 0, i32* %932, align 8, !alias.scope !29
  %933 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %9, i64 0, i32 2, i32 0, i32 0
  %934 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %9, i64 0, i32 5
  %935 = bitcast %"class.std::__1::__tree_end_node"** %933 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %935, i8 0, i64 16, i1 false) #5, !alias.scope !29
  store i8 %931, i8* %934, align 8, !alias.scope !29
  br i1 %928, label %1032, label %936

936:                                              ; preds = %917
  %937 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %927, i64 0, i32 1
  %938 = load i8, i8* %937, align 4, !noalias !32
  %939 = icmp sgt i8 %938, 0
  br i1 %939, label %940, label %965

940:                                              ; preds = %936, %955
  %941 = phi i32 [ %960, %955 ], [ 0, %936 ]
  %942 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %957, %955 ], [ %927, %936 ]
  %943 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %942, i64 0, i32 2, i32 0
  %944 = load i32, i32* %943, align 4, !noalias !32
  %945 = lshr i32 -2147483648, %941
  %946 = and i32 %944, %945
  %947 = icmp eq i32 %946, 0
  %948 = sext i32 %941 to i64
  %949 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %942, i64 0, i32 4, i64 %948
  %950 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %949, align 8, !noalias !29
  br i1 %947, label %955, label %951

951:                                              ; preds = %940
  %952 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %950, null
  %953 = select i1 %952, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* null, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %942
  %954 = select i1 %952, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %942, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %950
  br label %955

955:                                              ; preds = %951, %940
  %956 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %950, %940 ], [ %953, %951 ]
  %957 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %942, %940 ], [ %954, %951 ]
  %958 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %9, i64 0, i32 4, i32 0, i64 %948
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %956, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %958, align 8, !alias.scope !32
  %959 = load i32, i32* %932, align 8, !alias.scope !32
  %960 = add nsw i32 %959, 1
  store i32 %960, i32* %932, align 8, !alias.scope !32
  %961 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %957, i64 0, i32 1
  %962 = load i8, i8* %961, align 4, !noalias !32
  %963 = sext i8 %962 to i32
  %964 = icmp slt i32 %960, %963
  br i1 %964, label %940, label %965

965:                                              ; preds = %955, %936
  %966 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %927, %936 ], [ %957, %955 ]
  %967 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %9, i64 0, i32 3
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %966, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %967, align 8, !alias.scope !32
  %968 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %966, i64 0, i32 3
  %969 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %968, align 8, !noalias !32
  %970 = icmp eq %"class.v8::internal::ZoneMap"* %969, null
  br i1 %970, label %971, label %975

971:                                              ; preds = %965
  %972 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %9, i64 0, i32 2
  %973 = bitcast %"class.std::__1::__map_const_iterator"* %972 to %"class.std::__1::__tree_node"**
  %974 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %973, align 8
  br label %980

975:                                              ; preds = %965
  %976 = bitcast %"class.v8::internal::ZoneMap"* %969 to i64*
  %977 = load i64, i64* %976, align 8, !noalias !32
  %978 = bitcast %"class.std::__1::__tree_end_node"** %933 to i64*
  store i64 %977, i64* %978, align 8, !alias.scope !32
  %979 = inttoptr i64 %977 to %"class.std::__1::__tree_node"*
  br label %980

980:                                              ; preds = %975, %971
  %981 = phi %"class.std::__1::__tree_node"* [ %974, %971 ], [ %979, %975 ]
  %982 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %9, i64 0, i32 2
  %983 = bitcast %"class.std::__1::__map_const_iterator"* %982 to %"class.std::__1::__tree_node"**
  %984 = zext i1 %930 to i32
  %985 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %966, i64 0, i32 0, i32 0, i32 1
  %986 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %981, i64 0, i32 2, i32 0, i32 1
  %987 = select i1 %970, i8* %985, i8* %986
  %988 = load i8, i8* %987, align 4, !noalias !32
  %989 = and i8 %988, 1
  %990 = zext i8 %989 to i32
  %991 = icmp eq i32 %990, %984
  br i1 %991, label %992, label %1007

992:                                              ; preds = %980, %995
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* nonnull %9) #5
  %993 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %967, align 8, !alias.scope !32
  %994 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %993, null
  br i1 %994, label %1032, label %995

995:                                              ; preds = %992
  %996 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %993, i64 0, i32 3
  %997 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %996, align 8, !noalias !32
  %998 = icmp eq %"class.v8::internal::ZoneMap"* %997, null
  %999 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %993, i64 0, i32 0, i32 0, i32 1
  %1000 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %983, align 8
  %1001 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1000, i64 0, i32 2, i32 0, i32 1
  %1002 = select i1 %998, i8* %999, i8* %1001
  %1003 = load i8, i8* %1002, align 4, !noalias !32
  %1004 = and i8 %1003, 1
  %1005 = zext i8 %1004 to i32
  %1006 = icmp eq i32 %1005, %984
  br i1 %1006, label %992, label %1009

1007:                                             ; preds = %980
  %1008 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %966, null
  br i1 %1008, label %1032, label %1009

1009:                                             ; preds = %995, %1007
  %1010 = phi %"class.std::__1::__tree_node"* [ %981, %1007 ], [ %1000, %995 ]
  %1011 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %966, %1007 ], [ %993, %995 ]
  br label %1012

1012:                                             ; preds = %1009, %1030
  %1013 = phi %"class.std::__1::__tree_node"* [ %1031, %1030 ], [ %1010, %1009 ]
  %1014 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %1028, %1030 ], [ %1011, %1009 ]
  %1015 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1014, i64 0, i32 3
  %1016 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1015, align 8
  %1017 = icmp eq %"class.v8::internal::ZoneMap"* %1016, null
  %1018 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1014 to i64*
  %1019 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1013, i64 0, i32 2, i32 0
  %1020 = bitcast %"struct.std::__1::pair.717"* %1019 to i64*
  %1021 = select i1 %1017, i64* %1018, i64* %1020
  %1022 = load i64, i64* %1021, align 4
  %1023 = lshr i64 %1022, 32
  %1024 = trunc i64 %1023 to i32
  %1025 = icmp eq i32 %891, %1024
  br i1 %1025, label %1026, label %1027

1026:                                             ; preds = %1012
  tail call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE3SetES4_b(%"class.v8::internal::compiler::PersistentMap"* %919, i64 %1022, i1 zeroext false) #5
  br label %1027

1027:                                             ; preds = %1026, %1012
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* nonnull %9) #5
  %1028 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %967, align 8
  %1029 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1028, null
  br i1 %1029, label %1032, label %1030

1030:                                             ; preds = %1027
  %1031 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %983, align 8
  br label %1012

1032:                                             ; preds = %992, %1027, %1007, %917
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %926) #5
  br label %1052

1033:                                             ; preds = %706, %706, %706, %706, %706, %706, %706, %706
  %1034 = load i8, i8* @_ZN2v88internal28FLAG_trace_store_eliminationE, align 1, !range !3
  %1035 = icmp eq i8 %1034, 0
  br i1 %1035, label %1052, label %1036

1036:                                             ; preds = %1033
  %1037 = load i32, i32* %18, align 4
  %1038 = and i32 %1037, 16777215
  %1039 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %707, i64 0, i32 1
  %1040 = load i8*, i8** %1039, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.11, i64 0, i64 0), i32 %1038, i8* %1040) #5
  br label %1052

1041:                                             ; preds = %706
  %1042 = load i8, i8* @_ZN2v88internal28FLAG_trace_store_eliminationE, align 1, !range !3
  %1043 = icmp eq i8 %1042, 0
  br i1 %1043, label %1049, label %1044

1044:                                             ; preds = %1041
  %1045 = load i32, i32* %18, align 4
  %1046 = and i32 %1045, 16777215
  %1047 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %707, i64 0, i32 1
  %1048 = load i8*, i8** %1047, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.12, i64 0, i64 0), i32 %1046, i8* %1048) #5
  br label %1049

1049:                                             ; preds = %1044, %1041
  %1050 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 7, i32 0
  %1051 = load %"class.v8::internal::compiler::PersistentMap"*, %"class.v8::internal::compiler::PersistentMap"** %1050, align 8
  br label %1052

1052:                                             ; preds = %1049, %1036, %1033, %1032, %874, %828, %792
  %1053 = phi %"class.v8::internal::compiler::PersistentMap"* [ %1051, %1049 ], [ %919, %1032 ], [ %875, %874 ], [ %708, %828 ], [ %708, %792 ], [ %708, %1036 ], [ %708, %1033 ]
  %1054 = ptrtoint %"class.v8::internal::compiler::PersistentMap"* %1053 to i64
  %1055 = load i32, i32* %18, align 4
  %1056 = and i32 %1055, 16777215
  %1057 = zext i32 %1056 to i64
  %1058 = load %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"*, %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"** %16, align 8
  %1059 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet", %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %1058, i64 %1057, i32 0
  %1060 = load %"class.v8::internal::compiler::PersistentMap"*, %"class.v8::internal::compiler::PersistentMap"** %1059, align 8
  %1061 = icmp eq %"class.v8::internal::compiler::PersistentMap"* %1060, null
  br i1 %1061, label %1525, label %1062

1062:                                             ; preds = %1052
  %1063 = icmp eq %"class.v8::internal::compiler::PersistentMap"* %1053, null
  br i1 %1063, label %1064, label %1152

1064:                                             ; preds = %1062
  %1065 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %1065) #5
  %1066 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %1060, i64 0, i32 0
  %1067 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1066, align 8, !noalias !35
  %1068 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1067, null
  %1069 = getelementptr %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %1060, i64 0, i32 1
  %1070 = load i8, i8* %1069, align 8, !noalias !35
  %1071 = icmp ne i8 %1070, 0
  %1072 = zext i1 %1071 to i8
  %1073 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 0
  store i32 0, i32* %1073, align 8, !alias.scope !35
  %1074 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 2, i32 0, i32 0
  %1075 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 5
  %1076 = bitcast %"class.std::__1::__tree_end_node"** %1074 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1076, i8 0, i64 16, i1 false) #5, !alias.scope !35
  store i8 %1072, i8* %1075, align 8, !alias.scope !35
  br i1 %1068, label %1149, label %1077

1077:                                             ; preds = %1064
  %1078 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1067, i64 0, i32 1
  %1079 = load i8, i8* %1078, align 4, !noalias !38
  %1080 = icmp sgt i8 %1079, 0
  br i1 %1080, label %1081, label %1106

1081:                                             ; preds = %1077, %1096
  %1082 = phi i32 [ %1101, %1096 ], [ 0, %1077 ]
  %1083 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %1098, %1096 ], [ %1067, %1077 ]
  %1084 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1083, i64 0, i32 2, i32 0
  %1085 = load i32, i32* %1084, align 4, !noalias !38
  %1086 = lshr i32 -2147483648, %1082
  %1087 = and i32 %1085, %1086
  %1088 = icmp eq i32 %1087, 0
  %1089 = sext i32 %1082 to i64
  %1090 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1083, i64 0, i32 4, i64 %1089
  %1091 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1090, align 8, !noalias !35
  br i1 %1088, label %1096, label %1092

1092:                                             ; preds = %1081
  %1093 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1091, null
  %1094 = select i1 %1093, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* null, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1083
  %1095 = select i1 %1093, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1083, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1091
  br label %1096

1096:                                             ; preds = %1092, %1081
  %1097 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %1091, %1081 ], [ %1094, %1092 ]
  %1098 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %1083, %1081 ], [ %1095, %1092 ]
  %1099 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 4, i32 0, i64 %1089
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1097, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1099, align 8, !alias.scope !38
  %1100 = load i32, i32* %1073, align 8, !alias.scope !38
  %1101 = add nsw i32 %1100, 1
  store i32 %1101, i32* %1073, align 8, !alias.scope !38
  %1102 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1098, i64 0, i32 1
  %1103 = load i8, i8* %1102, align 4, !noalias !38
  %1104 = sext i8 %1103 to i32
  %1105 = icmp slt i32 %1101, %1104
  br i1 %1105, label %1081, label %1106

1106:                                             ; preds = %1096, %1077
  %1107 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %1067, %1077 ], [ %1098, %1096 ]
  %1108 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 3
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1107, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1108, align 8, !alias.scope !38
  %1109 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1107, i64 0, i32 3
  %1110 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1109, align 8, !noalias !38
  %1111 = icmp eq %"class.v8::internal::ZoneMap"* %1110, null
  br i1 %1111, label %1112, label %1116

1112:                                             ; preds = %1106
  %1113 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 2
  %1114 = bitcast %"class.std::__1::__map_const_iterator"* %1113 to %"class.std::__1::__tree_node"**
  %1115 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1114, align 8
  br label %1121

1116:                                             ; preds = %1106
  %1117 = bitcast %"class.v8::internal::ZoneMap"* %1110 to i64*
  %1118 = load i64, i64* %1117, align 8, !noalias !38
  %1119 = bitcast %"class.std::__1::__tree_end_node"** %1074 to i64*
  store i64 %1118, i64* %1119, align 8, !alias.scope !38
  %1120 = inttoptr i64 %1118 to %"class.std::__1::__tree_node"*
  br label %1121

1121:                                             ; preds = %1116, %1112
  %1122 = phi %"class.std::__1::__tree_node"* [ %1115, %1112 ], [ %1120, %1116 ]
  %1123 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 2
  %1124 = bitcast %"class.std::__1::__map_const_iterator"* %1123 to %"class.std::__1::__tree_node"**
  %1125 = zext i1 %1071 to i32
  %1126 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1107, i64 0, i32 0, i32 0, i32 1
  %1127 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1122, i64 0, i32 2, i32 0, i32 1
  %1128 = select i1 %1111, i8* %1126, i8* %1127
  %1129 = load i8, i8* %1128, align 4, !noalias !38
  %1130 = and i8 %1129, 1
  %1131 = zext i8 %1130 to i32
  %1132 = icmp eq i32 %1131, %1125
  br i1 %1132, label %1133, label %1150

1133:                                             ; preds = %1121, %1136
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* nonnull %3) #5
  %1134 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1108, align 8, !alias.scope !38
  %1135 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1134, null
  br i1 %1135, label %1149, label %1136

1136:                                             ; preds = %1133
  %1137 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1134, i64 0, i32 3
  %1138 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1137, align 8, !noalias !38
  %1139 = icmp eq %"class.v8::internal::ZoneMap"* %1138, null
  %1140 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1134, i64 0, i32 0, i32 0, i32 1
  %1141 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1124, align 8
  %1142 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1141, i64 0, i32 2, i32 0, i32 1
  %1143 = select i1 %1139, i8* %1140, i8* %1142
  %1144 = load i8, i8* %1143, align 4, !noalias !38
  %1145 = and i8 %1144, 1
  %1146 = zext i8 %1145 to i32
  %1147 = icmp eq i32 %1146, %1125
  br i1 %1147, label %1133, label %1148

1148:                                             ; preds = %1136
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %1065) #5
  br label %1525

1149:                                             ; preds = %1133, %1064
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %1065) #5
  br label %1521

1150:                                             ; preds = %1121
  %1151 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1107, null
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %1065) #5
  br i1 %1151, label %1521, label %1525

1152:                                             ; preds = %1062
  %1153 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %1060, i64 0, i32 0
  %1154 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1153, align 8
  %1155 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %1053, i64 0, i32 0
  %1156 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1155, align 8
  %1157 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1154, %1156
  br i1 %1157, label %1521, label %1158

1158:                                             ; preds = %1152
  %1159 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %1060, i64 0, i32 1
  %1160 = load i8, i8* %1159, align 8, !range !3
  %1161 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %1053, i64 0, i32 1
  %1162 = load i8, i8* %1161, align 8, !range !3
  %1163 = icmp eq i8 %1160, %1162
  br i1 %1163, label %1164, label %1525

1164:                                             ; preds = %1158
  %1165 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1165) #5
  %1166 = bitcast %"class.v8::internal::compiler::PersistentMap"* %1060 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1165, i8* nonnull align 8 %1166, i64 24, i1 false) #5
  %1167 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* %4, i64 0, i32 1
  %1168 = bitcast %"class.v8::internal::compiler::PersistentMap"* %1167 to i8*
  %1169 = bitcast %"class.v8::internal::compiler::PersistentMap"* %1053 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1168, i8* nonnull align 8 %1169, i64 24, i1 false) #5
  %1170 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 584, i8* nonnull %1170) #5
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE11ZipIterable5beginEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* noalias nonnull %5, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* nonnull %4) #5
  %1171 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 584, i8* nonnull %1171) #5
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE11ZipIterable3endEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* noalias nonnull %6, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* nonnull %4) #5
  %1172 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %5, i64 0, i32 0, i32 3
  %1173 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %6, i64 0, i32 0, i32 3
  %1174 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1173, align 8
  %1175 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1174, null
  %1176 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1174, i64 0, i32 2, i32 0
  %1177 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %5, i64 0, i32 0, i32 2
  %1178 = bitcast %"class.std::__1::__map_const_iterator"* %1177 to %"class.std::__1::__tree_node"**
  %1179 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1174, i64 0, i32 3
  %1180 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1174 to i64*
  %1181 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %6, i64 0, i32 0, i32 2
  %1182 = bitcast %"class.std::__1::__map_const_iterator"* %1181 to %"class.std::__1::__tree_node"**
  %1183 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1182, align 8
  %1184 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1183, i64 0, i32 2, i32 0
  %1185 = bitcast %"struct.std::__1::pair.717"* %1184 to i64*
  %1186 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %5, i64 0, i32 1, i32 3
  %1187 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %6, i64 0, i32 1, i32 3
  %1188 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1187, align 8
  %1189 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1188, null
  %1190 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1188, i64 0, i32 2, i32 0
  %1191 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %5, i64 0, i32 1, i32 2
  %1192 = bitcast %"class.std::__1::__map_const_iterator"* %1191 to %"class.std::__1::__tree_node"**
  %1193 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1188, i64 0, i32 3
  %1194 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1188 to i64*
  %1195 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %6, i64 0, i32 1, i32 2
  %1196 = bitcast %"class.std::__1::__map_const_iterator"* %1195 to %"class.std::__1::__tree_node"**
  %1197 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1196, align 8
  %1198 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1197, i64 0, i32 2, i32 0
  %1199 = bitcast %"struct.std::__1::pair.717"* %1198 to i64*
  %1200 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %5, i64 0, i32 2
  %1201 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %5, i64 0, i32 3
  %1202 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %5, i64 0, i32 1, i32 5
  %1203 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %5, i64 0, i32 0, i32 5
  br i1 %1175, label %1282, label %1204

1204:                                             ; preds = %1164
  br i1 %1189, label %1205, label %1414

1205:                                             ; preds = %1204, %1281
  %1206 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1172, align 8
  %1207 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1206, null
  br i1 %1207, label %1239, label %1208

1208:                                             ; preds = %1205
  %1209 = load i32, i32* %1176, align 8
  %1210 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1206, i64 0, i32 2, i32 0
  %1211 = load i32, i32* %1210, align 4
  %1212 = icmp eq i32 %1211, %1209
  br i1 %1212, label %1213, label %1239

1213:                                             ; preds = %1208
  %1214 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1206, i64 0, i32 3
  %1215 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1214, align 8
  %1216 = icmp eq %"class.v8::internal::ZoneMap"* %1215, null
  %1217 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1206 to i64*
  %1218 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1178, align 8
  %1219 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1218, i64 0, i32 2, i32 0
  %1220 = bitcast %"struct.std::__1::pair.717"* %1219 to i64*
  %1221 = select i1 %1216, i64* %1217, i64* %1220
  %1222 = load i64, i64* %1221, align 4
  %1223 = trunc i64 %1222 to i32
  %1224 = lshr i64 %1222, 32
  %1225 = trunc i64 %1224 to i32
  %1226 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1179, align 8
  %1227 = icmp eq %"class.v8::internal::ZoneMap"* %1226, null
  %1228 = select i1 %1227, i64* %1180, i64* %1185
  %1229 = load i64, i64* %1228, align 4
  %1230 = trunc i64 %1229 to i32
  %1231 = icmp eq i32 %1230, %1223
  %1232 = lshr i64 %1229, 32
  %1233 = trunc i64 %1232 to i32
  %1234 = icmp eq i32 %1233, %1225
  %1235 = and i1 %1231, %1234
  %1236 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1186, align 8
  %1237 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1236, null
  %1238 = and i1 %1237, %1235
  br i1 %1238, label %1519, label %1239

1239:                                             ; preds = %1213, %1208, %1205
  %1240 = load i8, i8* %1200, align 8, !range !3
  %1241 = icmp eq i8 %1240, 0
  br i1 %1241, label %1266, label %1242

1242:                                             ; preds = %1239
  %1243 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1206, i64 0, i32 3
  %1244 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1243, align 8
  %1245 = icmp eq %"class.v8::internal::ZoneMap"* %1244, null
  %1246 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1206, i64 0, i32 0, i32 0, i32 1
  %1247 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1178, align 8
  %1248 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1247, i64 0, i32 2, i32 0, i32 1
  %1249 = select i1 %1245, i8* %1246, i8* %1248
  %1250 = load i8, i8* %1249, align 4
  %1251 = load i8, i8* %1201, align 1, !range !3
  %1252 = icmp eq i8 %1251, 0
  br i1 %1252, label %1264, label %1253

1253:                                             ; preds = %1242
  %1254 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1186, align 8
  %1255 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1254, i64 0, i32 3
  %1256 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1255, align 8
  %1257 = icmp eq %"class.v8::internal::ZoneMap"* %1256, null
  %1258 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1254, i64 0, i32 0, i32 0, i32 1
  %1259 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1192, align 8
  %1260 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1259, i64 0, i32 2, i32 0, i32 1
  %1261 = select i1 %1257, i8* %1258, i8* %1260
  %1262 = load i8, i8* %1261, align 4
  %1263 = and i8 %1262, 1
  br label %1277

1264:                                             ; preds = %1242
  %1265 = load i8, i8* %1202, align 8, !range !3
  br label %1277

1266:                                             ; preds = %1239
  %1267 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1186, align 8
  %1268 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1267, i64 0, i32 3
  %1269 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1268, align 8
  %1270 = icmp eq %"class.v8::internal::ZoneMap"* %1269, null
  %1271 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1267, i64 0, i32 0, i32 0, i32 1
  %1272 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1192, align 8
  %1273 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1272, i64 0, i32 2, i32 0, i32 1
  %1274 = select i1 %1270, i8* %1271, i8* %1273
  %1275 = load i8, i8* %1274, align 4
  %1276 = load i8, i8* %1203, align 8
  br label %1277

1277:                                             ; preds = %1253, %1264, %1266
  %1278 = phi i8 [ %1275, %1266 ], [ %1263, %1253 ], [ %1265, %1264 ]
  %1279 = phi i8 [ %1276, %1266 ], [ %1250, %1253 ], [ %1250, %1264 ]
  %1280 = icmp eq i8 %1279, %1278
  br i1 %1280, label %1281, label %1520

1281:                                             ; preds = %1277
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE15double_iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* nonnull %5) #5
  br label %1205

1282:                                             ; preds = %1164
  br i1 %1189, label %1283, label %1337

1283:                                             ; preds = %1282
  %1284 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1172, align 8
  %1285 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1284, null
  %1286 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1186, align 8
  %1287 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1286, null
  %1288 = and i1 %1285, %1287
  br i1 %1288, label %1519, label %1289

1289:                                             ; preds = %1283, %1331
  %1290 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %1334, %1331 ], [ %1286, %1283 ]
  %1291 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %1332, %1331 ], [ %1284, %1283 ]
  %1292 = load i8, i8* %1200, align 8, !range !3
  %1293 = icmp eq i8 %1292, 0
  br i1 %1293, label %1317, label %1294

1294:                                             ; preds = %1289
  %1295 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1291, i64 0, i32 3
  %1296 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1295, align 8
  %1297 = icmp eq %"class.v8::internal::ZoneMap"* %1296, null
  %1298 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1291, i64 0, i32 0, i32 0, i32 1
  %1299 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1178, align 8
  %1300 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1299, i64 0, i32 2, i32 0, i32 1
  %1301 = select i1 %1297, i8* %1298, i8* %1300
  %1302 = load i8, i8* %1301, align 4
  %1303 = load i8, i8* %1201, align 1, !range !3
  %1304 = icmp eq i8 %1303, 0
  br i1 %1304, label %1315, label %1305

1305:                                             ; preds = %1294
  %1306 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1290, i64 0, i32 3
  %1307 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1306, align 8
  %1308 = icmp eq %"class.v8::internal::ZoneMap"* %1307, null
  %1309 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1290, i64 0, i32 0, i32 0, i32 1
  %1310 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1192, align 8
  %1311 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1310, i64 0, i32 2, i32 0, i32 1
  %1312 = select i1 %1308, i8* %1309, i8* %1311
  %1313 = load i8, i8* %1312, align 4
  %1314 = and i8 %1313, 1
  br label %1327

1315:                                             ; preds = %1294
  %1316 = load i8, i8* %1202, align 8, !range !3
  br label %1327

1317:                                             ; preds = %1289
  %1318 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1290, i64 0, i32 3
  %1319 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1318, align 8
  %1320 = icmp eq %"class.v8::internal::ZoneMap"* %1319, null
  %1321 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1290, i64 0, i32 0, i32 0, i32 1
  %1322 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1192, align 8
  %1323 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1322, i64 0, i32 2, i32 0, i32 1
  %1324 = select i1 %1320, i8* %1321, i8* %1323
  %1325 = load i8, i8* %1324, align 4
  %1326 = load i8, i8* %1203, align 8
  br label %1327

1327:                                             ; preds = %1305, %1315, %1317
  %1328 = phi i8 [ %1325, %1317 ], [ %1314, %1305 ], [ %1316, %1315 ]
  %1329 = phi i8 [ %1326, %1317 ], [ %1302, %1305 ], [ %1302, %1315 ]
  %1330 = icmp eq i8 %1329, %1328
  br i1 %1330, label %1331, label %1520

1331:                                             ; preds = %1327
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE15double_iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* nonnull %5) #5
  %1332 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1172, align 8
  %1333 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1332, null
  %1334 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1186, align 8
  %1335 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1334, null
  %1336 = and i1 %1333, %1335
  br i1 %1336, label %1519, label %1289

1337:                                             ; preds = %1282, %1413
  %1338 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1172, align 8
  %1339 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1338, null
  br i1 %1339, label %1340, label %1371

1340:                                             ; preds = %1337
  %1341 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1186, align 8
  %1342 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1341, null
  br i1 %1342, label %1371, label %1343

1343:                                             ; preds = %1340
  %1344 = load i32, i32* %1190, align 8
  %1345 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1341, i64 0, i32 2, i32 0
  %1346 = load i32, i32* %1345, align 4
  %1347 = icmp eq i32 %1346, %1344
  br i1 %1347, label %1348, label %1371

1348:                                             ; preds = %1343
  %1349 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1341, i64 0, i32 3
  %1350 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1349, align 8
  %1351 = icmp eq %"class.v8::internal::ZoneMap"* %1350, null
  %1352 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1341 to i64*
  %1353 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1192, align 8
  %1354 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1353, i64 0, i32 2, i32 0
  %1355 = bitcast %"struct.std::__1::pair.717"* %1354 to i64*
  %1356 = select i1 %1351, i64* %1352, i64* %1355
  %1357 = load i64, i64* %1356, align 4
  %1358 = trunc i64 %1357 to i32
  %1359 = lshr i64 %1357, 32
  %1360 = trunc i64 %1359 to i32
  %1361 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1193, align 8
  %1362 = icmp eq %"class.v8::internal::ZoneMap"* %1361, null
  %1363 = select i1 %1362, i64* %1194, i64* %1199
  %1364 = load i64, i64* %1363, align 4
  %1365 = trunc i64 %1364 to i32
  %1366 = icmp eq i32 %1365, %1358
  %1367 = lshr i64 %1364, 32
  %1368 = trunc i64 %1367 to i32
  %1369 = icmp eq i32 %1368, %1360
  %1370 = and i1 %1366, %1369
  br i1 %1370, label %1519, label %1371

1371:                                             ; preds = %1348, %1343, %1340, %1337
  %1372 = load i8, i8* %1200, align 8, !range !3
  %1373 = icmp eq i8 %1372, 0
  br i1 %1373, label %1398, label %1374

1374:                                             ; preds = %1371
  %1375 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1338, i64 0, i32 3
  %1376 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1375, align 8
  %1377 = icmp eq %"class.v8::internal::ZoneMap"* %1376, null
  %1378 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1338, i64 0, i32 0, i32 0, i32 1
  %1379 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1178, align 8
  %1380 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1379, i64 0, i32 2, i32 0, i32 1
  %1381 = select i1 %1377, i8* %1378, i8* %1380
  %1382 = load i8, i8* %1381, align 4
  %1383 = load i8, i8* %1201, align 1, !range !3
  %1384 = icmp eq i8 %1383, 0
  br i1 %1384, label %1396, label %1385

1385:                                             ; preds = %1374
  %1386 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1186, align 8
  %1387 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1386, i64 0, i32 3
  %1388 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1387, align 8
  %1389 = icmp eq %"class.v8::internal::ZoneMap"* %1388, null
  %1390 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1386, i64 0, i32 0, i32 0, i32 1
  %1391 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1192, align 8
  %1392 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1391, i64 0, i32 2, i32 0, i32 1
  %1393 = select i1 %1389, i8* %1390, i8* %1392
  %1394 = load i8, i8* %1393, align 4
  %1395 = and i8 %1394, 1
  br label %1409

1396:                                             ; preds = %1374
  %1397 = load i8, i8* %1202, align 8, !range !3
  br label %1409

1398:                                             ; preds = %1371
  %1399 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1186, align 8
  %1400 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1399, i64 0, i32 3
  %1401 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1400, align 8
  %1402 = icmp eq %"class.v8::internal::ZoneMap"* %1401, null
  %1403 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1399, i64 0, i32 0, i32 0, i32 1
  %1404 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1192, align 8
  %1405 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1404, i64 0, i32 2, i32 0, i32 1
  %1406 = select i1 %1402, i8* %1403, i8* %1405
  %1407 = load i8, i8* %1406, align 4
  %1408 = load i8, i8* %1203, align 8
  br label %1409

1409:                                             ; preds = %1385, %1396, %1398
  %1410 = phi i8 [ %1407, %1398 ], [ %1395, %1385 ], [ %1397, %1396 ]
  %1411 = phi i8 [ %1408, %1398 ], [ %1382, %1385 ], [ %1382, %1396 ]
  %1412 = icmp eq i8 %1411, %1410
  br i1 %1412, label %1413, label %1520

1413:                                             ; preds = %1409
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE15double_iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* nonnull %5) #5
  br label %1337

1414:                                             ; preds = %1204, %1518
  %1415 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1172, align 8
  %1416 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1415, null
  br i1 %1416, label %1476, label %1417

1417:                                             ; preds = %1414
  %1418 = load i32, i32* %1176, align 8
  %1419 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1415, i64 0, i32 2, i32 0
  %1420 = load i32, i32* %1419, align 4
  %1421 = icmp eq i32 %1420, %1418
  br i1 %1421, label %1422, label %1476

1422:                                             ; preds = %1417
  %1423 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1415, i64 0, i32 3
  %1424 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1423, align 8
  %1425 = icmp eq %"class.v8::internal::ZoneMap"* %1424, null
  %1426 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1415 to i64*
  %1427 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1178, align 8
  %1428 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1427, i64 0, i32 2, i32 0
  %1429 = bitcast %"struct.std::__1::pair.717"* %1428 to i64*
  %1430 = select i1 %1425, i64* %1426, i64* %1429
  %1431 = load i64, i64* %1430, align 4
  %1432 = trunc i64 %1431 to i32
  %1433 = lshr i64 %1431, 32
  %1434 = trunc i64 %1433 to i32
  %1435 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1179, align 8
  %1436 = icmp eq %"class.v8::internal::ZoneMap"* %1435, null
  %1437 = select i1 %1436, i64* %1180, i64* %1185
  %1438 = load i64, i64* %1437, align 4
  %1439 = trunc i64 %1438 to i32
  %1440 = icmp eq i32 %1439, %1432
  %1441 = lshr i64 %1438, 32
  %1442 = trunc i64 %1441 to i32
  %1443 = icmp eq i32 %1442, %1434
  %1444 = and i1 %1440, %1443
  br i1 %1444, label %1445, label %1476

1445:                                             ; preds = %1422
  %1446 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1186, align 8
  %1447 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1446, null
  br i1 %1447, label %1476, label %1448

1448:                                             ; preds = %1445
  %1449 = load i32, i32* %1190, align 8
  %1450 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1446, i64 0, i32 2, i32 0
  %1451 = load i32, i32* %1450, align 4
  %1452 = icmp eq i32 %1451, %1449
  br i1 %1452, label %1453, label %1476

1453:                                             ; preds = %1448
  %1454 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1446, i64 0, i32 3
  %1455 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1454, align 8
  %1456 = icmp eq %"class.v8::internal::ZoneMap"* %1455, null
  %1457 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1446 to i64*
  %1458 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1192, align 8
  %1459 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1458, i64 0, i32 2, i32 0
  %1460 = bitcast %"struct.std::__1::pair.717"* %1459 to i64*
  %1461 = select i1 %1456, i64* %1457, i64* %1460
  %1462 = load i64, i64* %1461, align 4
  %1463 = trunc i64 %1462 to i32
  %1464 = lshr i64 %1462, 32
  %1465 = trunc i64 %1464 to i32
  %1466 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1193, align 8
  %1467 = icmp eq %"class.v8::internal::ZoneMap"* %1466, null
  %1468 = select i1 %1467, i64* %1194, i64* %1199
  %1469 = load i64, i64* %1468, align 4
  %1470 = trunc i64 %1469 to i32
  %1471 = icmp eq i32 %1470, %1463
  %1472 = lshr i64 %1469, 32
  %1473 = trunc i64 %1472 to i32
  %1474 = icmp eq i32 %1473, %1465
  %1475 = and i1 %1471, %1474
  br i1 %1475, label %1519, label %1476

1476:                                             ; preds = %1453, %1448, %1445, %1422, %1417, %1414
  %1477 = load i8, i8* %1200, align 8, !range !3
  %1478 = icmp eq i8 %1477, 0
  br i1 %1478, label %1503, label %1479

1479:                                             ; preds = %1476
  %1480 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1415, i64 0, i32 3
  %1481 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1480, align 8
  %1482 = icmp eq %"class.v8::internal::ZoneMap"* %1481, null
  %1483 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1415, i64 0, i32 0, i32 0, i32 1
  %1484 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1178, align 8
  %1485 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1484, i64 0, i32 2, i32 0, i32 1
  %1486 = select i1 %1482, i8* %1483, i8* %1485
  %1487 = load i8, i8* %1486, align 4
  %1488 = load i8, i8* %1201, align 1, !range !3
  %1489 = icmp eq i8 %1488, 0
  br i1 %1489, label %1501, label %1490

1490:                                             ; preds = %1479
  %1491 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1186, align 8
  %1492 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1491, i64 0, i32 3
  %1493 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1492, align 8
  %1494 = icmp eq %"class.v8::internal::ZoneMap"* %1493, null
  %1495 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1491, i64 0, i32 0, i32 0, i32 1
  %1496 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1192, align 8
  %1497 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1496, i64 0, i32 2, i32 0, i32 1
  %1498 = select i1 %1494, i8* %1495, i8* %1497
  %1499 = load i8, i8* %1498, align 4
  %1500 = and i8 %1499, 1
  br label %1514

1501:                                             ; preds = %1479
  %1502 = load i8, i8* %1202, align 8, !range !3
  br label %1514

1503:                                             ; preds = %1476
  %1504 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %1186, align 8
  %1505 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1504, i64 0, i32 3
  %1506 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %1505, align 8
  %1507 = icmp eq %"class.v8::internal::ZoneMap"* %1506, null
  %1508 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %1504, i64 0, i32 0, i32 0, i32 1
  %1509 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1192, align 8
  %1510 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1509, i64 0, i32 2, i32 0, i32 1
  %1511 = select i1 %1507, i8* %1508, i8* %1510
  %1512 = load i8, i8* %1511, align 4
  %1513 = load i8, i8* %1203, align 8
  br label %1514

1514:                                             ; preds = %1490, %1501, %1503
  %1515 = phi i8 [ %1512, %1503 ], [ %1500, %1490 ], [ %1502, %1501 ]
  %1516 = phi i8 [ %1513, %1503 ], [ %1487, %1490 ], [ %1487, %1501 ]
  %1517 = icmp eq i8 %1516, %1515
  br i1 %1517, label %1518, label %1520

1518:                                             ; preds = %1514
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE15double_iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* nonnull %5) #5
  br label %1414

1519:                                             ; preds = %1453, %1213, %1348, %1331, %1283
  call void @llvm.lifetime.end.p0i8(i64 584, i8* nonnull %1171) #5
  call void @llvm.lifetime.end.p0i8(i64 584, i8* nonnull %1170) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1165) #5
  br label %1521

1520:                                             ; preds = %1514, %1277, %1409, %1327
  call void @llvm.lifetime.end.p0i8(i64 584, i8* nonnull %1171) #5
  call void @llvm.lifetime.end.p0i8(i64 584, i8* nonnull %1170) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1165) #5
  br label %1525

1521:                                             ; preds = %1519, %1152, %1150, %1149
  %1522 = load i8, i8* @_ZN2v88internal28FLAG_trace_store_eliminationE, align 1, !range !3
  %1523 = icmp eq i8 %1522, 0
  br i1 %1523, label %1655, label %1524

1524:                                             ; preds = %1521
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.5, i64 0, i64 0)) #5
  br label %1655

1525:                                             ; preds = %1520, %1158, %1150, %1148, %1052
  %1526 = load i32, i32* %18, align 4
  %1527 = and i32 %1526, 16777215
  %1528 = zext i32 %1527 to i64
  %1529 = load %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"*, %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"** %16, align 8
  %1530 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet", %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %1529, i64 %1528
  %1531 = bitcast %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %1530 to i64*
  store i64 %1054, i64* %1531, align 8
  %1532 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %153, align 8
  %1533 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1532, i64 0, i32 6
  %1534 = load i32, i32* %1533, align 8
  %1535 = icmp sgt i32 %1534, 0
  br i1 %1535, label %1536, label %1655

1536:                                             ; preds = %1525
  %1537 = add i64 %709, 32
  %1538 = inttoptr i64 %1537 to i64*
  %1539 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 4, i32 0, i32 0
  %1540 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1541 = bitcast %"class.v8::internal::compiler::Node"**** %1540 to i64*
  %1542 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1543 = bitcast %"class.v8::internal::compiler::Node"**** %1542 to i64*
  %1544 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %1545 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1546 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  br label %1547

1547:                                             ; preds = %1642, %1536
  %1548 = phi %"class.v8::internal::compiler::Operator"* [ %1532, %1536 ], [ %1644, %1642 ]
  %1549 = phi i32 [ 0, %1536 ], [ %1643, %1642 ]
  %1550 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1548, i64 0, i32 5
  %1551 = load i32, i32* %1550, align 4
  %1552 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1548) #5
  %1553 = zext i1 %1552 to i32
  %1554 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %153, align 8
  %1555 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1554) #5
  %1556 = zext i1 %1555 to i32
  %1557 = add i32 %1551, %1549
  %1558 = add i32 %1557, %1553
  %1559 = add i32 %1558, %1556
  %1560 = load i32, i32* %18, align 4
  %1561 = and i32 %1560, 251658240
  %1562 = icmp eq i32 %1561, 251658240
  br i1 %1562, label %1563, label %1566

1563:                                             ; preds = %1547
  %1564 = load i64, i64* %1538, align 8
  %1565 = add i64 %1564, 16
  br label %1566

1566:                                             ; preds = %1547, %1563
  %1567 = phi i64 [ %1565, %1563 ], [ %1537, %1547 ]
  %1568 = inttoptr i64 %1567 to %"class.v8::internal::compiler::Node"**
  %1569 = sext i32 %1559 to i64
  %1570 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1568, i64 %1569
  %1571 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1570, align 8
  %1572 = load i8, i8* @_ZN2v88internal28FLAG_trace_store_eliminationE, align 1, !range !3
  %1573 = icmp eq i8 %1572, 0
  br i1 %1573, label %1582, label %1574

1574:                                             ; preds = %1566
  %1575 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1571, i64 0, i32 3
  %1576 = load i32, i32* %1575, align 4
  %1577 = and i32 %1576, 16777215
  %1578 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1571, i64 0, i32 0
  %1579 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1578, align 8
  %1580 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1579, i64 0, i32 1
  %1581 = load i8*, i8** %1580, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i64 0, i64 0), i32 %1577, i8* %1581) #5
  br label %1582

1582:                                             ; preds = %1574, %1566
  %1583 = ptrtoint %"class.v8::internal::compiler::Node"* %1571 to i64
  %1584 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1571, i64 0, i32 3
  %1585 = load i32, i32* %1584, align 4
  %1586 = and i32 %1585, 16777215
  %1587 = zext i32 %1586 to i64
  %1588 = load i64*, i64** %1539, align 8
  %1589 = lshr i64 %1587, 6
  %1590 = getelementptr inbounds i64, i64* %1588, i64 %1589
  %1591 = and i64 %1587, 63
  %1592 = shl i64 1, %1591
  %1593 = load i64, i64* %1590, align 8
  %1594 = and i64 %1592, %1593
  %1595 = icmp eq i64 %1594, 0
  br i1 %1595, label %1596, label %1642

1596:                                             ; preds = %1582
  %1597 = load i64, i64* %1541, align 8
  %1598 = load i64, i64* %1543, align 8
  %1599 = sub i64 %1597, %1598
  %1600 = icmp eq i64 %1599, 0
  %1601 = shl i64 %1599, 6
  %1602 = add i64 %1601, -1
  %1603 = select i1 %1600, i64 0, i64 %1602
  %1604 = load i64, i64* %1544, align 8
  %1605 = load i64, i64* %1545, align 8
  %1606 = add i64 %1605, %1604
  %1607 = icmp eq i64 %1603, %1606
  %1608 = inttoptr i64 %1598 to %"class.v8::internal::compiler::Node"***
  %1609 = inttoptr i64 %1597 to %"class.v8::internal::compiler::Node"***
  br i1 %1607, label %1610, label %1616

1610:                                             ; preds = %1596
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.666"* %1546) #5
  %1611 = load i64, i64* %1545, align 8
  %1612 = load i64, i64* %1544, align 8
  %1613 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %1542, align 8
  %1614 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %1540, align 8
  %1615 = add i64 %1612, %1611
  br label %1616

1616:                                             ; preds = %1610, %1596
  %1617 = phi i64 [ %1615, %1610 ], [ %1606, %1596 ]
  %1618 = phi %"class.v8::internal::compiler::Node"*** [ %1614, %1610 ], [ %1609, %1596 ]
  %1619 = phi %"class.v8::internal::compiler::Node"*** [ %1613, %1610 ], [ %1608, %1596 ]
  %1620 = icmp eq %"class.v8::internal::compiler::Node"*** %1618, %1619
  br i1 %1620, label %1628, label %1621

1621:                                             ; preds = %1616
  %1622 = lshr i64 %1617, 9
  %1623 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1619, i64 %1622
  %1624 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1623, align 8
  %1625 = and i64 %1617, 511
  %1626 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1624, i64 %1625
  %1627 = bitcast %"class.v8::internal::compiler::Node"** %1626 to i64*
  br label %1628

1628:                                             ; preds = %1621, %1616
  %1629 = phi i64* [ %1627, %1621 ], [ null, %1616 ]
  store i64 %1583, i64* %1629, align 8
  %1630 = load i64, i64* %1545, align 8
  %1631 = add i64 %1630, 1
  store i64 %1631, i64* %1545, align 8
  %1632 = load i32, i32* %1584, align 4
  %1633 = and i32 %1632, 16777215
  %1634 = zext i32 %1633 to i64
  %1635 = load i64*, i64** %1539, align 8
  %1636 = lshr i64 %1634, 6
  %1637 = getelementptr inbounds i64, i64* %1635, i64 %1636
  %1638 = and i64 %1634, 63
  %1639 = shl i64 1, %1638
  %1640 = load i64, i64* %1637, align 8
  %1641 = or i64 %1639, %1640
  store i64 %1641, i64* %1637, align 8
  br label %1642

1642:                                             ; preds = %1628, %1582
  %1643 = add nuw nsw i32 %1549, 1
  %1644 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %153, align 8
  %1645 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1644, i64 0, i32 6
  %1646 = load i32, i32* %1645, align 8
  %1647 = icmp slt i32 %1643, %1646
  br i1 %1647, label %1547, label %1655

1648:                                             ; preds = %148
  br i1 %159, label %1649, label %1655

1649:                                             ; preds = %1648
  %1650 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder", %"class.v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder"* %0, i64 0, i32 7
  %1651 = getelementptr inbounds %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet", %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %151, i64 %149
  %1652 = bitcast %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %1650 to i64*
  %1653 = bitcast %"class.v8::internal::compiler::(anonymous namespace)::UnobservablesSet"* %1651 to i64*
  %1654 = load i64, i64* %1652, align 8
  store i64 %1654, i64* %1653, align 8
  br label %1655

1655:                                             ; preds = %1642, %1648, %1525, %1524, %1521, %1649
  ret void
}

declare void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.666"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %3 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %4 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %5 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.707", align 16
  %7 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque.666", %"class.std::__1::deque.666"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque.666", %"class.std::__1::deque.666"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 511
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -512
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  %15 = getelementptr inbounds %"class.std::__1::deque.666", %"class.std::__1::deque.666"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque.666", %"class.std::__1::deque.666"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::Node"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, i64 1
  store %"class.v8::internal::compiler::Node"*** %21, %"class.v8::internal::compiler::Node"**** %16, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.668"* %15, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque.666", %"class.std::__1::deque.666"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque.666", %"class.std::__1::deque.666"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::Node"**** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque.666", %"class.std::__1::deque.666"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::Node"**** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque.666", %"class.std::__1::deque.666"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::compiler::Node"**** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque.666"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::compiler::Node"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #5
  %44 = getelementptr inbounds %"class.std::__1::deque.666", %"class.std::__1::deque.666"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to %"class.v8::internal::compiler::Node"**
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.675", %"class.v8::internal::RecyclingZoneAllocator.675"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !2

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #5
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::Node"**
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::compiler::Node"** [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::compiler::Node"** %73, %"class.v8::internal::compiler::Node"*** %3, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.668"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #5
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #5
  %76 = getelementptr inbounds %"class.std::__1::deque.666", %"class.std::__1::deque.666"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 512
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to %"class.v8::internal::compiler::Node"**
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.675", %"class.v8::internal::RecyclingZoneAllocator.675"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #5
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::Node"**
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::compiler::Node"** [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::compiler::Node"** %105, %"class.v8::internal::compiler::Node"*** %4, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer.668"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #5
  %106 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #5
  %107 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %108 = bitcast %"class.v8::internal::compiler::Node"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %107, i64 1
  store %"class.v8::internal::compiler::Node"*** %111, %"class.v8::internal::compiler::Node"**** %27, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.668"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #5
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.707"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #5
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque.666", %"class.std::__1::deque.666"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"*** null, %"class.v8::internal::compiler::Node"**** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator"* %117, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque.666", %"class.std::__1::deque.666"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to %"class.v8::internal::compiler::Node"***
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !2

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #5
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::Node"***
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::compiler::Node"*** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"*** %150, %"class.v8::internal::compiler::Node"**** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %116
  store %"class.v8::internal::compiler::Node"*** %155, %"class.v8::internal::compiler::Node"**** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque.666", %"class.std::__1::deque.666"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 512
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to %"class.v8::internal::compiler::Node"**
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.675", %"class.v8::internal::RecyclingZoneAllocator.675"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !2

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #5
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::Node"**
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::compiler::Node"** [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #5
  store %"class.v8::internal::compiler::Node"** %185, %"class.v8::internal::compiler::Node"*** %7, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.707"* nonnull %6, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #5
  %187 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %24, align 8
  %188 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %189 = icmp eq %"class.v8::internal::compiler::Node"*** %187, %188
  %190 = ptrtoint %"class.v8::internal::compiler::Node"*** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::compiler::Node"*** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.707"* %6 to i64*
  %199 = bitcast %"class.v8::internal::compiler::Node"**** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.707"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque.666"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::compiler::Node"**** %153 to i64*
  %204 = bitcast %"class.v8::internal::compiler::Node"**** %118 to i64*
  %205 = bitcast %"class.v8::internal::compiler::Node"**** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::compiler::Node"**** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::compiler::Node"***
  %210 = icmp eq %"class.v8::internal::compiler::Node"*** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::compiler::Node"***
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::compiler::Node"*** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 %217
  store %"class.v8::internal::compiler::Node"*** %218, %"class.v8::internal::compiler::Node"**** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %211, i64 1
  %236 = bitcast %"class.v8::internal::compiler::Node"*** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %211, %"class.v8::internal::compiler::Node"**** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #5
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::compiler::Node"*** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.707"* nonnull %6, %"class.v8::internal::compiler::Node"*** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %246 = icmp eq %"class.v8::internal::compiler::Node"*** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.668"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.668"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #5
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !41

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.668"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.668"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #5
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !43

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer.668"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #5
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.668"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to %"class.v8::internal::compiler::Node"***
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer.668", %"struct.std::__1::__split_buffer.668"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #5
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  %76 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %77 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::compiler::Node"*** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %87 to i64
  %89 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::compiler::Node"*** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::compiler::Node"*** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !44

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::compiler::Node"*** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::compiler::Node"*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 1
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 2
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 3
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 4
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 5
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 6
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 7
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::compiler::Node"*** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 8
  %165 = icmp eq %"class.v8::internal::compiler::Node"*** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::compiler::Node"*** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::compiler::Node"***
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %173, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %173, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::Node"*** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %200, i64 -1
  store %"class.v8::internal::compiler::Node"*** %201, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.707"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %13, align 8
  %15 = icmp ugt %"class.v8::internal::compiler::Node"*** %12, %14
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %22
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %11, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.707"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to %"class.v8::internal::compiler::Node"***
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #5
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::compiler::Node"*** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::compiler::Node"*** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::compiler::Node"*** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %83 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %84 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::compiler::Node"*** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::compiler::Node"*** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !45

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::compiler::Node"*** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::compiler::Node"*** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %126 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::compiler::Node"*** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = icmp eq %"class.v8::internal::compiler::Node"*** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::compiler::Node"*** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::compiler::Node"**** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::compiler::Node"***
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %170, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %170, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %197, i64 1
  store %"class.v8::internal::compiler::Node"*** %198, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.707"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #5
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.707"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.707", %"struct.std::__1::__split_buffer.707"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to %"class.v8::internal::compiler::Node"***
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !2

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #5
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::Node"***
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::compiler::Node"*** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::compiler::Node"*** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::compiler::Node"*** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %85 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::compiler::Node"*** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::compiler::Node"*** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !46

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::compiler::Node"*** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::compiler::Node"*** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::compiler::Node"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %127 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %132 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %137 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %142 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %147 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %152 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %157 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::compiler::Node"*** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = icmp eq %"class.v8::internal::compiler::Node"*** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::compiler::Node"*** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::compiler::Node"***
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %171, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %171, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::compiler::Node"*** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %198, i64 -1
  store %"class.v8::internal::compiler::Node"*** %199, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties12IsEffectEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE11ZipIterable5beginEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* noalias nocapture, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", align 8
  %4 = alloca %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", align 8
  %5 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %5, align 8, !noalias !47
  %7 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %6, null
  %8 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* %1, i64 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !noalias !47
  %10 = icmp ne i8 %9, 0
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 0
  store i32 0, i32* %12, align 8, !alias.scope !47
  %13 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 5
  %15 = bitcast %"class.std::__1::__tree_end_node"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #5, !alias.scope !47
  store i8 %11, i8* %14, align 8, !alias.scope !47
  br i1 %7, label %87, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %6, i64 0, i32 1
  %18 = load i8, i8* %17, align 4, !noalias !50
  %19 = icmp sgt i8 %18, 0
  br i1 %19, label %20, label %45

20:                                               ; preds = %16, %35
  %21 = phi i32 [ %40, %35 ], [ 0, %16 ]
  %22 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %37, %35 ], [ %6, %16 ]
  %23 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %22, i64 0, i32 2, i32 0
  %24 = load i32, i32* %23, align 4, !noalias !50
  %25 = lshr i32 -2147483648, %21
  %26 = and i32 %24, %25
  %27 = icmp eq i32 %26, 0
  %28 = sext i32 %21 to i64
  %29 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %22, i64 0, i32 4, i64 %28
  %30 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %29, align 8, !noalias !47
  br i1 %27, label %35, label %31

31:                                               ; preds = %20
  %32 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %30, null
  %33 = select i1 %32, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* null, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %22
  %34 = select i1 %32, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %22, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %30
  br label %35

35:                                               ; preds = %31, %20
  %36 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %30, %20 ], [ %33, %31 ]
  %37 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %22, %20 ], [ %34, %31 ]
  %38 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 4, i32 0, i64 %28
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %36, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %38, align 8, !alias.scope !50
  %39 = load i32, i32* %12, align 8, !alias.scope !50
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %12, align 8, !alias.scope !50
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %37, i64 0, i32 1
  %42 = load i8, i8* %41, align 4, !noalias !50
  %43 = sext i8 %42 to i32
  %44 = icmp slt i32 %40, %43
  br i1 %44, label %20, label %45

45:                                               ; preds = %35, %16
  %46 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %6, %16 ], [ %37, %35 ]
  %47 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 3
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %46, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %47, align 8, !alias.scope !50
  %48 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %46, i64 0, i32 3
  %49 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %48, align 8, !noalias !50
  %50 = icmp eq %"class.v8::internal::ZoneMap"* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 2
  %53 = bitcast %"class.std::__1::__map_const_iterator"* %52 to %"class.std::__1::__tree_node"**
  %54 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  br label %60

55:                                               ; preds = %45
  %56 = bitcast %"class.v8::internal::ZoneMap"* %49 to i64*
  %57 = load i64, i64* %56, align 8, !noalias !50
  %58 = bitcast %"class.std::__1::__tree_end_node"** %13 to i64*
  store i64 %57, i64* %58, align 8, !alias.scope !50
  %59 = inttoptr i64 %57 to %"class.std::__1::__tree_node"*
  br label %60

60:                                               ; preds = %51, %55
  %61 = phi %"class.std::__1::__tree_node"* [ %54, %51 ], [ %59, %55 ]
  %62 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3, i64 0, i32 2
  %63 = bitcast %"class.std::__1::__map_const_iterator"* %62 to %"class.std::__1::__tree_node"**
  %64 = zext i1 %10 to i32
  %65 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %46, i64 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %61, i64 0, i32 2, i32 0, i32 1
  %67 = select i1 %50, i8* %65, i8* %66
  %68 = load i8, i8* %67, align 4, !noalias !50
  %69 = and i8 %68, 1
  %70 = zext i8 %69 to i32
  %71 = icmp eq i32 %70, %64
  br i1 %71, label %72, label %87

72:                                               ; preds = %60, %75
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* nonnull %3) #5
  %73 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %47, align 8, !alias.scope !50
  %74 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %73, null
  br i1 %74, label %87, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %73, i64 0, i32 3
  %77 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %76, align 8, !noalias !50
  %78 = icmp eq %"class.v8::internal::ZoneMap"* %77, null
  %79 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %73, i64 0, i32 0, i32 0, i32 1
  %80 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %63, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 2, i32 0, i32 1
  %82 = select i1 %78, i8* %79, i8* %81
  %83 = load i8, i8* %82, align 4, !noalias !50
  %84 = and i8 %83, 1
  %85 = zext i8 %84 to i32
  %86 = icmp eq i32 %85, %64
  br i1 %86, label %72, label %87

87:                                               ; preds = %72, %75, %60, %2
  %88 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* %1, i64 0, i32 1, i32 0
  %89 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %88, align 8, !noalias !53
  %90 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %89, null
  %91 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* %1, i64 0, i32 1, i32 1
  %92 = load i8, i8* %91, align 8, !noalias !53
  %93 = icmp ne i8 %92, 0
  %94 = zext i1 %93 to i8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %4, i64 0, i32 0
  store i32 0, i32* %95, align 8, !alias.scope !53
  %96 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %4, i64 0, i32 2, i32 0, i32 0
  %97 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %4, i64 0, i32 5
  %98 = bitcast %"class.std::__1::__tree_end_node"** %96 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #5, !alias.scope !53
  store i8 %94, i8* %97, align 8, !alias.scope !53
  br i1 %90, label %170, label %99

99:                                               ; preds = %87
  %100 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %89, i64 0, i32 1
  %101 = load i8, i8* %100, align 4, !noalias !56
  %102 = icmp sgt i8 %101, 0
  br i1 %102, label %103, label %128

103:                                              ; preds = %99, %118
  %104 = phi i32 [ %123, %118 ], [ 0, %99 ]
  %105 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %120, %118 ], [ %89, %99 ]
  %106 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %105, i64 0, i32 2, i32 0
  %107 = load i32, i32* %106, align 4, !noalias !56
  %108 = lshr i32 -2147483648, %104
  %109 = and i32 %107, %108
  %110 = icmp eq i32 %109, 0
  %111 = sext i32 %104 to i64
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %105, i64 0, i32 4, i64 %111
  %113 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %112, align 8, !noalias !53
  br i1 %110, label %118, label %114

114:                                              ; preds = %103
  %115 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %113, null
  %116 = select i1 %115, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* null, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %105
  %117 = select i1 %115, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %105, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %113
  br label %118

118:                                              ; preds = %114, %103
  %119 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %113, %103 ], [ %116, %114 ]
  %120 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %105, %103 ], [ %117, %114 ]
  %121 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %4, i64 0, i32 4, i32 0, i64 %111
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %119, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %121, align 8, !alias.scope !56
  %122 = load i32, i32* %95, align 8, !alias.scope !56
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %95, align 8, !alias.scope !56
  %124 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %120, i64 0, i32 1
  %125 = load i8, i8* %124, align 4, !noalias !56
  %126 = sext i8 %125 to i32
  %127 = icmp slt i32 %123, %126
  br i1 %127, label %103, label %128

128:                                              ; preds = %118, %99
  %129 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %89, %99 ], [ %120, %118 ]
  %130 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %4, i64 0, i32 3
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %129, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %130, align 8, !alias.scope !56
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %129, i64 0, i32 3
  %132 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %131, align 8, !noalias !56
  %133 = icmp eq %"class.v8::internal::ZoneMap"* %132, null
  br i1 %133, label %134, label %138

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %4, i64 0, i32 2
  %136 = bitcast %"class.std::__1::__map_const_iterator"* %135 to %"class.std::__1::__tree_node"**
  %137 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %136, align 8
  br label %143

138:                                              ; preds = %128
  %139 = bitcast %"class.v8::internal::ZoneMap"* %132 to i64*
  %140 = load i64, i64* %139, align 8, !noalias !56
  %141 = bitcast %"class.std::__1::__tree_end_node"** %96 to i64*
  store i64 %140, i64* %141, align 8, !alias.scope !56
  %142 = inttoptr i64 %140 to %"class.std::__1::__tree_node"*
  br label %143

143:                                              ; preds = %134, %138
  %144 = phi %"class.std::__1::__tree_node"* [ %137, %134 ], [ %142, %138 ]
  %145 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %4, i64 0, i32 2
  %146 = bitcast %"class.std::__1::__map_const_iterator"* %145 to %"class.std::__1::__tree_node"**
  %147 = zext i1 %93 to i32
  %148 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %129, i64 0, i32 0, i32 0, i32 1
  %149 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %144, i64 0, i32 2, i32 0, i32 1
  %150 = select i1 %133, i8* %148, i8* %149
  %151 = load i8, i8* %150, align 4, !noalias !56
  %152 = and i8 %151, 1
  %153 = zext i8 %152 to i32
  %154 = icmp eq i32 %153, %147
  br i1 %154, label %155, label %170

155:                                              ; preds = %143, %158
  call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* nonnull %4) #5
  %156 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %130, align 8, !alias.scope !56
  %157 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %156, null
  br i1 %157, label %170, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %156, i64 0, i32 3
  %160 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %159, align 8, !noalias !56
  %161 = icmp eq %"class.v8::internal::ZoneMap"* %160, null
  %162 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %156, i64 0, i32 0, i32 0, i32 1
  %163 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %146, align 8
  %164 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %163, i64 0, i32 2, i32 0, i32 1
  %165 = select i1 %161, i8* %162, i8* %164
  %166 = load i8, i8* %165, align 4, !noalias !56
  %167 = and i8 %166, 1
  %168 = zext i8 %167 to i32
  %169 = icmp eq i32 %168, %147
  br i1 %169, label %155, label %170

170:                                              ; preds = %155, %158, %143, %87
  %171 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %4 to i8*
  %172 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %3 to i8*
  %173 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* nonnull align 8 %172, i64 288, i1 false)
  %174 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1
  %175 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* nonnull align 8 %171, i64 288, i1 false)
  %176 = getelementptr %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 0, i32 3
  %177 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %176, align 8
  %178 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %177, null
  %179 = getelementptr %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1, i32 3
  %180 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %179, align 8
  %181 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %180, null
  %182 = or i1 %178, %181
  br i1 %182, label %227, label %183

183:                                              ; preds = %170
  %184 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %180, i64 0, i32 2, i32 0
  %185 = load i32, i32* %184, align 8
  %186 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %177, i64 0, i32 2, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = icmp eq i32 %187, %185
  br i1 %188, label %189, label %232

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %177, i64 0, i32 3
  %191 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %190, align 8
  %192 = icmp eq %"class.v8::internal::ZoneMap"* %191, null
  br i1 %192, label %199, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 0, i32 2
  %195 = bitcast %"class.std::__1::__map_const_iterator"* %194 to %"class.std::__1::__tree_node"**
  %196 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %196, i64 0, i32 2, i32 0
  %198 = bitcast %"struct.std::__1::pair.717"* %197 to i64*
  br label %201

199:                                              ; preds = %189
  %200 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %177 to i64*
  br label %201

201:                                              ; preds = %199, %193
  %202 = phi i64* [ %200, %199 ], [ %198, %193 ]
  %203 = load i64, i64* %202, align 4
  %204 = trunc i64 %203 to i32
  %205 = lshr i64 %203, 32
  %206 = trunc i64 %205 to i32
  %207 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %180, i64 0, i32 3
  %208 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %207, align 8
  %209 = icmp eq %"class.v8::internal::ZoneMap"* %208, null
  br i1 %209, label %216, label %210

210:                                              ; preds = %201
  %211 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1, i32 2
  %212 = bitcast %"class.std::__1::__map_const_iterator"* %211 to %"class.std::__1::__tree_node"**
  %213 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %213, i64 0, i32 2, i32 0
  %215 = bitcast %"struct.std::__1::pair.717"* %214 to i64*
  br label %218

216:                                              ; preds = %201
  %217 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %180 to i64*
  br label %218

218:                                              ; preds = %216, %210
  %219 = phi i64* [ %217, %216 ], [ %215, %210 ]
  %220 = load i64, i64* %219, align 4
  %221 = trunc i64 %220 to i32
  %222 = icmp eq i32 %221, %204
  %223 = lshr i64 %220, 32
  %224 = trunc i64 %223 to i32
  %225 = icmp eq i32 %224, %206
  %226 = and i1 %222, %225
  br i1 %226, label %229, label %232

227:                                              ; preds = %170
  %228 = and i1 %178, %181
  br i1 %228, label %229, label %232

229:                                              ; preds = %227, %218
  %230 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 3
  store i8 1, i8* %230, align 1
  %231 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 2
  store i8 1, i8* %231, align 8
  br label %294

232:                                              ; preds = %227, %218, %183
  br i1 %178, label %233, label %235

233:                                              ; preds = %232
  %234 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 2
  br label %291

235:                                              ; preds = %232
  br i1 %181, label %279, label %236

236:                                              ; preds = %235
  %237 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %180, i64 0, i32 2, i32 0
  %238 = load i32, i32* %237, align 8
  %239 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %177, i64 0, i32 2, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, %238
  br i1 %241, label %242, label %276

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %177, i64 0, i32 3
  %244 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %243, align 8
  %245 = icmp eq %"class.v8::internal::ZoneMap"* %244, null
  br i1 %245, label %252, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 0, i32 2
  %248 = bitcast %"class.std::__1::__map_const_iterator"* %247 to %"class.std::__1::__tree_node"**
  %249 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 2, i32 0
  %251 = bitcast %"struct.std::__1::pair.717"* %250 to i64*
  br label %254

252:                                              ; preds = %242
  %253 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %177 to i64*
  br label %254

254:                                              ; preds = %252, %246
  %255 = phi i64* [ %253, %252 ], [ %251, %246 ]
  %256 = load i64, i64* %255, align 4
  %257 = trunc i64 %256 to i32
  %258 = lshr i64 %256, 32
  %259 = trunc i64 %258 to i32
  %260 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %180, i64 0, i32 3
  %261 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %260, align 8
  %262 = icmp eq %"class.v8::internal::ZoneMap"* %261, null
  br i1 %262, label %269, label %263

263:                                              ; preds = %254
  %264 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1, i32 2
  %265 = bitcast %"class.std::__1::__map_const_iterator"* %264 to %"class.std::__1::__tree_node"**
  %266 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %265, align 8
  %267 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %266, i64 0, i32 2, i32 0
  %268 = bitcast %"struct.std::__1::pair.717"* %267 to i64*
  br label %271

269:                                              ; preds = %254
  %270 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %180 to i64*
  br label %271

271:                                              ; preds = %269, %263
  %272 = phi i64* [ %270, %269 ], [ %268, %263 ]
  %273 = load i64, i64* %272, align 4
  %274 = trunc i64 %273 to i32
  %275 = icmp ugt i32 %274, %257
  br i1 %275, label %279, label %281

276:                                              ; preds = %236
  %277 = icmp ult i32 %240, %238
  %278 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 2
  br i1 %277, label %288, label %291

279:                                              ; preds = %271, %235
  %280 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 2
  br label %288

281:                                              ; preds = %271
  %282 = lshr i64 %273, 32
  %283 = trunc i64 %282 to i32
  %284 = icmp eq i32 %274, %257
  %285 = icmp ugt i32 %283, %259
  %286 = and i1 %284, %285
  %287 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 2
  br i1 %286, label %288, label %291

288:                                              ; preds = %281, %279, %276
  %289 = phi i8* [ %280, %279 ], [ %287, %281 ], [ %278, %276 ]
  store i8 1, i8* %289, align 8
  %290 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 3
  store i8 0, i8* %290, align 1
  br label %294

291:                                              ; preds = %281, %276, %233
  %292 = phi i8* [ %234, %233 ], [ %287, %281 ], [ %278, %276 ]
  store i8 0, i8* %292, align 8
  %293 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 3
  store i8 1, i8* %293, align 1
  br label %294

294:                                              ; preds = %229, %288, %291
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE11ZipIterable3endEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* noalias nocapture, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>, align 4
  %4 = alloca <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>, align 4
  %5 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* %1, i64 0, i32 0, i32 1
  %6 = load i8, i8* %5, align 8
  %7 = icmp ne i8 %6, 0
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>, <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>* %3, i64 0, i32 1
  %10 = bitcast %"class.std::__1::__map_const_iterator"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 16, i1 false), !alias.scope !59
  %11 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::ZipIterable"* %1, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 8
  %13 = icmp ne i8 %12, 0
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>, <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>* %4, i64 0, i32 1
  %16 = bitcast %"class.std::__1::__map_const_iterator"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 16, i1 false), !alias.scope !64
  %17 = getelementptr inbounds <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>, <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>* %4, i64 0, i32 0, i64 0
  %18 = getelementptr inbounds <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>, <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>* %3, i64 0, i32 0, i64 0
  %19 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* nonnull align 4 %18, i64 20, i1 false)
  %21 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 0, i32 5
  store i8 %8, i8* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1, i32 0
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1, i32 1, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* nonnull align 4 %17, i64 20, i1 false)
  %24 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1, i32 5
  store i8 %14, i8* %24, align 8
  %25 = getelementptr %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 0, i32 3
  %26 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %25, align 8
  %27 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %26, null
  %28 = getelementptr %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1, i32 3
  %29 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %28, align 8
  %30 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %29, null
  %31 = or i1 %27, %30
  br i1 %31, label %76, label %32

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %29, i64 0, i32 2, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %26, i64 0, i32 2, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, %34
  br i1 %37, label %38, label %81

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %26, i64 0, i32 3
  %40 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %39, align 8
  %41 = icmp eq %"class.v8::internal::ZoneMap"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 0, i32 2
  %44 = bitcast %"class.std::__1::__map_const_iterator"* %43 to %"class.std::__1::__tree_node"**
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 2, i32 0
  %47 = bitcast %"struct.std::__1::pair.717"* %46 to i64*
  br label %50

48:                                               ; preds = %38
  %49 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %26 to i64*
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi i64* [ %49, %48 ], [ %47, %42 ]
  %52 = load i64, i64* %51, align 4
  %53 = trunc i64 %52 to i32
  %54 = lshr i64 %52, 32
  %55 = trunc i64 %54 to i32
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %29, i64 0, i32 3
  %57 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %56, align 8
  %58 = icmp eq %"class.v8::internal::ZoneMap"* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1, i32 2
  %61 = bitcast %"class.std::__1::__map_const_iterator"* %60 to %"class.std::__1::__tree_node"**
  %62 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 2, i32 0
  %64 = bitcast %"struct.std::__1::pair.717"* %63 to i64*
  br label %67

65:                                               ; preds = %50
  %66 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %29 to i64*
  br label %67

67:                                               ; preds = %65, %59
  %68 = phi i64* [ %66, %65 ], [ %64, %59 ]
  %69 = load i64, i64* %68, align 4
  %70 = trunc i64 %69 to i32
  %71 = icmp eq i32 %70, %53
  %72 = lshr i64 %69, 32
  %73 = trunc i64 %72 to i32
  %74 = icmp eq i32 %73, %55
  %75 = and i1 %71, %74
  br i1 %75, label %78, label %81

76:                                               ; preds = %2
  %77 = and i1 %27, %30
  br i1 %77, label %78, label %81

78:                                               ; preds = %76, %67
  %79 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 3
  store i8 1, i8* %79, align 1
  %80 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 2
  store i8 1, i8* %80, align 8
  br label %143

81:                                               ; preds = %76, %67, %32
  br i1 %27, label %82, label %84

82:                                               ; preds = %81
  %83 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 2
  br label %140

84:                                               ; preds = %81
  br i1 %30, label %128, label %85

85:                                               ; preds = %84
  %86 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %29, i64 0, i32 2, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %26, i64 0, i32 2, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, %87
  br i1 %90, label %91, label %125

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %26, i64 0, i32 3
  %93 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %92, align 8
  %94 = icmp eq %"class.v8::internal::ZoneMap"* %93, null
  br i1 %94, label %101, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 0, i32 2
  %97 = bitcast %"class.std::__1::__map_const_iterator"* %96 to %"class.std::__1::__tree_node"**
  %98 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %98, i64 0, i32 2, i32 0
  %100 = bitcast %"struct.std::__1::pair.717"* %99 to i64*
  br label %103

101:                                              ; preds = %91
  %102 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %26 to i64*
  br label %103

103:                                              ; preds = %101, %95
  %104 = phi i64* [ %102, %101 ], [ %100, %95 ]
  %105 = load i64, i64* %104, align 4
  %106 = trunc i64 %105 to i32
  %107 = lshr i64 %105, 32
  %108 = trunc i64 %107 to i32
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %29, i64 0, i32 3
  %110 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %109, align 8
  %111 = icmp eq %"class.v8::internal::ZoneMap"* %110, null
  br i1 %111, label %118, label %112

112:                                              ; preds = %103
  %113 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1, i32 2
  %114 = bitcast %"class.std::__1::__map_const_iterator"* %113 to %"class.std::__1::__tree_node"**
  %115 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %115, i64 0, i32 2, i32 0
  %117 = bitcast %"struct.std::__1::pair.717"* %116 to i64*
  br label %120

118:                                              ; preds = %103
  %119 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %29 to i64*
  br label %120

120:                                              ; preds = %118, %112
  %121 = phi i64* [ %119, %118 ], [ %117, %112 ]
  %122 = load i64, i64* %121, align 4
  %123 = trunc i64 %122 to i32
  %124 = icmp ugt i32 %123, %106
  br i1 %124, label %128, label %130

125:                                              ; preds = %85
  %126 = icmp ult i32 %89, %87
  %127 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 2
  br i1 %126, label %137, label %140

128:                                              ; preds = %120, %84
  %129 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 2
  br label %137

130:                                              ; preds = %120
  %131 = lshr i64 %122, 32
  %132 = trunc i64 %131 to i32
  %133 = icmp eq i32 %123, %106
  %134 = icmp ugt i32 %132, %108
  %135 = and i1 %133, %134
  %136 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 2
  br i1 %135, label %137, label %140

137:                                              ; preds = %130, %128, %125
  %138 = phi i8* [ %129, %128 ], [ %136, %130 ], [ %127, %125 ]
  store i8 1, i8* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 3
  store i8 0, i8* %139, align 1
  br label %143

140:                                              ; preds = %130, %125, %82
  %141 = phi i8* [ %83, %82 ], [ %136, %130 ], [ %127, %125 ]
  store i8 0, i8* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 3
  store i8 1, i8* %142, align 1
  br label %143

143:                                              ; preds = %78, %137, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE3SetES4_b(%"class.v8::internal::compiler::PersistentMap"* nocapture, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"*
  %6 = alloca %"struct.std::__1::array", align 8
  %7 = bitcast %"struct.std::__1::array"* %6 to i8*
  store i64 %1, i64* %4, align 8
  %8 = zext i1 %2 to i8
  %9 = lshr i64 %1, 32
  %10 = trunc i64 %9 to i32
  %11 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %10) #5
  %12 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 0, i64 %11) #5
  %13 = trunc i64 %1 to i32
  %14 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %13) #5
  %15 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %12, i64 %14) #5
  %16 = trunc i64 %15 to i32
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %7) #5
  %17 = getelementptr %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 0
  %18 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %17, align 8
  %19 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %18, null
  br i1 %19, label %101, label %20

20:                                               ; preds = %3, %89
  %21 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %91, %89 ], [ %18, %3 ]
  %22 = phi i32 [ %92, %89 ], [ 0, %3 ]
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %21, i64 0, i32 2, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, %16
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %21, i64 0, i32 1
  br i1 %25, label %27, label %56

27:                                               ; preds = %20
  %28 = load i8, i8* %26, align 4
  %29 = sext i8 %28 to i32
  %30 = icmp slt i32 %22, %29
  br i1 %30, label %31, label %104

31:                                               ; preds = %27
  %32 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %21 to i8*
  %33 = sext i32 %22 to i64
  %34 = sext i8 %28 to i64
  %35 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %33
  %36 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %35 to i8*
  %37 = shl nsw i64 %33, 3
  %38 = add nsw i64 %37, 32
  %39 = getelementptr i8, i8* %32, i64 %38
  %40 = shl nsw i64 %34, 3
  %41 = sub nsw i64 %40, %37
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %39, i64 %41, i1 false)
  %42 = sub nsw i64 %34, %33
  %43 = xor i64 %33, -1
  %44 = add nsw i64 %43, %34
  %45 = and i64 %42, 7
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %31, %47
  %48 = phi i64 [ %50, %47 ], [ %33, %31 ]
  %49 = phi i64 [ %51, %47 ], [ %45, %31 ]
  %50 = add nsw i64 %48, 1
  %51 = add i64 %49, -1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %47, !llvm.loop !69

53:                                               ; preds = %47, %31
  %54 = phi i64 [ %33, %31 ], [ %50, %47 ]
  %55 = icmp ult i64 %44, 7
  br i1 %55, label %98, label %94

56:                                               ; preds = %20
  %57 = xor i32 %24, %16
  %58 = lshr i32 -2147483648, %22
  %59 = and i32 %57, %58
  %60 = icmp eq i32 %59, 0
  %61 = load i8, i8* %26, align 4
  br i1 %60, label %62, label %81

62:                                               ; preds = %56
  %63 = sext i32 %22 to i64
  %64 = sext i8 %61 to i64
  br label %65

65:                                               ; preds = %71, %62
  %66 = phi i64 [ %63, %62 ], [ %74, %71 ]
  %67 = icmp slt i64 %66, %64
  br i1 %67, label %68, label %71

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %21, i64 0, i32 4, i64 %66
  %70 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %69, align 8
  br label %71

71:                                               ; preds = %68, %65
  %72 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %70, %68 ], [ null, %65 ]
  %73 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %66
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %72, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %73, align 8
  %74 = add i64 %66, 1
  %75 = trunc i64 %74 to i32
  %76 = lshr i32 -2147483648, %75
  %77 = and i32 %76, %57
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %65, label %79

79:                                               ; preds = %71
  %80 = trunc i64 %74 to i32
  br label %81

81:                                               ; preds = %56, %79
  %82 = phi i32 [ %80, %79 ], [ %22, %56 ]
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %83
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %21, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %84, align 8
  %85 = sext i8 %61 to i32
  %86 = icmp slt i32 %82, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %81
  %88 = add nsw i32 %82, 1
  br label %101

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %21, i64 0, i32 4, i64 %83
  %91 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %90, align 8
  %92 = add nsw i32 %82, 1
  %93 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %91, null
  br i1 %93, label %101, label %20

94:                                               ; preds = %53, %94
  %95 = phi i64 [ %96, %94 ], [ %54, %53 ]
  %96 = add nsw i64 %95, 8
  %97 = icmp eq i64 %96, %34
  br i1 %97, label %98, label %94

98:                                               ; preds = %94, %53
  %99 = sext i8 %28 to i32
  %100 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %21, null
  br i1 %100, label %101, label %104

101:                                              ; preds = %89, %87, %3, %98
  %102 = phi i32 [ %99, %98 ], [ %88, %87 ], [ 0, %3 ], [ %92, %89 ]
  %103 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 1
  br label %168

104:                                              ; preds = %27, %98
  %105 = phi i32 [ %99, %98 ], [ %22, %27 ]
  %106 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %21, i64 0, i32 3
  %107 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %106, align 8
  %108 = icmp eq %"class.v8::internal::ZoneMap"* %107, null
  br i1 %108, label %155, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %107, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %111 = bitcast %"class.std::__1::__tree_end_node"* %110 to %"class.std::__1::__tree_node"**
  %112 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node"* %112, null
  br i1 %113, label %151, label %114

114:                                              ; preds = %109, %131
  %115 = phi %"class.std::__1::__tree_end_node"* [ %133, %131 ], [ %110, %109 ]
  %116 = phi %"class.std::__1::__tree_node"* [ %134, %131 ], [ %112, %109 ]
  %117 = getelementptr %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %116, i64 0, i32 2, i32 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = icmp ult i32 %118, %13
  br i1 %119, label %128, label %120

120:                                              ; preds = %114
  %121 = getelementptr %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %116, i64 0, i32 2, i32 0, i32 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %118, %13
  %124 = icmp ult i32 %122, %10
  %125 = and i1 %123, %124
  %126 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %116, i64 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::__tree_node"* %116 to %"class.std::__1::__tree_node"**
  br i1 %125, label %128, label %131

128:                                              ; preds = %120, %114
  %129 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %116, i64 0, i32 0, i32 1
  %130 = bitcast %"class.std::__1::__tree_node_base"** %129 to %"class.std::__1::__tree_node"**
  br label %131

131:                                              ; preds = %128, %120
  %132 = phi %"class.std::__1::__tree_node"** [ %130, %128 ], [ %127, %120 ]
  %133 = phi %"class.std::__1::__tree_end_node"* [ %115, %128 ], [ %126, %120 ]
  %134 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %132, align 8
  %135 = icmp eq %"class.std::__1::__tree_node"* %134, null
  br i1 %135, label %136, label %114

136:                                              ; preds = %131
  %137 = icmp eq %"class.std::__1::__tree_end_node"* %133, %110
  br i1 %137, label %151, label %138

138:                                              ; preds = %136
  %139 = bitcast %"class.std::__1::__tree_end_node"* %133 to %"class.std::__1::__tree_node"*
  %140 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %139, i64 0, i32 2
  %141 = bitcast %"struct.std::__1::__value_type"* %140 to i64*
  %142 = load i64, i64* %141, align 4
  %143 = trunc i64 %142 to i32
  %144 = icmp ult i32 %13, %143
  br i1 %144, label %151, label %145

145:                                              ; preds = %138
  %146 = lshr i64 %142, 32
  %147 = trunc i64 %146 to i32
  %148 = icmp eq i32 %13, %143
  %149 = icmp ult i32 %10, %147
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %153

151:                                              ; preds = %145, %138, %136, %109
  %152 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 1
  br label %168

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %139, i64 0, i32 2, i32 0, i32 1
  br label %168

155:                                              ; preds = %104
  %156 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %21 to i64*
  %157 = load i64, i64* %156, align 4
  %158 = trunc i64 %157 to i32
  %159 = icmp eq i32 %13, %158
  %160 = lshr i64 %157, 32
  %161 = trunc i64 %160 to i32
  %162 = icmp eq i32 %10, %161
  %163 = and i1 %159, %162
  br i1 %163, label %164, label %166

164:                                              ; preds = %155
  %165 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %21, i64 0, i32 0, i32 0, i32 1
  br label %168

166:                                              ; preds = %155
  %167 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 1
  br label %168

168:                                              ; preds = %101, %151, %153, %164, %166
  %169 = phi i1 [ false, %164 ], [ false, %166 ], [ true, %101 ], [ false, %151 ], [ false, %153 ]
  %170 = phi i32 [ %105, %164 ], [ %105, %166 ], [ %102, %101 ], [ %105, %151 ], [ %105, %153 ]
  %171 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %21, %164 ], [ %21, %166 ], [ null, %101 ], [ %21, %151 ], [ %21, %153 ]
  %172 = phi i8* [ %165, %164 ], [ %167, %166 ], [ %103, %101 ], [ %152, %151 ], [ %154, %153 ]
  %173 = load i8, i8* %172, align 1, !range !3
  %174 = icmp eq i8 %173, %8
  br i1 %174, label %548, label %175

175:                                              ; preds = %168
  br i1 %169, label %345, label %176

176:                                              ; preds = %175
  %177 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %171, i64 0, i32 3
  %178 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %177, align 8
  %179 = icmp eq %"class.v8::internal::ZoneMap"* %178, null
  br i1 %179, label %180, label %188

180:                                              ; preds = %176
  %181 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %171, i64 0, i32 0, i32 0, i32 0, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %171, i64 0, i32 0, i32 0, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %182, %13
  %186 = icmp eq i32 %184, %10
  %187 = and i1 %185, %186
  br i1 %187, label %345, label %188

188:                                              ; preds = %180, %176
  %189 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 2
  %190 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %189, align 8
  %191 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %190, i64 0, i32 2
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %190, i64 0, i32 3
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %194, %192
  %196 = icmp ult i64 %195, 32
  br i1 %196, label %197, label %199, !prof !2

197:                                              ; preds = %188
  %198 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %190, i64 32) #5
  br label %201

199:                                              ; preds = %188
  %200 = add i64 %192, 32
  store i64 %200, i64* %191, align 8
  br label %201

201:                                              ; preds = %197, %199
  %202 = phi i64 [ %198, %197 ], [ %192, %199 ]
  %203 = inttoptr i64 %202 to %"class.v8::internal::ZoneMap"*
  %204 = bitcast %"class.v8::internal::Zone"** %189 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %203, i64 0, i32 0, i32 0, i32 0
  %207 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %203, i64 0, i32 0, i32 0, i32 1, i32 1
  %208 = bitcast %"struct.std::__1::__compressed_pair_elem.688"* %207 to i64*
  %209 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %203, i64 0, i32 0, i32 0, i32 1
  %210 = bitcast %"class.std::__1::__compressed_pair.686"* %209 to i64*
  store i64 0, i64* %210, align 8
  store i64 %205, i64* %208, align 8
  %211 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %203, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %211, align 8
  %212 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %203, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %212, %"class.std::__1::__tree_end_node"** %206, align 8
  %213 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %177, align 8
  %214 = icmp eq %"class.v8::internal::ZoneMap"* %213, null
  %215 = inttoptr i64 %205 to %"class.v8::internal::Zone"*
  br i1 %214, label %336, label %216

216:                                              ; preds = %201
  %217 = icmp eq %"class.v8::internal::ZoneMap"* %213, %203
  br i1 %217, label %342, label %218

218:                                              ; preds = %216
  %219 = getelementptr %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %213, i64 0, i32 0, i32 0, i32 0
  %220 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %219, align 8
  %221 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %213, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %222 = icmp eq %"class.std::__1::__tree_end_node"* %220, %221
  br i1 %222, label %342, label %223

223:                                              ; preds = %218
  %224 = getelementptr %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %203, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %225 = bitcast %"class.std::__1::__tree_end_node"* %212 to %"class.std::__1::__tree_node"**
  %226 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %212, i64 0, i32 0
  %227 = inttoptr i64 %202 to i64*
  %228 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %203, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %229

229:                                              ; preds = %334, %223
  %230 = phi %"class.v8::internal::Zone"* [ %215, %223 ], [ %335, %334 ]
  %231 = phi %"class.std::__1::__tree_end_node"* [ %220, %223 ], [ %332, %334 ]
  %232 = bitcast %"class.std::__1::__tree_end_node"* %231 to %"class.std::__1::__tree_node"*
  %233 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %232, i64 0, i32 2, i32 0
  %234 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %230, i64 0, i32 2
  %235 = load i64, i64* %234, align 8, !noalias !70
  %236 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %230, i64 0, i32 3
  %237 = load i64, i64* %236, align 8, !noalias !70
  %238 = sub i64 %237, %235
  %239 = icmp ult i64 %238, 40
  br i1 %239, label %240, label %242, !prof !2

240:                                              ; preds = %229
  %241 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %230, i64 40) #5, !noalias !70
  br label %244

242:                                              ; preds = %229
  %243 = add i64 %235, 40
  store i64 %243, i64* %234, align 8, !noalias !70
  br label %244

244:                                              ; preds = %242, %240
  %245 = phi i64 [ %241, %240 ], [ %235, %242 ]
  %246 = inttoptr i64 %245 to %"class.std::__1::__tree_node"*
  %247 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %246, i64 0, i32 2, i32 0
  %248 = bitcast %"struct.std::__1::pair.717"* %247 to i8*
  %249 = bitcast %"struct.std::__1::pair.717"* %233 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %248, i8* align 4 %249, i64 12, i1 false) #5, !noalias !70
  %250 = getelementptr %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %246, i64 0, i32 2, i32 0, i32 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %246, i64 0, i32 2, i32 0, i32 0, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %225, align 8
  %255 = icmp eq %"class.std::__1::__tree_node"* %254, null
  br i1 %255, label %286, label %256

256:                                              ; preds = %244, %283
  %257 = phi %"class.std::__1::__tree_node"* [ %285, %283 ], [ %254, %244 ]
  %258 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %257, i64 0, i32 2
  %259 = bitcast %"struct.std::__1::__value_type"* %258 to i64*
  %260 = load i64, i64* %259, align 4
  %261 = trunc i64 %260 to i32
  %262 = icmp ult i32 %251, %261
  br i1 %262, label %269, label %263

263:                                              ; preds = %256
  %264 = lshr i64 %260, 32
  %265 = trunc i64 %264 to i32
  %266 = icmp eq i32 %251, %261
  %267 = icmp ult i32 %253, %265
  %268 = and i1 %266, %267
  br i1 %268, label %269, label %276

269:                                              ; preds = %263, %256
  %270 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %257, i64 0, i32 0, i32 0, i32 0
  %271 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %270, align 8
  %272 = icmp eq %"class.std::__1::__tree_node_base"* %271, null
  br i1 %272, label %273, label %283

273:                                              ; preds = %269
  %274 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %257, i64 0, i32 0, i32 0, i32 0
  %275 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %257, i64 0, i32 0, i32 0
  br label %286

276:                                              ; preds = %263
  %277 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %257, i64 0, i32 0, i32 1
  %278 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %277, align 8
  %279 = icmp eq %"class.std::__1::__tree_node_base"* %278, null
  br i1 %279, label %280, label %283

280:                                              ; preds = %276
  %281 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %257, i64 0, i32 0, i32 1
  %282 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %257, i64 0, i32 0, i32 0
  br label %286

283:                                              ; preds = %276, %269
  %284 = phi %"class.std::__1::__tree_node_base"* [ %271, %269 ], [ %278, %276 ]
  %285 = bitcast %"class.std::__1::__tree_node_base"* %284 to %"class.std::__1::__tree_node"*
  br label %256

286:                                              ; preds = %280, %273, %244
  %287 = phi %"class.std::__1::__tree_end_node"* [ %275, %273 ], [ %282, %280 ], [ %212, %244 ]
  %288 = phi %"class.std::__1::__tree_node_base"** [ %274, %273 ], [ %281, %280 ], [ %226, %244 ]
  %289 = inttoptr i64 %245 to %"class.std::__1::__tree_node_base"*
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %289, i64 0, i32 2
  %291 = inttoptr i64 %245 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %291, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %287, %"class.std::__1::__tree_end_node"** %290, align 8
  store %"class.std::__1::__tree_node_base"* %289, %"class.std::__1::__tree_node_base"** %288, align 8
  %292 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %206, align 8
  %293 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %292, i64 0, i32 0
  %294 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %293, align 8
  %295 = icmp eq %"class.std::__1::__tree_node_base"* %294, null
  br i1 %295, label %299, label %296

296:                                              ; preds = %286
  %297 = ptrtoint %"class.std::__1::__tree_node_base"* %294 to i64
  store i64 %297, i64* %227, align 8
  %298 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %288, align 8
  br label %299

299:                                              ; preds = %296, %286
  %300 = phi %"class.std::__1::__tree_node_base"* [ %289, %286 ], [ %298, %296 ]
  %301 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %228, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %301, %"class.std::__1::__tree_node_base"* %300) #5
  %302 = load i64, i64* %211, align 8
  %303 = add i64 %302, 1
  store i64 %303, i64* %211, align 8
  %304 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %231, i64 1, i32 0
  %305 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %304, align 8
  %306 = icmp eq %"class.std::__1::__tree_node_base"* %305, null
  br i1 %306, label %307, label %315

307:                                              ; preds = %299
  %308 = bitcast %"class.std::__1::__tree_end_node"* %231 to %"class.std::__1::__tree_node_base"*
  %309 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %231, i64 2
  %310 = bitcast %"class.std::__1::__tree_end_node"* %309 to %"class.std::__1::__tree_end_node"**
  %311 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %310, align 8
  %312 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %311, i64 0, i32 0
  %313 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %312, align 8
  %314 = icmp eq %"class.std::__1::__tree_node_base"* %313, %308
  br i1 %314, label %331, label %322

315:                                              ; preds = %299, %315
  %316 = phi %"class.std::__1::__tree_node_base"* [ %318, %315 ], [ %305, %299 ]
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %316, i64 0, i32 0, i32 0
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %317, align 8
  %319 = icmp eq %"class.std::__1::__tree_node_base"* %318, null
  br i1 %319, label %320, label %315

320:                                              ; preds = %315
  %321 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %316, i64 0, i32 0
  br label %331

322:                                              ; preds = %307, %322
  %323 = phi %"class.std::__1::__tree_end_node"** [ %326, %322 ], [ %310, %307 ]
  %324 = bitcast %"class.std::__1::__tree_end_node"** %323 to %"class.std::__1::__tree_node_base"**
  %325 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %324, align 8
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %325, i64 0, i32 2
  %327 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %328 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %327, i64 0, i32 0
  %329 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %328, align 8
  %330 = icmp eq %"class.std::__1::__tree_node_base"* %329, %325
  br i1 %330, label %331, label %322

331:                                              ; preds = %322, %320, %307
  %332 = phi %"class.std::__1::__tree_end_node"* [ %321, %320 ], [ %311, %307 ], [ %327, %322 ]
  %333 = icmp eq %"class.std::__1::__tree_end_node"* %332, %221
  br i1 %333, label %342, label %334

334:                                              ; preds = %331
  %335 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %224, align 8, !noalias !70
  br label %229

336:                                              ; preds = %201
  %337 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %171, i64 0, i32 0, i32 0, i32 1
  %338 = load i8, i8* %337, align 1, !range !3
  %339 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %203, i64 0, i32 0
  %340 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %171, i64 0, i32 0, i32 0, i32 0
  %341 = tail call fastcc dereferenceable(1) i8* @_ZNSt3__13mapIN2v88internal8compiler12_GLOBAL__N_117UnobservableStoreEbNS_4lessIS5_EENS2_13ZoneAllocatorINS_4pairIKS5_bEEEEEixERSA_(%"class.std::__1::map"* %339, %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"* dereferenceable(8) %340)
  store i8 %338, i8* %341, align 1
  br label %342

342:                                              ; preds = %331, %218, %216, %336
  %343 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %203, i64 0, i32 0
  %344 = call fastcc dereferenceable(1) i8* @_ZNSt3__13mapIN2v88internal8compiler12_GLOBAL__N_117UnobservableStoreEbNS_4lessIS5_EENS2_13ZoneAllocatorINS_4pairIKS5_bEEEEEixERSA_(%"class.std::__1::map"* %343, %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"* nonnull dereferenceable(8) %5)
  store i8 %8, i8* %344, align 1
  br label %345

345:                                              ; preds = %175, %342, %180
  %346 = phi %"class.v8::internal::ZoneMap"* [ null, %180 ], [ %203, %342 ], [ null, %175 ]
  %347 = icmp sgt i32 %170, 1
  %348 = select i1 %347, i32 %170, i32 1
  %349 = add nsw i32 %348, -1
  %350 = sext i32 %349 to i64
  %351 = shl nsw i64 %350, 3
  %352 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 2
  %353 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %352, align 8
  %354 = add nuw nsw i64 %351, 47
  %355 = and i64 %354, -8
  %356 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %353, i64 0, i32 2
  %357 = load i64, i64* %356, align 8
  %358 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %353, i64 0, i32 3
  %359 = load i64, i64* %358, align 8
  %360 = sub i64 %359, %357
  %361 = icmp ugt i64 %355, %360
  br i1 %361, label %362, label %364, !prof !2

362:                                              ; preds = %345
  %363 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %353, i64 %355) #5
  br label %366

364:                                              ; preds = %345
  %365 = add i64 %357, %355
  store i64 %365, i64* %356, align 8
  br label %366

366:                                              ; preds = %362, %364
  %367 = phi i64 [ %363, %362 ], [ %357, %364 ]
  %368 = inttoptr i64 %367 to i8*
  %369 = inttoptr i64 %367 to %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::KeyValue"*
  %370 = inttoptr i64 %367 to i64*
  %371 = load i64, i64* %4, align 8
  store i64 %371, i64* %370, align 4
  %372 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::KeyValue", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::KeyValue"* %369, i64 0, i32 0, i32 1
  store i8 %8, i8* %372, align 4
  %373 = getelementptr inbounds i8, i8* %368, i64 12
  %374 = trunc i32 %170 to i8
  store i8 %374, i8* %373, align 4
  %375 = getelementptr inbounds i8, i8* %368, i64 16
  %376 = bitcast i8* %375 to i32*
  store i32 %16, i32* %376, align 8
  %377 = getelementptr inbounds i8, i8* %368, i64 24
  %378 = bitcast i8* %377 to %"class.v8::internal::ZoneMap"**
  store %"class.v8::internal::ZoneMap"* %346, %"class.v8::internal::ZoneMap"** %378, align 8
  %379 = getelementptr inbounds i8, i8* %368, i64 32
  %380 = bitcast i8* %379 to %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"**
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* null, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %380, align 8
  %381 = inttoptr i64 %367 to %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*
  %382 = inttoptr i64 %367 to i8*
  %383 = icmp sgt i32 %170, 0
  br i1 %383, label %384, label %496

384:                                              ; preds = %366
  %385 = zext i32 %170 to i64
  %386 = icmp ult i32 %170, 4
  br i1 %386, label %387, label %408

387:                                              ; preds = %494, %408, %384
  %388 = phi i64 [ 0, %408 ], [ 0, %384 ], [ %418, %494 ]
  %389 = sub nsw i64 %385, %388
  %390 = xor i64 %388, -1
  %391 = add nsw i64 %390, %385
  %392 = and i64 %389, 7
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %405, label %394

394:                                              ; preds = %387, %394
  %395 = phi i64 [ %402, %394 ], [ %388, %387 ]
  %396 = phi i64 [ %403, %394 ], [ %392, %387 ]
  %397 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %395
  %398 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %397 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %395
  %401 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %400 to i64*
  store i64 %399, i64* %401, align 8
  %402 = add nuw nsw i64 %395, 1
  %403 = add i64 %396, -1
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %405, label %394, !llvm.loop !73

405:                                              ; preds = %394, %387
  %406 = phi i64 [ %388, %387 ], [ %402, %394 ]
  %407 = icmp ult i64 %391, 7
  br i1 %407, label %496, label %497

408:                                              ; preds = %384
  %409 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 0
  %410 = shl nuw nsw i64 %385, 3
  %411 = add nuw nsw i64 %410, 32
  %412 = getelementptr i8, i8* %382, i64 %411
  %413 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %385
  %414 = icmp ult %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %409, %413
  %415 = icmp ugt i8* %412, %7
  %416 = and i1 %414, %415
  br i1 %416, label %387, label %417

417:                                              ; preds = %408
  %418 = and i64 %385, 4294967292
  %419 = add nsw i64 %418, -4
  %420 = lshr exact i64 %419, 2
  %421 = add nuw nsw i64 %420, 1
  %422 = and i64 %421, 3
  %423 = icmp ult i64 %419, 12
  br i1 %423, label %475, label %424

424:                                              ; preds = %417
  %425 = sub nsw i64 %421, %422
  br label %426

426:                                              ; preds = %426, %424
  %427 = phi i64 [ 0, %424 ], [ %472, %426 ]
  %428 = phi i64 [ %425, %424 ], [ %473, %426 ]
  %429 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %427
  %430 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %429 to <2 x i64>*
  %431 = load <2 x i64>, <2 x i64>* %430, align 8, !alias.scope !74
  %432 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %429, i64 2
  %433 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %432 to <2 x i64>*
  %434 = load <2 x i64>, <2 x i64>* %433, align 8, !alias.scope !74
  %435 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %427
  %436 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %435 to <2 x i64>*
  store <2 x i64> %431, <2 x i64>* %436, align 8, !alias.scope !77, !noalias !74
  %437 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %435, i64 2
  %438 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %437 to <2 x i64>*
  store <2 x i64> %434, <2 x i64>* %438, align 8, !alias.scope !77, !noalias !74
  %439 = or i64 %427, 4
  %440 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %439
  %441 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %440 to <2 x i64>*
  %442 = load <2 x i64>, <2 x i64>* %441, align 8, !alias.scope !74
  %443 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %440, i64 2
  %444 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %443 to <2 x i64>*
  %445 = load <2 x i64>, <2 x i64>* %444, align 8, !alias.scope !74
  %446 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %439
  %447 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %446 to <2 x i64>*
  store <2 x i64> %442, <2 x i64>* %447, align 8, !alias.scope !77, !noalias !74
  %448 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %446, i64 2
  %449 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %448 to <2 x i64>*
  store <2 x i64> %445, <2 x i64>* %449, align 8, !alias.scope !77, !noalias !74
  %450 = or i64 %427, 8
  %451 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %450
  %452 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %451 to <2 x i64>*
  %453 = load <2 x i64>, <2 x i64>* %452, align 8, !alias.scope !74
  %454 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %451, i64 2
  %455 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %454 to <2 x i64>*
  %456 = load <2 x i64>, <2 x i64>* %455, align 8, !alias.scope !74
  %457 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %450
  %458 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %457 to <2 x i64>*
  store <2 x i64> %453, <2 x i64>* %458, align 8, !alias.scope !77, !noalias !74
  %459 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %457, i64 2
  %460 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %459 to <2 x i64>*
  store <2 x i64> %456, <2 x i64>* %460, align 8, !alias.scope !77, !noalias !74
  %461 = or i64 %427, 12
  %462 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %461
  %463 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %462 to <2 x i64>*
  %464 = load <2 x i64>, <2 x i64>* %463, align 8, !alias.scope !74
  %465 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %462, i64 2
  %466 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %465 to <2 x i64>*
  %467 = load <2 x i64>, <2 x i64>* %466, align 8, !alias.scope !74
  %468 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %461
  %469 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %468 to <2 x i64>*
  store <2 x i64> %464, <2 x i64>* %469, align 8, !alias.scope !77, !noalias !74
  %470 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %468, i64 2
  %471 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %470 to <2 x i64>*
  store <2 x i64> %467, <2 x i64>* %471, align 8, !alias.scope !77, !noalias !74
  %472 = add i64 %427, 16
  %473 = add i64 %428, -4
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %426, !llvm.loop !79

475:                                              ; preds = %426, %417
  %476 = phi i64 [ 0, %417 ], [ %472, %426 ]
  %477 = icmp eq i64 %422, 0
  br i1 %477, label %494, label %478

478:                                              ; preds = %475, %478
  %479 = phi i64 [ %491, %478 ], [ %476, %475 ]
  %480 = phi i64 [ %492, %478 ], [ %422, %475 ]
  %481 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %479
  %482 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %481 to <2 x i64>*
  %483 = load <2 x i64>, <2 x i64>* %482, align 8, !alias.scope !74
  %484 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %481, i64 2
  %485 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %484 to <2 x i64>*
  %486 = load <2 x i64>, <2 x i64>* %485, align 8, !alias.scope !74
  %487 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %479
  %488 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %487 to <2 x i64>*
  store <2 x i64> %483, <2 x i64>* %488, align 8, !alias.scope !77, !noalias !74
  %489 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %487, i64 2
  %490 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %489 to <2 x i64>*
  store <2 x i64> %486, <2 x i64>* %490, align 8, !alias.scope !77, !noalias !74
  %491 = add i64 %479, 4
  %492 = add i64 %480, -1
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %478, !llvm.loop !81

494:                                              ; preds = %478, %475
  %495 = icmp eq i64 %418, %385
  br i1 %495, label %496, label %387

496:                                              ; preds = %405, %497, %494, %366
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %17, align 8
  br label %548

497:                                              ; preds = %405, %497
  %498 = phi i64 [ %546, %497 ], [ %406, %405 ]
  %499 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %498
  %500 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %499 to i64*
  %501 = load i64, i64* %500, align 8
  %502 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %498
  %503 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %502 to i64*
  store i64 %501, i64* %503, align 8
  %504 = add nuw nsw i64 %498, 1
  %505 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %504
  %506 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %505 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %504
  %509 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %508 to i64*
  store i64 %507, i64* %509, align 8
  %510 = add nuw nsw i64 %498, 2
  %511 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %510
  %512 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %511 to i64*
  %513 = load i64, i64* %512, align 8
  %514 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %510
  %515 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %514 to i64*
  store i64 %513, i64* %515, align 8
  %516 = add nuw nsw i64 %498, 3
  %517 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %516
  %518 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %516
  %521 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %520 to i64*
  store i64 %519, i64* %521, align 8
  %522 = add nuw nsw i64 %498, 4
  %523 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %522
  %524 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %523 to i64*
  %525 = load i64, i64* %524, align 8
  %526 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %522
  %527 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %526 to i64*
  store i64 %525, i64* %527, align 8
  %528 = add nuw nsw i64 %498, 5
  %529 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %528
  %530 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %529 to i64*
  %531 = load i64, i64* %530, align 8
  %532 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %528
  %533 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %532 to i64*
  store i64 %531, i64* %533, align 8
  %534 = add nuw nsw i64 %498, 6
  %535 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %534
  %536 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %534
  %539 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %538 to i64*
  store i64 %537, i64* %539, align 8
  %540 = add nuw nsw i64 %498, 7
  %541 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 %540
  %542 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %541 to i64*
  %543 = load i64, i64* %542, align 8
  %544 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %381, i64 0, i32 4, i64 %540
  %545 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %544 to i64*
  store i64 %543, i64* %545, align 8
  %546 = add nuw nsw i64 %498, 8
  %547 = icmp eq i64 %546, %385
  br i1 %547, label %496, label %497, !llvm.loop !82

548:                                              ; preds = %168, %496
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %7) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE15double_iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca [272 x i8], align 8
  %3 = alloca [264 x i8], align 8
  %4 = getelementptr inbounds [264 x i8], [264 x i8]* %3, i64 0, i64 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %9)
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 3
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1
  tail call fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %15)
  br label %16

16:                                               ; preds = %10, %14
  %17 = getelementptr inbounds [272 x i8], [272 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %17)
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %4)
  %18 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 0, i32 2
  %19 = bitcast %"class.std::__1::__map_const_iterator"* %18 to %"class.std::__1::__tree_node"**
  %20 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 0, i32 3
  %22 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 0, i32 4
  %24 = bitcast %"struct.std::__1::array"* %23 to i8*
  %25 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1
  %26 = bitcast %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1, i32 2
  %29 = bitcast %"class.std::__1::__map_const_iterator"* %28 to %"class.std::__1::__tree_node"**
  %30 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1, i32 3
  %32 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::double_iterator"* %0, i64 0, i32 1, i32 4
  %34 = bitcast %"struct.std::__1::array"* %33 to i8*
  %35 = getelementptr inbounds [264 x i8], [264 x i8]* %3, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 %34, i64 264, i1 false)
  %36 = getelementptr inbounds [272 x i8], [272 x i8]* %2, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %24, i64 264, i1 false)
  %37 = getelementptr inbounds [272 x i8], [272 x i8]* %2, i64 0, i64 264
  %38 = bitcast i8* %37 to i64*
  store i64 %27, i64* %38, align 8
  %39 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %22, null
  %40 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %32, null
  %41 = or i1 %39, %40
  br i1 %41, label %74, label %42

42:                                               ; preds = %16
  %43 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %32, i64 0, i32 2, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %22, i64 0, i32 2, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, %44
  br i1 %47, label %48, label %76

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %22, i64 0, i32 3
  %50 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %49, align 8
  %51 = icmp eq %"class.v8::internal::ZoneMap"* %50, null
  %52 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %22 to i64*
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 2, i32 0
  %54 = bitcast %"struct.std::__1::pair.717"* %53 to i64*
  %55 = select i1 %51, i64* %52, i64* %54
  %56 = load i64, i64* %55, align 4
  %57 = trunc i64 %56 to i32
  %58 = lshr i64 %56, 32
  %59 = trunc i64 %58 to i32
  %60 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %32, i64 0, i32 3
  %61 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %60, align 8
  %62 = icmp eq %"class.v8::internal::ZoneMap"* %61, null
  %63 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %32 to i64*
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %30, i64 0, i32 2, i32 0
  %65 = bitcast %"struct.std::__1::pair.717"* %64 to i64*
  %66 = select i1 %62, i64* %63, i64* %65
  %67 = load i64, i64* %66, align 4
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %68, %57
  %70 = lshr i64 %67, 32
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %71, %59
  %73 = and i1 %69, %72
  br i1 %73, label %115, label %76

74:                                               ; preds = %16
  %75 = and i1 %39, %40
  br i1 %75, label %115, label %76

76:                                               ; preds = %74, %48, %42
  br i1 %39, label %114, label %77

77:                                               ; preds = %76
  br i1 %40, label %115, label %78

78:                                               ; preds = %77
  %79 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %32, i64 0, i32 2, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %22, i64 0, i32 2, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, %80
  br i1 %83, label %84, label %104

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %22, i64 0, i32 3
  %86 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %85, align 8
  %87 = icmp eq %"class.v8::internal::ZoneMap"* %86, null
  %88 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %22 to i64*
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 2, i32 0
  %90 = bitcast %"struct.std::__1::pair.717"* %89 to i64*
  %91 = select i1 %87, i64* %88, i64* %90
  %92 = load i64, i64* %91, align 4
  %93 = trunc i64 %92 to i32
  %94 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %32, i64 0, i32 3
  %95 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %94, align 8
  %96 = icmp eq %"class.v8::internal::ZoneMap"* %95, null
  %97 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %32 to i64*
  %98 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %30, i64 0, i32 2, i32 0
  %99 = bitcast %"struct.std::__1::pair.717"* %98 to i64*
  %100 = select i1 %96, i64* %97, i64* %99
  %101 = load i64, i64* %100, align 4
  %102 = trunc i64 %101 to i32
  %103 = icmp ugt i32 %102, %93
  br i1 %103, label %115, label %106

104:                                              ; preds = %78
  %105 = icmp ult i32 %82, %80
  br i1 %105, label %115, label %114

106:                                              ; preds = %84
  %107 = lshr i64 %92, 32
  %108 = trunc i64 %107 to i32
  %109 = lshr i64 %101, 32
  %110 = trunc i64 %109 to i32
  %111 = icmp eq i32 %102, %93
  %112 = icmp ugt i32 %110, %108
  %113 = and i1 %111, %112
  br i1 %113, label %115, label %114

114:                                              ; preds = %76, %106, %104
  br label %115

115:                                              ; preds = %104, %106, %84, %77, %48, %74, %114
  %116 = phi i8 [ 1, %114 ], [ 1, %74 ], [ 1, %48 ], [ 0, %77 ], [ 0, %84 ], [ 0, %106 ], [ 0, %104 ]
  %117 = phi i8 [ 0, %114 ], [ 1, %74 ], [ 1, %48 ], [ 1, %77 ], [ 1, %84 ], [ 1, %106 ], [ 1, %104 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %17, i64 272, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 8 %4, i64 264, i1 false)
  store i8 %117, i8* %5, align 8
  store i8 %116, i8* %11, align 1
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iteratorppEv(%"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>, align 4
  %3 = alloca <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>, align 4
  %4 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %0, i64 0, i32 2
  %6 = getelementptr %"class.std::__1::__map_const_iterator", %"class.std::__1::__map_const_iterator"* %5, i64 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__map_const_iterator"* %5 to %"class.std::__1::__tree_node_base"**
  %8 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"** %9 to i64*
  %11 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %0, i64 0, i32 5
  %12 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %4, align 8
  br label %13

13:                                               ; preds = %133, %1
  %14 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %119, %133 ], [ %12, %1 ]
  %15 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %14, null
  br i1 %15, label %139, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %14, i64 0, i32 3
  %18 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %17, align 8
  %19 = icmp eq %"class.v8::internal::ZoneMap"* %18, null
  br i1 %19, label %53, label %20

20:                                               ; preds = %16
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %22 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %21, i64 0, i32 1
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %25, label %31

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %21, i64 0, i32 2
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %21
  br i1 %30, label %47, label %38

31:                                               ; preds = %20, %31
  %32 = phi %"class.std::__1::__tree_node_base"* [ %34, %31 ], [ %23, %20 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %31

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0
  br label %47

38:                                               ; preds = %25, %38
  %39 = phi %"class.std::__1::__tree_end_node"** [ %42, %38 ], [ %26, %25 ]
  %40 = bitcast %"class.std::__1::__tree_end_node"** %39 to %"class.std::__1::__tree_node_base"**
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 2
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %41
  br i1 %46, label %47, label %38

47:                                               ; preds = %38, %25, %36
  %48 = phi %"class.std::__1::__tree_end_node"* [ %37, %36 ], [ %27, %25 ], [ %43, %38 ]
  store %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"** %6, align 8
  %49 = bitcast %"class.v8::internal::ZoneMap"** %17 to %"class.std::__1::map"**
  %50 = load %"class.std::__1::map"*, %"class.std::__1::map"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %50, i64 0, i32 0, i32 1, i32 0, i32 0
  %52 = icmp eq %"class.std::__1::__tree_end_node"* %48, %51
  br i1 %52, label %53, label %139

53:                                               ; preds = %47, %16
  %54 = load i32, i32* %8, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %14, i64 0, i32 2, i32 0
  %58 = sext i32 %54 to i64
  br label %64

59:                                               ; preds = %53
  %60 = getelementptr inbounds <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>, <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %60)
  %61 = getelementptr inbounds <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>, <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>* %2, i64 0, i32 1
  %62 = bitcast %"class.std::__1::__map_const_iterator"* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 16, i1 false), !alias.scope !83
  store i32 0, i32* %8, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %0, i64 0, i32 1, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* nonnull align 4 %60, i64 20, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %60)
  br label %139

64:                                               ; preds = %56, %76
  %65 = phi i64 [ %58, %56 ], [ %66, %76 ]
  %66 = add nsw i64 %65, -1
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %8, align 8
  %68 = load i32, i32* %57, align 4
  %69 = lshr i32 -2147483648, %67
  %70 = and i32 %69, %68
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %0, i64 0, i32 4, i32 0, i64 %66
  %74 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %73, align 8
  %75 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %74, null
  br i1 %75, label %76, label %83

76:                                               ; preds = %64, %72
  %77 = icmp eq i32 %67, 0
  br i1 %77, label %78, label %64

78:                                               ; preds = %76
  %79 = getelementptr inbounds <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>, <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %79)
  %80 = getelementptr inbounds <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>, <{ [4 x i8], %"class.std::__1::__map_const_iterator", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* }>* %3, i64 0, i32 1
  %81 = bitcast %"class.std::__1::__map_const_iterator"* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %81, i8 0, i64 16, i1 false), !alias.scope !86
  store i32 0, i32* %8, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %0, i64 0, i32 1, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* nonnull align 4 %79, i64 20, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %79)
  br label %139

83:                                               ; preds = %72
  %84 = trunc i64 %65 to i32
  store i32 %84, i32* %8, align 8
  %85 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %74, i64 0, i32 1
  %86 = load i8, i8* %85, align 4
  %87 = sext i8 %86 to i32
  %88 = icmp slt i32 %84, %87
  br i1 %88, label %89, label %118

89:                                               ; preds = %83, %110
  %90 = phi i32 [ %113, %110 ], [ %84, %83 ]
  %91 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %111, %110 ], [ %74, %83 ]
  %92 = getelementptr %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %91, i64 0, i32 2, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = lshr i32 -2147483648, %90
  %95 = and i32 %93, %94
  %96 = icmp eq i32 %95, 0
  %97 = sext i32 %90 to i64
  %98 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %91, i64 0, i32 4, i64 %97
  %99 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %98, align 8
  %100 = ptrtoint %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %99 to i64
  br i1 %96, label %103, label %101

101:                                              ; preds = %89
  %102 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %99, null
  br i1 %102, label %107, label %103

103:                                              ; preds = %89, %101
  %104 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %91, %101 ], [ %99, %89 ]
  %105 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %99, %101 ], [ %91, %89 ]
  %106 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %0, i64 0, i32 4, i32 0, i64 %97
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %104, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %106, align 8
  br label %110

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator", %"class.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::iterator"* %0, i64 0, i32 4, i32 0, i64 %97
  %109 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %108 to i64*
  store i64 %100, i64* %109, align 8
  br label %110

110:                                              ; preds = %107, %103
  %111 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %91, %107 ], [ %105, %103 ]
  %112 = load i32, i32* %8, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %8, align 4
  %114 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %111, i64 0, i32 1
  %115 = load i8, i8* %114, align 4
  %116 = sext i8 %115 to i32
  %117 = icmp slt i32 %113, %116
  br i1 %117, label %89, label %118

118:                                              ; preds = %110, %83
  %119 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %74, %83 ], [ %111, %110 ]
  store %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %119, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %4, align 8
  %120 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %119, i64 0, i32 3
  %121 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %120, align 8
  %122 = icmp eq %"class.v8::internal::ZoneMap"* %121, null
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = bitcast %"class.v8::internal::ZoneMap"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %10, align 8
  %126 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %120, align 8
  %127 = icmp eq %"class.v8::internal::ZoneMap"* %126, null
  br i1 %127, label %131, label %128

128:                                              ; preds = %123
  %129 = inttoptr i64 %125 to %"class.std::__1::__tree_node"*
  %130 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %129, i64 0, i32 2, i32 0, i32 1
  br label %133

131:                                              ; preds = %118, %123
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %119, i64 0, i32 0, i32 0, i32 1
  br label %133

133:                                              ; preds = %128, %131
  %134 = phi i8* [ %132, %131 ], [ %130, %128 ]
  %135 = load i8, i8* %134, align 4
  %136 = and i8 %135, 1
  %137 = load i8, i8* %11, align 1, !range !3
  %138 = icmp eq i8 %136, %137
  br i1 %138, label %13, label %139

139:                                              ; preds = %47, %133, %13, %78, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(1) i8* @_ZNSt3__13mapIN2v88internal8compiler12_GLOBAL__N_117UnobservableStoreEbNS_4lessIS5_EENS2_13ZoneAllocatorINS_4pairIKS5_bEEEEEixERSA_(%"class.std::__1::map"*, %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %58, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore", %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore", %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"* %1 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = trunc i64 %14 to i32
  %16 = lshr i64 %14, 32
  %17 = trunc i64 %16 to i32
  br label %18

18:                                               ; preds = %54, %7
  %19 = phi %"class.std::__1::__tree_node"* [ %57, %54 ], [ %5, %7 ]
  %20 = phi %"class.std::__1::__tree_node_base"** [ %56, %54 ], [ %8, %7 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 2
  %22 = bitcast %"struct.std::__1::__value_type"* %21 to i64*
  %23 = load i64, i64* %22, align 4
  %24 = trunc i64 %23 to i32
  %25 = icmp ult i32 %10, %24
  br i1 %25, label %32, label %26

26:                                               ; preds = %18
  %27 = lshr i64 %23, 32
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %10, %24
  %30 = icmp ult i32 %12, %28
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %26, %18
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %54

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %60

38:                                               ; preds = %26
  %39 = icmp ult i32 %24, %15
  br i1 %39, label %46, label %40

40:                                               ; preds = %38
  %41 = getelementptr %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 2, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %24, %15
  %44 = icmp ult i32 %42, %17
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %52

46:                                               ; preds = %40, %38
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %60

52:                                               ; preds = %40
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %60

54:                                               ; preds = %46, %32
  %55 = phi %"class.std::__1::__tree_node_base"* [ %34, %32 ], [ %48, %46 ]
  %56 = phi %"class.std::__1::__tree_node_base"** [ %33, %32 ], [ %47, %46 ]
  %57 = bitcast %"class.std::__1::__tree_node_base"* %55 to %"class.std::__1::__tree_node"*
  br label %18

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3, i64 0, i32 0
  br label %60

60:                                               ; preds = %58, %52, %50, %36
  %61 = phi %"class.std::__1::__tree_end_node"* [ %3, %58 ], [ %37, %36 ], [ %51, %50 ], [ %53, %52 ]
  %62 = phi %"class.std::__1::__tree_node_base"** [ %59, %58 ], [ %33, %36 ], [ %47, %50 ], [ %20, %52 ]
  %63 = bitcast %"class.std::__1::__tree_node_base"** %62 to %"class.std::__1::__tree_node"**
  %64 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node"* %64, null
  br i1 %65, label %66, label %106

66:                                               ; preds = %60
  %67 = getelementptr %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %68 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %67, align 8, !noalias !89
  %69 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %68, i64 0, i32 2
  %70 = load i64, i64* %69, align 8, !noalias !89
  %71 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %68, i64 0, i32 3
  %72 = load i64, i64* %71, align 8, !noalias !89
  %73 = sub i64 %72, %70
  %74 = icmp ult i64 %73, 40
  br i1 %74, label %75, label %77, !prof !2

75:                                               ; preds = %66
  %76 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %68, i64 40) #5, !noalias !89
  br label %79

77:                                               ; preds = %66
  %78 = add i64 %70, 40
  store i64 %78, i64* %69, align 8, !noalias !89
  br label %79

79:                                               ; preds = %77, %75
  %80 = phi i64 [ %76, %75 ], [ %70, %77 ]
  %81 = inttoptr i64 %80 to %"class.std::__1::__tree_node"*
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 2, i32 0
  %83 = bitcast %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"* %1 to i64*
  %84 = bitcast %"struct.std::__1::pair.717"* %82 to i64*
  %85 = load i64, i64* %83, align 4, !noalias !89
  store i64 %85, i64* %84, align 4, !noalias !89
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 2, i32 0, i32 1
  store i8 0, i8* %86, align 4, !noalias !89
  %87 = inttoptr i64 %80 to %"class.std::__1::__tree_node_base"*
  %88 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %87, i64 0, i32 2
  %89 = inttoptr i64 %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %61, %"class.std::__1::__tree_end_node"** %88, align 8
  store %"class.std::__1::__tree_node_base"* %87, %"class.std::__1::__tree_node_base"** %62, align 8
  %90 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 0
  %91 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 0, i32 0
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_node_base"* %93, null
  br i1 %94, label %99, label %95

95:                                               ; preds = %79
  %96 = ptrtoint %"class.std::__1::__tree_node_base"* %93 to i64
  %97 = bitcast %"class.std::__1::map"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  br label %99

99:                                               ; preds = %95, %79
  %100 = phi %"class.std::__1::__tree_node_base"* [ %87, %79 ], [ %98, %95 ]
  %101 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %102, %"class.std::__1::__tree_node_base"* %100) #5
  %103 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 1
  store i64 %105, i64* %103, align 8
  br label %106

106:                                              ; preds = %60, %99
  %107 = phi %"class.std::__1::__tree_node"* [ %81, %99 ], [ %64, %60 ]
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %107, i64 0, i32 2, i32 0, i32 1
  ret i8* %108
}

declare i64 @_ZN2v84base12hash_combineEmm(i64, i64) local_unnamed_addr #2

declare i64 @_ZN2v84base10hash_valueEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare i8* @_ZN2v88internal19MachineReprToStringENS0_21MachineRepresentationE(i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(1) i8* @_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE3GetERKS4_(%"class.v8::internal::compiler::PersistentMap"* readonly, %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore", %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"* %1, i64 0, i32 0
  %4 = getelementptr %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore", %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %5) #5
  %7 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 0, i64 %6) #5
  %8 = load i32, i32* %3, align 4
  %9 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %8) #5
  %10 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %7, i64 %9) #5
  %11 = trunc i64 %10 to i32
  %12 = getelementptr %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 0
  %13 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %12, align 8
  %14 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %13, null
  br i1 %14, label %39, label %15

15:                                               ; preds = %2, %34
  %16 = phi %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* [ %37, %34 ], [ %13, %2 ]
  %17 = phi i32 [ %28, %34 ], [ 0, %2 ]
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %16, i64 0, i32 2, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, %11
  br i1 %20, label %41, label %21

21:                                               ; preds = %15
  %22 = xor i32 %19, %11
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i32 [ %28, %23 ], [ %17, %21 ]
  %25 = lshr i32 -2147483648, %24
  %26 = and i32 %25, %22
  %27 = icmp eq i32 %26, 0
  %28 = add nsw i32 %24, 1
  br i1 %27, label %23, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %16, i64 0, i32 1
  %31 = load i8, i8* %30, align 4
  %32 = sext i8 %31 to i32
  %33 = icmp slt i32 %24, %32
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = sext i32 %24 to i64
  %36 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %16, i64 0, i32 4, i64 %35
  %37 = load %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"*, %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"** %36, align 8
  %38 = icmp eq %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %37, null
  br i1 %38, label %39, label %15

39:                                               ; preds = %29, %34, %2
  %40 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 1
  br label %113

41:                                               ; preds = %15
  %42 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %16, i64 0, i32 3
  %43 = load %"class.v8::internal::ZoneMap"*, %"class.v8::internal::ZoneMap"** %42, align 8
  %44 = icmp eq %"class.v8::internal::ZoneMap"* %43, null
  br i1 %44, label %98, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %43, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_node"**
  %48 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node"* %48, null
  br i1 %49, label %94, label %50

50:                                               ; preds = %45
  %51 = bitcast %"struct.v8::internal::compiler::(anonymous namespace)::UnobservableStore"* %1 to i64*
  %52 = load i64, i64* %51, align 4
  %53 = trunc i64 %52 to i32
  %54 = lshr i64 %52, 32
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %73, %50
  %57 = phi %"class.std::__1::__tree_end_node"* [ %46, %50 ], [ %75, %73 ]
  %58 = phi %"class.std::__1::__tree_node"* [ %48, %50 ], [ %76, %73 ]
  %59 = getelementptr %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 2, i32 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp ult i32 %60, %53
  br i1 %61, label %70, label %62

62:                                               ; preds = %56
  %63 = getelementptr %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 2, i32 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %60, %53
  %66 = icmp ult i32 %64, %55
  %67 = and i1 %65, %66
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::__tree_node"* %58 to %"class.std::__1::__tree_node"**
  br i1 %67, label %70, label %73

70:                                               ; preds = %62, %56
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 1
  %72 = bitcast %"class.std::__1::__tree_node_base"** %71 to %"class.std::__1::__tree_node"**
  br label %73

73:                                               ; preds = %70, %62
  %74 = phi %"class.std::__1::__tree_node"** [ %72, %70 ], [ %69, %62 ]
  %75 = phi %"class.std::__1::__tree_end_node"* [ %57, %70 ], [ %68, %62 ]
  %76 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %74, align 8
  %77 = icmp eq %"class.std::__1::__tree_node"* %76, null
  br i1 %77, label %78, label %56

78:                                               ; preds = %73
  %79 = icmp eq %"class.std::__1::__tree_end_node"* %75, %46
  br i1 %79, label %94, label %80

80:                                               ; preds = %78
  %81 = bitcast %"class.std::__1::__tree_end_node"* %75 to %"class.std::__1::__tree_node"*
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 2
  %83 = bitcast %"struct.std::__1::__value_type"* %82 to i64*
  %84 = load i64, i64* %83, align 4
  %85 = trunc i64 %84 to i32
  %86 = icmp ult i32 %53, %85
  br i1 %86, label %94, label %87

87:                                               ; preds = %80
  %88 = load i32, i32* %4, align 4
  %89 = lshr i64 %84, 32
  %90 = trunc i64 %89 to i32
  %91 = icmp eq i32 %53, %85
  %92 = icmp ult i32 %88, %90
  %93 = and i1 %91, %92
  br i1 %93, label %94, label %96

94:                                               ; preds = %87, %80, %78, %45
  %95 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 1
  br label %113

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 2, i32 0, i32 1
  br label %113

98:                                               ; preds = %41
  %99 = bitcast %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %16 to i64*
  %100 = load i64, i64* %99, align 4
  %101 = load i32, i32* %3, align 4
  %102 = load i32, i32* %4, align 4
  %103 = trunc i64 %100 to i32
  %104 = icmp eq i32 %101, %103
  %105 = lshr i64 %100, 32
  %106 = trunc i64 %105 to i32
  %107 = icmp eq i32 %102, %106
  %108 = and i1 %104, %107
  br i1 %108, label %109, label %111

109:                                              ; preds = %98
  %110 = getelementptr inbounds %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree", %"struct.v8::internal::compiler::PersistentMap<v8::internal::compiler::(anonymous namespace)::UnobservableStore, bool, v8::base::hash<v8::internal::compiler::(anonymous namespace)::UnobservableStore> >::FocusedTree"* %16, i64 0, i32 0, i32 0, i32 1
  br label %113

111:                                              ; preds = %98
  %112 = getelementptr inbounds %"class.v8::internal::compiler::PersistentMap", %"class.v8::internal::compiler::PersistentMap"* %0, i64 0, i32 1
  br label %113

113:                                              ; preds = %39, %94, %96, %109, %111
  %114 = phi i8* [ %110, %109 ], [ %112, %111 ], [ %40, %39 ], [ %95, %94 ], [ %97, %96 ]
  ret i8* %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.697"*, %"class.std::__1::__tree_node.745"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.745"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node.745"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node.745"* %5 to %"class.std::__1::__tree_node.745"**
  %7 = load %"class.std::__1::__tree_node.745"*, %"class.std::__1::__tree_node.745"** %6, align 8
  tail call void @_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.697"* %0, %"class.std::__1::__tree_node.745"* %7) #5
  %8 = getelementptr inbounds %"class.std::__1::__tree_node.745", %"class.std::__1::__tree_node.745"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node.745"**
  %10 = load %"class.std::__1::__tree_node.745"*, %"class.std::__1::__tree_node.745"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node.745"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb: argument 0"}
!13 = distinct !{!13, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv: argument 0"}
!16 = distinct !{!16, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv"}
!17 = !{!18, !15}
!18 = distinct !{!18, !19, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb: argument 0"}
!19 = distinct !{!19, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv"}
!23 = !{!24, !21}
!24 = distinct !{!24, !25, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb: argument 0"}
!25 = distinct !{!25, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv"}
!32 = !{!33, !30}
!33 = distinct !{!33, !34, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb: argument 0"}
!34 = distinct !{!34, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv: argument 0"}
!37 = distinct !{!37, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv"}
!38 = !{!39, !36}
!39 = distinct !{!39, !40, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb: argument 0"}
!40 = distinct !{!40, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb"}
!41 = distinct !{!41, !42}
!42 = !{!"llvm.loop.unroll.disable"}
!43 = distinct !{!43, !42}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !42}
!46 = distinct !{!46, !42}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv: argument 0"}
!49 = distinct !{!49, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv"}
!50 = !{!51, !48}
!51 = distinct !{!51, !52, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb: argument 0"}
!52 = distinct !{!52, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv: argument 0"}
!55 = distinct !{!55, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE5beginEv"}
!56 = !{!57, !54}
!57 = distinct !{!57, !58, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb: argument 0"}
!58 = distinct !{!58, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator5beginEPKNS8_11FocusedTreeEb"}
!59 = !{!60, !62}
!60 = distinct !{!60, !61, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator3endEb: argument 0"}
!61 = distinct !{!61, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator3endEb"}
!62 = distinct !{!62, !63, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE3endEv: argument 0"}
!63 = distinct !{!63, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE3endEv"}
!64 = !{!65, !67}
!65 = distinct !{!65, !66, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator3endEb: argument 0"}
!66 = distinct !{!66, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator3endEb"}
!67 = distinct !{!67, !68, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE3endEv: argument 0"}
!68 = distinct !{!68, !"_ZNK2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE3endEv"}
!69 = distinct !{!69, !42}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler12_GLOBAL__N_117UnobservableStoreEbEENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS7_EEE16__construct_nodeIJRKNS_4pairIKS6_bEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISO_EEEEEEDpOT_: argument 0"}
!72 = distinct !{!72, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler12_GLOBAL__N_117UnobservableStoreEbEENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS7_EEE16__construct_nodeIJRKNS_4pairIKS6_bEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISO_EEEEEEDpOT_"}
!73 = distinct !{!73, !42}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !80}
!80 = !{!"llvm.loop.isvectorized", i32 1}
!81 = distinct !{!81, !42}
!82 = distinct !{!82, !80}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator3endEb: argument 0"}
!85 = distinct !{!85, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator3endEb"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator3endEb: argument 0"}
!88 = distinct !{!88, !"_ZN2v88internal8compiler13PersistentMapINS1_12_GLOBAL__N_117UnobservableStoreEbNS_4base4hashIS4_EEE8iterator3endEb"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler12_GLOBAL__N_117UnobservableStoreEbEENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_: argument 0"}
!91 = distinct !{!91, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal8compiler12_GLOBAL__N_117UnobservableStoreEbEENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_"}
