; ModuleID = '../../third_party/blink/renderer/modules/indexeddb/idb_key.cc'
source_filename = "../../third_party/blink/renderer/modules/indexeddb/idb_key.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::IDBKey" = type { i32, %"class.WTF::Vector", %class.scoped_refptr, %"class.WTF::String", double, i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::IDBKey"* }
%class.scoped_refptr = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector.0", %"class.WTF::Vector.5" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.0" = type { %"class.WTF::VectorBuffer.1" }
%"class.WTF::VectorBuffer.1" = type { %"class.WTF::VectorBufferBase.2" }
%"class.WTF::VectorBufferBase.2" = type { i8*, i32, i32 }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { %"class.std::__1::unique_ptr.8"*, i32, i32 }
%"class.std::__1::unique_ptr.8" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE6resizeEj = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink6IDBKeyENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [125 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::IDBKey, std::__1::default_delete<blink::IDBKey> >]\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink6IDBKeyC1Ev = hidden unnamed_addr alias void (%"class.blink::IDBKey"*), void (%"class.blink::IDBKey"*)* @_ZN5blink6IDBKeyC2Ev
@_ZN5blink6IDBKeyC1ENS_5mojom10IDBKeyTypeE = hidden unnamed_addr alias void (%"class.blink::IDBKey"*, i32), void (%"class.blink::IDBKey"*, i32)* @_ZN5blink6IDBKeyC2ENS_5mojom10IDBKeyTypeE
@_ZN5blink6IDBKeyC1ENS_5mojom10IDBKeyTypeEd = hidden unnamed_addr alias void (%"class.blink::IDBKey"*, i32, double), void (%"class.blink::IDBKey"*, i32, double)* @_ZN5blink6IDBKeyC2ENS_5mojom10IDBKeyTypeEd
@_ZN5blink6IDBKeyC1ERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::IDBKey"*, %"class.WTF::String"*), void (%"class.blink::IDBKey"*, %"class.WTF::String"*)* @_ZN5blink6IDBKeyC2ERKN3WTF6StringE
@_ZN5blink6IDBKeyC1E13scoped_refptrIN3WTF12SharedBufferEE = hidden unnamed_addr alias void (%"class.blink::IDBKey"*, %"class.WTF::SharedBuffer"*), void (%"class.blink::IDBKey"*, %"class.WTF::SharedBuffer"*)* @_ZN5blink6IDBKeyC2E13scoped_refptrIN3WTF12SharedBufferEE
@_ZN5blink6IDBKeyC1EN3WTF6VectorINSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEELj0ENS1_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::IDBKey"*, %"class.WTF::Vector"*), void (%"class.blink::IDBKey"*, %"class.WTF::Vector"*)* @_ZN5blink6IDBKeyC2EN3WTF6VectorINSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEELj0ENS1_18PartitionAllocatorEEE
@_ZN5blink6IDBKeyD1Ev = hidden unnamed_addr alias void (%"class.blink::IDBKey"*), void (%"class.blink::IDBKey"*)* @_ZN5blink6IDBKeyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBKey"* @_ZN5blink6IDBKey5CloneEPKS0_(%"class.blink::IDBKey"* readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector", align 8
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = icmp eq %"class.blink::IDBKey"* %0, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call noalias i8* @malloc(i64 56) #11
  %7 = bitcast i8* %6 to i32*
  store i32 6, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = getelementptr inbounds i8, i8* %6, i64 48
  %10 = bitcast i8* %9 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 40, i1 false) #11
  store i64 16, i64* %10, align 8
  %11 = ptrtoint i8* %6 to i64
  br label %260

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %260 [
    i32 0, label %15
    i32 6, label %22
    i32 1, label %29
    i32 2, label %174
    i32 3, label %194
    i32 4, label %236
    i32 5, label %248
  ]

15:                                               ; preds = %12
  %16 = tail call noalias i8* @malloc(i64 56) #11
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = getelementptr inbounds i8, i8* %16, i64 48
  %20 = bitcast i8* %19 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 40, i1 false) #11
  store i64 16, i64* %20, align 8
  %21 = ptrtoint i8* %16 to i64
  br label %260

22:                                               ; preds = %12
  %23 = tail call noalias i8* @malloc(i64 56) #11
  %24 = bitcast i8* %23 to i32*
  store i32 6, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = getelementptr inbounds i8, i8* %23, i64 48
  %27 = bitcast i8* %26 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 40, i1 false) #11
  store i64 16, i64* %27, align 8
  %28 = ptrtoint i8* %23 to i64
  br label %260

29:                                               ; preds = %12
  %30 = bitcast %"class.WTF::Vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 16, i1 false) #11
  %34 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %29
  %42 = bitcast %"class.WTF::Vector"* %2 to i64*
  br label %51

43:                                               ; preds = %29
  %44 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  br label %149

46:                                               ; preds = %171
  %47 = bitcast %"class.WTF::Vector"* %2 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = load i32, i32* %32, align 8
  %50 = load i32, i32* %33, align 4
  br label %51

51:                                               ; preds = %41, %46
  %52 = phi i64* [ %42, %41 ], [ %47, %46 ]
  %53 = phi i32 [ 0, %41 ], [ %50, %46 ]
  %54 = phi i32 [ 0, %41 ], [ %49, %46 ]
  %55 = phi i64 [ 0, %41 ], [ %48, %46 ]
  store atomic i64 0, i64* %52 monotonic, align 8
  store i32 0, i32* %32, align 8
  store i32 0, i32* %33, align 4
  %56 = call noalias i8* @malloc(i64 56) #11
  %57 = bitcast i8* %56 to i32*
  store i32 1, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 8
  %59 = getelementptr inbounds i8, i8* %56, i64 16
  %60 = bitcast i8* %59 to i32*
  %61 = getelementptr inbounds i8, i8* %56, i64 20
  %62 = bitcast i8* %61 to i32*
  %63 = bitcast i8* %58 to i64*
  store atomic i64 %55, i64* %63 monotonic, align 8
  store i32 %54, i32* %60, align 4
  store i32 %53, i32* %62, align 4
  %64 = getelementptr inbounds i8, i8* %56, i64 24
  %65 = getelementptr inbounds i8, i8* %56, i64 48
  %66 = bitcast i8* %65 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #11
  %67 = inttoptr i64 %55 to %"class.std::__1::unique_ptr"*
  %68 = icmp eq i32 %53, 0
  br i1 %68, label %146, label %69

69:                                               ; preds = %51
  %70 = zext i32 %53 to i64
  %71 = shl nuw nsw i64 %70, 3
  %72 = add nsw i64 %71, -8
  %73 = lshr exact i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp ult i64 %72, 56
  br i1 %76, label %126, label %77

77:                                               ; preds = %69
  %78 = sub nsw i64 %74, %75
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %122, %79 ]
  %81 = phi %"class.std::__1::unique_ptr"* [ %67, %77 ], [ %123, %79 ]
  %82 = phi i64 [ %78, %77 ], [ %124, %79 ]
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %84, i64 0, i32 5
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, %80
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 1, i32 0, i32 0, i32 0
  %89 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %89, i64 0, i32 5
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, %87
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 2, i32 0, i32 0, i32 0
  %94 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %94, i64 0, i32 5
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, %92
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 3, i32 0, i32 0, i32 0
  %99 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %99, i64 0, i32 5
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, %97
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 4, i32 0, i32 0, i32 0
  %104 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %104, i64 0, i32 5
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, %102
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 5, i32 0, i32 0, i32 0
  %109 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %109, i64 0, i32 5
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, %107
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 6, i32 0, i32 0, i32 0
  %114 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %114, i64 0, i32 5
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, %112
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 7, i32 0, i32 0, i32 0
  %119 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %119, i64 0, i32 5
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, %117
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 8
  %124 = add i64 %82, -8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %79

126:                                              ; preds = %79, %69
  %127 = phi i64 [ undef, %69 ], [ %122, %79 ]
  %128 = phi i64 [ 0, %69 ], [ %122, %79 ]
  %129 = phi %"class.std::__1::unique_ptr"* [ %67, %69 ], [ %123, %79 ]
  %130 = icmp eq i64 %75, 0
  br i1 %130, label %143, label %131

131:                                              ; preds = %126, %131
  %132 = phi i64 [ %139, %131 ], [ %128, %126 ]
  %133 = phi %"class.std::__1::unique_ptr"* [ %140, %131 ], [ %129, %126 ]
  %134 = phi i64 [ %141, %131 ], [ %75, %126 ]
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %133, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %136, i64 0, i32 5
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, %132
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %133, i64 1
  %141 = add i64 %134, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %131, !llvm.loop !2

143:                                              ; preds = %131, %126
  %144 = phi i64 [ %127, %126 ], [ %139, %131 ]
  %145 = add i64 %144, 16
  br label %146

146:                                              ; preds = %143, %51
  %147 = phi i64 [ 16, %51 ], [ %145, %143 ]
  store i64 %147, i64* %66, align 8
  %148 = ptrtoint i8* %56 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11
  br label %260

149:                                              ; preds = %43, %171
  %150 = phi %"class.std::__1::unique_ptr"* [ %35, %43 ], [ %172, %171 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %151, align 8
  %153 = call %"class.blink::IDBKey"* @_ZN5blink6IDBKey5CloneEPKS0_(%"class.blink::IDBKey"* %152) #11
  store %"class.blink::IDBKey"* %153, %"class.blink::IDBKey"** %45, align 8
  %154 = load i32, i32* %33, align 4
  %155 = load i32, i32* %32, align 8
  %156 = icmp eq i32 %154, %155
  br i1 %156, label %165, label %157, !prof !4

157:                                              ; preds = %149
  %158 = ptrtoint %"class.blink::IDBKey"* %153 to i64
  %159 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %31, align 8
  %160 = zext i32 %154 to i64
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 %160
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %45, align 8
  %162 = bitcast %"class.std::__1::unique_ptr"* %161 to i64*
  store i64 %158, i64* %162, align 8
  %163 = load i32, i32* %33, align 4
  %164 = add i32 %163, 1
  store i32 %164, i32* %33, align 4
  br label %166

165:                                              ; preds = %149
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"* nonnull %2, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #11
  br label %166

166:                                              ; preds = %157, %165
  %167 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %45, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %45, align 8
  %168 = icmp eq %"class.blink::IDBKey"* %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %166
  call void @_ZN5blink6IDBKeyD2Ev(%"class.blink::IDBKey"* nonnull %167) #11
  %170 = bitcast %"class.blink::IDBKey"* %167 to i8*
  call void @free(i8* %170) #11
  br label %171

171:                                              ; preds = %166, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %150, i64 1
  %173 = icmp eq %"class.std::__1::unique_ptr"* %172, %39
  br i1 %173, label %46, label %149

174:                                              ; preds = %12
  %175 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 2, i32 0
  %176 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %175, align 8
  %177 = icmp eq %"class.WTF::SharedBuffer"* %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %176, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %179) #11
  br label %180

180:                                              ; preds = %174, %178
  %181 = ptrtoint %"class.WTF::SharedBuffer"* %176 to i64
  %182 = tail call noalias i8* @malloc(i64 56) #11
  %183 = bitcast i8* %182 to i32*
  store i32 2, i32* %183, align 8
  %184 = getelementptr inbounds i8, i8* %182, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 16, i1 false) #11
  %185 = getelementptr inbounds i8, i8* %182, i64 24
  %186 = bitcast i8* %185 to i64*
  store i64 %181, i64* %186, align 8
  %187 = getelementptr inbounds i8, i8* %182, i64 32
  %188 = getelementptr inbounds i8, i8* %182, i64 48
  %189 = bitcast i8* %188 to i64*
  %190 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %176, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 16, i1 false) #11
  %191 = load i64, i64* %190, align 8
  %192 = add i64 %191, 16
  store i64 %192, i64* %189, align 8
  %193 = ptrtoint i8* %182 to i64
  br label %260

194:                                              ; preds = %12
  %195 = tail call noalias i8* @malloc(i64 56) #11
  %196 = bitcast i8* %195 to i32*
  store i32 3, i32* %196, align 8
  %197 = getelementptr inbounds i8, i8* %195, i64 8
  %198 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %197, i8 0, i64 24, i1 false) #11
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = getelementptr inbounds i8, i8* %195, i64 32
  %201 = bitcast i8* %200 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %199, %"class.WTF::StringImpl"** %201, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %202, label %203, label %206

203:                                              ; preds = %194
  %204 = getelementptr inbounds i8, i8* %195, i64 40
  %205 = bitcast i8* %204 to double*
  store double 0.000000e+00, double* %205, align 8
  br label %231

206:                                              ; preds = %194
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %223

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = zext i32 %213 to i33
  %215 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %214, i33 1) #11
  %216 = extractvalue { i33, i1 } %215, 1
  %217 = extractvalue { i33, i1 } %215, 0
  %218 = icmp slt i33 %217, 0
  %219 = or i1 %216, %218
  br i1 %219, label %220, label %221, !prof !4

220:                                              ; preds = %211
  tail call void @llvm.trap() #11
  unreachable

221:                                              ; preds = %211
  %222 = trunc i33 %217 to i32
  store i32 %222, i32* %212, align 4
  br label %223

223:                                              ; preds = %206, %221
  %224 = getelementptr inbounds i8, i8* %195, i64 40
  %225 = bitcast i8* %224 to double*
  store double 0.000000e+00, double* %225, align 8
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = zext i32 %227 to i64
  %229 = shl nuw nsw i64 %228, 1
  %230 = add nuw nsw i64 %229, 16
  br label %231

231:                                              ; preds = %203, %223
  %232 = phi i64 [ %230, %223 ], [ 16, %203 ]
  %233 = getelementptr inbounds i8, i8* %195, i64 48
  %234 = bitcast i8* %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = ptrtoint i8* %195 to i64
  br label %260

236:                                              ; preds = %12
  %237 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 4
  %238 = bitcast double* %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = tail call noalias i8* @malloc(i64 56) #11
  %241 = bitcast i8* %240 to i32*
  store i32 4, i32* %241, align 8
  %242 = getelementptr inbounds i8, i8* %240, i64 8
  %243 = getelementptr inbounds i8, i8* %240, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 32, i1 false) #11
  %244 = bitcast i8* %243 to i64*
  store i64 %239, i64* %244, align 8
  %245 = getelementptr inbounds i8, i8* %240, i64 48
  %246 = bitcast i8* %245 to i64*
  store i64 24, i64* %246, align 8
  %247 = ptrtoint i8* %240 to i64
  br label %260

248:                                              ; preds = %12
  %249 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 4
  %250 = bitcast double* %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = tail call noalias i8* @malloc(i64 56) #11
  %253 = bitcast i8* %252 to i32*
  store i32 5, i32* %253, align 8
  %254 = getelementptr inbounds i8, i8* %252, i64 8
  %255 = getelementptr inbounds i8, i8* %252, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %254, i8 0, i64 32, i1 false) #11
  %256 = bitcast i8* %255 to i64*
  store i64 %251, i64* %256, align 8
  %257 = getelementptr inbounds i8, i8* %252, i64 48
  %258 = bitcast i8* %257 to i64*
  store i64 24, i64* %258, align 8
  %259 = ptrtoint i8* %252 to i64
  br label %260

260:                                              ; preds = %12, %248, %236, %231, %180, %146, %22, %15, %5
  %261 = phi i64 [ %11, %5 ], [ %259, %248 ], [ %247, %236 ], [ %235, %231 ], [ %193, %180 ], [ %148, %146 ], [ %28, %22 ], [ %21, %15 ], [ 0, %12 ]
  %262 = inttoptr i64 %261 to %"class.blink::IDBKey"*
  ret %"class.blink::IDBKey"* %262
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBKeyC2Ev(%"class.blink::IDBKey"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 5
  %5 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 40, i1 false)
  store i64 16, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBKeyC2ENS_5mojom10IDBKeyTypeE(%"class.blink::IDBKey"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 5
  %6 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 40, i1 false)
  store i64 16, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBKeyC2ENS_5mojom10IDBKeyTypeEd(%"class.blink::IDBKey"* nocapture, i32, double) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 4
  %7 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false)
  store double %2, double* %6, align 8
  %8 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 5
  store i64 24, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBKeyC2ERKN3WTF6StringE(%"class.blink::IDBKey"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 0
  store i32 3, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false)
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %8 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 4
  store double 0.000000e+00, double* %11, align 8
  %12 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 5
  br label %45

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 4
  store double 0.000000e+00, double* %19, align 8
  %20 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 5
  br label %37

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #11
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !4

30:                                               ; preds = %21
  tail call void @llvm.trap() #11
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %34 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 4
  store double 0.000000e+00, double* %34, align 8
  %35 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 5
  %36 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %36, label %45, label %37

37:                                               ; preds = %18, %31
  %38 = phi i64* [ %20, %18 ], [ %35, %31 ]
  %39 = phi %"class.WTF::StringImpl"* [ %7, %18 ], [ %33, %31 ]
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = shl nuw nsw i64 %42, 1
  %44 = add nuw nsw i64 %43, 16
  br label %45

45:                                               ; preds = %10, %31, %37
  %46 = phi i64* [ %38, %37 ], [ %35, %31 ], [ %12, %10 ]
  %47 = phi i64 [ %44, %37 ], [ 16, %31 ], [ 16, %10 ]
  store i64 %47, i64* %46, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBKeyC2E13scoped_refptrIN3WTF12SharedBufferEE(%"class.blink::IDBKey"* nocapture, %"class.WTF::SharedBuffer"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.WTF::SharedBuffer"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 0
  store i32 2, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1
  %6 = bitcast %"class.WTF::Vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #11
  %7 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 2
  %8 = bitcast %class.scoped_refptr* %7 to i64*
  store i64 %3, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 5
  %11 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %1, i64 0, i32 1
  %12 = bitcast %"class.WTF::StringImpl"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  %13 = load i64, i64* %11, align 8
  %14 = add i64 %13, 16
  store i64 %14, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBKeyC2EN3WTF6VectorINSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::IDBKey"* nocapture, %"class.WTF::Vector"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 0
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector"* %1 to i64*
  %8 = bitcast %"class.WTF::Vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #11
  %9 = load i64, i64* %7, align 8
  %10 = bitcast %"class.WTF::Vector"* %4 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %5, align 4
  %13 = load i32, i32* %11, align 4
  store i32 %13, i32* %5, align 4
  store i32 %12, i32* %11, align 4
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %6, align 4
  %16 = load i32, i32* %14, align 4
  store i32 %16, i32* %6, align 4
  store i32 %15, i32* %14, align 4
  %17 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 2, i32 0
  %18 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.WTF::SharedBuffer"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false)
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %19, align 8
  %22 = load i32, i32* %6, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %101, label %24

24:                                               ; preds = %2
  %25 = zext i32 %22 to i64
  %26 = shl nuw nsw i64 %25, 3
  %27 = add nsw i64 %26, -8
  %28 = lshr exact i64 %27, 3
  %29 = add nuw nsw i64 %28, 1
  %30 = and i64 %29, 7
  %31 = icmp ult i64 %27, 56
  br i1 %31, label %81, label %32

32:                                               ; preds = %24
  %33 = sub nsw i64 %29, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %77, %34 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %21, %32 ], [ %78, %34 ]
  %37 = phi i64 [ %33, %32 ], [ %79, %34 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %39, i64 0, i32 5
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, %35
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 1, i32 0, i32 0, i32 0
  %44 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %44, i64 0, i32 5
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %42
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 2, i32 0, i32 0, i32 0
  %49 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %49, i64 0, i32 5
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, %47
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 3, i32 0, i32 0, i32 0
  %54 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %54, i64 0, i32 5
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, %52
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 4, i32 0, i32 0, i32 0
  %59 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %59, i64 0, i32 5
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, %57
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 5, i32 0, i32 0, i32 0
  %64 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %64, i64 0, i32 5
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, %62
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 6, i32 0, i32 0, i32 0
  %69 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %69, i64 0, i32 5
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, %67
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 7, i32 0, i32 0, i32 0
  %74 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %74, i64 0, i32 5
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, %72
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 8
  %79 = add i64 %37, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %34

81:                                               ; preds = %34, %24
  %82 = phi i64 [ undef, %24 ], [ %77, %34 ]
  %83 = phi i64 [ 0, %24 ], [ %77, %34 ]
  %84 = phi %"class.std::__1::unique_ptr"* [ %21, %24 ], [ %78, %34 ]
  %85 = icmp eq i64 %30, 0
  br i1 %85, label %98, label %86

86:                                               ; preds = %81, %86
  %87 = phi i64 [ %94, %86 ], [ %83, %81 ]
  %88 = phi %"class.std::__1::unique_ptr"* [ %95, %86 ], [ %84, %81 ]
  %89 = phi i64 [ %96, %86 ], [ %30, %81 ]
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %91, i64 0, i32 5
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, %87
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 1
  %96 = add i64 %89, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %86, !llvm.loop !5

98:                                               ; preds = %86, %81
  %99 = phi i64 [ %82, %81 ], [ %94, %86 ]
  %100 = add i64 %99, 16
  br label %101

101:                                              ; preds = %98, %2
  %102 = phi i64 [ 16, %2 ], [ %100, %98 ]
  store i64 %102, i64* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBKeyD2Ev(%"class.blink::IDBKey"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #11
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 2, i32 0
  %20 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %19, align 8
  %21 = icmp eq %"class.WTF::SharedBuffer"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #11
  %24 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %20) #11
  %28 = bitcast %"class.WTF::SharedBuffer"* %20 to i8*
  tail call void @free(i8* %28) #11
  br label %29

29:                                               ; preds = %18, %22, %27
  %30 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %31, align 8
  %33 = icmp eq %"class.std::__1::unique_ptr"* %32, null
  br i1 %33, label %57, label %34, !prof !6

34:                                               ; preds = %29
  %35 = bitcast %"class.std::__1::unique_ptr"* %32 to i8*
  %36 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %55, label %39, !prof !4

39:                                               ; preds = %34
  %40 = zext i32 %37 to i64
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 %40
  br label %42

42:                                               ; preds = %39, %49
  %43 = phi %"class.std::__1::unique_ptr"* [ %50, %49 ], [ %32, %39 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %44, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %44, align 8
  %46 = icmp eq %"class.blink::IDBKey"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  tail call void @_ZN5blink6IDBKeyD2Ev(%"class.blink::IDBKey"* nonnull %45) #11
  %48 = bitcast %"class.blink::IDBKey"* %45 to i8*
  tail call void @free(i8* %48) #11
  br label %49

49:                                               ; preds = %42, %47
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %43, i64 1
  %51 = icmp eq %"class.std::__1::unique_ptr"* %50, %41
  br i1 %51, label %52, label %42

52:                                               ; preds = %49
  %53 = bitcast %"class.WTF::Vector"* %30 to i8**
  %54 = load i8*, i8** %53, align 8
  store i32 0, i32* %36, align 4
  br label %55

55:                                               ; preds = %34, %52
  %56 = phi i8* [ %54, %52 ], [ %35, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #11
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %31, align 8
  br label %57

57:                                               ; preds = %29, %55
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %20 [
    i32 0, label %21
    i32 1, label %4
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %20, label %14

12:                                               ; preds = %14
  %13 = icmp eq %"class.std::__1::unique_ptr"* %19, %10
  br i1 %13, label %20, label %14

14:                                               ; preds = %4, %12
  %15 = phi %"class.std::__1::unique_ptr"* [ %19, %12 ], [ %6, %4 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %16, align 8
  %18 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* %17)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  br i1 %18, label %12, label %21

20:                                               ; preds = %12, %4, %1
  br label %21

21:                                               ; preds = %14, %1, %20
  %22 = phi i1 [ true, %20 ], [ false, %1 ], [ false, %14 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"*, %"class.blink::IDBKey"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %6
  %10 = select i1 %9, i32 -1, i32 1
  br label %83

11:                                               ; preds = %2
  switch i32 %4, label %83 [
    i32 1, label %12
    i32 2, label %47
    i32 3, label %70
    i32 4, label %74
    i32 5, label %74
  ]

12:                                               ; preds = %11
  %13 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %1, i64 0, i32 1
  %20 = load i32, i32* %18, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %28

22:                                               ; preds = %28
  %23 = load i32, i32* %14, align 4
  %24 = icmp ult i32 %38, %23
  br i1 %24, label %25, label %39

25:                                               ; preds = %22
  %26 = load i32, i32* %18, align 4
  %27 = icmp ult i32 %38, %26
  br i1 %27, label %28, label %39

28:                                               ; preds = %17, %25
  %29 = phi i32 [ %38, %25 ], [ 0, %17 ]
  %30 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %29) #11
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %31, align 8
  %33 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %19, i32 %29) #11
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %34, align 8
  %36 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %32, %"class.blink::IDBKey"* %35)
  %37 = icmp eq i32 %36, 0
  %38 = add nuw i32 %29, 1
  br i1 %37, label %22, label %83

39:                                               ; preds = %22, %25, %17, %12
  %40 = phi i32 [ 0, %12 ], [ %15, %17 ], [ %23, %25 ], [ %23, %22 ]
  %41 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp ult i32 %40, %42
  %44 = icmp ult i32 %42, %40
  %45 = zext i1 %44 to i32
  %46 = select i1 %43, i32 -1, i32 %45
  br label %83

47:                                               ; preds = %11
  %48 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 2, i32 0
  %49 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %48, align 8
  %50 = tail call i8* @_ZN3WTF12SharedBuffer4DataEv(%"class.WTF::SharedBuffer"* %49) #11
  %51 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %1, i64 0, i32 2, i32 0
  %52 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %51, align 8
  %53 = tail call i8* @_ZN3WTF12SharedBuffer4DataEv(%"class.WTF::SharedBuffer"* %52) #11
  %54 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %48, align 8
  %55 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %54, i64 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %51, align 8
  %58 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %57, i64 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %59, %56
  %61 = select i1 %60, i64 %59, i64 %56
  %62 = tail call i32 @memcmp(i8* %50, i8* %53, i64 %61) #12
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %62, 0
  %65 = select i1 %64, i32 -1, i32 1
  br i1 %63, label %66, label %83

66:                                               ; preds = %47
  %67 = icmp ult i64 %56, %59
  %68 = zext i1 %60 to i32
  %69 = select i1 %67, i32 -1, i32 %68
  br label %83

70:                                               ; preds = %11
  %71 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 3
  %72 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %1, i64 0, i32 3
  %73 = tail call i32 @_ZN3WTF15CodeUnitCompareERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %71, %"class.WTF::String"* dereferenceable(8) %72) #11
  br label %83

74:                                               ; preds = %11, %11
  %75 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %0, i64 0, i32 4
  %76 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %1, i64 0, i32 4
  %77 = load double, double* %75, align 8
  %78 = load double, double* %76, align 8
  %79 = fcmp olt double %77, %78
  %80 = fcmp olt double %78, %77
  %81 = zext i1 %80 to i32
  %82 = select i1 %79, i32 -1, i32 %81
  br label %83

83:                                               ; preds = %28, %11, %47, %74, %70, %66, %39, %8
  %84 = phi i32 [ %10, %8 ], [ %82, %74 ], [ %73, %70 ], [ %69, %66 ], [ %65, %47 ], [ %46, %39 ], [ 0, %11 ], [ %36, %28 ]
  ret i32 %84
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

declare i8* @_ZN3WTF12SharedBuffer4DataEv(%"class.WTF::SharedBuffer"*) local_unnamed_addr #4

declare i32 @_ZN3WTF15CodeUnitCompareERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink6IDBKey10IsLessThanEPKS0_(%"class.blink::IDBKey"*, %"class.blink::IDBKey"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %0, %"class.blink::IDBKey"* %1)
  %4 = icmp eq i32 %3, -1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink6IDBKey7IsEqualEPKS0_(%"class.blink::IDBKey"*, %"class.blink::IDBKey"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::IDBKey"* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %0, %"class.blink::IDBKey"* nonnull %1)
  %6 = icmp eq i32 %5, 0
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i1 [ %6, %4 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6IDBKey17ToMultiEntryArrayENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.WTF::Vector"* noalias sret, %"class.blink::IDBKey"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #11
  %7 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %31, label %10

10:                                               ; preds = %2
  %11 = zext i32 %8 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink6IDBKeyENS2_14default_deleteIS5_EEEEEEmm(i64 %11) #11
  %13 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %12, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = lshr i64 %12, 3
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %4, align 8
  %18 = load i32, i32* %7, align 4
  %19 = bitcast i8* %13 to %"class.std::__1::unique_ptr"*
  %20 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %22 = zext i32 %18 to i64
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 %22
  %24 = icmp eq i32 %18, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %10
  %26 = bitcast %"class.WTF::Vector"* %0 to i8**
  %27 = bitcast %"class.WTF::Vector"* %0 to i64*
  br label %94

28:                                               ; preds = %148
  %29 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %30 = ptrtoint %"class.std::__1::unique_ptr"* %29 to i64
  br label %31

31:                                               ; preds = %2, %28, %10
  %32 = phi i64 [ %30, %28 ], [ %14, %10 ], [ 0, %2 ]
  %33 = phi %"class.std::__1::unique_ptr"* [ %29, %28 ], [ %19, %10 ], [ null, %2 ]
  %34 = load i32, i32* %5, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 %35
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEvT0_SA_T_"(%"class.std::__1::unique_ptr"* %33, %"class.std::__1::unique_ptr"* %36) #11
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 %35
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %31, %43
  %40 = phi %"class.std::__1::unique_ptr"* [ %41, %43 ], [ %33, %31 ]
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 1
  %42 = icmp eq %"class.std::__1::unique_ptr"* %41, %37
  br i1 %42, label %83, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %46, align 8
  %48 = icmp eq %"class.blink::IDBKey"* %45, %47
  br i1 %48, label %49, label %39

49:                                               ; preds = %43, %31
  %50 = phi %"class.std::__1::unique_ptr"* [ %33, %31 ], [ %40, %43 ]
  %51 = icmp eq %"class.std::__1::unique_ptr"* %50, %37
  br i1 %51, label %83, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 2
  %54 = icmp eq %"class.std::__1::unique_ptr"* %53, %37
  br i1 %54, label %79, label %55

55:                                               ; preds = %52, %72
  %56 = phi %"class.std::__1::unique_ptr"* [ %74, %72 ], [ %53, %52 ]
  %57 = phi %"class.std::__1::unique_ptr"* [ %73, %72 ], [ %50, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %56, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %60, align 8
  %62 = icmp eq %"class.blink::IDBKey"* %59, %61
  br i1 %62, label %72, label %63

63:                                               ; preds = %55
  %64 = ptrtoint %"class.blink::IDBKey"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 1
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %60, align 8
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %66, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %65 to i64*
  store i64 %64, i64* %68, align 8
  %69 = icmp eq %"class.blink::IDBKey"* %67, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %63
  tail call void @_ZN5blink6IDBKeyD2Ev(%"class.blink::IDBKey"* nonnull %67) #11
  %71 = bitcast %"class.blink::IDBKey"* %67 to i8*
  tail call void @free(i8* %71) #11
  br label %72

72:                                               ; preds = %70, %63, %55
  %73 = phi %"class.std::__1::unique_ptr"* [ %57, %55 ], [ %65, %63 ], [ %65, %70 ]
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %56, i64 1
  %75 = icmp eq %"class.std::__1::unique_ptr"* %74, %37
  br i1 %75, label %76, label %55

76:                                               ; preds = %72
  %77 = bitcast %"class.WTF::Vector"* %0 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %52, %76
  %80 = phi i64 [ %78, %76 ], [ %32, %52 ]
  %81 = phi %"class.std::__1::unique_ptr"* [ %73, %76 ], [ %50, %52 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 1
  br label %83

83:                                               ; preds = %39, %49, %79
  %84 = phi i64 [ %80, %79 ], [ %32, %49 ], [ %32, %39 ]
  %85 = phi %"class.std::__1::unique_ptr"* [ %82, %79 ], [ %37, %49 ], [ %37, %39 ]
  %86 = ptrtoint %"class.std::__1::unique_ptr"* %85 to i64
  %87 = sub i64 %86, %84
  %88 = lshr exact i64 %87, 3
  %89 = trunc i64 %88 to i32
  tail call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"* %0, i32 %89)
  %90 = icmp eq %"class.blink::IDBKey"* %1, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %83
  tail call void @_ZN5blink6IDBKeyD2Ev(%"class.blink::IDBKey"* nonnull %1) #11
  %92 = bitcast %"class.blink::IDBKey"* %1 to i8*
  tail call void @free(i8* %92) #11
  br label %93

93:                                               ; preds = %83, %91
  ret void

94:                                               ; preds = %25, %148
  %95 = phi %"class.std::__1::unique_ptr"* [ %21, %25 ], [ %149, %148 ]
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %96, align 8
  %98 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* %97)
  br i1 %98, label %99, label %148

99:                                               ; preds = %94
  %100 = load i32, i32* %5, align 4
  %101 = load i32, i32* %4, align 8
  %102 = icmp eq i32 %100, %101
  br i1 %102, label %103, label %138, !prof !4

103:                                              ; preds = %99
  %104 = add i32 %100, 1
  %105 = lshr i32 %100, 2
  %106 = add i32 %104, %105
  %107 = icmp ugt i32 %106, 4
  %108 = select i1 %107, i32 %106, i32 4
  %109 = icmp ugt i32 %108, %104
  %110 = select i1 %109, i32 %108, i32 %104
  %111 = icmp ult i32 %100, %110
  br i1 %111, label %112, label %138, !prof !6

112:                                              ; preds = %103
  %113 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %114 = icmp eq %"class.std::__1::unique_ptr"* %113, null
  %115 = zext i32 %110 to i64
  %116 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink6IDBKeyENS2_14default_deleteIS5_EEEEEEmm(i64 %115) #11
  %117 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %116, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  br i1 %114, label %118, label %122

118:                                              ; preds = %112
  %119 = ptrtoint i8* %117 to i64
  store atomic i64 %119, i64* %27 monotonic, align 8
  %120 = lshr i64 %116, 3
  %121 = trunc i64 %120 to i32
  store i32 %121, i32* %4, align 8
  br label %138

122:                                              ; preds = %112
  %123 = lshr i64 %116, 3
  %124 = ptrtoint i8* %117 to i64
  %125 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %126 = icmp ne i8* %117, null
  %127 = icmp ne %"class.std::__1::unique_ptr"* %125, null
  %128 = and i1 %126, %127
  %129 = bitcast %"class.std::__1::unique_ptr"* %125 to i8*
  br i1 %128, label %130, label %135, !prof !6

130:                                              ; preds = %122
  %131 = load i32, i32* %5, align 4
  %132 = zext i32 %131 to i64
  %133 = shl nuw nsw i64 %132, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* nonnull align 8 %129, i64 %133, i1 false) #11
  %134 = load i8*, i8** %26, align 8
  br label %135

135:                                              ; preds = %130, %122
  %136 = phi i8* [ %134, %130 ], [ %129, %122 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %136) #11
  store atomic i64 %124, i64* %27 monotonic, align 8
  %137 = trunc i64 %123 to i32
  store i32 %137, i32* %4, align 8
  br label %138

138:                                              ; preds = %99, %103, %118, %135
  %139 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %140 = load i32, i32* %5, align 4
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 %141
  %143 = bitcast %"class.std::__1::unique_ptr"* %95 to i64*
  %144 = load i64, i64* %143, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %96, align 8
  %145 = bitcast %"class.std::__1::unique_ptr"* %142 to i64*
  store i64 %144, i64* %145, align 8
  %146 = load i32, i32* %5, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %5, align 4
  br label %148

148:                                              ; preds = %138, %94
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %95, i64 1
  %150 = icmp eq %"class.std::__1::unique_ptr"* %149, %23
  br i1 %150, label %28, label %94
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 %9
  %11 = icmp eq i32 %4, %1
  br i1 %11, label %80, label %12

12:                                               ; preds = %6
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 %13
  br label %15

15:                                               ; preds = %12, %22
  %16 = phi %"class.std::__1::unique_ptr"* [ %23, %22 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %17, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %17, align 8
  %19 = icmp eq %"class.blink::IDBKey"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  tail call void @_ZN5blink6IDBKeyD2Ev(%"class.blink::IDBKey"* nonnull %18) #11
  %21 = bitcast %"class.blink::IDBKey"* %18 to i8*
  tail call void @free(i8* %21) #11
  br label %22

22:                                               ; preds = %20, %15
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 1
  %24 = icmp eq %"class.std::__1::unique_ptr"* %23, %10
  br i1 %24, label %80, label %15

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp ult i32 %27, %1
  br i1 %28, label %29, label %68

29:                                               ; preds = %25
  %30 = lshr i32 %27, 2
  %31 = add nuw i32 %27, 1
  %32 = add i32 %31, %30
  %33 = icmp ugt i32 %32, 4
  %34 = select i1 %33, i32 %32, i32 4
  %35 = icmp ugt i32 %34, %1
  %36 = select i1 %35, i32 %34, i32 %1
  %37 = icmp ult i32 %27, %36
  br i1 %37, label %38, label %68, !prof !6

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %39, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr"* %40, null
  %42 = zext i32 %36 to i64
  %43 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink6IDBKeyENS2_14default_deleteIS5_EEEEEEmm(i64 %42) #11
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  br i1 %41, label %45, label %50

45:                                               ; preds = %38
  %46 = ptrtoint i8* %44 to i64
  %47 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  %48 = lshr i64 %43, 3
  %49 = trunc i64 %48 to i32
  store i32 %49, i32* %26, align 8
  br label %68

50:                                               ; preds = %38
  %51 = lshr i64 %43, 3
  %52 = ptrtoint i8* %44 to i64
  %53 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %39, align 8
  %54 = icmp ne i8* %44, null
  %55 = icmp ne %"class.std::__1::unique_ptr"* %53, null
  %56 = and i1 %54, %55
  %57 = bitcast %"class.std::__1::unique_ptr"* %53 to i8*
  br i1 %56, label %58, label %64, !prof !6

58:                                               ; preds = %50
  %59 = load i32, i32* %3, align 4
  %60 = zext i32 %59 to i64
  %61 = shl nuw nsw i64 %60, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* nonnull align 8 %57, i64 %61, i1 false) #11
  %62 = bitcast %"class.WTF::Vector"* %0 to i8**
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %58, %50
  %65 = phi i8* [ %63, %58 ], [ %57, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %65) #11
  %66 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %52, i64* %66 monotonic, align 8
  %67 = trunc i64 %51 to i32
  store i32 %67, i32* %26, align 8
  br label %68

68:                                               ; preds = %64, %45, %29, %25
  %69 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %69, align 8
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %70, i64 %72
  %74 = zext i32 %1 to i64
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %70, i64 %74
  %76 = bitcast %"class.std::__1::unique_ptr"* %73 to i8*
  %77 = ptrtoint %"class.std::__1::unique_ptr"* %75 to i64
  %78 = ptrtoint %"class.std::__1::unique_ptr"* %73 to i64
  %79 = sub i64 %77, %78
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 %79, i1 false) #11
  br label %80

80:                                               ; preds = %22, %6, %68
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #9

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !6

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink6IDBKeyENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !6

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !6

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink6IDBKeyENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !6

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink6IDBKeyENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink6IDBKeyENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEvT0_SA_T_"(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %249, %2
  %4 = phi %"class.std::__1::unique_ptr"* [ %1, %2 ], [ %226, %249 ]
  %5 = phi %"class.std::__1::unique_ptr"* [ %0, %2 ], [ %14, %249 ]
  %6 = ptrtoint %"class.std::__1::unique_ptr"* %4 to i64
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 -1
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  %10 = ptrtoint %"class.std::__1::unique_ptr"* %4 to i64
  br label %11

11:                                               ; preds = %258, %3
  %12 = phi %"class.std::__1::unique_ptr"* [ %5, %3 ], [ %259, %258 ]
  br label %13

13:                                               ; preds = %166, %11
  %14 = phi %"class.std::__1::unique_ptr"* [ %12, %11 ], [ %151, %166 ]
  %15 = ptrtoint %"class.std::__1::unique_ptr"* %14 to i64
  %16 = sub i64 %6, %15
  %17 = ashr exact i64 %16, 3
  switch i64 %17, label %46 [
    i64 0, label %262
    i64 1, label %262
    i64 2, label %18
    i64 3, label %31
    i64 4, label %35
    i64 5, label %40
  ]

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 -1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %22, align 8
  %24 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %21, %"class.blink::IDBKey"* %23) #11
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %26, label %262

26:                                               ; preds = %18
  %27 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  br label %262

31:                                               ; preds = %13
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 -1
  %34 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_T_"(%"class.std::__1::unique_ptr"* %14, %"class.std::__1::unique_ptr"* %32, %"class.std::__1::unique_ptr"* %33)
  br label %262

35:                                               ; preds = %13
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 2
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 -1
  %39 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_SA_T_"(%"class.std::__1::unique_ptr"* %14, %"class.std::__1::unique_ptr"* %36, %"class.std::__1::unique_ptr"* %37, %"class.std::__1::unique_ptr"* %38)
  br label %262

40:                                               ; preds = %13
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 2
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 3
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 -1
  %45 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_SA_SA_T_"(%"class.std::__1::unique_ptr"* %14, %"class.std::__1::unique_ptr"* %41, %"class.std::__1::unique_ptr"* %42, %"class.std::__1::unique_ptr"* %43, %"class.std::__1::unique_ptr"* %44)
  br label %262

46:                                               ; preds = %13
  %47 = icmp slt i64 %16, 56
  br i1 %47, label %48, label %98

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 2
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %51 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_T_"(%"class.std::__1::unique_ptr"* %14, %"class.std::__1::unique_ptr"* %50, %"class.std::__1::unique_ptr"* %49) #11
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 3
  %53 = icmp eq %"class.std::__1::unique_ptr"* %52, %4
  br i1 %53, label %262, label %54

54:                                               ; preds = %48, %95
  %55 = phi %"class.std::__1::unique_ptr"* [ %96, %95 ], [ %52, %48 ]
  %56 = phi %"class.std::__1::unique_ptr"* [ %55, %95 ], [ %49, %48 ]
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %56, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %59, align 8
  %61 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %58, %"class.blink::IDBKey"* %60) #11
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %63, label %95

63:                                               ; preds = %54
  %64 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %57, align 8
  %66 = inttoptr i64 %65 to %"class.blink::IDBKey"*
  br label %67

67:                                               ; preds = %81, %63
  %68 = phi %"class.std::__1::unique_ptr"* [ %55, %63 ], [ %69, %81 ]
  %69 = phi %"class.std::__1::unique_ptr"* [ %56, %63 ], [ %82, %81 ]
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.std::__1::unique_ptr"* %69 to i64*
  %72 = load i64, i64* %71, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %70, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %73, align 8
  %75 = bitcast %"class.std::__1::unique_ptr"* %68 to i64*
  store i64 %72, i64* %75, align 8
  %76 = icmp eq %"class.blink::IDBKey"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %67
  tail call void @_ZN5blink6IDBKeyD2Ev(%"class.blink::IDBKey"* nonnull %74) #11
  %78 = bitcast %"class.blink::IDBKey"* %74 to i8*
  tail call void @free(i8* %78) #11
  br label %79

79:                                               ; preds = %77, %67
  %80 = icmp eq %"class.std::__1::unique_ptr"* %69, %14
  br i1 %80, label %87, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 -1
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %83, align 8
  %85 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %66, %"class.blink::IDBKey"* %84) #11
  %86 = icmp eq i32 %85, -1
  br i1 %86, label %67, label %87

87:                                               ; preds = %79, %81
  %88 = phi %"class.std::__1::unique_ptr"* [ %69, %81 ], [ %14, %79 ]
  %89 = bitcast %"class.std::__1::unique_ptr"* %88 to i64*
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %90, align 8
  store i64 %65, i64* %89, align 8
  %92 = icmp eq %"class.blink::IDBKey"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %87
  tail call void @_ZN5blink6IDBKeyD2Ev(%"class.blink::IDBKey"* nonnull %91) #11
  %94 = bitcast %"class.blink::IDBKey"* %91 to i8*
  tail call void @free(i8* %94) #11
  br label %95

95:                                               ; preds = %93, %87, %54
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 1
  %97 = icmp eq %"class.std::__1::unique_ptr"* %96, %4
  br i1 %97, label %262, label %54

98:                                               ; preds = %46
  %99 = icmp sgt i64 %16, 7992
  %100 = sdiv i64 %17, 2
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 %100
  br i1 %99, label %102, label %107

102:                                              ; preds = %98
  %103 = sdiv i64 %17, 4
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %101, i64 %103
  %106 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_SA_SA_T_"(%"class.std::__1::unique_ptr"* %14, %"class.std::__1::unique_ptr"* %104, %"class.std::__1::unique_ptr"* %101, %"class.std::__1::unique_ptr"* %105, %"class.std::__1::unique_ptr"* %7)
  br label %109

107:                                              ; preds = %98
  %108 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_T_"(%"class.std::__1::unique_ptr"* %14, %"class.std::__1::unique_ptr"* %101, %"class.std::__1::unique_ptr"* %7)
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i32 [ %106, %102 ], [ %108, %107 ]
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %101, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %113, align 8
  %115 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %112, %"class.blink::IDBKey"* %114) #11
  %116 = icmp eq i32 %115, -1
  br i1 %116, label %185, label %117

117:                                              ; preds = %109, %173
  %118 = phi %"class.std::__1::unique_ptr"* [ %119, %173 ], [ %7, %109 ]
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %118, i64 -1
  %120 = icmp eq %"class.std::__1::unique_ptr"* %14, %119
  br i1 %120, label %121, label %173

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %123 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %111, align 8
  %124 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %8, align 8
  %125 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %123, %"class.blink::IDBKey"* %124) #11
  %126 = icmp eq i32 %125, -1
  br i1 %126, label %144, label %127

127:                                              ; preds = %121
  %128 = icmp eq %"class.std::__1::unique_ptr"* %122, %7
  br i1 %128, label %262, label %129

129:                                              ; preds = %127, %141
  %130 = phi %"class.std::__1::unique_ptr"* [ %142, %141 ], [ %122, %127 ]
  %131 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %111, align 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %132, align 8
  %134 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %131, %"class.blink::IDBKey"* %133) #11
  %135 = icmp eq i32 %134, -1
  br i1 %135, label %136, label %141

136:                                              ; preds = %129
  %137 = bitcast %"class.std::__1::unique_ptr"* %130 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = load i64, i64* %9, align 8
  store i64 %139, i64* %137, align 8
  store i64 %138, i64* %9, align 8
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 1
  br label %144

141:                                              ; preds = %129
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 1
  %143 = icmp eq %"class.std::__1::unique_ptr"* %142, %7
  br i1 %143, label %262, label %129

144:                                              ; preds = %136, %121
  %145 = phi %"class.std::__1::unique_ptr"* [ %122, %121 ], [ %140, %136 ]
  %146 = icmp eq %"class.std::__1::unique_ptr"* %145, %7
  br i1 %146, label %262, label %147

147:                                              ; preds = %144, %168
  %148 = phi %"class.std::__1::unique_ptr"* [ %157, %168 ], [ %145, %144 ]
  %149 = phi %"class.std::__1::unique_ptr"* [ %160, %168 ], [ %7, %144 ]
  br label %150

150:                                              ; preds = %150, %147
  %151 = phi %"class.std::__1::unique_ptr"* [ %148, %147 ], [ %157, %150 ]
  %152 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %111, align 8
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %151, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %153, align 8
  %155 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %152, %"class.blink::IDBKey"* %154) #11
  %156 = icmp eq i32 %155, -1
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %151, i64 1
  br i1 %156, label %158, label %150

158:                                              ; preds = %150, %158
  %159 = phi %"class.std::__1::unique_ptr"* [ %160, %158 ], [ %149, %150 ]
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 -1
  %161 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %111, align 8
  %162 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 0, i32 0, i32 0, i32 0
  %163 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %162, align 8
  %164 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %161, %"class.blink::IDBKey"* %163) #11
  %165 = icmp eq i32 %164, -1
  br i1 %165, label %158, label %166

166:                                              ; preds = %158
  %167 = icmp ult %"class.std::__1::unique_ptr"* %151, %160
  br i1 %167, label %168, label %13

168:                                              ; preds = %166
  %169 = bitcast %"class.std::__1::unique_ptr"* %151 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"class.std::__1::unique_ptr"* %160 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %169, align 8
  store i64 %170, i64* %171, align 8
  br label %147

173:                                              ; preds = %117
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %119, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %174, align 8
  %176 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %113, align 8
  %177 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %175, %"class.blink::IDBKey"* %176) #11
  %178 = icmp eq i32 %177, -1
  br i1 %178, label %179, label %117

179:                                              ; preds = %173
  %180 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %"class.std::__1::unique_ptr"* %119 to i64*
  %183 = load i64, i64* %182, align 8
  store i64 %183, i64* %180, align 8
  store i64 %181, i64* %182, align 8
  %184 = add i32 %110, 1
  br label %185

185:                                              ; preds = %109, %179
  %186 = phi i32 [ %184, %179 ], [ %110, %109 ]
  %187 = phi %"class.std::__1::unique_ptr"* [ %119, %179 ], [ %7, %109 ]
  %188 = ptrtoint %"class.std::__1::unique_ptr"* %14 to i64
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %190 = icmp ult %"class.std::__1::unique_ptr"* %189, %187
  br i1 %190, label %191, label %223

191:                                              ; preds = %185, %215
  %192 = phi %"class.std::__1::unique_ptr"* [ %222, %215 ], [ %101, %185 ]
  %193 = phi i32 [ %220, %215 ], [ %186, %185 ]
  %194 = phi %"class.std::__1::unique_ptr"* [ %204, %215 ], [ %189, %185 ]
  %195 = phi %"class.std::__1::unique_ptr"* [ %207, %215 ], [ %187, %185 ]
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %192, i64 0, i32 0, i32 0, i32 0
  br label %197

197:                                              ; preds = %197, %191
  %198 = phi %"class.std::__1::unique_ptr"* [ %194, %191 ], [ %204, %197 ]
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %198, i64 0, i32 0, i32 0, i32 0
  %200 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %199, align 8
  %201 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %196, align 8
  %202 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %200, %"class.blink::IDBKey"* %201) #11
  %203 = icmp eq i32 %202, -1
  %204 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %198, i64 1
  br i1 %203, label %197, label %205

205:                                              ; preds = %197, %205
  %206 = phi %"class.std::__1::unique_ptr"* [ %207, %205 ], [ %195, %197 ]
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %206, i64 -1
  %208 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %207, i64 0, i32 0, i32 0, i32 0
  %209 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %208, align 8
  %210 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %196, align 8
  %211 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %209, %"class.blink::IDBKey"* %210) #11
  %212 = icmp eq i32 %211, -1
  br i1 %212, label %213, label %205

213:                                              ; preds = %205
  %214 = icmp ugt %"class.std::__1::unique_ptr"* %198, %207
  br i1 %214, label %223, label %215

215:                                              ; preds = %213
  %216 = bitcast %"class.std::__1::unique_ptr"* %198 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.std::__1::unique_ptr"* %207 to i64*
  %219 = load i64, i64* %218, align 8
  store i64 %219, i64* %216, align 8
  store i64 %217, i64* %218, align 8
  %220 = add i32 %193, 1
  %221 = icmp eq %"class.std::__1::unique_ptr"* %192, %198
  %222 = select i1 %221, %"class.std::__1::unique_ptr"* %207, %"class.std::__1::unique_ptr"* %192
  br label %191

223:                                              ; preds = %213, %185
  %224 = phi %"class.std::__1::unique_ptr"* [ %101, %185 ], [ %192, %213 ]
  %225 = phi i32 [ %186, %185 ], [ %193, %213 ]
  %226 = phi %"class.std::__1::unique_ptr"* [ %189, %185 ], [ %198, %213 ]
  %227 = icmp eq %"class.std::__1::unique_ptr"* %226, %224
  br i1 %227, label %241, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %224, i64 0, i32 0, i32 0, i32 0
  %230 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %229, align 8
  %231 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %226, i64 0, i32 0, i32 0, i32 0
  %232 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %231, align 8
  %233 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %230, %"class.blink::IDBKey"* %232) #11
  %234 = icmp eq i32 %233, -1
  br i1 %234, label %235, label %241

235:                                              ; preds = %228
  %236 = bitcast %"class.std::__1::unique_ptr"* %226 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.std::__1::unique_ptr"* %224 to i64*
  %239 = load i64, i64* %238, align 8
  store i64 %239, i64* %236, align 8
  store i64 %237, i64* %238, align 8
  %240 = add i32 %225, 1
  br label %241

241:                                              ; preds = %223, %235, %228
  %242 = phi i32 [ %240, %235 ], [ %225, %228 ], [ %225, %223 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %251

244:                                              ; preds = %241
  %245 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEbT0_SA_T_"(%"class.std::__1::unique_ptr"* %14, %"class.std::__1::unique_ptr"* %226)
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %226, i64 1
  %247 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEbT0_SA_T_"(%"class.std::__1::unique_ptr"* %246, %"class.std::__1::unique_ptr"* %4)
  br i1 %247, label %248, label %250

248:                                              ; preds = %244
  br i1 %245, label %262, label %249

249:                                              ; preds = %248, %260
  br label %3

250:                                              ; preds = %244
  br i1 %245, label %258, label %251

251:                                              ; preds = %250, %241
  %252 = ptrtoint %"class.std::__1::unique_ptr"* %226 to i64
  %253 = sub i64 %252, %188
  %254 = sub i64 %10, %252
  %255 = icmp slt i64 %253, %254
  br i1 %255, label %256, label %260

256:                                              ; preds = %251
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEvT0_SA_T_"(%"class.std::__1::unique_ptr"* %14, %"class.std::__1::unique_ptr"* %226)
  %257 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %226, i64 1
  br label %258

258:                                              ; preds = %256, %250
  %259 = phi %"class.std::__1::unique_ptr"* [ %246, %250 ], [ %257, %256 ]
  br label %11

260:                                              ; preds = %251
  %261 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %226, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEvT0_SA_T_"(%"class.std::__1::unique_ptr"* %261, %"class.std::__1::unique_ptr"* %4)
  br label %249

262:                                              ; preds = %248, %144, %13, %13, %127, %141, %95, %48, %18, %26, %31, %35, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_T_"(%"class.std::__1::unique_ptr"* nocapture, %"class.std::__1::unique_ptr"* nocapture, %"class.std::__1::unique_ptr"* nocapture) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %6, align 8
  %8 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %5, %"class.blink::IDBKey"* %7) #11
  %9 = icmp eq i32 %8, -1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %10, align 8
  %12 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %4, align 8
  %13 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %11, %"class.blink::IDBKey"* %12) #11
  %14 = icmp eq i32 %13, -1
  br i1 %9, label %29, label %15

15:                                               ; preds = %3
  br i1 %14, label %16, label %46

16:                                               ; preds = %15
  %17 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %17, align 8
  store i64 %18, i64* %19, align 8
  %21 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %4, align 8
  %22 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %6, align 8
  %23 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %21, %"class.blink::IDBKey"* %22) #11
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %46

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = load i64, i64* %17, align 8
  store i64 %28, i64* %26, align 8
  store i64 %27, i64* %17, align 8
  br label %46

29:                                               ; preds = %3
  %30 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  br i1 %14, label %32, label %35

32:                                               ; preds = %29
  %33 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %30, align 8
  store i64 %31, i64* %33, align 8
  br label %46

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %30, align 8
  store i64 %31, i64* %36, align 8
  %38 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %10, align 8
  %39 = inttoptr i64 %31 to %"class.blink::IDBKey"*
  %40 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %38, %"class.blink::IDBKey"* %39) #11
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %42, label %46

42:                                               ; preds = %35
  %43 = load i64, i64* %36, align 8
  %44 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %36, align 8
  store i64 %43, i64* %44, align 8
  br label %46

46:                                               ; preds = %35, %42, %16, %25, %15, %32
  %47 = phi i32 [ 1, %32 ], [ 0, %15 ], [ 2, %25 ], [ 1, %16 ], [ 2, %42 ], [ 1, %35 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_SA_T_"(%"class.std::__1::unique_ptr"* nocapture, %"class.std::__1::unique_ptr"* nocapture, %"class.std::__1::unique_ptr"* nocapture, %"class.std::__1::unique_ptr"* nocapture) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_T_"(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"* %2)
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %8, align 8
  %10 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %7, %"class.blink::IDBKey"* %9) #11
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %38

12:                                               ; preds = %4
  %13 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  %17 = add i32 %5, 1
  %18 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %8, align 8
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %19, align 8
  %21 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %18, %"class.blink::IDBKey"* %20) #11
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %23, label %38

23:                                               ; preds = %12
  %24 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = load i64, i64* %13, align 8
  store i64 %26, i64* %24, align 8
  store i64 %25, i64* %13, align 8
  %27 = add i32 %5, 2
  %28 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %19, align 8
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %29, align 8
  %31 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %28, %"class.blink::IDBKey"* %30) #11
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %38

33:                                               ; preds = %23
  %34 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = load i64, i64* %24, align 8
  store i64 %36, i64* %34, align 8
  store i64 %35, i64* %24, align 8
  %37 = add i32 %5, 3
  br label %38

38:                                               ; preds = %12, %33, %23, %4
  %39 = phi i32 [ %37, %33 ], [ %27, %23 ], [ %17, %12 ], [ %5, %4 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_SA_SA_T_"(%"class.std::__1::unique_ptr"* nocapture, %"class.std::__1::unique_ptr"* nocapture, %"class.std::__1::unique_ptr"* nocapture, %"class.std::__1::unique_ptr"* nocapture, %"class.std::__1::unique_ptr"* nocapture) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_SA_T_"(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"* %2, %"class.std::__1::unique_ptr"* %3)
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %9, align 8
  %11 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %8, %"class.blink::IDBKey"* %10) #11
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %49

13:                                               ; preds = %5
  %14 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 %15, i64* %16, align 8
  %18 = add i32 %6, 1
  %19 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %9, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %20, align 8
  %22 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %19, %"class.blink::IDBKey"* %21) #11
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %24, label %49

24:                                               ; preds = %13
  %25 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %14, align 8
  store i64 %27, i64* %25, align 8
  store i64 %26, i64* %14, align 8
  %28 = add i32 %6, 2
  %29 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %20, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %30, align 8
  %32 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %29, %"class.blink::IDBKey"* %31) #11
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %34, label %49

34:                                               ; preds = %24
  %35 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = load i64, i64* %25, align 8
  store i64 %37, i64* %35, align 8
  store i64 %36, i64* %25, align 8
  %38 = add i32 %6, 3
  %39 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %30, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %40, align 8
  %42 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %39, %"class.blink::IDBKey"* %41) #11
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %44, label %49

44:                                               ; preds = %34
  %45 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = load i64, i64* %35, align 8
  store i64 %47, i64* %45, align 8
  store i64 %46, i64* %35, align 8
  %48 = add i32 %6, 4
  br label %49

49:                                               ; preds = %13, %34, %44, %24, %5
  %50 = phi i32 [ %48, %44 ], [ %38, %34 ], [ %28, %24 ], [ %18, %13 ], [ %6, %5 ]
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEbT0_SA_T_"(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) unnamed_addr #0 {
  %3 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %4 = ptrtoint %"class.std::__1::unique_ptr"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %35 [
    i64 0, label %93
    i64 1, label %93
    i64 2, label %7
    i64 3, label %20
    i64 4, label %24
    i64 5, label %29
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %11, align 8
  %13 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %10, %"class.blink::IDBKey"* %12) #11
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %93

15:                                               ; preds = %7
  %16 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  br label %93

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %23 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_T_"(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %21, %"class.std::__1::unique_ptr"* %22)
  br label %93

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 2
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %28 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_SA_T_"(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %25, %"class.std::__1::unique_ptr"* %26, %"class.std::__1::unique_ptr"* %27)
  br label %93

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 2
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 3
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %34 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_SA_SA_T_"(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %30, %"class.std::__1::unique_ptr"* %31, %"class.std::__1::unique_ptr"* %32, %"class.std::__1::unique_ptr"* %33)
  br label %93

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 2
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %38 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink6IDBKey17ToMultiEntryArrayENS_10unique_ptrIS2_NS_14default_deleteIS2_EEEEE3$_0PS6_EEjT0_SA_SA_T_"(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %37, %"class.std::__1::unique_ptr"* %36)
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 3
  %40 = icmp eq %"class.std::__1::unique_ptr"* %39, %1
  br i1 %40, label %93, label %41

41:                                               ; preds = %35, %86
  %42 = phi %"class.std::__1::unique_ptr"* [ %88, %86 ], [ %39, %35 ]
  %43 = phi i32 [ %87, %86 ], [ 0, %35 ]
  %44 = phi %"class.std::__1::unique_ptr"* [ %42, %86 ], [ %36, %35 ]
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %47, align 8
  %49 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %46, %"class.blink::IDBKey"* %48) #11
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %51, label %86

51:                                               ; preds = %41
  %52 = bitcast %"class.std::__1::unique_ptr"* %42 to i64*
  %53 = load i64, i64* %52, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %45, align 8
  %54 = inttoptr i64 %53 to %"class.blink::IDBKey"*
  br label %55

55:                                               ; preds = %69, %51
  %56 = phi %"class.std::__1::unique_ptr"* [ %42, %51 ], [ %57, %69 ]
  %57 = phi %"class.std::__1::unique_ptr"* [ %44, %51 ], [ %70, %69 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::unique_ptr"* %57 to i64*
  %60 = load i64, i64* %59, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %58, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %56, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %61, align 8
  %63 = bitcast %"class.std::__1::unique_ptr"* %56 to i64*
  store i64 %60, i64* %63, align 8
  %64 = icmp eq %"class.blink::IDBKey"* %62, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %55
  tail call void @_ZN5blink6IDBKeyD2Ev(%"class.blink::IDBKey"* nonnull %62) #11
  %66 = bitcast %"class.blink::IDBKey"* %62 to i8*
  tail call void @free(i8* %66) #11
  br label %67

67:                                               ; preds = %55, %65
  %68 = icmp eq %"class.std::__1::unique_ptr"* %57, %0
  br i1 %68, label %75, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %71, align 8
  %73 = tail call i32 @_ZNK5blink6IDBKey7CompareEPKS0_(%"class.blink::IDBKey"* %54, %"class.blink::IDBKey"* %72) #11
  %74 = icmp eq i32 %73, -1
  br i1 %74, label %55, label %75

75:                                               ; preds = %67, %69
  %76 = phi %"class.std::__1::unique_ptr"* [ %57, %69 ], [ %0, %67 ]
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.std::__1::unique_ptr"* %76 to i64*
  %79 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %77, align 8
  store i64 %53, i64* %78, align 8
  %80 = icmp eq %"class.blink::IDBKey"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %75
  tail call void @_ZN5blink6IDBKeyD2Ev(%"class.blink::IDBKey"* nonnull %79) #11
  %82 = bitcast %"class.blink::IDBKey"* %79 to i8*
  tail call void @free(i8* %82) #11
  br label %83

83:                                               ; preds = %81, %75
  %84 = add i32 %43, 1
  %85 = icmp eq i32 %84, 8
  br i1 %85, label %90, label %86

86:                                               ; preds = %83, %41
  %87 = phi i32 [ %84, %83 ], [ %43, %41 ]
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 1
  %89 = icmp eq %"class.std::__1::unique_ptr"* %88, %1
  br i1 %89, label %93, label %41

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 1
  %92 = icmp eq %"class.std::__1::unique_ptr"* %91, %1
  br label %93

93:                                               ; preds = %86, %90, %35, %7, %15, %2, %2, %29, %24, %20
  %94 = phi i1 [ true, %29 ], [ true, %24 ], [ true, %20 ], [ true, %2 ], [ true, %2 ], [ true, %15 ], [ true, %7 ], [ true, %35 ], [ %92, %90 ], [ true, %86 ]
  ret i1 %94
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = distinct !{!5, !3}
!6 = !{!"branch_weights", i32 2000, i32 1}
