; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/val/function.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/val/function.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.spvtools::val::Function" = type { i32, i32, i32, i32, i32, i8, [3 x i8], %"class.std::__1::unordered_map", %"class.std::__1::vector", %"class.std::__1::unordered_set", %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock", %"class.std::__1::unordered_map.40", %"class.std::__1::unordered_map.40", %"class.std::__1::unordered_map.40", %"class.std::__1::list", %"class.std::__1::vector.72", %"class.std::__1::vector.72", %"class.std::__1::unordered_map.79", %"class.std::__1::unordered_map.105", %"class.std::__1::unordered_map.133", %"class.std::__1::unordered_map.157", %"class.std::__1::list.181", %"class.std::__1::list.188", %"class.std::__1::set" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"**, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.spvtools::val::BasicBlock"** }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.19" }
%"class.std::__1::__hash_table.19" = type <{ %"class.std::__1::unique_ptr.20", %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.37", [4 x i8] }>
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::__hash_node_base.23"** }
%"struct.std::__1::__hash_node_base.23" = type { %"struct.std::__1::__hash_node_base.23"* }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::__bucket_list_deallocator.25" }
%"class.std::__1::__bucket_list_deallocator.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base.23" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.spvtools::val::BasicBlock" = type { i32, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*, %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::bitset", i8, %"class.spvtools::val::Instruction"*, %"class.spvtools::val::Instruction"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.spvtools::val::Instruction" = type opaque
%"class.std::__1::unordered_map.40" = type { %"class.std::__1::__hash_table.41" }
%"class.std::__1::__hash_table.41" = type <{ %"class.std::__1::unique_ptr.42", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.62", [4 x i8] }>
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::__hash_node_base.45"** }
%"struct.std::__1::__hash_node_base.45" = type { %"struct.std::__1::__hash_node_base.45"* }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::__bucket_list_deallocator.47" }
%"class.std::__1::__bucket_list_deallocator.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base.45" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.68" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { i32*, i32*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i32* }
%"class.std::__1::unordered_map.79" = type { %"class.std::__1::__hash_table.80" }
%"class.std::__1::__hash_table.80" = type <{ %"class.std::__1::unique_ptr.81", %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.99", [4 x i8] }>
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83", %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.std::__1::__hash_node_base.84"** }
%"struct.std::__1::__hash_node_base.84" = type { %"struct.std::__1::__hash_node_base.84"* }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__bucket_list_deallocator.86" }
%"class.std::__1::__bucket_list_deallocator.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base.84" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.105" = type { %"class.std::__1::__hash_table.106" }
%"class.std::__1::__hash_table.106" = type <{ %"class.std::__1::unique_ptr.107", %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", [4 x i8] }>
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109", %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base.110"** }
%"struct.std::__1::__hash_node_base.110" = type { %"struct.std::__1::__hash_node_base.110"* }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::__bucket_list_deallocator.112" }
%"class.std::__1::__bucket_list_deallocator.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::__hash_node_base.110" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.133" = type { %"class.std::__1::__hash_table.134" }
%"class.std::__1::__hash_table.134" = type <{ %"class.std::__1::unique_ptr.135", %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.153", [4 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137", %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::__hash_node_base.138"** }
%"struct.std::__1::__hash_node_base.138" = type { %"struct.std::__1::__hash_node_base.138"* }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.std::__1::__bucket_list_deallocator.140" }
%"class.std::__1::__bucket_list_deallocator.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.std::__1::__hash_node_base.138" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.157" = type { %"class.std::__1::__hash_table.158" }
%"class.std::__1::__hash_table.158" = type <{ %"class.std::__1::unique_ptr.159", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.174", %"class.std::__1::__compressed_pair.177", [4 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161", %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.std::__1::__hash_node_base.162"** }
%"struct.std::__1::__hash_node_base.162" = type { %"struct.std::__1::__hash_node_base.162"* }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.std::__1::__bucket_list_deallocator.164" }
%"class.std::__1::__bucket_list_deallocator.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.std::__1::__hash_node_base.162" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::list.181" = type { %"class.std::__1::__list_imp.182" }
%"class.std::__1::__list_imp.182" = type { %"struct.std::__1::__list_node_base.183", %"class.std::__1::__compressed_pair.184" }
%"struct.std::__1::__list_node_base.183" = type { %"struct.std::__1::__list_node_base.183"*, %"struct.std::__1::__list_node_base.183"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::list.188" = type { %"class.std::__1::__list_imp.189" }
%"class.std::__1::__list_imp.189" = type { %"struct.std::__1::__list_node_base.190", %"class.std::__1::__compressed_pair.191" }
%"struct.std::__1::__list_node_base.190" = type { %"struct.std::__1::__list_node_base.190"*, %"struct.std::__1::__list_node_base.190"* }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::tuple.287" = type { %"struct.std::__1::__tuple_impl.288" }
%"struct.std::__1::__tuple_impl.288" = type { %"class.std::__1::__tuple_leaf.289" }
%"class.std::__1::__tuple_leaf.289" = type { %"class.spvtools::val::BasicBlock"** }
%"class.std::__1::tuple.272" = type { i8 }
%"class.spvtools::val::Construct" = type { i32, %"class.std::__1::vector.202", %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"**, %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.spvtools::val::Construct"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::pair.212" = type { i32, %"class.spvtools::val::BasicBlock" }
%"class.std::__1::tuple.425" = type { %"struct.std::__1::__tuple_impl.426" }
%"struct.std::__1::__tuple_impl.426" = type { %"class.std::__1::__tuple_leaf.427" }
%"class.std::__1::__tuple_leaf.427" = type { %"struct.std::__1::pair.235"* }
%"struct.std::__1::pair.235" = type <{ %"class.spvtools::val::BasicBlock"*, i32, [4 x i8] }>
%"class.std::__1::tuple.322" = type { %"struct.std::__1::__tuple_impl.323" }
%"struct.std::__1::__tuple_impl.323" = type { %"class.std::__1::__tuple_leaf.324" }
%"class.std::__1::__tuple_leaf.324" = type { %"class.spvtools::val::BasicBlock"** }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)* }
%"class.std::__1::tuple.269" = type { %"struct.std::__1::__tuple_impl.270" }
%"struct.std::__1::__tuple_impl.270" = type { %"class.std::__1::__tuple_leaf.271" }
%"class.std::__1::__tuple_leaf.271" = type { %"class.spvtools::val::BasicBlock"** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.anon.255 = type { i32, %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::__list_node.454" = type { %"struct.std::__1::__list_node_base.183", %"class.std::__1::function.249" }
%"class.std::__1::function.249" = type { %"class.std::__1::__function::__policy_func.253" }
%"class.std::__1::__function::__policy_func.253" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.254", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.254" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32, %"class.std::__1::basic_string"*)* }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.spvtools::val::ValidationState_t" = type opaque
%"struct.std::__1::__list_node.464" = type { %"struct.std::__1::__list_node_base.190", %"class.std::__1::function.257" }
%"class.std::__1::function.257" = type { %"class.std::__1::__function::__policy_func.260" }
%"class.std::__1::__function::__policy_func.260" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.261", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.261" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::ValidationState_t"*, %"class.spvtools::val::Function"*, %"class.std::__1::basic_string"*)* }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313", %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.std::__1::__hash_node.310"* }
%"struct.std::__1::__hash_node.310" = type <{ %"struct.std::__1::__hash_node_base.23", i64, i32, [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.std::__1::__hash_node_destructor.315" }
%"class.std::__1::__hash_node_destructor.315" = type <{ %"class.std::__1::allocator.33"*, i8, [7 x i8] }>
%"class.std::__1::allocator.33" = type { i8 }
%"class.std::__1::function.373" = type { %"class.std::__1::__function::__policy_func.377" }
%"class.std::__1::__function::__policy_func.377" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.378", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.378" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)* }
%"class.std::__1::function.379" = type { %"class.std::__1::__function::__policy_func.383" }
%"class.std::__1::__function::__policy_func.383" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.384", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.384" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*)* }
%"class.std::__1::unordered_set.345" = type { %"class.std::__1::__hash_table.346" }
%"class.std::__1::__hash_table.346" = type <{ %"class.std::__1::unique_ptr.347", %"class.std::__1::__compressed_pair.357", %"class.std::__1::__compressed_pair.362", %"class.std::__1::__compressed_pair.364", [4 x i8] }>
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349", %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"struct.std::__1::__hash_node_base.350"** }
%"struct.std::__1::__hash_node_base.350" = type { %"struct.std::__1::__hash_node_base.350"* }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.std::__1::__bucket_list_deallocator.352" }
%"class.std::__1::__bucket_list_deallocator.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"struct.std::__1::__hash_node_base.350" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.385" = type { %"class.std::__1::__vector_base.386" }
%"class.std::__1::__vector_base.386" = type { %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"*, %"class.std::__1::__compressed_pair.387" }
%"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info" = type { %"class.spvtools::val::BasicBlock"*, %"class.std::__1::__wrap_iter.344" }
%"class.std::__1::__wrap_iter.344" = type { %"class.spvtools::val::BasicBlock"** }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* }
%"class.std::__1::__function::__default_alloc_func.461" = type { %class.anon.255 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN8spvtools3CFAINS_3val10BasicBlockEE19ComputeAugmentedCFGERNSt3__16vectorIPS2_NS4_9allocatorIS6_EEEES6_S6_PNS4_13unordered_mapIPKS2_S9_NS4_4hashISD_EENS4_8equal_toISD_EENS7_INS4_4pairIKSD_S9_EEEEEESN_NS4_8functionIFPKS9_SD_EEESS_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SF_SD_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SF_SD_Lb1EEENS7_ISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SF_SD_Lb1EEENS7_ISA_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS4_EEE6assignIPKS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3val10BasicBlockEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIjJNS_4pairIKjS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3val10BasicBlockEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3val10BasicBlockEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZN8spvtools3CFAINS_3val10BasicBlockEE14TraversalRootsERKNSt3__16vectorIPS2_NS4_9allocatorIS6_EEEENS4_8functionIFPSA_PKS2_EEESH_ = comdat any

$_ZNSt3__16vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPKS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISE_E9referenceEEE5valueENS9_IPS4_EEE4typeESC_SE_SE_ = comdat any

$_ZN8spvtools3CFAINS_3val10BasicBlockEE19DepthFirstTraversalEPKS2_NSt3__18functionIFPKNS6_6vectorIPS2_NS6_9allocatorIS9_EEEES5_EEENS7_IFvS5_EEESI_NS7_IFvS5_S5_EEE = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3val10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS2_3CFAIS4_E14TraversalRootsERKNS_6vectorIPS4_NS_9allocatorISE_EEEENS_8functionIFPSI_S6_EEESN_EUlS6_E_S7_EEEEvPKNS0_16__policy_storageES6_ = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3val10BasicBlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3val10BasicBlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3val10BasicBlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3val10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS2_3CFAIS4_E14TraversalRootsERKNS_6vectorIPS4_NS_9allocatorISE_EEEENS_8functionIFPSI_S6_EEESN_EUlS6_E0_S7_EEEEvPKNS0_16__policy_storageES6_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3val10BasicBlockES6_EE11__call_implINS0_20__default_alloc_funcIZNS2_3CFAIS4_E14TraversalRootsERKNS_6vectorIPS4_NS_9allocatorISE_EEEENS_8functionIFPSI_S6_EEESN_EUlS6_S6_E_S7_EEEEvPKNS0_16__policy_storageES6_S6_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIPKN8spvtools3val10BasicBlockENS4_13ConstructTypeEEEPNS4_9ConstructEEENS_22__unordered_map_hasherIS9_SC_NS4_24bb_constr_type_pair_hashENS_8equal_toIS9_EELb1EEENS_21__unordered_map_equalIS9_SC_SG_SE_Lb1EEENS_9allocatorISC_EEE25__emplace_unique_key_argsIS9_JRKNS_21piecewise_construct_tENS_5tupleIJOS9_EEENSR_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIPKN8spvtools3val10BasicBlockENS4_13ConstructTypeEEEPNS4_9ConstructEEENS_22__unordered_map_hasherIS9_SC_NS4_24bb_constr_type_pair_hashENS_8equal_toIS9_EELb1EEENS_21__unordered_map_equalIS9_SC_SG_SE_Lb1EEENS_9allocatorISC_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIPKN8spvtools3val10BasicBlockENS4_13ConstructTypeEEEPNS4_9ConstructEEENS_22__unordered_map_hasherIS9_SC_NS4_24bb_constr_type_pair_hashENS_8equal_toIS9_EELb1EEENS_21__unordered_map_equalIS9_SC_SG_SE_Lb1EEENS_9allocatorISC_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3CFAINS4_3val10BasicBlockEE14TraversalRootsERKNS_6vectorIPS7_NS_9allocatorISA_EEEENS_8functionIFPSE_PKS7_EEESL_EUlSJ_E_FvSJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3CFAINS4_3val10BasicBlockEE14TraversalRootsERKNS_6vectorIPS7_NS_9allocatorISA_EEEENS_8functionIFPSE_PKS7_EEESL_EUlSJ_E0_FvSJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3CFAINS4_3val10BasicBlockEE14TraversalRootsERKNS_6vectorIPS7_NS_9allocatorISA_EEEENS_8functionIFPSE_PKS7_EEESL_EUlSJ_SJ_E_FvSJ_SJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3val8Function30AugmentedCFGSuccessorsFunctionEvE3$_0FPKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISA_EEEEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3val8Function59AugmentedCFGSuccessorsFunctionIncludingHeaderToContinueEdgeEvE3$_1FPKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISA_EEEEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3val8Function32AugmentedCFGPredecessorsFunctionEvE3$_2FPKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISA_EEEEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3CFAINS4_3val10BasicBlockEE14TraversalRootsERKNS_6vectorIPS7_NS_9allocatorISA_EEEENS_8functionIFPSE_PKS7_EEESL_EUlSJ_E_FvSJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3CFAINS4_3val10BasicBlockEE14TraversalRootsERKNS_6vectorIPS7_NS_9allocatorISA_EEEENS_8functionIFPSE_PKS7_EEESL_EUlSJ_E0_FvSJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3CFAINS4_3val10BasicBlockEE14TraversalRootsERKNS_6vectorIPS7_NS_9allocatorISA_EEEENS_8functionIFPSE_PKS7_EEESL_EUlSJ_SJ_E_FvSJ_SJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3val8Function19ComputeAugmentedCFGEvE3$_3FPKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISA_EEEEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3val8Function19ComputeAugmentedCFGEvE3$_4FPKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISA_EEEEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3val8Function32RegisterExecutionModelLimitationE18SpvExecutionModel_RKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_5FbS7_PSD_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3val8Function32RegisterExecutionModelLimitationE18SpvExecutionModel_RKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_5FbS7_PSD_EEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3val8Function32RegisterExecutionModelLimitationE18SpvExecutionModel_RKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_5FbS7_PSD_EEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN8spvtools3val8FunctionC1Ejj23SpvFunctionControlMask_j = hidden unnamed_addr alias void (%"class.spvtools::val::Function"*, i32, i32, i32, i32), void (%"class.spvtools::val::Function"*, i32, i32, i32, i32)* @_ZN8spvtools3val8FunctionC2Ejj23SpvFunctionControlMask_j

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3val8FunctionC2Ejj23SpvFunctionControlMask_j(%"class.spvtools::val::Function"*, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 1
  store i32 %4, i32* %7, align 4
  %8 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 2
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 3
  store i32 %3, i32* %9, align 4
  %10 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 4
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 5
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 7
  %13 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 7, i32 0, i32 3
  %14 = bitcast %"class.std::__1::__compressed_pair.11"* %13 to i32*
  %15 = bitcast %"class.std::__1::unordered_map"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %14, align 4
  %16 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8
  %17 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 9, i32 0, i32 3
  %18 = bitcast %"class.std::__1::__compressed_pair.37"* %17 to i32*
  %19 = bitcast %"class.std::__1::vector"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 56, i1 false)
  store i32 1065353216, i32* %18, align 4
  %20 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 10
  store %"class.spvtools::val::BasicBlock"* null, %"class.spvtools::val::BasicBlock"** %20, align 8
  %21 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 11
  tail call void @_ZN8spvtools3val10BasicBlockC1Ej(%"class.spvtools::val::BasicBlock"* %21, i32 0) #13
  %22 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 12
  tail call void @_ZN8spvtools3val10BasicBlockC1Ej(%"class.spvtools::val::BasicBlock"* %22, i32 4194304) #13
  %23 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 13
  %24 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 13, i32 0, i32 3
  %25 = bitcast %"class.std::__1::__compressed_pair.62"* %24 to i32*
  %26 = bitcast %"class.std::__1::unordered_map.40"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %25, align 4
  %27 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 14
  %28 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 14, i32 0, i32 3
  %29 = bitcast %"class.std::__1::__compressed_pair.62"* %28 to i32*
  %30 = bitcast %"class.std::__1::unordered_map.40"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %29, align 4
  %31 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 15
  %32 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 15, i32 0, i32 3
  %33 = bitcast %"class.std::__1::__compressed_pair.62"* %32 to i32*
  %34 = bitcast %"class.std::__1::unordered_map.40"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %33, align 4
  %35 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 16
  %36 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %35, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %35, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %36, %"struct.std::__1::__list_node_base"** %37, align 8
  %38 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 16, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %36, %"struct.std::__1::__list_node_base"** %38, align 8
  %39 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %40 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 19, i32 0, i32 3
  %41 = bitcast %"class.std::__1::__compressed_pair.99"* %40 to i32*
  %42 = bitcast i64* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 88, i1 false)
  store i32 1065353216, i32* %41, align 4
  %43 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 20
  %44 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 20, i32 0, i32 3
  %45 = bitcast %"class.std::__1::__compressed_pair.127"* %44 to i32*
  %46 = bitcast %"class.std::__1::unordered_map.105"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %45, align 4
  %47 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 21
  %48 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 21, i32 0, i32 3
  %49 = bitcast %"class.std::__1::__compressed_pair.153"* %48 to i32*
  %50 = bitcast %"class.std::__1::unordered_map.133"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %49, align 4
  %51 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 22
  %52 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 22, i32 0, i32 3
  %53 = bitcast %"class.std::__1::__compressed_pair.177"* %52 to i32*
  %54 = bitcast %"class.std::__1::unordered_map.157"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %53, align 4
  %55 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 23
  %56 = getelementptr inbounds %"class.std::__1::list.181", %"class.std::__1::list.181"* %55, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::list.181", %"class.std::__1::list.181"* %55, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.183"* %56, %"struct.std::__1::__list_node_base.183"** %57, align 8
  %58 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.183"* %56, %"struct.std::__1::__list_node_base.183"** %58, align 8
  %59 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 23, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 24
  %61 = getelementptr inbounds %"class.std::__1::list.188", %"class.std::__1::list.188"* %60, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::list.188", %"class.std::__1::list.188"* %60, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.190"* %61, %"struct.std::__1::__list_node_base.190"** %62, align 8
  %63 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base.190"* %61, %"struct.std::__1::__list_node_base.190"** %63, align 8
  %64 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 24, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 25, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 25, i32 0, i32 1, i32 0, i32 0
  %67 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 25, i32 0, i32 0
  %68 = bitcast %"class.std::__1::__tree_node_base"** %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %66, %"class.std::__1::__tree_end_node"** %67, align 8
  ret void
}

declare void @_ZN8spvtools3val10BasicBlockC1Ej(%"class.spvtools::val::BasicBlock"*, i32) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3val8Function12IsFirstBlockEj(%"class.spvtools::val::Function"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8, i32 0, i32 1
  %6 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %5, align 8
  %7 = icmp eq %"class.spvtools::val::BasicBlock"** %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %4, align 8
  %10 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, %1
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i1 [ false, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.spvtools::val::BasicBlock"* @_ZNK8spvtools3val8Function11first_blockEv(%"class.spvtools::val::Function"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8, i32 0, i32 1
  %5 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %4, align 8
  %6 = icmp eq %"class.spvtools::val::BasicBlock"** %3, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %3, align 8
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.spvtools::val::BasicBlock"* [ %8, %7 ], [ null, %1 ]
  ret %"class.spvtools::val::BasicBlock"* %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8spvtools3val8Function25RegisterFunctionParameterEjj(%"class.spvtools::val::Function"* nocapture readnone, i32, i32) local_unnamed_addr #3 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3val8Function17RegisterLoopMergeEjj(%"class.spvtools::val::Function"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.287", align 8
  %5 = alloca %"class.std::__1::tuple.272", align 1
  %6 = alloca %"class.std::__1::tuple.287", align 8
  %7 = alloca %"class.std::__1::tuple.272", align 1
  %8 = alloca %"class.std::__1::tuple.287", align 8
  %9 = alloca %"class.std::__1::tuple.272", align 1
  %10 = alloca %"class.spvtools::val::Construct", align 8
  %11 = alloca %"class.std::__1::vector.202", align 8
  %12 = alloca %"class.spvtools::val::Construct", align 8
  %13 = alloca %"class.std::__1::vector.202", align 8
  %14 = alloca %"class.std::__1::vector.202", align 8
  %15 = alloca %"class.std::__1::vector.202", align 8
  %16 = alloca %"class.spvtools::val::BasicBlock"*, align 8
  %17 = alloca [1 x %"class.spvtools::val::BasicBlock"*], align 8
  %18 = alloca %"class.spvtools::val::BasicBlock"*, align 8
  %19 = alloca %"class.spvtools::val::BasicBlock"*, align 8
  %20 = tail call i32 @_ZN8spvtools3val8Function13RegisterBlockEjb(%"class.spvtools::val::Function"* %0, i32 %1, i1 zeroext false)
  %21 = tail call i32 @_ZN8spvtools3val8Function13RegisterBlockEjb(%"class.spvtools::val::Function"* %0, i32 %2, i1 zeroext false)
  %22 = zext i32 %1 to i64
  %23 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %74, label %26

26:                                               ; preds = %3
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #13, !range !2
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, 4294967295
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ugt i64 %24, %22
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %74, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base"* %45, null
  br i1 %46, label %74, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %74

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %1
  br i1 %69, label %75, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base"* %72, null
  br i1 %73, label %74, label %49

74:                                               ; preds = %70, %62, %43, %36, %3
  tail call void @abort() #14
  unreachable

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 3
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %76 to %"class.spvtools::val::BasicBlock"*
  %78 = zext i32 %2 to i64
  br i1 %28, label %82, label %79

79:                                               ; preds = %75
  %80 = add i64 %24, 4294967295
  %81 = and i64 %80, %78
  br label %86

82:                                               ; preds = %75
  %83 = icmp ugt i64 %24, %78
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = urem i64 %78, %24
  br label %86

86:                                               ; preds = %84, %82, %79
  %87 = phi i64 [ %81, %79 ], [ %85, %84 ], [ %78, %82 ]
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, i64 %87
  %89 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base"* %89, null
  br i1 %90, label %120, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %89, i64 0, i32 0
  %93 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %92, align 8
  %94 = icmp eq %"struct.std::__1::__hash_node_base"* %93, null
  br i1 %94, label %120, label %95

95:                                               ; preds = %91, %116
  %96 = phi %"struct.std::__1::__hash_node_base"* [ %118, %116 ], [ %93, %91 ]
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %96, i64 1
  %98 = bitcast %"struct.std::__1::__hash_node_base"* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, %78
  br i1 %100, label %111, label %101

101:                                              ; preds = %95
  br i1 %28, label %104, label %102

102:                                              ; preds = %101
  %103 = and i64 %99, %48
  br label %108

104:                                              ; preds = %101
  %105 = icmp ult i64 %99, %24
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = urem i64 %99, %24
  br label %108

108:                                              ; preds = %106, %104, %102
  %109 = phi i64 [ %103, %102 ], [ %107, %106 ], [ %99, %104 ]
  %110 = icmp eq i64 %109, %87
  br i1 %110, label %116, label %120

111:                                              ; preds = %95
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %96, i64 2
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, %2
  br i1 %115, label %121, label %116

116:                                              ; preds = %111, %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %96, i64 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, align 8
  %119 = icmp eq %"struct.std::__1::__hash_node_base"* %118, null
  br i1 %119, label %120, label %95

120:                                              ; preds = %116, %108, %91, %86
  tail call void @abort() #14
  unreachable

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %96, i64 3
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"class.spvtools::val::BasicBlock"*
  %124 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 10
  %125 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %124, align 8
  %126 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %125, i64 0, i32 5, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = or i64 %127, 4
  store i64 %128, i64* %126, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 12
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = or i64 %131, 8
  store i64 %132, i64* %130, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %96, i64 12
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = or i64 %135, 32
  store i64 %136, i64* %134, align 8
  %137 = bitcast %"class.spvtools::val::Construct"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %137) #13
  %138 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %124, align 8
  %139 = bitcast %"class.std::__1::vector.202"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 24, i1 false) #13
  call void @_ZN8spvtools3val9ConstructC1ENS0_13ConstructTypeEPNS0_10BasicBlockES4_NSt3__16vectorIPS1_NS5_9allocatorIS7_EEEE(%"class.spvtools::val::Construct"* nonnull %10, i32 3, %"class.spvtools::val::BasicBlock"* %138, %"class.spvtools::val::BasicBlock"* %77, %"class.std::__1::vector.202"* nonnull %11) #13
  %140 = call dereferenceable(48) %"class.spvtools::val::Construct"* @_ZN8spvtools3val8Function12AddConstructERKNS0_9ConstructE(%"class.spvtools::val::Function"* %0, %"class.spvtools::val::Construct"* nonnull dereferenceable(48) %10)
  %141 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %10, i64 0, i32 1, i32 0, i32 0
  %142 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %141, align 8
  %143 = icmp eq %"class.spvtools::val::Construct"** %142, null
  br i1 %143, label %149, label %144

144:                                              ; preds = %121
  %145 = ptrtoint %"class.spvtools::val::Construct"** %142 to i64
  %146 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %10, i64 0, i32 1, i32 0, i32 1
  %147 = bitcast %"class.spvtools::val::Construct"*** %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = bitcast %"class.spvtools::val::Construct"** %142 to i8*
  call void @_ZdlPv(i8* %148) #15
  br label %149

149:                                              ; preds = %121, %144
  %150 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %11, i64 0, i32 0, i32 0
  %151 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %150, align 8
  %152 = icmp eq %"class.spvtools::val::Construct"** %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %149
  %154 = ptrtoint %"class.spvtools::val::Construct"** %151 to i64
  %155 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %11, i64 0, i32 0, i32 1
  %156 = bitcast %"class.spvtools::val::Construct"*** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = bitcast %"class.spvtools::val::Construct"** %151 to i8*
  call void @_ZdlPv(i8* %157) #15
  br label %158

158:                                              ; preds = %149, %153
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %137) #13
  %159 = bitcast %"class.spvtools::val::Construct"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %159) #13
  %160 = bitcast %"class.std::__1::vector.202"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 0, i64 24, i1 false) #13
  call void @_ZN8spvtools3val9ConstructC1ENS0_13ConstructTypeEPNS0_10BasicBlockES4_NSt3__16vectorIPS1_NS5_9allocatorIS7_EEEE(%"class.spvtools::val::Construct"* nonnull %12, i32 2, %"class.spvtools::val::BasicBlock"* %123, %"class.spvtools::val::BasicBlock"* null, %"class.std::__1::vector.202"* nonnull %13) #13
  %161 = call dereferenceable(48) %"class.spvtools::val::Construct"* @_ZN8spvtools3val8Function12AddConstructERKNS0_9ConstructE(%"class.spvtools::val::Function"* %0, %"class.spvtools::val::Construct"* nonnull dereferenceable(48) %12)
  %162 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %12, i64 0, i32 1, i32 0, i32 0
  %163 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %162, align 8
  %164 = icmp eq %"class.spvtools::val::Construct"** %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %158
  %166 = ptrtoint %"class.spvtools::val::Construct"** %163 to i64
  %167 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %12, i64 0, i32 1, i32 0, i32 1
  %168 = bitcast %"class.spvtools::val::Construct"*** %167 to i64*
  store i64 %166, i64* %168, align 8
  %169 = bitcast %"class.spvtools::val::Construct"** %163 to i8*
  call void @_ZdlPv(i8* %169) #15
  br label %170

170:                                              ; preds = %158, %165
  %171 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %13, i64 0, i32 0, i32 0
  %172 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %171, align 8
  %173 = icmp eq %"class.spvtools::val::Construct"** %172, null
  br i1 %173, label %179, label %174

174:                                              ; preds = %170
  %175 = ptrtoint %"class.spvtools::val::Construct"** %172 to i64
  %176 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %13, i64 0, i32 0, i32 1
  %177 = bitcast %"class.spvtools::val::Construct"*** %176 to i64*
  store i64 %175, i64* %177, align 8
  %178 = bitcast %"class.spvtools::val::Construct"** %172 to i8*
  call void @_ZdlPv(i8* %178) #15
  br label %179

179:                                              ; preds = %170, %174
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %159) #13
  %180 = call i8* @_Znwm(i64 8) #15
  %181 = bitcast i8* %180 to %"class.spvtools::val::Construct"**
  %182 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %14, i64 0, i32 0, i32 1
  %183 = bitcast %"class.std::__1::vector.202"* %14 to i8**
  store i8* %180, i8** %183, align 8
  %184 = getelementptr inbounds i8, i8* %180, i64 8
  %185 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %186 = bitcast %"class.spvtools::val::Construct"*** %185 to i8**
  store i8* %184, i8** %186, align 8
  %187 = bitcast %"class.spvtools::val::Construct"*** %182 to i64*
  store %"class.spvtools::val::Construct"* %140, %"class.spvtools::val::Construct"** %181, align 8
  %188 = ptrtoint i8* %184 to i64
  store i64 %188, i64* %187, align 8
  call void @_ZN8spvtools3val9Construct28set_corresponding_constructsENSt3__16vectorIPS1_NS2_9allocatorIS4_EEEE(%"class.spvtools::val::Construct"* %161, %"class.std::__1::vector.202"* nonnull %14) #13
  %189 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %14, i64 0, i32 0, i32 0
  %190 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %189, align 8
  %191 = icmp eq %"class.spvtools::val::Construct"** %190, null
  br i1 %191, label %195, label %192

192:                                              ; preds = %179
  %193 = ptrtoint %"class.spvtools::val::Construct"** %190 to i64
  store i64 %193, i64* %187, align 8
  %194 = bitcast %"class.spvtools::val::Construct"** %190 to i8*
  call void @_ZdlPv(i8* %194) #15
  br label %195

195:                                              ; preds = %179, %192
  %196 = call i8* @_Znwm(i64 8) #15
  %197 = bitcast i8* %196 to %"class.spvtools::val::Construct"**
  %198 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %15, i64 0, i32 0, i32 1
  %199 = bitcast %"class.std::__1::vector.202"* %15 to i8**
  store i8* %196, i8** %199, align 8
  %200 = getelementptr inbounds i8, i8* %196, i64 8
  %201 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %202 = bitcast %"class.spvtools::val::Construct"*** %201 to i8**
  store i8* %200, i8** %202, align 8
  %203 = bitcast %"class.spvtools::val::Construct"*** %198 to i64*
  store %"class.spvtools::val::Construct"* %161, %"class.spvtools::val::Construct"** %197, align 8
  %204 = ptrtoint i8* %200 to i64
  store i64 %204, i64* %203, align 8
  call void @_ZN8spvtools3val9Construct28set_corresponding_constructsENSt3__16vectorIPS1_NS2_9allocatorIS4_EEEE(%"class.spvtools::val::Construct"* %140, %"class.std::__1::vector.202"* nonnull %15) #13
  %205 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %15, i64 0, i32 0, i32 0
  %206 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %205, align 8
  %207 = icmp eq %"class.spvtools::val::Construct"** %206, null
  br i1 %207, label %211, label %208

208:                                              ; preds = %195
  %209 = ptrtoint %"class.spvtools::val::Construct"** %206 to i64
  store i64 %209, i64* %203, align 8
  %210 = bitcast %"class.spvtools::val::Construct"** %206 to i8*
  call void @_ZdlPv(i8* %210) #15
  br label %211

211:                                              ; preds = %195, %208
  %212 = bitcast %"class.spvtools::val::BasicBlock"** %124 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = bitcast %"class.spvtools::val::BasicBlock"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #13
  %215 = bitcast %"class.spvtools::val::BasicBlock"** %16 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %76, %"struct.std::__1::__hash_node_base"** %215, align 8
  %216 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 20, i32 0
  %217 = bitcast %"class.std::__1::tuple.287"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #13
  %218 = getelementptr inbounds %"class.std::__1::tuple.287", %"class.std::__1::tuple.287"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %16, %"class.spvtools::val::BasicBlock"*** %218, align 8
  %219 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %219) #13
  %220 = call { %"struct.std::__1::__hash_node_base.110"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.106"* %216, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.287"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %7) #13
  %221 = extractvalue { %"struct.std::__1::__hash_node_base.110"*, i8 } %220, 0
  %222 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %221, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %219) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #13
  %223 = bitcast %"struct.std::__1::__hash_node_base.110"* %222 to i64*
  store i64 %213, i64* %223, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #13
  %224 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 21
  %225 = ptrtoint %"struct.std::__1::__hash_node_base"* %122 to i64
  %226 = lshr i64 %225, 32
  %227 = shl i64 %225, 3
  %228 = and i64 %227, 4294967288
  %229 = add nuw nsw i64 %228, 8
  %230 = xor i64 %229, %226
  %231 = mul i64 %230, -7070675565921424023
  %232 = lshr i64 %231, 47
  %233 = xor i64 %231, %226
  %234 = xor i64 %233, %232
  %235 = mul i64 %234, -7070675565921424023
  %236 = lshr i64 %235, 47
  %237 = xor i64 %236, %235
  %238 = mul i64 %237, -7070675565921424023
  %239 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %290, label %242

242:                                              ; preds = %211
  %243 = call i64 @llvm.ctpop.i64(i64 %240) #13, !range !2
  %244 = icmp ugt i64 %243, 1
  br i1 %244, label %248, label %245

245:                                              ; preds = %242
  %246 = add i64 %240, -1
  %247 = and i64 %246, %238
  br label %252

248:                                              ; preds = %242
  %249 = icmp ult i64 %238, %240
  br i1 %249, label %252, label %250

250:                                              ; preds = %248
  %251 = urem i64 %238, %240
  br label %252

252:                                              ; preds = %250, %248, %245
  %253 = phi i64 [ %247, %245 ], [ %251, %250 ], [ %238, %248 ]
  %254 = getelementptr inbounds %"class.std::__1::unordered_map.133", %"class.std::__1::unordered_map.133"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %254, align 8
  %256 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %255, i64 %253
  %257 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %256, align 8
  %258 = icmp eq %"struct.std::__1::__hash_node_base.138"* %257, null
  br i1 %258, label %290, label %259

259:                                              ; preds = %252
  %260 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %257, i64 0, i32 0
  %261 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %260, align 8
  %262 = icmp eq %"struct.std::__1::__hash_node_base.138"* %261, null
  br i1 %262, label %290, label %263

263:                                              ; preds = %259
  %264 = add i64 %240, -1
  br label %265

265:                                              ; preds = %286, %263
  %266 = phi %"struct.std::__1::__hash_node_base.138"* [ %261, %263 ], [ %288, %286 ]
  %267 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %266, i64 1
  %268 = bitcast %"struct.std::__1::__hash_node_base.138"* %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = icmp eq i64 %269, %238
  br i1 %270, label %281, label %271

271:                                              ; preds = %265
  br i1 %244, label %274, label %272

272:                                              ; preds = %271
  %273 = and i64 %269, %264
  br label %278

274:                                              ; preds = %271
  %275 = icmp ult i64 %269, %240
  br i1 %275, label %278, label %276

276:                                              ; preds = %274
  %277 = urem i64 %269, %240
  br label %278

278:                                              ; preds = %276, %274, %272
  %279 = phi i64 [ %273, %272 ], [ %277, %276 ], [ %269, %274 ]
  %280 = icmp eq i64 %279, %253
  br i1 %280, label %286, label %290

281:                                              ; preds = %265
  %282 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %266, i64 2
  %283 = bitcast %"struct.std::__1::__hash_node_base.138"* %282 to %"class.spvtools::val::BasicBlock"**
  %284 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %283, align 8
  %285 = icmp eq %"class.spvtools::val::BasicBlock"* %284, %123
  br i1 %285, label %306, label %286

286:                                              ; preds = %281, %278
  %287 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %266, i64 0, i32 0
  %288 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %287, align 8
  %289 = icmp eq %"struct.std::__1::__hash_node_base.138"* %288, null
  br i1 %289, label %290, label %265

290:                                              ; preds = %278, %286, %252, %211, %259
  %291 = bitcast [1 x %"class.spvtools::val::BasicBlock"*]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291) #13
  %292 = getelementptr inbounds [1 x %"class.spvtools::val::BasicBlock"*], [1 x %"class.spvtools::val::BasicBlock"*]* %17, i64 0, i64 0
  %293 = load i64, i64* %212, align 8
  %294 = bitcast [1 x %"class.spvtools::val::BasicBlock"*]* %17 to i64*
  store i64 %293, i64* %294, align 8
  %295 = bitcast %"class.spvtools::val::BasicBlock"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %295) #13
  %296 = bitcast %"class.spvtools::val::BasicBlock"** %18 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %122, %"struct.std::__1::__hash_node_base"** %296, align 8
  %297 = getelementptr inbounds %"class.std::__1::unordered_map.133", %"class.std::__1::unordered_map.133"* %224, i64 0, i32 0
  %298 = bitcast %"class.std::__1::tuple.287"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %298) #13
  %299 = getelementptr inbounds %"class.std::__1::tuple.287", %"class.std::__1::tuple.287"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %18, %"class.spvtools::val::BasicBlock"*** %299, align 8
  %300 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %300) #13
  %301 = call { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SF_SD_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"* %297, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %18, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.287"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %5) #13
  %302 = extractvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %301, 0
  %303 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %302, i64 3
  %304 = bitcast %"struct.std::__1::__hash_node_base.138"* %303 to %"class.std::__1::vector"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %300) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %298) #13
  %305 = getelementptr inbounds [1 x %"class.spvtools::val::BasicBlock"*], [1 x %"class.spvtools::val::BasicBlock"*]* %17, i64 0, i64 1
  call void @_ZNSt3__16vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS4_EEE6assignIPKS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %304, %"class.spvtools::val::BasicBlock"** nonnull %292, %"class.spvtools::val::BasicBlock"** %305) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %295) #13
  br label %388

306:                                              ; preds = %281
  %307 = bitcast %"class.spvtools::val::BasicBlock"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %307) #13
  %308 = bitcast %"class.spvtools::val::BasicBlock"** %19 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %122, %"struct.std::__1::__hash_node_base"** %308, align 8
  %309 = getelementptr inbounds %"class.std::__1::unordered_map.133", %"class.std::__1::unordered_map.133"* %224, i64 0, i32 0
  %310 = bitcast %"class.std::__1::tuple.287"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %310) #13
  %311 = getelementptr inbounds %"class.std::__1::tuple.287", %"class.std::__1::tuple.287"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %19, %"class.spvtools::val::BasicBlock"*** %311, align 8
  %312 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %312) #13
  %313 = call { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SF_SD_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"* %309, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %19, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.287"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %9) #13
  %314 = extractvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %313, 0
  %315 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %314, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %312) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %310) #13
  %316 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %314, i64 4
  %317 = bitcast %"struct.std::__1::__hash_node_base.138"* %316 to %"class.spvtools::val::BasicBlock"***
  %318 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %317, align 8
  %319 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %314, i64 5
  %320 = bitcast %"struct.std::__1::__hash_node_base.138"* %319 to %"class.spvtools::val::BasicBlock"***
  %321 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %320, align 8
  %322 = icmp eq %"class.spvtools::val::BasicBlock"** %318, %321
  %323 = ptrtoint %"class.spvtools::val::BasicBlock"** %321 to i64
  br i1 %322, label %330, label %324

324:                                              ; preds = %306
  %325 = load i64, i64* %212, align 8
  %326 = bitcast %"class.spvtools::val::BasicBlock"** %318 to i64*
  store i64 %325, i64* %326, align 8
  %327 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %318, i64 1
  %328 = ptrtoint %"class.spvtools::val::BasicBlock"** %327 to i64
  %329 = bitcast %"struct.std::__1::__hash_node_base.138"* %316 to i64*
  store i64 %328, i64* %329, align 8
  br label %388

330:                                              ; preds = %306
  %331 = ptrtoint %"class.spvtools::val::BasicBlock"** %318 to i64
  %332 = bitcast %"struct.std::__1::__hash_node_base.138"* %316 to i64*
  %333 = bitcast %"struct.std::__1::__hash_node_base.138"* %315 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = sub i64 %331, %334
  %336 = ashr exact i64 %335, 3
  %337 = add nsw i64 %336, 1
  %338 = icmp ugt i64 %337, 2305843009213693951
  br i1 %338, label %339, label %341

339:                                              ; preds = %330
  %340 = bitcast %"struct.std::__1::__hash_node_base.138"* %315 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %340) #14
  unreachable

341:                                              ; preds = %330
  %342 = bitcast %"struct.std::__1::__hash_node_base.138"* %319 to i64*
  %343 = sub i64 %323, %334
  %344 = ashr exact i64 %343, 3
  %345 = icmp ult i64 %344, 1152921504606846975
  br i1 %345, label %346, label %354

346:                                              ; preds = %341
  %347 = ashr exact i64 %343, 2
  %348 = icmp ult i64 %347, %337
  %349 = select i1 %348, i64 %337, i64 %347
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %359, label %351

351:                                              ; preds = %346
  %352 = icmp ugt i64 %349, 2305843009213693951
  br i1 %352, label %353, label %354

353:                                              ; preds = %351
  call void @abort() #14
  unreachable

354:                                              ; preds = %351, %341
  %355 = phi i64 [ %349, %351 ], [ 2305843009213693951, %341 ]
  %356 = shl i64 %355, 3
  %357 = call i8* @_Znwm(i64 %356) #15
  %358 = bitcast i8* %357 to %"class.spvtools::val::BasicBlock"**
  br label %359

359:                                              ; preds = %354, %346
  %360 = phi i64 [ %355, %354 ], [ 0, %346 ]
  %361 = phi %"class.spvtools::val::BasicBlock"** [ %358, %354 ], [ null, %346 ]
  %362 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %361, i64 %336
  %363 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %361, i64 %360
  %364 = ptrtoint %"class.spvtools::val::BasicBlock"** %363 to i64
  %365 = load i64, i64* %212, align 8
  %366 = bitcast %"class.spvtools::val::BasicBlock"** %362 to i64*
  store i64 %365, i64* %366, align 8
  %367 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %362, i64 1
  %368 = ptrtoint %"class.spvtools::val::BasicBlock"** %367 to i64
  %369 = bitcast %"struct.std::__1::__hash_node_base.138"* %315 to %"class.spvtools::val::BasicBlock"***
  %370 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %369, align 8
  %371 = load i64, i64* %332, align 8
  %372 = ptrtoint %"class.spvtools::val::BasicBlock"** %370 to i64
  %373 = sub i64 %371, %372
  %374 = ashr exact i64 %373, 3
  %375 = sub nsw i64 0, %374
  %376 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %362, i64 %375
  %377 = ptrtoint %"class.spvtools::val::BasicBlock"** %376 to i64
  %378 = icmp sgt i64 %373, 0
  br i1 %378, label %379, label %383

379:                                              ; preds = %359
  %380 = bitcast %"class.spvtools::val::BasicBlock"** %376 to i8*
  %381 = bitcast %"class.spvtools::val::BasicBlock"** %370 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %380, i8* align 8 %381, i64 %373, i1 false) #13
  %382 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %369, align 8
  br label %383

383:                                              ; preds = %379, %359
  %384 = phi %"class.spvtools::val::BasicBlock"** [ %370, %359 ], [ %382, %379 ]
  store i64 %377, i64* %333, align 8
  store i64 %368, i64* %332, align 8
  store i64 %364, i64* %342, align 8
  %385 = icmp eq %"class.spvtools::val::BasicBlock"** %384, null
  br i1 %385, label %388, label %386

386:                                              ; preds = %383
  %387 = bitcast %"class.spvtools::val::BasicBlock"** %384 to i8*
  call void @_ZdlPv(i8* %387) #15
  br label %388

388:                                              ; preds = %386, %383, %324, %290
  %389 = phi i8* [ %291, %290 ], [ %307, %324 ], [ %307, %383 ], [ %307, %386 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %389) #13
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3val8Function13RegisterBlockEjb(%"class.spvtools::val::Function"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"struct.std::__1::pair.212", align 8
  %6 = alloca %"class.spvtools::val::BasicBlock", align 8
  store i32 %1, i32* %4, align 4
  %7 = bitcast %"struct.std::__1::pair.212"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %7) #13
  %8 = bitcast %"class.spvtools::val::BasicBlock"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %8) #13
  call void @_ZN8spvtools3val10BasicBlockC1Ej(%"class.spvtools::val::BasicBlock"* nonnull %6, i32 %1) #13
  %9 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %5, i64 0, i32 0
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %5, i64 0, i32 1
  %11 = bitcast %"class.spvtools::val::BasicBlock"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %8, i64 24, i1 false) #13
  %12 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %5, i64 0, i32 1, i32 3
  %13 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %6, i64 0, i32 3
  %14 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %6, i64 0, i32 3, i32 0, i32 1
  %15 = bitcast %"class.spvtools::val::BasicBlock"*** %14 to i64*
  %16 = bitcast %"class.std::__1::vector"* %13 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %5, i64 0, i32 1, i32 3, i32 0, i32 1
  %19 = bitcast %"class.spvtools::val::BasicBlock"*** %18 to i64*
  %20 = bitcast %"class.std::__1::vector"* %12 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %20, align 8
  %21 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %6, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.spvtools::val::BasicBlock"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %5, i64 0, i32 1, i32 3, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.spvtools::val::BasicBlock"*** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"class.std::__1::vector"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #13
  %27 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %5, i64 0, i32 1, i32 4
  %28 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %6, i64 0, i32 4
  %29 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %6, i64 0, i32 4, i32 0, i32 1
  %30 = bitcast %"class.spvtools::val::BasicBlock"*** %29 to i64*
  %31 = bitcast %"class.std::__1::vector"* %28 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  %33 = bitcast %"class.std::__1::vector"* %27 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %33, align 8
  %34 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %6, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.spvtools::val::BasicBlock"*** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %5, i64 0, i32 1, i32 4, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"class.spvtools::val::BasicBlock"*** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast %"class.std::__1::vector"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #13
  %40 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %5, i64 0, i32 1, i32 5
  %41 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %6, i64 0, i32 5
  %42 = bitcast %"class.std::__1::bitset"* %40 to i8*
  %43 = bitcast %"class.std::__1::bitset"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 32, i1 false) #13
  %44 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 7, i32 0
  %45 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3val10BasicBlockEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIjJNS_4pairIKjS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %44, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::pair.212"* nonnull dereferenceable(112) %5) #13
  %46 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %45, 0
  %47 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %45, 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %5, i64 0, i32 1, i32 4, i32 0, i32 0
  %49 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %48, align 8
  %50 = icmp eq %"class.spvtools::val::BasicBlock"** %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %3
  %52 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %5, i64 0, i32 1, i32 4, i32 0, i32 1
  %53 = bitcast %"class.spvtools::val::BasicBlock"*** %52 to i64*
  %54 = ptrtoint %"class.spvtools::val::BasicBlock"** %49 to i64
  store i64 %54, i64* %53, align 8
  %55 = bitcast %"class.spvtools::val::BasicBlock"** %49 to i8*
  call void @_ZdlPv(i8* %55) #15
  br label %56

56:                                               ; preds = %51, %3
  %57 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %5, i64 0, i32 1, i32 3, i32 0, i32 0
  %58 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %57, align 8
  %59 = icmp eq %"class.spvtools::val::BasicBlock"** %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = ptrtoint %"class.spvtools::val::BasicBlock"** %58 to i64
  store i64 %61, i64* %19, align 8
  %62 = bitcast %"class.spvtools::val::BasicBlock"** %58 to i8*
  call void @_ZdlPv(i8* %62) #15
  br label %63

63:                                               ; preds = %56, %60
  %64 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %6, i64 0, i32 4, i32 0, i32 0
  %65 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %64, align 8
  %66 = icmp eq %"class.spvtools::val::BasicBlock"** %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = ptrtoint %"class.spvtools::val::BasicBlock"** %65 to i64
  store i64 %68, i64* %30, align 8
  %69 = bitcast %"class.spvtools::val::BasicBlock"** %65 to i8*
  call void @_ZdlPv(i8* %69) #15
  br label %70

70:                                               ; preds = %67, %63
  %71 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %6, i64 0, i32 3, i32 0, i32 0
  %72 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %71, align 8
  %73 = icmp eq %"class.spvtools::val::BasicBlock"** %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = ptrtoint %"class.spvtools::val::BasicBlock"** %72 to i64
  store i64 %75, i64* %15, align 8
  %76 = bitcast %"class.spvtools::val::BasicBlock"** %72 to i8*
  call void @_ZdlPv(i8* %76) #15
  br label %77

77:                                               ; preds = %70, %74
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %7) #13
  br i1 %2, label %78, label %154

78:                                               ; preds = %77
  %79 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 9, i32 0
  %80 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.19"* %79, i32* nonnull dereferenceable(4) %4) #13
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 3
  %82 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 10
  %83 = bitcast %"class.spvtools::val::BasicBlock"** %82 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %81, %"struct.std::__1::__hash_node_base"** %83, align 8
  %84 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8
  %85 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8, i32 0, i32 1
  %86 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %85, align 8
  %87 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %88 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %87, align 8
  %89 = icmp eq %"class.spvtools::val::BasicBlock"** %86, %88
  %90 = ptrtoint %"class.spvtools::val::BasicBlock"** %88 to i64
  %91 = ptrtoint %"struct.std::__1::__hash_node_base"* %81 to i64
  br i1 %89, label %97, label %92

92:                                               ; preds = %78
  %93 = bitcast %"class.spvtools::val::BasicBlock"** %86 to i64*
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %86, i64 1
  %95 = ptrtoint %"class.spvtools::val::BasicBlock"** %94 to i64
  %96 = bitcast %"class.spvtools::val::BasicBlock"*** %85 to i64*
  store i64 %95, i64* %96, align 8
  br label %159

97:                                               ; preds = %78
  %98 = ptrtoint %"class.spvtools::val::BasicBlock"** %86 to i64
  %99 = bitcast %"class.spvtools::val::BasicBlock"*** %85 to i64*
  %100 = bitcast %"class.std::__1::vector"* %84 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %98, %101
  %103 = ashr exact i64 %102, 3
  %104 = add nsw i64 %103, 1
  %105 = icmp ugt i64 %104, 2305843009213693951
  br i1 %105, label %106, label %108

106:                                              ; preds = %97
  %107 = bitcast %"class.std::__1::vector"* %84 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %107) #14
  unreachable

108:                                              ; preds = %97
  %109 = bitcast %"class.spvtools::val::BasicBlock"*** %87 to i64*
  %110 = sub i64 %90, %101
  %111 = ashr exact i64 %110, 3
  %112 = icmp ult i64 %111, 1152921504606846975
  br i1 %112, label %113, label %121

113:                                              ; preds = %108
  %114 = ashr exact i64 %110, 2
  %115 = icmp ult i64 %114, %104
  %116 = select i1 %115, i64 %104, i64 %114
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %126, label %118

118:                                              ; preds = %113
  %119 = icmp ugt i64 %116, 2305843009213693951
  br i1 %119, label %120, label %121

120:                                              ; preds = %118
  call void @abort() #14
  unreachable

121:                                              ; preds = %118, %108
  %122 = phi i64 [ %116, %118 ], [ 2305843009213693951, %108 ]
  %123 = shl i64 %122, 3
  %124 = call i8* @_Znwm(i64 %123) #15
  %125 = bitcast i8* %124 to %"class.spvtools::val::BasicBlock"**
  br label %126

126:                                              ; preds = %121, %113
  %127 = phi i64 [ %122, %121 ], [ 0, %113 ]
  %128 = phi %"class.spvtools::val::BasicBlock"** [ %125, %121 ], [ null, %113 ]
  %129 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %128, i64 %103
  %130 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %128, i64 %127
  %131 = ptrtoint %"class.spvtools::val::BasicBlock"** %130 to i64
  %132 = bitcast %"class.spvtools::val::BasicBlock"** %129 to i64*
  store i64 %91, i64* %132, align 8
  %133 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %129, i64 1
  %134 = ptrtoint %"class.spvtools::val::BasicBlock"** %133 to i64
  %135 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %84, i64 0, i32 0, i32 0
  %136 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %135, align 8
  %137 = load i64, i64* %99, align 8
  %138 = ptrtoint %"class.spvtools::val::BasicBlock"** %136 to i64
  %139 = sub i64 %137, %138
  %140 = ashr exact i64 %139, 3
  %141 = sub nsw i64 0, %140
  %142 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %129, i64 %141
  %143 = ptrtoint %"class.spvtools::val::BasicBlock"** %142 to i64
  %144 = icmp sgt i64 %139, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %126
  %146 = bitcast %"class.spvtools::val::BasicBlock"** %142 to i8*
  %147 = bitcast %"class.spvtools::val::BasicBlock"** %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 %139, i1 false) #13
  %148 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %135, align 8
  br label %149

149:                                              ; preds = %145, %126
  %150 = phi %"class.spvtools::val::BasicBlock"** [ %136, %126 ], [ %148, %145 ]
  store i64 %143, i64* %100, align 8
  store i64 %134, i64* %99, align 8
  store i64 %131, i64* %109, align 8
  %151 = icmp eq %"class.spvtools::val::BasicBlock"** %150, null
  br i1 %151, label %159, label %152

152:                                              ; preds = %149
  %153 = bitcast %"class.spvtools::val::BasicBlock"** %150 to i8*
  call void @_ZdlPv(i8* %153) #15
  br label %159

154:                                              ; preds = %77
  %155 = icmp eq i8 %47, 0
  br i1 %155, label %159, label %156

156:                                              ; preds = %154
  %157 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 9, i32 0
  %158 = call { %"struct.std::__1::__hash_node_base.23"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.19"* %157, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %4) #13
  br label %159

159:                                              ; preds = %152, %149, %92, %154, %156
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.spvtools::val::Construct"* @_ZN8spvtools3val8Function12AddConstructERKNS0_9ConstructE(%"class.spvtools::val::Function"*, %"class.spvtools::val::Construct"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.425", align 8
  %4 = alloca %"class.std::__1::tuple.272", align 1
  %5 = alloca { %"class.spvtools::val::BasicBlock"*, i32 }, align 8
  %6 = bitcast { %"class.spvtools::val::BasicBlock"*, i32 }* %5 to %"struct.std::__1::pair.235"*
  %7 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 16
  %8 = tail call i8* @_Znwm(i64 64) #15, !noalias !3
  %9 = bitcast i8* %8 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %9, align 8, !noalias !3
  %10 = getelementptr inbounds i8, i8* %8, i64 16
  %11 = bitcast i8* %10 to i32*
  %12 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 24
  %15 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %1, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #13
  %16 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %1, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast %"class.spvtools::val::Construct"*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.202"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %2
  %25 = icmp ugt i64 %22, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast i8* %14 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #14
  unreachable

28:                                               ; preds = %24
  %29 = tail call i8* @_Znwm(i64 %21) #15
  %30 = bitcast i8* %29 to %"class.spvtools::val::Construct"**
  %31 = getelementptr inbounds i8, i8* %8, i64 32
  %32 = bitcast i8* %31 to i8**
  store i8* %29, i8** %32, align 8
  %33 = bitcast i8* %14 to i8**
  store i8* %29, i8** %33, align 8
  %34 = getelementptr inbounds %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %30, i64 %22
  %35 = getelementptr inbounds i8, i8* %8, i64 40
  %36 = bitcast i8* %35 to %"class.spvtools::val::Construct"***
  store %"class.spvtools::val::Construct"** %34, %"class.spvtools::val::Construct"*** %36, align 8
  %37 = bitcast i8* %31 to i64*
  %38 = ptrtoint i8* %29 to i64
  %39 = icmp sgt i64 %21, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %28
  %41 = lshr exact i64 %21, 3
  %42 = inttoptr i64 %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %42, i64 %21, i1 false) #13
  %43 = getelementptr inbounds %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %30, i64 %41
  %44 = ptrtoint %"class.spvtools::val::Construct"** %43 to i64
  br label %45

45:                                               ; preds = %40, %28
  %46 = phi i64 [ %44, %40 ], [ %38, %28 ]
  store i64 %46, i64* %37, align 8
  br label %47

47:                                               ; preds = %2, %45
  %48 = getelementptr inbounds i8, i8* %8, i64 48
  %49 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %1, i64 0, i32 2
  %50 = bitcast %"class.spvtools::val::BasicBlock"** %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %50, i64 16, i1 false) #13
  %51 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %7, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds i8, i8* %8, i64 8
  %53 = bitcast i8* %52 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %51, %"struct.std::__1::__list_node_base"** %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %7, i64 0, i32 0, i32 0, i32 0
  %55 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %54, align 8
  store %"struct.std::__1::__list_node_base"* %55, %"struct.std::__1::__list_node_base"** %9, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %55, i64 0, i32 1
  %57 = bitcast %"struct.std::__1::__list_node_base"** %56 to i8**
  store i8* %8, i8** %57, align 8
  %58 = bitcast %"class.std::__1::list"* %7 to i8**
  store i8* %8, i8** %58, align 8
  %59 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %59, align 8
  %62 = bitcast i8* %10 to %"class.spvtools::val::Construct"*
  %63 = bitcast { %"class.spvtools::val::BasicBlock"*, i32 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #13
  %64 = tail call %"class.spvtools::val::BasicBlock"* @_ZNK8spvtools3val9Construct11entry_blockEv(%"class.spvtools::val::Construct"* %1) #13
  %65 = tail call i32 @_ZNK8spvtools3val9Construct4typeEv(%"class.spvtools::val::Construct"* %1) #13
  %66 = getelementptr inbounds { %"class.spvtools::val::BasicBlock"*, i32 }, { %"class.spvtools::val::BasicBlock"*, i32 }* %5, i64 0, i32 0
  store %"class.spvtools::val::BasicBlock"* %64, %"class.spvtools::val::BasicBlock"** %66, align 8
  %67 = getelementptr inbounds { %"class.spvtools::val::BasicBlock"*, i32 }, { %"class.spvtools::val::BasicBlock"*, i32 }* %5, i64 0, i32 1
  store i32 %65, i32* %67, align 8
  %68 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 19, i32 0
  %69 = bitcast %"class.std::__1::tuple.425"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #13
  %70 = bitcast %"class.std::__1::tuple.425"* %3 to { %"class.spvtools::val::BasicBlock"*, i32 }**
  store { %"class.spvtools::val::BasicBlock"*, i32 }* %5, { %"class.spvtools::val::BasicBlock"*, i32 }** %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %71) #13
  %72 = call { %"struct.std::__1::__hash_node_base.84"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIPKN8spvtools3val10BasicBlockENS4_13ConstructTypeEEEPNS4_9ConstructEEENS_22__unordered_map_hasherIS9_SC_NS4_24bb_constr_type_pair_hashENS_8equal_toIS9_EELb1EEENS_21__unordered_map_equalIS9_SC_SG_SE_Lb1EEENS_9allocatorISC_EEE25__emplace_unique_key_argsIS9_JRKNS_21piecewise_construct_tENS_5tupleIJOS9_EEENSR_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.80"* %68, %"struct.std::__1::pair.235"* nonnull dereferenceable(16) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.425"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %4) #13
  %73 = extractvalue { %"struct.std::__1::__hash_node_base.84"*, i8 } %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %73, i64 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13
  %75 = bitcast %"struct.std::__1::__hash_node_base.84"* %74 to i8**
  store i8* %10, i8** %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #13
  ret %"class.spvtools::val::Construct"* %62
}

declare void @_ZN8spvtools3val9ConstructC1ENS0_13ConstructTypeEPNS0_10BasicBlockES4_NSt3__16vectorIPS1_NS5_9allocatorIS7_EEEE(%"class.spvtools::val::Construct"*, i32, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*, %"class.std::__1::vector.202"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN8spvtools3val9Construct28set_corresponding_constructsENSt3__16vectorIPS1_NS2_9allocatorIS4_EEEE(%"class.spvtools::val::Construct"*, %"class.std::__1::vector.202"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3val8Function22RegisterSelectionMergeEj(%"class.spvtools::val::Function"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.287", align 8
  %4 = alloca %"class.std::__1::tuple.272", align 1
  %5 = alloca %"class.spvtools::val::BasicBlock"*, align 8
  %6 = alloca %"class.spvtools::val::Construct", align 8
  %7 = alloca %"class.std::__1::vector.202", align 8
  %8 = tail call i32 @_ZN8spvtools3val8Function13RegisterBlockEjb(%"class.spvtools::val::Function"* %0, i32 %1, i1 zeroext false)
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %61, label %13

13:                                               ; preds = %2
  %14 = tail call i64 @llvm.ctpop.i64(i64 %11) #13, !range !2
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %11, 4294967295
  %18 = and i64 %17, %9
  br label %23

19:                                               ; preds = %13
  %20 = icmp ugt i64 %11, %9
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %9, %11
  br label %23

23:                                               ; preds = %21, %19, %16
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %9, %19 ]
  %25 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %61, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %28, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %61, label %34

34:                                               ; preds = %30
  %35 = add i64 %11, -1
  br label %36

36:                                               ; preds = %57, %34
  %37 = phi %"struct.std::__1::__hash_node_base"* [ %32, %34 ], [ %59, %57 ]
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %9
  br i1 %41, label %52, label %42

42:                                               ; preds = %36
  br i1 %15, label %45, label %43

43:                                               ; preds = %42
  %44 = and i64 %40, %35
  br label %49

45:                                               ; preds = %42
  %46 = icmp ult i64 %40, %11
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %40, %11
  br label %49

49:                                               ; preds = %47, %45, %43
  %50 = phi i64 [ %44, %43 ], [ %48, %47 ], [ %40, %45 ]
  %51 = icmp eq i64 %50, %24
  br i1 %51, label %57, label %61

52:                                               ; preds = %36
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base"* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %62, label %57

57:                                               ; preds = %52, %49
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node_base"* %59, null
  br i1 %60, label %61, label %36

61:                                               ; preds = %57, %49, %30, %23, %2
  tail call void @abort() #14
  unreachable

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 3
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to %"class.spvtools::val::BasicBlock"*
  %65 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 10
  %66 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %66, i64 0, i32 5, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = or i64 %68, 2
  store i64 %69, i64* %67, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 12
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = or i64 %72, 8
  store i64 %73, i64* %71, align 8
  %74 = bitcast %"class.spvtools::val::BasicBlock"** %65 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.spvtools::val::BasicBlock"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #13
  %77 = bitcast %"class.spvtools::val::BasicBlock"** %5 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %63, %"struct.std::__1::__hash_node_base"** %77, align 8
  %78 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 20, i32 0
  %79 = bitcast %"class.std::__1::tuple.287"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #13
  %80 = getelementptr inbounds %"class.std::__1::tuple.287", %"class.std::__1::tuple.287"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %5, %"class.spvtools::val::BasicBlock"*** %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %81) #13
  %82 = call { %"struct.std::__1::__hash_node_base.110"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.106"* %78, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.287"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %4) #13
  %83 = extractvalue { %"struct.std::__1::__hash_node_base.110"*, i8 } %82, 0
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %83, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %81) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #13
  %85 = bitcast %"struct.std::__1::__hash_node_base.110"* %84 to i64*
  store i64 %75, i64* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #13
  %86 = bitcast %"class.spvtools::val::Construct"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %86) #13
  %87 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %65, align 8
  %88 = bitcast %"class.std::__1::vector.202"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 0, i64 24, i1 false) #13
  call void @_ZN8spvtools3val9ConstructC1ENS0_13ConstructTypeEPNS0_10BasicBlockES4_NSt3__16vectorIPS1_NS5_9allocatorIS7_EEEE(%"class.spvtools::val::Construct"* nonnull %6, i32 1, %"class.spvtools::val::BasicBlock"* %87, %"class.spvtools::val::BasicBlock"* %64, %"class.std::__1::vector.202"* nonnull %7) #13
  %89 = call dereferenceable(48) %"class.spvtools::val::Construct"* @_ZN8spvtools3val8Function12AddConstructERKNS0_9ConstructE(%"class.spvtools::val::Function"* %0, %"class.spvtools::val::Construct"* nonnull dereferenceable(48) %6)
  %90 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %6, i64 0, i32 1, i32 0, i32 0
  %91 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %90, align 8
  %92 = icmp eq %"class.spvtools::val::Construct"** %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %62
  %94 = ptrtoint %"class.spvtools::val::Construct"** %91 to i64
  %95 = getelementptr inbounds %"class.spvtools::val::Construct", %"class.spvtools::val::Construct"* %6, i64 0, i32 1, i32 0, i32 1
  %96 = bitcast %"class.spvtools::val::Construct"*** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = bitcast %"class.spvtools::val::Construct"** %91 to i8*
  call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %62, %93
  %99 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %7, i64 0, i32 0, i32 0
  %100 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %99, align 8
  %101 = icmp eq %"class.spvtools::val::Construct"** %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = ptrtoint %"class.spvtools::val::Construct"** %100 to i64
  %104 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %7, i64 0, i32 0, i32 1
  %105 = bitcast %"class.spvtools::val::Construct"*** %104 to i64*
  store i64 %103, i64* %105, align 8
  %106 = bitcast %"class.spvtools::val::Construct"** %100 to i8*
  call void @_ZdlPv(i8* %106) #15
  br label %107

107:                                              ; preds = %98, %102
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %86) #13
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.spvtools::val::BasicBlock"* @_ZN8spvtools3val8Function13current_blockEv(%"class.spvtools::val::Function"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 10
  %3 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, align 8
  ret %"class.spvtools::val::BasicBlock"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN8spvtools3val8Function27RegisterSetFunctionDeclTypeENS0_12FunctionDeclE(%"class.spvtools::val::Function"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 4
  store i32 %1, i32* %3, align 8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3val8Function16RegisterBlockEndENSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::val::Function"*, %"class.std::__1::vector.72"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.322", align 8
  %4 = alloca %"class.std::__1::tuple.272", align 1
  %5 = alloca %"class.std::__1::vector", align 16
  %6 = alloca i32, align 4
  %7 = alloca %"struct.std::__1::pair.212", align 8
  %8 = alloca %"class.spvtools::val::BasicBlock", align 8
  %9 = alloca %"class.spvtools::val::BasicBlock"*, align 8
  %10 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 24, i1 false) #13
  %14 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %1, i64 0, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.72"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 2
  %21 = bitcast %"class.spvtools::val::BasicBlock"*** %13 to i64*
  %22 = bitcast %"class.std::__1::vector"* %5 to i64*
  %23 = icmp eq i64 %19, 0
  %24 = inttoptr i64 %18 to i32*
  %25 = inttoptr i64 %16 to i32*
  br i1 %23, label %39, label %26

26:                                               ; preds = %2
  %27 = icmp ugt i64 %20, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %26
  %30 = shl i64 %19, 1
  %31 = tail call i8* @_Znwm(i64 %30) #15
  %32 = bitcast i8* %31 to %"class.spvtools::val::BasicBlock"**
  %33 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %32, i64 %20
  %34 = ptrtoint %"class.spvtools::val::BasicBlock"** %33 to i64
  %35 = insertelement <2 x i8*> undef, i8* %31, i32 0
  %36 = shufflevector <2 x i8*> %35, <2 x i8*> undef, <2 x i32> zeroinitializer
  %37 = ptrtoint <2 x i8*> %36 to <2 x i64>
  %38 = bitcast %"class.std::__1::vector"* %5 to <2 x i64>*
  store <2 x i64> %37, <2 x i64>* %38, align 16
  store i64 %34, i64* %21, align 16
  br label %39

39:                                               ; preds = %29, %2
  %40 = icmp eq i32* %24, %25
  br i1 %40, label %85, label %41

41:                                               ; preds = %39
  %42 = bitcast i32* %6 to i8*
  %43 = bitcast %"struct.std::__1::pair.212"* %7 to i8*
  %44 = bitcast %"class.spvtools::val::BasicBlock"* %8 to i8*
  %45 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %7, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %7, i64 0, i32 1
  %47 = bitcast %"class.spvtools::val::BasicBlock"* %46 to i8*
  %48 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %7, i64 0, i32 1, i32 3
  %49 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %8, i64 0, i32 3
  %50 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %8, i64 0, i32 3, i32 0, i32 1
  %51 = bitcast %"class.spvtools::val::BasicBlock"*** %50 to i64*
  %52 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %7, i64 0, i32 1, i32 3, i32 0, i32 1
  %53 = bitcast %"class.spvtools::val::BasicBlock"*** %52 to i64*
  %54 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %8, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast %"class.spvtools::val::BasicBlock"*** %54 to i64*
  %56 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %7, i64 0, i32 1, i32 3, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast %"class.spvtools::val::BasicBlock"*** %56 to i64*
  %58 = bitcast %"class.std::__1::vector"* %49 to i8*
  %59 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %7, i64 0, i32 1, i32 4
  %60 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %8, i64 0, i32 4
  %61 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %8, i64 0, i32 4, i32 0, i32 1
  %62 = bitcast %"class.spvtools::val::BasicBlock"*** %61 to i64*
  %63 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %7, i64 0, i32 1, i32 4, i32 0, i32 1
  %64 = bitcast %"class.spvtools::val::BasicBlock"*** %63 to i64*
  %65 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %8, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast %"class.spvtools::val::BasicBlock"*** %65 to i64*
  %67 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %7, i64 0, i32 1, i32 4, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast %"class.spvtools::val::BasicBlock"*** %67 to i64*
  %69 = bitcast %"class.std::__1::vector"* %60 to i8*
  %70 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %7, i64 0, i32 1, i32 5
  %71 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %8, i64 0, i32 5
  %72 = bitcast %"class.std::__1::bitset"* %70 to i8*
  %73 = bitcast %"class.std::__1::bitset"* %71 to i8*
  %74 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 7, i32 0
  %75 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %7, i64 0, i32 1, i32 4, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %7, i64 0, i32 1, i32 3, i32 0, i32 0
  %77 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %8, i64 0, i32 4, i32 0, i32 0
  %78 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %8, i64 0, i32 3, i32 0, i32 0
  %79 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 9, i32 0
  %80 = bitcast %"class.spvtools::val::BasicBlock"*** %12 to i64*
  %81 = bitcast %"class.std::__1::vector"* %49 to <2 x i64>*
  %82 = bitcast %"class.std::__1::vector"* %48 to <2 x i64>*
  %83 = bitcast %"class.std::__1::vector"* %60 to <2 x i64>*
  %84 = bitcast %"class.std::__1::vector"* %59 to <2 x i64>*
  br label %92

85:                                               ; preds = %185, %39
  %86 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 10
  %87 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %86, align 8
  %88 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %87, i64 0, i32 5, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = and i64 %89, 4
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %362, label %188

92:                                               ; preds = %41, %185
  %93 = phi i32* [ %24, %41 ], [ %186, %185 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #13
  store i32 -1431655766, i32* %6, align 4
  %94 = load i32, i32* %93, align 4
  store i32 %94, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %43) #13
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %44) #13
  call void @_ZN8spvtools3val10BasicBlockC1Ej(%"class.spvtools::val::BasicBlock"* nonnull %8, i32 %94) #13
  %95 = load i32, i32* %6, align 4
  store i32 %95, i32* %45, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %44, i64 24, i1 false) #13
  %96 = load <2 x i64>, <2 x i64>* %81, align 8
  store <2 x i64> %96, <2 x i64>* %82, align 8
  %97 = load i64, i64* %55, align 8
  store i64 %97, i64* %57, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #13
  %98 = load <2 x i64>, <2 x i64>* %83, align 8
  store <2 x i64> %98, <2 x i64>* %84, align 8
  %99 = load i64, i64* %66, align 8
  store i64 %99, i64* %68, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 32, i1 false) #13
  %100 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3val10BasicBlockEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIjJNS_4pairIKjS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %74, i32* nonnull dereferenceable(4) %45, %"struct.std::__1::pair.212"* nonnull dereferenceable(112) %7) #13
  %101 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %100, 0
  %102 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %100, 1
  %103 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %75, align 8
  %104 = icmp eq %"class.spvtools::val::BasicBlock"** %103, null
  br i1 %104, label %108, label %105

105:                                              ; preds = %92
  %106 = ptrtoint %"class.spvtools::val::BasicBlock"** %103 to i64
  store i64 %106, i64* %64, align 8
  %107 = bitcast %"class.spvtools::val::BasicBlock"** %103 to i8*
  call void @_ZdlPv(i8* %107) #15
  br label %108

108:                                              ; preds = %105, %92
  %109 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %76, align 8
  %110 = icmp eq %"class.spvtools::val::BasicBlock"** %109, null
  br i1 %110, label %114, label %111

111:                                              ; preds = %108
  %112 = ptrtoint %"class.spvtools::val::BasicBlock"** %109 to i64
  store i64 %112, i64* %53, align 8
  %113 = bitcast %"class.spvtools::val::BasicBlock"** %109 to i8*
  call void @_ZdlPv(i8* %113) #15
  br label %114

114:                                              ; preds = %108, %111
  %115 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %77, align 8
  %116 = icmp eq %"class.spvtools::val::BasicBlock"** %115, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = ptrtoint %"class.spvtools::val::BasicBlock"** %115 to i64
  store i64 %118, i64* %62, align 8
  %119 = bitcast %"class.spvtools::val::BasicBlock"** %115 to i8*
  call void @_ZdlPv(i8* %119) #15
  br label %120

120:                                              ; preds = %117, %114
  %121 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %78, align 8
  %122 = icmp eq %"class.spvtools::val::BasicBlock"** %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %120
  %124 = ptrtoint %"class.spvtools::val::BasicBlock"** %121 to i64
  store i64 %124, i64* %51, align 8
  %125 = bitcast %"class.spvtools::val::BasicBlock"** %121 to i8*
  call void @_ZdlPv(i8* %125) #15
  br label %126

126:                                              ; preds = %120, %123
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %43) #13
  %127 = icmp eq i8 %102, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = call { %"struct.std::__1::__hash_node_base.23"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.19"* %79, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %6) #13
  br label %130

130:                                              ; preds = %126, %128
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %101, i64 3
  %132 = ptrtoint %"struct.std::__1::__hash_node_base"* %131 to i64
  %133 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %12, align 8
  %134 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %13, align 16
  %135 = icmp ult %"class.spvtools::val::BasicBlock"** %133, %134
  %136 = ptrtoint %"class.spvtools::val::BasicBlock"** %134 to i64
  br i1 %135, label %137, label %141

137:                                              ; preds = %130
  %138 = bitcast %"class.spvtools::val::BasicBlock"** %133 to i64*
  store i64 %132, i64* %138, align 8
  %139 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %133, i64 1
  %140 = ptrtoint %"class.spvtools::val::BasicBlock"** %139 to i64
  store i64 %140, i64* %80, align 8
  br label %185

141:                                              ; preds = %130
  %142 = ptrtoint %"class.spvtools::val::BasicBlock"** %133 to i64
  %143 = load i64, i64* %22, align 16
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = add nsw i64 %145, 1
  %147 = icmp ugt i64 %146, 2305843009213693951
  br i1 %147, label %148, label %150

148:                                              ; preds = %141
  %149 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %149) #14
  unreachable

150:                                              ; preds = %141
  %151 = sub i64 %136, %143
  %152 = ashr exact i64 %151, 3
  %153 = icmp ult i64 %152, 1152921504606846975
  br i1 %153, label %154, label %162

154:                                              ; preds = %150
  %155 = ashr exact i64 %151, 2
  %156 = icmp ult i64 %155, %146
  %157 = select i1 %156, i64 %146, i64 %155
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %167, label %159

159:                                              ; preds = %154
  %160 = icmp ugt i64 %157, 2305843009213693951
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  call void @abort() #14
  unreachable

162:                                              ; preds = %159, %150
  %163 = phi i64 [ %157, %159 ], [ 2305843009213693951, %150 ]
  %164 = shl i64 %163, 3
  %165 = call i8* @_Znwm(i64 %164) #15
  %166 = bitcast i8* %165 to %"class.spvtools::val::BasicBlock"**
  br label %167

167:                                              ; preds = %162, %154
  %168 = phi i64 [ %163, %162 ], [ 0, %154 ]
  %169 = phi i8* [ %165, %162 ], [ null, %154 ]
  %170 = phi %"class.spvtools::val::BasicBlock"** [ %166, %162 ], [ null, %154 ]
  %171 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %170, i64 %145
  %172 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %170, i64 %168
  %173 = ptrtoint %"class.spvtools::val::BasicBlock"** %172 to i64
  %174 = bitcast %"class.spvtools::val::BasicBlock"** %171 to i64*
  store i64 %132, i64* %174, align 8
  %175 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %171, i64 1
  %176 = ptrtoint %"class.spvtools::val::BasicBlock"** %175 to i64
  %177 = ptrtoint %"class.spvtools::val::BasicBlock"** %170 to i64
  %178 = icmp sgt i64 %144, 0
  br i1 %178, label %179, label %181

179:                                              ; preds = %167
  %180 = inttoptr i64 %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %180, i64 %144, i1 false) #13
  br label %181

181:                                              ; preds = %179, %167
  store i64 %177, i64* %22, align 16
  store i64 %176, i64* %80, align 8
  store i64 %173, i64* %21, align 16
  %182 = icmp eq i64 %143, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = inttoptr i64 %143 to i8*
  call void @_ZdlPv(i8* %184) #15
  br label %185

185:                                              ; preds = %137, %181, %183
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #13
  %186 = getelementptr inbounds i32, i32* %93, i64 1
  %187 = icmp eq i32* %186, %25
  br i1 %187, label %85, label %92

188:                                              ; preds = %85
  %189 = ptrtoint %"class.spvtools::val::BasicBlock"* %87 to i64
  %190 = bitcast %"class.spvtools::val::BasicBlock"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #13
  %191 = bitcast %"class.spvtools::val::BasicBlock"** %9 to i64*
  store i64 %189, i64* %191, align 8
  %192 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 15, i32 0
  %193 = bitcast %"class.std::__1::tuple.322"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #13
  %194 = getelementptr inbounds %"class.std::__1::tuple.322", %"class.std::__1::tuple.322"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %9, %"class.spvtools::val::BasicBlock"*** %194, align 8
  %195 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %195) #13
  %196 = call { %"struct.std::__1::__hash_node_base.45"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.41"* %192, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.322"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %4) #13
  %197 = extractvalue { %"struct.std::__1::__hash_node_base.45"*, i8 } %196, 0
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %197, i64 3
  %199 = bitcast %"struct.std::__1::__hash_node_base.45"* %198 to %"class.std::__1::vector"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %195) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #13
  %200 = icmp eq %"class.std::__1::vector"* %5, %199
  br i1 %200, label %204, label %201

201:                                              ; preds = %188
  %202 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %11, align 16
  %203 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %12, align 8
  call void @_ZNSt3__16vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector"* %199, %"class.spvtools::val::BasicBlock"** %202, %"class.spvtools::val::BasicBlock"** %203) #13
  br label %204

204:                                              ; preds = %188, %201
  %205 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %86, align 8
  %206 = ptrtoint %"class.spvtools::val::BasicBlock"* %205 to i64
  %207 = lshr i64 %206, 32
  %208 = shl i64 %206, 3
  %209 = and i64 %208, 4294967288
  %210 = add nuw nsw i64 %209, 8
  %211 = xor i64 %210, %207
  %212 = mul i64 %211, -7070675565921424023
  %213 = lshr i64 %212, 47
  %214 = xor i64 %212, %207
  %215 = xor i64 %214, %213
  %216 = mul i64 %215, -7070675565921424023
  %217 = lshr i64 %216, 47
  %218 = xor i64 %217, %216
  %219 = mul i64 %218, -7070675565921424023
  %220 = xor i64 %219, 3
  %221 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %222 = load i64, i64* %221, align 8
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %277, label %224

224:                                              ; preds = %204
  %225 = call i64 @llvm.ctpop.i64(i64 %222) #13, !range !2
  %226 = icmp ugt i64 %225, 1
  br i1 %226, label %230, label %227

227:                                              ; preds = %224
  %228 = add i64 %222, -1
  %229 = and i64 %220, %228
  br label %234

230:                                              ; preds = %224
  %231 = icmp ult i64 %220, %222
  br i1 %231, label %234, label %232

232:                                              ; preds = %230
  %233 = urem i64 %220, %222
  br label %234

234:                                              ; preds = %232, %230, %227
  %235 = phi i64 [ %229, %227 ], [ %233, %232 ], [ %220, %230 ]
  %236 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %236, align 8
  %238 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %237, i64 %235
  %239 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %238, align 8
  %240 = icmp eq %"struct.std::__1::__hash_node_base.84"* %239, null
  br i1 %240, label %277, label %241

241:                                              ; preds = %234
  %242 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %239, i64 0, i32 0
  %243 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %242, align 8
  %244 = icmp eq %"struct.std::__1::__hash_node_base.84"* %243, null
  br i1 %244, label %277, label %245

245:                                              ; preds = %241
  %246 = add i64 %222, -1
  br label %247

247:                                              ; preds = %273, %245
  %248 = phi %"struct.std::__1::__hash_node_base.84"* [ %243, %245 ], [ %275, %273 ]
  %249 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %248, i64 1
  %250 = bitcast %"struct.std::__1::__hash_node_base.84"* %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = icmp eq i64 %251, %220
  br i1 %252, label %263, label %253

253:                                              ; preds = %247
  br i1 %226, label %256, label %254

254:                                              ; preds = %253
  %255 = and i64 %251, %246
  br label %260

256:                                              ; preds = %253
  %257 = icmp ult i64 %251, %222
  br i1 %257, label %260, label %258

258:                                              ; preds = %256
  %259 = urem i64 %251, %222
  br label %260

260:                                              ; preds = %258, %256, %254
  %261 = phi i64 [ %255, %254 ], [ %259, %258 ], [ %251, %256 ]
  %262 = icmp eq i64 %261, %235
  br i1 %262, label %273, label %277

263:                                              ; preds = %247
  %264 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %248, i64 2
  %265 = bitcast %"struct.std::__1::__hash_node_base.84"* %264 to %"class.spvtools::val::BasicBlock"**
  %266 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %265, align 8
  %267 = icmp eq %"class.spvtools::val::BasicBlock"* %266, %205
  br i1 %267, label %268, label %273

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %248, i64 3
  %270 = bitcast %"struct.std::__1::__hash_node_base.84"* %269 to i32*
  %271 = load i32, i32* %270, align 8
  %272 = icmp eq i32 %271, 3
  br i1 %272, label %277, label %273

273:                                              ; preds = %268, %263, %260
  %274 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %248, i64 0, i32 0
  %275 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %274, align 8
  %276 = icmp eq %"struct.std::__1::__hash_node_base.84"* %275, null
  br i1 %276, label %277, label %247

277:                                              ; preds = %260, %268, %273, %204, %234, %241
  %278 = phi %"struct.std::__1::__hash_node_base.84"* [ null, %234 ], [ null, %204 ], [ null, %241 ], [ %248, %268 ], [ null, %273 ], [ null, %260 ]
  %279 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %278, i64 4
  %280 = bitcast %"struct.std::__1::__hash_node_base.84"* %279 to %"class.spvtools::val::Construct"**
  %281 = load %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %280, align 8
  %282 = call dereferenceable(24) %"class.std::__1::vector.202"* @_ZN8spvtools3val9Construct24corresponding_constructsEv(%"class.spvtools::val::Construct"* %281) #13
  %283 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %282, i64 0, i32 0, i32 1
  %284 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %283, align 8
  %285 = getelementptr inbounds %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %284, i64 -1
  %286 = load %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %285, align 8
  %287 = call %"class.spvtools::val::BasicBlock"* @_ZN8spvtools3val9Construct11entry_blockEv(%"class.spvtools::val::Construct"* %286) #13
  %288 = ptrtoint %"class.spvtools::val::BasicBlock"* %287 to i64
  %289 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %86, align 8
  %290 = icmp eq %"class.spvtools::val::BasicBlock"* %287, %289
  br i1 %290, label %362, label %291

291:                                              ; preds = %277
  %292 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %197, i64 4
  %293 = bitcast %"struct.std::__1::__hash_node_base.45"* %292 to %"class.spvtools::val::BasicBlock"***
  %294 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %293, align 8
  %295 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %197, i64 5
  %296 = bitcast %"struct.std::__1::__hash_node_base.45"* %295 to %"class.spvtools::val::BasicBlock"***
  %297 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %296, align 8
  %298 = icmp eq %"class.spvtools::val::BasicBlock"** %294, %297
  %299 = ptrtoint %"class.spvtools::val::BasicBlock"** %297 to i64
  br i1 %298, label %305, label %300

300:                                              ; preds = %291
  %301 = bitcast %"class.spvtools::val::BasicBlock"** %294 to i64*
  store i64 %288, i64* %301, align 8
  %302 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %294, i64 1
  %303 = ptrtoint %"class.spvtools::val::BasicBlock"** %302 to i64
  %304 = bitcast %"struct.std::__1::__hash_node_base.45"* %292 to i64*
  store i64 %303, i64* %304, align 8
  br label %362

305:                                              ; preds = %291
  %306 = ptrtoint %"class.spvtools::val::BasicBlock"** %294 to i64
  %307 = bitcast %"struct.std::__1::__hash_node_base.45"* %292 to i64*
  %308 = bitcast %"struct.std::__1::__hash_node_base.45"* %198 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = sub i64 %306, %309
  %311 = ashr exact i64 %310, 3
  %312 = add nsw i64 %311, 1
  %313 = icmp ugt i64 %312, 2305843009213693951
  br i1 %313, label %314, label %316

314:                                              ; preds = %305
  %315 = bitcast %"struct.std::__1::__hash_node_base.45"* %198 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %315) #14
  unreachable

316:                                              ; preds = %305
  %317 = bitcast %"struct.std::__1::__hash_node_base.45"* %295 to i64*
  %318 = sub i64 %299, %309
  %319 = ashr exact i64 %318, 3
  %320 = icmp ult i64 %319, 1152921504606846975
  br i1 %320, label %321, label %329

321:                                              ; preds = %316
  %322 = ashr exact i64 %318, 2
  %323 = icmp ult i64 %322, %312
  %324 = select i1 %323, i64 %312, i64 %322
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %334, label %326

326:                                              ; preds = %321
  %327 = icmp ugt i64 %324, 2305843009213693951
  br i1 %327, label %328, label %329

328:                                              ; preds = %326
  call void @abort() #14
  unreachable

329:                                              ; preds = %326, %316
  %330 = phi i64 [ %324, %326 ], [ 2305843009213693951, %316 ]
  %331 = shl i64 %330, 3
  %332 = call i8* @_Znwm(i64 %331) #15
  %333 = bitcast i8* %332 to %"class.spvtools::val::BasicBlock"**
  br label %334

334:                                              ; preds = %329, %321
  %335 = phi i64 [ %330, %329 ], [ 0, %321 ]
  %336 = phi %"class.spvtools::val::BasicBlock"** [ %333, %329 ], [ null, %321 ]
  %337 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %336, i64 %311
  %338 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %336, i64 %335
  %339 = ptrtoint %"class.spvtools::val::BasicBlock"** %338 to i64
  %340 = bitcast %"class.spvtools::val::BasicBlock"** %337 to i64*
  store i64 %288, i64* %340, align 8
  %341 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %337, i64 1
  %342 = ptrtoint %"class.spvtools::val::BasicBlock"** %341 to i64
  %343 = bitcast %"struct.std::__1::__hash_node_base.45"* %198 to %"class.spvtools::val::BasicBlock"***
  %344 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %343, align 8
  %345 = load i64, i64* %307, align 8
  %346 = ptrtoint %"class.spvtools::val::BasicBlock"** %344 to i64
  %347 = sub i64 %345, %346
  %348 = ashr exact i64 %347, 3
  %349 = sub nsw i64 0, %348
  %350 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %337, i64 %349
  %351 = ptrtoint %"class.spvtools::val::BasicBlock"** %350 to i64
  %352 = icmp sgt i64 %347, 0
  br i1 %352, label %353, label %357

353:                                              ; preds = %334
  %354 = bitcast %"class.spvtools::val::BasicBlock"** %350 to i8*
  %355 = bitcast %"class.spvtools::val::BasicBlock"** %344 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %354, i8* align 8 %355, i64 %347, i1 false) #13
  %356 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %343, align 8
  br label %357

357:                                              ; preds = %353, %334
  %358 = phi %"class.spvtools::val::BasicBlock"** [ %344, %334 ], [ %356, %353 ]
  store i64 %351, i64* %308, align 8
  store i64 %342, i64* %307, align 8
  store i64 %339, i64* %317, align 8
  %359 = icmp eq %"class.spvtools::val::BasicBlock"** %358, null
  br i1 %359, label %362, label %360

360:                                              ; preds = %357
  %361 = bitcast %"class.spvtools::val::BasicBlock"** %358 to i8*
  call void @_ZdlPv(i8* %361) #15
  br label %362

362:                                              ; preds = %85, %277, %300, %357, %360
  %363 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %86, align 8
  call void @_ZN8spvtools3val10BasicBlock18RegisterSuccessorsERKNSt3__16vectorIPS1_NS2_9allocatorIS4_EEEE(%"class.spvtools::val::BasicBlock"* %363, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #13
  store %"class.spvtools::val::BasicBlock"* null, %"class.spvtools::val::BasicBlock"** %86, align 8
  %364 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %11, align 16
  %365 = icmp eq %"class.spvtools::val::BasicBlock"** %364, null
  br i1 %365, label %370, label %366

366:                                              ; preds = %362
  %367 = ptrtoint %"class.spvtools::val::BasicBlock"** %364 to i64
  %368 = bitcast %"class.spvtools::val::BasicBlock"*** %12 to i64*
  store i64 %367, i64* %368, align 8
  %369 = bitcast %"class.spvtools::val::BasicBlock"** %364 to i8*
  call void @_ZdlPv(i8* %369) #15
  br label %370

370:                                              ; preds = %362, %366
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden dereferenceable(48) %"class.spvtools::val::Construct"* @_ZN8spvtools3val8Function26FindConstructForEntryBlockEPKNS0_10BasicBlockENS0_13ConstructTypeE(%"class.spvtools::val::Function"* nocapture readonly, %"class.spvtools::val::BasicBlock"*, i32) local_unnamed_addr #6 align 2 {
  %4 = ptrtoint %"class.spvtools::val::BasicBlock"* %1 to i64
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = sext i32 %2 to i64
  %19 = xor i64 %17, %18
  %20 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %76, label %23

23:                                               ; preds = %3
  %24 = tail call i64 @llvm.ctpop.i64(i64 %21) #13, !range !2
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %21, -1
  %28 = and i64 %27, %19
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %19, %21
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %19, %21
  br label %33

33:                                               ; preds = %31, %29, %26
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %19, %29 ]
  %35 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.84"* %38, null
  br i1 %39, label %76, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.84"* %42, null
  br i1 %43, label %76, label %44

44:                                               ; preds = %40
  %45 = add i64 %21, -1
  br label %46

46:                                               ; preds = %72, %44
  %47 = phi %"struct.std::__1::__hash_node_base.84"* [ %42, %44 ], [ %74, %72 ]
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %47, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base.84"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %19
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %45
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %21
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %21
  br label %59

59:                                               ; preds = %57, %55, %53
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %72, label %76

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %47, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base.84"* %63 to %"class.spvtools::val::BasicBlock"**
  %65 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %64, align 8
  %66 = icmp eq %"class.spvtools::val::BasicBlock"* %65, %1
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %47, i64 3
  %69 = bitcast %"struct.std::__1::__hash_node_base.84"* %68 to i32*
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, %2
  br i1 %71, label %76, label %72

72:                                               ; preds = %67, %62, %59
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %47, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.84"* %74, null
  br i1 %75, label %76, label %46

76:                                               ; preds = %59, %67, %72, %3, %33, %40
  %77 = phi %"struct.std::__1::__hash_node_base.84"* [ null, %33 ], [ null, %3 ], [ null, %40 ], [ null, %59 ], [ null, %72 ], [ %47, %67 ]
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %77, i64 4
  %79 = bitcast %"struct.std::__1::__hash_node_base.84"* %78 to %"class.spvtools::val::Construct"**
  %80 = load %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %79, align 8
  ret %"class.spvtools::val::Construct"* %80
}

declare dereferenceable(24) %"class.std::__1::vector.202"* @_ZN8spvtools3val9Construct24corresponding_constructsEv(%"class.spvtools::val::Construct"*) local_unnamed_addr #1

declare %"class.spvtools::val::BasicBlock"* @_ZN8spvtools3val9Construct11entry_blockEv(%"class.spvtools::val::Construct"*) local_unnamed_addr #1

declare void @_ZN8spvtools3val10BasicBlock18RegisterSuccessorsERKNSt3__16vectorIPS1_NS2_9allocatorIS4_EEEE(%"class.spvtools::val::BasicBlock"*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3val8Function19RegisterFunctionEndEv(%"class.spvtools::val::Function"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function", align 8
  %3 = alloca %"class.std::__1::function", align 8
  %4 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 4, !range !6
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %35

7:                                                ; preds = %1
  store i8 1, i8* %4, align 4
  %8 = bitcast %"class.std::__1::function"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8)
  %9 = bitcast %"class.std::__1::function"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 11
  %12 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 12
  %13 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 13
  %14 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 14
  %15 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  store %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNS4_8Function19ComputeAugmentedCFGEvE3$_3SE_EEEESB_PKNS0_16__policy_storageESD_", %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %15, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3val8Function19ComputeAugmentedCFGEvE3$_3FPKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISA_EEEEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  store %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNS4_8Function19ComputeAugmentedCFGEvE3$_4SE_EEEESB_PKNS0_16__policy_storageESD_", %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %17, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3val8Function19ComputeAugmentedCFGEvE3$_4FPKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISA_EEEEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %18, align 8
  call void @_ZN8spvtools3CFAINS_3val10BasicBlockEE19ComputeAugmentedCFGERNSt3__16vectorIPS2_NS4_9allocatorIS6_EEEES6_S6_PNS4_13unordered_mapIPKS2_S9_NS4_4hashISD_EENS4_8equal_toISD_EENS7_INS4_4pairIKSD_S9_EEEEEESN_NS4_8functionIFPKS9_SD_EEESS_(%"class.std::__1::vector"* dereferenceable(24) %10, %"class.spvtools::val::BasicBlock"* %11, %"class.spvtools::val::BasicBlock"* %12, %"class.std::__1::unordered_map.40"* %13, %"class.std::__1::unordered_map.40"* %14, %"class.std::__1::function"* nonnull %2, %"class.std::__1::function"* nonnull %3) #13
  %19 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %19, i64 0, i32 1
  %21 = load void (i8*)*, void (i8*)** %20, align 8
  %22 = icmp eq void (i8*)* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void %21(i8* %25) #13
  br label %26

26:                                               ; preds = %23, %7
  %27 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %16, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %27, i64 0, i32 1
  %29 = load void (i8*)*, void (i8*)** %28, align 8
  %30 = icmp eq void (i8*)* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void %29(i8* %33) #13
  br label %34

34:                                               ; preds = %26, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  br label %35

35:                                               ; preds = %1, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3val8Function19ComputeAugmentedCFGEv(%"class.spvtools::val::Function"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function", align 8
  %3 = alloca %"class.std::__1::function", align 8
  %4 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 11
  %6 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 12
  %7 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 13
  %8 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 14
  %9 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  store %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNS4_8Function19ComputeAugmentedCFGEvE3$_3SE_EEEESB_PKNS0_16__policy_storageESD_", %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %9, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3val8Function19ComputeAugmentedCFGEvE3$_3FPKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISA_EEEEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  store %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNS4_8Function19ComputeAugmentedCFGEvE3$_4SE_EEEESB_PKNS0_16__policy_storageESD_", %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %11, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3val8Function19ComputeAugmentedCFGEvE3$_4FPKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISA_EEEEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %12, align 8
  call void @_ZN8spvtools3CFAINS_3val10BasicBlockEE19ComputeAugmentedCFGERNSt3__16vectorIPS2_NS4_9allocatorIS6_EEEES6_S6_PNS4_13unordered_mapIPKS2_S9_NS4_4hashISD_EENS4_8equal_toISD_EENS7_INS4_4pairIKSD_S9_EEEEEESN_NS4_8functionIFPKS9_SD_EEESS_(%"class.std::__1::vector"* dereferenceable(24) %4, %"class.spvtools::val::BasicBlock"* %5, %"class.spvtools::val::BasicBlock"* %6, %"class.std::__1::unordered_map.40"* %7, %"class.std::__1::unordered_map.40"* %8, %"class.std::__1::function"* nonnull %2, %"class.std::__1::function"* nonnull %3)
  %13 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %13, i64 0, i32 1
  %15 = load void (i8*)*, void (i8*)** %14, align 8
  %16 = icmp eq void (i8*)* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void %15(i8* %19) #13
  br label %20

20:                                               ; preds = %1, %17
  %21 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %10, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %21, i64 0, i32 1
  %23 = load void (i8*)*, void (i8*)** %22, align 8
  %24 = icmp eq void (i8*)* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void %23(i8* %27) #13
  br label %28

28:                                               ; preds = %20, %25
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK8spvtools3val8Function11block_countEv(%"class.spvtools::val::Function"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK8spvtools3val8Function21undefined_block_countEv(%"class.spvtools::val::Function"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZNK8spvtools3val8Function14ordered_blocksEv(%"class.spvtools::val::Function"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN8spvtools3val8Function14ordered_blocksEv(%"class.spvtools::val::Function"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.spvtools::val::BasicBlock"* @_ZNK8spvtools3val8Function13current_blockEv(%"class.spvtools::val::Function"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 10
  %3 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, align 8
  ret %"class.spvtools::val::BasicBlock"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::list"* @_ZNK8spvtools3val8Function10constructsEv(%"class.spvtools::val::Function"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 16
  ret %"class.std::__1::list"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::list"* @_ZN8spvtools3val8Function10constructsEv(%"class.spvtools::val::Function"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 16
  ret %"class.std::__1::list"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.spvtools::val::BasicBlock"* @_ZN8spvtools3val8Function11first_blockEv(%"class.spvtools::val::Function"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 8, i32 0, i32 1
  %5 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %4, align 8
  %6 = icmp eq %"class.spvtools::val::BasicBlock"** %3, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %3, align 8
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.spvtools::val::BasicBlock"* [ %8, %7 ], [ null, %1 ]
  ret %"class.spvtools::val::BasicBlock"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3val8Function11IsBlockTypeEjNS0_9BlockTypeE(%"class.spvtools::val::Function"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call { %"class.spvtools::val::BasicBlock"*, i8 } @_ZNK8spvtools3val8Function8GetBlockEj(%"class.spvtools::val::Function"* %0, i32 %1)
  %5 = extractvalue { %"class.spvtools::val::BasicBlock"*, i8 } %4, 0
  %6 = icmp eq %"class.spvtools::val::BasicBlock"* %5, null
  br i1 %6, label %25, label %7

7:                                                ; preds = %3
  %8 = icmp eq i32 %2, 0
  %9 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %5, i64 0, i32 5
  br i1 %8, label %10, label %15

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %9, i64 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 127
  %14 = icmp eq i64 %13, 0
  br label %25

15:                                               ; preds = %7
  %16 = icmp ugt i32 %2, 6
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #14
  unreachable

18:                                               ; preds = %15
  %19 = zext i32 %2 to i64
  %20 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %9, i64 0, i32 0, i32 0
  %21 = shl i64 1, %19
  %22 = load i64, i64* %20, align 8
  %23 = and i64 %22, %21
  %24 = icmp ne i64 %23, 0
  br label %25

25:                                               ; preds = %18, %10, %3
  %26 = phi i1 [ false, %3 ], [ %14, %10 ], [ %24, %18 ]
  ret i1 %26
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { %"class.spvtools::val::BasicBlock"*, i8 } @_ZNK8spvtools3val8Function8GetBlockEj(%"class.spvtools::val::Function"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %116, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !2
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, 4294967295
  %12 = and i64 %11, %3
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %3
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %3, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %3, %13 ]
  %19 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %116, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %116, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %116

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %116, label %30

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 3
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to %"class.spvtools::val::BasicBlock"*
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %112, label %64

64:                                               ; preds = %55
  %65 = tail call i64 @llvm.ctpop.i64(i64 %62) #13, !range !2
  %66 = icmp ugt i64 %65, 1
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = add i64 %62, 4294967295
  %69 = and i64 %68, %60
  br label %74

70:                                               ; preds = %64
  %71 = icmp ugt i64 %62, %60
  br i1 %71, label %74, label %72

72:                                               ; preds = %70
  %73 = urem i64 %60, %62
  br label %74

74:                                               ; preds = %72, %70, %67
  %75 = phi i64 [ %69, %67 ], [ %73, %72 ], [ %60, %70 ]
  %76 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %77, i64 %75
  %79 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.23"* %79, null
  br i1 %80, label %112, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %79, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.23"* %83, null
  br i1 %84, label %112, label %85

85:                                               ; preds = %81
  %86 = add i64 %62, -1
  br label %87

87:                                               ; preds = %108, %85
  %88 = phi %"struct.std::__1::__hash_node_base.23"* [ %83, %85 ], [ %110, %108 ]
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %88, i64 1
  %90 = bitcast %"struct.std::__1::__hash_node_base.23"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, %60
  br i1 %92, label %103, label %93

93:                                               ; preds = %87
  br i1 %66, label %96, label %94

94:                                               ; preds = %93
  %95 = and i64 %91, %86
  br label %100

96:                                               ; preds = %93
  %97 = icmp ult i64 %91, %62
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %91, %62
  br label %100

100:                                              ; preds = %98, %96, %94
  %101 = phi i64 [ %95, %94 ], [ %99, %98 ], [ %91, %96 ]
  %102 = icmp eq i64 %101, %75
  br i1 %102, label %108, label %112

103:                                              ; preds = %87
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %88, i64 2
  %105 = bitcast %"struct.std::__1::__hash_node_base.23"* %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, %59
  br i1 %107, label %112, label %108

108:                                              ; preds = %103, %100
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %88, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %109, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base.23"* %110, null
  br i1 %111, label %112, label %87

112:                                              ; preds = %100, %103, %108, %55, %74, %81
  %113 = phi %"struct.std::__1::__hash_node_base.23"* [ null, %74 ], [ null, %55 ], [ null, %81 ], [ %88, %103 ], [ null, %108 ], [ null, %100 ]
  %114 = icmp eq %"struct.std::__1::__hash_node_base.23"* %113, null
  %115 = zext i1 %114 to i8
  br label %116

116:                                              ; preds = %51, %43, %24, %2, %17, %112
  %117 = phi %"class.spvtools::val::BasicBlock"* [ %57, %112 ], [ null, %17 ], [ null, %2 ], [ null, %24 ], [ null, %43 ], [ null, %51 ]
  %118 = phi i8 [ %115, %112 ], [ 0, %17 ], [ 0, %2 ], [ 0, %24 ], [ 0, %43 ], [ 0, %51 ]
  %119 = insertvalue { %"class.spvtools::val::BasicBlock"*, i8 } undef, %"class.spvtools::val::BasicBlock"* %117, 0
  %120 = insertvalue { %"class.spvtools::val::BasicBlock"*, i8 } %119, i8 %118, 1
  ret { %"class.spvtools::val::BasicBlock"*, i8 } %120
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.spvtools::val::BasicBlock"*, i8 } @_ZN8spvtools3val8Function8GetBlockEj(%"class.spvtools::val::Function"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call { %"class.spvtools::val::BasicBlock"*, i8 } @_ZNK8spvtools3val8Function8GetBlockEj(%"class.spvtools::val::Function"* %0, i32 %1)
  ret { %"class.spvtools::val::BasicBlock"*, i8 } %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK8spvtools3val8Function30AugmentedCFGSuccessorsFunctionEv(%"class.std::__1::function"* noalias nocapture sret, %"class.spvtools::val::Function"*) local_unnamed_addr #5 align 2 {
  %3 = ptrtoint %"class.spvtools::val::Function"* %1 to i64
  %4 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 2
  store %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNKS4_8Function30AugmentedCFGSuccessorsFunctionEvE3$_0SE_EEEESB_PKNS0_16__policy_storageESD_", %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %4, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3val8Function30AugmentedCFGSuccessorsFunctionEvE3$_0FPKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISA_EEEEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %5, align 8
  %6 = bitcast %"class.std::__1::function"* %0 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK8spvtools3val8Function59AugmentedCFGSuccessorsFunctionIncludingHeaderToContinueEdgeEv(%"class.std::__1::function"* noalias nocapture sret, %"class.spvtools::val::Function"*) local_unnamed_addr #5 align 2 {
  %3 = ptrtoint %"class.spvtools::val::Function"* %1 to i64
  %4 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 2
  store %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNKS4_8Function59AugmentedCFGSuccessorsFunctionIncludingHeaderToContinueEdgeEvE3$_1SE_EEEESB_PKNS0_16__policy_storageESD_", %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %4, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3val8Function59AugmentedCFGSuccessorsFunctionIncludingHeaderToContinueEdgeEvE3$_1FPKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISA_EEEEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %5, align 8
  %6 = bitcast %"class.std::__1::function"* %0 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK8spvtools3val8Function32AugmentedCFGPredecessorsFunctionEv(%"class.std::__1::function"* noalias nocapture sret, %"class.spvtools::val::Function"*) local_unnamed_addr #5 align 2 {
  %3 = ptrtoint %"class.spvtools::val::Function"* %1 to i64
  %4 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %0, i64 0, i32 0, i32 2
  store %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNKS4_8Function32AugmentedCFGPredecessorsFunctionEvE3$_2SE_EEEESB_PKNS0_16__policy_storageESD_", %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %4, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3val8Function32AugmentedCFGPredecessorsFunctionEvE3$_2FPKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISA_EEEEPKS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %5, align 8
  %6 = bitcast %"class.std::__1::function"* %0 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3CFAINS_3val10BasicBlockEE19ComputeAugmentedCFGERNSt3__16vectorIPS2_NS4_9allocatorIS6_EEEES6_S6_PNS4_13unordered_mapIPKS2_S9_NS4_4hashISD_EENS4_8equal_toISD_EENS7_INS4_4pairIKSD_S9_EEEEEESN_NS4_8functionIFPKS9_SD_EEESS_(%"class.std::__1::vector"* dereferenceable(24), %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*, %"class.std::__1::unordered_map.40"*, %"class.std::__1::unordered_map.40"*, %"class.std::__1::function"*, %"class.std::__1::function"*) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.std::__1::tuple.322", align 8
  %9 = alloca %"class.std::__1::tuple.272", align 1
  %10 = alloca %"class.std::__1::tuple.322", align 8
  %11 = alloca %"class.std::__1::tuple.272", align 1
  %12 = alloca %"class.std::__1::tuple.322", align 8
  %13 = alloca %"class.std::__1::tuple.272", align 1
  %14 = alloca %"class.std::__1::tuple.322", align 8
  %15 = alloca %"class.std::__1::tuple.272", align 1
  %16 = alloca %"class.std::__1::vector", align 8
  %17 = alloca %"class.std::__1::function", align 8
  %18 = alloca %"class.std::__1::function", align 8
  %19 = alloca %"class.std::__1::vector", align 8
  %20 = alloca %"class.std::__1::vector", align 8
  %21 = alloca %"class.std::__1::function", align 8
  %22 = alloca %"class.std::__1::function", align 8
  %23 = alloca %"class.spvtools::val::BasicBlock"*, align 8
  %24 = alloca %"class.spvtools::val::BasicBlock"*, align 8
  %25 = alloca %"class.spvtools::val::BasicBlock"*, align 8
  %26 = alloca %"class.spvtools::val::BasicBlock"*, align 8
  %27 = ptrtoint %"class.spvtools::val::BasicBlock"* %1 to i64
  %28 = ptrtoint %"class.spvtools::val::BasicBlock"* %2 to i64
  %29 = bitcast %"class.std::__1::vector"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::function"* %17 to i8*
  %33 = bitcast %"class.std::__1::function"* %5 to i8*
  %34 = bitcast %"class.std::__1::vector"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %33, i64 16, i1 false) #13
  %35 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1
  %37 = bitcast %"struct.std::__1::__function::__policy_invoker"* %36 to i64*
  %38 = bitcast %"struct.std::__1::__function::__policy_invoker"* %35 to i64*
  %39 = load i64, i64* %37, align 8
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 0, i32 0, i32 2
  %41 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 2
  %42 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %41, align 8
  store %"struct.std::__1::__function::__policy"* %42, %"struct.std::__1::__function::__policy"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %42, i64 0, i32 0
  %44 = load i8* (i8*)*, i8* (i8*)** %43, align 8
  %45 = icmp eq i8* (i8*)* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %7
  %47 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = tail call i8* %44(i8* %48) #13
  %50 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 0, i32 0, i32 0, i32 0
  store i8* %49, i8** %50, align 8
  br label %51

51:                                               ; preds = %7, %46
  %52 = bitcast %"class.std::__1::function"* %18 to i8*
  %53 = bitcast %"class.std::__1::function"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 8 %53, i64 16, i1 false) #13
  %54 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %18, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 1
  %56 = bitcast %"struct.std::__1::__function::__policy_invoker"* %55 to i64*
  %57 = bitcast %"struct.std::__1::__function::__policy_invoker"* %54 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %18, i64 0, i32 0, i32 2
  %60 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 2
  %61 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %60, align 8
  store %"struct.std::__1::__function::__policy"* %61, %"struct.std::__1::__function::__policy"** %59, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %61, i64 0, i32 0
  %63 = load i8* (i8*)*, i8* (i8*)** %62, align 8
  %64 = icmp eq i8* (i8*)* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %51
  %66 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = tail call i8* %63(i8* %67) #13
  %69 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %18, i64 0, i32 0, i32 0, i32 0
  store i8* %68, i8** %69, align 8
  br label %70

70:                                               ; preds = %51, %65
  call void @_ZN8spvtools3CFAINS_3val10BasicBlockEE14TraversalRootsERKNSt3__16vectorIPS2_NS4_9allocatorIS6_EEEENS4_8functionIFPSA_PKS2_EEESH_(%"class.std::__1::vector"* nonnull sret %16, %"class.std::__1::vector"* dereferenceable(24) %0, %"class.std::__1::function"* nonnull %17, %"class.std::__1::function"* nonnull %18)
  %71 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %59, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %71, i64 0, i32 1
  %73 = load void (i8*)*, void (i8*)** %72, align 8
  %74 = icmp eq void (i8*)* %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %18, i64 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void %73(i8* %77) #13
  br label %78

78:                                               ; preds = %70, %75
  %79 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %79, i64 0, i32 1
  %81 = load void (i8*)*, void (i8*)** %80, align 8
  %82 = icmp eq void (i8*)* %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void %81(i8* %85) #13
  br label %86

86:                                               ; preds = %78, %83
  %87 = bitcast %"class.std::__1::vector"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #13
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %92 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %91, align 8
  %93 = bitcast %"class.spvtools::val::BasicBlock"** %92 to i8*
  %94 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %95 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %94, align 8
  %96 = ptrtoint %"class.spvtools::val::BasicBlock"** %95 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 24, i1 false) #13
  %97 = ptrtoint %"class.spvtools::val::BasicBlock"** %92 to i64
  %98 = sub i64 %97, %96
  %99 = ashr exact i64 %98, 3
  %100 = icmp eq i64 %98, 0
  br i1 %100, label %283, label %101

101:                                              ; preds = %86
  %102 = icmp ugt i64 %99, 2305843009213693951
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = bitcast %"class.std::__1::vector"* %19 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %104) #14
  unreachable

105:                                              ; preds = %101
  %106 = call i8* @_Znwm(i64 %98) #15
  %107 = bitcast i8* %106 to %"class.spvtools::val::BasicBlock"**
  %108 = bitcast %"class.spvtools::val::BasicBlock"*** %89 to i8**
  store i8* %106, i8** %108, align 8
  %109 = bitcast %"class.std::__1::vector"* %19 to i8**
  store i8* %106, i8** %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %107, i64 %99
  store %"class.spvtools::val::BasicBlock"** %110, %"class.spvtools::val::BasicBlock"*** %90, align 8
  %111 = bitcast %"class.spvtools::val::BasicBlock"*** %89 to i64*
  %112 = ptrtoint i8* %106 to i64
  %113 = icmp eq %"class.spvtools::val::BasicBlock"** %92, %95
  br i1 %113, label %281, label %114

114:                                              ; preds = %105
  %115 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %92, i64 -1
  %116 = ptrtoint %"class.spvtools::val::BasicBlock"** %115 to i64
  %117 = sub i64 %116, %96
  %118 = lshr i64 %117, 3
  %119 = add nuw nsw i64 %118, 1
  %120 = icmp ult i64 %119, 4
  br i1 %120, label %208, label %121

121:                                              ; preds = %114
  %122 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %92, i64 -1
  %123 = ptrtoint %"class.spvtools::val::BasicBlock"** %122 to i64
  %124 = sub i64 %123, %96
  %125 = lshr i64 %124, 3
  %126 = add i64 %124, 8
  %127 = and i64 %126, -8
  %128 = getelementptr i8, i8* %106, i64 %127
  %129 = xor i64 %125, -1
  %130 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %92, i64 %129
  %131 = bitcast %"class.spvtools::val::BasicBlock"** %130 to i8*
  %132 = icmp ult i8* %106, %93
  %133 = icmp ugt i8* %128, %131
  %134 = and i1 %132, %133
  br i1 %134, label %208, label %135

135:                                              ; preds = %121
  %136 = and i64 %119, 4611686018427387900
  %137 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %107, i64 %136
  %138 = sub nsw i64 0, %136
  %139 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %92, i64 %138
  %140 = add nsw i64 %136, -4
  %141 = lshr exact i64 %140, 2
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, 1
  %144 = icmp eq i64 %140, 0
  br i1 %144, label %186, label %145

145:                                              ; preds = %135
  %146 = sub nuw nsw i64 %142, %143
  %147 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %92, i64 -1
  %148 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %92, i64 -1
  br label %149

149:                                              ; preds = %149, %145
  %150 = phi i64 [ 0, %145 ], [ %183, %149 ]
  %151 = phi i64 [ %146, %145 ], [ %184, %149 ]
  %152 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %107, i64 %150
  %153 = sub i64 0, %150
  %154 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %147, i64 %153
  %155 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %154, i64 -1
  %156 = bitcast %"class.spvtools::val::BasicBlock"** %155 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 8, !alias.scope !7
  %158 = shufflevector <2 x i64> %157, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %159 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %154, i64 -2
  %160 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %159, i64 -1
  %161 = bitcast %"class.spvtools::val::BasicBlock"** %160 to <2 x i64>*
  %162 = load <2 x i64>, <2 x i64>* %161, align 8, !alias.scope !7
  %163 = shufflevector <2 x i64> %162, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %164 = bitcast %"class.spvtools::val::BasicBlock"** %152 to <2 x i64>*
  store <2 x i64> %158, <2 x i64>* %164, align 8, !alias.scope !10, !noalias !7
  %165 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %152, i64 2
  %166 = bitcast %"class.spvtools::val::BasicBlock"** %165 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %166, align 8, !alias.scope !10, !noalias !7
  %167 = or i64 %150, 4
  %168 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %107, i64 %167
  %169 = sub nuw nsw i64 -4, %150
  %170 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %148, i64 %169
  %171 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %170, i64 -1
  %172 = bitcast %"class.spvtools::val::BasicBlock"** %171 to <2 x i64>*
  %173 = load <2 x i64>, <2 x i64>* %172, align 8, !alias.scope !7
  %174 = shufflevector <2 x i64> %173, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %175 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %170, i64 -2
  %176 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %175, i64 -1
  %177 = bitcast %"class.spvtools::val::BasicBlock"** %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8, !alias.scope !7
  %179 = shufflevector <2 x i64> %178, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %180 = bitcast %"class.spvtools::val::BasicBlock"** %168 to <2 x i64>*
  store <2 x i64> %174, <2 x i64>* %180, align 8, !alias.scope !10, !noalias !7
  %181 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %168, i64 2
  %182 = bitcast %"class.spvtools::val::BasicBlock"** %181 to <2 x i64>*
  store <2 x i64> %179, <2 x i64>* %182, align 8, !alias.scope !10, !noalias !7
  %183 = add i64 %150, 8
  %184 = add i64 %151, -2
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %149, !llvm.loop !12

186:                                              ; preds = %149, %135
  %187 = phi i64 [ 0, %135 ], [ %183, %149 ]
  %188 = icmp eq i64 %143, 0
  br i1 %188, label %206, label %189

189:                                              ; preds = %186
  %190 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %107, i64 %187
  %191 = sub i64 0, %187
  %192 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %92, i64 -1
  %193 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %192, i64 %191
  %194 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %193, i64 -1
  %195 = bitcast %"class.spvtools::val::BasicBlock"** %194 to <2 x i64>*
  %196 = load <2 x i64>, <2 x i64>* %195, align 8, !alias.scope !7
  %197 = shufflevector <2 x i64> %196, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %198 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %193, i64 -2
  %199 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %198, i64 -1
  %200 = bitcast %"class.spvtools::val::BasicBlock"** %199 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 8, !alias.scope !7
  %202 = shufflevector <2 x i64> %201, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %203 = bitcast %"class.spvtools::val::BasicBlock"** %190 to <2 x i64>*
  store <2 x i64> %197, <2 x i64>* %203, align 8, !alias.scope !10, !noalias !7
  %204 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %190, i64 2
  %205 = bitcast %"class.spvtools::val::BasicBlock"** %204 to <2 x i64>*
  store <2 x i64> %202, <2 x i64>* %205, align 8, !alias.scope !10, !noalias !7
  br label %206

206:                                              ; preds = %186, %189
  %207 = icmp eq i64 %119, %136
  br i1 %207, label %278, label %208

208:                                              ; preds = %206, %121, %114
  %209 = phi %"class.spvtools::val::BasicBlock"** [ %107, %121 ], [ %107, %114 ], [ %137, %206 ]
  %210 = phi %"class.spvtools::val::BasicBlock"** [ %92, %121 ], [ %92, %114 ], [ %139, %206 ]
  %211 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %210, i64 -1
  %212 = ptrtoint %"class.spvtools::val::BasicBlock"** %211 to i64
  %213 = sub i64 %212, %96
  %214 = lshr i64 %213, 3
  %215 = add nuw nsw i64 %214, 1
  %216 = and i64 %215, 7
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %229, label %218

218:                                              ; preds = %208, %218
  %219 = phi %"class.spvtools::val::BasicBlock"** [ %226, %218 ], [ %209, %208 ]
  %220 = phi %"class.spvtools::val::BasicBlock"** [ %223, %218 ], [ %210, %208 ]
  %221 = phi i64 [ %227, %218 ], [ %216, %208 ]
  %222 = bitcast %"class.spvtools::val::BasicBlock"** %219 to i64*
  %223 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %220, i64 -1
  %224 = bitcast %"class.spvtools::val::BasicBlock"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  store i64 %225, i64* %222, align 8
  %226 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %219, i64 1
  %227 = add i64 %221, -1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %218, !llvm.loop !14

229:                                              ; preds = %218, %208
  %230 = phi %"class.spvtools::val::BasicBlock"** [ undef, %208 ], [ %226, %218 ]
  %231 = phi %"class.spvtools::val::BasicBlock"** [ %209, %208 ], [ %226, %218 ]
  %232 = phi %"class.spvtools::val::BasicBlock"** [ %210, %208 ], [ %223, %218 ]
  %233 = icmp ult i64 %213, 56
  br i1 %233, label %278, label %234

234:                                              ; preds = %229, %234
  %235 = phi %"class.spvtools::val::BasicBlock"** [ %276, %234 ], [ %231, %229 ]
  %236 = phi %"class.spvtools::val::BasicBlock"** [ %273, %234 ], [ %232, %229 ]
  %237 = bitcast %"class.spvtools::val::BasicBlock"** %235 to i64*
  %238 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %236, i64 -1
  %239 = bitcast %"class.spvtools::val::BasicBlock"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  store i64 %240, i64* %237, align 8
  %241 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %235, i64 1
  %242 = bitcast %"class.spvtools::val::BasicBlock"** %241 to i64*
  %243 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %236, i64 -2
  %244 = bitcast %"class.spvtools::val::BasicBlock"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  store i64 %245, i64* %242, align 8
  %246 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %235, i64 2
  %247 = bitcast %"class.spvtools::val::BasicBlock"** %246 to i64*
  %248 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %236, i64 -3
  %249 = bitcast %"class.spvtools::val::BasicBlock"** %248 to i64*
  %250 = load i64, i64* %249, align 8
  store i64 %250, i64* %247, align 8
  %251 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %235, i64 3
  %252 = bitcast %"class.spvtools::val::BasicBlock"** %251 to i64*
  %253 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %236, i64 -4
  %254 = bitcast %"class.spvtools::val::BasicBlock"** %253 to i64*
  %255 = load i64, i64* %254, align 8
  store i64 %255, i64* %252, align 8
  %256 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %235, i64 4
  %257 = bitcast %"class.spvtools::val::BasicBlock"** %256 to i64*
  %258 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %236, i64 -5
  %259 = bitcast %"class.spvtools::val::BasicBlock"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  store i64 %260, i64* %257, align 8
  %261 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %235, i64 5
  %262 = bitcast %"class.spvtools::val::BasicBlock"** %261 to i64*
  %263 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %236, i64 -6
  %264 = bitcast %"class.spvtools::val::BasicBlock"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  store i64 %265, i64* %262, align 8
  %266 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %235, i64 6
  %267 = bitcast %"class.spvtools::val::BasicBlock"** %266 to i64*
  %268 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %236, i64 -7
  %269 = bitcast %"class.spvtools::val::BasicBlock"** %268 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %267, align 8
  %271 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %235, i64 7
  %272 = bitcast %"class.spvtools::val::BasicBlock"** %271 to i64*
  %273 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %236, i64 -8
  %274 = bitcast %"class.spvtools::val::BasicBlock"** %273 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %272, align 8
  %276 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %235, i64 8
  %277 = icmp eq %"class.spvtools::val::BasicBlock"** %273, %95
  br i1 %277, label %278, label %234, !llvm.loop !16

278:                                              ; preds = %229, %234, %206
  %279 = phi %"class.spvtools::val::BasicBlock"** [ %137, %206 ], [ %230, %229 ], [ %276, %234 ]
  %280 = ptrtoint %"class.spvtools::val::BasicBlock"** %279 to i64
  br label %281

281:                                              ; preds = %278, %105
  %282 = phi i64 [ %112, %105 ], [ %280, %278 ]
  store i64 %282, i64* %111, align 8
  br label %283

283:                                              ; preds = %86, %281
  %284 = bitcast %"class.std::__1::vector"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %284) #13
  %285 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %286 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 1
  %287 = bitcast %"class.std::__1::function"* %21 to i8*
  %288 = bitcast %"class.std::__1::vector"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %288, i8 -86, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %287, i8* align 8 %53, i64 16, i1 false) #13
  %289 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %21, i64 0, i32 0, i32 1
  %290 = bitcast %"struct.std::__1::__function::__policy_invoker"* %289 to i64*
  %291 = load i64, i64* %56, align 8
  store i64 %291, i64* %290, align 8
  %292 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %21, i64 0, i32 0, i32 2
  %293 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %60, align 8
  store %"struct.std::__1::__function::__policy"* %293, %"struct.std::__1::__function::__policy"** %292, align 8
  %294 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %293, i64 0, i32 0
  %295 = load i8* (i8*)*, i8* (i8*)** %294, align 8
  %296 = icmp eq i8* (i8*)* %295, null
  br i1 %296, label %302, label %297

297:                                              ; preds = %283
  %298 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0, i32 0
  %299 = load i8*, i8** %298, align 8
  %300 = call i8* %295(i8* %299) #13
  %301 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %21, i64 0, i32 0, i32 0, i32 0
  store i8* %300, i8** %301, align 8
  br label %302

302:                                              ; preds = %283, %297
  %303 = bitcast %"class.std::__1::function"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %303, i8* align 8 %33, i64 16, i1 false) #13
  %304 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %22, i64 0, i32 0, i32 1
  %305 = bitcast %"struct.std::__1::__function::__policy_invoker"* %304 to i64*
  %306 = load i64, i64* %37, align 8
  store i64 %306, i64* %305, align 8
  %307 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %22, i64 0, i32 0, i32 2
  %308 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %41, align 8
  store %"struct.std::__1::__function::__policy"* %308, %"struct.std::__1::__function::__policy"** %307, align 8
  %309 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %308, i64 0, i32 0
  %310 = load i8* (i8*)*, i8* (i8*)** %309, align 8
  %311 = icmp eq i8* (i8*)* %310, null
  br i1 %311, label %317, label %312

312:                                              ; preds = %302
  %313 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0, i32 0
  %314 = load i8*, i8** %313, align 8
  %315 = call i8* %310(i8* %314) #13
  %316 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %22, i64 0, i32 0, i32 0, i32 0
  store i8* %315, i8** %316, align 8
  br label %317

317:                                              ; preds = %302, %312
  call void @_ZN8spvtools3CFAINS_3val10BasicBlockEE14TraversalRootsERKNSt3__16vectorIPS2_NS4_9allocatorIS6_EEEENS4_8functionIFPSA_PKS2_EEESH_(%"class.std::__1::vector"* nonnull sret %20, %"class.std::__1::vector"* nonnull dereferenceable(24) %19, %"class.std::__1::function"* nonnull %21, %"class.std::__1::function"* nonnull %22)
  %318 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %307, align 8
  %319 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %318, i64 0, i32 1
  %320 = load void (i8*)*, void (i8*)** %319, align 8
  %321 = icmp eq void (i8*)* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %317
  %323 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %22, i64 0, i32 0, i32 0, i32 0
  %324 = load i8*, i8** %323, align 8
  call void %320(i8* %324) #13
  br label %325

325:                                              ; preds = %317, %322
  %326 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %292, align 8
  %327 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %326, i64 0, i32 1
  %328 = load void (i8*)*, void (i8*)** %327, align 8
  %329 = icmp eq void (i8*)* %328, null
  br i1 %329, label %333, label %330

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %21, i64 0, i32 0, i32 0, i32 0
  %332 = load i8*, i8** %331, align 8
  call void %328(i8* %332) #13
  br label %333

333:                                              ; preds = %325, %330
  %334 = bitcast %"class.spvtools::val::BasicBlock"** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %334) #13
  %335 = bitcast %"class.spvtools::val::BasicBlock"** %23 to i64*
  store i64 %27, i64* %335, align 8
  %336 = getelementptr inbounds %"class.std::__1::unordered_map.40", %"class.std::__1::unordered_map.40"* %3, i64 0, i32 0
  %337 = bitcast %"class.std::__1::tuple.322"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %337) #13
  %338 = getelementptr inbounds %"class.std::__1::tuple.322", %"class.std::__1::tuple.322"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %23, %"class.spvtools::val::BasicBlock"*** %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %339) #13
  %340 = call { %"struct.std::__1::__hash_node_base.45"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.41"* %336, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %23, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.322"* nonnull dereferenceable(8) %14, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %15) #13
  %341 = extractvalue { %"struct.std::__1::__hash_node_base.45"*, i8 } %340, 0
  %342 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %341, i64 3
  %343 = bitcast %"struct.std::__1::__hash_node_base.45"* %342 to %"class.std::__1::vector"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %339) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %337) #13
  %344 = icmp eq %"class.std::__1::vector"* %16, %343
  br i1 %344, label %348, label %345

345:                                              ; preds = %333
  %346 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %30, align 8
  %347 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %31, align 8
  call void @_ZNSt3__16vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector"* %343, %"class.spvtools::val::BasicBlock"** %346, %"class.spvtools::val::BasicBlock"** %347) #13
  br label %348

348:                                              ; preds = %333, %345
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334) #13
  %349 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %30, align 8
  %350 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %31, align 8
  %351 = icmp eq %"class.spvtools::val::BasicBlock"** %349, %350
  br i1 %351, label %360, label %352

352:                                              ; preds = %348
  %353 = bitcast %"class.spvtools::val::BasicBlock"** %24 to i8*
  %354 = getelementptr inbounds %"class.std::__1::unordered_map.40", %"class.std::__1::unordered_map.40"* %4, i64 0, i32 0
  %355 = bitcast %"class.std::__1::tuple.322"* %10 to i8*
  %356 = getelementptr inbounds %"class.std::__1::tuple.322", %"class.std::__1::tuple.322"* %10, i64 0, i32 0, i32 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %11, i64 0, i32 0
  %358 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 1, i32 0
  %359 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0
  br label %386

360:                                              ; preds = %503, %348
  %361 = bitcast %"class.spvtools::val::BasicBlock"** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %361) #13
  %362 = bitcast %"class.spvtools::val::BasicBlock"** %25 to i64*
  store i64 %28, i64* %362, align 8
  %363 = getelementptr inbounds %"class.std::__1::unordered_map.40", %"class.std::__1::unordered_map.40"* %4, i64 0, i32 0
  %364 = bitcast %"class.std::__1::tuple.322"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %364) #13
  %365 = getelementptr inbounds %"class.std::__1::tuple.322", %"class.std::__1::tuple.322"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %25, %"class.spvtools::val::BasicBlock"*** %365, align 8
  %366 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %366) #13
  %367 = call { %"struct.std::__1::__hash_node_base.45"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.41"* %363, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %25, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.322"* nonnull dereferenceable(8) %12, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %13) #13
  %368 = extractvalue { %"struct.std::__1::__hash_node_base.45"*, i8 } %367, 0
  %369 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %368, i64 3
  %370 = bitcast %"struct.std::__1::__hash_node_base.45"* %369 to %"class.std::__1::vector"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %366) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %364) #13
  %371 = icmp eq %"class.std::__1::vector"* %20, %370
  br i1 %371, label %375, label %372

372:                                              ; preds = %360
  %373 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %285, align 8
  %374 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %286, align 8
  call void @_ZNSt3__16vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector"* %370, %"class.spvtools::val::BasicBlock"** %373, %"class.spvtools::val::BasicBlock"** %374) #13
  br label %375

375:                                              ; preds = %360, %372
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %361) #13
  %376 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %285, align 8
  %377 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %286, align 8
  %378 = icmp eq %"class.spvtools::val::BasicBlock"** %376, %377
  br i1 %378, label %513, label %379

379:                                              ; preds = %375
  %380 = bitcast %"class.spvtools::val::BasicBlock"** %26 to i8*
  %381 = bitcast %"class.std::__1::tuple.322"* %8 to i8*
  %382 = getelementptr inbounds %"class.std::__1::tuple.322", %"class.std::__1::tuple.322"* %8, i64 0, i32 0, i32 0, i32 0
  %383 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %9, i64 0, i32 0
  %384 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1, i32 0
  %385 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0
  br label %535

386:                                              ; preds = %352, %503
  %387 = phi %"class.spvtools::val::BasicBlock"** [ %349, %352 ], [ %509, %503 ]
  %388 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %387, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %353) #13
  store %"class.spvtools::val::BasicBlock"* %388, %"class.spvtools::val::BasicBlock"** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %355) #13
  store %"class.spvtools::val::BasicBlock"** %24, %"class.spvtools::val::BasicBlock"*** %356, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %357) #13
  %389 = call { %"struct.std::__1::__hash_node_base.45"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.41"* %354, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %24, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.322"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %11) #13
  %390 = extractvalue { %"struct.std::__1::__hash_node_base.45"*, i8 } %389, 0
  %391 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %390, i64 3
  %392 = bitcast %"struct.std::__1::__hash_node_base.45"* %391 to %"class.std::__1::vector"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %357) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %355) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %353) #13
  %393 = load %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)*, %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %358, align 8
  %394 = call %"class.std::__1::vector"* %393(%"union.std::__1::__function::__policy_storage"* %359, %"class.spvtools::val::BasicBlock"* %388) #13
  %395 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %394, i64 0, i32 0, i32 1
  %396 = bitcast %"class.spvtools::val::BasicBlock"*** %395 to i64*
  %397 = load i64, i64* %396, align 8
  %398 = bitcast %"class.std::__1::vector"* %394 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = sub i64 %397, %399
  %401 = ashr exact i64 %400, 3
  %402 = add nsw i64 %401, 1
  %403 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %390, i64 5
  %404 = bitcast %"struct.std::__1::__hash_node_base.45"* %403 to %"class.spvtools::val::BasicBlock"***
  %405 = bitcast %"struct.std::__1::__hash_node_base.45"* %403 to i64*
  %406 = load i64, i64* %405, align 8
  %407 = bitcast %"struct.std::__1::__hash_node_base.45"* %391 to i64*
  %408 = load i64, i64* %407, align 8
  %409 = sub i64 %406, %408
  %410 = ashr exact i64 %409, 3
  %411 = icmp ult i64 %410, %402
  %412 = inttoptr i64 %406 to %"class.spvtools::val::BasicBlock"**
  br i1 %411, label %413, label %438

413:                                              ; preds = %386
  %414 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %390, i64 4
  %415 = bitcast %"struct.std::__1::__hash_node_base.45"* %414 to i64*
  %416 = icmp ugt i64 %402, 2305843009213693951
  br i1 %416, label %417, label %418

417:                                              ; preds = %413
  call void @abort() #14
  unreachable

418:                                              ; preds = %413
  %419 = load i64, i64* %415, align 8
  %420 = sub i64 %419, %408
  %421 = ashr exact i64 %420, 3
  %422 = shl i64 %402, 3
  %423 = call i8* @_Znwm(i64 %422) #15
  %424 = bitcast i8* %423 to %"class.spvtools::val::BasicBlock"**
  %425 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %424, i64 %421
  %426 = ptrtoint %"class.spvtools::val::BasicBlock"** %425 to i64
  %427 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %424, i64 %402
  %428 = ptrtoint %"class.spvtools::val::BasicBlock"** %427 to i64
  %429 = ptrtoint i8* %423 to i64
  %430 = icmp sgt i64 %420, 0
  br i1 %430, label %431, label %433

431:                                              ; preds = %418
  %432 = inttoptr i64 %408 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %423, i8* align 8 %432, i64 %420, i1 false) #13
  br label %433

433:                                              ; preds = %431, %418
  store i64 %429, i64* %407, align 8
  store i64 %426, i64* %415, align 8
  store i64 %428, i64* %405, align 8
  %434 = icmp eq i64 %408, 0
  br i1 %434, label %438, label %435

435:                                              ; preds = %433
  %436 = inttoptr i64 %408 to i8*
  call void @_ZdlPv(i8* %436) #15
  %437 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %404, align 8
  br label %438

438:                                              ; preds = %386, %433, %435
  %439 = phi %"class.spvtools::val::BasicBlock"** [ %412, %386 ], [ %427, %433 ], [ %437, %435 ]
  %440 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %390, i64 4
  %441 = bitcast %"struct.std::__1::__hash_node_base.45"* %440 to %"class.spvtools::val::BasicBlock"***
  %442 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %441, align 8
  %443 = icmp eq %"class.spvtools::val::BasicBlock"** %442, %439
  br i1 %443, label %449, label %444

444:                                              ; preds = %438
  %445 = bitcast %"class.spvtools::val::BasicBlock"** %442 to i64*
  store i64 %27, i64* %445, align 8
  %446 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %442, i64 1
  %447 = ptrtoint %"class.spvtools::val::BasicBlock"** %446 to i64
  %448 = bitcast %"struct.std::__1::__hash_node_base.45"* %440 to i64*
  store i64 %447, i64* %448, align 8
  br label %503

449:                                              ; preds = %438
  %450 = ptrtoint %"class.spvtools::val::BasicBlock"** %439 to i64
  %451 = bitcast %"struct.std::__1::__hash_node_base.45"* %440 to i64*
  %452 = load i64, i64* %407, align 8
  %453 = sub i64 %450, %452
  %454 = ashr exact i64 %453, 3
  %455 = add nsw i64 %454, 1
  %456 = icmp ugt i64 %455, 2305843009213693951
  br i1 %456, label %457, label %459

457:                                              ; preds = %449
  %458 = bitcast %"struct.std::__1::__hash_node_base.45"* %391 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %458) #14
  unreachable

459:                                              ; preds = %449
  %460 = icmp ult i64 %454, 1152921504606846975
  br i1 %460, label %461, label %469

461:                                              ; preds = %459
  %462 = ashr exact i64 %453, 2
  %463 = icmp ult i64 %462, %455
  %464 = select i1 %463, i64 %455, i64 %462
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %474, label %466

466:                                              ; preds = %461
  %467 = icmp ugt i64 %464, 2305843009213693951
  br i1 %467, label %468, label %469

468:                                              ; preds = %466
  call void @abort() #14
  unreachable

469:                                              ; preds = %466, %459
  %470 = phi i64 [ %464, %466 ], [ 2305843009213693951, %459 ]
  %471 = shl i64 %470, 3
  %472 = call i8* @_Znwm(i64 %471) #15
  %473 = bitcast i8* %472 to %"class.spvtools::val::BasicBlock"**
  br label %474

474:                                              ; preds = %469, %461
  %475 = phi i64 [ %470, %469 ], [ 0, %461 ]
  %476 = phi %"class.spvtools::val::BasicBlock"** [ %473, %469 ], [ null, %461 ]
  %477 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %476, i64 %454
  %478 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %476, i64 %475
  %479 = ptrtoint %"class.spvtools::val::BasicBlock"** %478 to i64
  %480 = bitcast %"class.spvtools::val::BasicBlock"** %477 to i64*
  store i64 %27, i64* %480, align 8
  %481 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %477, i64 1
  %482 = ptrtoint %"class.spvtools::val::BasicBlock"** %481 to i64
  %483 = bitcast %"struct.std::__1::__hash_node_base.45"* %391 to %"class.spvtools::val::BasicBlock"***
  %484 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %483, align 8
  %485 = load i64, i64* %451, align 8
  %486 = ptrtoint %"class.spvtools::val::BasicBlock"** %484 to i64
  %487 = sub i64 %485, %486
  %488 = ashr exact i64 %487, 3
  %489 = sub nsw i64 0, %488
  %490 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %477, i64 %489
  %491 = ptrtoint %"class.spvtools::val::BasicBlock"** %490 to i64
  %492 = icmp sgt i64 %487, 0
  br i1 %492, label %493, label %497

493:                                              ; preds = %474
  %494 = bitcast %"class.spvtools::val::BasicBlock"** %490 to i8*
  %495 = bitcast %"class.spvtools::val::BasicBlock"** %484 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %494, i8* align 8 %495, i64 %487, i1 false) #13
  %496 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %483, align 8
  br label %497

497:                                              ; preds = %493, %474
  %498 = phi %"class.spvtools::val::BasicBlock"** [ %484, %474 ], [ %496, %493 ]
  store i64 %491, i64* %407, align 8
  store i64 %482, i64* %451, align 8
  store i64 %479, i64* %405, align 8
  %499 = icmp eq %"class.spvtools::val::BasicBlock"** %498, null
  br i1 %499, label %503, label %500

500:                                              ; preds = %497
  %501 = bitcast %"class.spvtools::val::BasicBlock"** %498 to i8*
  call void @_ZdlPv(i8* %501) #15
  %502 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %441, align 8
  br label %503

503:                                              ; preds = %444, %497, %500
  %504 = phi %"class.spvtools::val::BasicBlock"** [ %446, %444 ], [ %481, %497 ], [ %502, %500 ]
  %505 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %394, i64 0, i32 0, i32 0
  %506 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %505, align 8
  %507 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %395, align 8
  %508 = call %"class.spvtools::val::BasicBlock"** @_ZNSt3__16vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPKS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISE_E9referenceEEE5valueENS9_IPS4_EEE4typeESC_SE_SE_(%"class.std::__1::vector"* %392, %"class.spvtools::val::BasicBlock"** %504, %"class.spvtools::val::BasicBlock"** %506, %"class.spvtools::val::BasicBlock"** %507)
  %509 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %387, i64 1
  %510 = icmp eq %"class.spvtools::val::BasicBlock"** %509, %350
  br i1 %510, label %360, label %386

511:                                              ; preds = %652
  %512 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %285, align 8
  br label %513

513:                                              ; preds = %511, %375
  %514 = phi %"class.spvtools::val::BasicBlock"** [ %512, %511 ], [ %376, %375 ]
  %515 = icmp eq %"class.spvtools::val::BasicBlock"** %514, null
  br i1 %515, label %520, label %516

516:                                              ; preds = %513
  %517 = ptrtoint %"class.spvtools::val::BasicBlock"** %514 to i64
  %518 = bitcast %"class.spvtools::val::BasicBlock"*** %286 to i64*
  store i64 %517, i64* %518, align 8
  %519 = bitcast %"class.spvtools::val::BasicBlock"** %514 to i8*
  call void @_ZdlPv(i8* %519) #15
  br label %520

520:                                              ; preds = %513, %516
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %284) #13
  %521 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %88, align 8
  %522 = icmp eq %"class.spvtools::val::BasicBlock"** %521, null
  br i1 %522, label %527, label %523

523:                                              ; preds = %520
  %524 = ptrtoint %"class.spvtools::val::BasicBlock"** %521 to i64
  %525 = bitcast %"class.spvtools::val::BasicBlock"*** %89 to i64*
  store i64 %524, i64* %525, align 8
  %526 = bitcast %"class.spvtools::val::BasicBlock"** %521 to i8*
  call void @_ZdlPv(i8* %526) #15
  br label %527

527:                                              ; preds = %520, %523
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #13
  %528 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %30, align 8
  %529 = icmp eq %"class.spvtools::val::BasicBlock"** %528, null
  br i1 %529, label %534, label %530

530:                                              ; preds = %527
  %531 = ptrtoint %"class.spvtools::val::BasicBlock"** %528 to i64
  %532 = bitcast %"class.spvtools::val::BasicBlock"*** %31 to i64*
  store i64 %531, i64* %532, align 8
  %533 = bitcast %"class.spvtools::val::BasicBlock"** %528 to i8*
  call void @_ZdlPv(i8* %533) #15
  br label %534

534:                                              ; preds = %527, %530
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  ret void

535:                                              ; preds = %379, %652
  %536 = phi %"class.spvtools::val::BasicBlock"** [ %376, %379 ], [ %658, %652 ]
  %537 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %536, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %380) #13
  store %"class.spvtools::val::BasicBlock"* %537, %"class.spvtools::val::BasicBlock"** %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %381) #13
  store %"class.spvtools::val::BasicBlock"** %26, %"class.spvtools::val::BasicBlock"*** %382, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %383) #13
  %538 = call { %"struct.std::__1::__hash_node_base.45"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.41"* %336, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %26, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.322"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %9) #13
  %539 = extractvalue { %"struct.std::__1::__hash_node_base.45"*, i8 } %538, 0
  %540 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %539, i64 3
  %541 = bitcast %"struct.std::__1::__hash_node_base.45"* %540 to %"class.std::__1::vector"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %383) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %381) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %380) #13
  %542 = load %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)*, %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %384, align 8
  %543 = call %"class.std::__1::vector"* %542(%"union.std::__1::__function::__policy_storage"* %385, %"class.spvtools::val::BasicBlock"* %537) #13
  %544 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %543, i64 0, i32 0, i32 1
  %545 = bitcast %"class.spvtools::val::BasicBlock"*** %544 to i64*
  %546 = load i64, i64* %545, align 8
  %547 = bitcast %"class.std::__1::vector"* %543 to i64*
  %548 = load i64, i64* %547, align 8
  %549 = sub i64 %546, %548
  %550 = ashr exact i64 %549, 3
  %551 = add nsw i64 %550, 1
  %552 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %539, i64 5
  %553 = bitcast %"struct.std::__1::__hash_node_base.45"* %552 to %"class.spvtools::val::BasicBlock"***
  %554 = bitcast %"struct.std::__1::__hash_node_base.45"* %552 to i64*
  %555 = load i64, i64* %554, align 8
  %556 = bitcast %"struct.std::__1::__hash_node_base.45"* %540 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = sub i64 %555, %557
  %559 = ashr exact i64 %558, 3
  %560 = icmp ult i64 %559, %551
  %561 = inttoptr i64 %555 to %"class.spvtools::val::BasicBlock"**
  br i1 %560, label %562, label %587

562:                                              ; preds = %535
  %563 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %539, i64 4
  %564 = bitcast %"struct.std::__1::__hash_node_base.45"* %563 to i64*
  %565 = icmp ugt i64 %551, 2305843009213693951
  br i1 %565, label %566, label %567

566:                                              ; preds = %562
  call void @abort() #14
  unreachable

567:                                              ; preds = %562
  %568 = load i64, i64* %564, align 8
  %569 = sub i64 %568, %557
  %570 = ashr exact i64 %569, 3
  %571 = shl i64 %551, 3
  %572 = call i8* @_Znwm(i64 %571) #15
  %573 = bitcast i8* %572 to %"class.spvtools::val::BasicBlock"**
  %574 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %573, i64 %570
  %575 = ptrtoint %"class.spvtools::val::BasicBlock"** %574 to i64
  %576 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %573, i64 %551
  %577 = ptrtoint %"class.spvtools::val::BasicBlock"** %576 to i64
  %578 = ptrtoint i8* %572 to i64
  %579 = icmp sgt i64 %569, 0
  br i1 %579, label %580, label %582

580:                                              ; preds = %567
  %581 = inttoptr i64 %557 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %572, i8* align 8 %581, i64 %569, i1 false) #13
  br label %582

582:                                              ; preds = %580, %567
  store i64 %578, i64* %556, align 8
  store i64 %575, i64* %564, align 8
  store i64 %577, i64* %554, align 8
  %583 = icmp eq i64 %557, 0
  br i1 %583, label %587, label %584

584:                                              ; preds = %582
  %585 = inttoptr i64 %557 to i8*
  call void @_ZdlPv(i8* %585) #15
  %586 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %553, align 8
  br label %587

587:                                              ; preds = %535, %582, %584
  %588 = phi %"class.spvtools::val::BasicBlock"** [ %561, %535 ], [ %576, %582 ], [ %586, %584 ]
  %589 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %539, i64 4
  %590 = bitcast %"struct.std::__1::__hash_node_base.45"* %589 to %"class.spvtools::val::BasicBlock"***
  %591 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %590, align 8
  %592 = icmp eq %"class.spvtools::val::BasicBlock"** %591, %588
  br i1 %592, label %598, label %593

593:                                              ; preds = %587
  %594 = bitcast %"class.spvtools::val::BasicBlock"** %591 to i64*
  store i64 %28, i64* %594, align 8
  %595 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %591, i64 1
  %596 = ptrtoint %"class.spvtools::val::BasicBlock"** %595 to i64
  %597 = bitcast %"struct.std::__1::__hash_node_base.45"* %589 to i64*
  store i64 %596, i64* %597, align 8
  br label %652

598:                                              ; preds = %587
  %599 = ptrtoint %"class.spvtools::val::BasicBlock"** %588 to i64
  %600 = bitcast %"struct.std::__1::__hash_node_base.45"* %589 to i64*
  %601 = load i64, i64* %556, align 8
  %602 = sub i64 %599, %601
  %603 = ashr exact i64 %602, 3
  %604 = add nsw i64 %603, 1
  %605 = icmp ugt i64 %604, 2305843009213693951
  br i1 %605, label %606, label %608

606:                                              ; preds = %598
  %607 = bitcast %"struct.std::__1::__hash_node_base.45"* %540 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %607) #14
  unreachable

608:                                              ; preds = %598
  %609 = icmp ult i64 %603, 1152921504606846975
  br i1 %609, label %610, label %618

610:                                              ; preds = %608
  %611 = ashr exact i64 %602, 2
  %612 = icmp ult i64 %611, %604
  %613 = select i1 %612, i64 %604, i64 %611
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %623, label %615

615:                                              ; preds = %610
  %616 = icmp ugt i64 %613, 2305843009213693951
  br i1 %616, label %617, label %618

617:                                              ; preds = %615
  call void @abort() #14
  unreachable

618:                                              ; preds = %615, %608
  %619 = phi i64 [ %613, %615 ], [ 2305843009213693951, %608 ]
  %620 = shl i64 %619, 3
  %621 = call i8* @_Znwm(i64 %620) #15
  %622 = bitcast i8* %621 to %"class.spvtools::val::BasicBlock"**
  br label %623

623:                                              ; preds = %618, %610
  %624 = phi i64 [ %619, %618 ], [ 0, %610 ]
  %625 = phi %"class.spvtools::val::BasicBlock"** [ %622, %618 ], [ null, %610 ]
  %626 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %625, i64 %603
  %627 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %625, i64 %624
  %628 = ptrtoint %"class.spvtools::val::BasicBlock"** %627 to i64
  %629 = bitcast %"class.spvtools::val::BasicBlock"** %626 to i64*
  store i64 %28, i64* %629, align 8
  %630 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %626, i64 1
  %631 = ptrtoint %"class.spvtools::val::BasicBlock"** %630 to i64
  %632 = bitcast %"struct.std::__1::__hash_node_base.45"* %540 to %"class.spvtools::val::BasicBlock"***
  %633 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %632, align 8
  %634 = load i64, i64* %600, align 8
  %635 = ptrtoint %"class.spvtools::val::BasicBlock"** %633 to i64
  %636 = sub i64 %634, %635
  %637 = ashr exact i64 %636, 3
  %638 = sub nsw i64 0, %637
  %639 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %626, i64 %638
  %640 = ptrtoint %"class.spvtools::val::BasicBlock"** %639 to i64
  %641 = icmp sgt i64 %636, 0
  br i1 %641, label %642, label %646

642:                                              ; preds = %623
  %643 = bitcast %"class.spvtools::val::BasicBlock"** %639 to i8*
  %644 = bitcast %"class.spvtools::val::BasicBlock"** %633 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %643, i8* align 8 %644, i64 %636, i1 false) #13
  %645 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %632, align 8
  br label %646

646:                                              ; preds = %642, %623
  %647 = phi %"class.spvtools::val::BasicBlock"** [ %633, %623 ], [ %645, %642 ]
  store i64 %640, i64* %556, align 8
  store i64 %631, i64* %600, align 8
  store i64 %628, i64* %554, align 8
  %648 = icmp eq %"class.spvtools::val::BasicBlock"** %647, null
  br i1 %648, label %652, label %649

649:                                              ; preds = %646
  %650 = bitcast %"class.spvtools::val::BasicBlock"** %647 to i8*
  call void @_ZdlPv(i8* %650) #15
  %651 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %590, align 8
  br label %652

652:                                              ; preds = %593, %646, %649
  %653 = phi %"class.spvtools::val::BasicBlock"** [ %595, %593 ], [ %630, %646 ], [ %651, %649 ]
  %654 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %543, i64 0, i32 0, i32 0
  %655 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %654, align 8
  %656 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %544, align 8
  %657 = call %"class.spvtools::val::BasicBlock"** @_ZNSt3__16vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPKS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISE_E9referenceEEE5valueENS9_IPS4_EEE4typeESC_SE_SE_(%"class.std::__1::vector"* %541, %"class.spvtools::val::BasicBlock"** %653, %"class.spvtools::val::BasicBlock"** %655, %"class.spvtools::val::BasicBlock"** %656)
  %658 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %536, i64 1
  %659 = icmp eq %"class.spvtools::val::BasicBlock"** %658, %377
  br i1 %659, label %511, label %535
}

declare %"class.spvtools::val::BasicBlock"* @_ZNK8spvtools3val9Construct11entry_blockEv(%"class.spvtools::val::Construct"*) local_unnamed_addr #1

declare i32 @_ZNK8spvtools3val9Construct4typeEv(%"class.spvtools::val::Construct"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3val8Function13GetBlockDepthEPNS0_10BasicBlockE(%"class.spvtools::val::Function"*, %"class.spvtools::val::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.269", align 8
  %4 = alloca %"class.std::__1::tuple.272", align 1
  %5 = alloca %"class.std::__1::tuple.269", align 8
  %6 = alloca %"class.std::__1::tuple.272", align 1
  %7 = alloca %"class.std::__1::tuple.269", align 8
  %8 = alloca %"class.std::__1::tuple.272", align 1
  %9 = alloca %"class.std::__1::tuple.269", align 8
  %10 = alloca %"class.std::__1::tuple.272", align 1
  %11 = alloca %"class.std::__1::tuple.269", align 8
  %12 = alloca %"class.std::__1::tuple.272", align 1
  %13 = alloca %"class.std::__1::tuple.269", align 8
  %14 = alloca %"class.std::__1::tuple.272", align 1
  %15 = alloca %"class.std::__1::tuple.425", align 8
  %16 = alloca %"class.std::__1::tuple.272", align 1
  %17 = alloca %"class.std::__1::tuple.269", align 8
  %18 = alloca %"class.std::__1::tuple.272", align 1
  %19 = alloca %"class.std::__1::tuple.269", align 8
  %20 = alloca %"class.std::__1::tuple.272", align 1
  %21 = alloca %"class.std::__1::tuple.269", align 8
  %22 = alloca %"class.std::__1::tuple.272", align 1
  %23 = alloca %"class.spvtools::val::BasicBlock"*, align 8
  %24 = alloca %"struct.std::__1::pair.235", align 8
  store %"class.spvtools::val::BasicBlock"* %1, %"class.spvtools::val::BasicBlock"** %23, align 8
  %25 = icmp eq %"class.spvtools::val::BasicBlock"* %1, null
  %26 = ptrtoint %"class.spvtools::val::BasicBlock"* %1 to i64
  br i1 %25, label %210, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 22
  %29 = lshr i64 %26, 32
  %30 = shl i64 %26, 3
  %31 = and i64 %30, 4294967288
  %32 = add nuw nsw i64 %31, 8
  %33 = xor i64 %32, %29
  %34 = mul i64 %33, -7070675565921424023
  %35 = lshr i64 %34, 47
  %36 = xor i64 %34, %29
  %37 = xor i64 %36, %35
  %38 = mul i64 %37, -7070675565921424023
  %39 = lshr i64 %38, 47
  %40 = xor i64 %39, %38
  %41 = mul i64 %40, -7070675565921424023
  %42 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %99, label %45

45:                                               ; preds = %27
  %46 = tail call i64 @llvm.ctpop.i64(i64 %43) #13, !range !2
  %47 = icmp ugt i64 %46, 1
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = add i64 %43, -1
  %50 = and i64 %41, %49
  br label %55

51:                                               ; preds = %45
  %52 = icmp ult i64 %41, %43
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %41, %43
  br label %55

55:                                               ; preds = %53, %51, %48
  %56 = phi i64 [ %50, %48 ], [ %54, %53 ], [ %41, %51 ]
  %57 = getelementptr inbounds %"class.std::__1::unordered_map.157", %"class.std::__1::unordered_map.157"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %58, i64 %56
  %60 = load %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base.162"* %60, null
  br i1 %61, label %99, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %60, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base.162"* %64, null
  br i1 %65, label %99, label %66

66:                                               ; preds = %62
  %67 = add i64 %43, -1
  br label %68

68:                                               ; preds = %89, %66
  %69 = phi %"struct.std::__1::__hash_node_base.162"* [ %64, %66 ], [ %91, %89 ]
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %69, i64 1
  %71 = bitcast %"struct.std::__1::__hash_node_base.162"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, %41
  br i1 %73, label %84, label %74

74:                                               ; preds = %68
  br i1 %47, label %77, label %75

75:                                               ; preds = %74
  %76 = and i64 %72, %67
  br label %81

77:                                               ; preds = %74
  %78 = icmp ult i64 %72, %43
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = urem i64 %72, %43
  br label %81

81:                                               ; preds = %79, %77, %75
  %82 = phi i64 [ %76, %75 ], [ %80, %79 ], [ %72, %77 ]
  %83 = icmp eq i64 %82, %56
  br i1 %83, label %89, label %99

84:                                               ; preds = %68
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %69, i64 2
  %86 = bitcast %"struct.std::__1::__hash_node_base.162"* %85 to %"class.spvtools::val::BasicBlock"**
  %87 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %86, align 8
  %88 = icmp eq %"class.spvtools::val::BasicBlock"* %87, %1
  br i1 %88, label %93, label %89

89:                                               ; preds = %84, %81
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %69, i64 0, i32 0
  %91 = load %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %90, align 8
  %92 = icmp eq %"struct.std::__1::__hash_node_base.162"* %91, null
  br i1 %92, label %99, label %68

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.std::__1::unordered_map.157", %"class.std::__1::unordered_map.157"* %28, i64 0, i32 0
  %95 = bitcast %"class.std::__1::tuple.269"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #13
  %96 = getelementptr inbounds %"class.std::__1::tuple.269", %"class.std::__1::tuple.269"* %21, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %23, %"class.spvtools::val::BasicBlock"*** %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %22, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %97) #13
  %98 = call { %"struct.std::__1::__hash_node_base.162"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.158"* %94, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %23, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.269"* nonnull dereferenceable(8) %21, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %22) #13
  br label %202

99:                                               ; preds = %81, %89, %55, %27, %62
  %100 = tail call %"class.spvtools::val::BasicBlock"* @_ZN8spvtools3val10BasicBlock19immediate_dominatorEv(%"class.spvtools::val::BasicBlock"* nonnull %1) #13
  %101 = icmp eq %"class.spvtools::val::BasicBlock"* %100, null
  %102 = icmp eq %"class.spvtools::val::BasicBlock"* %100, %1
  %103 = or i1 %101, %102
  br i1 %103, label %104, label %110

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.std::__1::unordered_map.157", %"class.std::__1::unordered_map.157"* %28, i64 0, i32 0
  %106 = bitcast %"class.std::__1::tuple.269"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #13
  %107 = getelementptr inbounds %"class.std::__1::tuple.269", %"class.std::__1::tuple.269"* %19, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %23, %"class.spvtools::val::BasicBlock"*** %107, align 8
  %108 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %108) #13
  %109 = call { %"struct.std::__1::__hash_node_base.162"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.158"* %105, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %23, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.269"* nonnull dereferenceable(8) %19, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %20) #13
  br label %189

110:                                              ; preds = %99
  %111 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %1, i64 0, i32 5, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, 32
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %151, label %115

115:                                              ; preds = %110
  %116 = bitcast %"struct.std::__1::pair.235"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #13
  %117 = bitcast %"struct.std::__1::pair.235"* %24 to i64*
  store i64 %26, i64* %117, align 8
  %118 = getelementptr inbounds %"struct.std::__1::pair.235", %"struct.std::__1::pair.235"* %24, i64 0, i32 1
  store i32 2, i32* %118, align 8
  %119 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 19, i32 0
  %120 = bitcast %"class.std::__1::tuple.425"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #13
  %121 = getelementptr inbounds %"class.std::__1::tuple.425", %"class.std::__1::tuple.425"* %15, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::pair.235"* %24, %"struct.std::__1::pair.235"** %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %122) #13
  %123 = call { %"struct.std::__1::__hash_node_base.84"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIPKN8spvtools3val10BasicBlockENS4_13ConstructTypeEEEPNS4_9ConstructEEENS_22__unordered_map_hasherIS9_SC_NS4_24bb_constr_type_pair_hashENS_8equal_toIS9_EELb1EEENS_21__unordered_map_equalIS9_SC_SG_SE_Lb1EEENS_9allocatorISC_EEE25__emplace_unique_key_argsIS9_JRKNS_21piecewise_construct_tENS_5tupleIJOS9_EEENSR_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.80"* %119, %"struct.std::__1::pair.235"* nonnull dereferenceable(16) %24, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.425"* nonnull dereferenceable(8) %15, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %16) #13
  %124 = extractvalue { %"struct.std::__1::__hash_node_base.84"*, i8 } %123, 0
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %124, i64 4
  %126 = bitcast %"struct.std::__1::__hash_node_base.84"* %125 to %"class.spvtools::val::Construct"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %122) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #13
  %127 = load %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %126, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #13
  %128 = call dereferenceable(24) %"class.std::__1::vector.202"* @_ZN8spvtools3val9Construct24corresponding_constructsEv(%"class.spvtools::val::Construct"* %127) #13
  %129 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %128, i64 0, i32 0, i32 0
  %130 = load %"class.spvtools::val::Construct"**, %"class.spvtools::val::Construct"*** %129, align 8
  %131 = load %"class.spvtools::val::Construct"*, %"class.spvtools::val::Construct"** %130, align 8
  %132 = call %"class.spvtools::val::BasicBlock"* @_ZN8spvtools3val9Construct11entry_blockEv(%"class.spvtools::val::Construct"* %131) #13
  %133 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %23, align 8
  %134 = icmp eq %"class.spvtools::val::BasicBlock"* %132, %133
  br i1 %134, label %135, label %143

135:                                              ; preds = %115
  %136 = call i32 @_ZN8spvtools3val8Function13GetBlockDepthEPNS0_10BasicBlockE(%"class.spvtools::val::Function"* %0, %"class.spvtools::val::BasicBlock"* nonnull %100)
  %137 = add nsw i32 %136, 1
  %138 = getelementptr inbounds %"class.std::__1::unordered_map.157", %"class.std::__1::unordered_map.157"* %28, i64 0, i32 0
  %139 = bitcast %"class.std::__1::tuple.269"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #13
  %140 = getelementptr inbounds %"class.std::__1::tuple.269", %"class.std::__1::tuple.269"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %23, %"class.spvtools::val::BasicBlock"*** %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %141) #13
  %142 = call { %"struct.std::__1::__hash_node_base.162"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.158"* %138, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %23, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.269"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %10) #13
  br label %189

143:                                              ; preds = %115
  %144 = call i32 @_ZN8spvtools3val8Function13GetBlockDepthEPNS0_10BasicBlockE(%"class.spvtools::val::Function"* %0, %"class.spvtools::val::BasicBlock"* %132)
  %145 = add nsw i32 %144, 1
  %146 = getelementptr inbounds %"class.std::__1::unordered_map.157", %"class.std::__1::unordered_map.157"* %28, i64 0, i32 0
  %147 = bitcast %"class.std::__1::tuple.269"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #13
  %148 = getelementptr inbounds %"class.std::__1::tuple.269", %"class.std::__1::tuple.269"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %23, %"class.spvtools::val::BasicBlock"*** %148, align 8
  %149 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %149) #13
  %150 = call { %"struct.std::__1::__hash_node_base.162"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.158"* %146, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %23, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.269"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %6) #13
  br label %189

151:                                              ; preds = %110
  %152 = and i64 %112, 8
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %170, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 20, i32 0
  %156 = bitcast %"class.std::__1::tuple.269"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #13
  %157 = getelementptr inbounds %"class.std::__1::tuple.269", %"class.std::__1::tuple.269"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %23, %"class.spvtools::val::BasicBlock"*** %157, align 8
  %158 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %158) #13
  %159 = call { %"struct.std::__1::__hash_node_base.110"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.106"* %155, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %23, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.269"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %4) #13
  %160 = extractvalue { %"struct.std::__1::__hash_node_base.110"*, i8 } %159, 0
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %160, i64 3
  %162 = bitcast %"struct.std::__1::__hash_node_base.110"* %161 to %"class.spvtools::val::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %158) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #13
  %163 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %162, align 8
  %164 = call i32 @_ZN8spvtools3val8Function13GetBlockDepthEPNS0_10BasicBlockE(%"class.spvtools::val::Function"* %0, %"class.spvtools::val::BasicBlock"* %163)
  %165 = getelementptr inbounds %"class.std::__1::unordered_map.157", %"class.std::__1::unordered_map.157"* %28, i64 0, i32 0
  %166 = bitcast %"class.std::__1::tuple.269"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #13
  %167 = getelementptr inbounds %"class.std::__1::tuple.269", %"class.std::__1::tuple.269"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %23, %"class.spvtools::val::BasicBlock"*** %167, align 8
  %168 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %168) #13
  %169 = call { %"struct.std::__1::__hash_node_base.162"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.158"* %165, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %23, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.269"* nonnull dereferenceable(8) %17, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %18) #13
  br label %189

170:                                              ; preds = %151
  %171 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %100, i64 0, i32 5, i32 0, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = and i64 %172, 6
  %174 = icmp eq i64 %173, 0
  %175 = tail call i32 @_ZN8spvtools3val8Function13GetBlockDepthEPNS0_10BasicBlockE(%"class.spvtools::val::Function"* %0, %"class.spvtools::val::BasicBlock"* nonnull %100)
  br i1 %174, label %183, label %176

176:                                              ; preds = %170
  %177 = add nsw i32 %175, 1
  %178 = getelementptr inbounds %"class.std::__1::unordered_map.157", %"class.std::__1::unordered_map.157"* %28, i64 0, i32 0
  %179 = bitcast %"class.std::__1::tuple.269"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #13
  %180 = getelementptr inbounds %"class.std::__1::tuple.269", %"class.std::__1::tuple.269"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %23, %"class.spvtools::val::BasicBlock"*** %180, align 8
  %181 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %181) #13
  %182 = call { %"struct.std::__1::__hash_node_base.162"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.158"* %178, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %23, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.269"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %14) #13
  br label %189

183:                                              ; preds = %170
  %184 = getelementptr inbounds %"class.std::__1::unordered_map.157", %"class.std::__1::unordered_map.157"* %28, i64 0, i32 0
  %185 = bitcast %"class.std::__1::tuple.269"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #13
  %186 = getelementptr inbounds %"class.std::__1::tuple.269", %"class.std::__1::tuple.269"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %23, %"class.spvtools::val::BasicBlock"*** %186, align 8
  %187 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %187) #13
  %188 = call { %"struct.std::__1::__hash_node_base.162"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.158"* %184, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %23, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.269"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %8) #13
  br label %189

189:                                              ; preds = %135, %143, %176, %183, %154, %104
  %190 = phi { %"struct.std::__1::__hash_node_base.162"*, i8 } [ %142, %135 ], [ %150, %143 ], [ %182, %176 ], [ %188, %183 ], [ %169, %154 ], [ %109, %104 ]
  %191 = phi i8* [ %141, %135 ], [ %149, %143 ], [ %181, %176 ], [ %187, %183 ], [ %168, %154 ], [ %108, %104 ]
  %192 = phi i8* [ %139, %135 ], [ %147, %143 ], [ %179, %176 ], [ %185, %183 ], [ %166, %154 ], [ %106, %104 ]
  %193 = phi i32 [ %137, %135 ], [ %145, %143 ], [ %177, %176 ], [ %175, %183 ], [ %164, %154 ], [ 0, %104 ]
  %194 = extractvalue { %"struct.std::__1::__hash_node_base.162"*, i8 } %190, 0
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %194, i64 3
  %196 = bitcast %"struct.std::__1::__hash_node_base.162"* %195 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %191) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #13
  store i32 %193, i32* %196, align 4
  %197 = getelementptr inbounds %"class.std::__1::unordered_map.157", %"class.std::__1::unordered_map.157"* %28, i64 0, i32 0
  %198 = bitcast %"class.std::__1::tuple.269"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #13
  %199 = getelementptr inbounds %"class.std::__1::tuple.269", %"class.std::__1::tuple.269"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::val::BasicBlock"** %23, %"class.spvtools::val::BasicBlock"*** %199, align 8
  %200 = getelementptr inbounds %"class.std::__1::tuple.272", %"class.std::__1::tuple.272"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %200) #13
  %201 = call { %"struct.std::__1::__hash_node_base.162"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.158"* %197, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %23, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.269"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.272"* nonnull dereferenceable(1) %12) #13
  br label %202

202:                                              ; preds = %93, %189
  %203 = phi { %"struct.std::__1::__hash_node_base.162"*, i8 } [ %201, %189 ], [ %98, %93 ]
  %204 = phi i8* [ %200, %189 ], [ %97, %93 ]
  %205 = phi i8* [ %198, %189 ], [ %95, %93 ]
  %206 = extractvalue { %"struct.std::__1::__hash_node_base.162"*, i8 } %203, 0
  %207 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %206, i64 3
  %208 = bitcast %"struct.std::__1::__hash_node_base.162"* %207 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %204) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #13
  %209 = load i32, i32* %208, align 4
  br label %210

210:                                              ; preds = %202, %2
  %211 = phi i32 [ 0, %2 ], [ %209, %202 ]
  ret i32 %211
}

declare %"class.spvtools::val::BasicBlock"* @_ZN8spvtools3val10BasicBlock19immediate_dominatorEv(%"class.spvtools::val::BasicBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3val8Function32RegisterExecutionModelLimitationE18SpvExecutionModel_RKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.spvtools::val::Function"*, i32, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.anon.255, align 8
  %5 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 23
  %6 = getelementptr inbounds %class.anon.255, %class.anon.255* %4, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %class.anon.255, %class.anon.255* %4, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #13
  br label %21

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %7, i8* %17, i64 %19) #13
  %20 = load i32, i32* %6, align 8
  br label %21

21:                                               ; preds = %12, %15
  %22 = phi i32 [ %1, %12 ], [ %20, %15 ]
  %23 = call i8* @_Znwm(i64 32) #15, !noalias !17
  %24 = bitcast i8* %23 to i32*
  store i32 %22, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %31, i64 24, i1 false) #13
  br label %38

32:                                               ; preds = %21
  %33 = bitcast i8* %25 to %"class.std::__1::basic_string"*
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %class.anon.255, %class.anon.255* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %33, i8* %35, i64 %37) #13
  br label %38

38:                                               ; preds = %30, %32
  %39 = call i8* @_Znwm(i64 48) #15, !noalias !22
  %40 = bitcast i8* %39 to %"struct.std::__1::__list_node_base.183"**
  %41 = getelementptr inbounds i8, i8* %39, i64 16
  %42 = bitcast i8* %41 to i8**
  store i8* %23, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %39, i64 32
  %44 = bitcast i8* %43 to i64*
  store i64 ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, i32, %"class.std::__1::basic_string"*)* @"_ZNSt3__110__function16__policy_invokerIFb18SpvExecutionModel_PNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3val8Function32RegisterExecutionModelLimitationES2_RKS8_E3$_5SA_EEEEbPKNS0_16__policy_storageES2_S9_" to i64), i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %39, i64 40
  %46 = bitcast i8* %45 to %"struct.std::__1::__function::__policy"**
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3val8Function32RegisterExecutionModelLimitationE18SpvExecutionModel_RKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_5FbS7_PSD_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::list.181", %"class.std::__1::list.181"* %5, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds i8, i8* %39, i64 8
  %49 = bitcast i8* %48 to %"struct.std::__1::__list_node_base.183"**
  store %"struct.std::__1::__list_node_base.183"* %47, %"struct.std::__1::__list_node_base.183"** %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::list.181", %"class.std::__1::list.181"* %5, i64 0, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__list_node_base.183"*, %"struct.std::__1::__list_node_base.183"** %50, align 8
  store %"struct.std::__1::__list_node_base.183"* %51, %"struct.std::__1::__list_node_base.183"** %40, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__list_node_base.183", %"struct.std::__1::__list_node_base.183"* %51, i64 0, i32 1
  %53 = bitcast %"struct.std::__1::__list_node_base.183"** %52 to i8**
  store i8* %39, i8** %53, align 8
  %54 = bitcast %"class.std::__1::list.181"* %5 to i8**
  store i8* %39, i8** %54, align 8
  %55 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 23, i32 0, i32 1, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %55, align 8
  %58 = load i8, i8* %27, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %38
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #15
  br label %63

63:                                               ; preds = %38, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3val8Function30IsCompatibleWithExecutionModelE18SpvExecutionModel_PNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.spvtools::val::Function"*, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_stringstream", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_stringstream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 272, i1 false)
  %10 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %13, i64 0, i32 0
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_stringstream"* %4 to i64*
  store i64 %15, i64* %16, align 8
  %17 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %18 = bitcast %"class.std::__1::basic_stringstream"* %4 to i8**
  %19 = inttoptr i64 %15 to i8*
  %20 = getelementptr i8, i8* %19, i64 -24
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %7, i64 %22
  %24 = bitcast i8* %23 to i64*
  store i64 %17, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %25, align 8
  %26 = load i8*, i8** %18, align 8
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %7, i64 %29
  %31 = bitcast i8* %30 to %"class.std::__1::ios_base"*
  %32 = bitcast %"class.std::__1::basic_stringbuf"* %13 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %31, i8* %32) #13
  %33 = getelementptr inbounds i8, i8* %30, i64 136
  %34 = bitcast i8* %33 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %34, align 8
  %35 = getelementptr inbounds i8, i8* %30, i64 144
  %36 = bitcast i8* %35 to i32*
  store i32 -1, i32* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 0, i32 1
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %39 = bitcast %"class.std::__1::basic_ostream.base"* %37 to i64*
  store i64 %38, i64* %39, align 8
  %40 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %41 = inttoptr i64 %38 to i8*
  %42 = getelementptr i8, i8* %41, i64 -24
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::basic_ostream.base"* %37 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = bitcast i8* %46 to i64*
  store i64 %40, i64* %47, align 8
  %48 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %48, i64* %16, align 8
  %49 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %50 = inttoptr i64 %48 to i8*
  %51 = getelementptr i8, i8* %50, i64 -24
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds i8, i8* %7, i64 %53
  %55 = bitcast i8* %54 to i64*
  store i64 %49, i64* %55, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %14) #13
  %56 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %13, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 1, i32 1
  %58 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 1, i32 3
  %59 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 32, i1 false) #13
  store i32 24, i32* %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 23, i32 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 23, i32 0, i32 0
  %62 = bitcast %"struct.std::__1::__list_node_base.183"** %60 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = inttoptr i64 %63 to %"struct.std::__1::__list_node_base.183"*
  %65 = icmp eq %"struct.std::__1::__list_node_base.183"* %61, %64
  br i1 %65, label %130, label %66

66:                                               ; preds = %3
  %67 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = icmp eq %"class.std::__1::basic_string"* %2, null
  %71 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = bitcast %"class.std::__1::basic_ostream.base"* %37 to %"class.std::__1::basic_ostream"*
  br label %80

74:                                               ; preds = %111
  %75 = getelementptr inbounds %"struct.std::__1::__list_node_base.183", %"struct.std::__1::__list_node_base.183"* %81, i64 0, i32 1
  %76 = bitcast %"struct.std::__1::__list_node_base.183"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = inttoptr i64 %77 to %"struct.std::__1::__list_node_base.183"*
  %79 = icmp eq %"struct.std::__1::__list_node_base.183"* %61, %78
  br i1 %79, label %113, label %80

80:                                               ; preds = %66, %74
  %81 = phi %"struct.std::__1::__list_node_base.183"* [ %64, %66 ], [ %78, %74 ]
  %82 = phi i64 [ %63, %66 ], [ %77, %74 ]
  %83 = phi i8 [ 1, %66 ], [ %105, %74 ]
  %84 = inttoptr i64 %82 to %"struct.std::__1::__list_node.454"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #13
  %85 = getelementptr inbounds %"struct.std::__1::__list_node.454", %"struct.std::__1::__list_node.454"* %84, i64 0, i32 1, i32 0, i32 1, i32 0
  %86 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32, %"class.std::__1::basic_string"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32, %"class.std::__1::basic_string"*)** %85, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__list_node.454", %"struct.std::__1::__list_node.454"* %84, i64 0, i32 1, i32 0, i32 0
  %88 = call zeroext i1 %86(%"union.std::__1::__function::__policy_storage"* %87, i32 %1, %"class.std::__1::basic_string"* nonnull %5) #13
  %89 = or i1 %88, %70
  %90 = xor i1 %88, true
  %91 = zext i1 %90 to i32
  br i1 %89, label %104, label %92

92:                                               ; preds = %80
  %93 = load i8, i8* %72, align 1
  %94 = icmp slt i8 %93, 0
  %95 = load i64, i64* %69, align 8
  %96 = zext i8 %93 to i64
  %97 = select i1 %94, i64 %95, i64 %96
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %92
  %100 = load i8*, i8** %68, align 8
  %101 = select i1 %94, i8* %100, i8* %67
  %102 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %73, i8* %101, i64 %97) #13
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %102, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #13
  br label %104

104:                                              ; preds = %80, %99, %92
  %105 = phi i8 [ %83, %80 ], [ 0, %92 ], [ 0, %99 ]
  %106 = phi i32 [ %91, %80 ], [ 0, %92 ], [ 0, %99 ]
  %107 = load i8, i8* %72, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %110) #15
  br label %111

111:                                              ; preds = %104, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #13
  %112 = icmp eq i32 %106, 0
  br i1 %112, label %74, label %130

113:                                              ; preds = %74
  %114 = and i8 %105, 1
  %115 = icmp ne i8 %114, 0
  %116 = xor i1 %115, true
  %117 = icmp ne %"class.std::__1::basic_string"* %2, null
  %118 = and i1 %117, %116
  br i1 %118, label %119, label %130

119:                                              ; preds = %113
  %120 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #13
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_stringbuf"* %13) #13
  %121 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %127) #15
  br label %128

128:                                              ; preds = %125, %119
  %129 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %129, i8* nonnull align 8 %120, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #13
  br label %130

130:                                              ; preds = %111, %3, %128, %113
  %131 = phi i1 [ %115, %113 ], [ %115, %128 ], [ true, %3 ], [ false, %111 ]
  %132 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %132, i64* %16, align 8
  %133 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %134 = inttoptr i64 %132 to i8*
  %135 = getelementptr i8, i8* %134, i64 -24
  %136 = bitcast i8* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds i8, i8* %7, i64 %137
  %139 = bitcast i8* %138 to i64*
  store i64 %133, i64* %139, align 8
  %140 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  store i64 %140, i64* %39, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %141 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %130
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  call void @_ZdlPv(i8* %147) #15
  br label %148

148:                                              ; preds = %130, %145
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %14) #13
  %149 = bitcast %"class.std::__1::basic_stringstream"* %4 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %149, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #13
  %150 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 2
  %151 = bitcast %"class.std::__1::basic_ios.base"* %150 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %151) #13
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %7) #13
  ret i1 %131
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3val8Function16CheckLimitationsERKNS0_17ValidationState_tEPKS1_PNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%"class.spvtools::val::Function"*, %"class.spvtools::val::ValidationState_t"*, %"class.spvtools::val::Function"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_stringstream", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_stringstream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 272, i1 false)
  %11 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %14, i64 0, i32 0
  %16 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %17 = bitcast %"class.std::__1::basic_stringstream"* %5 to i64*
  store i64 %16, i64* %17, align 8
  %18 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %19 = bitcast %"class.std::__1::basic_stringstream"* %5 to i8**
  %20 = inttoptr i64 %16 to i8*
  %21 = getelementptr i8, i8* %20, i64 -24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds i8, i8* %8, i64 %23
  %25 = bitcast i8* %24 to i64*
  store i64 %18, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %26, align 8
  %27 = load i8*, i8** %19, align 8
  %28 = getelementptr i8, i8* %27, i64 -24
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i8, i8* %8, i64 %30
  %32 = bitcast i8* %31 to %"class.std::__1::ios_base"*
  %33 = bitcast %"class.std::__1::basic_stringbuf"* %14 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %32, i8* %33) #13
  %34 = getelementptr inbounds i8, i8* %31, i64 136
  %35 = bitcast i8* %34 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %35, align 8
  %36 = getelementptr inbounds i8, i8* %31, i64 144
  %37 = bitcast i8* %36 to i32*
  store i32 -1, i32* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 1
  %39 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %40 = bitcast %"class.std::__1::basic_ostream.base"* %38 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %42 = inttoptr i64 %39 to i8*
  %43 = getelementptr i8, i8* %42, i64 -24
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::basic_ostream.base"* %38 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 %45
  %48 = bitcast i8* %47 to i64*
  store i64 %41, i64* %48, align 8
  %49 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %49, i64* %17, align 8
  %50 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %51 = inttoptr i64 %49 to i8*
  %52 = getelementptr i8, i8* %51, i64 -24
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds i8, i8* %8, i64 %54
  %56 = bitcast i8* %55 to i64*
  store i64 %50, i64* %56, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %13, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %15) #13
  %57 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %14, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1, i32 1
  %59 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1, i32 3
  %60 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 32, i1 false) #13
  store i32 24, i32* %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %0, i64 0, i32 24, i32 0, i32 0
  %63 = bitcast %"struct.std::__1::__list_node_base.190"** %61 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = inttoptr i64 %64 to %"struct.std::__1::__list_node_base.190"*
  %66 = icmp eq %"struct.std::__1::__list_node_base.190"* %62, %65
  br i1 %66, label %131, label %67

67:                                               ; preds = %4
  %68 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = icmp eq %"class.std::__1::basic_string"* %3, null
  %72 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = bitcast %"class.std::__1::basic_ostream.base"* %38 to %"class.std::__1::basic_ostream"*
  br label %81

75:                                               ; preds = %112
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base.190", %"struct.std::__1::__list_node_base.190"* %82, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base.190"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base.190"*
  %80 = icmp eq %"struct.std::__1::__list_node_base.190"* %62, %79
  br i1 %80, label %114, label %81

81:                                               ; preds = %67, %75
  %82 = phi %"struct.std::__1::__list_node_base.190"* [ %65, %67 ], [ %79, %75 ]
  %83 = phi i64 [ %64, %67 ], [ %78, %75 ]
  %84 = phi i8 [ 1, %67 ], [ %106, %75 ]
  %85 = inttoptr i64 %83 to %"struct.std::__1::__list_node.464"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 24, i1 false) #13
  %86 = getelementptr inbounds %"struct.std::__1::__list_node.464", %"struct.std::__1::__list_node.464"* %85, i64 0, i32 1, i32 0, i32 1, i32 0
  %87 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::ValidationState_t"*, %"class.spvtools::val::Function"*, %"class.std::__1::basic_string"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::ValidationState_t"*, %"class.spvtools::val::Function"*, %"class.std::__1::basic_string"*)** %86, align 8
  %88 = getelementptr inbounds %"struct.std::__1::__list_node.464", %"struct.std::__1::__list_node.464"* %85, i64 0, i32 1, i32 0, i32 0
  %89 = call zeroext i1 %87(%"union.std::__1::__function::__policy_storage"* %88, %"class.spvtools::val::ValidationState_t"* %1, %"class.spvtools::val::Function"* %2, %"class.std::__1::basic_string"* nonnull %6) #13
  %90 = or i1 %89, %71
  %91 = xor i1 %89, true
  %92 = zext i1 %91 to i32
  br i1 %90, label %105, label %93

93:                                               ; preds = %81
  %94 = load i8, i8* %73, align 1
  %95 = icmp slt i8 %94, 0
  %96 = load i64, i64* %70, align 8
  %97 = zext i8 %94 to i64
  %98 = select i1 %95, i64 %96, i64 %97
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %93
  %101 = load i8*, i8** %69, align 8
  %102 = select i1 %95, i8* %101, i8* %68
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %74, i8* %102, i64 %98) #13
  %104 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #13
  br label %105

105:                                              ; preds = %81, %100, %93
  %106 = phi i8 [ %84, %81 ], [ 0, %93 ], [ 0, %100 ]
  %107 = phi i32 [ %92, %81 ], [ 0, %93 ], [ 0, %100 ]
  %108 = load i8, i8* %73, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  %111 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %111) #15
  br label %112

112:                                              ; preds = %105, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #13
  %113 = icmp eq i32 %107, 0
  br i1 %113, label %75, label %131

114:                                              ; preds = %75
  %115 = and i8 %106, 1
  %116 = icmp ne i8 %115, 0
  %117 = xor i1 %116, true
  %118 = icmp ne %"class.std::__1::basic_string"* %3, null
  %119 = and i1 %118, %117
  br i1 %119, label %120, label %131

120:                                              ; preds = %114
  %121 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #13
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %14) #13
  %122 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  call void @_ZdlPv(i8* %128) #15
  br label %129

129:                                              ; preds = %126, %120
  %130 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %130, i8* nonnull align 8 %121, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #13
  br label %131

131:                                              ; preds = %112, %4, %129, %114
  %132 = phi i1 [ %116, %114 ], [ %116, %129 ], [ true, %4 ], [ false, %112 ]
  %133 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %133, i64* %17, align 8
  %134 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %135 = inttoptr i64 %133 to i8*
  %136 = getelementptr i8, i8* %135, i64 -24
  %137 = bitcast i8* %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds i8, i8* %8, i64 %138
  %140 = bitcast i8* %139 to i64*
  store i64 %134, i64* %140, align 8
  %141 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  store i64 %141, i64* %40, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %142 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %142, i64 0, i32 1, i32 0
  %144 = load i8, i8* %143, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %131
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  call void @_ZdlPv(i8* %148) #15
  br label %149

149:                                              ; preds = %131, %146
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %15) #13
  %150 = bitcast %"class.std::__1::basic_stringstream"* %5 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %150, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #13
  %151 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 2
  %152 = bitcast %"class.std::__1::basic_ios.base"* %151 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %152) #13
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %8) #13
  ret i1 %132
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.110"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.106"*, %"class.spvtools::val::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.269"* dereferenceable(8), %"class.std::__1::tuple.272"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::val::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::val::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !2
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.110"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.110"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.110"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.110"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.110"* %65 to %"class.spvtools::val::BasicBlock"**
  %67 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::val::BasicBlock"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #15, !noalias !25
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.269"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !25
  %75 = load i64, i64* %74, align 8, !noalias !25
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !25
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::val::BasicBlock"**
  store %"class.spvtools::val::BasicBlock"* null, %"class.spvtools::val::BasicBlock"** %78, align 8, !noalias !25
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !25
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.110"**
  store %"struct.std::__1::__hash_node_base.110"* null, %"struct.std::__1::__hash_node_base.110"** %81, align 8, !noalias !25
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !2
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #13
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.106"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #13, !range !2
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.110"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.110"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.110"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.110"* %124, %"struct.std::__1::__hash_node_base.110"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.110"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.110"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #13, !range !2
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.110"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.110"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.110"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.110"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.110"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.110"*, i8 } undef, %"struct.std::__1::__hash_node_base.110"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.110"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.110"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.106"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.106"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.106"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.106"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.106"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.110"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.110"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.112", %"class.std::__1::__bucket_list_deallocator.112"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.110"* null, %"struct.std::__1::__hash_node_base.110"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !28

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.110"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.110"* null, %"struct.std::__1::__hash_node_base.110"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.110"* null, %"struct.std::__1::__hash_node_base.110"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.110"* null, %"struct.std::__1::__hash_node_base.110"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.110"* null, %"struct.std::__1::__hash_node_base.110"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.110"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.110"* %36, %"struct.std::__1::__hash_node_base.110"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.110"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.110"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.110"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.110"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.110"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.110"* %101 to %"class.spvtools::val::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.110"* %82, %"struct.std::__1::__hash_node_base.110"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.110"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.110"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.110"* %110 to %"class.spvtools::val::BasicBlock"**
  %112 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::val::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.110"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.110"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.110"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.110"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.110"* %80, %"struct.std::__1::__hash_node_base.110"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.110"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.110"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.110"** null, %"struct.std::__1::__hash_node_base.110"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.110"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.110"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.112", %"class.std::__1::__bucket_list_deallocator.112"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.110"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.106"*, %"class.spvtools::val::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.287"* dereferenceable(8), %"class.std::__1::tuple.272"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::val::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::val::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !2
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.110"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.110"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.110"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.110"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.110"* %65 to %"class.spvtools::val::BasicBlock"**
  %67 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::val::BasicBlock"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #15, !noalias !29
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.287"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !29
  %75 = load i64, i64* %74, align 8, !noalias !29
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !29
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::val::BasicBlock"**
  store %"class.spvtools::val::BasicBlock"* null, %"class.spvtools::val::BasicBlock"** %78, align 8, !noalias !29
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !29
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.110"**
  store %"struct.std::__1::__hash_node_base.110"* null, %"struct.std::__1::__hash_node_base.110"** %81, align 8, !noalias !29
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !2
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #13
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.106"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #13, !range !2
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.110"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.106", %"class.std::__1::__hash_table.106"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.110"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.110"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.110"* %124, %"struct.std::__1::__hash_node_base.110"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.110"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110", %"struct.std::__1::__hash_node_base.110"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.110"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #13, !range !2
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.110"**, %"struct.std::__1::__hash_node_base.110"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.110"*, %"struct.std::__1::__hash_node_base.110"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.110"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.110"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.110"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.110"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.110"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.110"*, i8 } undef, %"struct.std::__1::__hash_node_base.110"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.110"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.110"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SF_SD_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"*, %"class.spvtools::val::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.287"* dereferenceable(8), %"class.std::__1::tuple.272"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::val::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::val::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !2
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.138"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.138"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.138"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.138"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.138"* %65 to %"class.spvtools::val::BasicBlock"**
  %67 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::val::BasicBlock"* %67, %24
  br i1 %68, label %159, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 48) #15, !noalias !32
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.287"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !32
  %75 = load i64, i64* %74, align 8, !noalias !32
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !32
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #13, !noalias !32
  %78 = getelementptr inbounds i8, i8* %71, i64 8
  %79 = bitcast i8* %78 to i64*
  store i64 %20, i64* %79, align 8, !noalias !32
  %80 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.138"**
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %80, align 8, !noalias !32
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  %84 = uitofp i64 %83 to float
  %85 = uitofp i64 %22 to float
  %86 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, %85
  %89 = fcmp olt float %88, %84
  %90 = or i1 %23, %89
  br i1 %90, label %91, label %114

91:                                               ; preds = %69
  %92 = shl i64 %22, 1
  %93 = icmp ult i64 %22, 3
  %94 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !2
  %95 = icmp ugt i64 %94, 1
  %96 = or i1 %93, %95
  %97 = zext i1 %96 to i64
  %98 = or i64 %92, %97
  %99 = fdiv float %84, %87
  %100 = tail call float @llvm.ceil.f32(float %99) #13
  %101 = fptoui float %100 to i64
  %102 = icmp ult i64 %98, %101
  %103 = select i1 %102, i64 %101, i64 %98
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SF_SD_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %103)
  %104 = load i64, i64* %21, align 8
  %105 = tail call i64 @llvm.ctpop.i64(i64 %104) #13, !range !2
  %106 = icmp ugt i64 %105, 1
  br i1 %106, label %110, label %107

107:                                              ; preds = %91
  %108 = add i64 %104, -1
  %109 = and i64 %108, %20
  br label %114

110:                                              ; preds = %91
  %111 = icmp ult i64 %20, %104
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %20, %104
  br label %114

114:                                              ; preds = %112, %110, %107, %69
  %115 = phi i64 [ %22, %69 ], [ %104, %107 ], [ %104, %110 ], [ %104, %112 ]
  %116 = phi i64 [ %70, %69 ], [ %109, %107 ], [ %20, %110 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %118, i64 %116
  %120 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.138"* %120, null
  br i1 %121, label %122, label %148

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 1, i32 0, i32 0
  %124 = bitcast %"struct.std::__1::__hash_node_base.138"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast i8* %71 to i64*
  store i64 %125, i64* %126, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base.138"* %123 to i8**
  store i8* %71, i8** %127, align 8
  store %"struct.std::__1::__hash_node_base.138"* %123, %"struct.std::__1::__hash_node_base.138"** %119, align 8
  %128 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %80, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.138"* %128, null
  br i1 %129, label %155, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %128, i64 1
  %132 = bitcast %"struct.std::__1::__hash_node_base.138"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = tail call i64 @llvm.ctpop.i64(i64 %115) #13, !range !2
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  %137 = add i64 %115, -1
  %138 = and i64 %133, %137
  br label %143

139:                                              ; preds = %130
  %140 = icmp ult i64 %133, %115
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = urem i64 %133, %115
  br label %143

143:                                              ; preds = %136, %139, %141
  %144 = phi i64 [ %138, %136 ], [ %142, %141 ], [ %133, %139 ]
  %145 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %117, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %145, i64 %144
  %147 = bitcast %"struct.std::__1::__hash_node_base.138"** %146 to i8**
  br label %153

148:                                              ; preds = %114
  %149 = bitcast %"struct.std::__1::__hash_node_base.138"* %120 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast i8* %71 to i64*
  store i64 %150, i64* %151, align 8
  %152 = bitcast %"struct.std::__1::__hash_node_base.138"* %120 to i8**
  br label %153

153:                                              ; preds = %143, %148
  %154 = phi i8** [ %152, %148 ], [ %147, %143 ]
  store i8* %71, i8** %154, align 8
  br label %155

155:                                              ; preds = %153, %122
  %156 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.138"*
  %157 = load i64, i64* %81, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %81, align 8
  br label %159

159:                                              ; preds = %64, %155
  %160 = phi i8 [ 1, %155 ], [ 0, %64 ]
  %161 = phi %"struct.std::__1::__hash_node_base.138"* [ %156, %155 ], [ %47, %64 ]
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } undef, %"struct.std::__1::__hash_node_base.138"* %161, 0
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %162, i8 %160, 1
  ret { %"struct.std::__1::__hash_node_base.138"*, i8 } %163
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SF_SD_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.134"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SF_SD_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SF_SD_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SF_SD_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.134"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.134"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.138"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.138"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.140", %"class.std::__1::__bucket_list_deallocator.140"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !35

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.138"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.138"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.138"* %36, %"struct.std::__1::__hash_node_base.138"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.138"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.138"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.138"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.138"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.138"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.138"* %101 to %"class.spvtools::val::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.138"* %82, %"struct.std::__1::__hash_node_base.138"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.138"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.138"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.138"* %110 to %"class.spvtools::val::BasicBlock"**
  %112 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::val::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.138"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.138"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.138"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.138"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.138"* %80, %"struct.std::__1::__hash_node_base.138"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.138"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.138"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.138"** null, %"struct.std::__1::__hash_node_base.138"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.138"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.138"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.140", %"class.std::__1::__bucket_list_deallocator.140"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS4_EEE6assignIPKS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"*, %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.spvtools::val::BasicBlock"** %2 to i64
  %5 = ptrtoint %"class.spvtools::val::BasicBlock"** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.spvtools::val::BasicBlock"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.spvtools::val::BasicBlock"**
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::val::BasicBlock"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, i64 %22
  %25 = select i1 %23, %"class.spvtools::val::BasicBlock"** %24, %"class.spvtools::val::BasicBlock"** %2
  %26 = ptrtoint %"class.spvtools::val::BasicBlock"** %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.spvtools::val::BasicBlock"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.spvtools::val::BasicBlock"** %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to %"class.spvtools::val::BasicBlock"**
  %43 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %42, i64 %39
  %44 = ptrtoint %"class.spvtools::val::BasicBlock"** %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %16, i64 %28
  store %"class.spvtools::val::BasicBlock"** %48, %"class.spvtools::val::BasicBlock"*** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::val::BasicBlock"*** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #15
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #15
  %75 = bitcast i8* %74 to %"class.spvtools::val::BasicBlock"**
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.spvtools::val::BasicBlock"*** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %75, i64 %72
  store %"class.spvtools::val::BasicBlock"** %79, %"class.spvtools::val::BasicBlock"*** %8, align 8
  %80 = bitcast %"class.spvtools::val::BasicBlock"*** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.spvtools::val::BasicBlock"** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %75, i64 %84
  %87 = ptrtoint %"class.spvtools::val::BasicBlock"** %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3val10BasicBlockEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIjJNS_4pairIKjS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::pair.212"* dereferenceable(112)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %169, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 128) #15, !noalias !36
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 8, !noalias !36
  store i32 %59, i32* %57, align 8, !noalias !36
  %60 = getelementptr inbounds i8, i8* %55, i64 24
  %61 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %2, i64 0, i32 1
  %62 = bitcast %"class.spvtools::val::BasicBlock"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %62, i64 24, i1 false) #13, !noalias !36
  %63 = getelementptr inbounds i8, i8* %55, i64 48
  %64 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %2, i64 0, i32 1, i32 3
  %65 = bitcast %"class.std::__1::vector"* %64 to <2 x i64>*
  %66 = load <2 x i64>, <2 x i64>* %65, align 8, !noalias !36
  %67 = bitcast i8* %63 to <2 x i64>*
  store <2 x i64> %66, <2 x i64>* %67, align 8, !noalias !36
  %68 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %2, i64 0, i32 1, i32 3, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast %"class.spvtools::val::BasicBlock"*** %68 to i64*
  %70 = load i64, i64* %69, align 8, !noalias !36
  %71 = getelementptr inbounds i8, i8* %55, i64 64
  %72 = bitcast i8* %71 to i64*
  store i64 %70, i64* %72, align 8, !noalias !36
  %73 = bitcast %"class.std::__1::vector"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #13, !noalias !36
  %74 = getelementptr inbounds i8, i8* %55, i64 72
  %75 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %2, i64 0, i32 1, i32 4
  %76 = bitcast %"class.std::__1::vector"* %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !noalias !36
  %78 = bitcast i8* %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %78, align 8, !noalias !36
  %79 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %2, i64 0, i32 1, i32 4, i32 0, i32 2, i32 0, i32 0
  %80 = bitcast %"class.spvtools::val::BasicBlock"*** %79 to i64*
  %81 = load i64, i64* %80, align 8, !noalias !36
  %82 = getelementptr inbounds i8, i8* %55, i64 88
  %83 = bitcast i8* %82 to i64*
  store i64 %81, i64* %83, align 8, !noalias !36
  %84 = bitcast %"class.std::__1::vector"* %75 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #13, !noalias !36
  %85 = getelementptr inbounds i8, i8* %55, i64 96
  %86 = getelementptr inbounds %"struct.std::__1::pair.212", %"struct.std::__1::pair.212"* %2, i64 0, i32 1, i32 5
  %87 = bitcast %"class.std::__1::bitset"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %87, i64 32, i1 false) #13, !noalias !36
  %88 = getelementptr inbounds i8, i8* %55, i64 8
  %89 = bitcast i8* %88 to i64*
  store i64 %5, i64* %89, align 8, !noalias !36
  %90 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %90, align 8, !noalias !36
  %91 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  %94 = uitofp i64 %93 to float
  %95 = uitofp i64 %7 to float
  %96 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %97 = load float, float* %96, align 4
  %98 = fmul float %97, %95
  %99 = fcmp olt float %98, %94
  %100 = or i1 %8, %99
  br i1 %100, label %101, label %124

101:                                              ; preds = %53
  %102 = shl i64 %7, 1
  %103 = icmp ult i64 %7, 3
  %104 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !2
  %105 = icmp ugt i64 %104, 1
  %106 = or i1 %103, %105
  %107 = zext i1 %106 to i64
  %108 = or i64 %102, %107
  %109 = fdiv float %94, %97
  %110 = tail call float @llvm.ceil.f32(float %109) #13
  %111 = fptoui float %110 to i64
  %112 = icmp ult i64 %108, %111
  %113 = select i1 %112, i64 %111, i64 %108
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3val10BasicBlockEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %113)
  %114 = load i64, i64* %6, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %114) #13, !range !2
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %101
  %118 = add i64 %114, 4294967295
  %119 = and i64 %118, %5
  br label %124

120:                                              ; preds = %101
  %121 = icmp ugt i64 %114, %5
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %5, %114
  br label %124

124:                                              ; preds = %122, %120, %117, %53
  %125 = phi i64 [ %7, %53 ], [ %114, %117 ], [ %114, %120 ], [ %114, %122 ]
  %126 = phi i64 [ %54, %53 ], [ %119, %117 ], [ %5, %120 ], [ %123, %122 ]
  %127 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %128, i64 %126
  %130 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %129, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base"* %130, null
  br i1 %131, label %132, label %158

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast i8* %55 to i64*
  store i64 %135, i64* %136, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i8**
  store i8* %55, i8** %137, align 8
  store %"struct.std::__1::__hash_node_base"* %133, %"struct.std::__1::__hash_node_base"** %129, align 8
  %138 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %90, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base"* %138, null
  br i1 %139, label %165, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %138, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = tail call i64 @llvm.ctpop.i64(i64 %125) #13, !range !2
  %145 = icmp ugt i64 %144, 1
  br i1 %145, label %149, label %146

146:                                              ; preds = %140
  %147 = add i64 %125, -1
  %148 = and i64 %143, %147
  br label %153

149:                                              ; preds = %140
  %150 = icmp ult i64 %143, %125
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = urem i64 %143, %125
  br label %153

153:                                              ; preds = %146, %149, %151
  %154 = phi i64 [ %148, %146 ], [ %152, %151 ], [ %143, %149 ]
  %155 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %127, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %155, i64 %154
  %157 = bitcast %"struct.std::__1::__hash_node_base"** %156 to i8**
  br label %163

158:                                              ; preds = %124
  %159 = bitcast %"struct.std::__1::__hash_node_base"* %130 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast i8* %55 to i64*
  store i64 %160, i64* %161, align 8
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %130 to i8**
  br label %163

163:                                              ; preds = %153, %158
  %164 = phi i8** [ %162, %158 ], [ %157, %153 ]
  store i8* %55, i8** %164, align 8
  br label %165

165:                                              ; preds = %163, %132
  %166 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"*
  %167 = load i64, i64* %91, align 8
  %168 = add i64 %167, 1
  store i64 %168, i64* %91, align 8
  br label %169

169:                                              ; preds = %48, %165
  %170 = phi i8 [ 1, %165 ], [ 0, %48 ]
  %171 = phi %"struct.std::__1::__hash_node_base"* [ %166, %165 ], [ %31, %48 ]
  %172 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %171, 0
  %173 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %172, i8 %170, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %173
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3val10BasicBlockEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3val10BasicBlockEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3val10BasicBlockEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3val10BasicBlockEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !39

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.19"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.311", align 8
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.23"* %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.23"* %28, null
  br i1 %29, label %65, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.23"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.23"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %65

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.23"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.23"* %55, null
  br i1 %56, label %65, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.311"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.311"* nonnull sret %3, %"class.std::__1::__hash_table.19"* %0, %"struct.std::__1::__hash_node_base.23"* nonnull %33) #13
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.311"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node.310"*, %"struct.std::__1::__hash_node.310"** %59, align 8
  store %"struct.std::__1::__hash_node.310"* null, %"struct.std::__1::__hash_node.310"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node.310"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.std::__1::__hash_node.310"* %60 to i8*
  call void @_ZdlPv(i8* %63) #15
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %65

65:                                               ; preds = %45, %53, %26, %2, %19, %64
  %66 = phi i64 [ 1, %64 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.311"* noalias sret, %"class.std::__1::__hash_table.19"*, %"struct.std::__1::__hash_node_base.23"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.23"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !2
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.23"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.23"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.30"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.23"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.23"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.23"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.23"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.23"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.23"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.23"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.23"* %25, %"struct.std::__1::__hash_node_base.23"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.23"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.23"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.23"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.311"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.311"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.33"** %98 to %"class.std::__1::__compressed_pair.30"**
  store %"class.std::__1::__compressed_pair.30"* %30, %"class.std::__1::__compressed_pair.30"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.311"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.23"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.19"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.23"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.23"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.23"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.23"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.23"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #15, !noalias !40
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !40
  store i32 %58, i32* %57, align 4, !noalias !40
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !40
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.23"**
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %61, align 8, !noalias !40
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !2
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #13
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.19"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #13, !range !2
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.23"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.23"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.23"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.23"* %104, %"struct.std::__1::__hash_node_base.23"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.23"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.23"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #13, !range !2
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.23"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.23"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.23"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.23"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.23"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.23"*, i8 } undef, %"struct.std::__1::__hash_node_base.23"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.23"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.23"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.19"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.19"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.19"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.19"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.19"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.23"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.23"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.25", %"class.std::__1::__bucket_list_deallocator.25"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !43

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.23"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.23"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.23"* %36, %"struct.std::__1::__hash_node_base.23"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.23"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.23"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.23"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.23"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.23"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.23"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.23"* %82, %"struct.std::__1::__hash_node_base.23"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.23"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.23"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.23"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.23"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.23"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.23"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.23"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.23"* %80, %"struct.std::__1::__hash_node_base.23"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.23"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.23"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.23"** null, %"struct.std::__1::__hash_node_base.23"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.23"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.23"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.25", %"class.std::__1::__bucket_list_deallocator.25"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.45"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJOS6_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.41"*, %"class.spvtools::val::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.322"* dereferenceable(8), %"class.std::__1::tuple.272"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::val::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.41", %"class.std::__1::__hash_table.41"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::val::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !2
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.41", %"class.std::__1::__hash_table.41"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.45"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.45"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.45"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.45"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.45"* %65 to %"class.spvtools::val::BasicBlock"**
  %67 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::val::BasicBlock"* %67, %24
  br i1 %68, label %159, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 48) #15, !noalias !44
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.322"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !44
  %75 = load i64, i64* %74, align 8, !noalias !44
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !44
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #13, !noalias !44
  %78 = getelementptr inbounds i8, i8* %71, i64 8
  %79 = bitcast i8* %78 to i64*
  store i64 %20, i64* %79, align 8, !noalias !44
  %80 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.45"**
  store %"struct.std::__1::__hash_node_base.45"* null, %"struct.std::__1::__hash_node_base.45"** %80, align 8, !noalias !44
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.41", %"class.std::__1::__hash_table.41"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  %84 = uitofp i64 %83 to float
  %85 = uitofp i64 %22 to float
  %86 = getelementptr inbounds %"class.std::__1::__hash_table.41", %"class.std::__1::__hash_table.41"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, %85
  %89 = fcmp olt float %88, %84
  %90 = or i1 %23, %89
  br i1 %90, label %91, label %114

91:                                               ; preds = %69
  %92 = shl i64 %22, 1
  %93 = icmp ult i64 %22, 3
  %94 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !2
  %95 = icmp ugt i64 %94, 1
  %96 = or i1 %93, %95
  %97 = zext i1 %96 to i64
  %98 = or i64 %92, %97
  %99 = fdiv float %84, %87
  %100 = tail call float @llvm.ceil.f32(float %99) #13
  %101 = fptoui float %100 to i64
  %102 = icmp ult i64 %98, %101
  %103 = select i1 %102, i64 %101, i64 %98
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE6rehashEm(%"class.std::__1::__hash_table.41"* %0, i64 %103)
  %104 = load i64, i64* %21, align 8
  %105 = tail call i64 @llvm.ctpop.i64(i64 %104) #13, !range !2
  %106 = icmp ugt i64 %105, 1
  br i1 %106, label %110, label %107

107:                                              ; preds = %91
  %108 = add i64 %104, -1
  %109 = and i64 %108, %20
  br label %114

110:                                              ; preds = %91
  %111 = icmp ult i64 %20, %104
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %20, %104
  br label %114

114:                                              ; preds = %112, %110, %107, %69
  %115 = phi i64 [ %22, %69 ], [ %104, %107 ], [ %104, %110 ], [ %104, %112 ]
  %116 = phi i64 [ %70, %69 ], [ %109, %107 ], [ %20, %110 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"class.std::__1::__hash_table.41", %"class.std::__1::__hash_table.41"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %118, i64 %116
  %120 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.45"* %120, null
  br i1 %121, label %122, label %148

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::__hash_table.41", %"class.std::__1::__hash_table.41"* %0, i64 0, i32 1, i32 0, i32 0
  %124 = bitcast %"struct.std::__1::__hash_node_base.45"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast i8* %71 to i64*
  store i64 %125, i64* %126, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base.45"* %123 to i8**
  store i8* %71, i8** %127, align 8
  store %"struct.std::__1::__hash_node_base.45"* %123, %"struct.std::__1::__hash_node_base.45"** %119, align 8
  %128 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %80, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.45"* %128, null
  br i1 %129, label %155, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %128, i64 1
  %132 = bitcast %"struct.std::__1::__hash_node_base.45"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = tail call i64 @llvm.ctpop.i64(i64 %115) #13, !range !2
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  %137 = add i64 %115, -1
  %138 = and i64 %133, %137
  br label %143

139:                                              ; preds = %130
  %140 = icmp ult i64 %133, %115
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = urem i64 %133, %115
  br label %143

143:                                              ; preds = %136, %139, %141
  %144 = phi i64 [ %138, %136 ], [ %142, %141 ], [ %133, %139 ]
  %145 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %117, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %145, i64 %144
  %147 = bitcast %"struct.std::__1::__hash_node_base.45"** %146 to i8**
  br label %153

148:                                              ; preds = %114
  %149 = bitcast %"struct.std::__1::__hash_node_base.45"* %120 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast i8* %71 to i64*
  store i64 %150, i64* %151, align 8
  %152 = bitcast %"struct.std::__1::__hash_node_base.45"* %120 to i8**
  br label %153

153:                                              ; preds = %143, %148
  %154 = phi i8** [ %152, %148 ], [ %147, %143 ]
  store i8* %71, i8** %154, align 8
  br label %155

155:                                              ; preds = %153, %122
  %156 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.45"*
  %157 = load i64, i64* %81, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %81, align 8
  br label %159

159:                                              ; preds = %64, %155
  %160 = phi i8 [ 1, %155 ], [ 0, %64 ]
  %161 = phi %"struct.std::__1::__hash_node_base.45"* [ %156, %155 ], [ %47, %64 ]
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.45"*, i8 } undef, %"struct.std::__1::__hash_node_base.45"* %161, 0
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.45"*, i8 } %162, i8 %160, 1
  ret { %"struct.std::__1::__hash_node_base.45"*, i8 } %163
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE6rehashEm(%"class.std::__1::__hash_table.41"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.41", %"class.std::__1::__hash_table.41"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.41"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.41", %"class.std::__1::__hash_table.41"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.41", %"class.std::__1::__hash_table.41"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.41"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.41"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.41", %"class.std::__1::__hash_table.41"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.41", %"class.std::__1::__hash_table.41"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.41"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.45"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.45"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.47", %"class.std::__1::__bucket_list_deallocator.47"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.45"* null, %"struct.std::__1::__hash_node_base.45"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !47

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.41", %"class.std::__1::__hash_table.41"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.45"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.45"* null, %"struct.std::__1::__hash_node_base.45"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.45"* null, %"struct.std::__1::__hash_node_base.45"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.45"* null, %"struct.std::__1::__hash_node_base.45"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.45"* null, %"struct.std::__1::__hash_node_base.45"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.45"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.45"* %36, %"struct.std::__1::__hash_node_base.45"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.45"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.45"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.45"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.45"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.45"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.45"* %101 to %"class.spvtools::val::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.45"* %82, %"struct.std::__1::__hash_node_base.45"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.45"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.45"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.45"* %110 to %"class.spvtools::val::BasicBlock"**
  %112 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::val::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.45"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.45"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.45"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.45"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.45"* %80, %"struct.std::__1::__hash_node_base.45"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.45"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.45"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.41", %"class.std::__1::__hash_table.41"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.45"** null, %"struct.std::__1::__hash_node_base.45"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.45"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.45"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.47", %"class.std::__1::__bucket_list_deallocator.47"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector"*, %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.spvtools::val::BasicBlock"** %2 to i64
  %5 = ptrtoint %"class.spvtools::val::BasicBlock"** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.spvtools::val::BasicBlock"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.spvtools::val::BasicBlock"**
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::val::BasicBlock"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, i64 %22
  %25 = select i1 %23, %"class.spvtools::val::BasicBlock"** %24, %"class.spvtools::val::BasicBlock"** %2
  %26 = ptrtoint %"class.spvtools::val::BasicBlock"** %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.spvtools::val::BasicBlock"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.spvtools::val::BasicBlock"** %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to %"class.spvtools::val::BasicBlock"**
  %43 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %42, i64 %39
  %44 = ptrtoint %"class.spvtools::val::BasicBlock"** %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %16, i64 %28
  store %"class.spvtools::val::BasicBlock"** %48, %"class.spvtools::val::BasicBlock"*** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::val::BasicBlock"*** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #15
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #15
  %75 = bitcast i8* %74 to %"class.spvtools::val::BasicBlock"**
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.spvtools::val::BasicBlock"*** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %75, i64 %72
  store %"class.spvtools::val::BasicBlock"** %79, %"class.spvtools::val::BasicBlock"*** %8, align 8
  %80 = bitcast %"class.spvtools::val::BasicBlock"*** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.spvtools::val::BasicBlock"** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %75, i64 %84
  %87 = ptrtoint %"class.spvtools::val::BasicBlock"** %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define internal %"class.std::__1::vector"* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNKS4_8Function30AugmentedCFGSuccessorsFunctionEvE3$_0SE_EEEESB_PKNS0_16__policy_storageESD_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::val::BasicBlock"*) #6 align 2 {
  %3 = ptrtoint %"class.spvtools::val::BasicBlock"* %1 to i64
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::val::Function"**
  %5 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %4, align 8
  %6 = lshr i64 %3, 32
  %7 = shl i64 %3, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %5, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %70, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !2
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %30, %28, %25
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %5, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.45"* %37, null
  br i1 %38, label %70, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.45"* %41, null
  br i1 %42, label %70, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  br label %45

45:                                               ; preds = %66, %43
  %46 = phi %"struct.std::__1::__hash_node_base.45"* [ %41, %43 ], [ %68, %66 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.45"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %18, %49
  br i1 %50, label %61, label %51

51:                                               ; preds = %45
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %44
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %56, %54, %52
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %66, label %70

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %46, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.45"* %62 to %"class.spvtools::val::BasicBlock"**
  %64 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::val::BasicBlock"* %64, %1
  br i1 %65, label %72, label %66

66:                                               ; preds = %61, %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %46, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.45"* %68, null
  br i1 %69, label %70, label %45

70:                                               ; preds = %66, %58, %39, %32, %2
  %71 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %1, i64 0, i32 4
  br label %75

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %46, i64 3
  %74 = bitcast %"struct.std::__1::__hash_node_base.45"* %73 to %"class.std::__1::vector"*
  br label %75

75:                                               ; preds = %70, %72
  %76 = phi %"class.std::__1::vector"* [ %71, %70 ], [ %74, %72 ]
  ret %"class.std::__1::vector"* %76
}

; Function Attrs: nounwind readonly ssp uwtable
define internal %"class.std::__1::vector"* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNKS4_8Function59AugmentedCFGSuccessorsFunctionIncludingHeaderToContinueEdgeEvE3$_1SE_EEEESB_PKNS0_16__policy_storageESD_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::val::BasicBlock"*) #6 align 2 {
  %3 = ptrtoint %"class.spvtools::val::BasicBlock"* %1 to i64
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::val::Function"**
  %5 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %4, align 8
  %6 = lshr i64 %3, 32
  %7 = shl i64 %3, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %5, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %73, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !2
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %30, %28, %25
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %5, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.45"* %37, null
  br i1 %38, label %73, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.45"* %41, null
  br i1 %42, label %73, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  br label %45

45:                                               ; preds = %66, %43
  %46 = phi %"struct.std::__1::__hash_node_base.45"* [ %41, %43 ], [ %68, %66 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.45"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %18, %49
  br i1 %50, label %61, label %51

51:                                               ; preds = %45
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %44
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %56, %54, %52
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %66, label %73

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %46, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.45"* %62 to %"class.spvtools::val::BasicBlock"**
  %64 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::val::BasicBlock"* %64, %1
  br i1 %65, label %70, label %66

66:                                               ; preds = %61, %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %46, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.45"* %68, null
  br i1 %69, label %73, label %45

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %46, i64 3
  %72 = bitcast %"struct.std::__1::__hash_node_base.45"* %71 to %"class.std::__1::vector"*
  br label %130

73:                                               ; preds = %66, %58, %39, %32, %2
  %74 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %5, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %125, label %77

77:                                               ; preds = %73
  %78 = tail call i64 @llvm.ctpop.i64(i64 %75) #13, !range !2
  %79 = icmp ugt i64 %78, 1
  br i1 %79, label %83, label %80

80:                                               ; preds = %77
  %81 = add i64 %75, -1
  %82 = and i64 %81, %18
  br label %87

83:                                               ; preds = %77
  %84 = icmp ult i64 %18, %75
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = urem i64 %18, %75
  br label %87

87:                                               ; preds = %85, %83, %80
  %88 = phi i64 [ %82, %80 ], [ %86, %85 ], [ %18, %83 ]
  %89 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %5, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %90, i64 %88
  %92 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %91, align 8
  %93 = icmp eq %"struct.std::__1::__hash_node_base.45"* %92, null
  br i1 %93, label %125, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %92, i64 0, i32 0
  %96 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %95, align 8
  %97 = icmp eq %"struct.std::__1::__hash_node_base.45"* %96, null
  br i1 %97, label %125, label %98

98:                                               ; preds = %94
  %99 = add i64 %75, -1
  br label %100

100:                                              ; preds = %121, %98
  %101 = phi %"struct.std::__1::__hash_node_base.45"* [ %96, %98 ], [ %123, %121 ]
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %101, i64 1
  %103 = bitcast %"struct.std::__1::__hash_node_base.45"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = icmp eq i64 %18, %104
  br i1 %105, label %116, label %106

106:                                              ; preds = %100
  br i1 %79, label %109, label %107

107:                                              ; preds = %106
  %108 = and i64 %104, %99
  br label %113

109:                                              ; preds = %106
  %110 = icmp ult i64 %104, %75
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = urem i64 %104, %75
  br label %113

113:                                              ; preds = %111, %109, %107
  %114 = phi i64 [ %108, %107 ], [ %112, %111 ], [ %104, %109 ]
  %115 = icmp eq i64 %114, %88
  br i1 %115, label %121, label %125

116:                                              ; preds = %100
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %101, i64 2
  %118 = bitcast %"struct.std::__1::__hash_node_base.45"* %117 to %"class.spvtools::val::BasicBlock"**
  %119 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %118, align 8
  %120 = icmp eq %"class.spvtools::val::BasicBlock"* %119, %1
  br i1 %120, label %127, label %121

121:                                              ; preds = %116, %113
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %101, i64 0, i32 0
  %123 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %122, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.45"* %123, null
  br i1 %124, label %125, label %100

125:                                              ; preds = %121, %113, %94, %87, %73
  %126 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %1, i64 0, i32 4
  br label %130

127:                                              ; preds = %116
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %101, i64 3
  %129 = bitcast %"struct.std::__1::__hash_node_base.45"* %128 to %"class.std::__1::vector"*
  br label %130

130:                                              ; preds = %70, %125, %127
  %131 = phi %"class.std::__1::vector"* [ %72, %70 ], [ %126, %125 ], [ %129, %127 ]
  ret %"class.std::__1::vector"* %131
}

; Function Attrs: nounwind readonly ssp uwtable
define internal %"class.std::__1::vector"* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNKS4_8Function32AugmentedCFGPredecessorsFunctionEvE3$_2SE_EEEESB_PKNS0_16__policy_storageESD_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::val::BasicBlock"*) #6 align 2 {
  %3 = ptrtoint %"class.spvtools::val::BasicBlock"* %1 to i64
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::val::Function"**
  %5 = load %"class.spvtools::val::Function"*, %"class.spvtools::val::Function"** %4, align 8
  %6 = lshr i64 %3, 32
  %7 = shl i64 %3, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %5, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %70, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !2
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %30, %28, %25
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.spvtools::val::Function", %"class.spvtools::val::Function"* %5, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.45"**, %"struct.std::__1::__hash_node_base.45"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.45"* %37, null
  br i1 %38, label %70, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.45"* %41, null
  br i1 %42, label %70, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  br label %45

45:                                               ; preds = %66, %43
  %46 = phi %"struct.std::__1::__hash_node_base.45"* [ %41, %43 ], [ %68, %66 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.45"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %18, %49
  br i1 %50, label %61, label %51

51:                                               ; preds = %45
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %44
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %56, %54, %52
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %66, label %70

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %46, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.45"* %62 to %"class.spvtools::val::BasicBlock"**
  %64 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::val::BasicBlock"* %64, %1
  br i1 %65, label %72, label %66

66:                                               ; preds = %61, %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %46, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.45"*, %"struct.std::__1::__hash_node_base.45"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.45"* %68, null
  br i1 %69, label %70, label %45

70:                                               ; preds = %66, %58, %39, %32, %2
  %71 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %1, i64 0, i32 3
  br label %75

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.45", %"struct.std::__1::__hash_node_base.45"* %46, i64 3
  %74 = bitcast %"struct.std::__1::__hash_node_base.45"* %73 to %"class.std::__1::vector"*
  br label %75

75:                                               ; preds = %70, %72
  %76 = phi %"class.std::__1::vector"* [ %71, %70 ], [ %74, %72 ]
  ret %"class.std::__1::vector"* %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3CFAINS_3val10BasicBlockEE14TraversalRootsERKNSt3__16vectorIPS2_NS4_9allocatorIS6_EEEENS4_8functionIFPSA_PKS2_EEESH_(%"class.std::__1::vector"* noalias sret, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::function"*, %"class.std::__1::function"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::function", align 8
  %6 = alloca %"class.std::__1::function.373", align 8
  %7 = alloca %"class.std::__1::function.373", align 8
  %8 = alloca %"class.std::__1::function.379", align 8
  %9 = alloca %"class.std::__1::function", align 8
  %10 = alloca %"class.std::__1::function.373", align 8
  %11 = alloca %"class.std::__1::function.373", align 8
  %12 = alloca %"class.std::__1::function.379", align 8
  %13 = alloca %"class.std::__1::unordered_set.345", align 8
  %14 = bitcast %"class.std::__1::unordered_set.345"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.std::__1::unordered_set.345", %"class.std::__1::unordered_set.345"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::unordered_set.345", %"class.std::__1::unordered_set.345"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::unordered_set.345", %"class.std::__1::unordered_set.345"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::unordered_set.345", %"class.std::__1::unordered_set.345"* %13, i64 0, i32 0, i32 4, i64 0
  %19 = getelementptr inbounds %"class.std::__1::unordered_set.345", %"class.std::__1::unordered_set.345"* %13, i64 0, i32 0, i32 3
  %20 = bitcast %"class.std::__1::__compressed_pair.364"* %19 to i32*
  %21 = bitcast i8* %18 to i32*
  store i32 -1431655766, i32* %21, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %20, align 8
  %22 = ptrtoint %"class.std::__1::unordered_set.345"* %13 to i64
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #13
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %29 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %28, align 8
  %30 = icmp eq %"class.spvtools::val::BasicBlock"** %27, %29
  br i1 %30, label %196, label %31

31:                                               ; preds = %4
  %32 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0
  %34 = bitcast %"class.spvtools::val::BasicBlock"*** %23 to i64*
  %35 = bitcast %"class.std::__1::vector"* %0 to i64*
  %36 = bitcast %"class.spvtools::val::BasicBlock"*** %24 to i64*
  %37 = bitcast %"class.std::__1::function"* %5 to i8*
  %38 = bitcast %"class.std::__1::function.373"* %6 to i8*
  %39 = bitcast %"class.std::__1::function.373"* %7 to i8*
  %40 = bitcast %"class.std::__1::function.379"* %8 to i8*
  %41 = bitcast %"class.std::__1::function"* %2 to i8*
  %42 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1
  %44 = bitcast %"struct.std::__1::__function::__policy_invoker"* %43 to i64*
  %45 = bitcast %"struct.std::__1::__function::__policy_invoker"* %42 to i64*
  %46 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 2
  %47 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  %48 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %6, i64 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %6, i64 0, i32 0, i32 2
  %52 = bitcast %"class.std::__1::function.373"* %6 to i64*
  %53 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %7, i64 0, i32 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %7, i64 0, i32 0, i32 2
  %55 = getelementptr inbounds %"class.std::__1::function.379", %"class.std::__1::function.379"* %8, i64 0, i32 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.std::__1::function.379", %"class.std::__1::function.379"* %8, i64 0, i32 0, i32 2
  %57 = getelementptr inbounds %"class.std::__1::function.379", %"class.std::__1::function.379"* %8, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %7, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %6, i64 0, i32 0, i32 0, i32 0
  br label %91

60:                                               ; preds = %193
  %61 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %26, align 8
  %62 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %28, align 8
  %63 = icmp eq %"class.spvtools::val::BasicBlock"** %61, %62
  br i1 %63, label %196, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.spvtools::val::BasicBlock"*** %23 to i64*
  %66 = bitcast %"class.std::__1::vector"* %0 to i64*
  %67 = bitcast %"class.spvtools::val::BasicBlock"*** %24 to i64*
  %68 = bitcast %"class.std::__1::function"* %9 to i8*
  %69 = bitcast %"class.std::__1::function.373"* %10 to i8*
  %70 = bitcast %"class.std::__1::function.373"* %11 to i8*
  %71 = bitcast %"class.std::__1::function.379"* %12 to i8*
  %72 = bitcast %"class.std::__1::function"* %2 to i8*
  %73 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1
  %75 = bitcast %"struct.std::__1::__function::__policy_invoker"* %74 to i64*
  %76 = bitcast %"struct.std::__1::__function::__policy_invoker"* %73 to i64*
  %77 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 2
  %78 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  %79 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %10, i64 0, i32 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %10, i64 0, i32 0, i32 2
  %83 = bitcast %"class.std::__1::function.373"* %10 to i64*
  %84 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %11, i64 0, i32 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %11, i64 0, i32 0, i32 2
  %86 = getelementptr inbounds %"class.std::__1::function.379", %"class.std::__1::function.379"* %12, i64 0, i32 0, i32 1, i32 0
  %87 = getelementptr inbounds %"class.std::__1::function.379", %"class.std::__1::function.379"* %12, i64 0, i32 0, i32 2
  %88 = getelementptr inbounds %"class.std::__1::function.379", %"class.std::__1::function.379"* %12, i64 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %11, i64 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %10, i64 0, i32 0, i32 0, i32 0
  br label %211

91:                                               ; preds = %31, %193
  %92 = phi %"class.spvtools::val::BasicBlock"** [ %27, %31 ], [ %194, %193 ]
  %93 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %92, align 8
  %94 = ptrtoint %"class.spvtools::val::BasicBlock"* %93 to i64
  %95 = load %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)*, %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %32, align 8
  %96 = call %"class.std::__1::vector"* %95(%"union.std::__1::__function::__policy_storage"* %33, %"class.spvtools::val::BasicBlock"* %93) #13
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %96, i64 0, i32 0, i32 0
  %98 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %96, i64 0, i32 0, i32 1
  %100 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %99, align 8
  %101 = icmp eq %"class.spvtools::val::BasicBlock"** %98, %100
  br i1 %101, label %102, label %193

102:                                              ; preds = %91
  %103 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %23, align 8
  %104 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %24, align 8
  %105 = icmp eq %"class.spvtools::val::BasicBlock"** %103, %104
  %106 = ptrtoint %"class.spvtools::val::BasicBlock"** %104 to i64
  br i1 %105, label %111, label %107

107:                                              ; preds = %102
  %108 = bitcast %"class.spvtools::val::BasicBlock"** %103 to i64*
  store i64 %94, i64* %108, align 8
  %109 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %103, i64 1
  %110 = ptrtoint %"class.spvtools::val::BasicBlock"** %109 to i64
  store i64 %110, i64* %34, align 8
  br label %155

111:                                              ; preds = %102
  %112 = ptrtoint %"class.spvtools::val::BasicBlock"** %103 to i64
  %113 = load i64, i64* %35, align 8
  %114 = sub i64 %112, %113
  %115 = ashr exact i64 %114, 3
  %116 = add nsw i64 %115, 1
  %117 = icmp ugt i64 %116, 2305843009213693951
  br i1 %117, label %118, label %120

118:                                              ; preds = %111
  %119 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %119) #14
  unreachable

120:                                              ; preds = %111
  %121 = sub i64 %106, %113
  %122 = ashr exact i64 %121, 3
  %123 = icmp ult i64 %122, 1152921504606846975
  br i1 %123, label %124, label %132

124:                                              ; preds = %120
  %125 = ashr exact i64 %121, 2
  %126 = icmp ult i64 %125, %116
  %127 = select i1 %126, i64 %116, i64 %125
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %137, label %129

129:                                              ; preds = %124
  %130 = icmp ugt i64 %127, 2305843009213693951
  br i1 %130, label %131, label %132

131:                                              ; preds = %129
  call void @abort() #14
  unreachable

132:                                              ; preds = %129, %120
  %133 = phi i64 [ %127, %129 ], [ 2305843009213693951, %120 ]
  %134 = shl i64 %133, 3
  %135 = call i8* @_Znwm(i64 %134) #15
  %136 = bitcast i8* %135 to %"class.spvtools::val::BasicBlock"**
  br label %137

137:                                              ; preds = %132, %124
  %138 = phi i64 [ %133, %132 ], [ 0, %124 ]
  %139 = phi i8* [ %135, %132 ], [ null, %124 ]
  %140 = phi %"class.spvtools::val::BasicBlock"** [ %136, %132 ], [ null, %124 ]
  %141 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %140, i64 %115
  %142 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %140, i64 %138
  %143 = ptrtoint %"class.spvtools::val::BasicBlock"** %142 to i64
  %144 = bitcast %"class.spvtools::val::BasicBlock"** %141 to i64*
  store i64 %94, i64* %144, align 8
  %145 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %141, i64 1
  %146 = ptrtoint %"class.spvtools::val::BasicBlock"** %145 to i64
  %147 = ptrtoint %"class.spvtools::val::BasicBlock"** %140 to i64
  %148 = icmp sgt i64 %114, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %137
  %150 = inttoptr i64 %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %150, i64 %114, i1 false) #13
  br label %151

151:                                              ; preds = %149, %137
  store i64 %147, i64* %35, align 8
  store i64 %146, i64* %34, align 8
  store i64 %143, i64* %36, align 8
  %152 = icmp eq i64 %113, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %151
  %154 = inttoptr i64 %113 to i8*
  call void @_ZdlPv(i8* %154) #15
  br label %155

155:                                              ; preds = %107, %151, %153
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %41, i64 16, i1 false) #13
  %156 = load i64, i64* %44, align 8
  store i64 %156, i64* %45, align 8
  %157 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %47, align 8
  store %"struct.std::__1::__function::__policy"* %157, %"struct.std::__1::__function::__policy"** %46, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %157, i64 0, i32 0
  %159 = load i8* (i8*)*, i8* (i8*)** %158, align 8
  %160 = icmp eq i8* (i8*)* %159, null
  br i1 %160, label %164, label %161

161:                                              ; preds = %155
  %162 = load i8*, i8** %48, align 8
  %163 = call i8* %159(i8* %162) #13
  store i8* %163, i8** %49, align 8
  br label %164

164:                                              ; preds = %161, %155
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)* @_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3val10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS2_3CFAIS4_E14TraversalRootsERKNS_6vectorIPS4_NS_9allocatorISE_EEEENS_8functionIFPSI_S6_EEESN_EUlS6_E_S7_EEEEvPKNS0_16__policy_storageES6_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %50, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3CFAINS4_3val10BasicBlockEE14TraversalRootsERKNS_6vectorIPS7_NS_9allocatorISA_EEEENS_8functionIFPSE_PKS7_EEESL_EUlSJ_E_FvSJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %51, align 8
  store i64 %22, i64* %52, align 8
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)* @_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3val10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS2_3CFAIS4_E14TraversalRootsERKNS_6vectorIPS4_NS_9allocatorISE_EEEENS_8functionIFPSI_S6_EEESN_EUlS6_E0_S7_EEEEvPKNS0_16__policy_storageES6_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %53, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3CFAINS4_3val10BasicBlockEE14TraversalRootsERKNS_6vectorIPS7_NS_9allocatorISA_EEEENS_8functionIFPSE_PKS7_EEESL_EUlSJ_E0_FvSJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %54, align 8
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*)* @_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3val10BasicBlockES6_EE11__call_implINS0_20__default_alloc_funcIZNS2_3CFAIS4_E14TraversalRootsERKNS_6vectorIPS4_NS_9allocatorISE_EEEENS_8functionIFPSI_S6_EEESN_EUlS6_S6_E_S7_EEEEvPKNS0_16__policy_storageES6_S6_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*)** %55, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3CFAINS4_3val10BasicBlockEE14TraversalRootsERKNS_6vectorIPS7_NS_9allocatorISA_EEEENS_8functionIFPSE_PKS7_EEESL_EUlSJ_SJ_E_FvSJ_SJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %56, align 8
  call void @_ZN8spvtools3CFAINS_3val10BasicBlockEE19DepthFirstTraversalEPKS2_NSt3__18functionIFPKNS6_6vectorIPS2_NS6_9allocatorIS9_EEEES5_EEENS7_IFvS5_EEESI_NS7_IFvS5_S5_EEE(%"class.spvtools::val::BasicBlock"* %93, %"class.std::__1::function"* nonnull %5, %"class.std::__1::function.373"* nonnull %6, %"class.std::__1::function.373"* nonnull %7, %"class.std::__1::function.379"* nonnull %8) #13
  %165 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %56, align 8
  %166 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %165, i64 0, i32 1
  %167 = load void (i8*)*, void (i8*)** %166, align 8
  %168 = icmp eq void (i8*)* %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %164
  %170 = load i8*, i8** %57, align 8
  call void %167(i8* %170) #13
  br label %171

171:                                              ; preds = %169, %164
  %172 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %54, align 8
  %173 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %172, i64 0, i32 1
  %174 = load void (i8*)*, void (i8*)** %173, align 8
  %175 = icmp eq void (i8*)* %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %171
  %177 = load i8*, i8** %58, align 8
  call void %174(i8* %177) #13
  br label %178

178:                                              ; preds = %176, %171
  %179 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %180 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %179, i64 0, i32 1
  %181 = load void (i8*)*, void (i8*)** %180, align 8
  %182 = icmp eq void (i8*)* %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %178
  %184 = load i8*, i8** %59, align 8
  call void %181(i8* %184) #13
  br label %185

185:                                              ; preds = %183, %178
  %186 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %46, align 8
  %187 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %186, i64 0, i32 1
  %188 = load void (i8*)*, void (i8*)** %187, align 8
  %189 = icmp eq void (i8*)* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %185
  %191 = load i8*, i8** %49, align 8
  call void %188(i8* %191) #13
  br label %192

192:                                              ; preds = %185, %190
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40)
  br label %193

193:                                              ; preds = %192, %91
  %194 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %92, i64 1
  %195 = icmp eq %"class.spvtools::val::BasicBlock"** %194, %29
  br i1 %195, label %60, label %91

196:                                              ; preds = %369, %4, %60
  %197 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %17, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.350"* %197, null
  br i1 %198, label %205, label %199

199:                                              ; preds = %196, %199
  %200 = phi %"struct.std::__1::__hash_node_base.350"* [ %202, %199 ], [ %197, %196 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %201, align 8
  %203 = bitcast %"struct.std::__1::__hash_node_base.350"* %200 to i8*
  call void @_ZdlPv(i8* %203) #15
  %204 = icmp eq %"struct.std::__1::__hash_node_base.350"* %202, null
  br i1 %204, label %205, label %199

205:                                              ; preds = %199, %196
  %206 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %15, align 8
  store %"struct.std::__1::__hash_node_base.350"** null, %"struct.std::__1::__hash_node_base.350"*** %15, align 8
  %207 = icmp eq %"struct.std::__1::__hash_node_base.350"** %206, null
  br i1 %207, label %210, label %208

208:                                              ; preds = %205
  %209 = bitcast %"struct.std::__1::__hash_node_base.350"** %206 to i8*
  call void @_ZdlPv(i8* %209) #15
  br label %210

210:                                              ; preds = %205, %208
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #13
  ret void

211:                                              ; preds = %64, %369
  %212 = phi %"class.spvtools::val::BasicBlock"** [ %61, %64 ], [ %370, %369 ]
  %213 = bitcast %"class.spvtools::val::BasicBlock"** %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = inttoptr i64 %214 to %"class.spvtools::val::BasicBlock"*
  %216 = lshr i64 %214, 32
  %217 = shl i64 %214, 3
  %218 = and i64 %217, 4294967288
  %219 = add nuw nsw i64 %218, 8
  %220 = xor i64 %219, %216
  %221 = mul i64 %220, -7070675565921424023
  %222 = lshr i64 %221, 47
  %223 = xor i64 %221, %216
  %224 = xor i64 %223, %222
  %225 = mul i64 %224, -7070675565921424023
  %226 = lshr i64 %225, 47
  %227 = xor i64 %226, %225
  %228 = mul i64 %227, -7070675565921424023
  %229 = load i64, i64* %16, align 8
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %278, label %231

231:                                              ; preds = %211
  %232 = call i64 @llvm.ctpop.i64(i64 %229) #13, !range !2
  %233 = icmp ugt i64 %232, 1
  br i1 %233, label %237, label %234

234:                                              ; preds = %231
  %235 = add i64 %229, -1
  %236 = and i64 %228, %235
  br label %241

237:                                              ; preds = %231
  %238 = icmp ult i64 %228, %229
  br i1 %238, label %241, label %239

239:                                              ; preds = %237
  %240 = urem i64 %228, %229
  br label %241

241:                                              ; preds = %239, %237, %234
  %242 = phi i64 [ %236, %234 ], [ %240, %239 ], [ %228, %237 ]
  %243 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %15, align 8
  %244 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %243, i64 %242
  %245 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %244, align 8
  %246 = icmp eq %"struct.std::__1::__hash_node_base.350"* %245, null
  br i1 %246, label %278, label %247

247:                                              ; preds = %241
  %248 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %245, i64 0, i32 0
  %249 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %248, align 8
  %250 = icmp eq %"struct.std::__1::__hash_node_base.350"* %249, null
  br i1 %250, label %278, label %251

251:                                              ; preds = %247
  %252 = add i64 %229, -1
  br label %253

253:                                              ; preds = %274, %251
  %254 = phi %"struct.std::__1::__hash_node_base.350"* [ %249, %251 ], [ %276, %274 ]
  %255 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %254, i64 1
  %256 = bitcast %"struct.std::__1::__hash_node_base.350"* %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = icmp eq i64 %228, %257
  br i1 %258, label %269, label %259

259:                                              ; preds = %253
  br i1 %233, label %262, label %260

260:                                              ; preds = %259
  %261 = and i64 %257, %252
  br label %266

262:                                              ; preds = %259
  %263 = icmp ult i64 %257, %229
  br i1 %263, label %266, label %264

264:                                              ; preds = %262
  %265 = urem i64 %257, %229
  br label %266

266:                                              ; preds = %264, %262, %260
  %267 = phi i64 [ %261, %260 ], [ %265, %264 ], [ %257, %262 ]
  %268 = icmp eq i64 %267, %242
  br i1 %268, label %274, label %278

269:                                              ; preds = %253
  %270 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %254, i64 2
  %271 = bitcast %"struct.std::__1::__hash_node_base.350"* %270 to %"class.spvtools::val::BasicBlock"**
  %272 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %271, align 8
  %273 = icmp eq %"class.spvtools::val::BasicBlock"* %272, %215
  br i1 %273, label %369, label %274

274:                                              ; preds = %269, %266
  %275 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %254, i64 0, i32 0
  %276 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %275, align 8
  %277 = icmp eq %"struct.std::__1::__hash_node_base.350"* %276, null
  br i1 %277, label %278, label %253

278:                                              ; preds = %274, %266, %241, %211, %247
  %279 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %23, align 8
  %280 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %24, align 8
  %281 = icmp eq %"class.spvtools::val::BasicBlock"** %279, %280
  %282 = ptrtoint %"class.spvtools::val::BasicBlock"** %280 to i64
  br i1 %281, label %287, label %283

283:                                              ; preds = %278
  %284 = bitcast %"class.spvtools::val::BasicBlock"** %279 to i64*
  store i64 %214, i64* %284, align 8
  %285 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %279, i64 1
  %286 = ptrtoint %"class.spvtools::val::BasicBlock"** %285 to i64
  store i64 %286, i64* %65, align 8
  br label %331

287:                                              ; preds = %278
  %288 = ptrtoint %"class.spvtools::val::BasicBlock"** %279 to i64
  %289 = load i64, i64* %66, align 8
  %290 = sub i64 %288, %289
  %291 = ashr exact i64 %290, 3
  %292 = add nsw i64 %291, 1
  %293 = icmp ugt i64 %292, 2305843009213693951
  br i1 %293, label %294, label %296

294:                                              ; preds = %287
  %295 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %295) #14
  unreachable

296:                                              ; preds = %287
  %297 = sub i64 %282, %289
  %298 = ashr exact i64 %297, 3
  %299 = icmp ult i64 %298, 1152921504606846975
  br i1 %299, label %300, label %308

300:                                              ; preds = %296
  %301 = ashr exact i64 %297, 2
  %302 = icmp ult i64 %301, %292
  %303 = select i1 %302, i64 %292, i64 %301
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %313, label %305

305:                                              ; preds = %300
  %306 = icmp ugt i64 %303, 2305843009213693951
  br i1 %306, label %307, label %308

307:                                              ; preds = %305
  call void @abort() #14
  unreachable

308:                                              ; preds = %305, %296
  %309 = phi i64 [ %303, %305 ], [ 2305843009213693951, %296 ]
  %310 = shl i64 %309, 3
  %311 = call i8* @_Znwm(i64 %310) #15
  %312 = bitcast i8* %311 to %"class.spvtools::val::BasicBlock"**
  br label %313

313:                                              ; preds = %308, %300
  %314 = phi i64 [ %309, %308 ], [ 0, %300 ]
  %315 = phi i8* [ %311, %308 ], [ null, %300 ]
  %316 = phi %"class.spvtools::val::BasicBlock"** [ %312, %308 ], [ null, %300 ]
  %317 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %316, i64 %291
  %318 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %316, i64 %314
  %319 = ptrtoint %"class.spvtools::val::BasicBlock"** %318 to i64
  %320 = bitcast %"class.spvtools::val::BasicBlock"** %317 to i64*
  store i64 %214, i64* %320, align 8
  %321 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %317, i64 1
  %322 = ptrtoint %"class.spvtools::val::BasicBlock"** %321 to i64
  %323 = ptrtoint %"class.spvtools::val::BasicBlock"** %316 to i64
  %324 = icmp sgt i64 %290, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %313
  %326 = inttoptr i64 %289 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %315, i8* align 8 %326, i64 %290, i1 false) #13
  br label %327

327:                                              ; preds = %325, %313
  store i64 %323, i64* %66, align 8
  store i64 %322, i64* %65, align 8
  store i64 %319, i64* %67, align 8
  %328 = icmp eq i64 %289, 0
  br i1 %328, label %331, label %329

329:                                              ; preds = %327
  %330 = inttoptr i64 %289 to i8*
  call void @_ZdlPv(i8* %330) #15
  br label %331

331:                                              ; preds = %283, %327, %329
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %71)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 %72, i64 16, i1 false) #13
  %332 = load i64, i64* %75, align 8
  store i64 %332, i64* %76, align 8
  %333 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  store %"struct.std::__1::__function::__policy"* %333, %"struct.std::__1::__function::__policy"** %77, align 8
  %334 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %333, i64 0, i32 0
  %335 = load i8* (i8*)*, i8* (i8*)** %334, align 8
  %336 = icmp eq i8* (i8*)* %335, null
  br i1 %336, label %340, label %337

337:                                              ; preds = %331
  %338 = load i8*, i8** %79, align 8
  %339 = call i8* %335(i8* %338) #13
  store i8* %339, i8** %80, align 8
  br label %340

340:                                              ; preds = %337, %331
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)* @_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3val10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS2_3CFAIS4_E14TraversalRootsERKNS_6vectorIPS4_NS_9allocatorISE_EEEENS_8functionIFPSI_S6_EEESN_EUlS6_E_S7_EEEEvPKNS0_16__policy_storageES6_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %81, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3CFAINS4_3val10BasicBlockEE14TraversalRootsERKNS_6vectorIPS7_NS_9allocatorISA_EEEENS_8functionIFPSE_PKS7_EEESL_EUlSJ_E_FvSJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %82, align 8
  store i64 %22, i64* %83, align 8
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)* @_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3val10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS2_3CFAIS4_E14TraversalRootsERKNS_6vectorIPS4_NS_9allocatorISE_EEEENS_8functionIFPSI_S6_EEESN_EUlS6_E0_S7_EEEEvPKNS0_16__policy_storageES6_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %84, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3CFAINS4_3val10BasicBlockEE14TraversalRootsERKNS_6vectorIPS7_NS_9allocatorISA_EEEENS_8functionIFPSE_PKS7_EEESL_EUlSJ_E0_FvSJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %85, align 8
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*)* @_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3val10BasicBlockES6_EE11__call_implINS0_20__default_alloc_funcIZNS2_3CFAIS4_E14TraversalRootsERKNS_6vectorIPS4_NS_9allocatorISE_EEEENS_8functionIFPSI_S6_EEESN_EUlS6_S6_E_S7_EEEEvPKNS0_16__policy_storageES6_S6_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*)** %86, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3CFAINS4_3val10BasicBlockEE14TraversalRootsERKNS_6vectorIPS7_NS_9allocatorISA_EEEENS_8functionIFPSE_PKS7_EEESL_EUlSJ_SJ_E_FvSJ_SJ_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %87, align 8
  call void @_ZN8spvtools3CFAINS_3val10BasicBlockEE19DepthFirstTraversalEPKS2_NSt3__18functionIFPKNS6_6vectorIPS2_NS6_9allocatorIS9_EEEES5_EEENS7_IFvS5_EEESI_NS7_IFvS5_S5_EEE(%"class.spvtools::val::BasicBlock"* %215, %"class.std::__1::function"* nonnull %9, %"class.std::__1::function.373"* nonnull %10, %"class.std::__1::function.373"* nonnull %11, %"class.std::__1::function.379"* nonnull %12) #13
  %341 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %87, align 8
  %342 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %341, i64 0, i32 1
  %343 = load void (i8*)*, void (i8*)** %342, align 8
  %344 = icmp eq void (i8*)* %343, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %340
  %346 = load i8*, i8** %88, align 8
  call void %343(i8* %346) #13
  br label %347

347:                                              ; preds = %345, %340
  %348 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %85, align 8
  %349 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %348, i64 0, i32 1
  %350 = load void (i8*)*, void (i8*)** %349, align 8
  %351 = icmp eq void (i8*)* %350, null
  br i1 %351, label %354, label %352

352:                                              ; preds = %347
  %353 = load i8*, i8** %89, align 8
  call void %350(i8* %353) #13
  br label %354

354:                                              ; preds = %352, %347
  %355 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %82, align 8
  %356 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %355, i64 0, i32 1
  %357 = load void (i8*)*, void (i8*)** %356, align 8
  %358 = icmp eq void (i8*)* %357, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %354
  %360 = load i8*, i8** %90, align 8
  call void %357(i8* %360) #13
  br label %361

361:                                              ; preds = %359, %354
  %362 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %77, align 8
  %363 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %362, i64 0, i32 1
  %364 = load void (i8*)*, void (i8*)** %363, align 8
  %365 = icmp eq void (i8*)* %364, null
  br i1 %365, label %368, label %366

366:                                              ; preds = %361
  %367 = load i8*, i8** %80, align 8
  call void %364(i8* %367) #13
  br label %368

368:                                              ; preds = %361, %366
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %70)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %71)
  br label %369

369:                                              ; preds = %269, %368
  %370 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %212, i64 1
  %371 = icmp eq %"class.spvtools::val::BasicBlock"** %370, %62
  br i1 %371, label %196, label %211
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::val::BasicBlock"** @_ZNSt3__16vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPKS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISE_E9referenceEEE5valueENS9_IPS4_EEE4typeESC_SE_SE_(%"class.std::__1::vector"*, %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.spvtools::val::BasicBlock"** %2 to i8*
  %6 = bitcast %"class.spvtools::val::BasicBlock"** %1 to i8*
  %7 = ptrtoint %"class.spvtools::val::BasicBlock"** %1 to i64
  %8 = ptrtoint %"class.spvtools::val::BasicBlock"** %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint %"class.spvtools::val::BasicBlock"** %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %772

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.spvtools::val::BasicBlock"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %18, align 8
  %20 = ptrtoint %"class.spvtools::val::BasicBlock"** %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %"class.spvtools::val::BasicBlock"*** %18 to i64*
  br i1 %23, label %359, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %214

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, i64 %27
  %31 = icmp eq %"class.spvtools::val::BasicBlock"** %30, %3
  br i1 %31, label %209, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %3, i64 %33
  %35 = ptrtoint %"class.spvtools::val::BasicBlock"** %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %3, i64 %41
  %43 = ptrtoint %"class.spvtools::val::BasicBlock"** %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, i64 %49
  %51 = icmp ult %"class.spvtools::val::BasicBlock"** %19, %50
  %52 = icmp ult %"class.spvtools::val::BasicBlock"** %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %19, i64 %55
  %57 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %19, i64 %66
  %69 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %30, i64 %66
  %70 = bitcast %"class.spvtools::val::BasicBlock"** %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !48
  %72 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %69, i64 2
  %73 = bitcast %"class.spvtools::val::BasicBlock"** %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !48
  %75 = bitcast %"class.spvtools::val::BasicBlock"** %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !51, !noalias !48
  %76 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %68, i64 2
  %77 = bitcast %"class.spvtools::val::BasicBlock"** %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !51, !noalias !48
  %78 = or i64 %66, 4
  %79 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %19, i64 %78
  %80 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %30, i64 %78
  %81 = bitcast %"class.spvtools::val::BasicBlock"** %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !48
  %83 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %80, i64 2
  %84 = bitcast %"class.spvtools::val::BasicBlock"** %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !48
  %86 = bitcast %"class.spvtools::val::BasicBlock"** %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !51, !noalias !48
  %87 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %79, i64 2
  %88 = bitcast %"class.spvtools::val::BasicBlock"** %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !51, !noalias !48
  %89 = or i64 %66, 8
  %90 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %19, i64 %89
  %91 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %30, i64 %89
  %92 = bitcast %"class.spvtools::val::BasicBlock"** %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !48
  %94 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %91, i64 2
  %95 = bitcast %"class.spvtools::val::BasicBlock"** %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !48
  %97 = bitcast %"class.spvtools::val::BasicBlock"** %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !51, !noalias !48
  %98 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %90, i64 2
  %99 = bitcast %"class.spvtools::val::BasicBlock"** %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !51, !noalias !48
  %100 = or i64 %66, 12
  %101 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %19, i64 %100
  %102 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %30, i64 %100
  %103 = bitcast %"class.spvtools::val::BasicBlock"** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !48
  %105 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %102, i64 2
  %106 = bitcast %"class.spvtools::val::BasicBlock"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !48
  %108 = bitcast %"class.spvtools::val::BasicBlock"** %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !51, !noalias !48
  %109 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %101, i64 2
  %110 = bitcast %"class.spvtools::val::BasicBlock"** %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !51, !noalias !48
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !53

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %19, i64 %118
  %121 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %30, i64 %118
  %122 = bitcast %"class.spvtools::val::BasicBlock"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !48
  %124 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %121, i64 2
  %125 = bitcast %"class.spvtools::val::BasicBlock"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !48
  %127 = bitcast %"class.spvtools::val::BasicBlock"** %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !51, !noalias !48
  %128 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %120, i64 2
  %129 = bitcast %"class.spvtools::val::BasicBlock"** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !51, !noalias !48
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !54

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %206, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi %"class.spvtools::val::BasicBlock"** [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi %"class.spvtools::val::BasicBlock"** [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint %"class.spvtools::val::BasicBlock"** %137 to i64
  %139 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %3, i64 -1
  %140 = ptrtoint %"class.spvtools::val::BasicBlock"** %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %135, %146
  %147 = phi %"class.spvtools::val::BasicBlock"** [ %154, %146 ], [ %136, %135 ]
  %148 = phi %"class.spvtools::val::BasicBlock"** [ %153, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %135 ]
  %150 = bitcast %"class.spvtools::val::BasicBlock"** %147 to i64*
  %151 = bitcast %"class.spvtools::val::BasicBlock"** %148 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %148, i64 1
  %154 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %147, i64 1
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !55

157:                                              ; preds = %146, %135
  %158 = phi %"class.spvtools::val::BasicBlock"** [ undef, %135 ], [ %154, %146 ]
  %159 = phi %"class.spvtools::val::BasicBlock"** [ %136, %135 ], [ %154, %146 ]
  %160 = phi %"class.spvtools::val::BasicBlock"** [ %137, %135 ], [ %153, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %206, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"class.spvtools::val::BasicBlock"** [ %204, %162 ], [ %159, %157 ]
  %164 = phi %"class.spvtools::val::BasicBlock"** [ %203, %162 ], [ %160, %157 ]
  %165 = bitcast %"class.spvtools::val::BasicBlock"** %163 to i64*
  %166 = bitcast %"class.spvtools::val::BasicBlock"** %164 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  %168 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %164, i64 1
  %169 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %163, i64 1
  %170 = bitcast %"class.spvtools::val::BasicBlock"** %169 to i64*
  %171 = bitcast %"class.spvtools::val::BasicBlock"** %168 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  %173 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %164, i64 2
  %174 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %163, i64 2
  %175 = bitcast %"class.spvtools::val::BasicBlock"** %174 to i64*
  %176 = bitcast %"class.spvtools::val::BasicBlock"** %173 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %175, align 8
  %178 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %164, i64 3
  %179 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %163, i64 3
  %180 = bitcast %"class.spvtools::val::BasicBlock"** %179 to i64*
  %181 = bitcast %"class.spvtools::val::BasicBlock"** %178 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %180, align 8
  %183 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %164, i64 4
  %184 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %163, i64 4
  %185 = bitcast %"class.spvtools::val::BasicBlock"** %184 to i64*
  %186 = bitcast %"class.spvtools::val::BasicBlock"** %183 to i64*
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %185, align 8
  %188 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %164, i64 5
  %189 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %163, i64 5
  %190 = bitcast %"class.spvtools::val::BasicBlock"** %189 to i64*
  %191 = bitcast %"class.spvtools::val::BasicBlock"** %188 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  %193 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %164, i64 6
  %194 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %163, i64 6
  %195 = bitcast %"class.spvtools::val::BasicBlock"** %194 to i64*
  %196 = bitcast %"class.spvtools::val::BasicBlock"** %193 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %164, i64 7
  %199 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %163, i64 7
  %200 = bitcast %"class.spvtools::val::BasicBlock"** %199 to i64*
  %201 = bitcast %"class.spvtools::val::BasicBlock"** %198 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  %203 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %164, i64 8
  %204 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %163, i64 8
  %205 = icmp eq %"class.spvtools::val::BasicBlock"** %203, %3
  br i1 %205, label %206, label %162, !llvm.loop !56

206:                                              ; preds = %157, %162, %133
  %207 = phi %"class.spvtools::val::BasicBlock"** [ %56, %133 ], [ %158, %157 ], [ %204, %162 ]
  %208 = ptrtoint %"class.spvtools::val::BasicBlock"** %207 to i64
  br label %209

209:                                              ; preds = %206, %29
  %210 = phi i64 [ %20, %29 ], [ %208, %206 ]
  store i64 %210, i64* %24, align 8
  %211 = icmp sgt i64 %26, 0
  br i1 %211, label %212, label %772

212:                                              ; preds = %209
  %213 = inttoptr i64 %210 to %"class.spvtools::val::BasicBlock"**
  br label %214

214:                                              ; preds = %212, %25
  %215 = phi i64 [ %210, %212 ], [ %20, %25 ]
  %216 = phi %"class.spvtools::val::BasicBlock"** [ %213, %212 ], [ %19, %25 ]
  %217 = phi %"class.spvtools::val::BasicBlock"** [ %30, %212 ], [ %3, %25 ]
  %218 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, i64 %12
  %219 = ptrtoint %"class.spvtools::val::BasicBlock"** %218 to i64
  %220 = sub i64 %215, %219
  %221 = ashr exact i64 %220, 3
  %222 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, i64 %221
  %223 = icmp ult %"class.spvtools::val::BasicBlock"** %222, %19
  br i1 %223, label %224, label %337

224:                                              ; preds = %214
  %225 = sub nsw i64 0, %221
  %226 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %19, i64 %225
  %227 = bitcast %"class.spvtools::val::BasicBlock"** %226 to i8*
  %228 = xor i64 %7, -1
  %229 = getelementptr i8, i8* %227, i64 %228
  %230 = ptrtoint i8* %229 to i64
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = icmp ult i64 %232, 4
  br i1 %233, label %234, label %237

234:                                              ; preds = %332, %237, %224
  %235 = phi %"class.spvtools::val::BasicBlock"** [ %216, %237 ], [ %216, %224 ], [ %255, %332 ]
  %236 = phi %"class.spvtools::val::BasicBlock"** [ %222, %237 ], [ %222, %224 ], [ %256, %332 ]
  br label %345

237:                                              ; preds = %224
  %238 = sub nsw i64 0, %221
  %239 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %19, i64 %238
  %240 = bitcast %"class.spvtools::val::BasicBlock"** %239 to i8*
  %241 = xor i64 %7, -1
  %242 = getelementptr i8, i8* %240, i64 %241
  %243 = ptrtoint i8* %242 to i64
  %244 = lshr i64 %243, 3
  %245 = add nuw nsw i64 %244, 1
  %246 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %216, i64 %245
  %247 = add nsw i64 %221, %244
  %248 = add nsw i64 %247, 1
  %249 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, i64 %248
  %250 = icmp ult %"class.spvtools::val::BasicBlock"** %216, %249
  %251 = icmp ult %"class.spvtools::val::BasicBlock"** %222, %246
  %252 = and i1 %250, %251
  br i1 %252, label %234, label %253

253:                                              ; preds = %237
  %254 = and i64 %232, 4611686018427387900
  %255 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %216, i64 %254
  %256 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %222, i64 %254
  %257 = add nsw i64 %254, -4
  %258 = lshr exact i64 %257, 2
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 3
  %261 = icmp ult i64 %257, 12
  br i1 %261, label %313, label %262

262:                                              ; preds = %253
  %263 = sub nsw i64 %259, %260
  br label %264

264:                                              ; preds = %264, %262
  %265 = phi i64 [ 0, %262 ], [ %310, %264 ]
  %266 = phi i64 [ %263, %262 ], [ %311, %264 ]
  %267 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %216, i64 %265
  %268 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %222, i64 %265
  %269 = bitcast %"class.spvtools::val::BasicBlock"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !57
  %271 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %268, i64 2
  %272 = bitcast %"class.spvtools::val::BasicBlock"** %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !57
  %274 = bitcast %"class.spvtools::val::BasicBlock"** %267 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %274, align 8, !alias.scope !60, !noalias !57
  %275 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %267, i64 2
  %276 = bitcast %"class.spvtools::val::BasicBlock"** %275 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %276, align 8, !alias.scope !60, !noalias !57
  %277 = or i64 %265, 4
  %278 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %216, i64 %277
  %279 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %222, i64 %277
  %280 = bitcast %"class.spvtools::val::BasicBlock"** %279 to <2 x i64>*
  %281 = load <2 x i64>, <2 x i64>* %280, align 8, !alias.scope !57
  %282 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %279, i64 2
  %283 = bitcast %"class.spvtools::val::BasicBlock"** %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !57
  %285 = bitcast %"class.spvtools::val::BasicBlock"** %278 to <2 x i64>*
  store <2 x i64> %281, <2 x i64>* %285, align 8, !alias.scope !60, !noalias !57
  %286 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %278, i64 2
  %287 = bitcast %"class.spvtools::val::BasicBlock"** %286 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %287, align 8, !alias.scope !60, !noalias !57
  %288 = or i64 %265, 8
  %289 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %216, i64 %288
  %290 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %222, i64 %288
  %291 = bitcast %"class.spvtools::val::BasicBlock"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !57
  %293 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %290, i64 2
  %294 = bitcast %"class.spvtools::val::BasicBlock"** %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !57
  %296 = bitcast %"class.spvtools::val::BasicBlock"** %289 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !60, !noalias !57
  %297 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %289, i64 2
  %298 = bitcast %"class.spvtools::val::BasicBlock"** %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !60, !noalias !57
  %299 = or i64 %265, 12
  %300 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %216, i64 %299
  %301 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %222, i64 %299
  %302 = bitcast %"class.spvtools::val::BasicBlock"** %301 to <2 x i64>*
  %303 = load <2 x i64>, <2 x i64>* %302, align 8, !alias.scope !57
  %304 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %301, i64 2
  %305 = bitcast %"class.spvtools::val::BasicBlock"** %304 to <2 x i64>*
  %306 = load <2 x i64>, <2 x i64>* %305, align 8, !alias.scope !57
  %307 = bitcast %"class.spvtools::val::BasicBlock"** %300 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %307, align 8, !alias.scope !60, !noalias !57
  %308 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %300, i64 2
  %309 = bitcast %"class.spvtools::val::BasicBlock"** %308 to <2 x i64>*
  store <2 x i64> %306, <2 x i64>* %309, align 8, !alias.scope !60, !noalias !57
  %310 = add i64 %265, 16
  %311 = add i64 %266, -4
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %264, !llvm.loop !62

313:                                              ; preds = %264, %253
  %314 = phi i64 [ 0, %253 ], [ %310, %264 ]
  %315 = icmp eq i64 %260, 0
  br i1 %315, label %332, label %316

316:                                              ; preds = %313, %316
  %317 = phi i64 [ %329, %316 ], [ %314, %313 ]
  %318 = phi i64 [ %330, %316 ], [ %260, %313 ]
  %319 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %216, i64 %317
  %320 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %222, i64 %317
  %321 = bitcast %"class.spvtools::val::BasicBlock"** %320 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 8, !alias.scope !57
  %323 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %320, i64 2
  %324 = bitcast %"class.spvtools::val::BasicBlock"** %323 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8, !alias.scope !57
  %326 = bitcast %"class.spvtools::val::BasicBlock"** %319 to <2 x i64>*
  store <2 x i64> %322, <2 x i64>* %326, align 8, !alias.scope !60, !noalias !57
  %327 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %319, i64 2
  %328 = bitcast %"class.spvtools::val::BasicBlock"** %327 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %328, align 8, !alias.scope !60, !noalias !57
  %329 = add i64 %317, 4
  %330 = add i64 %318, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %316, !llvm.loop !63

332:                                              ; preds = %316, %313
  %333 = icmp eq i64 %232, %254
  br i1 %333, label %334, label %234

334:                                              ; preds = %345, %332
  %335 = phi %"class.spvtools::val::BasicBlock"** [ %255, %332 ], [ %352, %345 ]
  %336 = ptrtoint %"class.spvtools::val::BasicBlock"** %335 to i64
  br label %337

337:                                              ; preds = %334, %214
  %338 = phi i64 [ %336, %334 ], [ %215, %214 ]
  store i64 %338, i64* %24, align 8
  %339 = icmp eq i64 %220, 0
  br i1 %339, label %354, label %340

340:                                              ; preds = %337
  %341 = sub nsw i64 0, %221
  %342 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %216, i64 %341
  %343 = bitcast %"class.spvtools::val::BasicBlock"** %342 to i8*
  %344 = bitcast %"class.spvtools::val::BasicBlock"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %343, i8* align 8 %344, i64 %220, i1 false) #13
  br label %354

345:                                              ; preds = %234, %345
  %346 = phi %"class.spvtools::val::BasicBlock"** [ %352, %345 ], [ %235, %234 ]
  %347 = phi %"class.spvtools::val::BasicBlock"** [ %351, %345 ], [ %236, %234 ]
  %348 = bitcast %"class.spvtools::val::BasicBlock"** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.spvtools::val::BasicBlock"** %346 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %347, i64 1
  %352 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %346, i64 1
  %353 = icmp ult %"class.spvtools::val::BasicBlock"** %351, %19
  br i1 %353, label %345, label %334, !llvm.loop !64

354:                                              ; preds = %337, %340
  %355 = ptrtoint %"class.spvtools::val::BasicBlock"** %217 to i64
  %356 = sub i64 %355, %8
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %772, label %358

358:                                              ; preds = %354
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %356, i1 false) #13
  br label %772

359:                                              ; preds = %14
  %360 = bitcast %"class.std::__1::vector"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %20, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %12
  %365 = icmp ugt i64 %364, 2305843009213693951
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #14
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %17, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 1152921504606846975
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %7, %361
  %374 = ashr exact i64 %373, 3
  br label %385

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %7, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %391, label %382

382:                                              ; preds = %375
  %383 = icmp ugt i64 %378, 2305843009213693951
  br i1 %383, label %384, label %385

384:                                              ; preds = %382
  tail call void @abort() #14
  unreachable

385:                                              ; preds = %372, %382
  %386 = phi i64 [ 2305843009213693951, %372 ], [ %378, %382 ]
  %387 = phi i64 [ %374, %372 ], [ %380, %382 ]
  %388 = shl i64 %386, 3
  %389 = tail call i8* @_Znwm(i64 %388) #15
  %390 = bitcast i8* %389 to %"class.spvtools::val::BasicBlock"**
  br label %391

391:                                              ; preds = %385, %375
  %392 = phi i64 [ %387, %385 ], [ %380, %375 ]
  %393 = phi i64 [ %386, %385 ], [ 0, %375 ]
  %394 = phi %"class.spvtools::val::BasicBlock"** [ %390, %385 ], [ null, %375 ]
  %395 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %394, i64 %392
  %396 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %394, i64 %393
  %397 = ptrtoint %"class.spvtools::val::BasicBlock"** %396 to i64
  %398 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %395, i64 %12
  %399 = add i64 %11, -8
  %400 = lshr i64 %399, 3
  %401 = add nuw nsw i64 %400, 1
  %402 = icmp ult i64 %401, 4
  br i1 %402, label %496, label %403

403:                                              ; preds = %391
  %404 = add i64 %11, -8
  %405 = lshr i64 %404, 3
  %406 = add nsw i64 %392, %405
  %407 = add nsw i64 %406, 1
  %408 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %394, i64 %407
  %409 = add nuw nsw i64 %405, 1
  %410 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, i64 %409
  %411 = icmp ult %"class.spvtools::val::BasicBlock"** %395, %410
  %412 = icmp ugt %"class.spvtools::val::BasicBlock"** %408, %2
  %413 = and i1 %411, %412
  br i1 %413, label %496, label %414

414:                                              ; preds = %403
  %415 = and i64 %401, 4611686018427387900
  %416 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %395, i64 %415
  %417 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %395, i64 %415
  %418 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, i64 %415
  %419 = add nsw i64 %415, -4
  %420 = lshr exact i64 %419, 2
  %421 = add nuw nsw i64 %420, 1
  %422 = and i64 %421, 3
  %423 = icmp ult i64 %419, 12
  br i1 %423, label %475, label %424

424:                                              ; preds = %414
  %425 = sub nsw i64 %421, %422
  br label %426

426:                                              ; preds = %426, %424
  %427 = phi i64 [ 0, %424 ], [ %472, %426 ]
  %428 = phi i64 [ %425, %424 ], [ %473, %426 ]
  %429 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %395, i64 %427
  %430 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, i64 %427
  %431 = bitcast %"class.spvtools::val::BasicBlock"** %430 to <2 x i64>*
  %432 = load <2 x i64>, <2 x i64>* %431, align 8, !alias.scope !65
  %433 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %430, i64 2
  %434 = bitcast %"class.spvtools::val::BasicBlock"** %433 to <2 x i64>*
  %435 = load <2 x i64>, <2 x i64>* %434, align 8, !alias.scope !65
  %436 = bitcast %"class.spvtools::val::BasicBlock"** %429 to <2 x i64>*
  store <2 x i64> %432, <2 x i64>* %436, align 8, !alias.scope !68, !noalias !65
  %437 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %429, i64 2
  %438 = bitcast %"class.spvtools::val::BasicBlock"** %437 to <2 x i64>*
  store <2 x i64> %435, <2 x i64>* %438, align 8, !alias.scope !68, !noalias !65
  %439 = or i64 %427, 4
  %440 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %395, i64 %439
  %441 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, i64 %439
  %442 = bitcast %"class.spvtools::val::BasicBlock"** %441 to <2 x i64>*
  %443 = load <2 x i64>, <2 x i64>* %442, align 8, !alias.scope !65
  %444 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %441, i64 2
  %445 = bitcast %"class.spvtools::val::BasicBlock"** %444 to <2 x i64>*
  %446 = load <2 x i64>, <2 x i64>* %445, align 8, !alias.scope !65
  %447 = bitcast %"class.spvtools::val::BasicBlock"** %440 to <2 x i64>*
  store <2 x i64> %443, <2 x i64>* %447, align 8, !alias.scope !68, !noalias !65
  %448 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %440, i64 2
  %449 = bitcast %"class.spvtools::val::BasicBlock"** %448 to <2 x i64>*
  store <2 x i64> %446, <2 x i64>* %449, align 8, !alias.scope !68, !noalias !65
  %450 = or i64 %427, 8
  %451 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %395, i64 %450
  %452 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, i64 %450
  %453 = bitcast %"class.spvtools::val::BasicBlock"** %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8, !alias.scope !65
  %455 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %452, i64 2
  %456 = bitcast %"class.spvtools::val::BasicBlock"** %455 to <2 x i64>*
  %457 = load <2 x i64>, <2 x i64>* %456, align 8, !alias.scope !65
  %458 = bitcast %"class.spvtools::val::BasicBlock"** %451 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %458, align 8, !alias.scope !68, !noalias !65
  %459 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %451, i64 2
  %460 = bitcast %"class.spvtools::val::BasicBlock"** %459 to <2 x i64>*
  store <2 x i64> %457, <2 x i64>* %460, align 8, !alias.scope !68, !noalias !65
  %461 = or i64 %427, 12
  %462 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %395, i64 %461
  %463 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, i64 %461
  %464 = bitcast %"class.spvtools::val::BasicBlock"** %463 to <2 x i64>*
  %465 = load <2 x i64>, <2 x i64>* %464, align 8, !alias.scope !65
  %466 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %463, i64 2
  %467 = bitcast %"class.spvtools::val::BasicBlock"** %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 8, !alias.scope !65
  %469 = bitcast %"class.spvtools::val::BasicBlock"** %462 to <2 x i64>*
  store <2 x i64> %465, <2 x i64>* %469, align 8, !alias.scope !68, !noalias !65
  %470 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %462, i64 2
  %471 = bitcast %"class.spvtools::val::BasicBlock"** %470 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %471, align 8, !alias.scope !68, !noalias !65
  %472 = add i64 %427, 16
  %473 = add i64 %428, -4
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %426, !llvm.loop !70

475:                                              ; preds = %426, %414
  %476 = phi i64 [ 0, %414 ], [ %472, %426 ]
  %477 = icmp eq i64 %422, 0
  br i1 %477, label %494, label %478

478:                                              ; preds = %475, %478
  %479 = phi i64 [ %491, %478 ], [ %476, %475 ]
  %480 = phi i64 [ %492, %478 ], [ %422, %475 ]
  %481 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %395, i64 %479
  %482 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %2, i64 %479
  %483 = bitcast %"class.spvtools::val::BasicBlock"** %482 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 8, !alias.scope !65
  %485 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %482, i64 2
  %486 = bitcast %"class.spvtools::val::BasicBlock"** %485 to <2 x i64>*
  %487 = load <2 x i64>, <2 x i64>* %486, align 8, !alias.scope !65
  %488 = bitcast %"class.spvtools::val::BasicBlock"** %481 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %488, align 8, !alias.scope !68, !noalias !65
  %489 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %481, i64 2
  %490 = bitcast %"class.spvtools::val::BasicBlock"** %489 to <2 x i64>*
  store <2 x i64> %487, <2 x i64>* %490, align 8, !alias.scope !68, !noalias !65
  %491 = add i64 %479, 4
  %492 = add i64 %480, -1
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %478, !llvm.loop !71

494:                                              ; preds = %478, %475
  %495 = icmp eq i64 %401, %415
  br i1 %495, label %572, label %496

496:                                              ; preds = %494, %403, %391
  %497 = phi %"class.spvtools::val::BasicBlock"** [ %395, %403 ], [ %395, %391 ], [ %416, %494 ]
  %498 = phi %"class.spvtools::val::BasicBlock"** [ %395, %403 ], [ %395, %391 ], [ %417, %494 ]
  %499 = phi %"class.spvtools::val::BasicBlock"** [ %2, %403 ], [ %2, %391 ], [ %418, %494 ]
  %500 = ptrtoint %"class.spvtools::val::BasicBlock"** %497 to i64
  %501 = add nsw i64 %392, %12
  %502 = add nsw i64 %501, -1
  %503 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %394, i64 %502
  %504 = ptrtoint %"class.spvtools::val::BasicBlock"** %503 to i64
  %505 = sub i64 %504, %500
  %506 = lshr i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 7
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %522, label %510

510:                                              ; preds = %496, %510
  %511 = phi %"class.spvtools::val::BasicBlock"** [ %518, %510 ], [ %497, %496 ]
  %512 = phi %"class.spvtools::val::BasicBlock"** [ %518, %510 ], [ %498, %496 ]
  %513 = phi %"class.spvtools::val::BasicBlock"** [ %519, %510 ], [ %499, %496 ]
  %514 = phi i64 [ %520, %510 ], [ %508, %496 ]
  %515 = bitcast %"class.spvtools::val::BasicBlock"** %513 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"class.spvtools::val::BasicBlock"** %512 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %511, i64 1
  %519 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %513, i64 1
  %520 = add i64 %514, -1
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %522, label %510, !llvm.loop !72

522:                                              ; preds = %510, %496
  %523 = phi %"class.spvtools::val::BasicBlock"** [ %497, %496 ], [ %518, %510 ]
  %524 = phi %"class.spvtools::val::BasicBlock"** [ %498, %496 ], [ %518, %510 ]
  %525 = phi %"class.spvtools::val::BasicBlock"** [ %499, %496 ], [ %519, %510 ]
  %526 = icmp ult i64 %505, 56
  br i1 %526, label %572, label %527

527:                                              ; preds = %522, %527
  %528 = phi %"class.spvtools::val::BasicBlock"** [ %569, %527 ], [ %523, %522 ]
  %529 = phi %"class.spvtools::val::BasicBlock"** [ %569, %527 ], [ %524, %522 ]
  %530 = phi %"class.spvtools::val::BasicBlock"** [ %570, %527 ], [ %525, %522 ]
  %531 = bitcast %"class.spvtools::val::BasicBlock"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"class.spvtools::val::BasicBlock"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %528, i64 1
  %535 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %530, i64 1
  %536 = bitcast %"class.spvtools::val::BasicBlock"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"class.spvtools::val::BasicBlock"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %528, i64 2
  %540 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %530, i64 2
  %541 = bitcast %"class.spvtools::val::BasicBlock"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"class.spvtools::val::BasicBlock"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %528, i64 3
  %545 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %530, i64 3
  %546 = bitcast %"class.spvtools::val::BasicBlock"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"class.spvtools::val::BasicBlock"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %528, i64 4
  %550 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %530, i64 4
  %551 = bitcast %"class.spvtools::val::BasicBlock"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"class.spvtools::val::BasicBlock"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %528, i64 5
  %555 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %530, i64 5
  %556 = bitcast %"class.spvtools::val::BasicBlock"** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %"class.spvtools::val::BasicBlock"** %554 to i64*
  store i64 %557, i64* %558, align 8
  %559 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %528, i64 6
  %560 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %530, i64 6
  %561 = bitcast %"class.spvtools::val::BasicBlock"** %560 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = bitcast %"class.spvtools::val::BasicBlock"** %559 to i64*
  store i64 %562, i64* %563, align 8
  %564 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %528, i64 7
  %565 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %530, i64 7
  %566 = bitcast %"class.spvtools::val::BasicBlock"** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"class.spvtools::val::BasicBlock"** %564 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %528, i64 8
  %570 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %530, i64 8
  %571 = icmp eq %"class.spvtools::val::BasicBlock"** %398, %569
  br i1 %571, label %572, label %527, !llvm.loop !73

572:                                              ; preds = %522, %527, %494
  %573 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %9, align 8
  %574 = ptrtoint %"class.spvtools::val::BasicBlock"** %573 to i64
  %575 = sub i64 %7, %574
  %576 = ashr exact i64 %575, 3
  %577 = sub nsw i64 0, %576
  %578 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %395, i64 %577
  %579 = ptrtoint %"class.spvtools::val::BasicBlock"** %578 to i64
  %580 = icmp sgt i64 %575, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %572
  %582 = bitcast %"class.spvtools::val::BasicBlock"** %578 to i8*
  %583 = bitcast %"class.spvtools::val::BasicBlock"** %573 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %582, i8* align 8 %583, i64 %575, i1 false) #13
  br label %584

584:                                              ; preds = %581, %572
  %585 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %18, align 8
  %586 = icmp eq %"class.spvtools::val::BasicBlock"** %585, %1
  br i1 %586, label %765, label %587

587:                                              ; preds = %584
  %588 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %585, i64 -1
  %589 = ptrtoint %"class.spvtools::val::BasicBlock"** %588 to i64
  %590 = sub i64 %589, %7
  %591 = lshr i64 %590, 3
  %592 = add nuw nsw i64 %591, 1
  %593 = icmp ult i64 %592, 4
  br i1 %593, label %690, label %594

594:                                              ; preds = %587
  %595 = add nsw i64 %392, %12
  %596 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %585, i64 -1
  %597 = ptrtoint %"class.spvtools::val::BasicBlock"** %596 to i64
  %598 = sub i64 %597, %7
  %599 = lshr i64 %598, 3
  %600 = add nsw i64 %595, %599
  %601 = add nsw i64 %600, 1
  %602 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %394, i64 %601
  %603 = add nuw nsw i64 %599, 1
  %604 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, i64 %603
  %605 = icmp ult %"class.spvtools::val::BasicBlock"** %398, %604
  %606 = icmp ugt %"class.spvtools::val::BasicBlock"** %602, %1
  %607 = and i1 %605, %606
  br i1 %607, label %690, label %608

608:                                              ; preds = %594
  %609 = and i64 %592, 4611686018427387900
  %610 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %398, i64 %609
  %611 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %398, i64 %609
  %612 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, i64 %609
  %613 = add nsw i64 %609, -4
  %614 = lshr exact i64 %613, 2
  %615 = add nuw nsw i64 %614, 1
  %616 = and i64 %615, 3
  %617 = icmp ult i64 %613, 12
  br i1 %617, label %669, label %618

618:                                              ; preds = %608
  %619 = sub nsw i64 %615, %616
  br label %620

620:                                              ; preds = %620, %618
  %621 = phi i64 [ 0, %618 ], [ %666, %620 ]
  %622 = phi i64 [ %619, %618 ], [ %667, %620 ]
  %623 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %398, i64 %621
  %624 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, i64 %621
  %625 = bitcast %"class.spvtools::val::BasicBlock"** %624 to <2 x i64>*
  %626 = load <2 x i64>, <2 x i64>* %625, align 8, !alias.scope !74
  %627 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %624, i64 2
  %628 = bitcast %"class.spvtools::val::BasicBlock"** %627 to <2 x i64>*
  %629 = load <2 x i64>, <2 x i64>* %628, align 8, !alias.scope !74
  %630 = bitcast %"class.spvtools::val::BasicBlock"** %623 to <2 x i64>*
  store <2 x i64> %626, <2 x i64>* %630, align 8, !alias.scope !77, !noalias !74
  %631 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %623, i64 2
  %632 = bitcast %"class.spvtools::val::BasicBlock"** %631 to <2 x i64>*
  store <2 x i64> %629, <2 x i64>* %632, align 8, !alias.scope !77, !noalias !74
  %633 = or i64 %621, 4
  %634 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %398, i64 %633
  %635 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, i64 %633
  %636 = bitcast %"class.spvtools::val::BasicBlock"** %635 to <2 x i64>*
  %637 = load <2 x i64>, <2 x i64>* %636, align 8, !alias.scope !74
  %638 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %635, i64 2
  %639 = bitcast %"class.spvtools::val::BasicBlock"** %638 to <2 x i64>*
  %640 = load <2 x i64>, <2 x i64>* %639, align 8, !alias.scope !74
  %641 = bitcast %"class.spvtools::val::BasicBlock"** %634 to <2 x i64>*
  store <2 x i64> %637, <2 x i64>* %641, align 8, !alias.scope !77, !noalias !74
  %642 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %634, i64 2
  %643 = bitcast %"class.spvtools::val::BasicBlock"** %642 to <2 x i64>*
  store <2 x i64> %640, <2 x i64>* %643, align 8, !alias.scope !77, !noalias !74
  %644 = or i64 %621, 8
  %645 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %398, i64 %644
  %646 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, i64 %644
  %647 = bitcast %"class.spvtools::val::BasicBlock"** %646 to <2 x i64>*
  %648 = load <2 x i64>, <2 x i64>* %647, align 8, !alias.scope !74
  %649 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %646, i64 2
  %650 = bitcast %"class.spvtools::val::BasicBlock"** %649 to <2 x i64>*
  %651 = load <2 x i64>, <2 x i64>* %650, align 8, !alias.scope !74
  %652 = bitcast %"class.spvtools::val::BasicBlock"** %645 to <2 x i64>*
  store <2 x i64> %648, <2 x i64>* %652, align 8, !alias.scope !77, !noalias !74
  %653 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %645, i64 2
  %654 = bitcast %"class.spvtools::val::BasicBlock"** %653 to <2 x i64>*
  store <2 x i64> %651, <2 x i64>* %654, align 8, !alias.scope !77, !noalias !74
  %655 = or i64 %621, 12
  %656 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %398, i64 %655
  %657 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, i64 %655
  %658 = bitcast %"class.spvtools::val::BasicBlock"** %657 to <2 x i64>*
  %659 = load <2 x i64>, <2 x i64>* %658, align 8, !alias.scope !74
  %660 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %657, i64 2
  %661 = bitcast %"class.spvtools::val::BasicBlock"** %660 to <2 x i64>*
  %662 = load <2 x i64>, <2 x i64>* %661, align 8, !alias.scope !74
  %663 = bitcast %"class.spvtools::val::BasicBlock"** %656 to <2 x i64>*
  store <2 x i64> %659, <2 x i64>* %663, align 8, !alias.scope !77, !noalias !74
  %664 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %656, i64 2
  %665 = bitcast %"class.spvtools::val::BasicBlock"** %664 to <2 x i64>*
  store <2 x i64> %662, <2 x i64>* %665, align 8, !alias.scope !77, !noalias !74
  %666 = add i64 %621, 16
  %667 = add i64 %622, -4
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %620, !llvm.loop !79

669:                                              ; preds = %620, %608
  %670 = phi i64 [ 0, %608 ], [ %666, %620 ]
  %671 = icmp eq i64 %616, 0
  br i1 %671, label %688, label %672

672:                                              ; preds = %669, %672
  %673 = phi i64 [ %685, %672 ], [ %670, %669 ]
  %674 = phi i64 [ %686, %672 ], [ %616, %669 ]
  %675 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %398, i64 %673
  %676 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, i64 %673
  %677 = bitcast %"class.spvtools::val::BasicBlock"** %676 to <2 x i64>*
  %678 = load <2 x i64>, <2 x i64>* %677, align 8, !alias.scope !74
  %679 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %676, i64 2
  %680 = bitcast %"class.spvtools::val::BasicBlock"** %679 to <2 x i64>*
  %681 = load <2 x i64>, <2 x i64>* %680, align 8, !alias.scope !74
  %682 = bitcast %"class.spvtools::val::BasicBlock"** %675 to <2 x i64>*
  store <2 x i64> %678, <2 x i64>* %682, align 8, !alias.scope !77, !noalias !74
  %683 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %675, i64 2
  %684 = bitcast %"class.spvtools::val::BasicBlock"** %683 to <2 x i64>*
  store <2 x i64> %681, <2 x i64>* %684, align 8, !alias.scope !77, !noalias !74
  %685 = add i64 %673, 4
  %686 = add i64 %674, -1
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %672, !llvm.loop !80

688:                                              ; preds = %672, %669
  %689 = icmp eq i64 %592, %609
  br i1 %689, label %765, label %690

690:                                              ; preds = %688, %594, %587
  %691 = phi %"class.spvtools::val::BasicBlock"** [ %398, %594 ], [ %398, %587 ], [ %610, %688 ]
  %692 = phi %"class.spvtools::val::BasicBlock"** [ %398, %594 ], [ %398, %587 ], [ %611, %688 ]
  %693 = phi %"class.spvtools::val::BasicBlock"** [ %1, %594 ], [ %1, %587 ], [ %612, %688 ]
  %694 = ptrtoint %"class.spvtools::val::BasicBlock"** %693 to i64
  %695 = getelementptr %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %585, i64 -1
  %696 = ptrtoint %"class.spvtools::val::BasicBlock"** %695 to i64
  %697 = sub i64 %696, %694
  %698 = lshr i64 %697, 3
  %699 = add nuw nsw i64 %698, 1
  %700 = and i64 %699, 7
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %714, label %702

702:                                              ; preds = %690, %702
  %703 = phi %"class.spvtools::val::BasicBlock"** [ %711, %702 ], [ %691, %690 ]
  %704 = phi %"class.spvtools::val::BasicBlock"** [ %711, %702 ], [ %692, %690 ]
  %705 = phi %"class.spvtools::val::BasicBlock"** [ %710, %702 ], [ %693, %690 ]
  %706 = phi i64 [ %712, %702 ], [ %700, %690 ]
  %707 = bitcast %"class.spvtools::val::BasicBlock"** %704 to i64*
  %708 = bitcast %"class.spvtools::val::BasicBlock"** %705 to i64*
  %709 = load i64, i64* %708, align 8
  store i64 %709, i64* %707, align 8
  %710 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %705, i64 1
  %711 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %703, i64 1
  %712 = add i64 %706, -1
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %714, label %702, !llvm.loop !81

714:                                              ; preds = %702, %690
  %715 = phi %"class.spvtools::val::BasicBlock"** [ undef, %690 ], [ %711, %702 ]
  %716 = phi %"class.spvtools::val::BasicBlock"** [ %691, %690 ], [ %711, %702 ]
  %717 = phi %"class.spvtools::val::BasicBlock"** [ %692, %690 ], [ %711, %702 ]
  %718 = phi %"class.spvtools::val::BasicBlock"** [ %693, %690 ], [ %710, %702 ]
  %719 = icmp ult i64 %697, 56
  br i1 %719, label %765, label %720

720:                                              ; preds = %714, %720
  %721 = phi %"class.spvtools::val::BasicBlock"** [ %763, %720 ], [ %716, %714 ]
  %722 = phi %"class.spvtools::val::BasicBlock"** [ %763, %720 ], [ %717, %714 ]
  %723 = phi %"class.spvtools::val::BasicBlock"** [ %762, %720 ], [ %718, %714 ]
  %724 = bitcast %"class.spvtools::val::BasicBlock"** %722 to i64*
  %725 = bitcast %"class.spvtools::val::BasicBlock"** %723 to i64*
  %726 = load i64, i64* %725, align 8
  store i64 %726, i64* %724, align 8
  %727 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %723, i64 1
  %728 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %721, i64 1
  %729 = bitcast %"class.spvtools::val::BasicBlock"** %728 to i64*
  %730 = bitcast %"class.spvtools::val::BasicBlock"** %727 to i64*
  %731 = load i64, i64* %730, align 8
  store i64 %731, i64* %729, align 8
  %732 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %723, i64 2
  %733 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %721, i64 2
  %734 = bitcast %"class.spvtools::val::BasicBlock"** %733 to i64*
  %735 = bitcast %"class.spvtools::val::BasicBlock"** %732 to i64*
  %736 = load i64, i64* %735, align 8
  store i64 %736, i64* %734, align 8
  %737 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %723, i64 3
  %738 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %721, i64 3
  %739 = bitcast %"class.spvtools::val::BasicBlock"** %738 to i64*
  %740 = bitcast %"class.spvtools::val::BasicBlock"** %737 to i64*
  %741 = load i64, i64* %740, align 8
  store i64 %741, i64* %739, align 8
  %742 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %723, i64 4
  %743 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %721, i64 4
  %744 = bitcast %"class.spvtools::val::BasicBlock"** %743 to i64*
  %745 = bitcast %"class.spvtools::val::BasicBlock"** %742 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %744, align 8
  %747 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %723, i64 5
  %748 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %721, i64 5
  %749 = bitcast %"class.spvtools::val::BasicBlock"** %748 to i64*
  %750 = bitcast %"class.spvtools::val::BasicBlock"** %747 to i64*
  %751 = load i64, i64* %750, align 8
  store i64 %751, i64* %749, align 8
  %752 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %723, i64 6
  %753 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %721, i64 6
  %754 = bitcast %"class.spvtools::val::BasicBlock"** %753 to i64*
  %755 = bitcast %"class.spvtools::val::BasicBlock"** %752 to i64*
  %756 = load i64, i64* %755, align 8
  store i64 %756, i64* %754, align 8
  %757 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %723, i64 7
  %758 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %721, i64 7
  %759 = bitcast %"class.spvtools::val::BasicBlock"** %758 to i64*
  %760 = bitcast %"class.spvtools::val::BasicBlock"** %757 to i64*
  %761 = load i64, i64* %760, align 8
  store i64 %761, i64* %759, align 8
  %762 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %723, i64 8
  %763 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %721, i64 8
  %764 = icmp eq %"class.spvtools::val::BasicBlock"** %762, %585
  br i1 %764, label %765, label %720, !llvm.loop !82

765:                                              ; preds = %714, %720, %688, %584
  %766 = phi %"class.spvtools::val::BasicBlock"** [ %398, %584 ], [ %610, %688 ], [ %715, %714 ], [ %763, %720 ]
  %767 = ptrtoint %"class.spvtools::val::BasicBlock"** %766 to i64
  %768 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %9, align 8
  store i64 %579, i64* %360, align 8
  store i64 %767, i64* %24, align 8
  store i64 %397, i64* %16, align 8
  %769 = icmp eq %"class.spvtools::val::BasicBlock"** %768, null
  br i1 %769, label %772, label %770

770:                                              ; preds = %765
  %771 = bitcast %"class.spvtools::val::BasicBlock"** %768 to i8*
  tail call void @_ZdlPv(i8* %771) #15
  br label %772

772:                                              ; preds = %770, %765, %209, %354, %358, %4
  %773 = phi %"class.spvtools::val::BasicBlock"** [ %1, %4 ], [ %1, %358 ], [ %1, %354 ], [ %1, %209 ], [ %395, %765 ], [ %395, %770 ]
  ret %"class.spvtools::val::BasicBlock"** %773
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3CFAINS_3val10BasicBlockEE19DepthFirstTraversalEPKS2_NSt3__18functionIFPKNS6_6vectorIPS2_NS6_9allocatorIS9_EEEES5_EEENS7_IFvS5_EEESI_NS7_IFvS5_S5_EEE(%"class.spvtools::val::BasicBlock"*, %"class.std::__1::function"*, %"class.std::__1::function.373"*, %"class.std::__1::function.373"*, %"class.std::__1::function.379"*) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::unordered_set", align 8
  %7 = alloca %"class.std::__1::vector.385", align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = bitcast %"class.std::__1::unordered_set"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 4, i64 0
  %15 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 3
  %16 = bitcast %"class.std::__1::__compressed_pair.37"* %15 to i32*
  %17 = bitcast i8* %14 to i32*
  store i32 -1431655766, i32* %17, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %16, align 8
  %18 = bitcast %"class.std::__1::vector.385"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.std::__1::vector.385", %"class.std::__1::vector.385"* %7, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.385", %"class.std::__1::vector.385"* %7, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.385", %"class.std::__1::vector.385"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %21 to i64*
  %23 = bitcast %"class.std::__1::vector.385"* %7 to i64*
  %24 = tail call i8* @_Znwm(i64 160) #15
  %25 = getelementptr inbounds i8, i8* %24, i64 160
  %26 = ptrtoint i8* %25 to i64
  %27 = insertelement <2 x i8*> undef, i8* %24, i32 0
  %28 = shufflevector <2 x i8*> %27, <2 x i8*> undef, <2 x i32> zeroinitializer
  %29 = ptrtoint <2 x i8*> %28 to <2 x i64>
  %30 = bitcast %"class.std::__1::vector.385"* %7 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %30, align 16
  store i64 %26, i64* %22, align 16
  %31 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %32 = load %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)*, %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0
  %34 = tail call %"class.std::__1::vector"* %32(%"union.std::__1::__function::__policy_storage"* %33, %"class.spvtools::val::BasicBlock"* %0) #13
  %35 = bitcast %"class.std::__1::vector"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast i8* %24 to %"class.spvtools::val::BasicBlock"**
  store %"class.spvtools::val::BasicBlock"* %0, %"class.spvtools::val::BasicBlock"** %37, align 8
  %38 = getelementptr inbounds i8, i8* %24, i64 8
  %39 = bitcast i8* %38 to i64*
  store i64 %36, i64* %39, align 8
  %40 = getelementptr inbounds i8, i8* %24, i64 16
  %41 = ptrtoint i8* %40 to i64
  %42 = bitcast %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %20 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %2, i64 0, i32 0, i32 1, i32 0
  %44 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %2, i64 0, i32 0, i32 0
  tail call void %44(%"union.std::__1::__function::__policy_storage"* %45, %"class.spvtools::val::BasicBlock"* %0) #13
  %46 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %0, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  store i32 %48, i32* %8, align 4
  %49 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0
  %50 = call { %"struct.std::__1::__hash_node_base.23"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.19"* nonnull %49, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #13
  %51 = load %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %19, align 16
  %52 = load %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %20, align 8
  %53 = icmp eq %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %51, %52
  br i1 %53, label %220, label %54

54:                                               ; preds = %5
  %55 = getelementptr inbounds %"class.std::__1::function.379", %"class.std::__1::function.379"* %4, i64 0, i32 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.std::__1::function.379", %"class.std::__1::function.379"* %4, i64 0, i32 0, i32 0
  %57 = bitcast %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %20 to i64*
  %58 = bitcast i32* %9 to i8*
  %59 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %3, i64 0, i32 0, i32 1, i32 0
  %60 = getelementptr inbounds %"class.std::__1::function.373", %"class.std::__1::function.373"* %3, i64 0, i32 0, i32 0
  br label %61

61:                                               ; preds = %54, %216
  %62 = phi %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* [ %52, %54 ], [ %218, %216 ]
  %63 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %62, i64 -1, i32 0
  %64 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %63, align 8
  %65 = load %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)*, %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %31, align 8
  %66 = call %"class.std::__1::vector"* %65(%"union.std::__1::__function::__policy_storage"* %33, %"class.spvtools::val::BasicBlock"* %64) #13
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %66, i64 0, i32 0, i32 1
  %68 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %67, align 8
  %69 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %62, i64 -1, i32 1, i32 0
  %70 = load %"class.spvtools::val::BasicBlock"**, %"class.spvtools::val::BasicBlock"*** %69, align 8
  %71 = icmp eq %"class.spvtools::val::BasicBlock"** %70, %68
  br i1 %71, label %72, label %77

72:                                               ; preds = %61
  %73 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %63, align 8
  %74 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %59, align 8
  call void %74(%"union.std::__1::__function::__policy_storage"* %60, %"class.spvtools::val::BasicBlock"* %73) #13
  %75 = load %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %20, align 8
  %76 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %75, i64 -1
  store %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %76, %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %20, align 8
  br label %216

77:                                               ; preds = %61
  %78 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %70, align 8
  %79 = getelementptr inbounds %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %70, i64 1
  store %"class.spvtools::val::BasicBlock"** %79, %"class.spvtools::val::BasicBlock"*** %69, align 8
  %80 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %78, i64 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = load %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %19, align 16
  %83 = load %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %20, align 8
  %84 = icmp eq %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %82, %83
  br i1 %84, label %99, label %87

85:                                               ; preds = %87
  %86 = icmp eq %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %94, %83
  br i1 %86, label %99, label %87

87:                                               ; preds = %77, %85
  %88 = phi %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* [ %94, %85 ], [ %82, %77 ]
  %89 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %88, i64 0, i32 0
  %90 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %90, i64 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, %81
  %94 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %88, i64 1
  br i1 %93, label %95, label %85

95:                                               ; preds = %87
  %96 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %63, align 8
  %97 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*)** %55, align 8
  call void %97(%"union.std::__1::__function::__policy_storage"* %56, %"class.spvtools::val::BasicBlock"* %96, %"class.spvtools::val::BasicBlock"* %78) #13
  %98 = load i32, i32* %80, align 8
  br label %99

99:                                               ; preds = %85, %77, %95
  %100 = phi i32 [ %81, %77 ], [ %98, %95 ], [ %81, %85 ]
  %101 = zext i32 %100 to i64
  %102 = load i64, i64* %12, align 8
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %151, label %104

104:                                              ; preds = %99
  %105 = call i64 @llvm.ctpop.i64(i64 %102) #13, !range !2
  %106 = icmp ugt i64 %105, 1
  br i1 %106, label %110, label %107

107:                                              ; preds = %104
  %108 = add i64 %102, 4294967295
  %109 = and i64 %108, %101
  br label %114

110:                                              ; preds = %104
  %111 = icmp ugt i64 %102, %101
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %101, %102
  br label %114

114:                                              ; preds = %112, %110, %107
  %115 = phi i64 [ %109, %107 ], [ %113, %112 ], [ %101, %110 ]
  %116 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %116, i64 %115
  %118 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %117, align 8
  %119 = icmp eq %"struct.std::__1::__hash_node_base.23"* %118, null
  br i1 %119, label %151, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %118, i64 0, i32 0
  %122 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %121, align 8
  %123 = icmp eq %"struct.std::__1::__hash_node_base.23"* %122, null
  br i1 %123, label %151, label %124

124:                                              ; preds = %120
  %125 = add i64 %102, -1
  br label %126

126:                                              ; preds = %147, %124
  %127 = phi %"struct.std::__1::__hash_node_base.23"* [ %122, %124 ], [ %149, %147 ]
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %127, i64 1
  %129 = bitcast %"struct.std::__1::__hash_node_base.23"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %130, %101
  br i1 %131, label %142, label %132

132:                                              ; preds = %126
  br i1 %106, label %135, label %133

133:                                              ; preds = %132
  %134 = and i64 %130, %125
  br label %139

135:                                              ; preds = %132
  %136 = icmp ult i64 %130, %102
  br i1 %136, label %139, label %137

137:                                              ; preds = %135
  %138 = urem i64 %130, %102
  br label %139

139:                                              ; preds = %137, %135, %133
  %140 = phi i64 [ %134, %133 ], [ %138, %137 ], [ %130, %135 ]
  %141 = icmp eq i64 %140, %115
  br i1 %141, label %147, label %151

142:                                              ; preds = %126
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %127, i64 2
  %144 = bitcast %"struct.std::__1::__hash_node_base.23"* %143 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, %100
  br i1 %146, label %216, label %147

147:                                              ; preds = %142, %139
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %127, i64 0, i32 0
  %149 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %148, align 8
  %150 = icmp eq %"struct.std::__1::__hash_node_base.23"* %149, null
  br i1 %150, label %151, label %126

151:                                              ; preds = %147, %139, %114, %99, %120
  %152 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %43, align 8
  call void %152(%"union.std::__1::__function::__policy_storage"* %45, %"class.spvtools::val::BasicBlock"* %78) #13
  %153 = load %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)*, %"class.std::__1::vector"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*)** %31, align 8
  %154 = call %"class.std::__1::vector"* %153(%"union.std::__1::__function::__policy_storage"* %33, %"class.spvtools::val::BasicBlock"* %78) #13
  %155 = bitcast %"class.std::__1::vector"* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = load %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %20, align 8
  %158 = load %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %21, align 16
  %159 = icmp ult %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %157, %158
  %160 = ptrtoint %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %158 to i64
  br i1 %159, label %161, label %167

161:                                              ; preds = %151
  %162 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %157, i64 0, i32 0
  store %"class.spvtools::val::BasicBlock"* %78, %"class.spvtools::val::BasicBlock"** %162, align 8
  %163 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %157, i64 0, i32 1, i32 0
  %164 = bitcast %"class.spvtools::val::BasicBlock"*** %163 to i64*
  store i64 %156, i64* %164, align 8
  %165 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %157, i64 1
  %166 = ptrtoint %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %165 to i64
  store i64 %166, i64* %57, align 8
  br label %213

167:                                              ; preds = %151
  %168 = ptrtoint %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %157 to i64
  %169 = load i64, i64* %23, align 16
  %170 = sub i64 %168, %169
  %171 = ashr exact i64 %170, 4
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 1152921504606846975
  br i1 %173, label %174, label %176

174:                                              ; preds = %167
  %175 = bitcast %"class.std::__1::vector.385"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %175) #14
  unreachable

176:                                              ; preds = %167
  %177 = sub i64 %160, %169
  %178 = ashr exact i64 %177, 4
  %179 = icmp ult i64 %178, 576460752303423487
  br i1 %179, label %180, label %188

180:                                              ; preds = %176
  %181 = ashr exact i64 %177, 3
  %182 = icmp ult i64 %181, %172
  %183 = select i1 %182, i64 %172, i64 %181
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %193, label %185

185:                                              ; preds = %180
  %186 = icmp ugt i64 %183, 1152921504606846975
  br i1 %186, label %187, label %188

187:                                              ; preds = %185
  call void @abort() #14
  unreachable

188:                                              ; preds = %185, %176
  %189 = phi i64 [ %183, %185 ], [ 1152921504606846975, %176 ]
  %190 = shl i64 %189, 4
  %191 = call i8* @_Znwm(i64 %190) #15
  %192 = bitcast i8* %191 to %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"*
  br label %193

193:                                              ; preds = %188, %180
  %194 = phi i64 [ %189, %188 ], [ 0, %180 ]
  %195 = phi i8* [ %191, %188 ], [ null, %180 ]
  %196 = phi %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* [ %192, %188 ], [ null, %180 ]
  %197 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %196, i64 %171
  %198 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %196, i64 %194
  %199 = ptrtoint %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %198 to i64
  %200 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %197, i64 0, i32 0
  store %"class.spvtools::val::BasicBlock"* %78, %"class.spvtools::val::BasicBlock"** %200, align 8
  %201 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %196, i64 %171, i32 1, i32 0
  %202 = bitcast %"class.spvtools::val::BasicBlock"*** %201 to i64*
  store i64 %156, i64* %202, align 8
  %203 = getelementptr inbounds %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info", %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %197, i64 1
  %204 = ptrtoint %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %203 to i64
  %205 = ptrtoint %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %196 to i64
  %206 = icmp sgt i64 %170, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %193
  %208 = inttoptr i64 %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %195, i8* align 8 %208, i64 %170, i1 false) #13
  br label %209

209:                                              ; preds = %207, %193
  store i64 %205, i64* %23, align 16
  store i64 %204, i64* %57, align 8
  store i64 %199, i64* %22, align 16
  %210 = icmp eq i64 %169, 0
  br i1 %210, label %213, label %211

211:                                              ; preds = %209
  %212 = inttoptr i64 %169 to i8*
  call void @_ZdlPv(i8* %212) #15
  br label %213

213:                                              ; preds = %161, %209, %211
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #13
  %214 = load i32, i32* %80, align 8
  store i32 %214, i32* %9, align 4
  %215 = call { %"struct.std::__1::__hash_node_base.23"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.19"* nonnull %49, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #13
  br label %216

216:                                              ; preds = %142, %213, %72
  %217 = load %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %19, align 16
  %218 = load %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"*, %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %20, align 8
  %219 = icmp eq %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %217, %218
  br i1 %219, label %220, label %61

220:                                              ; preds = %216, %5
  %221 = phi %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* [ %51, %5 ], [ %217, %216 ]
  %222 = icmp eq %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %221, null
  br i1 %222, label %227, label %223

223:                                              ; preds = %220
  %224 = ptrtoint %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %221 to i64
  %225 = bitcast %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"** %20 to i64*
  store i64 %224, i64* %225, align 8
  %226 = bitcast %"struct.spvtools::CFA<spvtools::val::BasicBlock>::block_info"* %221 to i8*
  call void @_ZdlPv(i8* %226) #15
  br label %227

227:                                              ; preds = %220, %223
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #13
  %228 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %13, align 8
  %229 = icmp eq %"struct.std::__1::__hash_node_base.23"* %228, null
  br i1 %229, label %236, label %230

230:                                              ; preds = %227, %230
  %231 = phi %"struct.std::__1::__hash_node_base.23"* [ %233, %230 ], [ %228, %227 ]
  %232 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %231, i64 0, i32 0
  %233 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %232, align 8
  %234 = bitcast %"struct.std::__1::__hash_node_base.23"* %231 to i8*
  call void @_ZdlPv(i8* %234) #15
  %235 = icmp eq %"struct.std::__1::__hash_node_base.23"* %233, null
  br i1 %235, label %236, label %230

236:                                              ; preds = %230, %227
  %237 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  store %"struct.std::__1::__hash_node_base.23"** null, %"struct.std::__1::__hash_node_base.23"*** %11, align 8
  %238 = icmp eq %"struct.std::__1::__hash_node_base.23"** %237, null
  br i1 %238, label %241, label %239

239:                                              ; preds = %236
  %240 = bitcast %"struct.std::__1::__hash_node_base.23"** %237 to i8*
  call void @_ZdlPv(i8* %240) #15
  br label %241

241:                                              ; preds = %236, %239
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.23"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.19"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.23"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.23"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.23"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.23"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.23"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #15, !noalias !83
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !83
  store i32 %58, i32* %57, align 4, !noalias !83
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !83
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.23"**
  store %"struct.std::__1::__hash_node_base.23"* null, %"struct.std::__1::__hash_node_base.23"** %61, align 8, !noalias !83
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !2
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #13
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.19"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #13, !range !2
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.23"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.19", %"class.std::__1::__hash_table.19"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.23"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.23"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.23"* %104, %"struct.std::__1::__hash_node_base.23"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.23"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23", %"struct.std::__1::__hash_node_base.23"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.23"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #13, !range !2
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.23"**, %"struct.std::__1::__hash_node_base.23"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.23"*, %"struct.std::__1::__hash_node_base.23"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.23"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.23"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.23"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.23"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.23"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.23"*, i8 } undef, %"struct.std::__1::__hash_node_base.23"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.23"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.23"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3val10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS2_3CFAIS4_E14TraversalRootsERKNS_6vectorIPS4_NS_9allocatorISE_EEEENS_8functionIFPSI_S6_EEESN_EUlS6_E_S7_EEEEvPKNS0_16__policy_storageES6_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*) #0 comdat align 2 {
  %3 = alloca %"class.spvtools::val::BasicBlock"*, align 8
  %4 = ptrtoint %"class.spvtools::val::BasicBlock"* %1 to i64
  %5 = bitcast %"class.spvtools::val::BasicBlock"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = bitcast %"class.spvtools::val::BasicBlock"** %3 to i64*
  store i64 %4, i64* %6, align 8
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::unordered_set.345"**
  %8 = load %"class.std::__1::unordered_set.345"*, %"class.std::__1::unordered_set.345"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::unordered_set.345", %"class.std::__1::unordered_set.345"* %8, i64 0, i32 0
  %10 = call { %"struct.std::__1::__hash_node_base.350"*, i8 } @_ZNSt3__112__hash_tableIPKN8spvtools3val10BasicBlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.346"* %9, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %3, %"class.spvtools::val::BasicBlock"** nonnull dereferenceable(8) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.350"*, i8 } @_ZNSt3__112__hash_tableIPKN8spvtools3val10BasicBlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.346"*, %"class.spvtools::val::BasicBlock"** dereferenceable(8), %"class.spvtools::val::BasicBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %1, align 8
  %5 = ptrtoint %"class.spvtools::val::BasicBlock"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.346", %"class.std::__1::__hash_table.346"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !2
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.346", %"class.std::__1::__hash_table.346"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.350"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.350"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.350"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.350"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.350"* %62 to %"class.spvtools::val::BasicBlock"**
  %64 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::val::BasicBlock"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #15, !noalias !86
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::val::BasicBlock"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !86
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !86
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !86
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.350"**
  store %"struct.std::__1::__hash_node_base.350"* null, %"struct.std::__1::__hash_node_base.350"** %75, align 8, !noalias !86
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.346", %"class.std::__1::__hash_table.346"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.346", %"class.std::__1::__hash_table.346"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !2
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #13
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3val10BasicBlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.346"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #13, !range !2
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.346", %"class.std::__1::__hash_table.346"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.350"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.346", %"class.std::__1::__hash_table.346"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.350"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.350"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.350"* %118, %"struct.std::__1::__hash_node_base.350"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.350"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.350"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #13, !range !2
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.350"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.350"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.350"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.350"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.350"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.350"*, i8 } undef, %"struct.std::__1::__hash_node_base.350"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.350"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.350"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN8spvtools3val10BasicBlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.346"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.346", %"class.std::__1::__hash_table.346"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3val10BasicBlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.346"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.346", %"class.std::__1::__hash_table.346"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.346", %"class.std::__1::__hash_table.346"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3val10BasicBlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.346"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN8spvtools3val10BasicBlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.346"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.346", %"class.std::__1::__hash_table.346"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.346", %"class.std::__1::__hash_table.346"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.346"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.350"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.350"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.352", %"class.std::__1::__bucket_list_deallocator.352"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.350"* null, %"struct.std::__1::__hash_node_base.350"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !89

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.346", %"class.std::__1::__hash_table.346"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.350"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.350"* null, %"struct.std::__1::__hash_node_base.350"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.350"* null, %"struct.std::__1::__hash_node_base.350"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.350"* null, %"struct.std::__1::__hash_node_base.350"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.350"* null, %"struct.std::__1::__hash_node_base.350"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.350"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.350"* %36, %"struct.std::__1::__hash_node_base.350"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.350"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.350"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.350"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.350"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.350"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.350"* %101 to %"class.spvtools::val::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.350"* %82, %"struct.std::__1::__hash_node_base.350"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.350"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.350"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.350"* %110 to %"class.spvtools::val::BasicBlock"**
  %112 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::val::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.350"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.350"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.350"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.350"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.350"* %80, %"struct.std::__1::__hash_node_base.350"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.350"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.350", %"struct.std::__1::__hash_node_base.350"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.350"*, %"struct.std::__1::__hash_node_base.350"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.350"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.346", %"class.std::__1::__hash_table.346"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.350"**, %"struct.std::__1::__hash_node_base.350"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.350"** null, %"struct.std::__1::__hash_node_base.350"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.350"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.350"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.352", %"class.std::__1::__bucket_list_deallocator.352"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3val10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS2_3CFAIS4_E14TraversalRootsERKNS_6vectorIPS4_NS_9allocatorISE_EEEENS_8functionIFPSI_S6_EEESN_EUlS6_E0_S7_EEEEvPKNS0_16__policy_storageES6_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3val10BasicBlockES6_EE11__call_implINS0_20__default_alloc_funcIZNS2_3CFAIS4_E14TraversalRootsERKNS_6vectorIPS4_NS_9allocatorISE_EEEENS_8functionIFPSI_S6_EEESN_EUlS6_S6_E_S7_EEEEvPKNS0_16__policy_storageES6_S6_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"*) #0 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.std::__1::vector"* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNS4_8Function19ComputeAugmentedCFGEvE3$_3SE_EEEESB_PKNS0_16__policy_storageESD_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.spvtools::val::BasicBlock"*) #3 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %1, i64 0, i32 4
  ret %"class.std::__1::vector"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.std::__1::vector"* @"_ZNSt3__110__function16__policy_invokerIFPKNS_6vectorIPN8spvtools3val10BasicBlockENS_9allocatorIS6_EEEEPKS5_EE11__call_implINS0_20__default_alloc_funcIZNS4_8Function19ComputeAugmentedCFGEvE3$_4SE_EEEESB_PKNS0_16__policy_storageESD_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.spvtools::val::BasicBlock"*) #3 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::val::BasicBlock", %"class.spvtools::val::BasicBlock"* %1, i64 0, i32 3
  ret %"class.std::__1::vector"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.84"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIPKN8spvtools3val10BasicBlockENS4_13ConstructTypeEEEPNS4_9ConstructEEENS_22__unordered_map_hasherIS9_SC_NS4_24bb_constr_type_pair_hashENS_8equal_toIS9_EELb1EEENS_21__unordered_map_equalIS9_SC_SG_SE_Lb1EEENS_9allocatorISC_EEE25__emplace_unique_key_argsIS9_JRKNS_21piecewise_construct_tENS_5tupleIJOS9_EEENSR_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.80"*, %"struct.std::__1::pair.235"* dereferenceable(16), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.425"* dereferenceable(8), %"class.std::__1::tuple.272"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"struct.std::__1::pair.235"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"struct.std::__1::pair.235", %"struct.std::__1::pair.235"* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = xor i64 %20, %23
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.80", %"class.std::__1::__hash_table.80"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  %28 = inttoptr i64 %7 to %"class.spvtools::val::BasicBlock"*
  br i1 %27, label %82, label %29

29:                                               ; preds = %5
  %30 = tail call i64 @llvm.ctpop.i64(i64 %26) #13, !range !2
  %31 = icmp ugt i64 %30, 1
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = add i64 %26, -1
  %34 = and i64 %24, %33
  br label %39

35:                                               ; preds = %29
  %36 = icmp ult i64 %24, %26
  br i1 %36, label %39, label %37

37:                                               ; preds = %35
  %38 = urem i64 %24, %26
  br label %39

39:                                               ; preds = %32, %35, %37
  %40 = phi i64 [ %34, %32 ], [ %38, %37 ], [ %24, %35 ]
  %41 = getelementptr inbounds %"class.std::__1::__hash_table.80", %"class.std::__1::__hash_table.80"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %42, i64 %40
  %44 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.84"* %44, null
  br i1 %45, label %82, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %44, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.84"* %48, null
  br i1 %49, label %82, label %50

50:                                               ; preds = %46
  %51 = add i64 %26, -1
  br label %52

52:                                               ; preds = %50, %78
  %53 = phi %"struct.std::__1::__hash_node_base.84"* [ %48, %50 ], [ %80, %78 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.84"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %24
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %31, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %51
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %26
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %26
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %40
  br i1 %67, label %68, label %82

68:                                               ; preds = %52, %65
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.84"* %69 to %"class.spvtools::val::BasicBlock"**
  %71 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %70, align 8
  %72 = icmp eq %"class.spvtools::val::BasicBlock"* %71, %28
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.84"* %74 to i32*
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, %22
  br i1 %77, label %171, label %78

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %53, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base.84"* %80, null
  br i1 %81, label %82, label %52

82:                                               ; preds = %65, %78, %46, %39, %5
  %83 = phi i64 [ %40, %39 ], [ -6148914691236517206, %5 ], [ %40, %46 ], [ %40, %78 ], [ %40, %65 ]
  %84 = tail call i8* @_Znwm(i64 40) #15, !noalias !90
  %85 = getelementptr inbounds i8, i8* %84, i64 16
  %86 = bitcast %"class.std::__1::tuple.425"* %3 to i8**
  %87 = load i8*, i8** %86, align 8, !noalias !90
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %87, i64 16, i1 false) #13, !noalias !90
  %88 = getelementptr inbounds i8, i8* %84, i64 32
  %89 = bitcast i8* %88 to %"class.spvtools::val::Construct"**
  store %"class.spvtools::val::Construct"* null, %"class.spvtools::val::Construct"** %89, align 8, !noalias !90
  %90 = getelementptr inbounds i8, i8* %84, i64 8
  %91 = bitcast i8* %90 to i64*
  store i64 %24, i64* %91, align 8, !noalias !90
  %92 = bitcast i8* %84 to %"struct.std::__1::__hash_node_base.84"**
  store %"struct.std::__1::__hash_node_base.84"* null, %"struct.std::__1::__hash_node_base.84"** %92, align 8, !noalias !90
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.80", %"class.std::__1::__hash_table.80"* %0, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 1
  %96 = uitofp i64 %95 to float
  %97 = uitofp i64 %26 to float
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.80", %"class.std::__1::__hash_table.80"* %0, i64 0, i32 3, i32 0, i32 0
  %99 = load float, float* %98, align 4
  %100 = fmul float %99, %97
  %101 = fcmp olt float %100, %96
  %102 = or i1 %27, %101
  br i1 %102, label %103, label %126

103:                                              ; preds = %82
  %104 = shl i64 %26, 1
  %105 = icmp ult i64 %26, 3
  %106 = tail call i64 @llvm.ctpop.i64(i64 %26) #13, !range !2
  %107 = icmp ugt i64 %106, 1
  %108 = or i1 %105, %107
  %109 = zext i1 %108 to i64
  %110 = or i64 %104, %109
  %111 = fdiv float %96, %99
  %112 = tail call float @llvm.ceil.f32(float %111) #13
  %113 = fptoui float %112 to i64
  %114 = icmp ult i64 %110, %113
  %115 = select i1 %114, i64 %113, i64 %110
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIPKN8spvtools3val10BasicBlockENS4_13ConstructTypeEEEPNS4_9ConstructEEENS_22__unordered_map_hasherIS9_SC_NS4_24bb_constr_type_pair_hashENS_8equal_toIS9_EELb1EEENS_21__unordered_map_equalIS9_SC_SG_SE_Lb1EEENS_9allocatorISC_EEE6rehashEm(%"class.std::__1::__hash_table.80"* %0, i64 %115)
  %116 = load i64, i64* %25, align 8
  %117 = tail call i64 @llvm.ctpop.i64(i64 %116) #13, !range !2
  %118 = icmp ugt i64 %117, 1
  br i1 %118, label %122, label %119

119:                                              ; preds = %103
  %120 = add i64 %116, -1
  %121 = and i64 %120, %24
  br label %126

122:                                              ; preds = %103
  %123 = icmp ult i64 %24, %116
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %24, %116
  br label %126

126:                                              ; preds = %124, %122, %119, %82
  %127 = phi i64 [ %26, %82 ], [ %116, %119 ], [ %116, %122 ], [ %116, %124 ]
  %128 = phi i64 [ %83, %82 ], [ %121, %119 ], [ %24, %122 ], [ %125, %124 ]
  %129 = getelementptr inbounds %"class.std::__1::__hash_table.80", %"class.std::__1::__hash_table.80"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %130, i64 %128
  %132 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.84"* %132, null
  br i1 %133, label %134, label %160

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.80", %"class.std::__1::__hash_table.80"* %0, i64 0, i32 1, i32 0, i32 0
  %136 = bitcast %"struct.std::__1::__hash_node_base.84"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %84 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.84"* %135 to i8**
  store i8* %84, i8** %139, align 8
  store %"struct.std::__1::__hash_node_base.84"* %135, %"struct.std::__1::__hash_node_base.84"** %131, align 8
  %140 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %92, align 8
  %141 = icmp eq %"struct.std::__1::__hash_node_base.84"* %140, null
  br i1 %141, label %167, label %142

142:                                              ; preds = %134
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %140, i64 1
  %144 = bitcast %"struct.std::__1::__hash_node_base.84"* %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = tail call i64 @llvm.ctpop.i64(i64 %127) #13, !range !2
  %147 = icmp ugt i64 %146, 1
  br i1 %147, label %151, label %148

148:                                              ; preds = %142
  %149 = add i64 %127, -1
  %150 = and i64 %145, %149
  br label %155

151:                                              ; preds = %142
  %152 = icmp ult i64 %145, %127
  br i1 %152, label %155, label %153

153:                                              ; preds = %151
  %154 = urem i64 %145, %127
  br label %155

155:                                              ; preds = %148, %151, %153
  %156 = phi i64 [ %150, %148 ], [ %154, %153 ], [ %145, %151 ]
  %157 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %129, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %157, i64 %156
  %159 = bitcast %"struct.std::__1::__hash_node_base.84"** %158 to i8**
  br label %165

160:                                              ; preds = %126
  %161 = bitcast %"struct.std::__1::__hash_node_base.84"* %132 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast i8* %84 to i64*
  store i64 %162, i64* %163, align 8
  %164 = bitcast %"struct.std::__1::__hash_node_base.84"* %132 to i8**
  br label %165

165:                                              ; preds = %155, %160
  %166 = phi i8** [ %164, %160 ], [ %159, %155 ]
  store i8* %84, i8** %166, align 8
  br label %167

167:                                              ; preds = %165, %134
  %168 = bitcast i8* %84 to %"struct.std::__1::__hash_node_base.84"*
  %169 = load i64, i64* %93, align 8
  %170 = add i64 %169, 1
  store i64 %170, i64* %93, align 8
  br label %171

171:                                              ; preds = %73, %167
  %172 = phi i8 [ 1, %167 ], [ 0, %73 ]
  %173 = phi %"struct.std::__1::__hash_node_base.84"* [ %168, %167 ], [ %53, %73 ]
  %174 = insertvalue { %"struct.std::__1::__hash_node_base.84"*, i8 } undef, %"struct.std::__1::__hash_node_base.84"* %173, 0
  %175 = insertvalue { %"struct.std::__1::__hash_node_base.84"*, i8 } %174, i8 %172, 1
  ret { %"struct.std::__1::__hash_node_base.84"*, i8 } %175
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIPKN8spvtools3val10BasicBlockENS4_13ConstructTypeEEEPNS4_9ConstructEEENS_22__unordered_map_hasherIS9_SC_NS4_24bb_constr_type_pair_hashENS_8equal_toIS9_EELb1EEENS_21__unordered_map_equalIS9_SC_SG_SE_Lb1EEENS_9allocatorISC_EEE6rehashEm(%"class.std::__1::__hash_table.80"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.80", %"class.std::__1::__hash_table.80"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIPKN8spvtools3val10BasicBlockENS4_13ConstructTypeEEEPNS4_9ConstructEEENS_22__unordered_map_hasherIS9_SC_NS4_24bb_constr_type_pair_hashENS_8equal_toIS9_EELb1EEENS_21__unordered_map_equalIS9_SC_SG_SE_Lb1EEENS_9allocatorISC_EEE8__rehashEm(%"class.std::__1::__hash_table.80"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.80", %"class.std::__1::__hash_table.80"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.80", %"class.std::__1::__hash_table.80"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIPKN8spvtools3val10BasicBlockENS4_13ConstructTypeEEEPNS4_9ConstructEEENS_22__unordered_map_hasherIS9_SC_NS4_24bb_constr_type_pair_hashENS_8equal_toIS9_EELb1EEENS_21__unordered_map_equalIS9_SC_SG_SE_Lb1EEENS_9allocatorISC_EEE8__rehashEm(%"class.std::__1::__hash_table.80"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIPKN8spvtools3val10BasicBlockENS4_13ConstructTypeEEEPNS4_9ConstructEEENS_22__unordered_map_hasherIS9_SC_NS4_24bb_constr_type_pair_hashENS_8equal_toIS9_EELb1EEENS_21__unordered_map_equalIS9_SC_SG_SE_Lb1EEENS_9allocatorISC_EEE8__rehashEm(%"class.std::__1::__hash_table.80"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.80", %"class.std::__1::__hash_table.80"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %142, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.80", %"class.std::__1::__hash_table.80"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.80"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.84"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.84"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.86", %"class.std::__1::__bucket_list_deallocator.86"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.84"* null, %"struct.std::__1::__hash_node_base.84"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !93

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.80", %"class.std::__1::__hash_table.80"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.84"* %38, null
  br i1 %39, label %150, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.84"* null, %"struct.std::__1::__hash_node_base.84"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.84"* null, %"struct.std::__1::__hash_node_base.84"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.84"* null, %"struct.std::__1::__hash_node_base.84"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.84"* null, %"struct.std::__1::__hash_node_base.84"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.84"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.84"* %36, %"struct.std::__1::__hash_node_base.84"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.84"* %75, null
  br i1 %76, label %150, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %136
  %80 = phi %"struct.std::__1::__hash_node_base.84"* [ %75, %77 ], [ %140, %136 ]
  %81 = phi i64 [ %71, %77 ], [ %138, %136 ]
  %82 = phi %"struct.std::__1::__hash_node_base.84"* [ %38, %77 ], [ %137, %136 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.84"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %136, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.84"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %80, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %80, i64 3
  %103 = bitcast %"struct.std::__1::__hash_node_base.84"* %102 to i32*
  %104 = bitcast %"struct.std::__1::__hash_node_base.84"* %101 to %"class.spvtools::val::BasicBlock"**
  br label %106

105:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.84"* %82, %"struct.std::__1::__hash_node_base.84"** %97, align 8
  br label %136

106:                                              ; preds = %100, %117
  %107 = phi %"struct.std::__1::__hash_node_base.84"* [ %109, %117 ], [ %80, %100 ]
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %107, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.84"* %109, null
  br i1 %110, label %123, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %109, i64 2
  %113 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %104, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.84"* %112 to %"class.spvtools::val::BasicBlock"**
  %115 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %114, align 8
  %116 = icmp eq %"class.spvtools::val::BasicBlock"* %113, %115
  br i1 %116, label %117, label %123

117:                                              ; preds = %111
  %118 = load i32, i32* %103, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %109, i64 3
  %120 = bitcast %"struct.std::__1::__hash_node_base.84"* %119 to i32*
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %118, %121
  br i1 %122, label %106, label %123

123:                                              ; preds = %111, %106, %117
  %124 = ptrtoint %"struct.std::__1::__hash_node_base.84"* %109 to i64
  %125 = bitcast %"struct.std::__1::__hash_node_base.84"* %107 to i64*
  %126 = bitcast %"struct.std::__1::__hash_node_base.84"* %82 to i64*
  store i64 %124, i64* %126, align 8
  %127 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %11, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %127, i64 %93
  %129 = bitcast %"struct.std::__1::__hash_node_base.84"** %128 to i64**
  %130 = load i64*, i64** %129, align 8
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %125, align 8
  %132 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %11, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %132, i64 %93
  %134 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %133, align 8
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %134, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.84"* %80, %"struct.std::__1::__hash_node_base.84"** %135, align 8
  br label %136

136:                                              ; preds = %92, %123, %105
  %137 = phi %"struct.std::__1::__hash_node_base.84"* [ %80, %105 ], [ %82, %123 ], [ %80, %92 ]
  %138 = phi i64 [ %93, %105 ], [ %81, %123 ], [ %81, %92 ]
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.84", %"struct.std::__1::__hash_node_base.84"* %137, i64 0, i32 0
  %140 = load %"struct.std::__1::__hash_node_base.84"*, %"struct.std::__1::__hash_node_base.84"** %139, align 8
  %141 = icmp eq %"struct.std::__1::__hash_node_base.84"* %140, null
  br i1 %141, label %150, label %79

142:                                              ; preds = %2
  %143 = getelementptr inbounds %"class.std::__1::__hash_table.80", %"class.std::__1::__hash_table.80"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %144 = load %"struct.std::__1::__hash_node_base.84"**, %"struct.std::__1::__hash_node_base.84"*** %143, align 8
  store %"struct.std::__1::__hash_node_base.84"** null, %"struct.std::__1::__hash_node_base.84"*** %143, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base.84"** %144, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %142
  %147 = bitcast %"struct.std::__1::__hash_node_base.84"** %144 to i8*
  tail call void @_ZdlPv(i8* %147) #15
  br label %148

148:                                              ; preds = %142, %146
  %149 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.86", %"class.std::__1::__bucket_list_deallocator.86"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %149, align 8
  br label %150

150:                                              ; preds = %136, %70, %35, %148
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.162"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.158"*, %"class.spvtools::val::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.269"* dereferenceable(8), %"class.std::__1::tuple.272"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::val::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.158", %"class.std::__1::__hash_table.158"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::val::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !2
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.158", %"class.std::__1::__hash_table.158"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.162"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.162"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.162"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.162"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.162"* %65 to %"class.spvtools::val::BasicBlock"**
  %67 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::val::BasicBlock"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #15, !noalias !94
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.269"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !94
  %75 = load i64, i64* %74, align 8, !noalias !94
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !94
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i32*
  store i32 0, i32* %78, align 8, !noalias !94
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !94
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.162"**
  store %"struct.std::__1::__hash_node_base.162"* null, %"struct.std::__1::__hash_node_base.162"** %81, align 8, !noalias !94
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.158", %"class.std::__1::__hash_table.158"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.158", %"class.std::__1::__hash_table.158"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !2
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #13
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.158"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #13, !range !2
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.158", %"class.std::__1::__hash_table.158"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.162"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.158", %"class.std::__1::__hash_table.158"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.162"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.162"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.162"* %124, %"struct.std::__1::__hash_node_base.162"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.162"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.162"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #13, !range !2
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.162"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.162"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.162"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.162"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.162"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.162"*, i8 } undef, %"struct.std::__1::__hash_node_base.162"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.162"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.162"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.158"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.158", %"class.std::__1::__hash_table.158"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.158"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.158", %"class.std::__1::__hash_table.158"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.158", %"class.std::__1::__hash_table.158"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.158"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.158"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.158", %"class.std::__1::__hash_table.158"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.158", %"class.std::__1::__hash_table.158"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.158"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.162"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.162"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.164", %"class.std::__1::__bucket_list_deallocator.164"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.162"* null, %"struct.std::__1::__hash_node_base.162"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !97

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.158", %"class.std::__1::__hash_table.158"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.162"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.162"* null, %"struct.std::__1::__hash_node_base.162"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.162"* null, %"struct.std::__1::__hash_node_base.162"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.162"* null, %"struct.std::__1::__hash_node_base.162"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.162"* null, %"struct.std::__1::__hash_node_base.162"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.162"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.162"* %36, %"struct.std::__1::__hash_node_base.162"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.162"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.162"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.162"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.162"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.162"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.162"* %101 to %"class.spvtools::val::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.162"* %82, %"struct.std::__1::__hash_node_base.162"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.162"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.162"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.162"* %110 to %"class.spvtools::val::BasicBlock"**
  %112 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::val::BasicBlock"*, %"class.spvtools::val::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::val::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.162"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.162"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.162"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.162"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.162"* %80, %"struct.std::__1::__hash_node_base.162"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.162"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.162", %"struct.std::__1::__hash_node_base.162"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.162"*, %"struct.std::__1::__hash_node_base.162"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.162"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.158", %"class.std::__1::__hash_table.158"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.162"**, %"struct.std::__1::__hash_node_base.162"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.162"** null, %"struct.std::__1::__hash_node_base.162"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.162"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.162"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.164", %"class.std::__1::__bucket_list_deallocator.164"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFb18SpvExecutionModel_PNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3val8Function32RegisterExecutionModelLimitationES2_RKS8_E3$_5SA_EEEEbPKNS0_16__policy_storageES2_S9_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32, %"class.std::__1::basic_string"*) #0 align 2 {
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.461"**
  %5 = load %"class.std::__1::__function::__default_alloc_func.461"*, %"class.std::__1::__function::__default_alloc_func.461"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.461", %"class.std::__1::__function::__default_alloc_func.461"* %5, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %1
  br i1 %8, label %43, label %9

9:                                                ; preds = %3
  %10 = icmp eq %"class.std::__1::basic_string"* %2, null
  br i1 %10, label %43, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.461", %"class.std::__1::__function::__default_alloc_func.461"* %5, i64 0, i32 0, i32 1
  %13 = icmp eq %"class.std::__1::basic_string"* %12, %2
  br i1 %13, label %43, label %14

14:                                               ; preds = %11
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %18, label %33, label %23

23:                                               ; preds = %14
  br i1 %22, label %27, label %24

24:                                               ; preds = %23
  %25 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %26, i64 24, i1 false) #13
  br label %43

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.461", %"class.std::__1::__function::__default_alloc_func.461"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %29, i64 %31) #13
  br label %43

33:                                               ; preds = %14
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.461", %"class.std::__1::__function::__default_alloc_func.461"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %39 = zext i8 %21 to i64
  %40 = select i1 %22, i8* %35, i8* %38
  %41 = select i1 %22, i64 %37, i64 %39
  %42 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %40, i64 %41) #13
  br label %43

43:                                               ; preds = %3, %9, %11, %24, %27, %33
  %44 = phi i1 [ false, %9 ], [ true, %3 ], [ false, %11 ], [ false, %24 ], [ false, %27 ], [ false, %33 ]
  ret i1 %44
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3val8Function32RegisterExecutionModelLimitationE18SpvExecutionModel_RKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_5FbS7_PSD_EEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #15, !noalias !98
  %3 = bitcast i8* %2 to i32*
  %4 = bitcast i8* %0 to i32*
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds i8, i8* %0, i64 31
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false) #13
  br label %19

12:                                               ; preds = %1
  %13 = bitcast i8* %6 to %"class.std::__1::basic_string"*
  %14 = bitcast i8* %7 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %0, i64 16
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %13, i8* %15, i64 %18) #13
  br label %19

19:                                               ; preds = %11, %12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3val8Function32RegisterExecutionModelLimitationE18SpvExecutionModel_RKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_5FbS7_PSD_EEEEEvPv"(i8*) #0 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 31
  %3 = load i8, i8* %2, align 1
  %4 = icmp slt i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = bitcast i8* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #15
  br label %9

9:                                                ; preds = %1, %5
  tail call void @_ZdlPv(i8* %0) #15
  ret void
}

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #1

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__14listIN8spvtools3val9ConstructENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__14listIN8spvtools3val9ConstructENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9}
!9 = distinct !{!9, !"LVerDomain"}
!10 = !{!11}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !13}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!20 = distinct !{!20, !21, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3val8Function32RegisterExecutionModelLimitationE18SpvExecutionModel_RKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_5FbS7_PSD_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3val8Function32RegisterExecutionModelLimitationE18SpvExecutionModel_RKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_5FbS7_PSD_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__14listINS_8functionIFb18SpvExecutionModel_PNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEENS6_ISB_EEE15__allocate_nodeERNS6_INS_11__list_nodeISB_PvEEEE: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__14listINS_8functionIFb18SpvExecutionModel_PNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEENS6_ISB_EEE15__allocate_nodeERNS6_INS_11__list_nodeISB_PvEEEE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!28 = distinct !{!28, !15}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!31 = distinct !{!31, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SF_SD_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockENS_6vectorIS5_NS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SF_SD_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISW_EEEEEEmOT_DpOT0_"}
!35 = distinct !{!35, !15}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3val10BasicBlockEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashINS_4pairIKjS4_EEJEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISO_EEEEEEmOT_DpOT0_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3val10BasicBlockEEENS_22__unordered_map_hasherIjS5_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashINS_4pairIKjS4_EEJEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISO_EEEEEEmOT_DpOT0_"}
!39 = distinct !{!39, !15}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!43 = distinct !{!43, !15}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS6_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS9_ISY_EEEEEEmOT_DpOT0_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3val10BasicBlockENS_6vectorIPS4_NS_9allocatorIS8_EEEEEENS_22__unordered_map_hasherIS6_SC_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SC_SH_SF_Lb1EEENS9_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS6_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS9_ISY_EEEEEEmOT_DpOT0_"}
!47 = distinct !{!47, !15}
!48 = !{!49}
!49 = distinct !{!49, !50}
!50 = distinct !{!50, !"LVerDomain"}
!51 = !{!52}
!52 = distinct !{!52, !50}
!53 = distinct !{!53, !13}
!54 = distinct !{!54, !15}
!55 = distinct !{!55, !15}
!56 = distinct !{!56, !13}
!57 = !{!58}
!58 = distinct !{!58, !59}
!59 = distinct !{!59, !"LVerDomain"}
!60 = !{!61}
!61 = distinct !{!61, !59}
!62 = distinct !{!62, !13}
!63 = distinct !{!63, !15}
!64 = distinct !{!64, !13}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !13}
!71 = distinct !{!71, !15}
!72 = distinct !{!72, !15}
!73 = distinct !{!73, !13}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !13}
!80 = distinct !{!80, !15}
!81 = distinct !{!81, !15}
!82 = distinct !{!82, !13}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNSt3__112__hash_tableIPKN8spvtools3val10BasicBlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE21__construct_node_hashIRKS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!88 = distinct !{!88, !"_ZNSt3__112__hash_tableIPKN8spvtools3val10BasicBlockENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE21__construct_node_hashIRKS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISJ_EEEEEEmOT_DpOT0_"}
!89 = distinct !{!89, !15}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIPKN8spvtools3val10BasicBlockENS4_13ConstructTypeEEEPNS4_9ConstructEEENS_22__unordered_map_hasherIS9_SC_NS4_24bb_constr_type_pair_hashENS_8equal_toIS9_EELb1EEENS_21__unordered_map_equalIS9_SC_SG_SE_Lb1EEENS_9allocatorISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS9_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINSK_ISY_EEEEEEmOT_DpOT0_: argument 0"}
!92 = distinct !{!92, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIPKN8spvtools3val10BasicBlockENS4_13ConstructTypeEEEPNS4_9ConstructEEENS_22__unordered_map_hasherIS9_SC_NS4_24bb_constr_type_pair_hashENS_8equal_toIS9_EELb1EEENS_21__unordered_map_equalIS9_SC_SG_SE_Lb1EEENS_9allocatorISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS9_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINSK_ISY_EEEEEEmOT_DpOT0_"}
!93 = distinct !{!93, !15}
!94 = !{!95}
!95 = distinct !{!95, !96, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!96 = distinct !{!96, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3val10BasicBlockEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!97 = distinct !{!97, !15}
!98 = !{!99, !101}
!99 = distinct !{!99, !100, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!100 = distinct !{!100, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!101 = distinct !{!101, !102, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3val8Function32RegisterExecutionModelLimitationE18SpvExecutionModel_RKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_5FbS7_PSD_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!102 = distinct !{!102, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3val8Function32RegisterExecutionModelLimitationE18SpvExecutionModel_RKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_5FbS7_PSD_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
