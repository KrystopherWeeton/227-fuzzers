; ModuleID = '../../components/omnibox/browser/omnibox_view.cc'
source_filename = "../../components/omnibox/browser/omnibox_view.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::FeatureParam" = type <{ %"struct.base::Feature"*, i8*, i8, [7 x i8] }>
%"struct.base::Feature" = type { i8*, i32 }
%"struct.OmniboxView::State" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i64, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.OmniboxView = type { i32 (...)**, %"class.std::__1::unique_ptr", %class.OmniboxEditController* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.OmniboxEditModel* }
%class.OmniboxEditModel = type { i32 (...)**, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %class.OmniboxView*, %class.OmniboxEditController*, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.base::TimeTicks", i8, i8, %"class.base::TimeTicks", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %struct.SplitAutocompletion, i8, %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", i8, i32, i8, i8, %class.AutocompleteInput }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.OmniboxClient* }
%class.OmniboxClient = type { i32 (...)** }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.OmniboxController* }
%class.OmniboxController = type { %"class.AutocompleteController::Observer", %class.OmniboxEditModel*, %class.OmniboxClient*, %class.OmniboxPopupModel*, %"class.std::__1::unique_ptr.17", %struct.AutocompleteMatch, %"class.base::WeakPtrFactory.202" }
%"class.AutocompleteController::Observer" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.12" }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%class.OmniboxPopupModel = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.AutocompleteController* }
%class.AutocompleteController = type { %class.AutocompleteProviderListener, %"class.base::trace_event::MemoryDumpProvider", %"class.base::ObserverList", %"class.std::__1::unique_ptr.26", %"class.std::__1::vector.32", %class.DocumentProvider*, %class.HistoryURLProvider*, %class.KeywordProvider*, %class.SearchProvider*, %class.ZeroSuggestProvider*, %class.OnDeviceHeadProvider*, %class.ClipboardProvider*, %class.VoiceSuggestProvider*, %class.AutocompleteInput, %class.AutocompleteResult, %"class.base::TimeTicks", %"class.base::OneShotTimer", %"class.base::OneShotTimer", %"class.base::TimeDelta", i8, i8, i8, %class.TemplateURLService* }
%class.AutocompleteProviderListener = type { i32 (...)** }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.21" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.AutocompleteProviderClient* }
%class.AutocompleteProviderClient = type { i32 (...)** }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %class.scoped_refptr.34*, %class.scoped_refptr.34*, %"class.std::__1::__compressed_pair.35" }
%class.scoped_refptr.34 = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.scoped_refptr.34* }
%class.DocumentProvider = type opaque
%class.HistoryURLProvider = type opaque
%class.KeywordProvider = type opaque
%class.SearchProvider = type opaque
%class.ZeroSuggestProvider = type opaque
%class.OnDeviceHeadProvider = type opaque
%class.ClipboardProvider = type opaque
%class.VoiceSuggestProvider = type opaque
%class.AutocompleteResult = type { %"class.std::__1::vector.63", %"class.std::__1::map", %"class.std::__1::set" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %struct.AutocompleteMatch*, %struct.AutocompleteMatch*, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %struct.AutocompleteMatch* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.78" }
%"class.std::__1::__tree.78" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.85, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.87" }
%class.scoped_refptr.85 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.86" }>
%"class.base::RefCountedThreadSafe.86" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.87" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.88 }
%class.scoped_refptr.88 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.89", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.89" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TimeDelta" = type { i64 }
%class.TemplateURLService = type opaque
%struct.AutocompleteMatch = type { %class.AutocompleteProvider*, i32, i32, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %struct.SplitAutocompletion, i8, %class.GURL, %class.GURL, %"class.std::__1::basic_string.40", %class.GURL, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.101", %"class.std::__1::basic_string", %"class.std::__1::vector.101", %"class.std::__1::basic_string", %"class.std::__1::vector.101", %"class.absl::optional.108", i8, [7 x i8], %"class.absl::optional.113", i32, i32, i8, %"class.base::internal::flat_tree", %"class.std::__1::unique_ptr.137", %"class.std::__1::basic_string", i8, %class.scoped_refptr.142, i8, %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::map.155", %"class.std::__1::vector.63", %"class.std::__1::vector.166", %"class.std::__1::vector.195" }
%class.AutocompleteProvider = type { i32 (...)**, %"class.base::RefCountedThreadSafe.93", i64, %"class.std::__1::vector.63", i8, i32 }
%"class.base::RefCountedThreadSafe.93" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::basic_string.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.43 }
%union.anon.43 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.40", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.49" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.GURL* }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"*, %"class.std::__1::__compressed_pair.103" }
%"struct.AutocompleteMatch::ACMatchClassification" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.AutocompleteMatch::ACMatchClassification"* }
%"class.absl::optional.108" = type { %"class.absl::optional_internal::optional_data.109" }
%"class.absl::optional_internal::optional_data.109" = type { %"class.absl::optional_internal::optional_data_base.110" }
%"class.absl::optional_internal::optional_data_base.110" = type { %"class.absl::optional_internal::optional_data_dtor_base.111" }
%"class.absl::optional_internal::optional_data_dtor_base.111" = type { i8, %union.anon.112 }
%union.anon.112 = type { i32 }
%"class.absl::optional.113" = type { %"class.absl::optional_internal::optional_data.114" }
%"class.absl::optional_internal::optional_data.114" = type { %"class.absl::optional_internal::optional_data_base.115" }
%"class.absl::optional_internal::optional_data_base.115" = type { %"class.absl::optional_internal::optional_data_dtor_base.116" }
%"class.absl::optional_internal::optional_data_dtor_base.116" = type { i8, [7 x i8], %union.anon.117 }
%union.anon.117 = type { %class.SuggestionAnswer }
%class.SuggestionAnswer = type <{ %class.GURL, %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine", i32, [4 x i8] }>
%"class.SuggestionAnswer::ImageLine" = type { %"class.std::__1::vector.118", i32, %"class.absl::optional.125", %"class.absl::optional.125", %class.GURL }
%"class.std::__1::vector.118" = type { %"class.std::__1::__vector_base.119" }
%"class.std::__1::__vector_base.119" = type { %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"*, %"class.std::__1::__compressed_pair.120" }
%"class.SuggestionAnswer::TextField" = type { %"class.std::__1::basic_string", i32, i8, i32, i32 }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.SuggestionAnswer::TextField"* }
%"class.absl::optional.125" = type { %"class.absl::optional_internal::optional_data.126" }
%"class.absl::optional_internal::optional_data.126" = type { %"class.absl::optional_internal::optional_data_base.127" }
%"class.absl::optional_internal::optional_data_base.127" = type { %"class.absl::optional_internal::optional_data_dtor_base.128" }
%"class.absl::optional_internal::optional_data_dtor_base.128" = type { i8, %union.anon.129 }
%union.anon.129 = type { %"class.SuggestionAnswer::TextField" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.130" }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { i32*, i32*, %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { i32* }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%class.scoped_refptr.142 = type { %class.OmniboxAction* }
%class.OmniboxAction = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.TemplateURLRef::SearchTermsArgs"* }
%"struct.TemplateURLRef::SearchTermsArgs" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string.40", i32, i64, %"class.std::__1::basic_string.40", i32, %"class.std::__1::basic_string.40", %"class.std::__1::basic_string.40", %"class.std::__1::basic_string.40", %"class.std::__1::basic_string.40", i8, %"class.std::__1::basic_string.40", %class.GURL, %"class.gfx::Size", i32, i8, %"struct.TemplateURLRef::SearchTermsArgs::ContextualSearchParams" }
%"class.gfx::Size" = type { i32, i32 }
%"struct.TemplateURLRef::SearchTermsArgs::ContextualSearchParams" = type { i32, i32, %"class.std::__1::basic_string.40", i64, i32, i8, %"class.std::__1::basic_string.40", %"class.std::__1::basic_string.40", %"class.std::__1::basic_string.40", %"class.std::__1::basic_string.40" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::map.155" = type { %"class.std::__1::__tree.156" }
%"class.std::__1::__tree.156" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.query_tiles::Tile"*, %"struct.query_tiles::Tile"*, %"class.std::__1::__compressed_pair.190" }
%"struct.query_tiles::Tile" = type { %"class.std::__1::basic_string.40", %"class.std::__1::basic_string.40", %"class.std::__1::basic_string.40", %"class.std::__1::basic_string.40", %"class.std::__1::vector.168", %"class.std::__1::vector.175", %"class.std::__1::vector.183" }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.query_tiles::ImageMetadata"*, %"struct.query_tiles::ImageMetadata"*, %"class.std::__1::__compressed_pair.170" }
%"struct.query_tiles::ImageMetadata" = type { %class.GURL }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.query_tiles::ImageMetadata"* }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"class.std::__1::unique_ptr.177"*, %"class.std::__1::unique_ptr.177"*, %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::unique_ptr.177" = type opaque
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::unique_ptr.177"* }
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"class.std::__1::basic_string.40"*, %"class.std::__1::basic_string.40"*, %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.std::__1::basic_string.40"* }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.query_tiles::Tile"* }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"struct.AutocompleteMatch::NavsuggestTile"*, %"struct.AutocompleteMatch::NavsuggestTile"*, %"class.std::__1::__compressed_pair.197" }
%"struct.AutocompleteMatch::NavsuggestTile" = type { %class.GURL, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.AutocompleteMatch::NavsuggestTile"* }
%"class.base::WeakPtrFactory.202" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%struct.SplitAutocompletion = type { %"class.std::__1::basic_string", %"class.std::__1::vector.94" }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.96" }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.gfx::Range"* }
%class.AutocompleteInput = type { %"class.std::__1::basic_string", i64, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"struct.url::Parsed", %"class.std::__1::basic_string", %class.GURL, %"class.std::__1::basic_string.40", i8, i8, i8, i32, i8, i32, %"class.std::__1::vector.55", %"class.absl::optional", i8, i8, i32 }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.62 }
%union.anon.62 = type { %"class.std::__1::basic_string.40" }
%class.OmniboxEditController = type <{ i32 (...)**, %class.GURL, %"struct.std::__1::pair"*, i32, i32, %"class.base::TimeTicks", i8, [7 x i8] }>
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%class.anon = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* }
%"class.ui::ImageModel" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"class.ui::VectorIconModel" }
%"class.ui::VectorIconModel" = type { %"struct.gfx::VectorIcon"*, i32, %"class.absl::variant.209", %"struct.gfx::VectorIcon"* }
%"class.absl::variant.209" = type { %"class.absl::variant_internal::VariantStateBase.210" }
%"class.absl::variant_internal::VariantStateBase.210" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { i32 }
%"struct.gfx::VectorIcon" = type opaque
%"class.base::OnceCallback.216" = type { %"class.base::internal::CallbackBase" }
%"class.gfx::Image" = type { %class.scoped_refptr.214 }
%class.scoped_refptr.214 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%class.LocationBarModel = type { i32 (...)** }
%"class.bookmarks::BookmarkModel" = type { %"class.bookmarks::BookmarkUndoProvider", %class.KeyedService, %"class.std::__1::unique_ptr.217", i8, %"class.std::__1::unique_ptr.223", %"class.bookmarks::BookmarkNode"*, %"class.bookmarks::BookmarkPermanentNode"*, %"class.bookmarks::BookmarkPermanentNode"*, %"class.bookmarks::BookmarkPermanentNode"*, i64, %"class.base::ObserverList.243", %"class.base::CancelableTaskTracker", %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.276", %class.scoped_refptr.282, i32, %"class.std::__1::unique_ptr.283", %"class.std::__1::set.289", %"class.bookmarks::BookmarkUndoDelegate"*, %"class.std::__1::unique_ptr.297", %class.scoped_refptr.303, %"class.base::WeakPtrFactory.304" }
%"class.bookmarks::BookmarkUndoProvider" = type { i32 (...)** }
%class.KeyedService = type { i32 (...)** }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.bookmarks::BookmarkClient"* }
%"class.bookmarks::BookmarkClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.bookmarks::BookmarkNode"* }
%"class.bookmarks::BookmarkNode" = type <{ %"class.ui::TreeNode", %"class.bookmarks::TitledUrlNode", i64, %"class.base::GUID", %class.GURL, i32, [4 x i8], %"class.base::Time", %"class.base::Time", %"class.gfx::Image", %"class.std::__1::unique_ptr.49", i32, [4 x i8], i64, %"class.std::__1::unique_ptr.234", i8, [7 x i8] }>
%"class.ui::TreeNode" = type { %"class.ui::TreeModelNode", %"class.std::__1::basic_string", %"class.bookmarks::BookmarkNode"*, %"class.std::__1::vector.226" }
%"class.ui::TreeModelNode" = type { i32 (...)** }
%"class.std::__1::vector.226" = type { %"class.std::__1::__vector_base.227" }
%"class.std::__1::__vector_base.227" = type { %"class.std::__1::unique_ptr.223"*, %"class.std::__1::unique_ptr.223"*, %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.std::__1::unique_ptr.223"* }
%"class.bookmarks::TitledUrlNode" = type { i32 (...)** }
%"class.base::GUID" = type { %"class.std::__1::basic_string.40" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.233" }
%"class.base::time_internal::TimeBase.233" = type { i64 }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::map.155"* }
%"class.bookmarks::BookmarkPermanentNode" = type { %"class.bookmarks::BookmarkNode.base", i8, [6 x i8] }
%"class.bookmarks::BookmarkNode.base" = type <{ %"class.ui::TreeNode", %"class.bookmarks::TitledUrlNode", i64, %"class.base::GUID", %class.GURL, i32, [4 x i8], %"class.base::Time", %"class.base::Time", %"class.gfx::Image", %"class.std::__1::unique_ptr.49", i32, [4 x i8], i64, %"class.std::__1::unique_ptr.234", i8 }>
%"class.base::ObserverList.243" = type <{ %"class.std::__1::vector.244", %"class.base::LinkedList.251", i64, i32, [4 x i8] }>
%"class.std::__1::vector.244" = type { %"class.std::__1::__vector_base.245" }
%"class.std::__1::__vector_base.245" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.246" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.251" = type { %"class.base::LinkNode.252" }
%"class.base::LinkNode.252" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::CancelableTaskTracker" = type { %"class.base::small_map", i64, %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtr.268", %"class.base::WeakPtrFactory.269" }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.254 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.254 = type { [4 x %"struct.std::__1::pair.255"] }
%"struct.std::__1::pair.255" = type { i64, %class.scoped_refptr.256 }
%class.scoped_refptr.256 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.base::WeakPtr.268" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.269" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.bookmarks::BookmarkStorage"* }
%"class.bookmarks::BookmarkStorage" = type opaque
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.bookmarks::TitledUrlIndex"* }
%"class.bookmarks::TitledUrlIndex" = type opaque
%class.scoped_refptr.282 = type { %"class.bookmarks::UrlIndex"* }
%"class.bookmarks::UrlIndex" = type opaque
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.bookmarks::BookmarkExpandedStateTracker"* }
%"class.bookmarks::BookmarkExpandedStateTracker" = type opaque
%"class.std::__1::set.289" = type { %"class.std::__1::__tree.290" }
%"class.std::__1::__tree.290" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.bookmarks::BookmarkUndoDelegate" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.bookmarks::BookmarkUndoDelegate"* }
%class.scoped_refptr.303 = type { %"class.bookmarks::ModelLoader"* }
%"class.bookmarks::ModelLoader" = type opaque
%"class.base::WeakPtrFactory.304" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.OmniboxView::StateChanges" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i64, i64, i8, i8, i8, i8 }
%class.AutocompleteSchemeClassifier = type opaque

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7reserveEm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN11OmniboxView21SetAccessibilityLabelERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERK17AutocompleteMatchb = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

@_ZN3url17kJavaScriptSchemeE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [2 x i16] [i16 58, i16 0], align 2
@_ZN4base16kWhitespaceUTF16E = external constant [0 x i16], align 2
@_ZZN11OmniboxView20SanitizeTextForPasteERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEE8kNewline = internal constant [2 x i16] [i16 10, i16 0], align 2
@_ZN4base22kWhitespaceNoCrLfUTF16E = external constant [0 x i16], align 2
@_ZTV11OmniboxView = hidden unnamed_addr constant { [40 x i8*] } { [40 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.OmniboxView*)* @_ZN11OmniboxViewD2Ev to i8*), i8* bitcast (void (%class.OmniboxView*)* @_ZN11OmniboxViewD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.OmniboxView*, %struct.AutocompleteMatch*, i32, %class.GURL*, %"class.std::__1::basic_string"*, i64, i64)* @_ZN11OmniboxView9OpenMatchERK17AutocompleteMatch21WindowOpenDispositionRK4GURLRKNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEmN4base9TimeTicksE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i1)* @_ZN11OmniboxView11SetUserTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEb to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.OmniboxView*)* @_ZN11OmniboxView9RevertAllEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.OmniboxView*)* @_ZN11OmniboxView17CloseOmniboxPopupEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.OmniboxView*, %"class.std::__1::basic_string"*, %struct.AutocompleteMatch*, i1)* @_ZN11OmniboxView21SetAccessibilityLabelERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERK17AutocompleteMatchb to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.OmniboxView*)* @_ZNK11OmniboxView17IsImeShowingPopupEv to i8*), i8* bitcast (void (%class.OmniboxView*)* @_ZN11OmniboxView28ShowVirtualKeyboardIfEnabledEv to i8*), i8* bitcast (void (%class.OmniboxView*)* @_ZN11OmniboxView15HideImeIfNeededEv to i8*), i8* bitcast (i1 (%class.OmniboxView*)* @_ZNK11OmniboxView27IsIndicatingQueryRefinementEv to i8*), i8* bitcast (void (%class.OmniboxView*)* @_ZN11OmniboxView11TextChangedEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN10extensions16kExtensionSchemeE = external constant [0 x i8], align 1
@_ZN3url11kDataSchemeE = external constant [0 x i8], align 1
@_ZN17OmniboxFieldTrial43kRichAutocompletionAutocompleteNonPrefixAllE = external global %"struct.base::FeatureParam", align 8
@_ZN17OmniboxFieldTrial56kRichAutocompletionAutocompleteNonPrefixShortcutProviderE = external global %"struct.base::FeatureParam", align 8
@_ZN17OmniboxFieldTrial39kRichAutocompletionSplitTitleCompletionE = external global %"struct.base::FeatureParam", align 8
@_ZN17OmniboxFieldTrial37kRichAutocompletionSplitUrlCompletionE = external global %"struct.base::FeatureParam", align 8

@_ZN11OmniboxView5StateC1Ev = hidden unnamed_addr alias void (%"struct.OmniboxView::State"*), void (%"struct.OmniboxView::State"*)* @_ZN11OmniboxView5StateC2Ev
@_ZN11OmniboxView5StateC1ERKS0_ = hidden unnamed_addr alias void (%"struct.OmniboxView::State"*, %"struct.OmniboxView::State"*), void (%"struct.OmniboxView::State"*, %"struct.OmniboxView::State"*)* @_ZN11OmniboxView5StateC2ERKS0_
@_ZN11OmniboxViewD1Ev = hidden unnamed_addr alias void (%class.OmniboxView*), void (%class.OmniboxView*)* @_ZN11OmniboxViewD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxView5StateC2Ev(%"struct.OmniboxView::State"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.OmniboxView::State"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxView5StateC2ERKS0_(%"struct.OmniboxView::State"*, %"struct.OmniboxView::State"* nocapture readonly dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.OmniboxView::State"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.OmniboxView::State"* %0 to i8*
  %9 = bitcast %"struct.OmniboxView::State"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #13
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.OmniboxView::State"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.OmniboxView::State"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.OmniboxView::State"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #14
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #14
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.OmniboxView::State"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !2
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !5, !noalias !2
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !5, !noalias !2
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !2
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !5, !noalias !2
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !5, !noalias !2
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !2
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !5, !noalias !2
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !5, !noalias !2
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !2
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !5, !noalias !2
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !5, !noalias !2
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !7

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !2
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !5, !noalias !2
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !5, !noalias !2
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !9

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !11

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !12

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::basic_string"* %187 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %188, i64 0, i32 1, i32 1
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %185
  %193 = bitcast %"class.std::__1::basic_string"* %186 to i8*
  %194 = bitcast %"class.std::__1::basic_string"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 24, i1 false) #13
  br label %370

195:                                              ; preds = %185
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %199, 11
  br i1 %200, label %201, label %206

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::basic_string"* %186 to i16*
  %203 = trunc i64 %199 to i8
  %204 = bitcast %"class.std::__1::basic_string"* %186 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  store i8 %203, i8* %205, align 1
  br label %223

206:                                              ; preds = %195
  %207 = icmp ugt i64 %199, 9223372036854775791
  br i1 %207, label %208, label %210

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::basic_string"* %186 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %209) #14
  unreachable

210:                                              ; preds = %206
  %211 = add nuw nsw i64 %199, 8
  %212 = and i64 %211, -8
  %213 = icmp slt i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  tail call void @abort() #14
  unreachable

215:                                              ; preds = %210
  %216 = shl i64 %212, 1
  %217 = tail call i8* @_Znwm(i64 %216) #15
  %218 = bitcast i8* %217 to i16*
  %219 = bitcast %"class.std::__1::basic_string"* %186 to i8**
  store i8* %217, i8** %219, align 8
  %220 = or i64 %212, -9223372036854775808
  %221 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %199, i64* %222, align 8
  br label %223

223:                                              ; preds = %215, %201
  %224 = phi i16* [ %202, %201 ], [ %218, %215 ]
  %225 = add nuw nsw i64 %199, 1
  %226 = add i64 %199, 1
  %227 = icmp ult i64 %226, 16
  br i1 %227, label %317, label %228

228:                                              ; preds = %223
  %229 = add i64 %199, 1
  %230 = getelementptr i16, i16* %224, i64 %229
  %231 = getelementptr i16, i16* %197, i64 %229
  %232 = icmp ult i16* %224, %231
  %233 = icmp ult i16* %197, %230
  %234 = and i1 %232, %233
  br i1 %234, label %317, label %235

235:                                              ; preds = %228
  %236 = and i64 %226, -16
  %237 = sub i64 %225, %236
  %238 = getelementptr i16, i16* %197, i64 %236
  %239 = getelementptr i16, i16* %224, i64 %236
  %240 = add i64 %236, -16
  %241 = lshr exact i64 %240, 4
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp ult i64 %240, 48
  br i1 %244, label %296, label %245

245:                                              ; preds = %235
  %246 = sub nsw i64 %242, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i64 [ 0, %245 ], [ %293, %247 ]
  %249 = phi i64 [ %246, %245 ], [ %294, %247 ]
  %250 = getelementptr i16, i16* %197, i64 %248
  %251 = getelementptr i16, i16* %224, i64 %248
  %252 = bitcast i16* %250 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !13
  %254 = getelementptr i16, i16* %250, i64 8
  %255 = bitcast i16* %254 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !13
  %257 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %257, align 2, !alias.scope !16, !noalias !13
  %258 = getelementptr i16, i16* %251, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %259, align 2, !alias.scope !16, !noalias !13
  %260 = or i64 %248, 16
  %261 = getelementptr i16, i16* %197, i64 %260
  %262 = getelementptr i16, i16* %224, i64 %260
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !13
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !13
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2, !alias.scope !16, !noalias !13
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2, !alias.scope !16, !noalias !13
  %271 = or i64 %248, 32
  %272 = getelementptr i16, i16* %197, i64 %271
  %273 = getelementptr i16, i16* %224, i64 %271
  %274 = bitcast i16* %272 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !13
  %276 = getelementptr i16, i16* %272, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !13
  %279 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %279, align 2, !alias.scope !16, !noalias !13
  %280 = getelementptr i16, i16* %273, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %281, align 2, !alias.scope !16, !noalias !13
  %282 = or i64 %248, 48
  %283 = getelementptr i16, i16* %197, i64 %282
  %284 = getelementptr i16, i16* %224, i64 %282
  %285 = bitcast i16* %283 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !13
  %287 = getelementptr i16, i16* %283, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !13
  %290 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %290, align 2, !alias.scope !16, !noalias !13
  %291 = getelementptr i16, i16* %284, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %292, align 2, !alias.scope !16, !noalias !13
  %293 = add i64 %248, 64
  %294 = add i64 %249, -4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %247, !llvm.loop !18

296:                                              ; preds = %247, %235
  %297 = phi i64 [ 0, %235 ], [ %293, %247 ]
  %298 = icmp eq i64 %243, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %296, %299
  %300 = phi i64 [ %312, %299 ], [ %297, %296 ]
  %301 = phi i64 [ %313, %299 ], [ %243, %296 ]
  %302 = getelementptr i16, i16* %197, i64 %300
  %303 = getelementptr i16, i16* %224, i64 %300
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !13
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !13
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !16, !noalias !13
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !16, !noalias !13
  %312 = add i64 %300, 16
  %313 = add i64 %301, -1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %299, !llvm.loop !19

315:                                              ; preds = %299, %296
  %316 = icmp eq i64 %226, %236
  br i1 %316, label %370, label %317

317:                                              ; preds = %315, %228, %223
  %318 = phi i64 [ %225, %228 ], [ %225, %223 ], [ %237, %315 ]
  %319 = phi i16* [ %197, %228 ], [ %197, %223 ], [ %238, %315 ]
  %320 = phi i16* [ %224, %228 ], [ %224, %223 ], [ %239, %315 ]
  %321 = add i64 %318, -1
  %322 = and i64 %318, 7
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %335, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %330, %324 ], [ %318, %317 ]
  %326 = phi i16* [ %332, %324 ], [ %319, %317 ]
  %327 = phi i16* [ %331, %324 ], [ %320, %317 ]
  %328 = phi i64 [ %333, %324 ], [ %322, %317 ]
  %329 = load i16, i16* %326, align 2
  store i16 %329, i16* %327, align 2
  %330 = add i64 %325, -1
  %331 = getelementptr inbounds i16, i16* %327, i64 1
  %332 = getelementptr inbounds i16, i16* %326, i64 1
  %333 = add i64 %328, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %324, !llvm.loop !20

335:                                              ; preds = %324, %317
  %336 = phi i64 [ %318, %317 ], [ %330, %324 ]
  %337 = phi i16* [ %319, %317 ], [ %332, %324 ]
  %338 = phi i16* [ %320, %317 ], [ %331, %324 ]
  %339 = icmp ult i64 %321, 7
  br i1 %339, label %370, label %340

340:                                              ; preds = %335, %340
  %341 = phi i64 [ %366, %340 ], [ %336, %335 ]
  %342 = phi i16* [ %368, %340 ], [ %337, %335 ]
  %343 = phi i16* [ %367, %340 ], [ %338, %335 ]
  %344 = load i16, i16* %342, align 2
  store i16 %344, i16* %343, align 2
  %345 = getelementptr inbounds i16, i16* %343, i64 1
  %346 = getelementptr inbounds i16, i16* %342, i64 1
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %343, i64 2
  %349 = getelementptr inbounds i16, i16* %342, i64 2
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %343, i64 3
  %352 = getelementptr inbounds i16, i16* %342, i64 3
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %343, i64 4
  %355 = getelementptr inbounds i16, i16* %342, i64 4
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %343, i64 5
  %358 = getelementptr inbounds i16, i16* %342, i64 5
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %343, i64 6
  %361 = getelementptr inbounds i16, i16* %342, i64 6
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %343, i64 7
  %364 = getelementptr inbounds i16, i16* %342, i64 7
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = add i64 %341, -8
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %342, i64 8
  %369 = icmp eq i64 %366, 0
  br i1 %369, label %370, label %340, !llvm.loop !21

370:                                              ; preds = %335, %340, %315, %192
  %371 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %0, i64 0, i32 2
  %372 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %1, i64 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %371, i8* align 8 %372, i64 32, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxView22StripJavascriptSchemasERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %11 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kJavaScriptSchemeE, i64 0, i64 0)) #13
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kJavaScriptSchemeE, i64 0, i64 0), i64 %11) #13
  %12 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1, !noalias !22
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i64, i64* %17, align 8, !noalias !22
  %19 = and i64 %18, 9223372036854775807
  %20 = add nsw i64 %19, -1
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8, !noalias !22
  br label %25

23:                                               ; preds = %2
  %24 = zext i8 %14 to i64
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i64 [ %20, %16 ], [ 10, %23 ]
  %27 = phi i64 [ %22, %16 ], [ %24, %23 ]
  %28 = icmp eq i64 %26, %27
  br i1 %28, label %44, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8, !noalias !22
  %32 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %33 = select i1 %15, i16* %31, i16* %32
  %34 = getelementptr inbounds i16, i16* %33, i64 %27
  store i16 58, i16* %34, align 2, !noalias !22
  %35 = add i64 %27, 1
  %36 = load i8, i8* %13, align 1, !noalias !22
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %39, align 8, !noalias !22
  br label %42

40:                                               ; preds = %29
  %41 = trunc i64 %35 to i8
  store i8 %41, i8* %13, align 1, !noalias !22
  br label %42

42:                                               ; preds = %40, %38
  %43 = getelementptr inbounds i16, i16* %33, i64 %35
  store i16 0, i16* %43, align 2, !noalias !22
  br label %47

44:                                               ; preds = %25
  %45 = add i64 %27, 1
  %46 = sub i64 %45, %26
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %4, i64 %26, i64 %46, i64 %27, i64 %27, i64 0, i64 1, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str, i64 0, i64 0)) #13, !noalias !22
  br label %47

47:                                               ; preds = %42, %44
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %9, i64 24, i1 false) #13
  %48 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  %54 = icmp slt i8 %50, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = zext i8 %50 to i64
  %57 = select i1 %54, i64 %52, i64 %56
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %142, label %59

59:                                               ; preds = %47
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %62 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %63 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  %66 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %72 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  br label %73

73:                                               ; preds = %59, %126
  %74 = phi i1 [ %54, %59 ], [ %130, %126 ]
  %75 = phi i64 [ 0, %59 ], [ %128, %126 ]
  %76 = phi i8 [ 0, %59 ], [ %127, %126 ]
  %77 = load i16*, i16** %60, align 8
  %78 = select i1 %74, i16* %77, i16* %61
  %79 = getelementptr inbounds i16, i16* %78, i64 %75
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = call zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext %81) #13
  br i1 %82, label %91, label %83

83:                                               ; preds = %73
  %84 = load i8, i8* %53, align 1
  %85 = icmp slt i8 %84, 0
  %86 = load i16*, i16** %60, align 8
  %87 = select i1 %85, i16* %86, i16* %61
  %88 = getelementptr inbounds i16, i16* %87, i64 %75
  %89 = load i16, i16* %88, align 2
  %90 = icmp ult i16 %89, 32
  br i1 %90, label %91, label %93

91:                                               ; preds = %83, %73
  %92 = add nuw i64 %75, 1
  br label %126

93:                                               ; preds = %83
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #13
  %94 = load i8, i8* %64, align 1
  %95 = icmp slt i8 %94, 0
  %96 = load i64, i64* %8, align 8
  %97 = zext i8 %94 to i64
  %98 = select i1 %95, i64 %96, i64 %97
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %75, i64 %98, %"class.std::__1::allocator"* dereferenceable(1) %65) #13
  %99 = load i8, i8* %67, align 1
  %100 = icmp slt i8 %99, 0
  %101 = load i16*, i16** %68, align 8
  %102 = select i1 %100, i16* %101, i16* %69
  %103 = load i64, i64* %70, align 8
  %104 = zext i8 %99 to i64
  %105 = select i1 %100, i64 %103, i64 %104
  %106 = load i8, i8* %64, align 1
  %107 = icmp slt i8 %106, 0
  %108 = load i16*, i16** %7, align 8
  %109 = select i1 %107, i16* %108, i16* %71
  %110 = load i64, i64* %8, align 8
  %111 = zext i8 %106 to i64
  %112 = select i1 %107, i64 %110, i64 %111
  %113 = call zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_(i16* %102, i64 %105, i16* %109, i64 %112) #13
  %114 = load i8, i8* %67, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %93
  %117 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %117) #15
  br label %118

118:                                              ; preds = %93, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #13
  br i1 %113, label %119, label %135

119:                                              ; preds = %118
  %120 = load i8, i8* %64, align 1
  %121 = icmp slt i8 %120, 0
  %122 = load i64, i64* %8, align 8
  %123 = zext i8 %120 to i64
  %124 = select i1 %121, i64 %122, i64 %123
  %125 = add i64 %124, %75
  br label %126

126:                                              ; preds = %119, %91
  %127 = phi i8 [ %76, %91 ], [ 1, %119 ]
  %128 = phi i64 [ %92, %91 ], [ %125, %119 ]
  %129 = load i8, i8* %53, align 1
  %130 = icmp slt i8 %129, 0
  %131 = load i64, i64* %55, align 8
  %132 = zext i8 %129 to i64
  %133 = select i1 %130, i64 %131, i64 %132
  %134 = icmp ult i64 %128, %133
  br i1 %134, label %73, label %135

135:                                              ; preds = %126, %118
  %136 = phi i8 [ %127, %126 ], [ %76, %118 ]
  %137 = phi i64 [ %128, %126 ], [ %75, %118 ]
  %138 = and i8 %136, 1
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %135
  %141 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %137, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %141) #13
  br label %322

142:                                              ; preds = %47, %135
  %143 = load i8, i8* %53, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %142
  %146 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %147 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 24, i1 false) #13
  br label %322

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i16*, i16** %149, align 8
  %151 = load i64, i64* %55, align 8
  %152 = icmp ult i64 %151, 11
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %155 = trunc i64 %151 to i8
  %156 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %156, i64 0, i32 1, i32 1
  store i8 %155, i8* %157, align 1
  br label %175

158:                                              ; preds = %148
  %159 = icmp ugt i64 %151, 9223372036854775791
  br i1 %159, label %160, label %162

160:                                              ; preds = %158
  %161 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %161) #14
  unreachable

162:                                              ; preds = %158
  %163 = add nuw nsw i64 %151, 8
  %164 = and i64 %163, -8
  %165 = icmp slt i64 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %162
  call void @abort() #14
  unreachable

167:                                              ; preds = %162
  %168 = shl i64 %164, 1
  %169 = call i8* @_Znwm(i64 %168) #15
  %170 = bitcast i8* %169 to i16*
  %171 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %169, i8** %171, align 8
  %172 = or i64 %164, -9223372036854775808
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %172, i64* %173, align 8
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %151, i64* %174, align 8
  br label %175

175:                                              ; preds = %167, %153
  %176 = phi i16* [ %154, %153 ], [ %170, %167 ]
  %177 = add nuw nsw i64 %151, 1
  %178 = add i64 %151, 1
  %179 = icmp ult i64 %178, 16
  br i1 %179, label %269, label %180

180:                                              ; preds = %175
  %181 = add i64 %151, 1
  %182 = getelementptr i16, i16* %176, i64 %181
  %183 = getelementptr i16, i16* %150, i64 %181
  %184 = icmp ult i16* %176, %183
  %185 = icmp ult i16* %150, %182
  %186 = and i1 %184, %185
  br i1 %186, label %269, label %187

187:                                              ; preds = %180
  %188 = and i64 %178, -16
  %189 = sub i64 %177, %188
  %190 = getelementptr i16, i16* %150, i64 %188
  %191 = getelementptr i16, i16* %176, i64 %188
  %192 = add i64 %188, -16
  %193 = lshr exact i64 %192, 4
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 3
  %196 = icmp ult i64 %192, 48
  br i1 %196, label %248, label %197

197:                                              ; preds = %187
  %198 = sub nsw i64 %194, %195
  br label %199

199:                                              ; preds = %199, %197
  %200 = phi i64 [ 0, %197 ], [ %245, %199 ]
  %201 = phi i64 [ %198, %197 ], [ %246, %199 ]
  %202 = getelementptr i16, i16* %150, i64 %200
  %203 = getelementptr i16, i16* %176, i64 %200
  %204 = bitcast i16* %202 to <8 x i16>*
  %205 = load <8 x i16>, <8 x i16>* %204, align 2, !alias.scope !25
  %206 = getelementptr i16, i16* %202, i64 8
  %207 = bitcast i16* %206 to <8 x i16>*
  %208 = load <8 x i16>, <8 x i16>* %207, align 2, !alias.scope !25
  %209 = bitcast i16* %203 to <8 x i16>*
  store <8 x i16> %205, <8 x i16>* %209, align 2, !alias.scope !28, !noalias !25
  %210 = getelementptr i16, i16* %203, i64 8
  %211 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %208, <8 x i16>* %211, align 2, !alias.scope !28, !noalias !25
  %212 = or i64 %200, 16
  %213 = getelementptr i16, i16* %150, i64 %212
  %214 = getelementptr i16, i16* %176, i64 %212
  %215 = bitcast i16* %213 to <8 x i16>*
  %216 = load <8 x i16>, <8 x i16>* %215, align 2, !alias.scope !25
  %217 = getelementptr i16, i16* %213, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  %219 = load <8 x i16>, <8 x i16>* %218, align 2, !alias.scope !25
  %220 = bitcast i16* %214 to <8 x i16>*
  store <8 x i16> %216, <8 x i16>* %220, align 2, !alias.scope !28, !noalias !25
  %221 = getelementptr i16, i16* %214, i64 8
  %222 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %219, <8 x i16>* %222, align 2, !alias.scope !28, !noalias !25
  %223 = or i64 %200, 32
  %224 = getelementptr i16, i16* %150, i64 %223
  %225 = getelementptr i16, i16* %176, i64 %223
  %226 = bitcast i16* %224 to <8 x i16>*
  %227 = load <8 x i16>, <8 x i16>* %226, align 2, !alias.scope !25
  %228 = getelementptr i16, i16* %224, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !25
  %231 = bitcast i16* %225 to <8 x i16>*
  store <8 x i16> %227, <8 x i16>* %231, align 2, !alias.scope !28, !noalias !25
  %232 = getelementptr i16, i16* %225, i64 8
  %233 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %233, align 2, !alias.scope !28, !noalias !25
  %234 = or i64 %200, 48
  %235 = getelementptr i16, i16* %150, i64 %234
  %236 = getelementptr i16, i16* %176, i64 %234
  %237 = bitcast i16* %235 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !25
  %239 = getelementptr i16, i16* %235, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !25
  %242 = bitcast i16* %236 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %242, align 2, !alias.scope !28, !noalias !25
  %243 = getelementptr i16, i16* %236, i64 8
  %244 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %244, align 2, !alias.scope !28, !noalias !25
  %245 = add i64 %200, 64
  %246 = add i64 %201, -4
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %199, !llvm.loop !30

248:                                              ; preds = %199, %187
  %249 = phi i64 [ 0, %187 ], [ %245, %199 ]
  %250 = icmp eq i64 %195, 0
  br i1 %250, label %267, label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %264, %251 ], [ %249, %248 ]
  %253 = phi i64 [ %265, %251 ], [ %195, %248 ]
  %254 = getelementptr i16, i16* %150, i64 %252
  %255 = getelementptr i16, i16* %176, i64 %252
  %256 = bitcast i16* %254 to <8 x i16>*
  %257 = load <8 x i16>, <8 x i16>* %256, align 2, !alias.scope !25
  %258 = getelementptr i16, i16* %254, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  %260 = load <8 x i16>, <8 x i16>* %259, align 2, !alias.scope !25
  %261 = bitcast i16* %255 to <8 x i16>*
  store <8 x i16> %257, <8 x i16>* %261, align 2, !alias.scope !28, !noalias !25
  %262 = getelementptr i16, i16* %255, i64 8
  %263 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %260, <8 x i16>* %263, align 2, !alias.scope !28, !noalias !25
  %264 = add i64 %252, 16
  %265 = add i64 %253, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %251, !llvm.loop !31

267:                                              ; preds = %251, %248
  %268 = icmp eq i64 %178, %188
  br i1 %268, label %322, label %269

269:                                              ; preds = %267, %180, %175
  %270 = phi i64 [ %177, %180 ], [ %177, %175 ], [ %189, %267 ]
  %271 = phi i16* [ %150, %180 ], [ %150, %175 ], [ %190, %267 ]
  %272 = phi i16* [ %176, %180 ], [ %176, %175 ], [ %191, %267 ]
  %273 = add i64 %270, -1
  %274 = and i64 %270, 7
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %287, label %276

276:                                              ; preds = %269, %276
  %277 = phi i64 [ %282, %276 ], [ %270, %269 ]
  %278 = phi i16* [ %284, %276 ], [ %271, %269 ]
  %279 = phi i16* [ %283, %276 ], [ %272, %269 ]
  %280 = phi i64 [ %285, %276 ], [ %274, %269 ]
  %281 = load i16, i16* %278, align 2
  store i16 %281, i16* %279, align 2
  %282 = add i64 %277, -1
  %283 = getelementptr inbounds i16, i16* %279, i64 1
  %284 = getelementptr inbounds i16, i16* %278, i64 1
  %285 = add i64 %280, -1
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %287, label %276, !llvm.loop !32

287:                                              ; preds = %276, %269
  %288 = phi i64 [ %270, %269 ], [ %282, %276 ]
  %289 = phi i16* [ %271, %269 ], [ %284, %276 ]
  %290 = phi i16* [ %272, %269 ], [ %283, %276 ]
  %291 = icmp ult i64 %273, 7
  br i1 %291, label %322, label %292

292:                                              ; preds = %287, %292
  %293 = phi i64 [ %318, %292 ], [ %288, %287 ]
  %294 = phi i16* [ %320, %292 ], [ %289, %287 ]
  %295 = phi i16* [ %319, %292 ], [ %290, %287 ]
  %296 = load i16, i16* %294, align 2
  store i16 %296, i16* %295, align 2
  %297 = getelementptr inbounds i16, i16* %295, i64 1
  %298 = getelementptr inbounds i16, i16* %294, i64 1
  %299 = load i16, i16* %298, align 2
  store i16 %299, i16* %297, align 2
  %300 = getelementptr inbounds i16, i16* %295, i64 2
  %301 = getelementptr inbounds i16, i16* %294, i64 2
  %302 = load i16, i16* %301, align 2
  store i16 %302, i16* %300, align 2
  %303 = getelementptr inbounds i16, i16* %295, i64 3
  %304 = getelementptr inbounds i16, i16* %294, i64 3
  %305 = load i16, i16* %304, align 2
  store i16 %305, i16* %303, align 2
  %306 = getelementptr inbounds i16, i16* %295, i64 4
  %307 = getelementptr inbounds i16, i16* %294, i64 4
  %308 = load i16, i16* %307, align 2
  store i16 %308, i16* %306, align 2
  %309 = getelementptr inbounds i16, i16* %295, i64 5
  %310 = getelementptr inbounds i16, i16* %294, i64 5
  %311 = load i16, i16* %310, align 2
  store i16 %311, i16* %309, align 2
  %312 = getelementptr inbounds i16, i16* %295, i64 6
  %313 = getelementptr inbounds i16, i16* %294, i64 6
  %314 = load i16, i16* %313, align 2
  store i16 %314, i16* %312, align 2
  %315 = getelementptr inbounds i16, i16* %295, i64 7
  %316 = getelementptr inbounds i16, i16* %294, i64 7
  %317 = load i16, i16* %316, align 2
  store i16 %317, i16* %315, align 2
  %318 = add i64 %293, -8
  %319 = getelementptr inbounds i16, i16* %295, i64 8
  %320 = getelementptr inbounds i16, i16* %294, i64 8
  %321 = icmp eq i64 %318, 0
  br i1 %321, label %322, label %292, !llvm.loop !33

322:                                              ; preds = %287, %292, %267, %145, %140
  %323 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %324 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %323, i64 0, i32 1, i32 1
  %325 = load i8, i8* %324, align 1
  %326 = icmp slt i8 %325, 0
  br i1 %326, label %327, label %330

327:                                              ; preds = %322
  %328 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %329 = load i8*, i8** %328, align 8
  call void @_ZdlPv(i8* %329) #15
  br label %330

330:                                              ; preds = %322, %327
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext) local_unnamed_addr #2

declare zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_(i16*, i64, i16*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxView20SanitizeTextForPasteERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %class.anon, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #13
  br label %306

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), align 2
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %17, %24
  %25 = phi i64 [ %27, %24 ], [ 0, %17 ]
  %26 = phi i16* [ %28, %24 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %17 ]
  %27 = add i64 %25, 1
  %28 = getelementptr inbounds i16, i16* %26, i64 1
  %29 = load i16, i16* %28, align 2
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %31, label %24

31:                                               ; preds = %24, %17
  %32 = phi i64 [ 0, %17 ], [ %27, %24 ]
  %33 = getelementptr inbounds i16, i16* %21, i64 %13
  %34 = icmp eq i64 %32, 0
  br label %35

35:                                               ; preds = %50, %31
  %36 = phi i16* [ %21, %31 ], [ %51, %50 ]
  br i1 %34, label %53, label %37

37:                                               ; preds = %35
  %38 = load i16, i16* %36, align 2
  br label %39

39:                                               ; preds = %44, %37
  %40 = phi i64 [ %32, %37 ], [ %46, %44 ]
  %41 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %37 ], [ %45, %44 ]
  %42 = load i16, i16* %41, align 2
  %43 = icmp eq i16 %42, %38
  br i1 %43, label %48, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds i16, i16* %41, i64 1
  %46 = add i64 %40, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %39

48:                                               ; preds = %39
  %49 = icmp eq i16* %41, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds i16, i16* %36, i64 1
  %52 = icmp eq i16* %51, %33
  br i1 %52, label %59, label %35

53:                                               ; preds = %35, %48, %44
  %54 = phi i16* [ %36, %44 ], [ %21, %35 ], [ %36, %48 ]
  %55 = ptrtoint i16* %54 to i64
  %56 = ptrtoint i16* %21 to i64
  %57 = sub i64 %55, %56
  %58 = icmp eq i64 %57, -2
  br i1 %58, label %59, label %64

59:                                               ; preds = %50, %53
  %60 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  store i8 1, i8* %61, align 1
  %62 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  store i16 32, i16* %62, align 8
  %63 = getelementptr inbounds i16, i16* %62, i64 1
  store i16 0, i16* %63, align 2
  br label %306

64:                                               ; preds = %53
  %65 = ashr exact i64 %57, 1
  %66 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #13
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 24, i1 false) #13
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7reserveEm(%"class.std::__1::basic_string"* nonnull %3, i64 %13)
  %70 = bitcast %class.anon* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #13
  %71 = getelementptr inbounds %class.anon, %class.anon* %4, i64 0, i32 0
  %72 = getelementptr inbounds %class.anon, %class.anon* %4, i64 0, i32 1
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %71, align 8
  store %"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"** %72, align 8
  %73 = load i8, i8* %7, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %23, label %125, label %75

75:                                               ; preds = %64
  %76 = load i64, i64* %10, align 8
  %77 = zext i8 %73 to i64
  %78 = select i1 %74, i64 %76, i64 %77
  %79 = load i16*, i16** %18, align 8
  %80 = select i1 %74, i16* %79, i16* %20
  %81 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %81, i64 0, i32 1, i32 1
  %83 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  br label %84

84:                                               ; preds = %249, %75
  %85 = phi i64 [ %78, %75 ], [ %259, %249 ]
  %86 = phi i16* [ %80, %75 ], [ %258, %249 ]
  %87 = phi i64 [ %65, %75 ], [ %250, %249 ]
  %88 = phi i8 [ 0, %75 ], [ %252, %249 ]
  %89 = phi i8 [ 0, %75 ], [ %251, %249 ]
  br label %90

90:                                               ; preds = %84, %90
  %91 = phi i64 [ %93, %90 ], [ 0, %84 ]
  %92 = phi i16* [ %94, %90 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %84 ]
  %93 = add i64 %91, 1
  %94 = getelementptr inbounds i16, i16* %92, i64 1
  %95 = load i16, i16* %94, align 2
  %96 = icmp eq i16 %95, 0
  br i1 %96, label %97, label %90

97:                                               ; preds = %90
  %98 = add nsw i64 %87, 1
  %99 = icmp ule i64 %85, %98
  %100 = icmp eq i64 %93, 0
  %101 = or i1 %99, %100
  br i1 %101, label %125, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds i16, i16* %86, i64 %98
  %104 = getelementptr inbounds i16, i16* %86, i64 %85
  %105 = getelementptr inbounds [0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 %93
  br label %106

106:                                              ; preds = %116, %102
  %107 = phi i16* [ %103, %102 ], [ %117, %116 ]
  %108 = load i16, i16* %107, align 2
  br label %111

109:                                              ; preds = %111
  %110 = icmp eq i16* %115, %105
  br i1 %110, label %116, label %111

111:                                              ; preds = %109, %106
  %112 = phi i16* [ %115, %109 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %106 ]
  %113 = load i16, i16* %112, align 2
  %114 = icmp eq i16 %108, %113
  %115 = getelementptr inbounds i16, i16* %112, i64 1
  br i1 %114, label %119, label %109

116:                                              ; preds = %109
  %117 = getelementptr inbounds i16, i16* %107, i64 1
  %118 = icmp eq i16* %117, %104
  br i1 %118, label %125, label %106

119:                                              ; preds = %111
  %120 = icmp eq i16* %107, %104
  %121 = ptrtoint i16* %107 to i64
  %122 = ptrtoint i16* %86 to i64
  %123 = sub i64 %121, %122
  %124 = ashr exact i64 %123, 1
  br i1 %120, label %125, label %129

125:                                              ; preds = %119, %97, %116, %64
  %126 = phi i64 [ %65, %64 ], [ %87, %116 ], [ %87, %97 ], [ %87, %119 ]
  %127 = phi i8 [ 0, %64 ], [ %89, %116 ], [ %89, %97 ], [ %89, %119 ]
  %128 = phi i8 [ 0, %64 ], [ %88, %116 ], [ %88, %97 ], [ %88, %119 ]
  call fastcc void @"_ZZN11OmniboxView20SanitizeTextForPasteERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEENK3$_0clEmm"(%class.anon* nonnull %4, i64 %126, i64 -1)
  br label %260

129:                                              ; preds = %119
  call fastcc void @"_ZZN11OmniboxView20SanitizeTextForPasteERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEENK3$_0clEmm"(%class.anon* nonnull %4, i64 %87, i64 %124)
  %130 = icmp eq i64 %123, -2
  br i1 %130, label %260, label %131

131:                                              ; preds = %129
  %132 = load i8, i8* %7, align 1
  %133 = icmp slt i8 %132, 0
  %134 = load i16*, i16** %18, align 8
  %135 = load i64, i64* %10, align 8
  %136 = zext i8 %132 to i64
  %137 = select i1 %133, i16* %134, i16* %20
  %138 = select i1 %133, i64 %135, i64 %136
  %139 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base22kWhitespaceNoCrLfUTF16E, i64 0, i64 0), align 2
  %140 = icmp eq i16 %139, 0
  br i1 %140, label %148, label %141

141:                                              ; preds = %131, %141
  %142 = phi i64 [ %144, %141 ], [ 0, %131 ]
  %143 = phi i16* [ %145, %141 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base22kWhitespaceNoCrLfUTF16E, i64 0, i64 0), %131 ]
  %144 = add i64 %142, 1
  %145 = getelementptr inbounds i16, i16* %143, i64 1
  %146 = load i16, i16* %145, align 2
  %147 = icmp eq i16 %146, 0
  br i1 %147, label %148, label %141

148:                                              ; preds = %141, %131
  %149 = phi i64 [ 0, %131 ], [ %144, %141 ]
  %150 = icmp ugt i64 %138, %124
  br i1 %150, label %151, label %260

151:                                              ; preds = %148
  %152 = getelementptr inbounds i16, i16* %137, i64 %138
  %153 = getelementptr inbounds i16, i16* %137, i64 %124
  %154 = icmp eq i64 %149, 0
  br label %155

155:                                              ; preds = %170, %151
  %156 = phi i16* [ %153, %151 ], [ %171, %170 ]
  br i1 %154, label %173, label %157

157:                                              ; preds = %155
  %158 = load i16, i16* %156, align 2
  br label %159

159:                                              ; preds = %164, %157
  %160 = phi i64 [ %149, %157 ], [ %166, %164 ]
  %161 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base22kWhitespaceNoCrLfUTF16E, i64 0, i64 0), %157 ], [ %165, %164 ]
  %162 = load i16, i16* %161, align 2
  %163 = icmp eq i16 %162, %158
  br i1 %163, label %168, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = add i64 %160, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %173, label %159

168:                                              ; preds = %159
  %169 = icmp eq i16* %161, null
  br i1 %169, label %173, label %170

170:                                              ; preds = %168
  %171 = getelementptr inbounds i16, i16* %156, i64 1
  %172 = icmp eq i16* %171, %152
  br i1 %172, label %260, label %155

173:                                              ; preds = %155, %168, %164
  %174 = phi i16* [ %156, %164 ], [ %153, %155 ], [ %156, %168 ]
  %175 = ptrtoint i16* %174 to i64
  %176 = ptrtoint i16* %137 to i64
  %177 = sub i64 %175, %176
  %178 = ashr exact i64 %177, 1
  %179 = icmp eq i64 %177, -2
  br i1 %179, label %260, label %180

180:                                              ; preds = %173
  %181 = load i16, i16* %174, align 2
  switch i16 %181, label %182 [
    i16 10, label %183
    i16 13, label %183
  ]

182:                                              ; preds = %180
  call fastcc void @"_ZZN11OmniboxView20SanitizeTextForPasteERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEENK3$_0clEmm"(%class.anon* nonnull %4, i64 %124, i64 %178)
  br label %249

183:                                              ; preds = %180, %180
  %184 = add nsw i64 %178, 1
  br label %185

185:                                              ; preds = %183, %185
  %186 = phi i64 [ %188, %185 ], [ 0, %183 ]
  %187 = phi i16* [ %189, %185 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %183 ]
  %188 = add i64 %186, 1
  %189 = getelementptr inbounds i16, i16* %187, i64 1
  %190 = load i16, i16* %189, align 2
  %191 = icmp eq i16 %190, 0
  br i1 %191, label %192, label %185

192:                                              ; preds = %185
  %193 = icmp ugt i64 %138, %184
  br i1 %193, label %194, label %260

194:                                              ; preds = %192
  %195 = getelementptr inbounds i16, i16* %137, i64 %184
  %196 = icmp eq i64 %188, 0
  br label %197

197:                                              ; preds = %212, %194
  %198 = phi i16* [ %195, %194 ], [ %213, %212 ]
  br i1 %196, label %215, label %199

199:                                              ; preds = %197
  %200 = load i16, i16* %198, align 2
  br label %201

201:                                              ; preds = %206, %199
  %202 = phi i64 [ %188, %199 ], [ %208, %206 ]
  %203 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %199 ], [ %207, %206 ]
  %204 = load i16, i16* %203, align 2
  %205 = icmp eq i16 %204, %200
  br i1 %205, label %210, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds i16, i16* %203, i64 1
  %208 = add i64 %202, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %215, label %201

210:                                              ; preds = %201
  %211 = icmp eq i16* %203, null
  br i1 %211, label %215, label %212

212:                                              ; preds = %210
  %213 = getelementptr inbounds i16, i16* %198, i64 1
  %214 = icmp eq i16* %213, %152
  br i1 %214, label %260, label %197

215:                                              ; preds = %197, %210, %206
  %216 = phi i16* [ %198, %206 ], [ %195, %197 ], [ %198, %210 ]
  %217 = ptrtoint i16* %216 to i64
  %218 = sub i64 %217, %176
  %219 = ashr exact i64 %218, 1
  %220 = icmp eq i64 %218, -2
  br i1 %220, label %260, label %221

221:                                              ; preds = %215
  %222 = load i8, i8* %82, align 1
  %223 = icmp slt i8 %222, 0
  br i1 %223, label %226, label %224

224:                                              ; preds = %221
  %225 = zext i8 %222 to i64
  br label %231

226:                                              ; preds = %221
  %227 = load i64, i64* %69, align 8
  %228 = and i64 %227, 9223372036854775807
  %229 = add nsw i64 %228, -1
  %230 = load i64, i64* %68, align 8
  br label %231

231:                                              ; preds = %226, %224
  %232 = phi i64 [ 10, %224 ], [ %229, %226 ]
  %233 = phi i64 [ %225, %224 ], [ %230, %226 ]
  %234 = icmp eq i64 %233, %232
  br i1 %234, label %235, label %238

235:                                              ; preds = %231
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* nonnull %3, i64 %232, i64 1, i64 %232, i64 %232, i64 0, i64 0) #13
  %236 = load i8, i8* %82, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %242, label %239

238:                                              ; preds = %231
  br i1 %223, label %242, label %239

239:                                              ; preds = %238, %235
  %240 = trunc i64 %233 to i8
  %241 = add i8 %240, 1
  store i8 %241, i8* %82, align 1
  br label %245

242:                                              ; preds = %238, %235
  %243 = load i16*, i16** %67, align 8
  %244 = add i64 %233, 1
  store i64 %244, i64* %68, align 8
  br label %245

245:                                              ; preds = %239, %242
  %246 = phi i16* [ %83, %239 ], [ %243, %242 ]
  %247 = getelementptr inbounds i16, i16* %246, i64 %233
  store i16 10, i16* %247, align 2
  %248 = getelementptr inbounds i16, i16* %247, i64 1
  store i16 0, i16* %248, align 2
  br label %249

249:                                              ; preds = %245, %182
  %250 = phi i64 [ %178, %182 ], [ %219, %245 ]
  %251 = phi i8 [ %89, %182 ], [ 1, %245 ]
  %252 = phi i8 [ 1, %182 ], [ %88, %245 ]
  %253 = load i8, i8* %7, align 1
  %254 = icmp slt i8 %253, 0
  %255 = load i16*, i16** %18, align 8
  %256 = load i64, i64* %10, align 8
  %257 = zext i8 %253 to i64
  %258 = select i1 %254, i16* %255, i16* %20
  %259 = select i1 %254, i64 %256, i64 %257
  br label %84

260:                                              ; preds = %148, %129, %173, %192, %215, %170, %212, %125
  %261 = phi i8 [ %127, %125 ], [ %89, %212 ], [ %89, %170 ], [ %89, %215 ], [ %89, %192 ], [ %89, %173 ], [ %89, %129 ], [ %89, %148 ]
  %262 = phi i8 [ %128, %125 ], [ %88, %212 ], [ %88, %170 ], [ %88, %215 ], [ %88, %192 ], [ %88, %173 ], [ %88, %129 ], [ %88, %148 ]
  %263 = and i8 %261, 1
  %264 = icmp eq i8 %263, 0
  %265 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br i1 %264, label %298, label %266

266:                                              ; preds = %260
  %267 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %265, i64 0, i32 1, i32 1
  %268 = load i8, i8* %267, align 1
  %269 = load i16*, i16** %67, align 8
  %270 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %271 = load i64, i64* %68, align 8
  %272 = zext i8 %268 to i64
  %273 = icmp slt i8 %268, 0
  %274 = select i1 %273, i16* %269, i16* %270
  %275 = select i1 %273, i64 %271, i64 %272
  %276 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %276) #13
  %277 = and i8 %262, 1
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %284, label %279

279:                                              ; preds = %266
  %280 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %281 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %280, i64 0, i32 1, i32 1
  store i8 1, i8* %281, align 1
  %282 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  store i16 32, i16* %282, align 8
  %283 = getelementptr inbounds i16, i16* %282, i64 1
  store i16 0, i16* %283, align 2
  br label %286

284:                                              ; preds = %266
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %276, i8 0, i64 24, i1 false) #13
  %285 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %286

286:                                              ; preds = %284, %279
  %287 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %285, %284 ], [ %280, %279 ]
  %288 = phi i64 [ 0, %284 ], [ 1, %279 ]
  %289 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %287, i64 0, i32 1, i32 1
  %290 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %291 = call zeroext i1 @_ZN4base12ReplaceCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_S4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %274, i64 %275, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZZN11OmniboxView20SanitizeTextForPasteERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEE8kNewline, i64 0, i64 0), i64 1, i16* nonnull %290, i64 %288, %"class.std::__1::basic_string"* nonnull %3) #13
  %292 = load i8, i8* %289, align 1
  %293 = icmp slt i8 %292, 0
  br i1 %293, label %294, label %297

294:                                              ; preds = %286
  %295 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %296 = load i8*, i8** %295, align 8
  call void @_ZdlPv(i8* %296) #15
  br label %297

297:                                              ; preds = %286, %294
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %276) #13
  br label %298

298:                                              ; preds = %260, %297
  call void @_ZN11OmniboxView22StripJavascriptSchemasERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #13
  %299 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %265, i64 0, i32 1, i32 1
  %300 = load i8, i8* %299, align 1
  %301 = icmp slt i8 %300, 0
  br i1 %301, label %302, label %305

302:                                              ; preds = %298
  %303 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %304 = load i8*, i8** %303, align 8
  call void @_ZdlPv(i8* %304) #15
  br label %305

305:                                              ; preds = %298, %302
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #13
  br label %306

306:                                              ; preds = %59, %305, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 9223372036854775791
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %5) #14
  unreachable

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %6
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = icmp ugt i64 %17, %1
  %19 = select i1 %18, i64 %17, i64 %1
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = add i64 %19, 8
  %23 = and i64 %22, -8
  %24 = add i64 %23, -1
  br label %25

25:                                               ; preds = %16, %21
  %26 = phi i64 [ %24, %21 ], [ 10, %16 ]
  br i1 %10, label %27, label %32

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 9223372036854775807
  %31 = add nsw i64 %30, -1
  br label %32

32:                                               ; preds = %25, %27
  %33 = phi i64 [ %31, %27 ], [ 10, %25 ]
  %34 = icmp eq i64 %26, %33
  br i1 %34, label %236, label %35

35:                                               ; preds = %32
  br i1 %10, label %36, label %39

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  br label %41

39:                                               ; preds = %35
  %40 = zext i8 %9 to i64
  br label %41

41:                                               ; preds = %39, %36
  %42 = phi i64 [ %38, %36 ], [ %40, %39 ]
  %43 = icmp eq i64 %26, 10
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = add i64 %26, 1
  %46 = icmp slt i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @abort() #14
  unreachable

48:                                               ; preds = %44
  %49 = shl i64 %45, 1
  %50 = tail call i8* @_Znwm(i64 %49) #15
  %51 = bitcast i8* %50 to i16*
  br i1 %10, label %52, label %55

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i16*, i16** %53, align 8
  br label %61

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %67

57:                                               ; preds = %41
  %58 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i16*, i16** %59, align 8
  br i1 %10, label %61, label %67

61:                                               ; preds = %57, %52
  %62 = phi i1 [ true, %52 ], [ false, %57 ]
  %63 = phi i16* [ %54, %52 ], [ %60, %57 ]
  %64 = phi i16* [ %51, %52 ], [ %58, %57 ]
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  br label %73

67:                                               ; preds = %57, %55
  %68 = phi i1 [ true, %55 ], [ false, %57 ]
  %69 = phi i1 [ false, %55 ], [ true, %57 ]
  %70 = phi i16* [ %56, %55 ], [ %60, %57 ]
  %71 = phi i16* [ %51, %55 ], [ %58, %57 ]
  %72 = zext i8 %9 to i64
  br label %73

73:                                               ; preds = %67, %61
  %74 = phi i1 [ %62, %61 ], [ %68, %67 ]
  %75 = phi i1 [ true, %61 ], [ %69, %67 ]
  %76 = phi i16* [ %63, %61 ], [ %70, %67 ]
  %77 = phi i16* [ %64, %61 ], [ %71, %67 ]
  %78 = phi i64 [ %66, %61 ], [ %72, %67 ]
  %79 = bitcast i16* %76 to i8*
  %80 = add i64 %78, 1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %225, label %82

82:                                               ; preds = %73
  %83 = icmp ult i64 %80, 16
  br i1 %83, label %172, label %84

84:                                               ; preds = %82
  %85 = getelementptr i16, i16* %77, i64 %80
  %86 = getelementptr i16, i16* %76, i64 %80
  %87 = icmp ult i16* %77, %86
  %88 = icmp ult i16* %76, %85
  %89 = and i1 %87, %88
  br i1 %89, label %172, label %90

90:                                               ; preds = %84
  %91 = and i64 %80, -16
  %92 = sub i64 %80, %91
  %93 = getelementptr i16, i16* %76, i64 %91
  %94 = getelementptr i16, i16* %77, i64 %91
  %95 = add i64 %91, -16
  %96 = lshr exact i64 %95, 4
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 3
  %99 = icmp ult i64 %95, 48
  br i1 %99, label %151, label %100

100:                                              ; preds = %90
  %101 = sub nsw i64 %97, %98
  br label %102

102:                                              ; preds = %102, %100
  %103 = phi i64 [ 0, %100 ], [ %148, %102 ]
  %104 = phi i64 [ %101, %100 ], [ %149, %102 ]
  %105 = getelementptr i16, i16* %76, i64 %103
  %106 = getelementptr i16, i16* %77, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !34
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !34
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !37, !noalias !34
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !37, !noalias !34
  %115 = or i64 %103, 16
  %116 = getelementptr i16, i16* %76, i64 %115
  %117 = getelementptr i16, i16* %77, i64 %115
  %118 = bitcast i16* %116 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !34
  %120 = getelementptr i16, i16* %116, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !34
  %123 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %123, align 2, !alias.scope !37, !noalias !34
  %124 = getelementptr i16, i16* %117, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !37, !noalias !34
  %126 = or i64 %103, 32
  %127 = getelementptr i16, i16* %76, i64 %126
  %128 = getelementptr i16, i16* %77, i64 %126
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !34
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !34
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !37, !noalias !34
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !37, !noalias !34
  %137 = or i64 %103, 48
  %138 = getelementptr i16, i16* %76, i64 %137
  %139 = getelementptr i16, i16* %77, i64 %137
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !34
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !34
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !37, !noalias !34
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !37, !noalias !34
  %148 = add i64 %103, 64
  %149 = add i64 %104, -4
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %102, !llvm.loop !39

151:                                              ; preds = %102, %90
  %152 = phi i64 [ 0, %90 ], [ %148, %102 ]
  %153 = icmp eq i64 %98, 0
  br i1 %153, label %170, label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %167, %154 ], [ %152, %151 ]
  %156 = phi i64 [ %168, %154 ], [ %98, %151 ]
  %157 = getelementptr i16, i16* %76, i64 %155
  %158 = getelementptr i16, i16* %77, i64 %155
  %159 = bitcast i16* %157 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !34
  %161 = getelementptr i16, i16* %157, i64 8
  %162 = bitcast i16* %161 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !34
  %164 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %164, align 2, !alias.scope !37, !noalias !34
  %165 = getelementptr i16, i16* %158, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %166, align 2, !alias.scope !37, !noalias !34
  %167 = add i64 %155, 16
  %168 = add i64 %156, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %154, !llvm.loop !40

170:                                              ; preds = %154, %151
  %171 = icmp eq i64 %80, %91
  br i1 %171, label %225, label %172

172:                                              ; preds = %170, %84, %82
  %173 = phi i64 [ %80, %84 ], [ %80, %82 ], [ %92, %170 ]
  %174 = phi i16* [ %76, %84 ], [ %76, %82 ], [ %93, %170 ]
  %175 = phi i16* [ %77, %84 ], [ %77, %82 ], [ %94, %170 ]
  %176 = add i64 %173, -1
  %177 = and i64 %173, 7
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %190, label %179

179:                                              ; preds = %172, %179
  %180 = phi i64 [ %185, %179 ], [ %173, %172 ]
  %181 = phi i16* [ %187, %179 ], [ %174, %172 ]
  %182 = phi i16* [ %186, %179 ], [ %175, %172 ]
  %183 = phi i64 [ %188, %179 ], [ %177, %172 ]
  %184 = load i16, i16* %181, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %180, -1
  %186 = getelementptr inbounds i16, i16* %182, i64 1
  %187 = getelementptr inbounds i16, i16* %181, i64 1
  %188 = add i64 %183, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %179, !llvm.loop !41

190:                                              ; preds = %179, %172
  %191 = phi i64 [ %173, %172 ], [ %185, %179 ]
  %192 = phi i16* [ %174, %172 ], [ %187, %179 ]
  %193 = phi i16* [ %175, %172 ], [ %186, %179 ]
  %194 = icmp ult i64 %176, 7
  br i1 %194, label %225, label %195

195:                                              ; preds = %190, %195
  %196 = phi i64 [ %221, %195 ], [ %191, %190 ]
  %197 = phi i16* [ %223, %195 ], [ %192, %190 ]
  %198 = phi i16* [ %222, %195 ], [ %193, %190 ]
  %199 = load i16, i16* %197, align 2
  store i16 %199, i16* %198, align 2
  %200 = getelementptr inbounds i16, i16* %198, i64 1
  %201 = getelementptr inbounds i16, i16* %197, i64 1
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %198, i64 2
  %204 = getelementptr inbounds i16, i16* %197, i64 2
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %198, i64 3
  %207 = getelementptr inbounds i16, i16* %197, i64 3
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %198, i64 4
  %210 = getelementptr inbounds i16, i16* %197, i64 4
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %198, i64 5
  %213 = getelementptr inbounds i16, i16* %197, i64 5
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = getelementptr inbounds i16, i16* %198, i64 6
  %216 = getelementptr inbounds i16, i16* %197, i64 6
  %217 = load i16, i16* %216, align 2
  store i16 %217, i16* %215, align 2
  %218 = getelementptr inbounds i16, i16* %198, i64 7
  %219 = getelementptr inbounds i16, i16* %197, i64 7
  %220 = load i16, i16* %219, align 2
  store i16 %220, i16* %218, align 2
  %221 = add i64 %196, -8
  %222 = getelementptr inbounds i16, i16* %198, i64 8
  %223 = getelementptr inbounds i16, i16* %197, i64 8
  %224 = icmp eq i64 %221, 0
  br i1 %224, label %225, label %195, !llvm.loop !42

225:                                              ; preds = %190, %195, %170, %73
  br i1 %75, label %226, label %227

226:                                              ; preds = %225
  tail call void @_ZdlPv(i8* %79) #15
  br label %227

227:                                              ; preds = %226, %225
  br i1 %74, label %228, label %234

228:                                              ; preds = %227
  %229 = add i64 %26, 1
  %230 = or i64 %229, -9223372036854775808
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %232, align 8
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %77, i16** %233, align 8
  br label %236

234:                                              ; preds = %227
  %235 = trunc i64 %42 to i8
  store i8 %235, i8* %8, align 1
  br label %236

236:                                              ; preds = %234, %228, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN11OmniboxView20SanitizeTextForPasteERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEENK3$_0clEmm"(%class.anon* nocapture readonly, i64, i64) unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = icmp eq i64 %2, -1
  %9 = sub i64 %2, %1
  %10 = select i1 %8, i64 -1, i64 %9
  %11 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %7, i64 %1, i64 %10, %"class.std::__1::allocator"* dereferenceable(1) %11) #13
  %12 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 1
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %23 = zext i8 %16 to i64
  %24 = select i1 %17, i16* %19, i16* %22
  %25 = select i1 %17, i64 %21, i64 %23
  %26 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 9223372036854775807
  %34 = add nsw i64 %33, -1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  br label %39

37:                                               ; preds = %3
  %38 = zext i8 %28 to i64
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i64 [ %34, %30 ], [ 10, %37 ]
  %41 = phi i64 [ %36, %30 ], [ %38, %37 ]
  %42 = sub i64 %40, %41
  %43 = icmp ult i64 %42, %25
  br i1 %43, label %208, label %44

44:                                               ; preds = %39
  %45 = icmp eq i64 %25, 0
  br i1 %45, label %211, label %46

46:                                               ; preds = %44
  br i1 %29, label %47, label %50

47:                                               ; preds = %46
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i16*, i16** %48, align 8
  br label %52

50:                                               ; preds = %46
  %51 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  br label %52

52:                                               ; preds = %50, %47
  %53 = phi i16* [ %49, %47 ], [ %51, %50 ]
  %54 = getelementptr inbounds i16, i16* %53, i64 %41
  %55 = icmp ult i64 %25, 16
  br i1 %55, label %145, label %56

56:                                               ; preds = %52
  %57 = add i64 %25, %41
  %58 = getelementptr i16, i16* %53, i64 %57
  %59 = getelementptr i16, i16* %24, i64 %25
  %60 = icmp ult i16* %54, %59
  %61 = icmp ult i16* %24, %58
  %62 = and i1 %60, %61
  br i1 %62, label %145, label %63

63:                                               ; preds = %56
  %64 = and i64 %25, -16
  %65 = sub i64 %25, %64
  %66 = getelementptr i16, i16* %24, i64 %64
  %67 = getelementptr i16, i16* %54, i64 %64
  %68 = add i64 %64, -16
  %69 = lshr exact i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 48
  br i1 %72, label %124, label %73

73:                                               ; preds = %63
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %121, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %122, %75 ]
  %78 = getelementptr i16, i16* %24, i64 %76
  %79 = getelementptr i16, i16* %54, i64 %76
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !43
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !43
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !46, !noalias !43
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !46, !noalias !43
  %88 = or i64 %76, 16
  %89 = getelementptr i16, i16* %24, i64 %88
  %90 = getelementptr i16, i16* %54, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !43
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !43
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !46, !noalias !43
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !46, !noalias !43
  %99 = or i64 %76, 32
  %100 = getelementptr i16, i16* %24, i64 %99
  %101 = getelementptr i16, i16* %54, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !43
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !43
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !46, !noalias !43
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !46, !noalias !43
  %110 = or i64 %76, 48
  %111 = getelementptr i16, i16* %24, i64 %110
  %112 = getelementptr i16, i16* %54, i64 %110
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !43
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !43
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !46, !noalias !43
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !46, !noalias !43
  %121 = add i64 %76, 64
  %122 = add i64 %77, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %75, !llvm.loop !48

124:                                              ; preds = %75, %63
  %125 = phi i64 [ 0, %63 ], [ %121, %75 ]
  %126 = icmp eq i64 %71, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %124, %127
  %128 = phi i64 [ %140, %127 ], [ %125, %124 ]
  %129 = phi i64 [ %141, %127 ], [ %71, %124 ]
  %130 = getelementptr i16, i16* %24, i64 %128
  %131 = getelementptr i16, i16* %54, i64 %128
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !43
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !43
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !46, !noalias !43
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !46, !noalias !43
  %140 = add i64 %128, 16
  %141 = add i64 %129, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %127, !llvm.loop !49

143:                                              ; preds = %127, %124
  %144 = icmp eq i64 %25, %64
  br i1 %144, label %198, label %145

145:                                              ; preds = %143, %56, %52
  %146 = phi i64 [ %25, %56 ], [ %25, %52 ], [ %65, %143 ]
  %147 = phi i16* [ %24, %56 ], [ %24, %52 ], [ %66, %143 ]
  %148 = phi i16* [ %54, %56 ], [ %54, %52 ], [ %67, %143 ]
  %149 = add i64 %146, -1
  %150 = and i64 %146, 7
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %163, label %152

152:                                              ; preds = %145, %152
  %153 = phi i64 [ %158, %152 ], [ %146, %145 ]
  %154 = phi i16* [ %160, %152 ], [ %147, %145 ]
  %155 = phi i16* [ %159, %152 ], [ %148, %145 ]
  %156 = phi i64 [ %161, %152 ], [ %150, %145 ]
  %157 = load i16, i16* %154, align 2
  store i16 %157, i16* %155, align 2
  %158 = add i64 %153, -1
  %159 = getelementptr inbounds i16, i16* %155, i64 1
  %160 = getelementptr inbounds i16, i16* %154, i64 1
  %161 = add i64 %156, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %152, !llvm.loop !50

163:                                              ; preds = %152, %145
  %164 = phi i64 [ %146, %145 ], [ %158, %152 ]
  %165 = phi i16* [ %147, %145 ], [ %160, %152 ]
  %166 = phi i16* [ %148, %145 ], [ %159, %152 ]
  %167 = icmp ult i64 %149, 7
  br i1 %167, label %198, label %168

168:                                              ; preds = %163, %168
  %169 = phi i64 [ %194, %168 ], [ %164, %163 ]
  %170 = phi i16* [ %196, %168 ], [ %165, %163 ]
  %171 = phi i16* [ %195, %168 ], [ %166, %163 ]
  %172 = load i16, i16* %170, align 2
  store i16 %172, i16* %171, align 2
  %173 = getelementptr inbounds i16, i16* %171, i64 1
  %174 = getelementptr inbounds i16, i16* %170, i64 1
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %171, i64 2
  %177 = getelementptr inbounds i16, i16* %170, i64 2
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %171, i64 3
  %180 = getelementptr inbounds i16, i16* %170, i64 3
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %171, i64 4
  %183 = getelementptr inbounds i16, i16* %170, i64 4
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %171, i64 5
  %186 = getelementptr inbounds i16, i16* %170, i64 5
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %171, i64 6
  %189 = getelementptr inbounds i16, i16* %170, i64 6
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %171, i64 7
  %192 = getelementptr inbounds i16, i16* %170, i64 7
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = add i64 %169, -8
  %195 = getelementptr inbounds i16, i16* %171, i64 8
  %196 = getelementptr inbounds i16, i16* %170, i64 8
  %197 = icmp eq i64 %194, 0
  br i1 %197, label %198, label %168, !llvm.loop !51

198:                                              ; preds = %163, %168, %143
  %199 = add i64 %41, %25
  %200 = load i8, i8* %27, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %199, i64* %203, align 8
  br label %206

204:                                              ; preds = %198
  %205 = trunc i64 %199 to i8
  store i8 %205, i8* %27, align 1
  br label %206

206:                                              ; preds = %204, %202
  %207 = getelementptr inbounds i16, i16* %53, i64 %199
  store i16 0, i16* %207, align 2
  br label %211

208:                                              ; preds = %39
  %209 = add i64 %41, %25
  %210 = sub i64 %209, %40
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %13, i64 %40, i64 %210, i64 %41, i64 %41, i64 0, i64 %25, i16* %24) #13
  br label %211

211:                                              ; preds = %44, %206, %208
  %212 = load i8, i8* %15, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %211
  %215 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %216 = load i8*, i8** %215, align 8
  call void @_ZdlPv(i8* %216) #15
  br label %217

217:                                              ; preds = %211, %214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret void
}

declare zeroext i1 @_ZN4base12ReplaceCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_S4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i16*, i64, i16*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxViewD2Ev(%class.OmniboxView* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*] }, { [40 x i8*] }* @_ZTV11OmniboxView, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %3, align 8
  store %class.OmniboxEditModel* null, %class.OmniboxEditModel** %3, align 8
  %5 = icmp eq %class.OmniboxEditModel* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.OmniboxEditModel* %4 to void (%class.OmniboxEditModel*)***
  %8 = load void (%class.OmniboxEditModel*)**, void (%class.OmniboxEditModel*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.OmniboxEditModel*)*, void (%class.OmniboxEditModel*)** %8, i64 1
  %10 = load void (%class.OmniboxEditModel*)*, void (%class.OmniboxEditModel*)** %9, align 8
  tail call void %10(%class.OmniboxEditModel* nonnull %4) #13
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN11OmniboxViewD0Ev(%class.OmniboxView* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxView9OpenMatchERK17AutocompleteMatch21WindowOpenDispositionRK4GURLRKNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEmN4base9TimeTicksE(%class.OmniboxView* nocapture readonly, %struct.AutocompleteMatch* dereferenceable(1600), i32, %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), i64, i64) unnamed_addr #0 align 2 {
  %8 = alloca %struct.AutocompleteMatch, align 8
  %9 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %1, i64 0, i32 11, i32 1
  %10 = load i8, i8* %9, align 8, !range !52
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %13, align 8
  %15 = icmp eq %class.OmniboxEditModel* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  call void @_ZN17AutocompleteMatchC1ERKS_(%struct.AutocompleteMatch* nonnull %8, %struct.AutocompleteMatch* dereferenceable(1600) %1) #13
  call void @_ZN16OmniboxEditModel9OpenMatchE17AutocompleteMatch21WindowOpenDispositionRK4GURLRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEmN4base9TimeTicksE(%class.OmniboxEditModel* nonnull %14, %struct.AutocompleteMatch* nonnull %8, i32 %2, %class.GURL* dereferenceable(120) %3, %"class.std::__1::basic_string"* dereferenceable(24) %4, i64 %5, i64 %6) #13
  call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* nonnull %8) #13
  br label %17

17:                                               ; preds = %12, %7, %16
  ret void
}

declare void @_ZN16OmniboxEditModel9OpenMatchE17AutocompleteMatch21WindowOpenDispositionRK4GURLRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEmN4base9TimeTicksE(%class.OmniboxEditModel*, %struct.AutocompleteMatch*, i32, %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), i64, i64) local_unnamed_addr #2

declare void @_ZN17AutocompleteMatchC1ERKS_(%struct.AutocompleteMatch*, %struct.AutocompleteMatch* dereferenceable(1600)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11OmniboxView16IsEditingOrEmptyEv(%class.OmniboxView*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %2, align 8
  %4 = icmp eq %class.OmniboxEditModel* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.OmniboxEditModel, %class.OmniboxEditModel* %3, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !52
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %5, %1
  %10 = bitcast %class.OmniboxView* %0 to i32 (%class.OmniboxView*)***
  %11 = load i32 (%class.OmniboxView*)**, i32 (%class.OmniboxView*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%class.OmniboxView*)*, i32 (%class.OmniboxView*)** %11, i64 34
  %13 = load i32 (%class.OmniboxView*)*, i32 (%class.OmniboxView*)** %12, align 8
  %14 = tail call i32 %13(%class.OmniboxView* %0) #13
  %15 = icmp eq i32 %14, 0
  br label %16

16:                                               ; preds = %5, %9
  %17 = phi i1 [ true, %5 ], [ %15, %9 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11OmniboxView7GetIconEijN4base12OnceCallbackIFvRKN3gfx5ImageEEEE(%"class.ui::ImageModel"* noalias sret, %class.OmniboxView* nocapture readonly, i32, i32, %"class.base::OnceCallback.216"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.AutocompleteMatch, align 8
  %7 = alloca %"class.gfx::Image", align 8
  %8 = alloca %struct.AutocompleteMatch, align 8
  %9 = alloca %"class.gfx::Image", align 8
  %10 = alloca %"class.base::OnceCallback.216", align 8
  %11 = alloca %"class.gfx::Image", align 8
  %12 = alloca %"class.base::OnceCallback.216", align 8
  %13 = alloca %"class.gfx::Image", align 8
  %14 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %14, align 8
  %16 = icmp eq %class.OmniboxEditModel* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %5
  %18 = bitcast %struct.AutocompleteMatch* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1600, i8* nonnull %18) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 1600, i1 false)
  call void @_ZN17AutocompleteMatchC1Ev(%struct.AutocompleteMatch* nonnull %6) #13
  %19 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %6, i64 0, i32 28
  store i32 0, i32* %19, align 4
  %20 = call %"struct.gfx::VectorIcon"* @_ZNK17AutocompleteMatch13GetVectorIconEb(%struct.AutocompleteMatch* nonnull %6, i1 zeroext false) #13
  call void @_ZN2ui10ImageModel14FromVectorIconERKN3gfx10VectorIconEjiPS3_(%"class.ui::ImageModel"* sret %0, %"struct.gfx::VectorIcon"* %20, i32 %3, i32 %2, %"struct.gfx::VectorIcon"* null) #13
  call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 1600, i8* nonnull %18) #13
  br label %108

21:                                               ; preds = %5
  %22 = tail call zeroext i1 @_ZNK16OmniboxEditModel25ShouldShowCurrentPageIconEv(%class.OmniboxEditModel* nonnull %15) #13
  br i1 %22, label %23, label %36

23:                                               ; preds = %21
  %24 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %1, i64 0, i32 2
  %25 = load %class.OmniboxEditController*, %class.OmniboxEditController** %24, align 8
  %26 = bitcast %class.OmniboxEditController* %25 to %class.LocationBarModel* (%class.OmniboxEditController*)***
  %27 = load %class.LocationBarModel* (%class.OmniboxEditController*)**, %class.LocationBarModel* (%class.OmniboxEditController*)*** %26, align 8
  %28 = getelementptr inbounds %class.LocationBarModel* (%class.OmniboxEditController*)*, %class.LocationBarModel* (%class.OmniboxEditController*)** %27, i64 4
  %29 = load %class.LocationBarModel* (%class.OmniboxEditController*)*, %class.LocationBarModel* (%class.OmniboxEditController*)** %28, align 8
  %30 = tail call %class.LocationBarModel* %29(%class.OmniboxEditController* %25) #13
  %31 = bitcast %class.LocationBarModel* %30 to %"struct.gfx::VectorIcon"* (%class.LocationBarModel*)***
  %32 = load %"struct.gfx::VectorIcon"* (%class.LocationBarModel*)**, %"struct.gfx::VectorIcon"* (%class.LocationBarModel*)*** %31, align 8
  %33 = getelementptr inbounds %"struct.gfx::VectorIcon"* (%class.LocationBarModel*)*, %"struct.gfx::VectorIcon"* (%class.LocationBarModel*)** %32, i64 7
  %34 = load %"struct.gfx::VectorIcon"* (%class.LocationBarModel*)*, %"struct.gfx::VectorIcon"* (%class.LocationBarModel*)** %33, align 8
  %35 = tail call %"struct.gfx::VectorIcon"* %34(%class.LocationBarModel* %30) #13
  tail call void @_ZN2ui10ImageModel14FromVectorIconERKN3gfx10VectorIconEjiPS3_(%"class.ui::ImageModel"* sret %0, %"struct.gfx::VectorIcon"* %35, i32 %3, i32 %2, %"struct.gfx::VectorIcon"* null) #13
  br label %108

36:                                               ; preds = %21
  %37 = bitcast %"class.gfx::Image"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  %38 = getelementptr inbounds %"class.gfx::Image", %"class.gfx::Image"* %7, i64 0, i32 0, i32 0
  store %"class.gfx::internal::ImageStorage"* inttoptr (i64 -6148914691236517206 to %"class.gfx::internal::ImageStorage"*), %"class.gfx::internal::ImageStorage"** %38, align 8
  call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* nonnull %7) #13
  %39 = bitcast %struct.AutocompleteMatch* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1600, i8* nonnull %39) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 1600, i1 false)
  %40 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %14, align 8
  %41 = bitcast %class.OmniboxEditModel* %40 to void (%struct.AutocompleteMatch*, %class.OmniboxEditModel*, %class.GURL*)***
  %42 = load void (%struct.AutocompleteMatch*, %class.OmniboxEditModel*, %class.GURL*)**, void (%struct.AutocompleteMatch*, %class.OmniboxEditModel*, %class.GURL*)*** %41, align 8
  %43 = getelementptr inbounds void (%struct.AutocompleteMatch*, %class.OmniboxEditModel*, %class.GURL*)*, void (%struct.AutocompleteMatch*, %class.OmniboxEditModel*, %class.GURL*)** %42, i64 2
  %44 = load void (%struct.AutocompleteMatch*, %class.OmniboxEditModel*, %class.GURL*)*, void (%struct.AutocompleteMatch*, %class.OmniboxEditModel*, %class.GURL*)** %43, align 8
  call void %44(%struct.AutocompleteMatch* nonnull sret %8, %class.OmniboxEditModel* %40, %class.GURL* null) #13
  %45 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %8, i64 0, i32 28
  %46 = load i32, i32* %45, align 4
  %47 = call zeroext i1 @_ZN17AutocompleteMatch12IsSearchTypeEN21AutocompleteMatchType4TypeE(i32 %46) #13
  br i1 %47, label %48, label %61

48:                                               ; preds = %36
  %49 = bitcast %"class.gfx::Image"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #13
  %50 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %14, align 8
  %51 = getelementptr inbounds %class.OmniboxEditModel, %class.OmniboxEditModel* %50, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %class.OmniboxClient*, %class.OmniboxClient** %51, align 8
  %53 = getelementptr inbounds %"class.base::OnceCallback.216", %"class.base::OnceCallback.216"* %4, i64 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.base::OnceCallback.216"* %4 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.base::OnceCallback.216"* %10 to i64*
  store i64 %55, i64* %56, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %53, align 8
  %57 = bitcast %class.OmniboxClient* %52 to void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.base::OnceCallback.216"*)***
  %58 = load void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.base::OnceCallback.216"*)**, void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.base::OnceCallback.216"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.base::OnceCallback.216"*)*, void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.base::OnceCallback.216"*)** %58, i64 27
  %60 = load void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.base::OnceCallback.216"*)*, void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.base::OnceCallback.216"*)** %59, align 8
  call void %60(%"class.gfx::Image"* nonnull sret %9, %class.OmniboxClient* %52, %"class.base::OnceCallback.216"* nonnull %10) #13
  br label %75

61:                                               ; preds = %36
  %62 = bitcast %"class.gfx::Image"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #13
  %63 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %14, align 8
  %64 = getelementptr inbounds %class.OmniboxEditModel, %class.OmniboxEditModel* %63, i64 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %class.OmniboxClient*, %class.OmniboxClient** %64, align 8
  %66 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %8, i64 0, i32 11
  %67 = getelementptr inbounds %"class.base::OnceCallback.216", %"class.base::OnceCallback.216"* %4, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.base::OnceCallback.216"* %4 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.base::OnceCallback.216"* %12 to i64*
  store i64 %69, i64* %70, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %67, align 8
  %71 = bitcast %class.OmniboxClient* %65 to void (%"class.gfx::Image"*, %class.OmniboxClient*, %class.GURL*, %"class.base::OnceCallback.216"*)***
  %72 = load void (%"class.gfx::Image"*, %class.OmniboxClient*, %class.GURL*, %"class.base::OnceCallback.216"*)**, void (%"class.gfx::Image"*, %class.OmniboxClient*, %class.GURL*, %"class.base::OnceCallback.216"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.gfx::Image"*, %class.OmniboxClient*, %class.GURL*, %"class.base::OnceCallback.216"*)*, void (%"class.gfx::Image"*, %class.OmniboxClient*, %class.GURL*, %"class.base::OnceCallback.216"*)** %72, i64 26
  %74 = load void (%"class.gfx::Image"*, %class.OmniboxClient*, %class.GURL*, %"class.base::OnceCallback.216"*)*, void (%"class.gfx::Image"*, %class.OmniboxClient*, %class.GURL*, %"class.base::OnceCallback.216"*)** %73, align 8
  call void %74(%"class.gfx::Image"* nonnull sret %11, %class.OmniboxClient* %65, %class.GURL* dereferenceable(120) %66, %"class.base::OnceCallback.216"* nonnull %12) #13
  br label %75

75:                                               ; preds = %61, %48
  %76 = phi %"class.gfx::Image"* [ %11, %61 ], [ %9, %48 ]
  %77 = phi %"class.base::OnceCallback.216"* [ %12, %61 ], [ %10, %48 ]
  %78 = phi i8* [ %62, %61 ], [ %49, %48 ]
  %79 = call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSEOS0_(%"class.gfx::Image"* nonnull %7, %"class.gfx::Image"* nonnull dereferenceable(8) %76) #13
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %76) #13
  %80 = getelementptr inbounds %"class.base::OnceCallback.216", %"class.base::OnceCallback.216"* %77, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #13
  %81 = call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* nonnull %7) #13
  br i1 %81, label %91, label %82

82:                                               ; preds = %75
  %83 = bitcast %"class.gfx::Image"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  %84 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %14, align 8
  %85 = getelementptr inbounds %class.OmniboxEditModel, %class.OmniboxEditModel* %84, i64 0, i32 1, i32 0, i32 0, i32 0
  %86 = load %class.OmniboxClient*, %class.OmniboxClient** %85, align 8
  %87 = bitcast %class.OmniboxClient* %86 to void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.gfx::Image"*)***
  %88 = load void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.gfx::Image"*)**, void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.gfx::Image"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.gfx::Image"*)*, void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.gfx::Image"*)** %88, i64 21
  %90 = load void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.gfx::Image"*)*, void (%"class.gfx::Image"*, %class.OmniboxClient*, %"class.gfx::Image"*)** %89, align 8
  call void %90(%"class.gfx::Image"* nonnull sret %13, %class.OmniboxClient* %86, %"class.gfx::Image"* nonnull dereferenceable(8) %7) #13
  call void @_ZN2ui10ImageModel9FromImageERKN3gfx5ImageE(%"class.ui::ImageModel"* sret %0, %"class.gfx::Image"* nonnull dereferenceable(8) %13) #13
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #13
  br label %107

91:                                               ; preds = %75
  %92 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %14, align 8
  %93 = getelementptr inbounds %class.OmniboxEditModel, %class.OmniboxEditModel* %92, i64 0, i32 1, i32 0, i32 0, i32 0
  %94 = load %class.OmniboxClient*, %class.OmniboxClient** %93, align 8
  %95 = bitcast %class.OmniboxClient* %94 to %"class.bookmarks::BookmarkModel"* (%class.OmniboxClient*)***
  %96 = load %"class.bookmarks::BookmarkModel"* (%class.OmniboxClient*)**, %"class.bookmarks::BookmarkModel"* (%class.OmniboxClient*)*** %95, align 8
  %97 = getelementptr inbounds %"class.bookmarks::BookmarkModel"* (%class.OmniboxClient*)*, %"class.bookmarks::BookmarkModel"* (%class.OmniboxClient*)** %96, i64 12
  %98 = load %"class.bookmarks::BookmarkModel"* (%class.OmniboxClient*)*, %"class.bookmarks::BookmarkModel"* (%class.OmniboxClient*)** %97, align 8
  %99 = call %"class.bookmarks::BookmarkModel"* %98(%class.OmniboxClient* %94) #13
  %100 = icmp eq %"class.bookmarks::BookmarkModel"* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %91
  %102 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %8, i64 0, i32 11
  %103 = call zeroext i1 @_ZN9bookmarks13BookmarkModel12IsBookmarkedERK4GURL(%"class.bookmarks::BookmarkModel"* nonnull %99, %class.GURL* dereferenceable(120) %102) #13
  br label %104

104:                                              ; preds = %91, %101
  %105 = phi i1 [ false, %91 ], [ %103, %101 ]
  %106 = call %"struct.gfx::VectorIcon"* @_ZNK17AutocompleteMatch13GetVectorIconEb(%struct.AutocompleteMatch* nonnull %8, i1 zeroext %105) #13
  call void @_ZN2ui10ImageModel14FromVectorIconERKN3gfx10VectorIconEjiPS3_(%"class.ui::ImageModel"* sret %0, %"struct.gfx::VectorIcon"* %106, i32 %3, i32 %2, %"struct.gfx::VectorIcon"* null) #13
  br label %107

107:                                              ; preds = %104, %82
  call void @_ZN17AutocompleteMatchD1Ev(%struct.AutocompleteMatch* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 1600, i8* nonnull %39) #13
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  br label %108

108:                                              ; preds = %107, %23, %17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN17AutocompleteMatchC1Ev(%struct.AutocompleteMatch*) unnamed_addr #2

declare %"struct.gfx::VectorIcon"* @_ZNK17AutocompleteMatch13GetVectorIconEb(%struct.AutocompleteMatch*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2ui10ImageModel14FromVectorIconERKN3gfx10VectorIconEjiPS3_(%"class.ui::ImageModel"* sret, %"struct.gfx::VectorIcon"*, i32, i32, %"struct.gfx::VectorIcon"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK16OmniboxEditModel25ShouldShowCurrentPageIconEv(%class.OmniboxEditModel*) local_unnamed_addr #2

declare void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"*) unnamed_addr #2

declare zeroext i1 @_ZN17AutocompleteMatch12IsSearchTypeEN21AutocompleteMatchType4TypeE(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSEOS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

declare zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"*) local_unnamed_addr #2

declare void @_ZN2ui10ImageModel9FromImageERKN3gfx5ImageE(%"class.ui::ImageModel"* sret, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN9bookmarks13BookmarkModel12IsBookmarkedERK4GURL(%"class.bookmarks::BookmarkModel"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxView11SetUserTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.OmniboxView*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.OmniboxView* %0 to void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i1)***
  %4 = load void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i1)**, void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i1)*** %3, align 8
  %5 = getelementptr inbounds void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i1)*, void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i1)** %4, i64 5
  %6 = load void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i1)*, void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i1)** %5, align 8
  tail call void %6(%class.OmniboxView* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext true) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxView11SetUserTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEb(%class.OmniboxView*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %4, align 8
  %6 = icmp eq %class.OmniboxEditModel* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZN16OmniboxEditModel11SetUserTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.OmniboxEditModel* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  br label %8

8:                                                ; preds = %3, %7
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = bitcast %class.OmniboxView* %0 to void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i64, i1, i1)***
  %18 = load void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i64, i1, i1)**, void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i64, i1, i1)*** %17, align 8
  %19 = getelementptr inbounds void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i64, i1, i1)*, void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i64, i1, i1)** %18, i64 6
  %20 = load void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i64, i1, i1)*, void (%class.OmniboxView*, %"class.std::__1::basic_string"*, i64, i1, i1)** %19, align 8
  tail call void %20(%class.OmniboxView* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %16, i1 zeroext %2, i1 zeroext true) #13
  ret void
}

declare void @_ZN16OmniboxEditModel11SetUserTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.OmniboxEditModel*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxView9RevertAllEv(%class.OmniboxView*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.OmniboxView* %0 to void (%class.OmniboxView*)***
  %3 = load void (%class.OmniboxView*)**, void (%class.OmniboxView*)*** %2, align 8
  %4 = getelementptr inbounds void (%class.OmniboxView*)*, void (%class.OmniboxView*)** %3, i64 16
  %5 = load void (%class.OmniboxView*)*, void (%class.OmniboxView*)** %4, align 8
  tail call void %5(%class.OmniboxView* %0) #13
  %6 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %6, align 8
  %8 = icmp eq %class.OmniboxEditModel* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZN16OmniboxEditModel6RevertEv(%class.OmniboxEditModel* nonnull %7) #13
  br label %10

10:                                               ; preds = %1, %9
  %11 = load void (%class.OmniboxView*)**, void (%class.OmniboxView*)*** %2, align 8
  %12 = getelementptr inbounds void (%class.OmniboxView*)*, void (%class.OmniboxView*)** %11, i64 33
  %13 = load void (%class.OmniboxView*)*, void (%class.OmniboxView*)** %12, align 8
  tail call void %13(%class.OmniboxView* %0) #13
  ret void
}

declare void @_ZN16OmniboxEditModel6RevertEv(%class.OmniboxEditModel*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxView17CloseOmniboxPopupEv(%class.OmniboxView* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %2, align 8
  %4 = icmp eq %class.OmniboxEditModel* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN16OmniboxEditModel16StopAutocompleteEv(%class.OmniboxEditModel* nonnull %3) #13
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN16OmniboxEditModel16StopAutocompleteEv(%class.OmniboxEditModel*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK11OmniboxView17IsImeShowingPopupEv(%class.OmniboxView* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11OmniboxView28ShowVirtualKeyboardIfEnabledEv(%class.OmniboxView* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11OmniboxView15HideImeIfNeededEv(%class.OmniboxView* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK11OmniboxView27IsIndicatingQueryRefinementEv(%class.OmniboxView* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxView8GetStateEPNS_5StateE(%class.OmniboxView*, %"struct.OmniboxView::State"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = bitcast %class.OmniboxView* %0 to void (%"class.std::__1::basic_string"*, %class.OmniboxView*)***
  %6 = load void (%"class.std::__1::basic_string"*, %class.OmniboxView*)**, void (%"class.std::__1::basic_string"*, %class.OmniboxView*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %class.OmniboxView*)*, void (%"class.std::__1::basic_string"*, %class.OmniboxView*)** %6, i64 4
  %8 = load void (%"class.std::__1::basic_string"*, %class.OmniboxView*)*, void (%"class.std::__1::basic_string"*, %class.OmniboxView*)** %7, align 8
  call void %8(%"class.std::__1::basic_string"* nonnull sret %3, %class.OmniboxView* %0) #13
  %9 = bitcast %"struct.OmniboxView::State"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = bitcast %"struct.OmniboxView::State"* %1 to i8**
  %15 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %15) #15
  br label %16

16:                                               ; preds = %13, %2
  %17 = bitcast %"struct.OmniboxView::State"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %4, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  %18 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %18, align 8
  %20 = getelementptr inbounds %class.OmniboxEditModel, %class.OmniboxEditModel* %19, i64 0, i32 24
  %21 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %1, i64 0, i32 1
  %22 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %21, %"class.std::__1::basic_string"* dereferenceable(24) %20)
  %23 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %18, align 8
  %24 = getelementptr inbounds %class.OmniboxEditModel, %class.OmniboxEditModel* %23, i64 0, i32 25
  %25 = load i8, i8* %24, align 8, !range !52
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %42

27:                                               ; preds = %16
  %28 = getelementptr inbounds %class.OmniboxEditModel, %class.OmniboxEditModel* %23, i64 0, i32 24
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %class.OmniboxEditModel, %class.OmniboxEditModel* %23, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  br label %38

36:                                               ; preds = %27
  %37 = zext i8 %31 to i64
  br label %38

38:                                               ; preds = %36, %33
  %39 = phi i64 [ %35, %33 ], [ %37, %36 ]
  %40 = icmp ne i64 %39, 0
  %41 = zext i1 %40 to i8
  br label %42

42:                                               ; preds = %16, %38
  %43 = phi i8 [ 0, %16 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %1, i64 0, i32 2
  store i8 %43, i8* %44, align 8
  %45 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %1, i64 0, i32 3
  %46 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %1, i64 0, i32 4
  %47 = bitcast %class.OmniboxView* %0 to void (%class.OmniboxView*, i64*, i64*)***
  %48 = load void (%class.OmniboxView*, i64*, i64*)**, void (%class.OmniboxView*, i64*, i64*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.OmniboxView*, i64*, i64*)*, void (%class.OmniboxView*, i64*, i64*)** %48, i64 11
  %50 = load void (%class.OmniboxView*, i64*, i64*)*, void (%class.OmniboxView*, i64*, i64*)** %49, align 8
  call void %50(%class.OmniboxView* %0, i64* %45, i64* %46) #13
  %51 = call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN17OmniboxFieldTrial43kRichAutocompletionAutocompleteNonPrefixAllE) #13
  br i1 %51, label %58, label %52

52:                                               ; preds = %42
  %53 = call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN17OmniboxFieldTrial56kRichAutocompletionAutocompleteNonPrefixShortcutProviderE) #13
  br i1 %53, label %58, label %54

54:                                               ; preds = %52
  %55 = call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN17OmniboxFieldTrial39kRichAutocompletionSplitTitleCompletionE) #13
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN17OmniboxFieldTrial37kRichAutocompletionSplitUrlCompletionE) #13
  br i1 %57, label %58, label %65

58:                                               ; preds = %42, %52, %54, %56
  %59 = bitcast %class.OmniboxView* %0 to i64 (%class.OmniboxView*)***
  %60 = load i64 (%class.OmniboxView*)**, i64 (%class.OmniboxView*)*** %59, align 8
  %61 = getelementptr inbounds i64 (%class.OmniboxView*)*, i64 (%class.OmniboxView*)** %60, i64 12
  %62 = load i64 (%class.OmniboxView*)*, i64 (%class.OmniboxView*)** %61, align 8
  %63 = call i64 %62(%class.OmniboxView* %0) #13
  %64 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %1, i64 0, i32 5
  store i64 %63, i64* %64, align 8
  br label %65

65:                                               ; preds = %58, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !53
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !53
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !56, !noalias !53
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !56, !noalias !53
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !53
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !53
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !56, !noalias !53
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !56, !noalias !53
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !53
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !53
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !56, !noalias !53
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !56, !noalias !53
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !53
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !53
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !56, !noalias !53
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !56, !noalias !53
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !58

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !53
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !53
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !56, !noalias !53
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !56, !noalias !53
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !59

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !60

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !61

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #14
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #14
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #15
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !62
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !62
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !65, !noalias !62
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !65, !noalias !62
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !62
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !62
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !65, !noalias !62
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !65, !noalias !62
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !62
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !62
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !65, !noalias !62
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !65, !noalias !62
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !62
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !62
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !65, !noalias !62
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !65, !noalias !62
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !67

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !62
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !62
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !65, !noalias !62
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !65, !noalias !62
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !68

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !69

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !70

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !71
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !71
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !74, !noalias !71
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !74, !noalias !71
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !71
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !71
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !74, !noalias !71
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !74, !noalias !71
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !71
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !71
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !74, !noalias !71
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !74, !noalias !71
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !71
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !71
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !74, !noalias !71
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !74, !noalias !71
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !76

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !71
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !71
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !74, !noalias !71
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !74, !noalias !71
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !77

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !78

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !79

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #13
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxView15GetStateChangesERKNS_5StateES2_(%"struct.OmniboxView::StateChanges"* noalias nocapture sret, %class.OmniboxView* nocapture readnone, %"struct.OmniboxView::State"* dereferenceable(80), %"struct.OmniboxView::State"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.OmniboxView::StateChanges", %"struct.OmniboxView::StateChanges"* %0, i64 0, i32 4
  %6 = bitcast i8* %5 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %2, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.OmniboxView::StateChanges", %"struct.OmniboxView::StateChanges"* %0, i64 0, i32 0
  store %"class.std::__1::basic_string"* %7, %"class.std::__1::basic_string"** %8, align 8
  %9 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.OmniboxView::StateChanges", %"struct.OmniboxView::StateChanges"* %0, i64 0, i32 1
  store %"class.std::__1::basic_string"* %9, %"class.std::__1::basic_string"** %10, align 8
  %11 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %3, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.OmniboxView::StateChanges", %"struct.OmniboxView::StateChanges"* %0, i64 0, i32 2
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %3, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.OmniboxView::StateChanges", %"struct.OmniboxView::StateChanges"* %0, i64 0, i32 3
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %2, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %2, i64 0, i32 4
  %20 = load i64, i64* %19, align 8
  %21 = icmp ne i64 %18, %20
  %22 = icmp ne i64 %12, %15
  %23 = icmp ult i64 %20, %18
  %24 = select i1 %23, i64 %20, i64 %18
  %25 = icmp ult i64 %15, %12
  %26 = select i1 %25, i64 %15, i64 %12
  %27 = icmp eq i64 %24, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %4
  %29 = icmp ult i64 %18, %20
  %30 = select i1 %29, i64 %20, i64 %18
  %31 = icmp ult i64 %12, %15
  %32 = select i1 %31, i64 %15, i64 %12
  %33 = icmp ne i64 %30, %32
  br label %34

34:                                               ; preds = %28, %4
  %35 = phi i1 [ true, %4 ], [ %33, %28 ]
  %36 = or i1 %22, %21
  %37 = and i1 %36, %35
  %38 = getelementptr inbounds %"struct.OmniboxView::StateChanges", %"struct.OmniboxView::StateChanges"* %0, i64 0, i32 4
  %39 = zext i1 %37 to i8
  store i8 %39, i8* %38, align 8
  %40 = bitcast %"struct.OmniboxView::State"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %42 to i64
  %47 = select i1 %43, i64 %45, i64 %46
  %48 = bitcast %"struct.OmniboxView::State"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = zext i8 %50 to i64
  %55 = select i1 %51, i64 %53, i64 %54
  %56 = icmp eq i64 %47, %55
  br i1 %56, label %57, label %80

57:                                               ; preds = %34
  %58 = icmp eq i64 %47, 0
  br i1 %58, label %80, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i16*, i16** %60, align 8
  %62 = bitcast %"struct.OmniboxView::State"* %3 to i16*
  %63 = select i1 %51, i16* %61, i16* %62
  %64 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i16*, i16** %64, align 8
  %66 = bitcast %"struct.OmniboxView::State"* %2 to i16*
  %67 = select i1 %43, i16* %65, i16* %66
  br label %68

68:                                               ; preds = %75, %59
  %69 = phi i64 [ %76, %75 ], [ %47, %59 ]
  %70 = phi i16* [ %78, %75 ], [ %63, %59 ]
  %71 = phi i16* [ %77, %75 ], [ %67, %59 ]
  %72 = load i16, i16* %71, align 2
  %73 = load i16, i16* %70, align 2
  %74 = icmp eq i16 %73, %72
  br i1 %74, label %75, label %80

75:                                               ; preds = %68
  %76 = add i64 %69, -1
  %77 = getelementptr inbounds i16, i16* %71, i64 1
  %78 = getelementptr inbounds i16, i16* %70, i64 1
  %79 = icmp eq i64 %76, 0
  br i1 %79, label %80, label %68

80:                                               ; preds = %68, %75, %34, %57
  %81 = phi i8 [ 1, %34 ], [ 0, %57 ], [ 1, %68 ], [ 0, %75 ]
  %82 = getelementptr inbounds %"struct.OmniboxView::StateChanges", %"struct.OmniboxView::StateChanges"* %0, i64 0, i32 5
  store i8 %81, i8* %82, align 1
  %83 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %3, i64 0, i32 2
  %84 = load i8, i8* %83, align 8, !range !52
  %85 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %2, i64 0, i32 2
  %86 = load i8, i8* %85, align 8, !range !52
  %87 = icmp eq i8 %84, %86
  br i1 %87, label %88, label %133

88:                                               ; preds = %80
  %89 = icmp eq i8 %84, 0
  br i1 %89, label %133, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %3, i64 0, i32 1
  %92 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %2, i64 0, i32 1
  %93 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %93, i64 0, i32 1, i32 1
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  %97 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = zext i8 %95 to i64
  %100 = select i1 %96, i64 %98, i64 %99
  %101 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %101, i64 0, i32 1, i32 1
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  %105 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = zext i8 %103 to i64
  %108 = select i1 %104, i64 %106, i64 %107
  %109 = icmp eq i64 %100, %108
  br i1 %109, label %110, label %133

110:                                              ; preds = %90
  %111 = icmp eq i64 %100, 0
  br i1 %111, label %133, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i16*, i16** %113, align 8
  %115 = bitcast %"class.std::__1::basic_string"* %92 to i16*
  %116 = select i1 %104, i16* %114, i16* %115
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i16*, i16** %117, align 8
  %119 = bitcast %"class.std::__1::basic_string"* %91 to i16*
  %120 = select i1 %96, i16* %118, i16* %119
  br label %121

121:                                              ; preds = %128, %112
  %122 = phi i64 [ %129, %128 ], [ %100, %112 ]
  %123 = phi i16* [ %131, %128 ], [ %116, %112 ]
  %124 = phi i16* [ %130, %128 ], [ %120, %112 ]
  %125 = load i16, i16* %124, align 2
  %126 = load i16, i16* %123, align 2
  %127 = icmp eq i16 %126, %125
  br i1 %127, label %128, label %133

128:                                              ; preds = %121
  %129 = add i64 %122, -1
  %130 = getelementptr inbounds i16, i16* %124, i64 1
  %131 = getelementptr inbounds i16, i16* %123, i64 1
  %132 = icmp eq i64 %129, 0
  br i1 %132, label %133, label %121

133:                                              ; preds = %128, %121, %110, %90, %88, %80
  %134 = phi i8 [ 1, %80 ], [ 0, %88 ], [ 1, %90 ], [ 0, %110 ], [ 1, %121 ], [ 0, %128 ]
  %135 = getelementptr inbounds %"struct.OmniboxView::StateChanges", %"struct.OmniboxView::StateChanges"* %0, i64 0, i32 6
  store i8 %134, i8* %135, align 2
  %136 = icmp ugt i64 %47, %55
  %137 = icmp ule i64 %12, %24
  %138 = and i1 %137, %136
  %139 = zext i1 %138 to i8
  %140 = getelementptr inbounds %"struct.OmniboxView::StateChanges", %"struct.OmniboxView::StateChanges"* %0, i64 0, i32 7
  store i8 %139, i8* %140, align 1
  %141 = tail call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN17OmniboxFieldTrial43kRichAutocompletionAutocompleteNonPrefixAllE) #13
  br i1 %141, label %148, label %142

142:                                              ; preds = %133
  %143 = tail call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN17OmniboxFieldTrial56kRichAutocompletionAutocompleteNonPrefixShortcutProviderE) #13
  br i1 %143, label %148, label %144

144:                                              ; preds = %142
  %145 = tail call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN17OmniboxFieldTrial39kRichAutocompletionSplitTitleCompletionE) #13
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = tail call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN17OmniboxFieldTrial37kRichAutocompletionSplitUrlCompletionE) #13
  br i1 %147, label %148, label %162

148:                                              ; preds = %133, %142, %144, %146
  br i1 %138, label %149, label %160

149:                                              ; preds = %148
  %150 = load i64, i64* %11, align 8
  %151 = load i64, i64* %17, align 8
  %152 = load i64, i64* %19, align 8
  %153 = icmp ult i64 %151, %152
  %154 = select i1 %153, i64 %152, i64 %151
  %155 = getelementptr inbounds %"struct.OmniboxView::State", %"struct.OmniboxView::State"* %2, i64 0, i32 5
  %156 = load i64, i64* %155, align 8
  %157 = sub i64 %154, %156
  %158 = icmp ule i64 %150, %157
  %159 = zext i1 %158 to i8
  br label %160

160:                                              ; preds = %148, %149
  %161 = phi i8 [ 0, %148 ], [ %159, %149 ]
  store i8 %161, i8* %140, align 1
  br label %162

162:                                              ; preds = %160, %146
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxViewC2EP21OmniboxEditControllerNSt3__110unique_ptrI13OmniboxClientNS2_14default_deleteIS4_EEEE(%class.OmniboxView*, %class.OmniboxEditController*, %class.OmniboxClient*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %class.OmniboxEditController* %1 to i64
  %5 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*] }, { [40 x i8*] }* @_ZTV11OmniboxView, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %0, i64 0, i32 2
  %9 = bitcast %class.OmniboxEditController** %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = icmp eq %class.OmniboxClient* %2, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %3
  %12 = tail call i8* @_Znwm(i64 872) #15
  %13 = bitcast i8* %12 to %class.OmniboxEditModel*
  tail call void @_ZN16OmniboxEditModelC1EP11OmniboxViewP21OmniboxEditControllerNSt3__110unique_ptrI13OmniboxClientNS4_14default_deleteIS6_EEEE(%class.OmniboxEditModel* nonnull %13, %class.OmniboxView* %0, %class.OmniboxEditController* %1, %class.OmniboxClient* nonnull %2) #13
  %14 = ptrtoint i8* %12 to i64
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %15, align 8
  store i64 %14, i64* %7, align 8
  %17 = icmp eq %class.OmniboxEditModel* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %11
  %19 = bitcast %class.OmniboxEditModel* %16 to void (%class.OmniboxEditModel*)***
  %20 = load void (%class.OmniboxEditModel*)**, void (%class.OmniboxEditModel*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.OmniboxEditModel*)*, void (%class.OmniboxEditModel*)** %20, i64 1
  %22 = load void (%class.OmniboxEditModel*)*, void (%class.OmniboxEditModel*)** %21, align 8
  tail call void %22(%class.OmniboxEditModel* nonnull %16) #13
  br label %23

23:                                               ; preds = %3, %18, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxView11TextChangedEv(%class.OmniboxView*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.OmniboxView* %0 to void (%class.OmniboxView*)***
  %3 = load void (%class.OmniboxView*)**, void (%class.OmniboxView*)*** %2, align 8
  %4 = getelementptr inbounds void (%class.OmniboxView*)*, void (%class.OmniboxView*)** %3, i64 35
  %5 = load void (%class.OmniboxView*)*, void (%class.OmniboxView*)** %4, align 8
  tail call void %5(%class.OmniboxView* %0) #13
  %6 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %6, align 8
  %8 = icmp eq %class.OmniboxEditModel* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZN16OmniboxEditModel9OnChangedEv(%class.OmniboxEditModel* nonnull %7) #13
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

declare void @_ZN16OmniboxEditModel9OnChangedEv(%class.OmniboxEditModel*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11OmniboxView15UpdateTextStyleERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEbRK28AutocompleteSchemeClassifier(%class.OmniboxView*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %class.AutocompleteSchemeClassifier*) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca %"struct.url::Component", align 4
  %7 = alloca %"struct.url::Component", align 4
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.gfx::Range"*
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.gfx::Range"*
  %15 = alloca i64, align 8
  %16 = bitcast i64* %15 to %"class.gfx::Range"*
  %17 = alloca i64, align 8
  %18 = bitcast i64* %17 to %"class.gfx::Range"*
  %19 = alloca i64, align 8
  %20 = bitcast i64* %19 to %"class.gfx::Range"*
  %21 = alloca %"class.gfx::Range", align 4
  br i1 %2, label %29, label %22

22:                                               ; preds = %4
  %23 = bitcast i64* %5 to %"class.gfx::Range"*
  %24 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  store i64 -1, i64* %5, align 8
  %25 = bitcast %class.OmniboxView* %0 to void (%class.OmniboxView*, i1, %"class.gfx::Range"*)***
  %26 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)**, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %26, i64 36
  %28 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %27, align 8
  call void %28(%class.OmniboxView* %0, i1 zeroext true, %"class.gfx::Range"* nonnull dereferenceable(8) %23) #13
  br label %212

29:                                               ; preds = %4
  %30 = bitcast %"struct.url::Component"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %6, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %6, i64 0, i32 1
  store i32 0, i32* %31, align 4
  store i32 -1, i32* %32, align 4
  %33 = bitcast %"struct.url::Component"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %7, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %7, i64 0, i32 1
  store i32 0, i32* %34, align 4
  store i32 -1, i32* %35, align 4
  call void @_ZN17AutocompleteInput27ParseForEmphasizeComponentsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERK28AutocompleteSchemeClassifierPN3url9ComponentESE_(%"class.std::__1::basic_string"* dereferenceable(24) %1, %class.AutocompleteSchemeClassifier* %3, %"struct.url::Component"* nonnull %6, %"struct.url::Component"* nonnull %7) #13
  %36 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  %40 = load i32, i32* %31, align 4
  %41 = sext i32 %40 to i64
  %42 = load i32, i32* %32, align 4
  %43 = sext i32 %42 to i64
  %44 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %41, i64 %43, %"class.std::__1::allocator"* dereferenceable(1) %44) #13
  %45 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #13
  %46 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions16kExtensionSchemeE, i64 0, i64 0)) #13
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions16kExtensionSchemeE, i64 0, i64 0), i64 %46) #13
  %47 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i64, i64* %38, align 8
  %52 = zext i8 %49 to i64
  %53 = select i1 %50, i64 %51, i64 %52
  %54 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = zext i8 %56 to i64
  %61 = select i1 %57, i64 %59, i64 %60
  %62 = icmp eq i64 %53, %61
  br i1 %62, label %63, label %85

63:                                               ; preds = %29
  %64 = icmp eq i64 %53, 0
  br i1 %64, label %85, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i16*, i16** %66, align 8
  %68 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %69 = select i1 %57, i16* %67, i16* %68
  %70 = load i16*, i16** %37, align 8
  %71 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %72 = select i1 %50, i16* %70, i16* %71
  br label %73

73:                                               ; preds = %80, %65
  %74 = phi i64 [ %81, %80 ], [ %53, %65 ]
  %75 = phi i16* [ %83, %80 ], [ %69, %65 ]
  %76 = phi i16* [ %82, %80 ], [ %72, %65 ]
  %77 = load i16, i16* %76, align 2
  %78 = load i16, i16* %75, align 2
  %79 = icmp eq i16 %78, %77
  br i1 %79, label %80, label %85

80:                                               ; preds = %73
  %81 = add i64 %74, -1
  %82 = getelementptr inbounds i16, i16* %76, i64 1
  %83 = getelementptr inbounds i16, i16* %75, i64 1
  %84 = icmp eq i64 %81, 0
  br i1 %84, label %85, label %73

85:                                               ; preds = %73, %80, %29, %63
  %86 = phi i1 [ false, %29 ], [ true, %63 ], [ true, %80 ], [ false, %73 ]
  br i1 %57, label %87, label %90

87:                                               ; preds = %85
  %88 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %89 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %89) #15
  br label %90

90:                                               ; preds = %85, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #13
  br i1 %86, label %140, label %91

91:                                               ; preds = %90
  %92 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #13
  %93 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kDataSchemeE, i64 0, i64 0)) #13
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kDataSchemeE, i64 0, i64 0), i64 %93) #13
  %94 = load i8, i8* %48, align 1
  %95 = icmp slt i8 %94, 0
  %96 = load i64, i64* %38, align 8
  %97 = zext i8 %94 to i64
  %98 = select i1 %95, i64 %96, i64 %97
  %99 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %99, i64 0, i32 1, i32 1
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = zext i8 %101 to i64
  %106 = select i1 %102, i64 %104, i64 %105
  %107 = icmp eq i64 %98, %106
  br i1 %107, label %108, label %130

108:                                              ; preds = %91
  %109 = icmp eq i64 %98, 0
  br i1 %109, label %130, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i16*, i16** %111, align 8
  %113 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %114 = select i1 %102, i16* %112, i16* %113
  %115 = load i16*, i16** %37, align 8
  %116 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %117 = select i1 %95, i16* %115, i16* %116
  br label %118

118:                                              ; preds = %125, %110
  %119 = phi i64 [ %126, %125 ], [ %98, %110 ]
  %120 = phi i16* [ %128, %125 ], [ %114, %110 ]
  %121 = phi i16* [ %127, %125 ], [ %117, %110 ]
  %122 = load i16, i16* %121, align 2
  %123 = load i16, i16* %120, align 2
  %124 = icmp eq i16 %123, %122
  br i1 %124, label %125, label %130

125:                                              ; preds = %118
  %126 = add i64 %119, -1
  %127 = getelementptr inbounds i16, i16* %121, i64 1
  %128 = getelementptr inbounds i16, i16* %120, i64 1
  %129 = icmp eq i64 %126, 0
  br i1 %129, label %130, label %118

130:                                              ; preds = %118, %125, %91, %108
  %131 = phi i1 [ false, %91 ], [ true, %108 ], [ true, %125 ], [ false, %118 ]
  br i1 %102, label %132, label %135

132:                                              ; preds = %130
  %133 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %134 = load i8*, i8** %133, align 8
  call void @_ZdlPv(i8* %134) #15
  br label %135

135:                                              ; preds = %130, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #13
  br i1 %131, label %140, label %136

136:                                              ; preds = %135
  %137 = load i32, i32* %35, align 4
  %138 = icmp sgt i32 %137, 0
  %139 = select i1 %138, i32 2, i32 3
  br label %140

140:                                              ; preds = %136, %135, %90
  %141 = phi i32 [ 0, %90 ], [ 1, %135 ], [ %139, %136 ]
  %142 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #13
  %143 = bitcast i64* %11 to i32*
  store i32 -1431655766, i32* %143, align 8
  %144 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %12, i64 0, i32 1
  store i32 -1431655766, i32* %144, align 4
  %145 = load i32, i32* %32, align 4
  %146 = icmp sgt i32 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %140
  %148 = load i32, i32* %31, align 4
  %149 = add nsw i32 %148, %145
  store i32 %148, i32* %143, align 8
  store i32 %149, i32* %144, align 4
  br label %151

150:                                              ; preds = %140
  store i64 -1, i64* %11, align 8
  br label %151

151:                                              ; preds = %150, %147
  switch i32 %141, label %188 [
    i32 0, label %152
    i32 3, label %158
    i32 1, label %164
    i32 2, label %173
  ]

152:                                              ; preds = %151
  %153 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #13
  store i64 -1, i64* %13, align 8
  %154 = bitcast %class.OmniboxView* %0 to void (%class.OmniboxView*, i1, %"class.gfx::Range"*)***
  %155 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)**, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*** %154, align 8
  %156 = getelementptr inbounds void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %155, i64 36
  %157 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %156, align 8
  call void %157(%class.OmniboxView* %0, i1 zeroext false, %"class.gfx::Range"* nonnull dereferenceable(8) %14) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #13
  br label %189

158:                                              ; preds = %151
  %159 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #13
  store i64 -1, i64* %15, align 8
  %160 = bitcast %class.OmniboxView* %0 to void (%class.OmniboxView*, i1, %"class.gfx::Range"*)***
  %161 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)**, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*** %160, align 8
  %162 = getelementptr inbounds void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %161, i64 36
  %163 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %162, align 8
  call void %163(%class.OmniboxView* %0, i1 zeroext true, %"class.gfx::Range"* nonnull dereferenceable(8) %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #13
  br label %189

164:                                              ; preds = %151
  %165 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #13
  store i64 -1, i64* %17, align 8
  %166 = bitcast %class.OmniboxView* %0 to void (%class.OmniboxView*, i1, %"class.gfx::Range"*)***
  %167 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)**, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*** %166, align 8
  %168 = getelementptr inbounds void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %167, i64 36
  %169 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %168, align 8
  call void %169(%class.OmniboxView* %0, i1 zeroext false, %"class.gfx::Range"* nonnull dereferenceable(8) %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #13
  %170 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)**, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*** %166, align 8
  %171 = getelementptr inbounds void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %170, i64 36
  %172 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %171, align 8
  call void %172(%class.OmniboxView* %0, i1 zeroext true, %"class.gfx::Range"* nonnull dereferenceable(8) %12) #13
  br label %189

173:                                              ; preds = %151
  %174 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #13
  store i64 -1, i64* %19, align 8
  %175 = bitcast %class.OmniboxView* %0 to void (%class.OmniboxView*, i1, %"class.gfx::Range"*)***
  %176 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)**, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*** %175, align 8
  %177 = getelementptr inbounds void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %176, i64 36
  %178 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %177, align 8
  call void %178(%class.OmniboxView* %0, i1 zeroext false, %"class.gfx::Range"* nonnull dereferenceable(8) %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #13
  %179 = bitcast %"class.gfx::Range"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #13
  %180 = load i32, i32* %34, align 4
  %181 = load i32, i32* %35, align 4
  %182 = add nsw i32 %181, %180
  %183 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %21, i64 0, i32 0
  store i32 %180, i32* %183, align 4
  %184 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %21, i64 0, i32 1
  store i32 %182, i32* %184, align 4
  %185 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)**, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*** %175, align 8
  %186 = getelementptr inbounds void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %185, i64 36
  %187 = load void (%class.OmniboxView*, i1, %"class.gfx::Range"*)*, void (%class.OmniboxView*, i1, %"class.gfx::Range"*)** %186, align 8
  call void %187(%class.OmniboxView* %0, i1 zeroext true, %"class.gfx::Range"* nonnull dereferenceable(8) %21) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #13
  br label %189

188:                                              ; preds = %151
  unreachable

189:                                              ; preds = %173, %164, %158, %152
  %190 = getelementptr inbounds %class.OmniboxView, %class.OmniboxView* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %191 = load %class.OmniboxEditModel*, %class.OmniboxEditModel** %190, align 8
  %192 = getelementptr inbounds %class.OmniboxEditModel, %class.OmniboxEditModel* %191, i64 0, i32 9
  %193 = load i8, i8* %192, align 8, !range !52
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %195, label %205

195:                                              ; preds = %189
  %196 = load i32, i32* %143, align 8
  %197 = load i32, i32* %144, align 4
  %198 = and i32 %197, %196
  %199 = icmp eq i32 %198, -1
  br i1 %199, label %205, label %200

200:                                              ; preds = %195
  %201 = bitcast %class.OmniboxView* %0 to void (%class.OmniboxView*, %"class.gfx::Range"*)***
  %202 = load void (%class.OmniboxView*, %"class.gfx::Range"*)**, void (%class.OmniboxView*, %"class.gfx::Range"*)*** %201, align 8
  %203 = getelementptr inbounds void (%class.OmniboxView*, %"class.gfx::Range"*)*, void (%class.OmniboxView*, %"class.gfx::Range"*)** %202, i64 37
  %204 = load void (%class.OmniboxView*, %"class.gfx::Range"*)*, void (%class.OmniboxView*, %"class.gfx::Range"*)** %203, align 8
  call void %204(%class.OmniboxView* %0, %"class.gfx::Range"* nonnull dereferenceable(8) %12) #13
  br label %205

205:                                              ; preds = %195, %189, %200
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #13
  %206 = load i8, i8* %48, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %205
  %209 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %210 = load i8*, i8** %209, align 8
  call void @_ZdlPv(i8* %210) #15
  br label %211

211:                                              ; preds = %205, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br label %212

212:                                              ; preds = %211, %22
  %213 = phi i8* [ %30, %211 ], [ %24, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #13
  ret void
}

declare void @_ZN17AutocompleteInput27ParseForEmphasizeComponentsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERK28AutocompleteSchemeClassifierPN3url9ComponentESE_(%"class.std::__1::basic_string"* dereferenceable(24), %class.AutocompleteSchemeClassifier*, %"struct.url::Component"*, %"struct.url::Component"*) local_unnamed_addr #2

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11OmniboxView21SetAccessibilityLabelERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERK17AutocompleteMatchb(%class.OmniboxView*, %"class.std::__1::basic_string"* dereferenceable(24), %struct.AutocompleteMatch* dereferenceable(1600), i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #15
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !80
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !80
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !83, !noalias !80
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !83, !noalias !80
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !80
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !80
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !83, !noalias !80
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !83, !noalias !80
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !80
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !80
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !83, !noalias !80
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !83, !noalias !80
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !80
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !80
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !83, !noalias !80
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !83, !noalias !80
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !85

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !80
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !80
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !83, !noalias !80
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !83, !noalias !80
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !86

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !87

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !88

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !89

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !90

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !91

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !93
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !93
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !96, !noalias !93
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !96, !noalias !93
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !93
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !93
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !96, !noalias !93
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !96, !noalias !93
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !93
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !93
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !96, !noalias !93
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !96, !noalias !93
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !93
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !93
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !96, !noalias !93
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !96, !noalias !93
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !98

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !93
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !93
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !96, !noalias !93
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !96, !noalias !93
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !99

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !100

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !101

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #15
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #14
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #14
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #14
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #15
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !102
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !102
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !105, !noalias !102
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !105, !noalias !102
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !102
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !102
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !105, !noalias !102
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !105, !noalias !102
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !102
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !102
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !105, !noalias !102
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !105, !noalias !102
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !102
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !102
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !105, !noalias !102
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !105, !noalias !102
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !107

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !102
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !102
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !105, !noalias !102
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !105, !noalias !102
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !108

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !109

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !110

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #14
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #14
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #15
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !111
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !111
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !114, !noalias !111
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !114, !noalias !111
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !111
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !111
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !114, !noalias !111
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !114, !noalias !111
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !111
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !111
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !114, !noalias !111
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !114, !noalias !111
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !111
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !111
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !114, !noalias !111
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !114, !noalias !111
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !116

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !111
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !111
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !114, !noalias !111
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !114, !noalias !111
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !117

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !118

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !119

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !120
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !120
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !123, !noalias !120
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !123, !noalias !120
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !120
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !120
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !123, !noalias !120
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !123, !noalias !120
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !120
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !120
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !123, !noalias !120
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !123, !noalias !120
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !120
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !120
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !123, !noalias !120
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !123, !noalias !120
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !125

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !120
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !120
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !123, !noalias !120
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !123, !noalias !120
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !126

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !127

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !128

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #15
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

declare void @_ZN16OmniboxEditModelC1EP11OmniboxViewP21OmniboxEditControllerNSt3__110unique_ptrI13OmniboxClientNS4_14default_deleteIS6_EEEE(%class.OmniboxEditModel*, %class.OmniboxView*, %class.OmniboxEditController*, %class.OmniboxClient*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !8}
!31 = distinct !{!31, !10}
!32 = distinct !{!32, !10}
!33 = distinct !{!33, !8}
!34 = !{!35}
!35 = distinct !{!35, !36}
!36 = distinct !{!36, !"LVerDomain"}
!37 = !{!38}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !8}
!40 = distinct !{!40, !10}
!41 = distinct !{!41, !10}
!42 = distinct !{!42, !8}
!43 = !{!44}
!44 = distinct !{!44, !45}
!45 = distinct !{!45, !"LVerDomain"}
!46 = !{!47}
!47 = distinct !{!47, !45}
!48 = distinct !{!48, !8}
!49 = distinct !{!49, !10}
!50 = distinct !{!50, !10}
!51 = distinct !{!51, !8}
!52 = !{i8 0, i8 2}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !8}
!59 = distinct !{!59, !10}
!60 = distinct !{!60, !10}
!61 = distinct !{!61, !8}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !8}
!68 = distinct !{!68, !10}
!69 = distinct !{!69, !10}
!70 = distinct !{!70, !8}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !8}
!77 = distinct !{!77, !10}
!78 = distinct !{!78, !10}
!79 = distinct !{!79, !8}
!80 = !{!81}
!81 = distinct !{!81, !82}
!82 = distinct !{!82, !"LVerDomain"}
!83 = !{!84}
!84 = distinct !{!84, !82}
!85 = distinct !{!85, !8}
!86 = distinct !{!86, !10}
!87 = distinct !{!87, !10}
!88 = distinct !{!88, !8}
!89 = distinct !{!89, !8}
!90 = distinct !{!90, !10}
!91 = distinct !{!91, !92, !8}
!92 = !{!"llvm.loop.unroll.runtime.disable"}
!93 = !{!94}
!94 = distinct !{!94, !95}
!95 = distinct !{!95, !"LVerDomain"}
!96 = !{!97}
!97 = distinct !{!97, !95}
!98 = distinct !{!98, !8}
!99 = distinct !{!99, !10}
!100 = distinct !{!100, !10}
!101 = distinct !{!101, !8}
!102 = !{!103}
!103 = distinct !{!103, !104}
!104 = distinct !{!104, !"LVerDomain"}
!105 = !{!106}
!106 = distinct !{!106, !104}
!107 = distinct !{!107, !8}
!108 = distinct !{!108, !10}
!109 = distinct !{!109, !10}
!110 = distinct !{!110, !8}
!111 = !{!112}
!112 = distinct !{!112, !113}
!113 = distinct !{!113, !"LVerDomain"}
!114 = !{!115}
!115 = distinct !{!115, !113}
!116 = distinct !{!116, !8}
!117 = distinct !{!117, !10}
!118 = distinct !{!118, !10}
!119 = distinct !{!119, !8}
!120 = !{!121}
!121 = distinct !{!121, !122}
!122 = distinct !{!122, !"LVerDomain"}
!123 = !{!124}
!124 = distinct !{!124, !122}
!125 = distinct !{!125, !8}
!126 = distinct !{!126, !10}
!127 = distinct !{!127, !10}
!128 = distinct !{!128, !8}
