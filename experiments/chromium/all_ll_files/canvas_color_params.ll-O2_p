; ModuleID = '../../third_party/blink/renderer/platform/graphics/canvas_color_params.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/canvas_color_params.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

@__const._ZN5blink32CanvasColorSpaceFromSkColorSpaceEPK12SkColorSpace.color_spaces = private unnamed_addr constant [3 x i32] [i32 0, i32 1, i32 2], align 4
@.str = private unnamed_addr constant [8 x i8] c"rec2020\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"display-p3\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"srgb\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"float16\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"uint8\00", align 1
@.str.5 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/graphics/canvas_color_params.cc\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8

@_ZN5blink17CanvasColorParamsC1Ev = hidden unnamed_addr alias void (%"class.blink::CanvasColorParams"*), void (%"class.blink::CanvasColorParams"*)* @_ZN5blink17CanvasColorParamsC2Ev
@_ZN5blink17CanvasColorParamsC1ENS_16CanvasColorSpaceENS_17CanvasPixelFormatENS_11OpacityModeE = hidden unnamed_addr alias void (%"class.blink::CanvasColorParams"*, i32, i32, i32), void (%"class.blink::CanvasColorParams"*, i32, i32, i32)* @_ZN5blink17CanvasColorParamsC2ENS_16CanvasColorSpaceENS_17CanvasPixelFormatENS_11OpacityModeE
@_ZN5blink17CanvasColorParamsC1ERKN3WTF6StringES4_b = hidden unnamed_addr alias void (%"class.blink::CanvasColorParams"*, %"class.WTF::String"*, %"class.WTF::String"*, i1), void (%"class.blink::CanvasColorParams"*, %"class.WTF::String"*, %"class.WTF::String"*, i1)* @_ZN5blink17CanvasColorParamsC2ERKN3WTF6StringES4_b

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30CanvasColorSpaceToSkColorSpaceENS_16CanvasColorSpaceE(%class.sk_sp* noalias sret, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.gfx::ColorSpace", align 4
  %4 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %4) #7
  %5 = trunc i32 %1 to i24
  %6 = shl i24 %5, 3
  %7 = lshr i24 657153, %6
  %8 = trunc i24 %7 to i8
  %9 = trunc i32 %1 to i24
  %10 = shl i24 %9, 3
  %11 = lshr i24 918798, %10
  %12 = trunc i24 %11 to i8
  store i8 %8, i8* %4, align 4, !alias.scope !2
  %13 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 1
  store i8 %12, i8* %13, align 1, !alias.scope !2
  %14 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 2
  store i8 1, i8* %14, align 2, !alias.scope !2
  %15 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 3
  store i8 2, i8* %15, align 1, !alias.scope !2
  %16 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 4
  %17 = bitcast [9 x float]* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 64, i1 false) #7, !alias.scope !2
  call void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp* sret %0, %"class.gfx::ColorSpace"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %4) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp* sret, %"class.gfx::ColorSpace"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink32CanvasColorSpaceFromSkColorSpaceEPK12SkColorSpace(%class.SkColorSpace*) local_unnamed_addr #0 {
  %2 = alloca [3 x i32], align 4
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %"class.gfx::ColorSpace", align 4
  %5 = bitcast [3 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 bitcast ([3 x i32]* @__const._ZN5blink32CanvasColorSpaceFromSkColorSpaceEPK12SkColorSpace.color_spaces to i8*), i64 12, i1 false)
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  %7 = bitcast %class.sk_sp* %3 to i8*
  %8 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %4, i64 0, i32 0
  %9 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %4, i64 0, i32 1
  %10 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %4, i64 0, i32 2
  %11 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %4, i64 0, i32 3
  %12 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %4, i64 0, i32 4
  %13 = bitcast [9 x float]* %12 to i8*
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %8) #7
  store i8 1, i8* %8, align 4, !alias.scope !9
  store i8 14, i8* %9, align 1, !alias.scope !9
  store i8 1, i8* %10, align 2, !alias.scope !9
  store i8 2, i8* %11, align 1, !alias.scope !9
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 64, i1 false) #7, !alias.scope !9
  call void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp* nonnull sret %3, %"class.gfx::ColorSpace"* nonnull %4) #7
  %15 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %16 = call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %0, %class.SkColorSpace* %15) #7
  %17 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %18 = icmp eq %class.SkColorSpace* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = bitcast %class.SkColorSpace* %17 to i8*
  call void @_ZdlPv(i8* %24) #8
  br label %25

25:                                               ; preds = %1, %19, %23
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  br i1 %16, label %41, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %8) #7
  %28 = load i32, i32* %27, align 4
  %29 = trunc i32 %28 to i24
  %30 = shl i24 %29, 3
  %31 = lshr i24 657153, %30
  %32 = trunc i24 %31 to i8
  %33 = trunc i32 %28 to i24
  %34 = shl i24 %33, 3
  %35 = lshr i24 918798, %34
  %36 = trunc i24 %35 to i8
  store i8 %32, i8* %8, align 4, !alias.scope !14
  store i8 %36, i8* %9, align 1, !alias.scope !14
  store i8 1, i8* %10, align 2, !alias.scope !14
  store i8 2, i8* %11, align 1, !alias.scope !14
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 64, i1 false) #7, !alias.scope !14
  call void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp* nonnull sret %3, %"class.gfx::ColorSpace"* nonnull %4) #7
  %37 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %38 = call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %0, %class.SkColorSpace* %37) #7
  %39 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %40 = icmp eq %class.SkColorSpace* %39, null
  br i1 %40, label %52, label %46

41:                                               ; preds = %74, %52, %25
  %42 = phi i32* [ %6, %25 ], [ %27, %52 ], [ %54, %74 ]
  %43 = load i32, i32* %42, align 4
  br label %44

44:                                               ; preds = %74, %41
  %45 = phi i32 [ %43, %41 ], [ 0, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #7
  ret i32 %45

46:                                               ; preds = %26
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorSpace* %39 to i8*
  call void @_ZdlPv(i8* %51) #8
  br label %52

52:                                               ; preds = %50, %46, %26
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  br i1 %38, label %41, label %53

53:                                               ; preds = %52
  %54 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %8) #7
  %55 = load i32, i32* %54, align 4
  %56 = trunc i32 %55 to i24
  %57 = shl i24 %56, 3
  %58 = lshr i24 657153, %57
  %59 = trunc i24 %58 to i8
  %60 = trunc i32 %55 to i24
  %61 = shl i24 %60, 3
  %62 = lshr i24 918798, %61
  %63 = trunc i24 %62 to i8
  store i8 %59, i8* %8, align 4, !alias.scope !14
  store i8 %63, i8* %9, align 1, !alias.scope !14
  store i8 1, i8* %10, align 2, !alias.scope !14
  store i8 2, i8* %11, align 1, !alias.scope !14
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 64, i1 false) #7, !alias.scope !14
  call void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp* nonnull sret %3, %"class.gfx::ColorSpace"* nonnull %4) #7
  %64 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %65 = call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %0, %class.SkColorSpace* %64) #7
  %66 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %67 = icmp eq %class.SkColorSpace* %66, null
  br i1 %67, label %74, label %68

68:                                               ; preds = %53
  %69 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = bitcast %class.SkColorSpace* %66 to i8*
  call void @_ZdlPv(i8* %73) #8
  br label %74

74:                                               ; preds = %72, %68, %53
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  br i1 %65, label %41, label %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink24CanvasColorSpaceFromNameERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %22

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

22:                                               ; preds = %14, %10
  %23 = phi i64 [ %21, %14 ], [ %12, %10 ]
  %24 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %24, i32* %25, align 8
  %26 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #7
  %27 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %23, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 7, i32* %29, align 8
  %30 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  br i1 %30, label %57, label %31

31:                                               ; preds = %22
  %32 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #7
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %36, align 8
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %37, i64* %38, align 8
  br label %47

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 1
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %45 = bitcast i8** %44 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %45, align 8
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %47

47:                                               ; preds = %39, %35
  %48 = phi i64 [ %46, %39 ], [ %37, %35 ]
  %49 = phi i32 [ %42, %39 ], [ 0, %35 ]
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %49, i32* %50, align 8
  %51 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #7
  %52 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %48, i64* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 10, i32* %54, align 8
  %55 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #7
  %56 = select i1 %55, i32 2, i32 0
  br label %57

57:                                               ; preds = %47, %22
  %58 = phi i32 [ 1, %22 ], [ %56, %47 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink22CanvasColorSpaceToNameENS_16CanvasColorSpaceE(i32) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  switch i32 %0, label %6 [
    i32 0, label %3
    i32 1, label %4
    i32 2, label %5
  ]

3:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #7
  br label %7

4:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7) #7
  br label %7

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10) #7
  br label %7

6:                                                ; preds = %1
  unreachable

7:                                                ; preds = %5, %4, %3
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  ret %"class.WTF::StringImpl"* %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink17CanvasColorParamsC2Ev(%"class.blink::CanvasColorParams"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink17CanvasColorParamsC2ENS_16CanvasColorSpaceENS_17CanvasPixelFormatENS_11OpacityModeE(%"class.blink::CanvasColorParams"* nocapture, i32, i32, i32) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 2
  store i32 %3, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CanvasColorParamsC2ERKN3WTF6StringES4_b(%"class.blink::CanvasColorParams"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 0
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 1
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 2
  store i32 0, i32* %13, align 4
  %14 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %19, align 8
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %21 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %20, i64* %21, align 8
  br label %30

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %28, align 8
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %30

30:                                               ; preds = %22, %18
  %31 = phi i64 [ %29, %22 ], [ %20, %18 ]
  %32 = phi i32 [ %25, %22 ], [ 0, %18 ]
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %32, i32* %33, align 8
  %34 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #7
  %35 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %31, i64* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 7, i32* %37, align 8
  %38 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #7
  br i1 %38, label %64, label %39

39:                                               ; preds = %30
  %40 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #7
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %44, align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %46 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %45, i64* %46, align 8
  br label %55

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 1
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %53 = bitcast i8** %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %53, align 8
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %55

55:                                               ; preds = %47, %43
  %56 = phi i64 [ %54, %47 ], [ %45, %43 ]
  %57 = phi i32 [ %50, %47 ], [ 0, %43 ]
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %57, i32* %58, align 8
  %59 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #7
  %60 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %56, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 10, i32* %62, align 8
  %63 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #7
  br i1 %63, label %64, label %66

64:                                               ; preds = %55, %30
  %65 = phi i32 [ 1, %30 ], [ 2, %55 ]
  store i32 %65, i32* %11, align 4
  br label %66

66:                                               ; preds = %64, %55
  %67 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #7
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %72, align 8
  %73 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %74 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %73, i64* %74, align 8
  br label %83

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 1
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %81 = bitcast i8** %80 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %81, align 8
  %82 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %83

83:                                               ; preds = %75, %71
  %84 = phi i64 [ %82, %75 ], [ %73, %71 ]
  %85 = phi i32 [ %78, %75 ], [ 0, %71 ]
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %85, i32* %86, align 8
  %87 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #7
  %88 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %84, i64* %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 7, i32* %90, align 8
  %91 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #7
  br i1 %91, label %92, label %93

92:                                               ; preds = %83
  store i32 1, i32* %12, align 4
  br label %93

93:                                               ; preds = %92, %83
  br i1 %3, label %95, label %94

94:                                               ; preds = %93
  store i32 1, i32* %13, align 4
  br label %95

95:                                               ; preds = %94, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK5blink17CanvasColorParams19GetAsResourceParamsEv(%"class.blink::CanvasColorParams"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CanvasResourceParams", align 8
  %3 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  %6 = select i1 %5, i32 1, i32 2
  %7 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 1
  %12 = select i1 %11, i32 13, i32 6
  call void @_ZN5blink20CanvasResourceParamsC1ENS_16CanvasColorSpaceE11SkColorType11SkAlphaType(%"class.blink::CanvasResourceParams"* nonnull %2, i32 %8, i32 %12, i32 %6) #7
  %13 = bitcast %"class.blink::CanvasResourceParams"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.blink::CanvasResourceParams", %"class.blink::CanvasResourceParams"* %2, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i64, i32 } undef, i64 %14, 0
  %18 = insertvalue { i64, i32 } %17, i32 %16, 1
  ret { i64, i32 } %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink17CanvasColorParams14GetSkColorTypeEv(%"class.blink::CanvasColorParams"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  %5 = select i1 %4, i32 13, i32 6
  ret i32 %5
}

declare void @_ZN5blink20CanvasResourceParamsC1ENS_16CanvasColorSpaceE11SkColorType11SkAlphaType(%"class.blink::CanvasResourceParams"*, i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17CanvasColorParams21GetColorSpaceAsStringEv(%"class.blink::CanvasColorParams"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  switch i32 %4, label %9 [
    i32 0, label %6
    i32 1, label %7
    i32 2, label %8
  ]

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #7
  br label %10

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7) #7
  br label %10

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10) #7
  br label %10

9:                                                ; preds = %1
  unreachable

10:                                               ; preds = %6, %7, %8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  ret %"class.WTF::StringImpl"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK5blink17CanvasColorParams22GetPixelFormatAsStringEv(%"class.blink::CanvasColorParams"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %6 [
    i32 1, label %9
    i32 0, label %5
  ]

5:                                                ; preds = %1
  br label %9

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)) #7
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  br label %9

9:                                                ; preds = %1, %6, %5
  %10 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), %6 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), %5 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), %1 ]
  ret i8* %10
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK5blink17CanvasColorParams13BytesPerPixelEv(%"class.blink::CanvasColorParams"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  %5 = select i1 %4, i32 13, i32 6
  %6 = tail call i32 @_Z24SkColorTypeBytesPerPixel11SkColorType(i32 %5) #7
  %7 = trunc i32 %6 to i8
  ret i8 %7
}

declare i32 @_Z24SkColorTypeBytesPerPixel11SkColorType(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17CanvasColorParams23GetStorageGfxColorSpaceEv(%"class.gfx::ColorSpace"* noalias nocapture sret, %"class.blink::CanvasColorParams"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = trunc i32 %4 to i24
  %6 = shl i24 %5, 3
  %7 = lshr i24 657153, %6
  %8 = trunc i24 %7 to i8
  %9 = trunc i32 %4 to i24
  %10 = shl i24 %9, 3
  %11 = lshr i24 918798, %10
  %12 = trunc i24 %11 to i8
  %13 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 0
  store i8 %8, i8* %13, align 4, !alias.scope !17
  %14 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 1
  store i8 %12, i8* %14, align 1, !alias.scope !17
  %15 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 2
  store i8 1, i8* %15, align 2, !alias.scope !17
  %16 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 3
  store i8 2, i8* %16, align 1, !alias.scope !17
  %17 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 4
  %18 = bitcast [9 x float]* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 64, i1 false) #7, !alias.scope !17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17CanvasColorParams15GetSkColorSpaceEv(%class.sk_sp* noalias sret, %"class.blink::CanvasColorParams"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::ColorSpace", align 4
  %4 = getelementptr inbounds %"class.blink::CanvasColorParams", %"class.blink::CanvasColorParams"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %6) #7, !noalias !24
  %7 = trunc i32 %5 to i24
  %8 = shl i24 %7, 3
  %9 = lshr i24 657153, %8
  %10 = trunc i24 %9 to i8
  %11 = trunc i32 %5 to i24
  %12 = shl i24 %11, 3
  %13 = lshr i24 918798, %12
  %14 = trunc i24 %13 to i8
  store i8 %10, i8* %6, align 4, !alias.scope !27, !noalias !24
  %15 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 1
  store i8 %14, i8* %15, align 1, !alias.scope !27, !noalias !24
  %16 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 2
  store i8 1, i8* %16, align 2, !alias.scope !27, !noalias !24
  %17 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 3
  store i8 2, i8* %17, align 1, !alias.scope !27, !noalias !24
  %18 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 4
  %19 = bitcast [9 x float]* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 64, i1 false) #7, !alias.scope !27, !noalias !24
  call void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp* sret %0, %"class.gfx::ColorSpace"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %6) #7, !noalias !24
  ret void
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5, !7}
!3 = distinct !{!3, !4, !"_ZN3gfx10ColorSpace18CreateDisplayP3D65Ev: argument 0"}
!4 = distinct !{!4, !"_ZN3gfx10ColorSpace18CreateDisplayP3D65Ev"}
!5 = distinct !{!5, !6, !"_ZN5blink12_GLOBAL__N_131CanvasColorSpaceToGfxColorSpaceENS_16CanvasColorSpaceE: argument 0"}
!6 = distinct !{!6, !"_ZN5blink12_GLOBAL__N_131CanvasColorSpaceToGfxColorSpaceENS_16CanvasColorSpaceE"}
!7 = distinct !{!7, !8, !"_ZN3gfx10ColorSpace10CreateSRGBEv: argument 0"}
!8 = distinct !{!8, !"_ZN3gfx10ColorSpace10CreateSRGBEv"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN3gfx10ColorSpace10CreateSRGBEv: argument 0"}
!11 = distinct !{!11, !"_ZN3gfx10ColorSpace10CreateSRGBEv"}
!12 = distinct !{!12, !13, !"_ZN5blink12_GLOBAL__N_131CanvasColorSpaceToGfxColorSpaceENS_16CanvasColorSpaceE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink12_GLOBAL__N_131CanvasColorSpaceToGfxColorSpaceENS_16CanvasColorSpaceE"}
!14 = !{!15, !12, !10}
!15 = distinct !{!15, !16, !"_ZN3gfx10ColorSpace18CreateDisplayP3D65Ev: argument 0"}
!16 = distinct !{!16, !"_ZN3gfx10ColorSpace18CreateDisplayP3D65Ev"}
!17 = !{!18, !20, !22}
!18 = distinct !{!18, !19, !"_ZN3gfx10ColorSpace18CreateDisplayP3D65Ev: argument 0"}
!19 = distinct !{!19, !"_ZN3gfx10ColorSpace18CreateDisplayP3D65Ev"}
!20 = distinct !{!20, !21, !"_ZN5blink12_GLOBAL__N_131CanvasColorSpaceToGfxColorSpaceENS_16CanvasColorSpaceE: argument 0"}
!21 = distinct !{!21, !"_ZN5blink12_GLOBAL__N_131CanvasColorSpaceToGfxColorSpaceENS_16CanvasColorSpaceE"}
!22 = distinct !{!22, !23, !"_ZN3gfx10ColorSpace10CreateSRGBEv: argument 0"}
!23 = distinct !{!23, !"_ZN3gfx10ColorSpace10CreateSRGBEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN5blink30CanvasColorSpaceToSkColorSpaceENS_16CanvasColorSpaceE: argument 0"}
!26 = distinct !{!26, !"_ZN5blink30CanvasColorSpaceToSkColorSpaceENS_16CanvasColorSpaceE"}
!27 = !{!28, !30, !32}
!28 = distinct !{!28, !29, !"_ZN3gfx10ColorSpace18CreateDisplayP3D65Ev: argument 0"}
!29 = distinct !{!29, !"_ZN3gfx10ColorSpace18CreateDisplayP3D65Ev"}
!30 = distinct !{!30, !31, !"_ZN5blink12_GLOBAL__N_131CanvasColorSpaceToGfxColorSpaceENS_16CanvasColorSpaceE: argument 0"}
!31 = distinct !{!31, !"_ZN5blink12_GLOBAL__N_131CanvasColorSpaceToGfxColorSpaceENS_16CanvasColorSpaceE"}
!32 = distinct !{!32, !33, !"_ZN3gfx10ColorSpace10CreateSRGBEv: argument 0"}
!33 = distinct !{!33, !"_ZN3gfx10ColorSpace10CreateSRGBEv"}
