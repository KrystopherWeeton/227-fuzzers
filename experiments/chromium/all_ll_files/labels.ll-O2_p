; ModuleID = '../../third_party/nasm/asm/labels.c'
source_filename = "../../third_party/nasm/asm/labels.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.label = type { %struct.anon }
%struct.anon = type { i32, i32, i64, i64, i64, i64, i8*, i8*, i8*, i8*, i32, i32, i32 }
%struct.permts = type { %struct.permts*, i32, i32, [16384 x i8] }
%struct.hash_table = type { %struct.hash_node*, i64, i64, i64 }
%struct.hash_node = type { i64, i8*, i64, i8* }
%struct.ofmt = type { i8*, i8*, i8*, i32, i32, %struct.dfmt**, %struct.dfmt*, i8*, void ()*, void ()*, void (%struct.out_data*)*, void (i32, i8*, i32, i64, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, i32 (i8*, i32*)*, i32 (i8*, i32, i32, i32*, i8*)*, void (i32, i32)*, i32 (i32)*, i32 (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.dfmt = type { i8*, i8*, void ()*, void (i8*, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, void (i8*, i8*)*, void (i32)*, void (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.out_data = type { i64, i32, i32, i32, i32, i32, i32, i64, %struct.itemplate*, i8*, i64, i32, i32, i64, %struct.src_location }
%struct.itemplate = type opaque
%struct.src_location = type { i8*, i32 }
%struct.pragma_facility = type { i8*, i32 (%struct.pragma*)* }
%struct.pragma = type { %struct.pragma_facility*, i8*, i8*, i8*, i32 }
%struct.location = type { i64, i32, i32 }
%struct.src_location_stack = type { %struct.src_location, %struct.src_location_stack*, %struct.src_location_stack*, i8* }
%struct.hash_insert = type { %struct.hash_table*, %struct.hash_node*, %struct.hash_node }
%struct.anon.0 = type { i32, i64, %union.label* }

@initialized = internal unnamed_addr global i1 false, align 1
@mangle_string_set = internal unnamed_addr global [4 x i8] zeroinitializer, align 1
@mangle_strings = internal unnamed_addr global [4 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0)], align 16
@prevlabel = internal unnamed_addr global i8* null, align 8
@global_offset_changed = common hidden local_unnamed_addr global i64 0, align 8
@.str = private unnamed_addr constant [36 x i8] c"label `%s' inconsistently redefined\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"info: label `%s' redefined to an identical value\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"info: label `%s' originally defined\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"label `%s' %s during code generation\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"defined\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"changed\00", align 1
@lfree = internal unnamed_addr global %union.label* null, align 8
@ldata = internal unnamed_addr global %union.label* null, align 8
@perm_tail = internal unnamed_addr global %struct.permts* null, align 8
@perm_head = internal unnamed_addr global %struct.permts* null, align 8
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@ltab = internal global %struct.hash_table zeroinitializer, align 8
@.str.7 = private unnamed_addr constant [36 x i8] c"../../third_party/nasm/asm/labels.c\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"label != NULL\00", align 1
@_passn = external local_unnamed_addr global i64, align 8
@.str.9 = private unnamed_addr constant [54 x i8] c"symbol `%s' has inconsistent attributes `%s' and `%s'\00", align 1
@.str.10 = private unnamed_addr constant [39 x i8] c"symbol `%s' declared both as %s and %s\00", align 1
@types = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i32 0, i32 0)], align 16
@_pass_type = external local_unnamed_addr global i32, align 4
@.str.11 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"static\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"global\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"extern\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"required\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"common\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"special\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"output format special\00", align 1
@ofmt = external local_unnamed_addr global %struct.ofmt*, align 8
@location = external local_unnamed_addr global %struct.location, align 8
@.str.19 = private unnamed_addr constant [19 x i8] c"lptr->defn.mangled\00", align 1
@tasm_compatible_mode = external local_unnamed_addr global i8, align 1
@_src_bottom = external local_unnamed_addr global %struct.src_location_stack*, align 8
@dfmt = external local_unnamed_addr global %struct.dfmt*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @lookup_label(i8*, i32* nocapture, i64* nocapture) local_unnamed_addr #0 {
  %4 = alloca %struct.hash_insert, align 8
  %5 = load i1, i1* @initialized, align 1
  br i1 %5, label %6, label %52

6:                                                ; preds = %3
  %7 = bitcast %struct.hash_insert* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #8
  %8 = icmp eq i8* %0, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #8
  br i1 %8, label %9, label %10, !prof !2

9:                                                ; preds = %6
  tail call void @nasm_assert_failed(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0), i32 232, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)) #9
  unreachable

10:                                               ; preds = %6
  %11 = load i8, i8* @tasm_compatible_mode, align 1, !range !3
  %12 = icmp ne i8 %11, 0
  %13 = load i8, i8* %0, align 1
  %14 = icmp eq i8 %13, 64
  %15 = and i1 %12, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %10
  %17 = getelementptr inbounds i8, i8* %0, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 64
  br i1 %19, label %26, label %29

20:                                               ; preds = %10
  %21 = icmp eq i8 %13, 46
  br i1 %21, label %22, label %29

22:                                               ; preds = %20
  %23 = getelementptr inbounds i8, i8* %0, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 46
  br i1 %25, label %29, label %26

26:                                               ; preds = %22, %16
  %27 = load i8*, i8** @prevlabel, align 8
  %28 = tail call noalias i8* @nasm_strcat(i8* %27, i8* nonnull %0) #8
  br label %29

29:                                               ; preds = %26, %22, %20, %16
  %30 = phi i8* [ %28, %26 ], [ %0, %22 ], [ %0, %16 ], [ %0, %20 ]
  %31 = call i8** @hash_find(%struct.hash_table* nonnull @ltab, i8* %30, %struct.hash_insert* nonnull %4) #8
  %32 = icmp eq i8** %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #8
  br label %52

34:                                               ; preds = %29
  %35 = bitcast i8** %31 to %union.label**
  %36 = load %union.label*, %union.label** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #8
  %37 = icmp eq %union.label* %36, null
  br i1 %37, label %52, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %union.label, %union.label* %36, i64 0, i32 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %38
  %43 = load i64, i64* @_passn, align 8
  %44 = add nsw i64 %43, 1
  %45 = getelementptr inbounds %union.label, %union.label* %36, i64 0, i32 0, i32 5
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %union.label, %union.label* %36, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  store i32 %47, i32* %1, align 4
  %48 = getelementptr inbounds %union.label, %union.label* %36, i64 0, i32 0, i32 2
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %2, align 8
  %50 = getelementptr inbounds %union.label, %union.label* %36, i64 0, i32 0, i32 11
  %51 = load i32, i32* %50, align 4
  br label %52

52:                                               ; preds = %33, %34, %38, %3, %42
  %53 = phi i32 [ %51, %42 ], [ -1, %3 ], [ -1, %38 ], [ -1, %34 ], [ -1, %33 ]
  ret i32 %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %union.label* @find_label(i8*, i1 zeroext, i8*) unnamed_addr #0 {
  %4 = alloca %struct.hash_insert, align 8
  %5 = bitcast %struct.hash_insert* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #8
  %6 = icmp eq i8* %0, null
  %7 = bitcast %struct.hash_insert* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  br i1 %6, label %8, label %9, !prof !2

8:                                                ; preds = %3
  tail call void @nasm_assert_failed(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0), i32 232, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)) #9
  unreachable

9:                                                ; preds = %3
  %10 = load i8, i8* @tasm_compatible_mode, align 1, !range !3
  %11 = icmp ne i8 %10, 0
  %12 = load i8, i8* %0, align 1
  %13 = icmp eq i8 %12, 64
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %19

15:                                               ; preds = %9
  %16 = getelementptr inbounds i8, i8* %0, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 64
  br i1 %18, label %25, label %28

19:                                               ; preds = %9
  %20 = icmp eq i8 %12, 46
  br i1 %20, label %21, label %28

21:                                               ; preds = %19
  %22 = getelementptr inbounds i8, i8* %0, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 46
  br i1 %24, label %28, label %25

25:                                               ; preds = %21, %15
  %26 = load i8*, i8** @prevlabel, align 8
  %27 = tail call noalias i8* @nasm_strcat(i8* %26, i8* nonnull %0) #8
  br label %28

28:                                               ; preds = %21, %19, %15, %25
  %29 = phi i8* [ %27, %25 ], [ %0, %21 ], [ %0, %15 ], [ %0, %19 ]
  %30 = phi i8* [ %27, %25 ], [ null, %21 ], [ null, %15 ], [ null, %19 ]
  %31 = call i8** @hash_find(%struct.hash_table* nonnull @ltab, i8* %29, %struct.hash_insert* nonnull %4) #8
  %32 = icmp eq i8** %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = bitcast i8** %31 to %union.label**
  %35 = load %union.label*, %union.label** %34, align 8
  br label %36

36:                                               ; preds = %28, %33
  %37 = phi %union.label* [ %35, %33 ], [ null, %28 ]
  %38 = icmp ne %union.label* %37, null
  %39 = xor i1 %1, true
  %40 = or i1 %38, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = icmp eq i8* %2, null
  br i1 %42, label %133, label %43

43:                                               ; preds = %41
  store i8 0, i8* %2, align 1
  br label %133

44:                                               ; preds = %36
  %45 = load %struct.anon.0*, %struct.anon.0** bitcast (%union.label** @lfree to %struct.anon.0**), align 8
  %46 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %45, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, -2
  %49 = bitcast %struct.anon.0* %45 to i8*
  %50 = bitcast %struct.anon.0* %45 to %struct.anon*
  %51 = bitcast %struct.anon.0* %45 to %union.label*
  br i1 %48, label %52, label %73

52:                                               ; preds = %44
  %53 = call noalias i8* @nasm_malloc(i64 11264) #10
  %54 = load %struct.anon.0*, %struct.anon.0** bitcast (%union.label** @lfree to %struct.anon.0**), align 8
  %55 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %54, i64 0, i32 2
  %56 = bitcast %union.label** %55 to i8**
  store i8* %53, i8** %56, align 8
  %57 = bitcast i8* %53 to %union.label*
  store i8* %53, i8** bitcast (%union.label** @lfree to i8**), align 8
  %58 = bitcast i8* %53 to %struct.anon*
  br label %59

59:                                               ; preds = %135, %52
  %60 = phi i64 [ 0, %52 ], [ %137, %135 ]
  %61 = getelementptr inbounds %union.label, %union.label* %57, i64 %60, i32 0, i32 0
  store i32 -3, i32* %61, align 8
  %62 = or i64 %60, 1
  %63 = getelementptr inbounds %union.label, %union.label* %57, i64 %62, i32 0, i32 0
  store i32 -3, i32* %63, align 8
  %64 = or i64 %60, 2
  %65 = getelementptr inbounds %union.label, %union.label* %57, i64 %64, i32 0, i32 0
  store i32 -3, i32* %65, align 8
  %66 = or i64 %60, 3
  %67 = icmp eq i64 %66, 127
  br i1 %67, label %68, label %135

68:                                               ; preds = %59
  %69 = getelementptr inbounds i8, i8* %53, i64 11176
  %70 = bitcast i8* %69 to i32*
  store i32 -2, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %53, i64 11192
  %72 = bitcast i8* %71 to %union.label**
  store %union.label* null, %union.label** %72, align 8
  br label %73

73:                                               ; preds = %68, %44
  %74 = phi %struct.anon* [ %58, %68 ], [ %50, %44 ]
  %75 = phi %union.label* [ %57, %68 ], [ %51, %44 ]
  %76 = phi i8* [ %53, %68 ], [ %49, %44 ]
  %77 = icmp eq i8* %2, null
  br i1 %77, label %79, label %78

78:                                               ; preds = %73
  store i8 1, i8* %2, align 1
  br label %79

79:                                               ; preds = %73, %78
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 88, i1 false)
  %80 = icmp eq i8* %29, null
  br i1 %80, label %116, label %81

81:                                               ; preds = %79
  %82 = call i64 @strlen(i8* nonnull %29) #11
  %83 = add i64 %82, 1
  %84 = load %struct.permts*, %struct.permts** @perm_tail, align 8
  %85 = getelementptr inbounds %struct.permts, %struct.permts* %84, i64 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = getelementptr inbounds %struct.permts, %struct.permts* %84, i64 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = sub i32 %86, %88
  %90 = zext i32 %89 to i64
  %91 = icmp ugt i64 %83, %90
  br i1 %91, label %92, label %106

92:                                               ; preds = %81
  %93 = icmp ugt i64 %83, 16384
  %94 = select i1 %93, i64 %83, i64 16384
  %95 = add i64 %94, 16
  %96 = call noalias i8* @nasm_malloc(i64 %95) #10
  %97 = load i8**, i8*** bitcast (%struct.permts** @perm_tail to i8***), align 8
  store i8* %96, i8** %97, align 8
  store i8* %96, i8** bitcast (%struct.permts** @perm_tail to i8**), align 8
  %98 = bitcast i8* %96 to %struct.permts**
  store %struct.permts* null, %struct.permts** %98, align 8
  %99 = trunc i64 %94 to i32
  %100 = getelementptr inbounds i8, i8* %96, i64 8
  %101 = bitcast i8* %100 to i32*
  store i32 %99, i32* %101, align 8
  %102 = getelementptr inbounds i8, i8* %96, i64 12
  %103 = bitcast i8* %102 to i32*
  store i32 0, i32* %103, align 4
  %104 = bitcast i8* %96 to %struct.permts*
  %105 = load %struct.anon*, %struct.anon** bitcast (%union.label** @lfree to %struct.anon**), align 8
  br label %106

106:                                              ; preds = %92, %81
  %107 = phi %struct.anon* [ %105, %92 ], [ %74, %81 ]
  %108 = phi i32 [ 0, %92 ], [ %88, %81 ]
  %109 = phi %struct.permts* [ %104, %92 ], [ %84, %81 ]
  %110 = getelementptr inbounds %struct.permts, %struct.permts* %109, i64 0, i32 2
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %struct.permts, %struct.permts* %109, i64 0, i32 3, i64 %111
  %113 = trunc i64 %83 to i32
  %114 = add i32 %108, %113
  store i32 %114, i32* %110, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %112, i8* nonnull align 1 %29, i64 %83, i1 false) #8
  %115 = bitcast %struct.anon* %107 to %union.label*
  br label %116

116:                                              ; preds = %79, %106
  %117 = phi %union.label* [ %115, %106 ], [ %75, %79 ]
  %118 = phi %struct.anon* [ %107, %106 ], [ %74, %79 ]
  %119 = phi i8* [ %112, %106 ], [ null, %79 ]
  %120 = getelementptr inbounds %struct.anon, %struct.anon* %118, i64 0, i32 6
  store i8* %119, i8** %120, align 8
  %121 = getelementptr inbounds %struct.anon, %struct.anon* %118, i64 0, i32 1
  store i32 -1, i32* %121, align 4
  %122 = icmp eq i8* %30, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %116
  call void @nasm_free(i8* nonnull %30) #8
  %124 = load %union.label*, %union.label** @lfree, align 8
  br label %125

125:                                              ; preds = %116, %123
  %126 = phi %union.label* [ %117, %116 ], [ %124, %123 ]
  %127 = getelementptr inbounds %union.label, %union.label* %126, i64 0, i32 0, i32 6
  %128 = load i8*, i8** %127, align 8
  %129 = bitcast %union.label* %126 to i8*
  %130 = call i8** @hash_add(%struct.hash_insert* nonnull %4, i8* %128, i8* %129) #8
  %131 = load %union.label*, %union.label** @lfree, align 8
  %132 = getelementptr inbounds %union.label, %union.label* %131, i64 1
  store %union.label* %132, %union.label** @lfree, align 8
  br label %133

133:                                              ; preds = %43, %41, %125
  %134 = phi %union.label* [ %131, %125 ], [ %37, %41 ], [ %37, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #8
  ret %union.label* %134

135:                                              ; preds = %59
  %136 = getelementptr inbounds %union.label, %union.label* %57, i64 %66, i32 0, i32 0
  store i32 -3, i32* %136, align 8
  %137 = add nuw nsw i64 %60, 4
  br label %59
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @set_label_mangle(i32, i8* readonly) local_unnamed_addr #0 {
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds [4 x i8], [4 x i8]* @mangle_string_set, i64 0, i64 %3
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %44

7:                                                ; preds = %2
  %8 = icmp eq i8* %1, null
  br i1 %8, label %41, label %9

9:                                                ; preds = %7
  %10 = tail call i64 @strlen(i8* nonnull %1) #11
  %11 = add i64 %10, 1
  %12 = load %struct.permts*, %struct.permts** @perm_tail, align 8
  %13 = getelementptr inbounds %struct.permts, %struct.permts* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.permts, %struct.permts* %12, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = sub i32 %14, %16
  %18 = zext i32 %17 to i64
  %19 = icmp ugt i64 %11, %18
  br i1 %19, label %20, label %33

20:                                               ; preds = %9
  %21 = icmp ugt i64 %11, 16384
  %22 = select i1 %21, i64 %11, i64 16384
  %23 = add i64 %22, 16
  %24 = tail call noalias i8* @nasm_malloc(i64 %23) #10
  %25 = load i8**, i8*** bitcast (%struct.permts** @perm_tail to i8***), align 8
  store i8* %24, i8** %25, align 8
  store i8* %24, i8** bitcast (%struct.permts** @perm_tail to i8**), align 8
  %26 = bitcast i8* %24 to %struct.permts**
  store %struct.permts* null, %struct.permts** %26, align 8
  %27 = trunc i64 %22 to i32
  %28 = getelementptr inbounds i8, i8* %24, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %24, i64 12
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 4
  %32 = bitcast i8* %24 to %struct.permts*
  br label %33

33:                                               ; preds = %20, %9
  %34 = phi i32 [ 0, %20 ], [ %16, %9 ]
  %35 = phi %struct.permts* [ %32, %20 ], [ %12, %9 ]
  %36 = getelementptr inbounds %struct.permts, %struct.permts* %35, i64 0, i32 2
  %37 = zext i32 %34 to i64
  %38 = getelementptr inbounds %struct.permts, %struct.permts* %35, i64 0, i32 3, i64 %37
  %39 = trunc i64 %11 to i32
  %40 = add i32 %34, %39
  store i32 %40, i32* %36, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* nonnull align 1 %1, i64 %11, i1 false) #8
  br label %41

41:                                               ; preds = %7, %33
  %42 = phi i8* [ %38, %33 ], [ null, %7 ]
  %43 = getelementptr inbounds [4 x i8*], [4 x i8*]* @mangle_strings, i64 0, i64 %3
  store i8* %42, i8** %43, align 8
  store i8 1, i8* %4, align 1
  br label %44

44:                                               ; preds = %2, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @declare_label(i8*, i32, i8*) local_unnamed_addr #0 {
  %4 = tail call fastcc %union.label* @find_label(i8* %0, i1 zeroext true, i8* null)
  %5 = getelementptr inbounds %union.label, %union.label* %4, i64 0, i32 0, i32 11
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i8* %2, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = load i8, i8* %2, align 1
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, i8* null, i8* %2
  br label %12

12:                                               ; preds = %8, %3
  %13 = phi i8* [ null, %3 ], [ %11, %8 ]
  %14 = icmp eq i32 %6, %1
  br i1 %14, label %24, label %15

15:                                               ; preds = %12
  %16 = load i32, i32* @_pass_type, align 4
  %17 = icmp ult i32 %16, 4
  %18 = icmp eq i32 %6, 0
  %19 = and i1 %18, %17
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = icmp eq i32 %6, 3
  %22 = icmp eq i32 %1, 4
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %68

24:                                               ; preds = %20, %15, %12
  store i32 %1, i32* %5, align 4
  %25 = icmp eq i8* %13, null
  br i1 %25, label %161, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %union.label, %union.label* %4, i64 0, i32 0, i32 8
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %62

30:                                               ; preds = %26
  %31 = tail call i64 @strlen(i8* nonnull %13) #11
  %32 = add i64 %31, 1
  %33 = load %struct.permts*, %struct.permts** @perm_tail, align 8
  %34 = getelementptr inbounds %struct.permts, %struct.permts* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %struct.permts, %struct.permts* %33, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = sub i32 %35, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %32, %39
  br i1 %40, label %41, label %54

41:                                               ; preds = %30
  %42 = icmp ugt i64 %32, 16384
  %43 = select i1 %42, i64 %32, i64 16384
  %44 = add i64 %43, 16
  %45 = tail call noalias i8* @nasm_malloc(i64 %44) #10
  %46 = load i8**, i8*** bitcast (%struct.permts** @perm_tail to i8***), align 8
  store i8* %45, i8** %46, align 8
  store i8* %45, i8** bitcast (%struct.permts** @perm_tail to i8**), align 8
  %47 = bitcast i8* %45 to %struct.permts**
  store %struct.permts* null, %struct.permts** %47, align 8
  %48 = trunc i64 %43 to i32
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  store i32 %48, i32* %50, align 8
  %51 = getelementptr inbounds i8, i8* %45, i64 12
  %52 = bitcast i8* %51 to i32*
  store i32 0, i32* %52, align 4
  %53 = bitcast i8* %45 to %struct.permts*
  br label %54

54:                                               ; preds = %41, %30
  %55 = phi i32 [ 0, %41 ], [ %37, %30 ]
  %56 = phi %struct.permts* [ %53, %41 ], [ %33, %30 ]
  %57 = getelementptr inbounds %struct.permts, %struct.permts* %56, i64 0, i32 2
  %58 = zext i32 %55 to i64
  %59 = getelementptr inbounds %struct.permts, %struct.permts* %56, i64 0, i32 3, i64 %58
  %60 = trunc i64 %32 to i32
  %61 = add i32 %55, %60
  store i32 %61, i32* %57, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* nonnull align 1 %13, i64 %32, i1 false) #8
  store i8* %59, i8** %27, align 8
  br label %161

62:                                               ; preds = %26
  %63 = tail call i32 @strcasecmp(i8* nonnull %28, i8* nonnull %13) #11
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %161, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %union.label, %union.label* %4, i64 0, i32 0, i32 6
  %67 = load i8*, i8** %66, align 8
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0), i8* %67, i8* nonnull %28, i8* nonnull %13) #8
  br label %161

68:                                               ; preds = %20
  %69 = add i32 %6, -3
  %70 = icmp ult i32 %69, 2
  br i1 %70, label %71, label %107

71:                                               ; preds = %68
  switch i32 %1, label %107 [
    i32 5, label %72
    i32 2, label %72
  ]

72:                                               ; preds = %71, %71
  store i32 %1, i32* %5, align 4
  %73 = icmp eq i8* %13, null
  br i1 %73, label %161, label %74

74:                                               ; preds = %72
  %75 = tail call i64 @strlen(i8* nonnull %13) #11
  %76 = add i64 %75, 1
  %77 = load %struct.permts*, %struct.permts** @perm_tail, align 8
  %78 = getelementptr inbounds %struct.permts, %struct.permts* %77, i64 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %struct.permts, %struct.permts* %77, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = sub i32 %79, %81
  %83 = zext i32 %82 to i64
  %84 = icmp ugt i64 %76, %83
  br i1 %84, label %85, label %98

85:                                               ; preds = %74
  %86 = icmp ugt i64 %76, 16384
  %87 = select i1 %86, i64 %76, i64 16384
  %88 = add i64 %87, 16
  %89 = tail call noalias i8* @nasm_malloc(i64 %88) #10
  %90 = load i8**, i8*** bitcast (%struct.permts** @perm_tail to i8***), align 8
  store i8* %89, i8** %90, align 8
  store i8* %89, i8** bitcast (%struct.permts** @perm_tail to i8**), align 8
  %91 = bitcast i8* %89 to %struct.permts**
  store %struct.permts* null, %struct.permts** %91, align 8
  %92 = trunc i64 %87 to i32
  %93 = getelementptr inbounds i8, i8* %89, i64 8
  %94 = bitcast i8* %93 to i32*
  store i32 %92, i32* %94, align 8
  %95 = getelementptr inbounds i8, i8* %89, i64 12
  %96 = bitcast i8* %95 to i32*
  store i32 0, i32* %96, align 4
  %97 = bitcast i8* %89 to %struct.permts*
  br label %98

98:                                               ; preds = %85, %74
  %99 = phi i32 [ 0, %85 ], [ %81, %74 ]
  %100 = phi %struct.permts* [ %97, %85 ], [ %77, %74 ]
  %101 = getelementptr inbounds %struct.permts, %struct.permts* %100, i64 0, i32 2
  %102 = zext i32 %99 to i64
  %103 = getelementptr inbounds %struct.permts, %struct.permts* %100, i64 0, i32 3, i64 %102
  %104 = trunc i64 %76 to i32
  %105 = add i32 %99, %104
  store i32 %105, i32* %101, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %103, i8* nonnull align 1 %13, i64 %76, i1 false) #8
  %106 = getelementptr inbounds %union.label, %union.label* %4, i64 0, i32 0, i32 8
  store i8* %103, i8** %106, align 8
  br label %161

107:                                              ; preds = %71, %68
  %108 = add i32 %1, -3
  %109 = icmp ult i32 %108, 2
  br i1 %109, label %110, label %152

110:                                              ; preds = %107
  switch i32 %6, label %111 [
    i32 5, label %112
    i32 2, label %112
  ]

111:                                              ; preds = %110
  br i1 %70, label %112, label %152

112:                                              ; preds = %111, %110, %110
  %113 = getelementptr inbounds %union.label, %union.label* %4, i64 0, i32 0, i32 8
  %114 = load i8*, i8** %113, align 8
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %161

116:                                              ; preds = %112
  %117 = icmp eq i8* %13, null
  br i1 %117, label %150, label %118

118:                                              ; preds = %116
  %119 = tail call i64 @strlen(i8* nonnull %13) #11
  %120 = add i64 %119, 1
  %121 = load %struct.permts*, %struct.permts** @perm_tail, align 8
  %122 = getelementptr inbounds %struct.permts, %struct.permts* %121, i64 0, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = getelementptr inbounds %struct.permts, %struct.permts* %121, i64 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = sub i32 %123, %125
  %127 = zext i32 %126 to i64
  %128 = icmp ugt i64 %120, %127
  br i1 %128, label %129, label %142

129:                                              ; preds = %118
  %130 = icmp ugt i64 %120, 16384
  %131 = select i1 %130, i64 %120, i64 16384
  %132 = add i64 %131, 16
  %133 = tail call noalias i8* @nasm_malloc(i64 %132) #10
  %134 = load i8**, i8*** bitcast (%struct.permts** @perm_tail to i8***), align 8
  store i8* %133, i8** %134, align 8
  store i8* %133, i8** bitcast (%struct.permts** @perm_tail to i8**), align 8
  %135 = bitcast i8* %133 to %struct.permts**
  store %struct.permts* null, %struct.permts** %135, align 8
  %136 = trunc i64 %131 to i32
  %137 = getelementptr inbounds i8, i8* %133, i64 8
  %138 = bitcast i8* %137 to i32*
  store i32 %136, i32* %138, align 8
  %139 = getelementptr inbounds i8, i8* %133, i64 12
  %140 = bitcast i8* %139 to i32*
  store i32 0, i32* %140, align 4
  %141 = bitcast i8* %133 to %struct.permts*
  br label %142

142:                                              ; preds = %129, %118
  %143 = phi i32 [ 0, %129 ], [ %125, %118 ]
  %144 = phi %struct.permts* [ %141, %129 ], [ %121, %118 ]
  %145 = getelementptr inbounds %struct.permts, %struct.permts* %144, i64 0, i32 2
  %146 = zext i32 %143 to i64
  %147 = getelementptr inbounds %struct.permts, %struct.permts* %144, i64 0, i32 3, i64 %146
  %148 = trunc i64 %120 to i32
  %149 = add i32 %143, %148
  store i32 %149, i32* %145, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %147, i8* nonnull align 1 %13, i64 %120, i1 false) #8
  br label %150

150:                                              ; preds = %142, %116
  %151 = phi i8* [ %147, %142 ], [ null, %116 ]
  store i8* %151, i8** %113, align 8
  br label %161

152:                                              ; preds = %111, %107
  %153 = getelementptr inbounds %union.label, %union.label* %4, i64 0, i32 0, i32 6
  %154 = load i8*, i8** %153, align 8
  %155 = sext i32 %6 to i64
  %156 = getelementptr inbounds [8 x i8*], [8 x i8*]* @types, i64 0, i64 %155
  %157 = load i8*, i8** %156, align 8
  %158 = sext i32 %1 to i64
  %159 = getelementptr inbounds [8 x i8*], [8 x i8*]* @types, i64 0, i64 %158
  %160 = load i8*, i8** %159, align 8
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0), i8* %154, i8* %157, i8* %160) #8
  br label %161

161:                                              ; preds = %24, %54, %62, %65, %72, %98, %112, %150, %152
  %162 = phi i1 [ false, %152 ], [ true, %62 ], [ true, %24 ], [ true, %54 ], [ true, %65 ], [ true, %72 ], [ true, %98 ], [ false, %112 ], [ false, %150 ]
  ret i1 %162
}

; Function Attrs: nounwind ssp uwtable
define hidden void @define_label(i8*, i32, i64, i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 -86, i8* %6, align 1
  %7 = load i64, i64* @_passn, align 8
  %8 = add nsw i64 %7, 1
  %9 = call fastcc %union.label* @find_label(i8* %0, i1 zeroext true, i8* nonnull %6)
  %10 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 11
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, -3
  %17 = icmp ult i32 %16, 2
  br i1 %17, label %18, label %25

18:                                               ; preds = %13
  store i32 2, i32* %14, align 4
  br label %65

19:                                               ; preds = %4
  %20 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = call i32 @seg_alloc() #8
  br label %25

25:                                               ; preds = %23, %19, %13
  %26 = phi i32 [ %1, %13 ], [ %24, %23 ], [ %21, %19 ]
  %27 = icmp eq i64 %11, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %25
  %29 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 11
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 7
  br i1 %31, label %32, label %65

32:                                               ; preds = %25, %28
  %33 = phi i1 [ false, %28 ], [ true, %25 ]
  call fastcc void @mangle_label_name(%union.label* %9)
  %34 = load %struct.ofmt*, %struct.ofmt** @ofmt, align 8
  %35 = getelementptr inbounds %struct.ofmt, %struct.ofmt* %34, i64 0, i32 14
  %36 = load i32 (i8*, i32, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32*, i8*)** %35, align 8
  %37 = icmp eq i32 (i8*, i32, i32, i32*, i8*)* %36, null
  br i1 %37, label %65, label %38, !prof !4

38:                                               ; preds = %32
  %39 = load i32, i32* getelementptr inbounds (%struct.location, %struct.location* @location, i64 0, i32 1), align 8
  %40 = icmp ne i32 %39, -1
  %41 = icmp eq i32 %26, %39
  %42 = and i1 %40, %41
  %43 = load i64, i64* getelementptr inbounds (%struct.location, %struct.location* @location, i64 0, i32 0), align 8
  %44 = icmp eq i64 %43, %2
  %45 = and i1 %42, %44
  br i1 %45, label %46, label %65, !prof !5

46:                                               ; preds = %38
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %47 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 7
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %46
  call void @nasm_assert_failed(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0), i32 368, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0)) #9
  unreachable

51:                                               ; preds = %46
  %52 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 11
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 1
  %55 = call i32 %36(i8* nonnull %48, i32 %53, i32 %26, i32* %54, i8* nonnull %5) #8
  %56 = icmp eq i32 %55, %26
  br i1 %56, label %64, label %57, !prof !4

57:                                               ; preds = %51
  %58 = load i8, i8* %5, align 1, !range !3
  %59 = icmp eq i8 %58, 0
  %60 = call i64 @switch_segment(i32 %55) #8
  br i1 %59, label %62, label %61

61:                                               ; preds = %57
  store i64 %2, i64* getelementptr inbounds (%struct.location, %struct.location* @location, i64 0, i32 0), align 8
  br label %62

62:                                               ; preds = %57, %61
  %63 = phi i64 [ %2, %61 ], [ %60, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  br label %65

64:                                               ; preds = %51
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  br label %65

65:                                               ; preds = %18, %38, %64, %62, %32, %28
  %66 = phi i1 [ false, %28 ], [ %33, %32 ], [ %33, %38 ], [ %33, %62 ], [ %33, %64 ], [ false, %18 ]
  %67 = phi i64 [ 0, %28 ], [ %11, %32 ], [ %11, %38 ], [ %11, %62 ], [ %11, %64 ], [ 0, %18 ]
  %68 = phi i32 [ %26, %28 ], [ %26, %32 ], [ %26, %38 ], [ %55, %62 ], [ %26, %64 ], [ %1, %18 ]
  %69 = phi i64 [ %2, %28 ], [ %2, %32 ], [ %2, %38 ], [ %63, %62 ], [ %2, %64 ], [ %2, %18 ]
  %70 = load i8, i8* %0, align 1
  %71 = icmp eq i8 %70, 46
  br i1 %71, label %72, label %86

72:                                               ; preds = %65
  %73 = getelementptr inbounds i8, i8* %0, i64 1
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 46
  br i1 %75, label %76, label %105

76:                                               ; preds = %72
  %77 = getelementptr inbounds i8, i8* %0, i64 2
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 64
  br i1 %79, label %105, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 11
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %105

84:                                               ; preds = %80
  store i32 6, i32* %81, align 4
  %85 = load i8, i8* %0, align 1
  br label %86

86:                                               ; preds = %65, %84
  %87 = phi i8 [ %70, %65 ], [ %85, %84 ]
  %88 = load i8, i8* @tasm_compatible_mode, align 1, !range !3
  %89 = icmp ne i8 %88, 0
  %90 = icmp eq i8 %87, 64
  %91 = and i1 %89, %90
  br i1 %91, label %92, label %96

92:                                               ; preds = %86
  %93 = getelementptr inbounds i8, i8* %0, i64 1
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 64
  br i1 %95, label %105, label %96

96:                                               ; preds = %86, %92
  %97 = phi i8 [ %87, %86 ], [ 64, %92 ]
  %98 = icmp eq i8 %97, 46
  %99 = xor i1 %3, true
  %100 = or i1 %98, %99
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 6
  %103 = bitcast i8** %102 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* bitcast (i8** @prevlabel to i64*), align 8
  br label %105

105:                                              ; preds = %76, %72, %80, %92, %96, %101
  %106 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 11
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 5
  %109 = select i1 %108, i64 0, i64 %69
  %110 = select i1 %108, i64 %69, i64 0
  %111 = load i8, i8* %6, align 1, !range !3
  %112 = icmp eq i8 %111, 0
  %113 = and i1 %66, %112
  br i1 %113, label %114, label %126

114:                                              ; preds = %105
  %115 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, %68
  br i1 %117, label %118, label %126

118:                                              ; preds = %114
  %119 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 2
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %120, %109
  br i1 %121, label %122, label %126

122:                                              ; preds = %118
  %123 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 3
  %124 = load i64, i64* %123, align 8
  %125 = icmp ne i64 %124, %110
  br label %126

126:                                              ; preds = %118, %114, %105, %122
  %127 = phi i1 [ true, %118 ], [ true, %114 ], [ true, %105 ], [ %125, %122 ]
  %128 = zext i1 %127 to i64
  %129 = load i64, i64* @global_offset_changed, align 8
  %130 = add i64 %129, %128
  store i64 %130, i64* @global_offset_changed, align 8
  %131 = icmp eq i64 %67, %8
  br i1 %131, label %132, label %149

132:                                              ; preds = %126
  %133 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 6
  %134 = load i8*, i8** %133, align 8
  br i1 %127, label %135, label %136

135:                                              ; preds = %132
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i8* %134) #8
  br label %137

136:                                              ; preds = %132
  call void (i32, i8*, ...) @nasm_warn(i32 655360, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i8* %134) #8
  br label %137

137:                                              ; preds = %136, %135
  %138 = phi i32 [ 548, %135 ], [ 655907, %136 ]
  %139 = load %struct.src_location_stack*, %struct.src_location_stack** @_src_bottom, align 8
  %140 = getelementptr inbounds %struct.src_location_stack, %struct.src_location_stack* %139, i64 0, i32 0, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = getelementptr inbounds %struct.src_location_stack, %struct.src_location_stack* %139, i64 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 10
  %145 = load i32, i32* %144, align 8
  %146 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 9
  %147 = load i8*, i8** %146, align 8
  call void @src_set(i32 %145, i8* %147) #8
  %148 = load i8*, i8** %133, align 8
  call void (i32, i8*, ...) @nasm_error(i32 %138, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i8* %148) #8
  call void @src_set(i32 %141, i8* %143) #8
  br label %159

149:                                              ; preds = %126
  br i1 %127, label %150, label %165

150:                                              ; preds = %149
  %151 = load i32, i32* @_pass_type, align 4
  %152 = icmp ult i32 %151, 5
  %153 = icmp eq i32 %107, 6
  %154 = or i1 %153, %152
  br i1 %154, label %159, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 6
  %157 = load i8*, i8** %156, align 8
  %158 = select i1 %112, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)
  call void (i32, i8*, ...) @nasm_warn(i32 720904, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i8* %157, i8* %158) #8
  br label %159

159:                                              ; preds = %150, %155, %137
  %160 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 0
  store i32 %68, i32* %160, align 8
  %161 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 2
  store i64 %109, i64* %161, align 8
  %162 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 3
  store i64 %110, i64* %162, align 8
  store i64 %8, i64* %10, align 8
  %163 = xor i1 %127, true
  %164 = and i1 %131, %163
  br i1 %164, label %178, label %169

165:                                              ; preds = %149
  %166 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 0
  store i32 %68, i32* %166, align 8
  %167 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 2
  store i64 %109, i64* %167, align 8
  %168 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 3
  store i64 %110, i64* %168, align 8
  store i64 %8, i64* %10, align 8
  br label %169

169:                                              ; preds = %165, %159
  %170 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 10
  %171 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 9
  %172 = load %struct.src_location_stack*, %struct.src_location_stack** @_src_bottom, align 8
  %173 = getelementptr inbounds %struct.src_location_stack, %struct.src_location_stack* %172, i64 0, i32 0, i32 1
  %174 = load i32, i32* %173, align 8
  store i32 %174, i32* %170, align 4
  %175 = bitcast %struct.src_location_stack* %172 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast i8** %171 to i64*
  store i64 %176, i64* %177, align 8
  br label %178

178:                                              ; preds = %159, %169
  br i1 %131, label %237, label %179

179:                                              ; preds = %178
  %180 = load i32, i32* @_pass_type, align 4
  %181 = icmp ugt i32 %180, 4
  br i1 %181, label %182, label %194

182:                                              ; preds = %179
  %183 = load i32, i32* %106, align 4
  switch i32 %183, label %237 [
    i32 2, label %184
    i32 4, label %184
    i32 5, label %184
  ]

184:                                              ; preds = %182, %182, %182
  %185 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 8
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %237, label %188

188:                                              ; preds = %184
  %189 = load %struct.ofmt*, %struct.ofmt** @ofmt, align 8
  %190 = getelementptr inbounds %struct.ofmt, %struct.ofmt* %189, i64 0, i32 12
  %191 = load void (i8*, i32, i64, i32, i8*)*, void (i8*, i32, i64, i32, i8*)** %190, align 8
  %192 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 7
  %193 = load i8*, i8** %192, align 8
  call void %191(i8* %193, i32 0, i64 0, i32 3, i8* nonnull %186) #8
  br label %237

194:                                              ; preds = %179
  %195 = icmp eq i32 %180, 4
  %196 = load i32, i32* %106, align 4
  br i1 %195, label %199, label %197

197:                                              ; preds = %194
  %198 = icmp eq i32 %196, 7
  br i1 %198, label %210, label %237

199:                                              ; preds = %194
  switch i32 %196, label %210 [
    i32 3, label %200
    i32 2, label %206
    i32 4, label %206
    i32 5, label %208
  ]

200:                                              ; preds = %199
  %201 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 5
  %202 = load i64, i64* %201, align 8
  %203 = load i64, i64* @_passn, align 8
  %204 = icmp slt i64 %202, %203
  br i1 %204, label %237, label %205

205:                                              ; preds = %200
  store i32 4, i32* %106, align 4
  br label %206

206:                                              ; preds = %205, %199, %199
  %207 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 2
  br label %212

208:                                              ; preds = %199
  %209 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 3
  br label %212

210:                                              ; preds = %197, %199
  %211 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 2
  br label %212

212:                                              ; preds = %210, %208, %206
  %213 = phi i32 [ 0, %210 ], [ 2, %208 ], [ 1, %206 ]
  %214 = phi i64* [ %211, %210 ], [ %209, %208 ], [ %207, %206 ]
  %215 = load i64, i64* %214, align 8
  call fastcc void @mangle_label_name(%union.label* %9) #8
  %216 = load %struct.ofmt*, %struct.ofmt** @ofmt, align 8
  %217 = getelementptr inbounds %struct.ofmt, %struct.ofmt* %216, i64 0, i32 12
  %218 = load void (i8*, i32, i64, i32, i8*)*, void (i8*, i32, i64, i32, i8*)** %217, align 8
  %219 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 7
  %220 = load i8*, i8** %219, align 8
  %221 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 0
  %222 = load i32, i32* %221, align 8
  %223 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 8
  %224 = load i8*, i8** %223, align 8
  call void %218(i8* %220, i32 %222, i64 %215, i32 %213, i8* %224) #8
  %225 = load i32, i32* %106, align 4
  %226 = and i32 %225, -2
  %227 = icmp eq i32 %226, 6
  br i1 %227, label %237, label %228

228:                                              ; preds = %212
  %229 = load %struct.dfmt*, %struct.dfmt** @dfmt, align 8
  %230 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %229, i64 0, i32 4
  %231 = load void (i8*, i32, i64, i32, i8*)*, void (i8*, i32, i64, i32, i8*)** %230, align 8
  %232 = load i8*, i8** %219, align 8
  %233 = load i32, i32* %221, align 8
  %234 = getelementptr inbounds %union.label, %union.label* %9, i64 0, i32 0, i32 2
  %235 = load i64, i64* %234, align 8
  %236 = load i8*, i8** %223, align 8
  call void %231(i8* %232, i32 %233, i64 %235, i32 %213, i8* %236) #8
  br label %237

237:                                              ; preds = %228, %212, %200, %197, %188, %184, %182, %178
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  ret void
}

declare i32 @seg_alloc() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @mangle_label_name(%union.label* nocapture) unnamed_addr #0 {
  %2 = getelementptr inbounds %union.label, %union.label* %0, i64 0, i32 0, i32 7
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %8, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %union.label, %union.label* %0, i64 0, i32 0, i32 11
  %7 = load i32, i32* %6, align 4
  br label %14

8:                                                ; preds = %1
  %9 = getelementptr inbounds %union.label, %union.label* %0, i64 0, i32 0, i32 12
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %union.label, %union.label* %0, i64 0, i32 0, i32 11
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %76, label %14, !prof !4

14:                                               ; preds = %5, %8
  %15 = phi i32 [ %7, %5 ], [ %12, %8 ]
  switch i32 %15, label %19 [
    i32 2, label %16
    i32 1, label %16
    i32 3, label %16
    i32 4, label %16
    i32 7, label %22
    i32 6, label %22
  ]

16:                                               ; preds = %14, %14, %14, %14
  %17 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @mangle_strings, i64 0, i64 2), align 16
  %18 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @mangle_strings, i64 0, i64 3), align 8
  br label %22

19:                                               ; preds = %14
  %20 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @mangle_strings, i64 0, i64 0), align 16
  %21 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @mangle_strings, i64 0, i64 1), align 8
  br label %22

22:                                               ; preds = %14, %14, %19, %16
  %23 = phi i8* [ %20, %19 ], [ %17, %16 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %14 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %14 ]
  %24 = phi i8* [ %21, %19 ], [ %18, %16 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %14 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %14 ]
  %25 = getelementptr inbounds %union.label, %union.label* %0, i64 0, i32 0, i32 12
  store i32 %15, i32* %25, align 8
  %26 = load i8, i8* %23, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %36

28:                                               ; preds = %22
  %29 = load i8, i8* %24, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = getelementptr inbounds %union.label, %union.label* %0, i64 0, i32 0, i32 6
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast i8** %2 to i64*
  store i64 %34, i64* %35, align 8
  br label %76

36:                                               ; preds = %28, %22
  %37 = getelementptr inbounds %union.label, %union.label* %0, i64 0, i32 0, i32 6
  %38 = load i8*, i8** %37, align 8
  %39 = tail call i64 @strlen(i8* %23) #11
  %40 = tail call i64 @strlen(i8* %38) #11
  %41 = tail call i64 @strlen(i8* %24) #11
  %42 = add i64 %41, 1
  %43 = add i64 %40, %39
  %44 = add i64 %43, %42
  %45 = load %struct.permts*, %struct.permts** @perm_tail, align 8
  %46 = getelementptr inbounds %struct.permts, %struct.permts* %45, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %struct.permts, %struct.permts* %45, i64 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = sub i32 %47, %49
  %51 = zext i32 %50 to i64
  %52 = icmp ugt i64 %44, %51
  br i1 %52, label %53, label %66

53:                                               ; preds = %36
  %54 = icmp ugt i64 %44, 16384
  %55 = select i1 %54, i64 %44, i64 16384
  %56 = add i64 %55, 16
  %57 = tail call noalias i8* @nasm_malloc(i64 %56) #10
  %58 = load i8**, i8*** bitcast (%struct.permts** @perm_tail to i8***), align 8
  store i8* %57, i8** %58, align 8
  store i8* %57, i8** bitcast (%struct.permts** @perm_tail to i8**), align 8
  %59 = bitcast i8* %57 to %struct.permts**
  store %struct.permts* null, %struct.permts** %59, align 8
  %60 = trunc i64 %55 to i32
  %61 = getelementptr inbounds i8, i8* %57, i64 8
  %62 = bitcast i8* %61 to i32*
  store i32 %60, i32* %62, align 8
  %63 = getelementptr inbounds i8, i8* %57, i64 12
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4
  %65 = bitcast i8* %57 to %struct.permts*
  br label %66

66:                                               ; preds = %36, %53
  %67 = phi i32 [ 0, %53 ], [ %49, %36 ]
  %68 = phi %struct.permts* [ %65, %53 ], [ %45, %36 ]
  %69 = getelementptr inbounds %struct.permts, %struct.permts* %68, i64 0, i32 2
  %70 = zext i32 %67 to i64
  %71 = getelementptr inbounds %struct.permts, %struct.permts* %68, i64 0, i32 3, i64 %70
  %72 = trunc i64 %44 to i32
  %73 = add i32 %67, %72
  store i32 %73, i32* %69, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 1 %23, i64 %39, i1 false) #8
  %74 = getelementptr inbounds i8, i8* %71, i64 %39
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* align 1 %38, i64 %40, i1 false) #8
  %75 = getelementptr inbounds i8, i8* %74, i64 %40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %75, i8* align 1 %24, i64 %42, i1 false) #8
  store i8* %71, i8** %2, align 8
  br label %76

76:                                               ; preds = %31, %66, %8
  ret void
}

declare void @nasm_nonfatal(i8*, ...) local_unnamed_addr #2

declare void @nasm_warn(i32, i8*, ...) local_unnamed_addr #2

declare void @src_set(i32, i8*) local_unnamed_addr #2

declare void @nasm_error(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @backend_label(i8*, i32, i64) local_unnamed_addr #0 {
  %4 = tail call fastcc %union.label* @find_label(i8* %0, i1 zeroext true, i8* null) #8
  %5 = getelementptr inbounds %union.label, %union.label* %4, i64 0, i32 0, i32 11
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 7
  br i1 %7, label %19, label %8

8:                                                ; preds = %3
  %9 = load i32, i32* @_pass_type, align 4
  %10 = icmp ult i32 %9, 4
  %11 = icmp eq i32 %6, 0
  %12 = and i1 %11, %10
  br i1 %12, label %19, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %union.label, %union.label* %4, i64 0, i32 0, i32 6
  %15 = load i8*, i8** %14, align 8
  %16 = sext i32 %6 to i64
  %17 = getelementptr inbounds [8 x i8*], [8 x i8*]* @types, i64 0, i64 %16
  %18 = load i8*, i8** %17, align 8
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0), i8* %15, i8* %18, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0)) #8
  br label %20

19:                                               ; preds = %3, %8
  store i32 7, i32* %5, align 4
  tail call void @define_label(i8* %0, i32 %1, i64 %2, i1 zeroext false)
  br label %20

20:                                               ; preds = %13, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @init_labels() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @nasm_malloc(i64 11264) #10
  store i8* %1, i8** bitcast (%union.label** @lfree to i8**), align 8
  store i8* %1, i8** bitcast (%union.label** @ldata to i8**), align 8
  %2 = bitcast i8* %1 to %union.label*
  br label %3

3:                                                ; preds = %23, %0
  %4 = phi i64 [ 0, %0 ], [ %25, %23 ]
  %5 = getelementptr inbounds %union.label, %union.label* %2, i64 %4, i32 0, i32 0
  store i32 -3, i32* %5, align 8
  %6 = or i64 %4, 1
  %7 = getelementptr inbounds %union.label, %union.label* %2, i64 %6, i32 0, i32 0
  store i32 -3, i32* %7, align 8
  %8 = or i64 %4, 2
  %9 = getelementptr inbounds %union.label, %union.label* %2, i64 %8, i32 0, i32 0
  store i32 -3, i32* %9, align 8
  %10 = or i64 %4, 3
  %11 = icmp eq i64 %10, 127
  br i1 %11, label %12, label %23

12:                                               ; preds = %3
  %13 = getelementptr inbounds i8, i8* %1, i64 11176
  %14 = bitcast i8* %13 to i32*
  store i32 -2, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %1, i64 11192
  %16 = bitcast i8* %15 to %union.label**
  store %union.label* null, %union.label** %16, align 8
  %17 = tail call noalias i8* @nasm_malloc(i64 16400) #10
  store i8* %17, i8** bitcast (%struct.permts** @perm_tail to i8**), align 8
  store i8* %17, i8** bitcast (%struct.permts** @perm_head to i8**), align 8
  %18 = bitcast i8* %17 to %struct.permts**
  store %struct.permts* null, %struct.permts** %18, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = bitcast i8* %19 to i32*
  store i32 16384, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %17, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 4
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** @prevlabel, align 8
  store i1 true, i1* @initialized, align 1
  ret i32 0

23:                                               ; preds = %3
  %24 = getelementptr inbounds %union.label, %union.label* %2, i64 %10, i32 0, i32 0
  store i32 -3, i32* %24, align 8
  %25 = add nuw nsw i64 %4, 4
  br label %3
}

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @cleanup_labels() local_unnamed_addr #0 {
  store i1 false, i1* @initialized, align 1
  tail call void @hash_free(%struct.hash_table* nonnull @ltab) #8
  %1 = load %union.label*, %union.label** @ldata, align 8
  %2 = icmp eq %union.label* %1, null
  br i1 %2, label %3, label %6

3:                                                ; preds = %6, %0
  %4 = load %struct.permts*, %struct.permts** @perm_head, align 8
  %5 = icmp eq %struct.permts* %4, null
  br i1 %5, label %20, label %13

6:                                                ; preds = %0, %6
  %7 = phi %union.label* [ %11, %6 ], [ %1, %0 ]
  %8 = bitcast %union.label* %7 to i8*
  %9 = getelementptr inbounds %union.label, %union.label* %7, i64 127, i32 0, i32 3
  %10 = bitcast i64* %9 to %union.label**
  %11 = load %union.label*, %union.label** %10, align 8
  tail call void @nasm_free(i8* %8) #8
  %12 = icmp eq %union.label* %11, null
  br i1 %12, label %3, label %6

13:                                               ; preds = %3, %13
  %14 = phi %struct.permts* [ %18, %13 ], [ %4, %3 ]
  %15 = bitcast %struct.permts* %14 to i64*
  store %struct.permts* %14, %struct.permts** @perm_tail, align 8
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* bitcast (%struct.permts** @perm_head to i64*), align 8
  %17 = bitcast %struct.permts* %14 to i8*
  tail call void @nasm_free(i8* nonnull %17) #8
  %18 = load %struct.permts*, %struct.permts** @perm_head, align 8
  %19 = icmp eq %struct.permts* %18, null
  br i1 %19, label %20, label %13

20:                                               ; preds = %13, %3
  ret void
}

declare void @hash_free(%struct.hash_table*) local_unnamed_addr #2

declare void @nasm_free(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @local_scope(i8* nocapture readonly) local_unnamed_addr #4 {
  %2 = load i8, i8* @tasm_compatible_mode, align 1, !range !3
  %3 = icmp ne i8 %2, 0
  %4 = load i8, i8* %0, align 1
  %5 = icmp eq i8 %4, 64
  %6 = and i1 %3, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 64
  br i1 %10, label %17, label %19

11:                                               ; preds = %1
  %12 = icmp eq i8 %4, 46
  br i1 %12, label %13, label %19

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 46
  br i1 %16, label %19, label %17

17:                                               ; preds = %13, %7
  %18 = load i8*, i8** @prevlabel, align 8
  br label %19

19:                                               ; preds = %13, %11, %7, %17
  %20 = phi i8* [ %18, %17 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %13 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %7 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %11 ]
  ret i8* %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: cold noreturn
declare void @nasm_assert_failed(i8*, i32, i8*) local_unnamed_addr #5

declare noalias i8* @nasm_strcat(i8*, i8*) local_unnamed_addr #2

declare i8** @hash_find(%struct.hash_table*, i8*, %struct.hash_insert*) local_unnamed_addr #2

declare i8** @hash_add(%struct.hash_insert*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcasecmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @switch_segment(i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind allocsize(0) }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 2000, i32 6004}
