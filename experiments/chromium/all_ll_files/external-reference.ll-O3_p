; ModuleID = '../../v8/src/codegen/external-reference.cc'
source_filename = "../../v8/src/codegen/external-reference.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1189" = type { %"struct.std::__1::__atomic_base.1190" }
%"struct.std::__1::__atomic_base.1190" = type { %"struct.std::__1::__atomic_base.1191" }
%"struct.std::__1::__atomic_base.1191" = type { %"struct.std::__1::__cxx_atomic_impl.1192" }
%"struct.std::__1::__cxx_atomic_impl.1192" = type { %"struct.std::__1::__cxx_atomic_base_impl.1193" }
%"struct.std::__1::__cxx_atomic_base_impl.1193" = type { i32 }
%struct.anon.1194 = type { i32, i32, i32, i32 }
%struct.anon.1195 = type { i32, i32, i32, i32 }
%struct.anon.1196 = type { i64, i64 }
%struct.anon.1197 = type { i64, i64 }
%struct.anon.1198 = type { i64, i64 }
%struct.anon.1199 = type { i64, i64 }
%struct.anon.1200 = type { i64, i64 }
%struct.anon.1201 = type { i64, i64 }
%struct.anon.1202 = type { i64, i64 }
%struct.anon.1203 = type { i64, i64 }
%struct.anon.1204 = type { i64, i64 }
%struct.anon.1205 = type { i64, i64 }
%struct.anon.1206 = type { i64, i64 }
%struct.anon.1207 = type { i64, i64 }
%struct.anon.1208 = type { i64, i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.865", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.878", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.888", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.899", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.974", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1025"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1036", i32, i8, i8, i32, i32, %"class.std::__1::vector.1042", %"class.std::__1::vector.1042", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1049", i64, %"class.std::__1::unordered_map.1050", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1106", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1144", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1178", %"class.std::__1::vector.1182", %"class.std::__1::vector.1182", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1111", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1115", %"class.std::__1::unique_ptr.1121", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1127", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1111" = type { %"struct.std::__1::__atomic_base.1112" }
%"struct.std::__1::__atomic_base.1112" = type { %"struct.std::__1::__cxx_atomic_impl.1113" }
%"struct.std::__1::__cxx_atomic_impl.1113" = type { %"struct.std::__1::__cxx_atomic_base_impl.1114" }
%"struct.std::__1::__cxx_atomic_base_impl.1114" = type { i32 }
%"class.std::__1::unique_ptr.1115" = type { %"class.std::__1::__compressed_pair.1116" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.858" }
%"class.std::__1::vector.858" = type { %"class.std::__1::__vector_base.859" }
%"class.std::__1::__vector_base.859" = type { i64**, i64**, %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { i64** }
%"class.std::__1::unique_ptr.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.858", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1127" = type { %"class.std::__1::__vector_base.1128" }
%"class.std::__1::__vector_base.1128" = type { %"struct.std::__1::pair.1129"*, %"struct.std::__1::pair.1129"*, %"class.std::__1::__compressed_pair.1130" }
%"struct.std::__1::pair.1129" = type opaque
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"struct.std::__1::pair.1129"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.775", %"class.std::__1::unique_ptr.782" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.738", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.762", %"class.v8::internal::Handle.774", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.738" = type { %"class.std::__1::__vector_base.739" }
%"class.std::__1::__vector_base.739" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.757" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.740", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.752", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.740" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.748" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.743" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.741", %union.anon.742 }
%"class.v8::internal::Handle.741" = type { %"class.v8::internal::HandleBase" }
%union.anon.742 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::Optional.752" = type { %"class.v8::base::internal::OptionalBase.753" }
%"class.v8::base::internal::OptionalBase.753" = type { %"struct.v8::base::internal::OptionalStorage.754" }
%"struct.v8::base::internal::OptionalStorage.754" = type { %"struct.v8::base::internal::OptionalStorageBase.755" }
%"struct.v8::base::internal::OptionalStorageBase.755" = type { i8, %union.anon.756 }
%union.anon.756 = type { i8 }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.762" = type { %"class.std::__1::__deque_base.763" }
%"class.std::__1::__deque_base.763" = type { %"struct.std::__1::__split_buffer.764", i64, %"class.std::__1::__compressed_pair.770" }
%"struct.std::__1::__split_buffer.764" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.765" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::Handle.774" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.775" = type { %"class.std::__1::__vector_base.776" }
%"class.std::__1::__vector_base.776" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.777" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.794", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.794" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.800", %"class.v8::internal::DetachableVector.801", %"class.v8::internal::DetachableVector.800", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.801" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.800" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.788", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.802", %"class.std::__1::vector.808", %"class.std::__1::unique_ptr.815", %"class.std::__1::vector.822", %"class.std::__1::unique_ptr.829", i64, %"class.std::__1::vector.835", %"class.std::__1::vector.843", %"class.std::__1::vector.851", i8, i8, i32 }
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.810" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.v8::internal::GlobalHandles::NodeSpace.818"* }
%"class.v8::internal::GlobalHandles::NodeSpace.818" = type opaque
%"class.std::__1::vector.822" = type { %"class.std::__1::__vector_base.823" }
%"class.std::__1::__vector_base.823" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.824" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.835" = type { %"class.std::__1::__vector_base.836" }
%"class.std::__1::__vector_base.836" = type { %"struct.std::__1::pair.837"*, %"struct.std::__1::pair.837"*, %"class.std::__1::__compressed_pair.838" }
%"struct.std::__1::pair.837" = type opaque
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"struct.std::__1::pair.837"* }
%"class.std::__1::vector.843" = type { %"class.std::__1::__vector_base.844" }
%"class.std::__1::__vector_base.844" = type { %"struct.std::__1::pair.845"*, %"struct.std::__1::pair.845"*, %"class.std::__1::__compressed_pair.846" }
%"struct.std::__1::pair.845" = type opaque
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.std::__1::pair.845"* }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.853" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.858", %"class.std::__1::vector.865" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.872" }
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type { [512 x i8], %"struct.v8::internal::RegExpStack::ThreadLocal", %"class.v8::internal::Isolate"* }
%"struct.v8::internal::RegExpStack::ThreadLocal" = type <{ i8*, i8*, i64, i64, i8, i8, [6 x i8] }>
%"class.std::__1::vector.865" = type { %"class.std::__1::__vector_base.866" }
%"class.std::__1::__vector_base.866" = type { i32*, i32*, %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { i32* }
%"class.v8::internal::DateCache" = type { i32 (...)**, %"class.v8::internal::Smi", [32 x %"struct.v8::internal::DateCache::DST"], i32, %"struct.v8::internal::DateCache::DST"*, %"struct.v8::internal::DateCache::DST"*, i32, i8, i32, i32, i32, i32, i8*, i8*, %"class.v8::base::TimezoneCache"* }
%"class.v8::internal::Smi" = type { %"class.v8::internal::Object" }
%"struct.v8::internal::DateCache::DST" = type { i32, i32, i32, i32 }
%"class.v8::base::TimezoneCache" = type { i32 (...)** }
%"struct.std::__1::atomic.878" = type { %"struct.std::__1::__atomic_base.879" }
%"struct.std::__1::__atomic_base.879" = type { %"struct.std::__1::__cxx_atomic_impl.880" }
%"struct.std::__1::__cxx_atomic_impl.880" = type { %"struct.std::__1::__cxx_atomic_base_impl.881" }
%"struct.std::__1::__cxx_atomic_base_impl.881" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.888" = type { %"struct.std::__1::__atomic_base.889" }
%"struct.std::__1::__atomic_base.889" = type { %"struct.std::__1::__cxx_atomic_impl.890" }
%"struct.std::__1::__cxx_atomic_impl.890" = type { %"struct.std::__1::__cxx_atomic_base_impl.891" }
%"struct.std::__1::__cxx_atomic_base_impl.891" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.895 }
%union.anon.895 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.899" = type { %"class.std::__1::__hash_table.900" }
%"class.std::__1::__hash_table.900" = type <{ %"class.std::__1::unique_ptr.901", %"class.std::__1::__compressed_pair.911", %"class.std::__1::__compressed_pair.916", %"class.std::__1::__compressed_pair.919", [4 x i8] }>
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903", %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"struct.std::__1::__hash_node_base.904"** }
%"struct.std::__1::__hash_node_base.904" = type { %"struct.std::__1::__hash_node_base.904"* }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.std::__1::__bucket_list_deallocator.906" }
%"class.std::__1::__bucket_list_deallocator.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"struct.std::__1::__hash_node_base.904" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.925", %"class.v8::internal::Handle.931", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.932", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.931" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.932" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.933", %"class.std::__1::vector.939", %"class.std::__1::unique_ptr.947", %"class.std::__1::unique_ptr.953", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.959", %"class.std::__1::vector.965", %"struct.std::__1::pair.973" }
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.939" = type { %"class.std::__1::__vector_base.940" }
%"class.std::__1::__vector_base.940" = type { %"class.std::__1::unique_ptr.941"*, %"class.std::__1::unique_ptr.941"*, %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::unique_ptr.941" = type opaque
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.std::__1::unique_ptr.941"* }
%"class.std::__1::unique_ptr.947" = type { %"class.std::__1::__compressed_pair.948" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.965" = type { %"class.std::__1::__vector_base.966" }
%"class.std::__1::__vector_base.966" = type { %"struct.std::__1::pair.967"*, %"struct.std::__1::pair.967"*, %"class.std::__1::__compressed_pair.968" }
%"struct.std::__1::pair.967" = type opaque
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"struct.std::__1::pair.967"* }
%"struct.std::__1::pair.973" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.974" = type { %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.977", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.977" = type { %"class.std::__1::__hash_table.978" }
%"class.std::__1::__hash_table.978" = type <{ %"class.std::__1::unique_ptr.979", %"class.std::__1::__compressed_pair.989", %"class.std::__1::__compressed_pair.994", %"class.std::__1::__compressed_pair.998", [4 x i8] }>
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981", %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"struct.std::__1::__hash_node_base.982"** }
%"struct.std::__1::__hash_node_base.982" = type { %"struct.std::__1::__hash_node_base.982"* }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.std::__1::__bucket_list_deallocator.984" }
%"class.std::__1::__bucket_list_deallocator.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"struct.std::__1::__hash_node_base.982" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type { i32 (...)**, %"class.v8::internal::Isolate"*, [768 x i64], %"class.std::__1::unique_ptr.1006", i64 }
%"class.std::__1::unique_ptr.1006" = type { %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1011" }
%"class.std::__1::deque.1011" = type { %"class.std::__1::__deque_base.1012" }
%"class.std::__1::__deque_base.1012" = type { %"struct.std::__1::__split_buffer.1013", i64, %"class.std::__1::__compressed_pair.1020" }
%"struct.std::__1::__split_buffer.1013" = type { %"struct.std::__1::pair.1014"**, %"struct.std::__1::pair.1014"**, %"struct.std::__1::pair.1014"**, %"class.std::__1::__compressed_pair.1015" }
%"struct.std::__1::pair.1014" = type opaque
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.1016" }
%"struct.std::__1::__compressed_pair_elem.1016" = type { %"struct.std::__1::pair.1014"** }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1025" = type { %"class.std::__1::__vector_base.1026" }
%"class.std::__1::__vector_base.1026" = type { %"class.v8::internal::Handle.741"*, %"class.v8::internal::Handle.741"*, %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"class.v8::internal::Handle.741"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.1032" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.1032" = type { %"class.std::__1::__vector_base.1033" }
%"class.std::__1::__vector_base.1033" = type { %"struct.std::__1::pair.1014"*, %"struct.std::__1::pair.1014"*, %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"struct.std::__1::pair.1014"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.883", i32, %"class.v8::Local.0" }
%"class.v8::Local.883" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1036" = type { %"class.std::__1::__compressed_pair.1037" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1042" = type { %"class.std::__1::__vector_base.1043" }
%"class.std::__1::__vector_base.1043" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.1045" }
%"struct.std::__1::__compressed_pair_elem.1045" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1049" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1050" = type { %"class.std::__1::__hash_table.1051" }
%"class.std::__1::__hash_table.1051" = type <{ %"class.std::__1::unique_ptr.1052", %"class.std::__1::__compressed_pair.1062", %"class.std::__1::__compressed_pair.1067", %"class.std::__1::__compressed_pair.1070", [4 x i8] }>
%"class.std::__1::unique_ptr.1052" = type { %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054", %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"struct.std::__1::__hash_node_base.1055"** }
%"struct.std::__1::__hash_node_base.1055" = type { %"struct.std::__1::__hash_node_base.1055"* }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.std::__1::__bucket_list_deallocator.1057" }
%"class.std::__1::__bucket_list_deallocator.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"struct.std::__1::__hash_node_base.1055" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1074", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1103", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1104", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1074" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1099, %union.anon.1101, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1099 = type { i64 }
%union.anon.1101 = type { i64 }
%"class.std::__1::weak_ptr.1103" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1104" = type { %"class.v8::PersistentBase.1105" }
%"class.v8::PersistentBase.1105" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1075", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1075" = type { %"class.std::__1::__hash_table.1076" }
%"class.std::__1::__hash_table.1076" = type <{ %"class.std::__1::unique_ptr.1077", %"class.std::__1::__compressed_pair.1087", %"class.std::__1::__compressed_pair.1092", %"class.std::__1::__compressed_pair.1095", [4 x i8] }>
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079", %"struct.std::__1::__compressed_pair_elem.1081" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"struct.std::__1::__hash_node_base.1080"** }
%"struct.std::__1::__hash_node_base.1080" = type { %"struct.std::__1::__hash_node_base.1080"* }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"class.std::__1::__bucket_list_deallocator.1082" }
%"class.std::__1::__bucket_list_deallocator.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"struct.std::__1::__hash_node_base.1080" }
%"class.std::__1::__compressed_pair.1092" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1135", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1144" = type { %"class.std::__1::__compressed_pair.1145" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.884", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.884" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1152" }
%"class.std::__1::unordered_map.1152" = type { %"class.std::__1::__hash_table.1153" }
%"class.std::__1::__hash_table.1153" = type <{ %"class.std::__1::unique_ptr.1154", %"class.std::__1::__compressed_pair.1164", %"class.std::__1::__compressed_pair.1169", %"class.std::__1::__compressed_pair.1172", [4 x i8] }>
%"class.std::__1::unique_ptr.1154" = type { %"class.std::__1::__compressed_pair.1155" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156", %"struct.std::__1::__compressed_pair_elem.1158" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"struct.std::__1::__hash_node_base.1157"** }
%"struct.std::__1::__hash_node_base.1157" = type { %"struct.std::__1::__hash_node_base.1157"* }
%"struct.std::__1::__compressed_pair_elem.1158" = type { %"class.std::__1::__bucket_list_deallocator.1159" }
%"class.std::__1::__bucket_list_deallocator.1159" = type { %"class.std::__1::__compressed_pair.1160" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"struct.std::__1::__hash_node_base.1157" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1178" = type { %"struct.std::__1::__atomic_base.1179" }
%"struct.std::__1::__atomic_base.1179" = type { %"struct.std::__1::__cxx_atomic_impl.1180" }
%"struct.std::__1::__cxx_atomic_impl.1180" = type { %"struct.std::__1::__cxx_atomic_base_impl.1181" }
%"struct.std::__1::__cxx_atomic_base_impl.1181" = type { %"class.std::__1::vector.1182"* }
%"class.std::__1::vector.1182" = type { %"class.std::__1::__vector_base.1183" }
%"class.std::__1::__vector_base.1183" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1184" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::StringSearch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1235", i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::Vector.1235" = type { i8*, i64 }
%"class.v8::internal::StringSearch.1238" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1237", i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::Vector.1237" = type { i16*, i64 }
%"class.v8::internal::StringSearch.1241" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1235", i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::StringSearch.1243" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1237", i32 (%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::ApiFunction" = type { i64 }
%"class.v8::internal::SCTableReference" = type { i64 }
%"class.v8::Name" = type { i8 }
%"class.v8::PropertyCallbackInfo" = type opaque
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.v8::internal::baseline::BytecodeOffsetIterator" = type <{ %"class.v8::internal::Handle.1218", i8*, i32, i32, i64, i64, i32, [4 x i8], %"class.v8::internal::BytecodeArray", %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::LocalHeap"*, %"class.v8::base::Optional.1220", [6 x i8] }>
%"class.v8::internal::Handle.1218" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::BytecodeArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::interpreter::BytecodeArrayIterator" = type { %"class.v8::internal::Handle.1219", i8*, i8*, i8*, i8, i32, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::Handle.1219" = type { %"class.v8::internal::HandleBase" }
%"class.v8::base::Optional.1220" = type { %"class.v8::base::internal::OptionalBase.1221" }
%"class.v8::base::internal::OptionalBase.1221" = type { %"struct.v8::base::internal::OptionalStorage.1222" }
%"struct.v8::base::internal::OptionalStorage.1222" = type { %"struct.v8::base::internal::OptionalStorageBase.1223" }
%"struct.v8::base::internal::OptionalStorageBase.1223" = type { i8, %union.anon.1224 }
%union.anon.1224 = type { i8 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2v88internal17ExternalReference17search_string_rawIKhS3_EES1_v = comdat any

$_ZN2v88internal15SearchStringRawIKhS2_EElPNS0_7IsolateEPKT_iPKT0_ii = comdat any

$_ZN2v88internal17ExternalReference17search_string_rawIKhKtEES1_v = comdat any

$_ZN2v88internal15SearchStringRawIKhKtEElPNS0_7IsolateEPKT_iPKT0_ii = comdat any

$_ZN2v88internal17ExternalReference17search_string_rawIKtKhEES1_v = comdat any

$_ZN2v88internal15SearchStringRawIKtKhEElPNS0_7IsolateEPKT_iPKT0_ii = comdat any

$_ZN2v88internal17ExternalReference17search_string_rawIKtS3_EES1_v = comdat any

$_ZN2v88internal15SearchStringRawIKtS2_EElPNS0_7IsolateEPKT_iPKT0_ii = comdat any

$_ZN2v88internal4Code30GetBaselinePCForBytecodeOffsetEiNS1_20BytecodeToPCPositionENS0_13BytecodeArrayE = comdat any

$_ZN2v88internal4Code36GetBaselinePCForNextExecutedBytecodeEiNS0_13BytecodeArrayE = comdat any

$_ZN2v88internal22HandleScopeImplementer21EnterMicrotaskContextENS0_7ContextE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2v88internal12StringSearchIhhE16SingleCharSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIhhE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhtE16SingleCharSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE16SingleCharSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi = comdat any

@_ZN2v88internalL23double_min_int_constantE = internal constant double 0xC1E0000000000000, align 8
@_ZN2v88internal31FLAG_mock_arraybuffer_allocatorE = external global i8, align 1
@_ZN2v88internal24FLAG_builtin_subclassingE = external global i8, align 1
@_ZN2v88internal33FLAG_harmony_regexp_match_indicesE = external global i8, align 1
@_ZN2v88internal12TracingFlags13runtime_statsE = external global %"struct.std::__1::atomic.1189", align 4
@_ZN2v88internalL24double_one_half_constantE = internal constant double 5.000000e-01, align 8
@_ZN2v88internalL28double_the_hole_nan_constantE = internal constant i64 -2251799814209537, align 8
@_ZN2v88internalL27double_uint32_bias_constantE = internal constant double 0x41F0000000000000, align 8
@_ZN2v88internalL23float_absolute_constantE = internal constant %struct.anon.1194 { i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647 }, align 16
@_ZN2v88internalL21float_negate_constantE = internal constant %struct.anon.1195 { i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648 }, align 16
@_ZN2v88internalL24double_absolute_constantE = internal constant %struct.anon.1196 { i64 9223372036854775807, i64 9223372036854775807 }, align 16
@_ZN2v88internalL22double_negate_constantE = internal constant %struct.anon.1197 { i64 -9223372036854775808, i64 -9223372036854775808 }, align 16
@_ZN2v88internalL23wasm_i8x16_swizzle_maskE = internal constant %struct.anon.1198 { i64 8102099357864587376, i64 8102099357864587376 }, align 16
@_ZN2v88internalL22wasm_i8x16_popcnt_maskE = internal constant %struct.anon.1199 { i64 216737935419048192, i64 289078108257124865 }, align 16
@_ZN2v88internalL21wasm_i8x16_splat_0x01E = internal constant %struct.anon.1200 { i64 72340172838076673, i64 72340172838076673 }, align 16
@_ZN2v88internalL21wasm_i8x16_splat_0x0fE = internal constant %struct.anon.1201 { i64 1085102592571150095, i64 1085102592571150095 }, align 16
@_ZN2v88internalL21wasm_i8x16_splat_0x33E = internal constant %struct.anon.1202 { i64 3689348814741910323, i64 3689348814741910323 }, align 16
@_ZN2v88internalL21wasm_i8x16_splat_0x55E = internal constant %struct.anon.1203 { i64 6148914691236517205, i64 6148914691236517205 }, align 16
@_ZN2v88internalL23wasm_i16x8_splat_0x0001E = internal constant %struct.anon.1204 { i64 281479271743489, i64 281479271743489 }, align 16
@_ZN2v88internalL39wasm_f64x2_convert_low_i32x4_u_int_maskE = internal constant %struct.anon.1205 { i64 4841369600550502400, i64 4841369600550502400 }, align 16
@_ZN2v88internal11CpuFeatures23supports_wasm_simd_128_E = external global i8, align 1
@_ZN2v88internalL22wasm_double_2_power_52E = internal constant %struct.anon.1206 { i64 4841369599423283200, i64 4841369599423283200 }, align 16
@_ZN2v88internalL24wasm_int32_max_as_doubleE = internal constant %struct.anon.1207 { i64 4746794007244308480, i64 4746794007244308480 }, align 16
@_ZN2v88internalL25wasm_uint32_max_as_doubleE = internal constant %struct.anon.1208 { i64 4751297606873776128, i64 4751297606873776128 }, align 16
@_ZN2v88internal38FLAG_enable_experimental_regexp_engineE = external global i8, align 1
@_ZN2v88internal11CpuFeatures10supported_E = external global i32, align 4
@_ZN2v88internal16FLAG_predictableE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c".entry>\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"abort: %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"abort: <unknown reason: %d>\0A\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE = external constant [3 x [197 x i8]], align 16
@.str.5 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"kind() == CodeKind::BASELINE\00", align 1
@_ZN2v88internal26NativeRegExpMacroAssembler18word_character_mapE = external constant [256 x i8], align 16
@.str.7 = private unnamed_addr constant [41 x i8] c"Object(string).IsExternalOneByteString()\00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"Object(string).IsExternalTwoByteString()\00", align 1
@_ZN2v88internal20DetachableVectorBase16kMinimumCapacityE = external local_unnamed_addr constant i64, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal17ExternalReference17search_string_rawIKhS3_EES1_v() local_unnamed_addr #0 comdat align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i8*, i32, i8*, i32, i32)* @_ZN2v88internal15SearchStringRawIKhS2_EElPNS0_7IsolateEPKT_iPKT0_ii to i64)
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal15SearchStringRawIKhS2_EElPNS0_7IsolateEPKT_iPKT0_ii(%"class.v8::internal::Isolate"*, i8*, i32, i8*, i32, i32) #0 comdat {
  %7 = alloca %"class.v8::internal::StringSearch", align 8
  %8 = sext i32 %2 to i64
  %9 = sext i32 %4 to i64
  %10 = bitcast %"class.v8::internal::StringSearch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #20
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 1, i32 0
  store i8* %3, i8** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 1, i32 1
  store i64 %9, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 3
  %15 = icmp sgt i32 %4, 250
  %16 = select i1 %15, i32 %4, i32 250
  %17 = add nsw i32 %16, -250
  store i32 %17, i32* %14, align 8
  %18 = icmp slt i32 %4, 7
  br i1 %18, label %19, label %24

19:                                               ; preds = %6
  %20 = icmp eq i32 %4, 1
  %21 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 2
  br i1 %20, label %22, label %23

22:                                               ; preds = %19
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE16SingleCharSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %21, align 8
  br label %26

23:                                               ; preds = %19
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %21, align 8
  br label %26

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %25, align 8
  br label %26

26:                                               ; preds = %22, %23, %24
  %27 = phi i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* [ @_ZN2v88internal12StringSearchIhhE16SingleCharSearchEPS2_NS0_6VectorIKhEEi, %22 ], [ @_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi, %23 ], [ @_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi, %24 ]
  %28 = call i32 %27(%"class.v8::internal::StringSearch"* nonnull %7, i8* %1, i64 %8, i32 %5) #20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #20
  %29 = sext i32 %28 to i64
  ret i64 %29
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference8RedirectEmNS1_4TypeE(i64 returned, i32) local_unnamed_addr #2 align 2 {
  ret i64 %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal17ExternalReference17search_string_rawIKhKtEES1_v() local_unnamed_addr #0 comdat align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i8*, i32, i16*, i32, i32)* @_ZN2v88internal15SearchStringRawIKhKtEElPNS0_7IsolateEPKT_iPKT0_ii to i64)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal15SearchStringRawIKhKtEElPNS0_7IsolateEPKT_iPKT0_ii(%"class.v8::internal::Isolate"*, i8*, i32, i16*, i32, i32) #0 comdat {
  %7 = alloca %"class.v8::internal::StringSearch.1238", align 8
  %8 = sext i32 %2 to i64
  %9 = sext i32 %4 to i64
  %10 = bitcast %"class.v8::internal::StringSearch.1238"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #20
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %7, i64 0, i32 1, i32 0
  store i16* %3, i16** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %7, i64 0, i32 1, i32 1
  store i64 %9, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %7, i64 0, i32 3
  %15 = icmp sgt i32 %4, 250
  %16 = select i1 %15, i32 %4, i32 250
  %17 = add nsw i32 %16, -250
  store i32 %17, i32* %14, align 8
  %18 = getelementptr inbounds i16, i16* %3, i64 %9
  %19 = icmp ugt i32 %4, 7
  br i1 %19, label %20, label %56

20:                                               ; preds = %6
  %21 = ptrtoint i16* %3 to i64
  %22 = and i64 %21, 7
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = load i16, i16* %3, align 2
  %26 = icmp ugt i16 %25, 255
  br i1 %26, label %36, label %40

27:                                               ; preds = %40, %20
  %28 = phi i16* [ %3, %20 ], [ %42, %40 ]
  %29 = getelementptr inbounds i16, i16* %28, i64 8
  %30 = icmp ugt i16* %29, %18
  br i1 %30, label %56, label %46

31:                                               ; preds = %40
  %32 = load i16, i16* %42, align 2
  %33 = icmp ugt i16 %32, 255
  br i1 %33, label %34, label %40

34:                                               ; preds = %31
  %35 = ptrtoint i16* %42 to i64
  br label %36

36:                                               ; preds = %34, %24
  %37 = phi i64 [ %21, %24 ], [ %35, %34 ]
  %38 = sub i64 %37, %21
  %39 = ashr exact i64 %38, 1
  br label %77

40:                                               ; preds = %24, %31
  %41 = phi i16* [ %42, %31 ], [ %3, %24 ]
  %42 = getelementptr inbounds i16, i16* %41, i64 1
  %43 = ptrtoint i16* %42 to i64
  %44 = and i64 %43, 7
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %27, label %31

46:                                               ; preds = %27, %52
  %47 = phi i16* [ %53, %52 ], [ %28, %27 ]
  %48 = bitcast i16* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, -71777214294589696
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %46
  %53 = getelementptr inbounds i16, i16* %47, i64 4
  %54 = getelementptr inbounds i16, i16* %47, i64 12
  %55 = icmp ugt i16* %54, %18
  br i1 %55, label %56, label %46

56:                                               ; preds = %52, %46, %27, %6
  %57 = phi i16* [ %3, %6 ], [ %28, %27 ], [ %53, %52 ], [ %47, %46 ]
  %58 = icmp ult i16* %57, %18
  br i1 %58, label %59, label %71

59:                                               ; preds = %56, %68
  %60 = phi i16* [ %69, %68 ], [ %57, %56 ]
  %61 = load i16, i16* %60, align 2
  %62 = icmp ugt i16 %61, 255
  br i1 %62, label %63, label %68

63:                                               ; preds = %59
  %64 = ptrtoint i16* %60 to i64
  %65 = ptrtoint i16* %3 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 1
  br label %77

68:                                               ; preds = %59
  %69 = getelementptr inbounds i16, i16* %60, i64 1
  %70 = icmp ult i16* %69, %18
  br i1 %70, label %59, label %71

71:                                               ; preds = %68, %56
  %72 = phi i16* [ %57, %56 ], [ %69, %68 ]
  %73 = ptrtoint i16* %72 to i64
  %74 = ptrtoint i16* %3 to i64
  %75 = sub i64 %73, %74
  %76 = lshr exact i64 %75, 1
  br label %77

77:                                               ; preds = %71, %63, %36
  %78 = phi i64 [ %39, %36 ], [ %67, %63 ], [ %76, %71 ]
  %79 = trunc i64 %78 to i32
  %80 = icmp slt i32 %79, %4
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %7, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)** %82, align 8
  br label %92

83:                                               ; preds = %77
  %84 = icmp slt i32 %4, 7
  br i1 %84, label %85, label %90

85:                                               ; preds = %83
  %86 = icmp eq i32 %4, 1
  %87 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %7, i64 0, i32 2
  br i1 %86, label %88, label %89

88:                                               ; preds = %85
  store i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)** %87, align 8
  br label %92

89:                                               ; preds = %85
  store i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)** %87, align 8
  br label %92

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %7, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)** %91, align 8
  br label %92

92:                                               ; preds = %81, %88, %89, %90
  %93 = phi i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)* [ @_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi, %81 ], [ @_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi, %88 ], [ @_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi, %89 ], [ @_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi, %90 ]
  %94 = call i32 %93(%"class.v8::internal::StringSearch.1238"* nonnull %7, i8* %1, i64 %8, i32 %5) #20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #20
  %95 = sext i32 %94 to i64
  ret i64 %95
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal17ExternalReference17search_string_rawIKtKhEES1_v() local_unnamed_addr #0 comdat align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i16*, i32, i8*, i32, i32)* @_ZN2v88internal15SearchStringRawIKtKhEElPNS0_7IsolateEPKT_iPKT0_ii to i64)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal15SearchStringRawIKtKhEElPNS0_7IsolateEPKT_iPKT0_ii(%"class.v8::internal::Isolate"*, i16*, i32, i8*, i32, i32) #0 comdat {
  %7 = alloca %"class.v8::internal::StringSearch.1241", align 8
  %8 = sext i32 %2 to i64
  %9 = sext i32 %4 to i64
  %10 = bitcast %"class.v8::internal::StringSearch.1241"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #20
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %7, i64 0, i32 1, i32 0
  store i8* %3, i8** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %7, i64 0, i32 1, i32 1
  store i64 %9, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %7, i64 0, i32 3
  %15 = icmp sgt i32 %4, 250
  %16 = select i1 %15, i32 %4, i32 250
  %17 = add nsw i32 %16, -250
  store i32 %17, i32* %14, align 8
  %18 = icmp slt i32 %4, 7
  br i1 %18, label %19, label %24

19:                                               ; preds = %6
  %20 = icmp eq i32 %4, 1
  %21 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %7, i64 0, i32 2
  br i1 %20, label %22, label %23

22:                                               ; preds = %19
  store i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE16SingleCharSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)** %21, align 8
  br label %26

23:                                               ; preds = %19
  store i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)** %21, align 8
  br label %26

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %7, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)** %25, align 8
  br label %26

26:                                               ; preds = %22, %23, %24
  %27 = phi i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)* [ @_ZN2v88internal12StringSearchIhtE16SingleCharSearchEPS2_NS0_6VectorIKtEEi, %22 ], [ @_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi, %23 ], [ @_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi, %24 ]
  %28 = call i32 %27(%"class.v8::internal::StringSearch.1241"* nonnull %7, i16* %1, i64 %8, i32 %5) #20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #20
  %29 = sext i32 %28 to i64
  ret i64 %29
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal17ExternalReference17search_string_rawIKtS3_EES1_v() local_unnamed_addr #0 comdat align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i16*, i32, i16*, i32, i32)* @_ZN2v88internal15SearchStringRawIKtS2_EElPNS0_7IsolateEPKT_iPKT0_ii to i64)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal15SearchStringRawIKtS2_EElPNS0_7IsolateEPKT_iPKT0_ii(%"class.v8::internal::Isolate"*, i16*, i32, i16*, i32, i32) #0 comdat {
  %7 = alloca %"class.v8::internal::StringSearch.1243", align 8
  %8 = sext i32 %2 to i64
  %9 = sext i32 %4 to i64
  %10 = bitcast %"class.v8::internal::StringSearch.1243"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #20
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %7, i64 0, i32 1, i32 0
  store i16* %3, i16** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %7, i64 0, i32 1, i32 1
  store i64 %9, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %7, i64 0, i32 3
  %15 = icmp sgt i32 %4, 250
  %16 = select i1 %15, i32 %4, i32 250
  %17 = add nsw i32 %16, -250
  store i32 %17, i32* %14, align 8
  %18 = icmp slt i32 %4, 7
  br i1 %18, label %19, label %24

19:                                               ; preds = %6
  %20 = icmp eq i32 %4, 1
  %21 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %7, i64 0, i32 2
  br i1 %20, label %22, label %23

22:                                               ; preds = %19
  store i32 (%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE16SingleCharSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32)** %21, align 8
  br label %26

23:                                               ; preds = %19
  store i32 (%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32)** %21, align 8
  br label %26

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %7, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32)** %25, align 8
  br label %26

26:                                               ; preds = %22, %23, %24
  %27 = phi i32 (%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32)* [ @_ZN2v88internal12StringSearchIttE16SingleCharSearchEPS2_NS0_6VectorIKtEEi, %22 ], [ @_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi, %23 ], [ @_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi, %24 ]
  %28 = call i32 %27(%"class.v8::internal::StringSearch.1243"* nonnull %7, i16* %1, i64 %8, i32 %5) #20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #20
  %29 = sext i32 %28 to i64
  ret i64 %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference6CreateEPNS_11ApiFunctionENS1_4TypeE(%"class.v8::ApiFunction"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::ApiFunction", %"class.v8::ApiFunction"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference6CreateENS0_7Runtime10FunctionIdE(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call %"struct.v8::internal::Runtime::Function"* @_ZN2v88internal7Runtime13FunctionForIdENS1_10FunctionIdE(i32 %0) #20
  %3 = getelementptr inbounds %"struct.v8::internal::Runtime::Function", %"struct.v8::internal::Runtime::Function"* %2, i64 0, i32 5
  %4 = load i8, i8* %3, align 1
  %5 = sext i8 %4 to i32
  %6 = add nsw i32 %5, -1
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #21
  unreachable

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.v8::internal::Runtime::Function", %"struct.v8::internal::Runtime::Function"* %2, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference6CreateEPKNS0_7Runtime8FunctionE(%"struct.v8::internal::Runtime::Function"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.v8::internal::Runtime::Function", %"struct.v8::internal::Runtime::Function"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 1
  %4 = sext i8 %3 to i32
  %5 = add nsw i32 %4, -1
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #21
  unreachable

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.v8::internal::Runtime::Function", %"struct.v8::internal::Runtime::Function"* %0, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  ret i64 %10
}

declare %"struct.v8::internal::Runtime::Function"* @_ZN2v88internal7Runtime13FunctionForIdENS1_10FunctionIdE(i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference6CreateEm(i64) local_unnamed_addr #2 align 2 {
  ret i64 %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference15isolate_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = ptrtoint %"class.v8::internal::Isolate"* %0 to i64
  ret i64 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference16builtins_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  %3 = tail call i64 @_ZN2v88internal4Heap15builtin_addressEi(%"class.v8::internal::Heap"* %2, i32 0) #20
  ret i64 %3
}

declare i64 @_ZN2v88internal4Heap15builtin_addressEi(%"class.v8::internal::Heap"*, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference32handle_scope_implementer_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 32
  %3 = ptrtoint %"class.v8::internal::HandleScopeImplementer"** %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference34interpreter_dispatch_table_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 72
  %3 = load %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::interpreter::Interpreter"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::Interpreter", %"class.v8::internal::interpreter::Interpreter"* %3, i64 0, i32 2, i64 0
  %5 = ptrtoint i64* %4 to i64
  ret i64 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference29interpreter_dispatch_countersEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 72
  %3 = load %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::interpreter::Interpreter"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::Interpreter", %"class.v8::internal::interpreter::Interpreter"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = bitcast i64** %4 to i64*
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference57address_of_interpreter_entry_trampoline_instruction_startEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 72
  %3 = load %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::interpreter::Interpreter"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::Interpreter", %"class.v8::internal::interpreter::Interpreter"* %3, i64 0, i32 4
  %5 = ptrtoint i64* %4 to i64
  ret i64 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference27bytecode_size_table_addressEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint ([3 x [197 x i8]]* @_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE to i64)
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference6CreateEPNS0_12StatsCounterE(%"class.v8::internal::StatsCounter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter"* %0, i64 0, i32 0, i32 2
  %7 = load i32*, i32** %6, align 8
  br label %12

8:                                                ; preds = %1
  store i8 1, i8* %2, align 8
  %9 = getelementptr inbounds %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter"* %0, i64 0, i32 0
  %10 = tail call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %9) #20
  %11 = getelementptr inbounds %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter"* %0, i64 0, i32 0, i32 2
  store i32* %10, i32** %11, align 8
  br label %12

12:                                               ; preds = %5, %8
  %13 = phi i32* [ %7, %5 ], [ %10, %8 ]
  %14 = ptrtoint i32* %13 to i64
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference6CreateENS0_16IsolateAddressIdEPNS0_7IsolateE(i32, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZN2v88internal7Isolate19get_address_from_idENS0_16IsolateAddressIdE(%"class.v8::internal::Isolate"* %1, i32 %0) #20
  ret i64 %3
}

declare i64 @_ZN2v88internal7Isolate19get_address_from_idENS0_16IsolateAddressIdE(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference6CreateERKNS0_16SCTableReferenceE(%"class.v8::internal::SCTableReference"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SCTableReference", %"class.v8::internal::SCTableReference"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference40write_barrier_marking_from_code_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64, i64)* @_ZN2v88internal12WriteBarrier15MarkingFromCodeEmm to i64)
}

declare i32 @_ZN2v88internal12WriteBarrier15MarkingFromCodeEmm(i64, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference30insert_remembered_set_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (%"class.v8::internal::MemoryChunk"*, i64)* @_ZN2v88internal4Heap31InsertIntoRememberedSetFromCodeEPNS0_11MemoryChunkEm to i64)
}

declare i32 @_ZN2v88internal4Heap31InsertIntoRememberedSetFromCodeEPNS0_11MemoryChunkEm(%"class.v8::internal::MemoryChunk"*, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference30delete_handle_scope_extensionsEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (%"class.v8::internal::Isolate"*)* @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE to i64)
}

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference36ephemeron_key_write_barrier_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64, i64, %"class.v8::internal::Isolate"*)* @_ZN2v88internal4Heap32EphemeronKeyWriteBarrierFromCodeEmmPNS0_7IsolateE to i64)
}

declare void @_ZN2v88internal4Heap32EphemeronKeyWriteBarrierFromCodeEmmPNS0_7IsolateE(i64, i64, %"class.v8::internal::Isolate"*) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference23get_date_field_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i64, i64)* @_ZN2v88internal6JSDate8GetFieldEPNS0_7IsolateEmm to i64)
}

declare i64 @_ZN2v88internal6JSDate8GetFieldEPNS0_7IsolateEmm(%"class.v8::internal::Isolate"*, i64, i64) #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference16date_cache_stampEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 45
  %3 = load %"class.v8::internal::DateCache"*, %"class.v8::internal::DateCache"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::DateCache", %"class.v8::internal::DateCache"* %3, i64 0, i32 1
  %5 = ptrtoint %"class.v8::internal::Smi"* %4 to i64
  ret i64 %5
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference44runtime_function_table_address_for_unittestsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #5 align 2 {
  %2 = tail call %"struct.v8::internal::Runtime::Function"* @_ZN2v88internal7Runtime20RuntimeFunctionTableEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #20
  %3 = ptrtoint %"struct.v8::internal::Runtime::Function"* %2 to i64
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference30runtime_function_table_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"struct.v8::internal::Runtime::Function"* @_ZN2v88internal7Runtime20RuntimeFunctionTableEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #20
  %3 = ptrtoint %"struct.v8::internal::Runtime::Function"* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference18stress_deopt_countEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 126
  %3 = ptrtoint i32* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference15force_slow_pathEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 127
  %3 = ptrtoint i8* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference24new_deoptimizer_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%"class.v8::internal::Deoptimizer"* (i64, i8, i32, i64, i32, %"class.v8::internal::Isolate"*)* @_ZN2v88internal11Deoptimizer3NewEmNS0_14DeoptimizeKindEjmiPNS0_7IsolateE to i64)
}

declare %"class.v8::internal::Deoptimizer"* @_ZN2v88internal11Deoptimizer3NewEmNS0_14DeoptimizeKindEjmiPNS0_7IsolateE(i64, i8 zeroext, i32, i64, i32, %"class.v8::internal::Isolate"*) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference30compute_output_frames_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (%"class.v8::internal::Deoptimizer"*)* @_ZN2v88internal11Deoptimizer19ComputeOutputFramesEPS1_ to i64)
}

declare void @_ZN2v88internal11Deoptimizer19ComputeOutputFramesEPS1_(%"class.v8::internal::Deoptimizer"*) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference14wasm_f32_truncEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm17f32_trunc_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm17f32_trunc_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference14wasm_f32_floorEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm17f32_floor_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm17f32_floor_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference13wasm_f32_ceilEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm16f32_ceil_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm16f32_ceil_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20wasm_f32_nearest_intEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm23f32_nearest_int_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm23f32_nearest_int_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference14wasm_f64_truncEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm17f64_trunc_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm17f64_trunc_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference14wasm_f64_floorEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm17f64_floor_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm17f64_floor_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference13wasm_f64_ceilEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm16f64_ceil_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm16f64_ceil_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20wasm_f64_nearest_intEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm23f64_nearest_int_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm23f64_nearest_int_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21wasm_int64_to_float32Ev() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm24int64_to_float32_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm24int64_to_float32_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22wasm_uint64_to_float32Ev() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm25uint64_to_float32_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm25uint64_to_float32_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21wasm_int64_to_float64Ev() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm24int64_to_float64_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm24int64_to_float64_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22wasm_uint64_to_float64Ev() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm25uint64_to_float64_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm25uint64_to_float64_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21wasm_float32_to_int64Ev() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm24float32_to_int64_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm24float32_to_int64_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22wasm_float32_to_uint64Ev() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm25float32_to_uint64_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm25float32_to_uint64_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21wasm_float64_to_int64Ev() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm24float64_to_int64_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm24float64_to_int64_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22wasm_float64_to_uint64Ev() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm25float64_to_uint64_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm25float64_to_uint64_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference25wasm_float32_to_int64_satEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm28float32_to_int64_sat_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm28float32_to_int64_sat_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference26wasm_float32_to_uint64_satEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm29float32_to_uint64_sat_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm29float32_to_uint64_sat_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference25wasm_float64_to_int64_satEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm28float64_to_int64_sat_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm28float64_to_int64_sat_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference26wasm_float64_to_uint64_satEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm29float64_to_uint64_sat_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm29float64_to_uint64_sat_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference14wasm_int64_divEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm17int64_div_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm17int64_div_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference14wasm_int64_modEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm17int64_mod_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm17int64_mod_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference15wasm_uint64_divEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm18uint64_div_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm18uint64_div_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference15wasm_uint64_modEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm18uint64_mod_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm18uint64_mod_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference15wasm_word32_ctzEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm18word32_ctz_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm18word32_ctz_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference15wasm_word64_ctzEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm18word64_ctz_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm18word64_ctz_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference18wasm_word32_popcntEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm21word32_popcnt_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm21word32_popcnt_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference18wasm_word64_popcntEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm21word64_popcnt_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm21word64_popcnt_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference15wasm_word32_rolEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm18word32_rol_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm18word32_rol_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference15wasm_word32_rorEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm18word32_ror_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm18word32_ror_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference15wasm_word64_rolEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm18word64_rol_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm18word64_rol_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference15wasm_word64_rorEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm18word64_ror_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm18word64_ror_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference15wasm_f64x2_ceilEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm18f64x2_ceil_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm18f64x2_ceil_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference16wasm_f64x2_floorEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm19f64x2_floor_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm19f64x2_floor_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference16wasm_f64x2_truncEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm19f64x2_trunc_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm19f64x2_trunc_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22wasm_f64x2_nearest_intEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm25f64x2_nearest_int_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm25f64x2_nearest_int_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference15wasm_f32x4_ceilEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm18f32x4_ceil_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm18f32x4_ceil_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference16wasm_f32x4_floorEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm19f32x4_floor_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm19f32x4_floor_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference16wasm_f32x4_truncEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm19f32x4_trunc_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm19f32x4_trunc_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22wasm_f32x4_nearest_intEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm25f32x4_nearest_int_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm25f32x4_nearest_int_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference16wasm_memory_initEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm19memory_init_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm19memory_init_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference16wasm_memory_copyEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm19memory_copy_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm19memory_copy_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference16wasm_memory_fillEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal4wasm19memory_fill_wrapperEm to i64)
}

declare i32 @_ZN2v88internal4wasm19memory_fill_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference16wasm_float64_powEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internal4wasm19float64_pow_wrapperEm to i64)
}

declare void @_ZN2v88internal4wasm19float64_pow_wrapperEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference35wasm_call_trap_callback_for_testingEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void ()* @_ZN2v88internal4wasm30call_trap_callback_for_testingEv to i64)
}

declare void @_ZN2v88internal4wasm30call_trap_callback_for_testingEv() #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference25f64_acos_wrapper_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internalL16f64_acos_wrapperEm to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internalL16f64_acos_wrapperEm(i64) #0 {
  %2 = inttoptr i64 %0 to double*
  %3 = load double, double* %2, align 1
  %4 = tail call double @_ZN2v84base7ieee7544acosEd(double %3) #20
  store double %4, double* %2, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference25f64_asin_wrapper_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internalL16f64_asin_wrapperEm to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internalL16f64_asin_wrapperEm(i64) #0 {
  %2 = inttoptr i64 %0 to double*
  %3 = load double, double* %2, align 1
  %4 = tail call double @_ZN2v84base7ieee7544asinEd(double %3) #20
  store double %4, double* %2, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference24f64_mod_wrapper_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64)* @_ZN2v88internalL15f64_mod_wrapperEm to i64)
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @_ZN2v88internalL15f64_mod_wrapperEm(i64) #6 {
  %2 = inttoptr i64 %0 to double*
  %3 = load double, double* %2, align 1
  %4 = add i64 %0, 8
  %5 = inttoptr i64 %4 to double*
  %6 = load double, double* %5, align 1
  %7 = tail call double @fmod(double %3, double %6) #20
  store double %7, double* %2, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference12isolate_rootEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = ptrtoint %"class.v8::internal::Isolate"* %0 to i64
  ret i64 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference29allocation_sites_list_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2, i32 60
  %3 = ptrtoint %"class.v8::internal::Object"* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference18address_of_jslimitEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 2
  %3 = ptrtoint i64* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference23address_of_real_jslimitEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 0
  %3 = ptrtoint i64* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference28heap_is_marking_flag_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2, i32 111
  %3 = ptrtoint i8* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference32new_space_allocation_top_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2, i32 24
  %3 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %2, align 8
  %4 = icmp eq %"class.v8::internal::NewSpace"* %3, null
  %5 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %3, i64 0, i32 0, i32 1, i32 1
  %6 = ptrtoint i64* %5 to i64
  %7 = select i1 %4, i64 0, i64 %6
  ret i64 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference34new_space_allocation_limit_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2, i32 24
  %3 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %2, align 8
  %4 = icmp eq %"class.v8::internal::NewSpace"* %3, null
  %5 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %3, i64 0, i32 0, i32 1, i32 2
  %6 = ptrtoint i64* %5 to i64
  %7 = select i1 %4, i64 0, i64 %6
  ret i64 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference32old_space_allocation_top_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2, i32 25
  %3 = bitcast %"class.v8::internal::OldSpace"** %2 to %"class.v8::internal::SpaceWithLinearArea"**
  %4 = load %"class.v8::internal::SpaceWithLinearArea"*, %"class.v8::internal::SpaceWithLinearArea"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::SpaceWithLinearArea", %"class.v8::internal::SpaceWithLinearArea"* %4, i64 0, i32 1, i32 1
  %6 = ptrtoint i64* %5 to i64
  ret i64 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference34old_space_allocation_limit_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2, i32 25
  %3 = bitcast %"class.v8::internal::OldSpace"** %2 to %"class.v8::internal::SpaceWithLinearArea"**
  %4 = load %"class.v8::internal::SpaceWithLinearArea"*, %"class.v8::internal::SpaceWithLinearArea"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::SpaceWithLinearArea", %"class.v8::internal::SpaceWithLinearArea"* %4, i64 0, i32 1, i32 2
  %6 = ptrtoint i64* %5 to i64
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference26handle_scope_level_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN2v88internal11HandleScope21current_level_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #20
  ret i64 %2
}

declare i64 @_ZN2v88internal11HandleScope21current_level_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference25handle_scope_next_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN2v88internal11HandleScope20current_next_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #20
  ret i64 %2
}

declare i64 @_ZN2v88internal11HandleScope20current_next_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference26handle_scope_limit_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN2v88internal11HandleScope21current_limit_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #20
  ret i64 %2
}

declare i64 @_ZN2v88internal11HandleScope21current_limit_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference27scheduled_exception_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 14
  %3 = ptrtoint %"class.v8::internal::Object"* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference30address_of_pending_message_objEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 11
  %3 = ptrtoint %"class.v8::internal::Object"* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference17abort_with_reasonEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i32)* @_ZN2v88internal17abort_with_reasonEi to i64)
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal17abort_with_reasonEi(i32) #7 {
  %2 = tail call zeroext i1 @_ZN2v88internal18IsValidAbortReasonEi(i32 %0) #20
  br i1 %2, label %3, label %6

3:                                                ; preds = %1
  %4 = trunc i32 %0 to i8
  %5 = tail call i8* @_ZN2v88internal14GetAbortReasonENS0_11AbortReasonE(i8 zeroext %4) #20
  tail call void (i8*, ...) @_ZN2v84base2OS10PrintErrorEPKcz(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %5) #20
  br label %7

6:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2v84base2OS10PrintErrorEPKcz(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 %0) #20
  br label %7

7:                                                ; preds = %6, %3
  tail call void @_ZN2v84base2OS5AbortEv() #21
  unreachable
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference18address_of_min_intEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double* @_ZN2v88internalL23double_min_int_constantE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference42address_of_mock_arraybuffer_allocator_flagEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i8* @_ZN2v88internal31FLAG_mock_arraybuffer_allocatorE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference35address_of_builtin_subclassing_flagEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i8* @_ZN2v88internal24FLAG_builtin_subclassingE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference44address_of_harmony_regexp_match_indices_flagEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i8* @_ZN2v88internal33FLAG_harmony_regexp_match_indicesE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference29address_of_runtime_stats_flagEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%"struct.std::__1::atomic.1189"* @_ZN2v88internal12TracingFlags13runtime_statsE to i64)
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference32address_of_load_from_stack_countEPKc(i8*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN2v88internal7Isolate29load_from_stack_count_addressEPKc(i8* %0) #20
  ret i64 %2
}

declare i64 @_ZN2v88internal7Isolate29load_from_stack_count_addressEPKc(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference31address_of_store_to_stack_countEPKc(i8*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN2v88internal7Isolate28store_to_stack_count_addressEPKc(i8* %0) #20
  ret i64 %2
}

declare i64 @_ZN2v88internal7Isolate28store_to_stack_count_addressEPKc(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference19address_of_one_halfEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double* @_ZN2v88internalL24double_one_half_constantE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference23address_of_the_hole_nanEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64* @_ZN2v88internalL28double_the_hole_nan_constantE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22address_of_uint32_biasEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double* @_ZN2v88internalL27double_uint32_bias_constantE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference29address_of_float_abs_constantEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1194* @_ZN2v88internalL23float_absolute_constantE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference29address_of_float_neg_constantEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1195* @_ZN2v88internalL21float_negate_constantE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference30address_of_double_abs_constantEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1196* @_ZN2v88internalL24double_absolute_constantE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference30address_of_double_neg_constantEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1197* @_ZN2v88internalL22double_negate_constantE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference34address_of_wasm_i8x16_swizzle_maskEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1198* @_ZN2v88internalL23wasm_i8x16_swizzle_maskE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference33address_of_wasm_i8x16_popcnt_maskEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1199* @_ZN2v88internalL22wasm_i8x16_popcnt_maskE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference32address_of_wasm_i8x16_splat_0x01Ev() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1200* @_ZN2v88internalL21wasm_i8x16_splat_0x01E to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference32address_of_wasm_i8x16_splat_0x0fEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1201* @_ZN2v88internalL21wasm_i8x16_splat_0x0fE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference32address_of_wasm_i8x16_splat_0x33Ev() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1202* @_ZN2v88internalL21wasm_i8x16_splat_0x33E to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference32address_of_wasm_i8x16_splat_0x55Ev() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1203* @_ZN2v88internalL21wasm_i8x16_splat_0x55E to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference34address_of_wasm_i16x8_splat_0x0001Ev() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1204* @_ZN2v88internalL23wasm_i16x8_splat_0x0001E to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference50address_of_wasm_f64x2_convert_low_i32x4_u_int_maskEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1205* @_ZN2v88internalL39wasm_f64x2_convert_low_i32x4_u_int_maskE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference30supports_wasm_simd_128_addressEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i8* @_ZN2v88internal11CpuFeatures23supports_wasm_simd_128_E to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference33address_of_wasm_double_2_power_52Ev() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1206* @_ZN2v88internalL22wasm_double_2_power_52E to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference35address_of_wasm_int32_max_as_doubleEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1207* @_ZN2v88internalL24wasm_int32_max_as_doubleE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference36address_of_wasm_uint32_max_as_doubleEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (%struct.anon.1208* @_ZN2v88internalL25wasm_uint32_max_as_doubleE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference44address_of_enable_experimental_regexp_engineEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i8* @_ZN2v88internal38FLAG_enable_experimental_regexp_engineE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference31baseline_pc_for_bytecode_offsetEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64, i32, i64)* @_ZN2v88internal12_GLOBAL__N_127BaselinePCForBytecodeOffsetEmim to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN2v88internal12_GLOBAL__N_127BaselinePCForBytecodeOffsetEmim(i64, i32, i64) #0 {
  %4 = alloca %"class.v8::internal::Code", align 8
  %5 = bitcast %"class.v8::internal::Code"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = call i64 @_ZN2v88internal4Code30GetBaselinePCForBytecodeOffsetEiNS1_20BytecodeToPCPositionENS0_13BytecodeArrayE(%"class.v8::internal::Code"* nonnull %4, i32 %1, i32 0, i64 %2) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #20
  ret i64 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference38baseline_pc_for_next_executed_bytecodeEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64, i32, i64)* @_ZN2v88internal12_GLOBAL__N_133BaselinePCForNextExecutedBytecodeEmim to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN2v88internal12_GLOBAL__N_133BaselinePCForNextExecutedBytecodeEmim(i64, i32, i64) #0 {
  %4 = alloca %"class.v8::internal::Code", align 8
  %5 = bitcast %"class.v8::internal::Code"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = call i64 @_ZN2v88internal4Code36GetBaselinePCForNextExecutedBytecodeEiNS0_13BytecodeArrayE(%"class.v8::internal::Code"* nonnull %4, i32 %1, i64 %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #20
  ret i64 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference35thread_in_wasm_flag_address_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 24
  %3 = ptrtoint i64* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20is_profiling_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 60, i32 0, i32 0, i32 0, i32 0
  %3 = ptrtoint i8* %2 to i64
  ret i64 %3
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference24invoke_function_callbackEv() local_unnamed_addr #8 align 2 {
  ret i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*, void (%"class.v8::FunctionCallbackInfo"*)*)* @_ZN2v88internal22InvokeFunctionCallbackERKNS_20FunctionCallbackInfoINS_5ValueEEEPFvS5_E to i64)
}

declare void @_ZN2v88internal22InvokeFunctionCallbackERKNS_20FunctionCallbackInfoINS_5ValueEEEPFvS5_E(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), void (%"class.v8::FunctionCallbackInfo"*)*) #4

; Function Attrs: nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference31invoke_accessor_getter_callbackEv() local_unnamed_addr #8 align 2 {
  ret i64 ptrtoint (void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)*)* @_ZN2v88internal28InvokeAccessorGetterCallbackENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEPFvS3_S8_E to i64)
}

declare void @_ZN2v88internal28InvokeAccessorGetterCallbackENS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEPFvS3_S8_E(%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)*) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference26re_check_stack_guard_stateEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readnone) local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64*, i64, i64)* @_ZN2v88internal23RegExpMacroAssemblerX6420CheckStackGuardStateEPmmm to i64)
}

declare i32 @_ZN2v88internal23RegExpMacroAssemblerX6420CheckStackGuardStateEPmmm(i64*, i64, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference13re_grow_stackEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readnone) local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64, i64*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal26NativeRegExpMacroAssembler9GrowStackEmPmPNS0_7IsolateE to i64)
}

declare i64 @_ZN2v88internal26NativeRegExpMacroAssembler9GrowStackEmPmPNS0_7IsolateE(i64, i64*, %"class.v8::internal::Isolate"*) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference25re_match_for_call_from_jsEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64, i32, i64, i64, i32*, i32, i64, i32, %"class.v8::internal::Isolate"*, i64)* @_ZN2v88internal19IrregexpInterpreter18MatchForCallFromJsEmimmPiimNS0_6RegExp10CallOriginEPNS0_7IsolateEm to i64)
}

declare i32 @_ZN2v88internal19IrregexpInterpreter18MatchForCallFromJsEmimmPiimNS0_6RegExp10CallOriginEPNS0_7IsolateEm(i64, i32, i64, i64, i32*, i32, i64, i32, %"class.v8::internal::Isolate"*, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference38re_experimental_match_for_call_from_jsEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64, i32, i64, i64, i32*, i32, i64, i32, %"class.v8::internal::Isolate"*, i64)* @_ZN2v88internal18ExperimentalRegExp18MatchForCallFromJsEmimmPiimNS0_6RegExp10CallOriginEPNS0_7IsolateEm to i64)
}

declare i32 @_ZN2v88internal18ExperimentalRegExp18MatchForCallFromJsEmimmPiimNS0_6RegExp10CallOriginEPNS0_7IsolateEm(i64, i32, i64, i64, i32*, i32, i64, i32, %"class.v8::internal::Isolate"*, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference35re_case_insensitive_compare_unicodeEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readnone) local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64, i64, i64, %"class.v8::internal::Isolate"*)* @_ZN2v88internal20RegExpMacroAssembler29CaseInsensitiveCompareUnicodeEmmmPNS0_7IsolateE to i64)
}

declare i32 @_ZN2v88internal20RegExpMacroAssembler29CaseInsensitiveCompareUnicodeEmmmPNS0_7IsolateE(i64, i64, i64, %"class.v8::internal::Isolate"*) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference39re_case_insensitive_compare_non_unicodeEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readnone) local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64, i64, i64, %"class.v8::internal::Isolate"*)* @_ZN2v88internal20RegExpMacroAssembler32CaseInsensitiveCompareNonUnicodeEmmmPNS0_7IsolateE to i64)
}

declare i32 @_ZN2v88internal20RegExpMacroAssembler32CaseInsensitiveCompareNonUnicodeEmmmPNS0_7IsolateE(i64, i64, i64, %"class.v8::internal::Isolate"*) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21re_word_character_mapEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readnone) local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint ([256 x i8]* @_ZN2v88internal26NativeRegExpMacroAssembler18word_character_mapE to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference32address_of_static_offsets_vectorEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 120, i64 0
  %3 = ptrtoint i32* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference37address_of_regexp_stack_limit_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 43
  %3 = load %"class.v8::internal::RegExpStack"*, %"class.v8::internal::RegExpStack"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::RegExpStack", %"class.v8::internal::RegExpStack"* %3, i64 0, i32 1, i32 3
  %5 = ptrtoint i64* %4 to i64
  ret i64 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference42address_of_regexp_stack_memory_top_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 43
  %3 = load %"class.v8::internal::RegExpStack"*, %"class.v8::internal::RegExpStack"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::RegExpStack", %"class.v8::internal::RegExpStack"* %3, i64 0, i32 1, i32 1
  %5 = ptrtoint i8** %4 to i64
  ret i64 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21ieee754_acos_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7544acosEd to i64)
}

declare double @_ZN2v84base7ieee7544acosEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22ieee754_acosh_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7545acoshEd to i64)
}

declare double @_ZN2v84base7ieee7545acoshEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21ieee754_asin_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7544asinEd to i64)
}

declare double @_ZN2v84base7ieee7544asinEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22ieee754_asinh_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7545asinhEd to i64)
}

declare double @_ZN2v84base7ieee7545asinhEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21ieee754_atan_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7544atanEd to i64)
}

declare double @_ZN2v84base7ieee7544atanEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22ieee754_atanh_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7545atanhEd to i64)
}

declare double @_ZN2v84base7ieee7545atanhEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22ieee754_atan2_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double, double)* @_ZN2v84base7ieee7545atan2Edd to i64)
}

declare double @_ZN2v84base7ieee7545atan2Edd(double, double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21ieee754_cbrt_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7544cbrtEd to i64)
}

declare double @_ZN2v84base7ieee7544cbrtEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20ieee754_cos_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7543cosEd to i64)
}

declare double @_ZN2v84base7ieee7543cosEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21ieee754_cosh_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7544coshEd to i64)
}

declare double @_ZN2v84base7ieee7544coshEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20ieee754_exp_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7543expEd to i64)
}

declare double @_ZN2v84base7ieee7543expEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22ieee754_expm1_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7545expm1Ed to i64)
}

declare double @_ZN2v84base7ieee7545expm1Ed(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20ieee754_log_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7543logEd to i64)
}

declare double @_ZN2v84base7ieee7543logEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22ieee754_log1p_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7545log1pEd to i64)
}

declare double @_ZN2v84base7ieee7545log1pEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22ieee754_log10_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7545log10Ed to i64)
}

declare double @_ZN2v84base7ieee7545log10Ed(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21ieee754_log2_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7544log2Ed to i64)
}

declare double @_ZN2v84base7ieee7544log2Ed(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20ieee754_sin_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7543sinEd to i64)
}

declare double @_ZN2v84base7ieee7543sinEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21ieee754_sinh_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7544sinhEd to i64)
}

declare double @_ZN2v84base7ieee7544sinhEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20ieee754_tan_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7543tanEd to i64)
}

declare double @_ZN2v84base7ieee7543tanEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21ieee754_tanh_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double)* @_ZN2v84base7ieee7544tanhEd to i64)
}

declare double @_ZN2v84base7ieee7544tanhEd(double) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20ieee754_pow_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double, double)* @_ZN2v84base7ieee7543powEdd to i64)
}

declare double @_ZN2v84base7ieee7543powEdd(double, double) #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @_ZN2v88internal11libc_memchrEPvim(i8* readonly, i32, i64) #9 {
  %4 = tail call i8* @memchr(i8* %0, i32 %1, i64 %2) #22
  ret i8* %4
}

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #10

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20libc_memchr_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i8* (i8*, i32, i64)* @_ZN2v88internal11libc_memchrEPvim to i64)
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal11libc_memcpyEPvPKvm(i8* returned, i8* nocapture readonly, i64) #0 {
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 %2, i1 false) #20
  ret i8* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20libc_memcpy_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i8* (i8*, i8*, i64)* @_ZN2v88internal11libc_memcpyEPvPKvm to i64)
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal12libc_memmoveEPvPKvm(i8* returned, i8* nocapture readonly, i64) #0 {
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 %2, i1 false)
  ret i8* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference21libc_memmove_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i8* (i8*, i8*, i64)* @_ZN2v88internal12libc_memmoveEPvPKvm to i64)
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal11libc_memsetEPvim(i8* returned, i32, i64) #0 {
  %4 = trunc i32 %1 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 %4, i64 %2, i1 false)
  ret i8* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20libc_memset_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i8* (i8*, i32, i64)* @_ZN2v88internal11libc_memsetEPvim to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference15printf_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i8*, ...)* @printf to i64)
}

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference18refill_math_randomEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i64)* @_ZN2v88internal10MathRandom11RefillCacheEPNS0_7IsolateEm to i64)
}

declare i64 @_ZN2v88internal10MathRandom11RefillCacheEPNS0_7IsolateEm(%"class.v8::internal::Isolate"*, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference46jsarray_array_join_concat_to_sequential_stringEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i64, i64, i64, i64)* @_ZN2v88internal7JSArray33ArrayJoinConcatToSequentialStringEPNS0_7IsolateEmlmm to i64)
}

declare i64 @_ZN2v88internal7JSArray33ArrayJoinConcatToSequentialStringEPNS0_7IsolateEmlmm(%"class.v8::internal::Isolate"*, i64, i64, i64, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference46length_tracking_gsab_backed_typed_array_lengthEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i64)* @_ZN2v88internal12JSTypedArray40LengthTrackingGsabBackedTypedArrayLengthEPNS0_7IsolateEm to i64)
}

declare i64 @_ZN2v88internal12JSTypedArray40LengthTrackingGsabBackedTypedArrayLengthEPNS0_7IsolateEm(%"class.v8::internal::Isolate"*, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference25search_string_raw_one_oneEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i8*, i32, i8*, i32, i32)* @_ZN2v88internal15SearchStringRawIKhS2_EElPNS0_7IsolateEPKT_iPKT0_ii to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference25search_string_raw_one_twoEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i8*, i32, i16*, i32, i32)* @_ZN2v88internal15SearchStringRawIKhKtEElPNS0_7IsolateEPKT_iPKT0_ii to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference25search_string_raw_two_oneEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i16*, i32, i8*, i32, i32)* @_ZN2v88internal15SearchStringRawIKtKhEElPNS0_7IsolateEPKT_iPKT0_ii to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference25search_string_raw_two_twoEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i16*, i32, i16*, i32, i32)* @_ZN2v88internal15SearchStringRawIKtS2_EElPNS0_7IsolateEPKT_iPKT0_ii to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference29string_write_to_flat_one_byteEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64, i8*, i32, i32)* @_ZN2v88internal12_GLOBAL__N_124StringWriteToFlatOneByteEmPhii to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_124StringWriteToFlatOneByteEmPhii(i64, i8*, i32, i32) #0 {
  tail call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %0, i8* %1, i32 %2, i32 %3) #20
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference29string_write_to_flat_two_byteEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64, i16*, i32, i32)* @_ZN2v88internal12_GLOBAL__N_124StringWriteToFlatTwoByteEmPtii to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_124StringWriteToFlatTwoByteEmPtii(i64, i16*, i32, i32) #0 {
  tail call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %0, i16* %1, i32 %2, i32 %3) #20
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference34external_one_byte_string_get_charsEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i8* (i64)* @_ZN2v88internal12_GLOBAL__N_129ExternalOneByteStringGetCharsEm to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @_ZN2v88internal12_GLOBAL__N_129ExternalOneByteStringGetCharsEm(i64) #0 {
  %2 = and i64 %0, 1
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %33, label %4, !prof !3

4:                                                ; preds = %1
  %5 = and i64 %0, -4294967296
  %6 = add i64 %0, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %33, !prof !4

15:                                               ; preds = %4
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 2
  br i1 %23, label %24, label %33, !prof !4

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 8
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %33, label %34, !prof !5

33:                                               ; preds = %24, %15, %4, %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #21
  unreachable

34:                                               ; preds = %24
  %35 = load atomic i32, i32* %7 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %5, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = and i16 %40, 16
  %42 = icmp eq i16 %41, 0
  %43 = add i64 %0, 11
  %44 = inttoptr i64 %43 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %42, label %57, label %45

45:                                               ; preds = %34
  %46 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %44, align 1
  %47 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %46, i64 0, i32 0
  %48 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %46 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %49 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %49, i64 2
  %51 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.v8::String::ExternalStringResourceBase"* %47) #20
  br i1 %52, label %53, label %57

53:                                               ; preds = %45
  %54 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %44, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %54) #20
  %55 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %54, i64 0, i32 1
  %56 = load i8*, i8** %55, align 8
  br label %64

57:                                               ; preds = %34, %45
  %58 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %44, align 1
  %59 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %58 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %60 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %59, align 8
  %61 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %60, i64 6
  %62 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %61, align 8
  %63 = tail call i8* %62(%"class.v8::String::ExternalOneByteStringResource"* %58) #20
  br label %64

64:                                               ; preds = %53, %57
  %65 = phi i8* [ %56, %53 ], [ %63, %57 ]
  ret i8* %65
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference34external_two_byte_string_get_charsEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i16* (i64)* @_ZN2v88internal12_GLOBAL__N_129ExternalTwoByteStringGetCharsEm to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal i16* @_ZN2v88internal12_GLOBAL__N_129ExternalTwoByteStringGetCharsEm(i64) #0 {
  %2 = and i64 %0, 1
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %33, label %4, !prof !3

4:                                                ; preds = %1
  %5 = and i64 %0, -4294967296
  %6 = add i64 %0, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %33, !prof !4

15:                                               ; preds = %4
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 2
  br i1 %23, label %24, label %33, !prof !4

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 8
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %34, label %33, !prof !6

33:                                               ; preds = %15, %4, %1, %24
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0)) #21
  unreachable

34:                                               ; preds = %24
  %35 = load atomic i32, i32* %7 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %5, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = and i16 %40, 16
  %42 = icmp eq i16 %41, 0
  %43 = add i64 %0, 11
  %44 = inttoptr i64 %43 to %"class.v8::String::ExternalStringResource"**
  br i1 %42, label %57, label %45

45:                                               ; preds = %34
  %46 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %44, align 1
  %47 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %46, i64 0, i32 0
  %48 = bitcast %"class.v8::String::ExternalStringResource"* %46 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %49 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %49, i64 2
  %51 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.v8::String::ExternalStringResourceBase"* %47) #20
  br i1 %52, label %53, label %57

53:                                               ; preds = %45
  %54 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %44, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %54) #20
  %55 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %54, i64 0, i32 1
  %56 = load i16*, i16** %55, align 8
  br label %64

57:                                               ; preds = %34, %45
  %58 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %44, align 1
  %59 = bitcast %"class.v8::String::ExternalStringResource"* %58 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %60 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %59, align 8
  %61 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %60, i64 6
  %62 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %61, align 8
  %63 = tail call i16* %62(%"class.v8::String::ExternalStringResource"* %58) #20
  br label %64

64:                                               ; preds = %53, %57
  %65 = phi i16* [ %56, %53 ], [ %63, %57 ]
  ret i16* %65
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference26orderedhashmap_gethash_rawEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i64)* @_ZN2v88internal14OrderedHashMap7GetHashEPNS0_7IsolateEm to i64)
}

declare i64 @_ZN2v88internal14OrderedHashMap7GetHashEPNS0_7IsolateEm(%"class.v8::internal::Isolate"*, i64) #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal15GetOrCreateHashEPNS0_7IsolateEm(%"class.v8::internal::Isolate"*, i64) #0 {
  %3 = alloca %"class.v8::internal::Object", align 8
  %4 = bitcast %"class.v8::internal::Object"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = call i64 @_ZN2v88internal6Object15GetOrCreateHashEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %3, %"class.v8::internal::Isolate"* %0) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #20
  ret i64 %6
}

declare i64 @_ZN2v88internal6Object15GetOrCreateHashEPNS0_7IsolateE(%"class.v8::internal::Object"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference22get_or_create_hash_rawEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i64)* @_ZN2v88internal15GetOrCreateHashEPNS0_7IsolateEm to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference31jsreceiver_create_identity_hashEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i64)* @_ZN2v88internalL28JSReceiverCreateIdentityHashEPNS0_7IsolateEm to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN2v88internalL28JSReceiverCreateIdentityHashEPNS0_7IsolateEm(%"class.v8::internal::Isolate"*, i64) #0 {
  %3 = tail call i64 @_ZN2v88internal10JSReceiver18CreateIdentityHashEPNS0_7IsolateES1_(%"class.v8::internal::Isolate"* %0, i64 %1) #20
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20compute_integer_hashEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (%"class.v8::internal::Isolate"*, i32)* @_ZN2v88internalL24ComputeSeededIntegerHashEPNS0_7IsolateEi to i64)
}

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @_ZN2v88internalL24ComputeSeededIntegerHashEPNS0_7IsolateEi(%"class.v8::internal::Isolate"* nocapture readonly, i32) #9 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 134
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 7
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 1
  %8 = zext i32 %1 to i64
  %9 = xor i64 %7, %8
  %10 = xor i64 %9, -1
  %11 = shl i64 %9, 18
  %12 = add i64 %11, %10
  %13 = lshr i64 %12, 31
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, 21
  %16 = lshr i64 %15, 11
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, 65
  %19 = lshr i64 %18, 22
  %20 = xor i64 %19, %18
  %21 = trunc i64 %20 to i32
  %22 = and i32 %21, 1073741823
  ret i32 %22
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference48copy_fast_number_jsarray_elements_to_typed_arrayEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64, i64, i64, i64, i64)* @_ZN2v88internal41CopyFastNumberJSArrayElementsToTypedArrayEmmmmm to i64)
}

declare void @_ZN2v88internal41CopyFastNumberJSArrayElementsToTypedArrayEmmmmm(i64, i64, i64, i64, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference40copy_typed_array_elements_to_typed_arrayEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64, i64, i64, i64)* @_ZN2v88internal34CopyTypedArrayElementsToTypedArrayEmmmm to i64)
}

declare void @_ZN2v88internal34CopyTypedArrayElementsToTypedArrayEmmmm(i64, i64, i64, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference31copy_typed_array_elements_sliceEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64, i64, i64, i64)* @_ZN2v88internal27CopyTypedArrayElementsSliceEmmmm to i64)
}

declare void @_ZN2v88internal27CopyTypedArrayElementsSliceEmmmm(i64, i64, i64, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference38try_string_to_index_or_lookup_existingEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i64)* @_ZN2v88internal11StringTable32TryStringToIndexOrLookupExistingEPNS0_7IsolateEm to i64)
}

declare i64 @_ZN2v88internal11StringTable32TryStringToIndexOrLookupExistingEPNS0_7IsolateEm(%"class.v8::internal::Isolate"*, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference30string_to_array_index_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64)* @_ZN2v88internal6String12ToArrayIndexEm to i64)
}

declare i32 @_ZN2v88internal6String12ToArrayIndexEm(i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference34smi_lexicographic_compare_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i64, i64)* @_ZN2v88internalL27LexicographicCompareWrapperEPNS0_7IsolateEmm to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN2v88internalL27LexicographicCompareWrapperEPNS0_7IsolateEmm(%"class.v8::internal::Isolate"*, i64, i64) #0 {
  %4 = tail call i64 @_ZN2v88internal3Smi20LexicographicCompareEPNS0_7IsolateES1_S1_(%"class.v8::internal::Isolate"* %0, i64 %1, i64 %2) #20
  ret i64 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference54mutable_big_int_absolute_add_and_canonicalize_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64, i64, i64)* @_ZN2v88internal40MutableBigInt_AbsoluteAddAndCanonicalizeEmmm to i64)
}

declare void @_ZN2v88internal40MutableBigInt_AbsoluteAddAndCanonicalizeEmmm(i64, i64, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference41mutable_big_int_absolute_compare_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (i64, i64)* @_ZN2v88internal29MutableBigInt_AbsoluteCompareEmm to i64)
}

declare i32 @_ZN2v88internal29MutableBigInt_AbsoluteCompareEmm(i64, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference54mutable_big_int_absolute_sub_and_canonicalize_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64, i64, i64)* @_ZN2v88internal40MutableBigInt_AbsoluteSubAndCanonicalizeEmmm to i64)
}

declare void @_ZN2v88internal40MutableBigInt_AbsoluteSubAndCanonicalizeEmmm(i64, i64, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference17check_object_typeEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64, i64, i64)* @_ZN2v88internal15CheckObjectTypeEmmm to i64)
}

declare i64 @_ZN2v88internal15CheckObjectTypeEmmm(i64, i64, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference30intl_convert_one_byte_to_lowerEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64, i64)* @_ZN2v88internalL21ConvertOneByteToLowerEmm to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN2v88internalL21ConvertOneByteToLowerEmm(i64, i64) #0 {
  %3 = tail call i64 @_ZN2v88internal4Intl21ConvertOneByteToLowerENS0_6StringES2_(i64 %0, i64 %1) #20
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference26intl_to_latin1_lower_tableEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_ZN2v88internal4Intl18ToLatin1LowerTableEv() #20
  %2 = ptrtoint i8* %1 to i64
  ret i64 %2
}

declare i8* @_ZN2v88internal4Intl18ToLatin1LowerTableEv() local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference14FromRawAddressEm(i64) local_unnamed_addr #2 align 2 {
  ret i64 %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference12cpu_featuresEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32* @_ZN2v88internal11CpuFeatures10supported_E to i64)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference26promise_hook_flags_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 151
  %3 = ptrtoint i32* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference20promise_hook_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 51
  %3 = ptrtoint void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)** %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference28async_event_delegate_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 150
  %3 = ptrtoint %"class.v8::debug::AsyncEventDelegate"** %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference28debug_execution_mode_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 108
  %3 = ptrtoint i8* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference23debug_is_active_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 68
  %3 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %3, i64 0, i32 1
  %5 = ptrtoint i8* %4 to i64
  ret i64 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference35debug_hook_on_function_call_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 68
  %3 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %3, i64 0, i32 2
  %5 = ptrtoint i8* %4 to i64
  ret i64 %5
}

declare %"struct.v8::internal::Runtime::Function"* @_ZN2v88internal7Runtime20RuntimeFunctionTableEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference36invalidate_prototype_chains_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64)* @_ZN2v88internalL32InvalidatePrototypeChainsWrapperEm to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN2v88internalL32InvalidatePrototypeChainsWrapperEm(i64) #0 {
  %2 = tail call i64 @_ZN2v88internal8JSObject25InvalidatePrototypeChainsENS0_3MapE(i64 %0) #20
  ret i64 %2
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden double @_ZN2v88internal20modulo_double_doubleEdd(double, double) #6 {
  %3 = tail call double @fmod(double %0, double %1) #20
  ret double %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference25mod_two_doubles_operationEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (double (double, double)* @_ZN2v88internal20modulo_double_doubleEdd to i64)
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference33debug_suspended_generator_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 68
  %3 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %3, i64 0, i32 14, i32 11
  %5 = ptrtoint %"class.v8::internal::Object"* %4 to i64
  ret i64 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference29fast_c_call_caller_fp_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 1
  %3 = ptrtoint i64* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference29fast_c_call_caller_pc_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 2
  %3 = ptrtoint i64* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference28fast_api_call_target_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 3
  %3 = ptrtoint i64* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference25stack_is_iterable_addressEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 12
  %3 = ptrtoint i8* %2 to i64
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference31call_enqueue_microtask_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (%"class.v8::internal::Isolate"*, i64, i64)* @_ZN2v88internal14MicrotaskQueue20CallEnqueueMicrotaskEPNS0_7IsolateElm to i64)
}

declare i64 @_ZN2v88internal14MicrotaskQueue20CallEnqueueMicrotaskEPNS0_7IsolateElm(%"class.v8::internal::Isolate"*, i64, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference25atomic_pair_load_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64)* @_ZN2v88internalL16atomic_pair_loadEl to i64)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @_ZN2v88internalL16atomic_pair_loadEl(i64) #12 {
  %2 = inttoptr i64 %0 to %"struct.std::__1::atomic.24"*
  %3 = getelementptr inbounds %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i64, i64* %3 seq_cst, align 8
  ret i64 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference26atomic_pair_store_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (i64, i32, i32)* @_ZN2v88internalL17atomic_pair_storeElii to i64)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN2v88internalL17atomic_pair_storeElii(i64, i32, i32) #12 {
  %4 = zext i32 %2 to i64
  %5 = shl nuw i64 %4, 32
  %6 = zext i32 %1 to i64
  %7 = or i64 %5, %6
  %8 = inttoptr i64 %0 to %"struct.std::__1::atomic.24"*
  %9 = getelementptr inbounds %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %7, i64* %9 seq_cst, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference24atomic_pair_add_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64, i32, i32)* @_ZN2v88internalL15atomic_pair_addElii to i64)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @_ZN2v88internalL15atomic_pair_addElii(i64, i32, i32) #12 {
  %4 = zext i32 %2 to i64
  %5 = shl nuw i64 %4, 32
  %6 = zext i32 %1 to i64
  %7 = or i64 %5, %6
  %8 = inttoptr i64 %0 to %"struct.std::__1::atomic.24"*
  %9 = getelementptr inbounds %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i64* %9, i64 %7 seq_cst
  ret i64 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference24atomic_pair_sub_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64, i32, i32)* @_ZN2v88internalL15atomic_pair_subElii to i64)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @_ZN2v88internalL15atomic_pair_subElii(i64, i32, i32) #12 {
  %4 = zext i32 %2 to i64
  %5 = shl nuw i64 %4, 32
  %6 = zext i32 %1 to i64
  %7 = or i64 %5, %6
  %8 = inttoptr i64 %0 to %"struct.std::__1::atomic.24"*
  %9 = getelementptr inbounds %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i64* %9, i64 %7 seq_cst
  ret i64 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference24atomic_pair_and_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64, i32, i32)* @_ZN2v88internalL15atomic_pair_andElii to i64)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @_ZN2v88internalL15atomic_pair_andElii(i64, i32, i32) #12 {
  %4 = zext i32 %2 to i64
  %5 = shl nuw i64 %4, 32
  %6 = zext i32 %1 to i64
  %7 = or i64 %5, %6
  %8 = inttoptr i64 %0 to %"struct.std::__1::atomic.24"*
  %9 = getelementptr inbounds %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw and i64* %9, i64 %7 seq_cst
  ret i64 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference23atomic_pair_or_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64, i32, i32)* @_ZN2v88internalL14atomic_pair_orElii to i64)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @_ZN2v88internalL14atomic_pair_orElii(i64, i32, i32) #12 {
  %4 = zext i32 %2 to i64
  %5 = shl nuw i64 %4, 32
  %6 = zext i32 %1 to i64
  %7 = or i64 %5, %6
  %8 = inttoptr i64 %0 to %"struct.std::__1::atomic.24"*
  %9 = getelementptr inbounds %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw or i64* %9, i64 %7 seq_cst
  ret i64 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference24atomic_pair_xor_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64, i32, i32)* @_ZN2v88internalL15atomic_pair_xorElii to i64)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @_ZN2v88internalL15atomic_pair_xorElii(i64, i32, i32) #12 {
  %4 = zext i32 %2 to i64
  %5 = shl nuw i64 %4, 32
  %6 = zext i32 %1 to i64
  %7 = or i64 %5, %6
  %8 = inttoptr i64 %0 to %"struct.std::__1::atomic.24"*
  %9 = getelementptr inbounds %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw xor i64* %9, i64 %7 seq_cst
  ret i64 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference29atomic_pair_exchange_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64, i32, i32)* @_ZN2v88internalL20atomic_pair_exchangeElii to i64)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @_ZN2v88internalL20atomic_pair_exchangeElii(i64, i32, i32) #12 {
  %4 = zext i32 %2 to i64
  %5 = shl nuw i64 %4, 32
  %6 = zext i32 %1 to i64
  %7 = or i64 %5, %6
  %8 = inttoptr i64 %0 to %"struct.std::__1::atomic.24"*
  %9 = getelementptr inbounds %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw xchg i64* %9, i64 %7 seq_cst
  ret i64 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference37atomic_pair_compare_exchange_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i64 (i64, i32, i32, i32, i32)* @_ZN2v88internalL28atomic_pair_compare_exchangeEliiii to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN2v88internalL28atomic_pair_compare_exchangeEliiii(i64, i32, i32, i32, i32) #0 {
  %6 = zext i32 %2 to i64
  %7 = shl nuw i64 %6, 32
  %8 = zext i32 %1 to i64
  %9 = or i64 %7, %8
  %10 = zext i32 %4 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i32 %3 to i64
  %13 = or i64 %11, %12
  %14 = inttoptr i64 %0 to %"struct.std::__1::atomic.19"*
  %15 = getelementptr inbounds %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = cmpxchg i64* %15, i64 %9, i64 %13 seq_cst seq_cst
  %17 = extractvalue { i64, i1 } %16, 0
  ret i64 %17
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference27call_enter_context_functionEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (i32 (%"class.v8::internal::HandleScopeImplementer"*, i64)* @_ZN2v88internalL28EnterMicrotaskContextWrapperEPNS0_22HandleScopeImplementerEm to i64)
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN2v88internalL28EnterMicrotaskContextWrapperEPNS0_22HandleScopeImplementerEm(%"class.v8::internal::HandleScopeImplementer"*, i64) #0 {
  tail call void @_ZN2v88internal22HandleScopeImplementer21EnterMicrotaskContextENS0_7ContextE(%"class.v8::internal::HandleScopeImplementer"* %0, i64 %1)
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17ExternalReference62js_finalization_registry_remove_cell_from_unregister_token_mapEv() local_unnamed_addr #2 align 2 {
  ret i64 ptrtoint (void (%"class.v8::internal::Isolate"*, i64, i64)* @_ZN2v88internal22JSFinalizationRegistry32RemoveCellFromUnregisterTokenMapEPNS0_7IsolateEmm to i64)
}

declare void @_ZN2v88internal22JSFinalizationRegistry32RemoveCellFromUnregisterTokenMapEPNS0_7IsolateEmm(%"class.v8::internal::Isolate"*, i64, i64) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internaleqENS0_17ExternalReferenceES1_(i64, i64) local_unnamed_addr #2 {
  %3 = icmp eq i64 %0, %1
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internalneENS0_17ExternalReferenceES1_(i64, i64) local_unnamed_addr #2 {
  %3 = icmp ne i64 %0, %1
  ret i1 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10hash_valueENS0_17ExternalReferenceE(i64) local_unnamed_addr #0 {
  %2 = load i8, i8* @_ZN2v88internal16FLAG_predictableE, align 1, !range !2
  %3 = icmp eq i8 %2, 0
  %4 = and i64 %0, 4095
  %5 = select i1 %3, i64 %0, i64 %4
  %6 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %5) #20
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_17ExternalReferenceE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), i64) local_unnamed_addr #0 {
  %3 = inttoptr i64 %1 to i8*
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %3) #20
  %5 = tail call %"struct.v8::internal::Runtime::Function"* @_ZN2v88internal7Runtime16FunctionForEntryEm(i64 %1) #20
  %6 = icmp eq %"struct.v8::internal::Runtime::Function"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #20
  %9 = getelementptr inbounds %"struct.v8::internal::Runtime::Function", %"struct.v8::internal::Runtime::Function"* %5, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i64 @strlen(i8* %10) #20
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* %10, i64 %11) #20
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7) #20
  br label %14

14:                                               ; preds = %2, %7
  ret %"class.std::__1::basic_ostream"* %0
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #4

declare %"struct.v8::internal::Runtime::Function"* @_ZN2v88internal7Runtime16FunctionForEntryEm(i64) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal18IsValidAbortReasonEi(i32) local_unnamed_addr #4

declare i8* @_ZN2v88internal14GetAbortReasonENS0_11AbortReasonE(i8 zeroext) local_unnamed_addr #4

declare void @_ZN2v84base2OS10PrintErrorEPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZN2v84base2OS5AbortEv() local_unnamed_addr #13

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #13

declare i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal4Code30GetBaselinePCForBytecodeOffsetEiNS1_20BytecodeToPCPositionENS0_13BytecodeArrayE(%"class.v8::internal::Code"*, i32, i32, i64) local_unnamed_addr #14 comdat align 2 {
  %5 = alloca %"class.v8::internal::baseline::BytecodeOffsetIterator", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 27
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 15
  %12 = icmp eq i32 %11, 11
  br i1 %12, label %14, label %13, !prof !6

13:                                               ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #21
  unreachable

14:                                               ; preds = %4
  %15 = bitcast %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %15) #20
  %16 = and i64 %7, -4294967296
  %17 = add i64 %7, 11
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  call void @_ZN2v88internal8baseline22BytecodeOffsetIteratorC1ENS0_9ByteArrayENS0_13BytecodeArrayE(%"class.v8::internal::baseline::BytecodeOffsetIterator"* nonnull %5, i64 %21, i64 %3) #20
  %22 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, %1
  br i1 %24, label %30, label %25

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5, i64 0, i32 4
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5, i64 0, i32 5
  %29 = load i64, i64* %28, align 8
  br label %107

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5, i64 0, i32 5
  %32 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5, i64 0, i32 4
  %33 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5, i64 0, i32 1
  %34 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5, i64 0, i32 3
  %35 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5, i64 0, i32 9, i32 3
  %36 = bitcast i8** %35 to i64*
  %37 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5, i64 0, i32 9, i32 1
  %38 = bitcast i8** %37 to i64*
  %39 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5, i64 0, i32 9, i32 5
  %40 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5, i64 0, i32 9, i32 4
  %41 = getelementptr inbounds %"class.v8::internal::baseline::BytecodeOffsetIterator", %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5, i64 0, i32 9, i32 2
  %42 = load i64, i64* %31, align 8
  %43 = load i8*, i8** %33, align 8
  %44 = load i32, i32* %34, align 4
  br label %45

45:                                               ; preds = %105, %30
  %46 = phi i32 [ %44, %30 ], [ %71, %105 ]
  %47 = phi i64 [ %42, %30 ], [ %74, %105 ]
  store i64 %47, i64* %32, align 8
  %48 = add i32 %46, 1
  store i32 %48, i32* %34, align 4
  %49 = sext i32 %46 to i64
  %50 = getelementptr inbounds i8, i8* %43, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = icmp sgt i8 %51, -1
  br i1 %53, label %70, label %54

54:                                               ; preds = %45
  %55 = sext i32 %48 to i64
  %56 = and i32 %52, 127
  %57 = add nsw i64 %55, 1
  %58 = trunc i64 %57 to i32
  store i32 %58, i32* %34, align 4
  %59 = getelementptr inbounds i8, i8* %43, i64 %55
  %60 = load i8, i8* %59, align 1
  %61 = and i8 %60, 127
  %62 = zext i8 %61 to i32
  %63 = shl nuw nsw i32 %62, 7
  %64 = or i32 %63, %56
  %65 = icmp slt i8 %60, 0
  br i1 %65, label %112, label %66

66:                                               ; preds = %132, %122, %112, %54
  %67 = phi i64 [ %57, %54 ], [ %113, %112 ], [ %123, %122 ], [ %133, %132 ]
  %68 = phi i32 [ %64, %54 ], [ %120, %112 ], [ %130, %122 ], [ %139, %132 ]
  %69 = trunc i64 %67 to i32
  br label %70

70:                                               ; preds = %66, %45
  %71 = phi i32 [ %48, %45 ], [ %69, %66 ]
  %72 = phi i32 [ %52, %45 ], [ %68, %66 ]
  %73 = sext i32 %72 to i64
  %74 = add i64 %47, %73
  store i64 %74, i64* %31, align 8
  %75 = load i64, i64* %36, align 8
  %76 = load i64, i64* %38, align 8
  %77 = sub i64 %75, %76
  %78 = load i32, i32* %39, align 4
  %79 = trunc i64 %77 to i32
  %80 = sub i32 %79, %78
  store i32 %80, i32* %22, align 8
  %81 = inttoptr i64 %75 to i8*
  %82 = load i8, i8* %81, align 1
  %83 = load i8, i8* %40, align 8
  %84 = lshr i8 %83, 1
  %85 = zext i8 %84 to i64
  %86 = zext i8 %82 to i64
  %87 = getelementptr inbounds [3 x [197 x i8]], [3 x [197 x i8]]* @_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE, i64 0, i64 %85, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i64
  %90 = getelementptr inbounds i8, i8* %81, i64 %89
  store i8* %90, i8** %35, align 8
  %91 = load i8*, i8** %41, align 8
  %92 = icmp ult i8* %90, %91
  br i1 %92, label %93, label %105

93:                                               ; preds = %70
  %94 = load i8, i8* %90, align 1
  %95 = icmp ult i8 %94, 4
  br i1 %95, label %96, label %102

96:                                               ; preds = %93
  %97 = zext i8 %94 to i32
  %98 = shl nuw nsw i32 %97, 3
  %99 = lshr i32 67240962, %98
  %100 = trunc i32 %99 to i8
  store i8 %100, i8* %40, align 8
  %101 = getelementptr inbounds i8, i8* %90, i64 1
  store i8* %101, i8** %35, align 8
  br label %103

102:                                              ; preds = %93
  store i8 1, i8* %40, align 8
  br label %103

103:                                              ; preds = %96, %102
  %104 = phi i32 [ 0, %102 ], [ 1, %96 ]
  store i32 %104, i32* %39, align 4
  br label %105

105:                                              ; preds = %103, %70
  %106 = icmp slt i32 %80, %1
  br i1 %106, label %45, label %107

107:                                              ; preds = %105, %25
  %108 = phi i64 [ %29, %25 ], [ %74, %105 ]
  %109 = phi i64 [ %27, %25 ], [ %47, %105 ]
  %110 = icmp eq i32 %2, 0
  %111 = select i1 %110, i64 %109, i64 %108
  call void @_ZN2v88internal8baseline22BytecodeOffsetIteratorD1Ev(%"class.v8::internal::baseline::BytecodeOffsetIterator"* nonnull %5) #20
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %15) #20
  ret i64 %111

112:                                              ; preds = %54
  %113 = add nsw i64 %55, 2
  %114 = trunc i64 %113 to i32
  store i32 %114, i32* %34, align 4
  %115 = getelementptr inbounds i8, i8* %43, i64 %57
  %116 = load i8, i8* %115, align 1
  %117 = and i8 %116, 127
  %118 = zext i8 %117 to i32
  %119 = shl nuw nsw i32 %118, 14
  %120 = or i32 %119, %64
  %121 = icmp slt i8 %116, 0
  br i1 %121, label %122, label %66

122:                                              ; preds = %112
  %123 = add nsw i64 %55, 3
  %124 = trunc i64 %123 to i32
  store i32 %124, i32* %34, align 4
  %125 = getelementptr inbounds i8, i8* %43, i64 %113
  %126 = load i8, i8* %125, align 1
  %127 = and i8 %126, 127
  %128 = zext i8 %127 to i32
  %129 = shl nuw nsw i32 %128, 21
  %130 = or i32 %129, %120
  %131 = icmp slt i8 %126, 0
  br i1 %131, label %132, label %66

132:                                              ; preds = %122
  %133 = add nsw i64 %55, 4
  %134 = trunc i64 %133 to i32
  store i32 %134, i32* %34, align 4
  %135 = getelementptr inbounds i8, i8* %43, i64 %123
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = shl i32 %137, 28
  %139 = or i32 %138, %130
  br label %66
}

declare void @_ZN2v88internal8baseline22BytecodeOffsetIteratorC1ENS0_9ByteArrayENS0_13BytecodeArrayE(%"class.v8::internal::baseline::BytecodeOffsetIterator"*, i64, i64) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v88internal8baseline22BytecodeOffsetIteratorD1Ev(%"class.v8::internal::baseline::BytecodeOffsetIterator"*) unnamed_addr #15

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal4Code36GetBaselinePCForNextExecutedBytecodeEiNS0_13BytecodeArrayE(%"class.v8::internal::Code"*, i32, i64) local_unnamed_addr #14 comdat align 2 {
  %4 = alloca %"class.v8::internal::BytecodeArray", align 8
  %5 = alloca %"class.v8::internal::baseline::BytecodeOffsetIterator", align 8
  %6 = alloca %"class.v8::internal::interpreter::BytecodeArrayIterator", align 8
  %7 = getelementptr inbounds %"class.v8::internal::BytecodeArray", %"class.v8::internal::BytecodeArray"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 27
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 15
  %14 = icmp eq i32 %13, 11
  br i1 %14, label %16, label %15, !prof !6

15:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #21
  unreachable

16:                                               ; preds = %3
  %17 = bitcast %"class.v8::internal::baseline::BytecodeOffsetIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %17) #20
  %18 = and i64 %9, -4294967296
  %19 = add i64 %9, 11
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  call void @_ZN2v88internal8baseline22BytecodeOffsetIteratorC1ENS0_9ByteArrayENS0_13BytecodeArrayE(%"class.v8::internal::baseline::BytecodeOffsetIterator"* nonnull %5, i64 %23, i64 %2) #20
  %24 = bitcast %"class.v8::internal::interpreter::BytecodeArrayIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %24) #20
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %6, i64* nonnull %7, i32 %1) #20
  %25 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %6, i64 0, i32 3
  %26 = load i8*, i8** %25, align 8
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, -120
  br i1 %28, label %29, label %33

29:                                               ; preds = %16
  %30 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator19GetJumpTargetOffsetEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %6) #20
  %31 = load i64, i64* %7, align 8
  %32 = call i64 @_ZN2v88internal4Code30GetBaselinePCForBytecodeOffsetEiNS1_20BytecodeToPCPositionENS0_13BytecodeArrayE(%"class.v8::internal::Code"* %0, i32 %30, i32 0, i64 %31) #20
  br label %36

33:                                               ; preds = %16
  %34 = load i64, i64* %7, align 8
  %35 = call i64 @_ZN2v88internal4Code30GetBaselinePCForBytecodeOffsetEiNS1_20BytecodeToPCPositionENS0_13BytecodeArrayE(%"class.v8::internal::Code"* %0, i32 %1, i32 1, i64 %34) #20
  br label %36

36:                                               ; preds = %33, %29
  %37 = phi i64 [ %32, %29 ], [ %35, %33 ]
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD1Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %6) #20
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %24) #20
  call void @_ZN2v88internal8baseline22BytecodeOffsetIteratorD1Ev(%"class.v8::internal::baseline::BytecodeOffsetIterator"* nonnull %5) #20
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %17) #20
  ret i64 %37
}

declare void @_ZN2v88internal11interpreter21BytecodeArrayIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"*, i64*, i32) unnamed_addr #4

declare i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator19GetJumpTargetOffsetEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD1Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"*) unnamed_addr #15

declare void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64, i8*, i32, i32) local_unnamed_addr #4

declare void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64, i16*, i32, i32) local_unnamed_addr #4

declare void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #4

declare void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #4

declare i64 @_ZN2v88internal10JSReceiver18CreateIdentityHashEPNS0_7IsolateES1_(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #4

declare i64 @_ZN2v88internal3Smi20LexicographicCompareEPNS0_7IsolateES1_S1_(%"class.v8::internal::Isolate"*, i64, i64) local_unnamed_addr #4

declare i64 @_ZN2v88internal4Intl21ConvertOneByteToLowerENS0_6StringES2_(i64, i64) local_unnamed_addr #4

declare i64 @_ZN2v88internal8JSObject25InvalidatePrototypeChainsENS0_3MapE(i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare double @fmod(double, double) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal22HandleScopeImplementer21EnterMicrotaskContextENS0_7ContextE(%"class.v8::internal::HandleScopeImplementer"*, i64) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %0, i64 0, i32 2, i32 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::DetachableVector.800"* %3 to %"class.v8::internal::Context"**
  %11 = load %"class.v8::internal::Context"*, %"class.v8::internal::Context"** %10, align 8
  br label %41

12:                                               ; preds = %2
  %13 = shl i64 %5, 1
  %14 = load i64, i64* @_ZN2v88internal20DetachableVectorBase16kMinimumCapacityE, align 8
  %15 = icmp ult i64 %14, %13
  %16 = select i1 %15, i64 %13, i64 %14
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %16, i64 8) #20
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #23
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %12
  %24 = shl nsw i64 %16, 3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 %24, i1 false) #20
  br label %25

25:                                               ; preds = %23, %12
  %26 = bitcast %"class.v8::internal::DetachableVector.800"* %3 to %"class.v8::internal::Context"**
  %27 = load %"class.v8::internal::Context"*, %"class.v8::internal::Context"** %26, align 8
  %28 = icmp eq i64 %5, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = shl nuw i64 %5, 3
  %31 = bitcast %"class.v8::internal::Context"* %27 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %31, i64 %30, i1 false) #20
  br label %32

32:                                               ; preds = %29, %25
  %33 = icmp eq %"class.v8::internal::Context"* %27, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %32
  %35 = bitcast %"class.v8::internal::Context"* %27 to i8*
  tail call void @_ZdaPv(i8* %35) #23
  %36 = load i64, i64* %4, align 8
  br label %37

37:                                               ; preds = %34, %32
  %38 = phi i64 [ %5, %32 ], [ %36, %34 ]
  %39 = getelementptr inbounds %"class.v8::internal::DetachableVector.800", %"class.v8::internal::DetachableVector.800"* %3, i64 0, i32 0, i32 0
  store i8* %21, i8** %39, align 8
  store i64 %16, i64* %6, align 8
  %40 = bitcast i8* %21 to %"class.v8::internal::Context"*
  br label %41

41:                                               ; preds = %9, %37
  %42 = phi i64 [ %5, %9 ], [ %38, %37 ]
  %43 = phi %"class.v8::internal::Context"* [ %11, %9 ], [ %40, %37 ]
  %44 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %43, i64 %42, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %44, align 8
  %45 = load i64, i64* %4, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %4, align 8
  %47 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %0, i64 0, i32 3
  %48 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %0, i64 0, i32 3, i32 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::HandleScopeImplementer", %"class.v8::internal::HandleScopeImplementer"* %0, i64 0, i32 3, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %49, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.v8::internal::DetachableVector.801", %"class.v8::internal::DetachableVector.801"* %47, i64 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  br label %72

56:                                               ; preds = %41
  %57 = shl i64 %49, 1
  %58 = load i64, i64* @_ZN2v88internal20DetachableVectorBase16kMinimumCapacityE, align 8
  %59 = icmp ult i64 %58, %57
  %60 = select i1 %59, i64 %57, i64 %58
  %61 = tail call i8* @_Znam(i64 %60) #23
  %62 = getelementptr inbounds %"class.v8::internal::DetachableVector.801", %"class.v8::internal::DetachableVector.801"* %47, i64 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i64 %49, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %56
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %61, i8* align 1 %63, i64 %49, i1 false) #20
  br label %66

66:                                               ; preds = %65, %56
  %67 = icmp eq i8* %63, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  tail call void @_ZdaPv(i8* nonnull %63) #23
  %69 = load i64, i64* %48, align 8
  br label %70

70:                                               ; preds = %68, %66
  %71 = phi i64 [ %49, %66 ], [ %69, %68 ]
  store i8* %61, i8** %62, align 8
  store i64 %60, i64* %50, align 8
  br label %72

72:                                               ; preds = %53, %70
  %73 = phi i64 [ %49, %53 ], [ %71, %70 ]
  %74 = phi i8* [ %55, %53 ], [ %61, %70 ]
  %75 = getelementptr inbounds i8, i8* %74, i64 %73
  store i8 1, i8* %75, align 1
  %76 = load i64, i64* %48, align 8
  %77 = add i64 %76, 1
  store i64 %77, i64* %48, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #16

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #17

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #18

declare i64 @_ZN2v84base10hash_valueEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #20
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #20
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #20
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #20
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #20
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #20
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #20
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #20
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #20
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #20
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #20
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #23
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #20
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #20
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #23
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #20
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #20
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #15

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #17

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #18

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #15

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #19

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE16SingleCharSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = load i8, i8* %6, align 1
  %10 = trunc i64 %2 to i32
  %11 = trunc i64 %8 to i32
  %12 = sub nsw i32 %10, %11
  %13 = add nsw i32 %12, 1
  %14 = zext i8 %9 to i32
  %15 = ptrtoint i8* %1 to i64
  br label %16

16:                                               ; preds = %33, %4
  %17 = phi i32 [ %3, %4 ], [ %34, %33 ]
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %1, i64 %18
  %20 = sub i32 %13, %17
  %21 = sext i32 %20 to i64
  %22 = tail call i8* @memchr(i8* %19, i32 %14, i64 %21) #22
  %23 = icmp eq i8* %22, null
  br i1 %23, label %38, label %24

24:                                               ; preds = %16
  %25 = ptrtoint i8* %22 to i64
  %26 = sub i64 %25, %15
  %27 = trunc i64 %26 to i32
  %28 = shl i64 %26, 32
  %29 = ashr exact i64 %28, 32
  %30 = getelementptr inbounds i8, i8* %1, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, %9
  br i1 %32, label %36, label %33

33:                                               ; preds = %24
  %34 = add nsw i32 %27, 1
  %35 = icmp sgt i32 %12, %27
  br i1 %35, label %16, label %38

36:                                               ; preds = %24
  %37 = trunc i64 %26 to i32
  br label %38

38:                                               ; preds = %16, %33, %36
  %39 = phi i32 [ %37, %36 ], [ -1, %33 ], [ -1, %16 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %65, label %13

13:                                               ; preds = %4
  %14 = load i8, i8* %6, align 1
  %15 = add nsw i32 %11, 1
  %16 = zext i8 %14 to i32
  %17 = ptrtoint i8* %1 to i64
  %18 = getelementptr inbounds i8, i8* %6, i64 1
  %19 = shl i64 %8, 32
  %20 = add i64 %19, -4294967296
  %21 = ashr exact i64 %20, 32
  br label %24

22:                                               ; preds = %53
  %23 = icmp sgt i32 %11, %47
  br i1 %23, label %44, label %65

24:                                               ; preds = %44, %13
  %25 = phi i32 [ %3, %13 ], [ %45, %44 ]
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %1, i64 %26
  %28 = sub i32 %15, %25
  %29 = sext i32 %28 to i64
  %30 = tail call i8* @memchr(i8* %27, i32 %16, i64 %29) #22
  %31 = icmp eq i8* %30, null
  br i1 %31, label %65, label %32

32:                                               ; preds = %24
  %33 = ptrtoint i8* %30 to i64
  %34 = sub i64 %33, %17
  %35 = trunc i64 %34 to i32
  %36 = shl i64 %34, 32
  %37 = ashr exact i64 %36, 32
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, %14
  br i1 %40, label %46, label %41

41:                                               ; preds = %32
  %42 = add nsw i32 %35, 1
  %43 = icmp sgt i32 %11, %35
  br i1 %43, label %44, label %65

44:                                               ; preds = %41, %22
  %45 = phi i32 [ %42, %41 ], [ %50, %22 ]
  br label %24

46:                                               ; preds = %32
  %47 = trunc i64 %34 to i32
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %65, label %49

49:                                               ; preds = %46
  %50 = add nuw nsw i32 %47, 1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  br label %53

53:                                               ; preds = %60, %49
  %54 = phi i64 [ %61, %60 ], [ 0, %49 ]
  %55 = getelementptr inbounds i8, i8* %18, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds i8, i8* %52, i64 %54
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %56, %58
  br i1 %59, label %60, label %22

60:                                               ; preds = %53
  %61 = add nuw nsw i64 %54, 1
  %62 = icmp slt i64 %61, %21
  br i1 %62, label %53, label %63

63:                                               ; preds = %60
  %64 = trunc i64 %34 to i32
  br label %65

65:                                               ; preds = %22, %46, %41, %24, %63, %4
  %66 = phi i32 [ -1, %4 ], [ %64, %63 ], [ -1, %24 ], [ -1, %41 ], [ -1, %46 ], [ -1, %22 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %281, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i8* %1 to i64
  %18 = shl i64 %8, 32
  %19 = ashr exact i64 %18, 32
  br label %20

20:                                               ; preds = %275, %13
  %21 = phi i32 [ %15, %13 ], [ %276, %275 ]
  %22 = phi i32 [ %3, %13 ], [ %277, %275 ]
  %23 = add nsw i32 %21, 1
  %24 = icmp slt i32 %21, 0
  br i1 %24, label %25, label %72

25:                                               ; preds = %20
  %26 = load i8, i8* %6, align 1
  %27 = zext i8 %26 to i32
  br label %28

28:                                               ; preds = %45, %25
  %29 = phi i32 [ %22, %25 ], [ %46, %45 ]
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %1, i64 %30
  %32 = sub i32 %16, %29
  %33 = sext i32 %32 to i64
  %34 = tail call i8* @memchr(i8* %31, i32 %27, i64 %33) #22
  %35 = icmp eq i8* %34, null
  br i1 %35, label %281, label %36

36:                                               ; preds = %28
  %37 = ptrtoint i8* %34 to i64
  %38 = sub i64 %37, %17
  %39 = trunc i64 %38 to i32
  %40 = shl i64 %38, 32
  %41 = ashr exact i64 %40, 32
  %42 = getelementptr inbounds i8, i8* %1, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, %26
  br i1 %44, label %48, label %45

45:                                               ; preds = %36
  %46 = add nsw i32 %39, 1
  %47 = icmp sgt i32 %11, %39
  br i1 %47, label %28, label %281

48:                                               ; preds = %36
  %49 = trunc i64 %38 to i32
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %281, label %51

51:                                               ; preds = %48
  %52 = shl i64 %38, 32
  %53 = ashr exact i64 %52, 32
  br label %54

54:                                               ; preds = %51, %63
  %55 = phi i64 [ 1, %51 ], [ %64, %63 ]
  %56 = phi i32 [ 1, %51 ], [ %65, %63 ]
  %57 = getelementptr inbounds i8, i8* %6, i64 %55
  %58 = load i8, i8* %57, align 1
  %59 = add nsw i64 %55, %53
  %60 = getelementptr inbounds i8, i8* %1, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %58, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %54
  %64 = add nuw nsw i64 %55, 1
  %65 = add nuw nsw i32 %56, 1
  %66 = icmp slt i64 %64, %19
  br i1 %66, label %54, label %69

67:                                               ; preds = %54
  %68 = trunc i64 %55 to i32
  br label %69

69:                                               ; preds = %63, %67
  %70 = phi i32 [ %68, %67 ], [ %65, %63 ]
  %71 = icmp eq i32 %70, %9
  br i1 %71, label %279, label %275

72:                                               ; preds = %20
  %73 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %74 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %212, label %78

78:                                               ; preds = %72
  %79 = add nsw i32 %76, -1
  %80 = insertelement <4 x i32> undef, i32 %79, i32 0
  %81 = shufflevector <4 x i32> %80, <4 x i32> undef, <4 x i32> zeroinitializer
  %82 = insertelement <4 x i32> undef, i32 %79, i32 0
  %83 = shufflevector <4 x i32> %82, <4 x i32> undef, <4 x i32> zeroinitializer
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 0
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %85, align 4
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %87, align 4
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 8
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %89, align 4
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 12
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %91, align 4
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 16
  %93 = bitcast i32* %92 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %93, align 4
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 20
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %95, align 4
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 24
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %97, align 4
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 28
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %99, align 4
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 32
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %101, align 4
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 36
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %103, align 4
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 40
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %105, align 4
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 44
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %107, align 4
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 48
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %109, align 4
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 52
  %111 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %111, align 4
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 56
  %113 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %113, align 4
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 60
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %115, align 4
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 64
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %117, align 4
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 68
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %119, align 4
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 72
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %121, align 4
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 76
  %123 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %123, align 4
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 80
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %125, align 4
  %126 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 84
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %127, align 4
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 88
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 92
  %131 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 96
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %133, align 4
  %134 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 100
  %135 = bitcast i32* %134 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %135, align 4
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 104
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %137, align 4
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 108
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %139, align 4
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 112
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %141, align 4
  %142 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 116
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %143, align 4
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 120
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %145, align 4
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 124
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %147, align 4
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 128
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %149, align 4
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 132
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %151, align 4
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 136
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %153, align 4
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 140
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %155, align 4
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 144
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %157, align 4
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 148
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %159, align 4
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 152
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %161, align 4
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 156
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %163, align 4
  %164 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 160
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %165, align 4
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 164
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %167, align 4
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 168
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %169, align 4
  %170 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 172
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %171, align 4
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 176
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %173, align 4
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 180
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %175, align 4
  %176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 184
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %177, align 4
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 188
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %179, align 4
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 192
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %181, align 4
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 196
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %183, align 4
  %184 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 200
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %185, align 4
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 204
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %187, align 4
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 208
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %189, align 4
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 212
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %191, align 4
  %192 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 216
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %193, align 4
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 220
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %195, align 4
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 224
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %197, align 4
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 228
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %199, align 4
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 232
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %201, align 4
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 236
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %203, align 4
  %204 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 240
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %205, align 4
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 244
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %207, align 4
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 248
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %209, align 4
  %210 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 252
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %211, align 4
  br label %215

212:                                              ; preds = %72
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 0
  %214 = bitcast i32* %213 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %214, i8 -1, i64 1024, i1 false) #20
  br label %215

215:                                              ; preds = %78, %212
  %216 = add i32 %9, -1
  %217 = icmp slt i32 %76, %216
  br i1 %217, label %218, label %272

218:                                              ; preds = %215
  %219 = sext i32 %76 to i64
  %220 = sext i32 %216 to i64
  %221 = sub nsw i64 %220, %219
  %222 = xor i64 %219, -1
  %223 = add nsw i64 %222, %220
  %224 = and i64 %221, 3
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %238, label %226

226:                                              ; preds = %218, %226
  %227 = phi i64 [ %235, %226 ], [ %219, %218 ]
  %228 = phi i64 [ %236, %226 ], [ %224, %218 ]
  %229 = load i8*, i8** %5, align 8
  %230 = getelementptr inbounds i8, i8* %229, i64 %227
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %232
  %234 = trunc i64 %227 to i32
  store i32 %234, i32* %233, align 4
  %235 = add nsw i64 %227, 1
  %236 = add i64 %228, -1
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %226, !llvm.loop !7

238:                                              ; preds = %226, %218
  %239 = phi i64 [ %219, %218 ], [ %235, %226 ]
  %240 = icmp ult i64 %223, 3
  br i1 %240, label %272, label %241

241:                                              ; preds = %238, %241
  %242 = phi i64 [ %270, %241 ], [ %239, %238 ]
  %243 = load i8*, i8** %5, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 %242
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %246
  %248 = trunc i64 %242 to i32
  store i32 %248, i32* %247, align 4
  %249 = add nsw i64 %242, 1
  %250 = load i8*, i8** %5, align 8
  %251 = getelementptr inbounds i8, i8* %250, i64 %249
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %253
  %255 = trunc i64 %249 to i32
  store i32 %255, i32* %254, align 4
  %256 = add nsw i64 %242, 2
  %257 = load i8*, i8** %5, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 %256
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i64
  %261 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %260
  %262 = trunc i64 %256 to i32
  store i32 %262, i32* %261, align 4
  %263 = add nsw i64 %242, 3
  %264 = load i8*, i8** %5, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 %263
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %267
  %269 = trunc i64 %263 to i32
  store i32 %269, i32* %268, align 4
  %270 = add nsw i64 %242, 4
  %271 = icmp eq i64 %270, %220
  br i1 %271, label %272, label %241

272:                                              ; preds = %238, %241, %215
  %273 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %273, align 8
  %274 = tail call i32 @_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"* %0, i8* %1, i64 %2, i32 %22)
  br label %281

275:                                              ; preds = %69
  %276 = add nsw i32 %23, %70
  %277 = add nsw i32 %49, 1
  %278 = icmp sgt i32 %11, %49
  br i1 %278, label %20, label %281

279:                                              ; preds = %69
  %280 = trunc i64 %38 to i32
  br label %281

281:                                              ; preds = %48, %275, %45, %28, %279, %4, %272
  %282 = phi i32 [ %274, %272 ], [ -1, %4 ], [ %280, %279 ], [ -1, %28 ], [ -1, %45 ], [ -1, %275 ], [ -1, %48 ]
  ret i32 %282
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %13, %19
  %21 = sub nsw i32 %9, %10
  %22 = add i32 %10, -2
  %23 = icmp sgt i32 %22, -1
  %24 = sub i32 %10, %20
  br i1 %23, label %25, label %68

25:                                               ; preds = %4
  %26 = sub nsw i32 0, %10
  %27 = sext i32 %22 to i64
  br label %28

28:                                               ; preds = %25, %57
  %29 = phi i32 [ %59, %57 ], [ %3, %25 ]
  %30 = phi i32 [ %61, %57 ], [ %26, %25 ]
  %31 = icmp sgt i32 %29, %21
  br i1 %31, label %173, label %32

32:                                               ; preds = %28, %40
  %33 = phi i32 [ %45, %40 ], [ %29, %28 ]
  %34 = phi i32 [ %47, %40 ], [ %30, %28 ]
  %35 = add nsw i32 %33, %13
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %16, %38
  br i1 %39, label %66, label %40

40:                                               ; preds = %32
  %41 = zext i8 %38 to i64
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 %13, %43
  %45 = add nsw i32 %44, %33
  %46 = add i32 %34, 1
  %47 = sub i32 %46, %44
  %48 = icmp sgt i32 %45, %21
  br i1 %48, label %173, label %32

49:                                               ; preds = %66, %63
  %50 = phi i64 [ %27, %66 ], [ %64, %63 ]
  %51 = getelementptr inbounds i8, i8* %6, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = add nsw i64 %50, %67
  %54 = getelementptr inbounds i8, i8* %1, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %52, %55
  br i1 %56, label %63, label %57

57:                                               ; preds = %49
  %58 = trunc i64 %50 to i32
  %59 = add nsw i32 %33, %20
  %60 = add i32 %24, %34
  %61 = sub i32 %60, %58
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %84, label %28

63:                                               ; preds = %49
  %64 = add nsw i64 %50, -1
  %65 = icmp sgt i64 %50, 0
  br i1 %65, label %49, label %173

66:                                               ; preds = %32
  %67 = sext i32 %33 to i64
  br label %49

68:                                               ; preds = %4
  %69 = icmp slt i32 %21, %3
  br i1 %69, label %173, label %70

70:                                               ; preds = %68, %77
  %71 = phi i32 [ %82, %77 ], [ %3, %68 ]
  %72 = add nsw i32 %71, %13
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %1, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %16, %75
  br i1 %76, label %173, label %77

77:                                               ; preds = %70
  %78 = zext i8 %75 to i64
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = sub nsw i32 %13, %80
  %82 = add nsw i32 %81, %71
  %83 = icmp sgt i32 %82, %21
  br i1 %83, label %173, label %70

84:                                               ; preds = %57
  tail call void @_ZN2v88internal12StringSearchIhhE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch"* %0)
  %85 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %85, align 8
  %86 = load i8*, i8** %5, align 8
  %87 = load i64, i64* %7, align 8
  %88 = trunc i64 %87 to i32
  %89 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %92 = sext i32 %90 to i64
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 122, i64 %93
  %95 = add nsw i32 %88, -1
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %86, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = sub nsw i32 %9, %88
  %100 = icmp slt i32 %99, %59
  br i1 %100, label %173, label %101

101:                                              ; preds = %84
  %102 = icmp sgt i32 %88, 0
  %103 = zext i8 %98 to i64
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %103
  br i1 %102, label %105, label %159

105:                                              ; preds = %101
  %106 = shl i64 %87, 32
  %107 = ashr exact i64 %106, 32
  br label %108

108:                                              ; preds = %122, %105
  %109 = phi i32 [ %59, %105 ], [ %123, %122 ]
  %110 = add nsw i32 %109, %95
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %1, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = icmp eq i8 %98, %113
  br i1 %114, label %157, label %115

115:                                              ; preds = %108
  %116 = zext i8 %113 to i64
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = sub nsw i32 %95, %118
  %120 = add nsw i32 %119, %109
  %121 = icmp sgt i32 %120, %99
  br i1 %121, label %173, label %122

122:                                              ; preds = %115, %151
  %123 = phi i32 [ %120, %115 ], [ %153, %151 ]
  br label %108

124:                                              ; preds = %157, %155
  %125 = phi i64 [ %107, %157 ], [ %126, %155 ]
  %126 = add nsw i64 %125, -1
  %127 = getelementptr inbounds i8, i8* %86, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = add nsw i64 %126, %158
  %130 = getelementptr inbounds i8, i8* %1, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %128, %131
  br i1 %132, label %155, label %133

133:                                              ; preds = %124
  %134 = trunc i64 %126 to i32
  %135 = icmp sgt i32 %90, %134
  br i1 %135, label %148, label %136

136:                                              ; preds = %133
  %137 = shl i64 %126, 32
  %138 = add i64 %137, 4294967296
  %139 = ashr exact i64 %138, 32
  %140 = getelementptr inbounds i32, i32* %94, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = zext i8 %131 to i64
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = sub nsw i32 %134, %144
  %146 = icmp sgt i32 %141, %145
  %147 = select i1 %146, i32 %141, i32 %145
  br label %151

148:                                              ; preds = %133
  %149 = load i32, i32* %104, align 4
  %150 = sub nsw i32 %95, %149
  br label %151

151:                                              ; preds = %148, %136
  %152 = phi i32 [ %150, %148 ], [ %147, %136 ]
  %153 = add nsw i32 %152, %109
  %154 = icmp sgt i32 %153, %99
  br i1 %154, label %173, label %122

155:                                              ; preds = %124
  %156 = icmp sgt i64 %126, 0
  br i1 %156, label %124, label %173

157:                                              ; preds = %108
  %158 = sext i32 %109 to i64
  br label %124

159:                                              ; preds = %101, %166
  %160 = phi i32 [ %171, %166 ], [ %59, %101 ]
  %161 = add nsw i32 %160, %95
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* %1, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %98, %164
  br i1 %165, label %173, label %166

166:                                              ; preds = %159
  %167 = zext i8 %164 to i64
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = sub nsw i32 %95, %169
  %171 = add nsw i32 %170, %160
  %172 = icmp sgt i32 %171, %99
  br i1 %172, label %173, label %159

173:                                              ; preds = %77, %70, %28, %40, %63, %166, %159, %151, %115, %155, %68, %84
  %174 = phi i32 [ -1, %84 ], [ -1, %68 ], [ %109, %155 ], [ -1, %115 ], [ -1, %151 ], [ %160, %159 ], [ -1, %166 ], [ %33, %63 ], [ -1, %40 ], [ -1, %28 ], [ %71, %70 ], [ -1, %77 ]
  ret i32 %174
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIhhE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !9

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !11

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !12

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i8, i8* %6, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %6, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %6, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i8, i8* %6, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %6, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %96, label %24

24:                                               ; preds = %4
  %25 = icmp sgt i32 %10, 0
  %26 = zext i8 %21 to i64
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %26
  br i1 %25, label %28, label %82

28:                                               ; preds = %24
  %29 = shl i64 %8, 32
  %30 = ashr exact i64 %29, 32
  br label %31

31:                                               ; preds = %45, %28
  %32 = phi i32 [ %3, %28 ], [ %46, %45 ]
  %33 = add nsw i32 %32, %18
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %1, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %21, %36
  br i1 %37, label %80, label %38

38:                                               ; preds = %31
  %39 = zext i8 %36 to i64
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = sub nsw i32 %18, %41
  %43 = add nsw i32 %42, %32
  %44 = icmp sgt i32 %43, %22
  br i1 %44, label %96, label %45

45:                                               ; preds = %38, %74
  %46 = phi i32 [ %43, %38 ], [ %76, %74 ]
  br label %31

47:                                               ; preds = %80, %78
  %48 = phi i64 [ %30, %80 ], [ %49, %78 ]
  %49 = add i64 %48, -1
  %50 = getelementptr inbounds i8, i8* %6, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = add nsw i64 %49, %81
  %53 = getelementptr inbounds i8, i8* %1, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %51, %54
  br i1 %55, label %78, label %56

56:                                               ; preds = %47
  %57 = trunc i64 %49 to i32
  %58 = icmp sgt i32 %12, %57
  br i1 %58, label %71, label %59

59:                                               ; preds = %56
  %60 = shl i64 %49, 32
  %61 = add i64 %60, 4294967296
  %62 = ashr exact i64 %61, 32
  %63 = getelementptr inbounds i32, i32* %17, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = zext i8 %54 to i64
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = sub nsw i32 %57, %67
  %69 = icmp sgt i32 %64, %68
  %70 = select i1 %69, i32 %64, i32 %68
  br label %74

71:                                               ; preds = %56
  %72 = load i32, i32* %27, align 4
  %73 = sub nsw i32 %18, %72
  br label %74

74:                                               ; preds = %71, %59
  %75 = phi i32 [ %73, %71 ], [ %70, %59 ]
  %76 = add nsw i32 %75, %32
  %77 = icmp sgt i32 %76, %22
  br i1 %77, label %96, label %45

78:                                               ; preds = %47
  %79 = icmp sgt i64 %49, 0
  br i1 %79, label %47, label %96

80:                                               ; preds = %31
  %81 = sext i32 %32 to i64
  br label %47

82:                                               ; preds = %24, %89
  %83 = phi i32 [ %94, %89 ], [ %3, %24 ]
  %84 = add nsw i32 %83, %18
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %1, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %21, %87
  br i1 %88, label %96, label %89

89:                                               ; preds = %82
  %90 = zext i8 %87 to i64
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = sub nsw i32 %18, %92
  %94 = add nsw i32 %93, %83
  %95 = icmp sgt i32 %94, %22
  br i1 %95, label %96, label %82

96:                                               ; preds = %89, %82, %74, %38, %78, %4
  %97 = phi i32 [ -1, %4 ], [ %32, %78 ], [ -1, %38 ], [ -1, %74 ], [ %83, %82 ], [ -1, %89 ]
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32) #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = load i16, i16* %6, align 2
  %8 = icmp ugt i16 %7, 255
  br i1 %8, label %48, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %2 to i32
  %13 = trunc i64 %11 to i32
  %14 = sub nsw i32 %12, %13
  %15 = add nsw i32 %14, 1
  %16 = trunc i16 %7 to i8
  %17 = lshr i16 %7, 8
  %18 = trunc i16 %17 to i8
  %19 = icmp ult i8 %16, %18
  %20 = select i1 %19, i8 %18, i8 %16
  %21 = zext i8 %20 to i32
  %22 = ptrtoint i8* %1 to i64
  %23 = and i16 %7, 255
  %24 = zext i16 %23 to i32
  br label %25

25:                                               ; preds = %43, %9
  %26 = phi i32 [ %3, %9 ], [ %44, %43 ]
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = sub i32 %15, %26
  %30 = sext i32 %29 to i64
  %31 = tail call i8* @memchr(i8* %28, i32 %21, i64 %30) #22
  %32 = icmp eq i8* %31, null
  br i1 %32, label %48, label %33

33:                                               ; preds = %25
  %34 = ptrtoint i8* %31 to i64
  %35 = sub i64 %34, %22
  %36 = trunc i64 %35 to i32
  %37 = shl i64 %35, 32
  %38 = ashr exact i64 %37, 32
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %41, %24
  br i1 %42, label %46, label %43

43:                                               ; preds = %33
  %44 = add nsw i32 %36, 1
  %45 = icmp sgt i32 %14, %36
  br i1 %45, label %25, label %48

46:                                               ; preds = %33
  %47 = trunc i64 %35 to i32
  br label %48

48:                                               ; preds = %43, %25, %46, %4
  %49 = phi i32 [ -1, %4 ], [ %47, %46 ], [ -1, %25 ], [ -1, %43 ]
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %75, label %13

13:                                               ; preds = %4
  %14 = load i16, i16* %6, align 2
  %15 = add nsw i32 %11, 1
  %16 = trunc i16 %14 to i8
  %17 = lshr i16 %14, 8
  %18 = trunc i16 %17 to i8
  %19 = icmp ult i8 %16, %18
  %20 = select i1 %19, i8 %18, i8 %16
  %21 = zext i8 %20 to i32
  %22 = ptrtoint i8* %1 to i64
  %23 = and i16 %14, 255
  %24 = zext i16 %23 to i32
  %25 = getelementptr inbounds i16, i16* %6, i64 1
  %26 = shl i64 %8, 32
  %27 = add i64 %26, -4294967296
  %28 = ashr exact i64 %27, 32
  br label %31

29:                                               ; preds = %61
  %30 = icmp sgt i32 %11, %55
  br i1 %30, label %52, label %75

31:                                               ; preds = %52, %13
  %32 = phi i32 [ %3, %13 ], [ %53, %52 ]
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = sub i32 %15, %32
  %36 = sext i32 %35 to i64
  %37 = tail call i8* @memchr(i8* %34, i32 %21, i64 %36) #22
  %38 = icmp eq i8* %37, null
  br i1 %38, label %75, label %39

39:                                               ; preds = %31
  %40 = ptrtoint i8* %37 to i64
  %41 = sub i64 %40, %22
  %42 = trunc i64 %41 to i32
  %43 = shl i64 %41, 32
  %44 = ashr exact i64 %43, 32
  %45 = getelementptr inbounds i8, i8* %1, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp eq i32 %47, %24
  br i1 %48, label %54, label %49

49:                                               ; preds = %39
  %50 = add nsw i32 %42, 1
  %51 = icmp sgt i32 %11, %42
  br i1 %51, label %52, label %75

52:                                               ; preds = %49, %29
  %53 = phi i32 [ %50, %49 ], [ %58, %29 ]
  br label %31

54:                                               ; preds = %39
  %55 = trunc i64 %41 to i32
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %75, label %57

57:                                               ; preds = %54
  %58 = add nuw nsw i32 %55, 1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %1, i64 %59
  br label %61

61:                                               ; preds = %70, %57
  %62 = phi i64 [ %71, %70 ], [ 0, %57 ]
  %63 = getelementptr inbounds i16, i16* %25, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = getelementptr inbounds i8, i8* %60, i64 %62
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = icmp eq i32 %65, %68
  br i1 %69, label %70, label %29

70:                                               ; preds = %61
  %71 = add nuw nsw i64 %62, 1
  %72 = icmp slt i64 %71, %28
  br i1 %72, label %61, label %73

73:                                               ; preds = %70
  %74 = trunc i64 %41 to i32
  br label %75

75:                                               ; preds = %29, %54, %49, %31, %73, %4
  %76 = phi i32 [ -1, %4 ], [ %74, %73 ], [ -1, %31 ], [ -1, %49 ], [ -1, %54 ], [ -1, %29 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %275, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i8* %1 to i64
  %18 = shl i64 %8, 32
  %19 = ashr exact i64 %18, 32
  br label %20

20:                                               ; preds = %269, %13
  %21 = phi i32 [ %15, %13 ], [ %270, %269 ]
  %22 = phi i32 [ %3, %13 ], [ %271, %269 ]
  %23 = add nsw i32 %21, 1
  %24 = icmp slt i32 %21, 0
  br i1 %24, label %25, label %82

25:                                               ; preds = %20
  %26 = load i16, i16* %6, align 2
  %27 = trunc i16 %26 to i8
  %28 = lshr i16 %26, 8
  %29 = trunc i16 %28 to i8
  %30 = icmp ult i8 %27, %29
  %31 = select i1 %30, i8 %29, i8 %27
  %32 = zext i8 %31 to i32
  %33 = and i16 %26, 255
  %34 = zext i16 %33 to i32
  br label %35

35:                                               ; preds = %53, %25
  %36 = phi i32 [ %22, %25 ], [ %54, %53 ]
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = sub i32 %16, %36
  %40 = sext i32 %39 to i64
  %41 = tail call i8* @memchr(i8* %38, i32 %32, i64 %40) #22
  %42 = icmp eq i8* %41, null
  br i1 %42, label %275, label %43

43:                                               ; preds = %35
  %44 = ptrtoint i8* %41 to i64
  %45 = sub i64 %44, %17
  %46 = trunc i64 %45 to i32
  %47 = shl i64 %45, 32
  %48 = ashr exact i64 %47, 32
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = icmp eq i32 %51, %34
  br i1 %52, label %56, label %53

53:                                               ; preds = %43
  %54 = add nsw i32 %46, 1
  %55 = icmp sgt i32 %11, %46
  br i1 %55, label %35, label %275

56:                                               ; preds = %43
  %57 = trunc i64 %45 to i32
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %275, label %59

59:                                               ; preds = %56
  %60 = shl i64 %45, 32
  %61 = ashr exact i64 %60, 32
  br label %62

62:                                               ; preds = %59, %73
  %63 = phi i64 [ 1, %59 ], [ %74, %73 ]
  %64 = phi i32 [ 1, %59 ], [ %75, %73 ]
  %65 = getelementptr inbounds i16, i16* %6, i64 %63
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = add nsw i64 %63, %61
  %69 = getelementptr inbounds i8, i8* %1, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = icmp eq i32 %67, %71
  br i1 %72, label %73, label %77

73:                                               ; preds = %62
  %74 = add nuw nsw i64 %63, 1
  %75 = add nuw nsw i32 %64, 1
  %76 = icmp slt i64 %74, %19
  br i1 %76, label %62, label %79

77:                                               ; preds = %62
  %78 = trunc i64 %63 to i32
  br label %79

79:                                               ; preds = %73, %77
  %80 = phi i32 [ %78, %77 ], [ %75, %73 ]
  %81 = icmp eq i32 %80, %9
  br i1 %81, label %273, label %269

82:                                               ; preds = %20
  %83 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 0
  %84 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %222, label %88

88:                                               ; preds = %82
  %89 = add nsw i32 %86, -1
  %90 = insertelement <4 x i32> undef, i32 %89, i32 0
  %91 = shufflevector <4 x i32> %90, <4 x i32> undef, <4 x i32> zeroinitializer
  %92 = insertelement <4 x i32> undef, i32 %89, i32 0
  %93 = shufflevector <4 x i32> %92, <4 x i32> undef, <4 x i32> zeroinitializer
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 0
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %95, align 4
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 8
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %99, align 4
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 12
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %101, align 4
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 16
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %103, align 4
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 20
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %105, align 4
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 24
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %107, align 4
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 28
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %109, align 4
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 32
  %111 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %111, align 4
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 36
  %113 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %113, align 4
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 40
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %115, align 4
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 44
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %117, align 4
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 48
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %119, align 4
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 52
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %121, align 4
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 56
  %123 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %123, align 4
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 60
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %125, align 4
  %126 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 64
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %127, align 4
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 68
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 72
  %131 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 76
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %133, align 4
  %134 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 80
  %135 = bitcast i32* %134 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %135, align 4
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 84
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %137, align 4
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 88
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %139, align 4
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 92
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %141, align 4
  %142 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 96
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %143, align 4
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 100
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %145, align 4
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 104
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %147, align 4
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 108
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %149, align 4
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 112
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %151, align 4
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 116
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %153, align 4
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 120
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %155, align 4
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 124
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %157, align 4
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 128
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %159, align 4
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 132
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %161, align 4
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 136
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %163, align 4
  %164 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 140
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %165, align 4
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 144
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %167, align 4
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 148
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %169, align 4
  %170 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 152
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %171, align 4
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 156
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %173, align 4
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 160
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %175, align 4
  %176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 164
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %177, align 4
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 168
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %179, align 4
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 172
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %181, align 4
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 176
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %183, align 4
  %184 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 180
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %185, align 4
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 184
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %187, align 4
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 188
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %189, align 4
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 192
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %191, align 4
  %192 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 196
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %193, align 4
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 200
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %195, align 4
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 204
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %197, align 4
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 208
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %199, align 4
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 212
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %201, align 4
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 216
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %203, align 4
  %204 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 220
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %205, align 4
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 224
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %207, align 4
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 228
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %209, align 4
  %210 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 232
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %211, align 4
  %212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 236
  %213 = bitcast i32* %212 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %213, align 4
  %214 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 240
  %215 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %215, align 4
  %216 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 244
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %217, align 4
  %218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 248
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %219, align 4
  %220 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 252
  %221 = bitcast i32* %220 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %221, align 4
  br label %225

222:                                              ; preds = %82
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 0
  %224 = bitcast i32* %223 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %224, i8 -1, i64 1024, i1 false) #20
  br label %225

225:                                              ; preds = %88, %222
  %226 = add i32 %9, -1
  %227 = icmp slt i32 %86, %226
  br i1 %227, label %228, label %266

228:                                              ; preds = %225
  %229 = sext i32 %86 to i64
  %230 = sext i32 %226 to i64
  %231 = sub nsw i64 %230, %229
  %232 = xor i64 %229, -1
  %233 = and i64 %231, 1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %243, label %235

235:                                              ; preds = %228
  %236 = load i16*, i16** %5, align 8
  %237 = getelementptr inbounds i16, i16* %236, i64 %229
  %238 = load i16, i16* %237, align 2
  %239 = and i16 %238, 255
  %240 = zext i16 %239 to i64
  %241 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 %240
  store i32 %86, i32* %241, align 4
  %242 = add nsw i64 %229, 1
  br label %243

243:                                              ; preds = %228, %235
  %244 = phi i64 [ %229, %228 ], [ %242, %235 ]
  %245 = sub nsw i64 0, %230
  %246 = icmp eq i64 %232, %245
  br i1 %246, label %266, label %247

247:                                              ; preds = %243, %247
  %248 = phi i64 [ %264, %247 ], [ %244, %243 ]
  %249 = load i16*, i16** %5, align 8
  %250 = getelementptr inbounds i16, i16* %249, i64 %248
  %251 = load i16, i16* %250, align 2
  %252 = and i16 %251, 255
  %253 = zext i16 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 %253
  %255 = trunc i64 %248 to i32
  store i32 %255, i32* %254, align 4
  %256 = add nsw i64 %248, 1
  %257 = load i16*, i16** %5, align 8
  %258 = getelementptr inbounds i16, i16* %257, i64 %256
  %259 = load i16, i16* %258, align 2
  %260 = and i16 %259, 255
  %261 = zext i16 %260 to i64
  %262 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 %261
  %263 = trunc i64 %256 to i32
  store i32 %263, i32* %262, align 4
  %264 = add nsw i64 %248, 2
  %265 = icmp eq i64 %264, %230
  br i1 %265, label %266, label %247

266:                                              ; preds = %243, %247, %225
  %267 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)** %267, align 8
  %268 = tail call i32 @_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1238"* %0, i8* %1, i64 %2, i32 %22)
  br label %275

269:                                              ; preds = %79
  %270 = add nsw i32 %23, %80
  %271 = add nsw i32 %57, 1
  %272 = icmp sgt i32 %11, %57
  br i1 %272, label %20, label %275

273:                                              ; preds = %79
  %274 = trunc i64 %45 to i32
  br label %275

275:                                              ; preds = %56, %269, %53, %35, %273, %4, %266
  %276 = phi i32 [ %268, %266 ], [ -1, %4 ], [ %274, %273 ], [ -1, %35 ], [ -1, %53 ], [ -1, %269 ], [ -1, %56 ]
  ret i32 %276
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i16, i16* %6, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = and i16 %16, 255
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %13, %20
  %22 = sub nsw i32 %9, %10
  %23 = zext i16 %16 to i32
  %24 = add i32 %10, -2
  %25 = icmp sgt i32 %24, -1
  %26 = sub i32 %10, %21
  br i1 %25, label %27, label %73

27:                                               ; preds = %4
  %28 = sub nsw i32 0, %10
  %29 = sext i32 %24 to i64
  br label %30

30:                                               ; preds = %27, %62
  %31 = phi i32 [ %64, %62 ], [ %3, %27 ]
  %32 = phi i32 [ %66, %62 ], [ %28, %27 ]
  %33 = icmp sgt i32 %31, %22
  br i1 %33, label %93, label %34

34:                                               ; preds = %30, %43
  %35 = phi i32 [ %48, %43 ], [ %31, %30 ]
  %36 = phi i32 [ %50, %43 ], [ %32, %30 ]
  %37 = add nsw i32 %35, %13
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %23, %41
  br i1 %42, label %71, label %43

43:                                               ; preds = %34
  %44 = zext i8 %40 to i64
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = sub nsw i32 %13, %46
  %48 = add nsw i32 %47, %35
  %49 = add i32 %36, 1
  %50 = sub i32 %49, %47
  %51 = icmp sgt i32 %48, %22
  br i1 %51, label %93, label %34

52:                                               ; preds = %71, %68
  %53 = phi i64 [ %29, %71 ], [ %69, %68 ]
  %54 = getelementptr inbounds i16, i16* %6, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add nsw i64 %53, %72
  %58 = getelementptr inbounds i8, i8* %1, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = icmp eq i32 %56, %60
  br i1 %61, label %68, label %62

62:                                               ; preds = %52
  %63 = trunc i64 %53 to i32
  %64 = add nsw i32 %35, %21
  %65 = add i32 %26, %36
  %66 = sub i32 %65, %63
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %90, label %30

68:                                               ; preds = %52
  %69 = add nsw i64 %53, -1
  %70 = icmp sgt i64 %53, 0
  br i1 %70, label %52, label %93

71:                                               ; preds = %34
  %72 = sext i32 %35 to i64
  br label %52

73:                                               ; preds = %4
  %74 = icmp slt i32 %22, %3
  br i1 %74, label %93, label %75

75:                                               ; preds = %73, %83
  %76 = phi i32 [ %88, %83 ], [ %3, %73 ]
  %77 = add nsw i32 %76, %13
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %1, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = icmp eq i32 %23, %81
  br i1 %82, label %93, label %83

83:                                               ; preds = %75
  %84 = zext i8 %80 to i64
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = sub nsw i32 %13, %86
  %88 = add nsw i32 %87, %76
  %89 = icmp sgt i32 %88, %22
  br i1 %89, label %93, label %75

90:                                               ; preds = %62
  tail call void @_ZN2v88internal12StringSearchIthE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1238"* %0)
  %91 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32)** %91, align 8
  %92 = tail call i32 @_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1238"* %0, i8* %1, i64 %2, i32 %64)
  br label %93

93:                                               ; preds = %83, %75, %30, %43, %68, %73, %90
  %94 = phi i32 [ %92, %90 ], [ -1, %73 ], [ %35, %68 ], [ -1, %43 ], [ -1, %30 ], [ %76, %75 ], [ -1, %83 ]
  ret i32 %94
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIthE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1238"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !14

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !15

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !16

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i16, i16* %6, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %6, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i16, i16* %6, i64 %129
  %131 = load i16, i16* %130, align 2
  %132 = icmp eq i16 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i16, i16* %6, i64 %153
  %155 = load i16, i16* %154, align 2
  %156 = icmp eq i16 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1238"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1238", %"class.v8::internal::StringSearch.1238"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i16, i16* %6, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %102, label %24

24:                                               ; preds = %4
  %25 = zext i16 %21 to i32
  %26 = icmp sgt i32 %10, 0
  %27 = and i16 %21, 255
  %28 = zext i16 %27 to i64
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %28
  br i1 %26, label %30, label %87

30:                                               ; preds = %24
  %31 = shl i64 %8, 32
  %32 = ashr exact i64 %31, 32
  br label %33

33:                                               ; preds = %48, %30
  %34 = phi i32 [ %3, %30 ], [ %49, %48 ]
  %35 = add nsw i32 %34, %18
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp eq i32 %25, %39
  br i1 %40, label %85, label %41

41:                                               ; preds = %33
  %42 = zext i8 %38 to i64
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sub nsw i32 %18, %44
  %46 = add nsw i32 %45, %34
  %47 = icmp sgt i32 %46, %22
  br i1 %47, label %102, label %48

48:                                               ; preds = %41, %79
  %49 = phi i32 [ %46, %41 ], [ %81, %79 ]
  br label %33

50:                                               ; preds = %85, %83
  %51 = phi i64 [ %32, %85 ], [ %52, %83 ]
  %52 = add i64 %51, -1
  %53 = getelementptr inbounds i16, i16* %6, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = add nsw i64 %52, %86
  %57 = getelementptr inbounds i8, i8* %1, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = icmp eq i32 %55, %59
  br i1 %60, label %83, label %61

61:                                               ; preds = %50
  %62 = trunc i64 %52 to i32
  %63 = icmp sgt i32 %12, %62
  br i1 %63, label %76, label %64

64:                                               ; preds = %61
  %65 = shl i64 %52, 32
  %66 = add i64 %65, 4294967296
  %67 = ashr exact i64 %66, 32
  %68 = getelementptr inbounds i32, i32* %17, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = zext i8 %58 to i64
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = sub nsw i32 %62, %72
  %74 = icmp sgt i32 %69, %73
  %75 = select i1 %74, i32 %69, i32 %73
  br label %79

76:                                               ; preds = %61
  %77 = load i32, i32* %29, align 4
  %78 = sub nsw i32 %18, %77
  br label %79

79:                                               ; preds = %76, %64
  %80 = phi i32 [ %78, %76 ], [ %75, %64 ]
  %81 = add nsw i32 %80, %34
  %82 = icmp sgt i32 %81, %22
  br i1 %82, label %102, label %48

83:                                               ; preds = %50
  %84 = icmp sgt i64 %52, 0
  br i1 %84, label %50, label %102

85:                                               ; preds = %33
  %86 = sext i32 %34 to i64
  br label %50

87:                                               ; preds = %24, %95
  %88 = phi i32 [ %100, %95 ], [ %3, %24 ]
  %89 = add nsw i32 %88, %18
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %1, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %25, %93
  br i1 %94, label %102, label %95

95:                                               ; preds = %87
  %96 = zext i8 %92 to i64
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = sub nsw i32 %18, %98
  %100 = add nsw i32 %99, %88
  %101 = icmp sgt i32 %100, %22
  br i1 %101, label %102, label %87

102:                                              ; preds = %95, %87, %79, %41, %83, %4
  %103 = phi i32 [ -1, %4 ], [ %34, %83 ], [ -1, %41 ], [ -1, %79 ], [ %88, %87 ], [ -1, %95 ]
  ret i32 %103
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE16SingleCharSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = load i8, i8* %6, align 1
  %10 = trunc i64 %2 to i32
  %11 = trunc i64 %8 to i32
  %12 = sub nsw i32 %10, %11
  %13 = add nsw i32 %12, 1
  %14 = icmp eq i8 %9, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = zext i8 %9 to i32
  %17 = ptrtoint i16* %1 to i64
  br label %33

18:                                               ; preds = %4
  %19 = icmp slt i32 %12, %3
  br i1 %19, label %60, label %20

20:                                               ; preds = %18
  %21 = sext i32 %3 to i64
  %22 = sext i32 %12 to i64
  br label %23

23:                                               ; preds = %28, %20
  %24 = phi i64 [ %21, %20 ], [ %29, %28 ]
  %25 = getelementptr inbounds i16, i16* %1, i64 %24
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = add nsw i64 %24, 1
  %30 = icmp slt i64 %24, %22
  br i1 %30, label %23, label %60

31:                                               ; preds = %23
  %32 = trunc i64 %24 to i32
  br label %60

33:                                               ; preds = %55, %15
  %34 = phi i32 [ %56, %55 ], [ %3, %15 ]
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  %37 = bitcast i16* %36 to i8*
  %38 = sub i32 %13, %34
  %39 = sext i32 %38 to i64
  %40 = shl nsw i64 %39, 1
  %41 = tail call i8* @memchr(i8* %37, i32 %16, i64 %40) #22
  %42 = icmp eq i8* %41, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %33
  %44 = ptrtoint i8* %41 to i64
  %45 = and i64 %44, -2
  %46 = sub i64 %45, %17
  %47 = lshr exact i64 %46, 1
  %48 = trunc i64 %47 to i32
  %49 = shl i64 %46, 31
  %50 = ashr exact i64 %49, 32
  %51 = getelementptr inbounds i16, i16* %1, i64 %50
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i32
  %54 = icmp eq i32 %53, %16
  br i1 %54, label %58, label %55

55:                                               ; preds = %43
  %56 = add nsw i32 %48, 1
  %57 = icmp sgt i32 %12, %48
  br i1 %57, label %33, label %60

58:                                               ; preds = %43
  %59 = trunc i64 %47 to i32
  br label %60

60:                                               ; preds = %33, %55, %28, %58, %18, %31
  %61 = phi i32 [ -1, %18 ], [ %32, %31 ], [ %59, %58 ], [ -1, %28 ], [ -1, %55 ], [ -1, %33 ]
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %108, label %13

13:                                               ; preds = %4
  %14 = load i8, i8* %6, align 1
  %15 = add nsw i32 %11, 1
  %16 = icmp eq i8 %14, 0
  %17 = zext i8 %14 to i32
  %18 = ptrtoint i16* %1 to i64
  %19 = sext i32 %11 to i64
  %20 = getelementptr inbounds i8, i8* %6, i64 1
  %21 = shl i64 %8, 32
  %22 = add i64 %21, -4294967296
  %23 = ashr exact i64 %22, 32
  br i1 %16, label %24, label %58

24:                                               ; preds = %13, %54
  %25 = phi i32 [ %39, %54 ], [ %3, %13 ]
  %26 = sext i32 %25 to i64
  br label %27

27:                                               ; preds = %32, %24
  %28 = phi i64 [ %26, %24 ], [ %33, %32 ]
  %29 = getelementptr inbounds i16, i16* %1, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = add nsw i64 %28, 1
  %34 = icmp slt i64 %28, %19
  br i1 %34, label %27, label %108

35:                                               ; preds = %27
  %36 = trunc i64 %28 to i32
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %108, label %38

38:                                               ; preds = %35
  %39 = add nuw nsw i32 %36, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %1, i64 %40
  br label %42

42:                                               ; preds = %51, %38
  %43 = phi i64 [ %52, %51 ], [ 0, %38 ]
  %44 = getelementptr inbounds i8, i8* %20, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds i16, i16* %41, i64 %43
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = icmp eq i32 %46, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %42
  %52 = add nuw nsw i64 %43, 1
  %53 = icmp slt i64 %52, %23
  br i1 %53, label %42, label %104

54:                                               ; preds = %42
  %55 = icmp sgt i32 %11, %36
  br i1 %55, label %24, label %108

56:                                               ; preds = %92
  %57 = icmp sgt i32 %11, %86
  br i1 %57, label %83, label %108

58:                                               ; preds = %13, %83
  %59 = phi i32 [ %84, %83 ], [ %3, %13 ]
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i16, i16* %1, i64 %60
  %62 = bitcast i16* %61 to i8*
  %63 = sub i32 %15, %59
  %64 = sext i32 %63 to i64
  %65 = shl nsw i64 %64, 1
  %66 = tail call i8* @memchr(i8* %62, i32 %17, i64 %65) #22
  %67 = icmp eq i8* %66, null
  br i1 %67, label %108, label %68

68:                                               ; preds = %58
  %69 = ptrtoint i8* %66 to i64
  %70 = and i64 %69, -2
  %71 = sub i64 %70, %18
  %72 = lshr exact i64 %71, 1
  %73 = trunc i64 %72 to i32
  %74 = shl i64 %71, 31
  %75 = ashr exact i64 %74, 32
  %76 = getelementptr inbounds i16, i16* %1, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  %79 = icmp eq i32 %78, %17
  br i1 %79, label %85, label %80

80:                                               ; preds = %68
  %81 = add nsw i32 %73, 1
  %82 = icmp sgt i32 %11, %73
  br i1 %82, label %83, label %108

83:                                               ; preds = %80, %56
  %84 = phi i32 [ %81, %80 ], [ %89, %56 ]
  br label %58

85:                                               ; preds = %68
  %86 = trunc i64 %72 to i32
  %87 = icmp eq i32 %86, -1
  br i1 %87, label %108, label %88

88:                                               ; preds = %85
  %89 = add nuw nsw i32 %86, 1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i16, i16* %1, i64 %90
  br label %92

92:                                               ; preds = %101, %88
  %93 = phi i64 [ %102, %101 ], [ 0, %88 ]
  %94 = getelementptr inbounds i8, i8* %20, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = getelementptr inbounds i16, i16* %91, i64 %93
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = icmp eq i32 %96, %99
  br i1 %100, label %101, label %56

101:                                              ; preds = %92
  %102 = add nuw nsw i64 %93, 1
  %103 = icmp slt i64 %102, %23
  br i1 %103, label %92, label %106

104:                                              ; preds = %51
  %105 = trunc i64 %28 to i32
  br label %108

106:                                              ; preds = %101
  %107 = trunc i64 %72 to i32
  br label %108

108:                                              ; preds = %56, %85, %80, %58, %54, %35, %32, %106, %104, %4
  %109 = phi i32 [ -1, %4 ], [ %105, %104 ], [ %107, %106 ], [ -1, %32 ], [ -1, %35 ], [ -1, %54 ], [ -1, %58 ], [ -1, %80 ], [ -1, %85 ], [ -1, %56 ]
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %302, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i16* %1 to i64
  %18 = sext i32 %11 to i64
  %19 = shl i64 %8, 32
  %20 = ashr exact i64 %19, 32
  br label %21

21:                                               ; preds = %296, %13
  %22 = phi i32 [ %15, %13 ], [ %297, %296 ]
  %23 = phi i32 [ %3, %13 ], [ %298, %296 ]
  %24 = add nsw i32 %22, 1
  %25 = icmp slt i32 %22, 0
  br i1 %25, label %26, label %93

26:                                               ; preds = %21
  %27 = load i8, i8* %6, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = zext i8 %27 to i32
  br label %41

31:                                               ; preds = %26
  %32 = sext i32 %23 to i64
  br label %33

33:                                               ; preds = %38, %31
  %34 = phi i64 [ %32, %31 ], [ %39, %38 ]
  %35 = getelementptr inbounds i16, i16* %1, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %66, label %38

38:                                               ; preds = %33
  %39 = add nsw i64 %34, 1
  %40 = icmp slt i64 %34, %18
  br i1 %40, label %33, label %302

41:                                               ; preds = %63, %29
  %42 = phi i32 [ %64, %63 ], [ %23, %29 ]
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i16, i16* %1, i64 %43
  %45 = bitcast i16* %44 to i8*
  %46 = sub i32 %16, %42
  %47 = sext i32 %46 to i64
  %48 = shl nsw i64 %47, 1
  %49 = tail call i8* @memchr(i8* %45, i32 %30, i64 %48) #22
  %50 = icmp eq i8* %49, null
  br i1 %50, label %302, label %51

51:                                               ; preds = %41
  %52 = ptrtoint i8* %49 to i64
  %53 = and i64 %52, -2
  %54 = sub i64 %53, %17
  %55 = lshr exact i64 %54, 1
  %56 = trunc i64 %55 to i32
  %57 = shl i64 %54, 31
  %58 = ashr exact i64 %57, 32
  %59 = getelementptr inbounds i16, i16* %1, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = icmp eq i32 %61, %30
  br i1 %62, label %66, label %63

63:                                               ; preds = %51
  %64 = add nsw i32 %56, 1
  %65 = icmp sgt i32 %11, %56
  br i1 %65, label %41, label %302

66:                                               ; preds = %51, %33
  %67 = phi i64 [ %34, %33 ], [ %55, %51 ]
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %302, label %70

70:                                               ; preds = %66
  %71 = shl i64 %67, 32
  %72 = ashr exact i64 %71, 32
  br label %73

73:                                               ; preds = %70, %84
  %74 = phi i64 [ 1, %70 ], [ %85, %84 ]
  %75 = phi i32 [ 1, %70 ], [ %86, %84 ]
  %76 = getelementptr inbounds i8, i8* %6, i64 %74
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = add nsw i64 %74, %72
  %80 = getelementptr inbounds i16, i16* %1, i64 %79
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = icmp eq i32 %78, %82
  br i1 %83, label %84, label %88

84:                                               ; preds = %73
  %85 = add nuw nsw i64 %74, 1
  %86 = add nuw nsw i32 %75, 1
  %87 = icmp slt i64 %85, %20
  br i1 %87, label %73, label %90

88:                                               ; preds = %73
  %89 = trunc i64 %74 to i32
  br label %90

90:                                               ; preds = %84, %88
  %91 = phi i32 [ %89, %88 ], [ %86, %84 ]
  %92 = icmp eq i32 %91, %9
  br i1 %92, label %300, label %296

93:                                               ; preds = %21
  %94 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 0
  %95 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %233, label %99

99:                                               ; preds = %93
  %100 = add nsw i32 %97, -1
  %101 = insertelement <4 x i32> undef, i32 %100, i32 0
  %102 = shufflevector <4 x i32> %101, <4 x i32> undef, <4 x i32> zeroinitializer
  %103 = insertelement <4 x i32> undef, i32 %100, i32 0
  %104 = shufflevector <4 x i32> %103, <4 x i32> undef, <4 x i32> zeroinitializer
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 0
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %106, align 4
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 4
  %108 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 8
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %110, align 4
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 12
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %112, align 4
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 16
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %114, align 4
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 20
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %116, align 4
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 24
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %118, align 4
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 28
  %120 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %120, align 4
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 32
  %122 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %122, align 4
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 36
  %124 = bitcast i32* %123 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %124, align 4
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 40
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %126, align 4
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 44
  %128 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %128, align 4
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 48
  %130 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %130, align 4
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 52
  %132 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %132, align 4
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 56
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %134, align 4
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 60
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %136, align 4
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 64
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %138, align 4
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 68
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %140, align 4
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 72
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %142, align 4
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 76
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %144, align 4
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 80
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %146, align 4
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 84
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %148, align 4
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 88
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %150, align 4
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 92
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %152, align 4
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 96
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %154, align 4
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 100
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %156, align 4
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 104
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %158, align 4
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 108
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %160, align 4
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 112
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %162, align 4
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 116
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %164, align 4
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 120
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %166, align 4
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 124
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %168, align 4
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 128
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %170, align 4
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 132
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %172, align 4
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 136
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %174, align 4
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 140
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %176, align 4
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 144
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %178, align 4
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 148
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %180, align 4
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 152
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %182, align 4
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 156
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %184, align 4
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 160
  %186 = bitcast i32* %185 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %186, align 4
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 164
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %188, align 4
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 168
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %190, align 4
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 172
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %192, align 4
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 176
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %194, align 4
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 180
  %196 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %196, align 4
  %197 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 184
  %198 = bitcast i32* %197 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %198, align 4
  %199 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 188
  %200 = bitcast i32* %199 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %200, align 4
  %201 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 192
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %202, align 4
  %203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 196
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %204, align 4
  %205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 200
  %206 = bitcast i32* %205 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %206, align 4
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 204
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %208, align 4
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 208
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %210, align 4
  %211 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 212
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %212, align 4
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 216
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %214, align 4
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 220
  %216 = bitcast i32* %215 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %216, align 4
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 224
  %218 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %218, align 4
  %219 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 228
  %220 = bitcast i32* %219 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %220, align 4
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 232
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %222, align 4
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 236
  %224 = bitcast i32* %223 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %224, align 4
  %225 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 240
  %226 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %226, align 4
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 244
  %228 = bitcast i32* %227 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %228, align 4
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 248
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %230, align 4
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 252
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %232, align 4
  br label %236

233:                                              ; preds = %93
  %234 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 0
  %235 = bitcast i32* %234 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %235, i8 -1, i64 1024, i1 false) #20
  br label %236

236:                                              ; preds = %99, %233
  %237 = add i32 %9, -1
  %238 = icmp slt i32 %97, %237
  br i1 %238, label %239, label %293

239:                                              ; preds = %236
  %240 = sext i32 %97 to i64
  %241 = sext i32 %237 to i64
  %242 = sub nsw i64 %241, %240
  %243 = xor i64 %240, -1
  %244 = add nsw i64 %243, %241
  %245 = and i64 %242, 3
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %259, label %247

247:                                              ; preds = %239, %247
  %248 = phi i64 [ %256, %247 ], [ %240, %239 ]
  %249 = phi i64 [ %257, %247 ], [ %245, %239 ]
  %250 = load i8*, i8** %5, align 8
  %251 = getelementptr inbounds i8, i8* %250, i64 %248
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %253
  %255 = trunc i64 %248 to i32
  store i32 %255, i32* %254, align 4
  %256 = add nsw i64 %248, 1
  %257 = add i64 %249, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %247, !llvm.loop !17

259:                                              ; preds = %247, %239
  %260 = phi i64 [ %240, %239 ], [ %256, %247 ]
  %261 = icmp ult i64 %244, 3
  br i1 %261, label %293, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %291, %262 ], [ %260, %259 ]
  %264 = load i8*, i8** %5, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 %263
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %267
  %269 = trunc i64 %263 to i32
  store i32 %269, i32* %268, align 4
  %270 = add nsw i64 %263, 1
  %271 = load i8*, i8** %5, align 8
  %272 = getelementptr inbounds i8, i8* %271, i64 %270
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %273 to i64
  %275 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %274
  %276 = trunc i64 %270 to i32
  store i32 %276, i32* %275, align 4
  %277 = add nsw i64 %263, 2
  %278 = load i8*, i8** %5, align 8
  %279 = getelementptr inbounds i8, i8* %278, i64 %277
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i64
  %282 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %281
  %283 = trunc i64 %277 to i32
  store i32 %283, i32* %282, align 4
  %284 = add nsw i64 %263, 3
  %285 = load i8*, i8** %5, align 8
  %286 = getelementptr inbounds i8, i8* %285, i64 %284
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i64
  %289 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %288
  %290 = trunc i64 %284 to i32
  store i32 %290, i32* %289, align 4
  %291 = add nsw i64 %263, 4
  %292 = icmp eq i64 %291, %241
  br i1 %292, label %293, label %262

293:                                              ; preds = %259, %262, %236
  %294 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)** %294, align 8
  %295 = tail call i32 @_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1241"* %0, i16* %1, i64 %2, i32 %23)
  br label %302

296:                                              ; preds = %90
  %297 = add nsw i32 %24, %91
  %298 = add nsw i32 %68, 1
  %299 = icmp sgt i32 %11, %68
  br i1 %299, label %21, label %302

300:                                              ; preds = %90
  %301 = trunc i64 %67 to i32
  br label %302

302:                                              ; preds = %300, %66, %296, %63, %41, %38, %4, %293
  %303 = phi i32 [ %295, %293 ], [ -1, %4 ], [ -1, %38 ], [ -1, %41 ], [ -1, %63 ], [ %301, %300 ], [ -1, %66 ], [ -1, %296 ]
  ret i32 %303
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %13, %19
  %21 = sub nsw i32 %9, %10
  %22 = zext i8 %16 to i32
  %23 = add i32 %10, -2
  %24 = icmp sgt i32 %23, -1
  %25 = sub i32 %10, %20
  br i1 %24, label %26, label %76

26:                                               ; preds = %4
  %27 = sub nsw i32 0, %10
  %28 = sext i32 %23 to i64
  br label %29

29:                                               ; preds = %26, %65
  %30 = phi i32 [ %67, %65 ], [ %3, %26 ]
  %31 = phi i32 [ %69, %65 ], [ %27, %26 ]
  %32 = icmp sgt i32 %30, %21
  br i1 %32, label %100, label %33

33:                                               ; preds = %29, %48
  %34 = phi i32 [ %51, %48 ], [ %30, %29 ]
  %35 = phi i32 [ %53, %48 ], [ %31, %29 ]
  %36 = add nsw i32 %34, %13
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, i16* %1, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = icmp eq i32 %22, %40
  br i1 %41, label %74, label %42

42:                                               ; preds = %33
  %43 = icmp ugt i16 %39, 255
  br i1 %43, label %48, label %44

44:                                               ; preds = %42
  %45 = zext i16 %39 to i64
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %45
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %44, %42
  %49 = phi i32 [ %47, %44 ], [ -1, %42 ]
  %50 = sub nsw i32 %13, %49
  %51 = add nsw i32 %50, %34
  %52 = add i32 %35, 1
  %53 = sub i32 %52, %50
  %54 = icmp sgt i32 %51, %21
  br i1 %54, label %100, label %33

55:                                               ; preds = %74, %71
  %56 = phi i64 [ %28, %74 ], [ %72, %71 ]
  %57 = getelementptr inbounds i8, i8* %6, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = add nsw i64 %56, %75
  %61 = getelementptr inbounds i16, i16* %1, i64 %60
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = icmp eq i32 %59, %63
  br i1 %64, label %71, label %65

65:                                               ; preds = %55
  %66 = trunc i64 %56 to i32
  %67 = add nsw i32 %34, %20
  %68 = add i32 %25, %35
  %69 = sub i32 %68, %66
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %97, label %29

71:                                               ; preds = %55
  %72 = add nsw i64 %56, -1
  %73 = icmp sgt i64 %56, 0
  br i1 %73, label %55, label %100

74:                                               ; preds = %33
  %75 = sext i32 %34 to i64
  br label %55

76:                                               ; preds = %4
  %77 = icmp slt i32 %21, %3
  br i1 %77, label %100, label %78

78:                                               ; preds = %76, %92
  %79 = phi i32 [ %95, %92 ], [ %3, %76 ]
  %80 = add nsw i32 %79, %13
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i16, i16* %1, i64 %81
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = icmp eq i32 %22, %84
  br i1 %85, label %100, label %86

86:                                               ; preds = %78
  %87 = icmp ugt i16 %83, 255
  br i1 %87, label %92, label %88

88:                                               ; preds = %86
  %89 = zext i16 %83 to i64
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %89
  %91 = load i32, i32* %90, align 4
  br label %92

92:                                               ; preds = %86, %88
  %93 = phi i32 [ %91, %88 ], [ -1, %86 ]
  %94 = sub nsw i32 %13, %93
  %95 = add nsw i32 %94, %79
  %96 = icmp sgt i32 %95, %21
  br i1 %96, label %100, label %78

97:                                               ; preds = %65
  tail call void @_ZN2v88internal12StringSearchIhtE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1241"* %0)
  %98 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32)** %98, align 8
  %99 = tail call i32 @_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1241"* %0, i16* %1, i64 %2, i32 %67)
  br label %100

100:                                              ; preds = %92, %78, %29, %48, %71, %76, %97
  %101 = phi i32 [ %99, %97 ], [ -1, %76 ], [ %34, %71 ], [ -1, %48 ], [ -1, %29 ], [ %79, %78 ], [ -1, %92 ]
  ret i32 %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIhtE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1241"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !18

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !19

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !20

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i8, i8* %6, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %6, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %6, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i8, i8* %6, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1241"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1241", %"class.v8::internal::StringSearch.1241"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %6, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %113, label %24

24:                                               ; preds = %4
  %25 = zext i8 %21 to i32
  %26 = icmp sgt i32 %10, 0
  %27 = zext i8 %21 to i64
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %27
  br i1 %26, label %29, label %94

29:                                               ; preds = %24
  %30 = shl i64 %8, 32
  %31 = ashr exact i64 %30, 32
  br label %32

32:                                               ; preds = %51, %29
  %33 = phi i32 [ %3, %29 ], [ %52, %51 ]
  %34 = add nsw i32 %33, %18
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = icmp eq i32 %25, %38
  br i1 %39, label %92, label %40

40:                                               ; preds = %32
  %41 = icmp ugt i16 %37, 255
  br i1 %41, label %46, label %42

42:                                               ; preds = %40
  %43 = zext i16 %37 to i64
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %43
  %45 = load i32, i32* %44, align 4
  br label %46

46:                                               ; preds = %42, %40
  %47 = phi i32 [ %45, %42 ], [ -1, %40 ]
  %48 = sub nsw i32 %18, %47
  %49 = add nsw i32 %48, %33
  %50 = icmp sgt i32 %49, %22
  br i1 %50, label %113, label %51

51:                                               ; preds = %46, %86
  %52 = phi i32 [ %49, %46 ], [ %88, %86 ]
  br label %32

53:                                               ; preds = %92, %90
  %54 = phi i64 [ %31, %92 ], [ %55, %90 ]
  %55 = add i64 %54, -1
  %56 = getelementptr inbounds i8, i8* %6, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = add nsw i64 %55, %93
  %60 = getelementptr inbounds i16, i16* %1, i64 %59
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp eq i32 %58, %62
  br i1 %63, label %90, label %64

64:                                               ; preds = %53
  %65 = trunc i64 %55 to i32
  %66 = icmp sgt i32 %12, %65
  br i1 %66, label %83, label %67

67:                                               ; preds = %64
  %68 = shl i64 %55, 32
  %69 = add i64 %68, 4294967296
  %70 = ashr exact i64 %69, 32
  %71 = getelementptr inbounds i32, i32* %17, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp ugt i16 %61, 255
  br i1 %73, label %78, label %74

74:                                               ; preds = %67
  %75 = zext i16 %61 to i64
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %75
  %77 = load i32, i32* %76, align 4
  br label %78

78:                                               ; preds = %74, %67
  %79 = phi i32 [ %77, %74 ], [ -1, %67 ]
  %80 = sub nsw i32 %65, %79
  %81 = icmp sgt i32 %72, %80
  %82 = select i1 %81, i32 %72, i32 %80
  br label %86

83:                                               ; preds = %64
  %84 = load i32, i32* %28, align 4
  %85 = sub nsw i32 %18, %84
  br label %86

86:                                               ; preds = %83, %78
  %87 = phi i32 [ %85, %83 ], [ %82, %78 ]
  %88 = add nsw i32 %87, %33
  %89 = icmp sgt i32 %88, %22
  br i1 %89, label %113, label %51

90:                                               ; preds = %53
  %91 = icmp sgt i64 %55, 0
  br i1 %91, label %53, label %113

92:                                               ; preds = %32
  %93 = sext i32 %33 to i64
  br label %53

94:                                               ; preds = %24, %108
  %95 = phi i32 [ %111, %108 ], [ %3, %24 ]
  %96 = add nsw i32 %95, %18
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i16, i16* %1, i64 %97
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = icmp eq i32 %25, %100
  br i1 %101, label %113, label %102

102:                                              ; preds = %94
  %103 = icmp ugt i16 %99, 255
  br i1 %103, label %108, label %104

104:                                              ; preds = %102
  %105 = zext i16 %99 to i64
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %105
  %107 = load i32, i32* %106, align 4
  br label %108

108:                                              ; preds = %102, %104
  %109 = phi i32 [ %107, %104 ], [ -1, %102 ]
  %110 = sub nsw i32 %18, %109
  %111 = add nsw i32 %110, %95
  %112 = icmp sgt i32 %111, %22
  br i1 %112, label %113, label %94

113:                                              ; preds = %108, %94, %86, %46, %90, %4
  %114 = phi i32 [ -1, %4 ], [ %33, %90 ], [ -1, %46 ], [ -1, %86 ], [ %95, %94 ], [ -1, %108 ]
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE16SingleCharSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = load i16, i16* %6, align 2
  %10 = trunc i64 %2 to i32
  %11 = trunc i64 %8 to i32
  %12 = sub nsw i32 %10, %11
  %13 = add nsw i32 %12, 1
  %14 = icmp eq i16 %9, 0
  br i1 %14, label %15, label %30

15:                                               ; preds = %4
  %16 = icmp slt i32 %12, %3
  br i1 %16, label %64, label %17

17:                                               ; preds = %15
  %18 = sext i32 %3 to i64
  %19 = sext i32 %12 to i64
  br label %20

20:                                               ; preds = %25, %17
  %21 = phi i64 [ %18, %17 ], [ %26, %25 ]
  %22 = getelementptr inbounds i16, i16* %1, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = add nsw i64 %21, 1
  %27 = icmp slt i64 %21, %19
  br i1 %27, label %20, label %64

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %64

30:                                               ; preds = %4
  %31 = trunc i16 %9 to i8
  %32 = lshr i16 %9, 8
  %33 = trunc i16 %32 to i8
  %34 = icmp ult i8 %31, %33
  %35 = select i1 %34, i8 %33, i8 %31
  %36 = zext i8 %35 to i32
  %37 = ptrtoint i16* %1 to i64
  br label %38

38:                                               ; preds = %59, %30
  %39 = phi i32 [ %3, %30 ], [ %60, %59 ]
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %1, i64 %40
  %42 = bitcast i16* %41 to i8*
  %43 = sub i32 %13, %39
  %44 = sext i32 %43 to i64
  %45 = shl nsw i64 %44, 1
  %46 = tail call i8* @memchr(i8* %42, i32 %36, i64 %45) #22
  %47 = icmp eq i8* %46, null
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = ptrtoint i8* %46 to i64
  %50 = and i64 %49, -2
  %51 = sub i64 %50, %37
  %52 = lshr exact i64 %51, 1
  %53 = trunc i64 %52 to i32
  %54 = shl i64 %51, 31
  %55 = ashr exact i64 %54, 32
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %57, %9
  br i1 %58, label %62, label %59

59:                                               ; preds = %48
  %60 = add nsw i32 %53, 1
  %61 = icmp sgt i32 %12, %53
  br i1 %61, label %38, label %64

62:                                               ; preds = %48
  %63 = trunc i64 %52 to i32
  br label %64

64:                                               ; preds = %38, %59, %25, %62, %15, %28
  %65 = phi i32 [ -1, %15 ], [ %29, %28 ], [ %63, %62 ], [ -1, %25 ], [ -1, %59 ], [ -1, %38 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %108, label %13

13:                                               ; preds = %4
  %14 = load i16, i16* %6, align 2
  %15 = add nsw i32 %11, 1
  %16 = icmp eq i16 %14, 0
  %17 = trunc i16 %14 to i8
  %18 = lshr i16 %14, 8
  %19 = trunc i16 %18 to i8
  %20 = icmp ult i8 %17, %19
  %21 = select i1 %20, i8 %19, i8 %17
  %22 = zext i8 %21 to i32
  %23 = ptrtoint i16* %1 to i64
  %24 = sext i32 %11 to i64
  %25 = getelementptr inbounds i16, i16* %6, i64 1
  %26 = shl i64 %8, 32
  %27 = add i64 %26, -4294967296
  %28 = ashr exact i64 %27, 32
  br i1 %16, label %29, label %61

29:                                               ; preds = %13, %57
  %30 = phi i32 [ %44, %57 ], [ %3, %13 ]
  %31 = sext i32 %30 to i64
  br label %32

32:                                               ; preds = %37, %29
  %33 = phi i64 [ %31, %29 ], [ %38, %37 ]
  %34 = getelementptr inbounds i16, i16* %1, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = add nsw i64 %33, 1
  %39 = icmp slt i64 %33, %24
  br i1 %39, label %32, label %108

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %108, label %43

43:                                               ; preds = %40
  %44 = add nuw nsw i32 %41, 1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i16, i16* %1, i64 %45
  br label %47

47:                                               ; preds = %54, %43
  %48 = phi i64 [ %55, %54 ], [ 0, %43 ]
  %49 = getelementptr inbounds i16, i16* %25, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = getelementptr inbounds i16, i16* %46, i64 %48
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %50, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = add nuw nsw i64 %48, 1
  %56 = icmp slt i64 %55, %28
  br i1 %56, label %47, label %104

57:                                               ; preds = %47
  %58 = icmp sgt i32 %11, %41
  br i1 %58, label %29, label %108

59:                                               ; preds = %94
  %60 = icmp sgt i32 %11, %88
  br i1 %60, label %85, label %108

61:                                               ; preds = %13, %85
  %62 = phi i32 [ %86, %85 ], [ %3, %13 ]
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i16, i16* %1, i64 %63
  %65 = bitcast i16* %64 to i8*
  %66 = sub i32 %15, %62
  %67 = sext i32 %66 to i64
  %68 = shl nsw i64 %67, 1
  %69 = tail call i8* @memchr(i8* %65, i32 %22, i64 %68) #22
  %70 = icmp eq i8* %69, null
  br i1 %70, label %108, label %71

71:                                               ; preds = %61
  %72 = ptrtoint i8* %69 to i64
  %73 = and i64 %72, -2
  %74 = sub i64 %73, %23
  %75 = lshr exact i64 %74, 1
  %76 = trunc i64 %75 to i32
  %77 = shl i64 %74, 31
  %78 = ashr exact i64 %77, 32
  %79 = getelementptr inbounds i16, i16* %1, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = icmp eq i16 %80, %14
  br i1 %81, label %87, label %82

82:                                               ; preds = %71
  %83 = add nsw i32 %76, 1
  %84 = icmp sgt i32 %11, %76
  br i1 %84, label %85, label %108

85:                                               ; preds = %82, %59
  %86 = phi i32 [ %83, %82 ], [ %91, %59 ]
  br label %61

87:                                               ; preds = %71
  %88 = trunc i64 %75 to i32
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %108, label %90

90:                                               ; preds = %87
  %91 = add nuw nsw i32 %88, 1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %1, i64 %92
  br label %94

94:                                               ; preds = %101, %90
  %95 = phi i64 [ %102, %101 ], [ 0, %90 ]
  %96 = getelementptr inbounds i16, i16* %25, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = getelementptr inbounds i16, i16* %93, i64 %95
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %97, %99
  br i1 %100, label %101, label %59

101:                                              ; preds = %94
  %102 = add nuw nsw i64 %95, 1
  %103 = icmp slt i64 %102, %28
  br i1 %103, label %94, label %106

104:                                              ; preds = %54
  %105 = trunc i64 %33 to i32
  br label %108

106:                                              ; preds = %101
  %107 = trunc i64 %75 to i32
  br label %108

108:                                              ; preds = %59, %87, %82, %61, %57, %40, %37, %106, %104, %4
  %109 = phi i32 [ -1, %4 ], [ %105, %104 ], [ %107, %106 ], [ -1, %37 ], [ -1, %40 ], [ -1, %57 ], [ -1, %61 ], [ -1, %82 ], [ -1, %87 ], [ -1, %59 ]
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %288, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i16* %1 to i64
  %18 = sext i32 %11 to i64
  %19 = shl i64 %8, 32
  %20 = ashr exact i64 %19, 32
  br label %21

21:                                               ; preds = %282, %13
  %22 = phi i32 [ %15, %13 ], [ %283, %282 ]
  %23 = phi i32 [ %3, %13 ], [ %284, %282 ]
  %24 = add nsw i32 %22, 1
  %25 = icmp slt i32 %22, 0
  br i1 %25, label %26, label %95

26:                                               ; preds = %21
  %27 = load i16, i16* %6, align 2
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %39

29:                                               ; preds = %26
  %30 = sext i32 %23 to i64
  br label %31

31:                                               ; preds = %36, %29
  %32 = phi i64 [ %30, %29 ], [ %37, %36 ]
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %70, label %36

36:                                               ; preds = %31
  %37 = add nsw i64 %32, 1
  %38 = icmp slt i64 %32, %18
  br i1 %38, label %31, label %288

39:                                               ; preds = %26
  %40 = trunc i16 %27 to i8
  %41 = lshr i16 %27, 8
  %42 = trunc i16 %41 to i8
  %43 = icmp ult i8 %40, %42
  %44 = select i1 %43, i8 %42, i8 %40
  %45 = zext i8 %44 to i32
  br label %46

46:                                               ; preds = %67, %39
  %47 = phi i32 [ %23, %39 ], [ %68, %67 ]
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i16, i16* %1, i64 %48
  %50 = bitcast i16* %49 to i8*
  %51 = sub i32 %16, %47
  %52 = sext i32 %51 to i64
  %53 = shl nsw i64 %52, 1
  %54 = tail call i8* @memchr(i8* %50, i32 %45, i64 %53) #22
  %55 = icmp eq i8* %54, null
  br i1 %55, label %288, label %56

56:                                               ; preds = %46
  %57 = ptrtoint i8* %54 to i64
  %58 = and i64 %57, -2
  %59 = sub i64 %58, %17
  %60 = lshr exact i64 %59, 1
  %61 = trunc i64 %60 to i32
  %62 = shl i64 %59, 31
  %63 = ashr exact i64 %62, 32
  %64 = getelementptr inbounds i16, i16* %1, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = icmp eq i16 %65, %27
  br i1 %66, label %70, label %67

67:                                               ; preds = %56
  %68 = add nsw i32 %61, 1
  %69 = icmp sgt i32 %11, %61
  br i1 %69, label %46, label %288

70:                                               ; preds = %56, %31
  %71 = phi i64 [ %32, %31 ], [ %60, %56 ]
  %72 = trunc i64 %71 to i32
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %288, label %74

74:                                               ; preds = %70
  %75 = shl i64 %71, 32
  %76 = ashr exact i64 %75, 32
  br label %77

77:                                               ; preds = %74, %86
  %78 = phi i64 [ 1, %74 ], [ %87, %86 ]
  %79 = phi i32 [ 1, %74 ], [ %88, %86 ]
  %80 = getelementptr inbounds i16, i16* %6, i64 %78
  %81 = load i16, i16* %80, align 2
  %82 = add nsw i64 %78, %76
  %83 = getelementptr inbounds i16, i16* %1, i64 %82
  %84 = load i16, i16* %83, align 2
  %85 = icmp eq i16 %81, %84
  br i1 %85, label %86, label %90

86:                                               ; preds = %77
  %87 = add nuw nsw i64 %78, 1
  %88 = add nuw nsw i32 %79, 1
  %89 = icmp slt i64 %87, %20
  br i1 %89, label %77, label %92

90:                                               ; preds = %77
  %91 = trunc i64 %78 to i32
  br label %92

92:                                               ; preds = %86, %90
  %93 = phi i32 [ %91, %90 ], [ %88, %86 ]
  %94 = icmp eq i32 %93, %9
  br i1 %94, label %286, label %282

95:                                               ; preds = %21
  %96 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 0
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %235, label %101

101:                                              ; preds = %95
  %102 = add nsw i32 %99, -1
  %103 = insertelement <4 x i32> undef, i32 %102, i32 0
  %104 = shufflevector <4 x i32> %103, <4 x i32> undef, <4 x i32> zeroinitializer
  %105 = insertelement <4 x i32> undef, i32 %102, i32 0
  %106 = shufflevector <4 x i32> %105, <4 x i32> undef, <4 x i32> zeroinitializer
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 0
  %108 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %110, align 4
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 8
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %112, align 4
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 12
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %114, align 4
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 16
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %116, align 4
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 20
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %118, align 4
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 24
  %120 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %120, align 4
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 28
  %122 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %122, align 4
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 32
  %124 = bitcast i32* %123 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %124, align 4
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 36
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %126, align 4
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 40
  %128 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %128, align 4
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 44
  %130 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %130, align 4
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 48
  %132 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %132, align 4
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 52
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %134, align 4
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 56
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %136, align 4
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 60
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %138, align 4
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 64
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %140, align 4
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 68
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %142, align 4
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 72
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %144, align 4
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 76
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %146, align 4
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 80
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %148, align 4
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 84
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %150, align 4
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 88
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %152, align 4
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 92
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %154, align 4
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 96
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %156, align 4
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 100
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %158, align 4
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 104
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %160, align 4
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 108
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %162, align 4
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 112
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %164, align 4
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 116
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %166, align 4
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 120
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %168, align 4
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 124
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %170, align 4
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 128
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %172, align 4
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 132
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %174, align 4
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 136
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %176, align 4
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 140
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %178, align 4
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 144
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %180, align 4
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 148
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %182, align 4
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 152
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %184, align 4
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 156
  %186 = bitcast i32* %185 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %186, align 4
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 160
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %188, align 4
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 164
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %190, align 4
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 168
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %192, align 4
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 172
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %194, align 4
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 176
  %196 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %196, align 4
  %197 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 180
  %198 = bitcast i32* %197 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %198, align 4
  %199 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 184
  %200 = bitcast i32* %199 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %200, align 4
  %201 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 188
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %202, align 4
  %203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 192
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %204, align 4
  %205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 196
  %206 = bitcast i32* %205 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %206, align 4
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 200
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %208, align 4
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 204
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %210, align 4
  %211 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 208
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %212, align 4
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 212
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %214, align 4
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 216
  %216 = bitcast i32* %215 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %216, align 4
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 220
  %218 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %218, align 4
  %219 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 224
  %220 = bitcast i32* %219 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %220, align 4
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 228
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %222, align 4
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 232
  %224 = bitcast i32* %223 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %224, align 4
  %225 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 236
  %226 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %226, align 4
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 240
  %228 = bitcast i32* %227 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %228, align 4
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 244
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %230, align 4
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 248
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %232, align 4
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 252
  %234 = bitcast i32* %233 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %234, align 4
  br label %238

235:                                              ; preds = %95
  %236 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 0
  %237 = bitcast i32* %236 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %237, i8 -1, i64 1024, i1 false) #20
  br label %238

238:                                              ; preds = %101, %235
  %239 = add i32 %9, -1
  %240 = icmp slt i32 %99, %239
  br i1 %240, label %241, label %279

241:                                              ; preds = %238
  %242 = sext i32 %99 to i64
  %243 = sext i32 %239 to i64
  %244 = sub nsw i64 %243, %242
  %245 = xor i64 %242, -1
  %246 = and i64 %244, 1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %256, label %248

248:                                              ; preds = %241
  %249 = load i16*, i16** %5, align 8
  %250 = getelementptr inbounds i16, i16* %249, i64 %242
  %251 = load i16, i16* %250, align 2
  %252 = and i16 %251, 255
  %253 = zext i16 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 %253
  store i32 %99, i32* %254, align 4
  %255 = add nsw i64 %242, 1
  br label %256

256:                                              ; preds = %241, %248
  %257 = phi i64 [ %242, %241 ], [ %255, %248 ]
  %258 = sub nsw i64 0, %243
  %259 = icmp eq i64 %245, %258
  br i1 %259, label %279, label %260

260:                                              ; preds = %256, %260
  %261 = phi i64 [ %277, %260 ], [ %257, %256 ]
  %262 = load i16*, i16** %5, align 8
  %263 = getelementptr inbounds i16, i16* %262, i64 %261
  %264 = load i16, i16* %263, align 2
  %265 = and i16 %264, 255
  %266 = zext i16 %265 to i64
  %267 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 %266
  %268 = trunc i64 %261 to i32
  store i32 %268, i32* %267, align 4
  %269 = add nsw i64 %261, 1
  %270 = load i16*, i16** %5, align 8
  %271 = getelementptr inbounds i16, i16* %270, i64 %269
  %272 = load i16, i16* %271, align 2
  %273 = and i16 %272, 255
  %274 = zext i16 %273 to i64
  %275 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 %274
  %276 = trunc i64 %269 to i32
  store i32 %276, i32* %275, align 4
  %277 = add nsw i64 %261, 2
  %278 = icmp eq i64 %277, %243
  br i1 %278, label %279, label %260

279:                                              ; preds = %256, %260, %238
  %280 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32)** %280, align 8
  %281 = tail call i32 @_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1243"* %0, i16* %1, i64 %2, i32 %23)
  br label %288

282:                                              ; preds = %92
  %283 = add nsw i32 %24, %93
  %284 = add nsw i32 %72, 1
  %285 = icmp sgt i32 %11, %72
  br i1 %285, label %21, label %288

286:                                              ; preds = %92
  %287 = trunc i64 %71 to i32
  br label %288

288:                                              ; preds = %286, %70, %282, %67, %46, %36, %4, %279
  %289 = phi i32 [ %281, %279 ], [ -1, %4 ], [ -1, %36 ], [ -1, %46 ], [ -1, %67 ], [ %287, %286 ], [ -1, %70 ], [ -1, %282 ]
  ret i32 %289
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i16, i16* %6, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = and i16 %16, 255
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %13, %20
  %22 = sub nsw i32 %9, %10
  %23 = add i32 %10, -2
  %24 = icmp sgt i32 %23, -1
  %25 = sub i32 %10, %21
  br i1 %24, label %26, label %70

26:                                               ; preds = %4
  %27 = sub nsw i32 0, %10
  %28 = sext i32 %23 to i64
  br label %29

29:                                               ; preds = %26, %59
  %30 = phi i32 [ %61, %59 ], [ %3, %26 ]
  %31 = phi i32 [ %63, %59 ], [ %27, %26 ]
  %32 = icmp sgt i32 %30, %22
  br i1 %32, label %90, label %33

33:                                               ; preds = %29, %41
  %34 = phi i32 [ %47, %41 ], [ %30, %29 ]
  %35 = phi i32 [ %49, %41 ], [ %31, %29 ]
  %36 = add nsw i32 %34, %13
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, i16* %1, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = icmp eq i16 %16, %39
  br i1 %40, label %68, label %41

41:                                               ; preds = %33
  %42 = and i16 %39, 255
  %43 = zext i16 %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = sub nsw i32 %13, %45
  %47 = add nsw i32 %46, %34
  %48 = add i32 %35, 1
  %49 = sub i32 %48, %46
  %50 = icmp sgt i32 %47, %22
  br i1 %50, label %90, label %33

51:                                               ; preds = %68, %65
  %52 = phi i64 [ %28, %68 ], [ %66, %65 ]
  %53 = getelementptr inbounds i16, i16* %6, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = add nsw i64 %52, %69
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %54, %57
  br i1 %58, label %65, label %59

59:                                               ; preds = %51
  %60 = trunc i64 %52 to i32
  %61 = add nsw i32 %34, %21
  %62 = add i32 %25, %35
  %63 = sub i32 %62, %60
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %87, label %29

65:                                               ; preds = %51
  %66 = add nsw i64 %52, -1
  %67 = icmp sgt i64 %52, 0
  br i1 %67, label %51, label %90

68:                                               ; preds = %33
  %69 = sext i32 %34 to i64
  br label %51

70:                                               ; preds = %4
  %71 = icmp slt i32 %22, %3
  br i1 %71, label %90, label %72

72:                                               ; preds = %70, %79
  %73 = phi i32 [ %85, %79 ], [ %3, %70 ]
  %74 = add nsw i32 %73, %13
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i16, i16* %1, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %16, %77
  br i1 %78, label %90, label %79

79:                                               ; preds = %72
  %80 = and i16 %77, 255
  %81 = zext i16 %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sub nsw i32 %13, %83
  %85 = add nsw i32 %84, %73
  %86 = icmp sgt i32 %85, %22
  br i1 %86, label %90, label %72

87:                                               ; preds = %59
  tail call void @_ZN2v88internal12StringSearchIttE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1243"* %0)
  %88 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32)** %88, align 8
  %89 = tail call i32 @_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1243"* %0, i16* %1, i64 %2, i32 %61)
  br label %90

90:                                               ; preds = %79, %72, %29, %41, %65, %70, %87
  %91 = phi i32 [ %89, %87 ], [ -1, %70 ], [ %34, %65 ], [ -1, %41 ], [ -1, %29 ], [ %73, %72 ], [ -1, %79 ]
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIttE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1243"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !21

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !22

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !23

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i16, i16* %6, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %6, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i16, i16* %6, i64 %129
  %131 = load i16, i16* %130, align 2
  %132 = icmp eq i16 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i16, i16* %6, i64 %153
  %155 = load i16, i16* %154, align 2
  %156 = icmp eq i16 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1243"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1243", %"class.v8::internal::StringSearch.1243"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i16, i16* %6, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %100, label %24

24:                                               ; preds = %4
  %25 = icmp sgt i32 %10, 0
  %26 = and i16 %21, 255
  %27 = zext i16 %26 to i64
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %27
  br i1 %25, label %29, label %85

29:                                               ; preds = %24
  %30 = shl i64 %8, 32
  %31 = ashr exact i64 %30, 32
  br label %32

32:                                               ; preds = %47, %29
  %33 = phi i32 [ %3, %29 ], [ %48, %47 ]
  %34 = add nsw i32 %33, %18
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = icmp eq i16 %21, %37
  br i1 %38, label %83, label %39

39:                                               ; preds = %32
  %40 = and i16 %37, 255
  %41 = zext i16 %40 to i64
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 %18, %43
  %45 = add nsw i32 %44, %33
  %46 = icmp sgt i32 %45, %22
  br i1 %46, label %100, label %47

47:                                               ; preds = %39, %77
  %48 = phi i32 [ %45, %39 ], [ %79, %77 ]
  br label %32

49:                                               ; preds = %83, %81
  %50 = phi i64 [ %31, %83 ], [ %51, %81 ]
  %51 = add i64 %50, -1
  %52 = getelementptr inbounds i16, i16* %6, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = add nsw i64 %51, %84
  %55 = getelementptr inbounds i16, i16* %1, i64 %54
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %53, %56
  br i1 %57, label %81, label %58

58:                                               ; preds = %49
  %59 = trunc i64 %51 to i32
  %60 = icmp sgt i32 %12, %59
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = shl i64 %51, 32
  %63 = add i64 %62, 4294967296
  %64 = ashr exact i64 %63, 32
  %65 = getelementptr inbounds i32, i32* %17, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = and i16 %56, 255
  %68 = zext i16 %67 to i64
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = sub nsw i32 %59, %70
  %72 = icmp sgt i32 %66, %71
  %73 = select i1 %72, i32 %66, i32 %71
  br label %77

74:                                               ; preds = %58
  %75 = load i32, i32* %28, align 4
  %76 = sub nsw i32 %18, %75
  br label %77

77:                                               ; preds = %74, %61
  %78 = phi i32 [ %76, %74 ], [ %73, %61 ]
  %79 = add nsw i32 %78, %33
  %80 = icmp sgt i32 %79, %22
  br i1 %80, label %100, label %47

81:                                               ; preds = %49
  %82 = icmp sgt i64 %51, 0
  br i1 %82, label %49, label %100

83:                                               ; preds = %32
  %84 = sext i32 %33 to i64
  br label %49

85:                                               ; preds = %24, %92
  %86 = phi i32 [ %98, %92 ], [ %3, %24 ]
  %87 = add nsw i32 %86, %18
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i16, i16* %1, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = icmp eq i16 %21, %90
  br i1 %91, label %100, label %92

92:                                               ; preds = %85
  %93 = and i16 %90, 255
  %94 = zext i16 %93 to i64
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = sub nsw i32 %18, %96
  %98 = add nsw i32 %97, %86
  %99 = icmp sgt i32 %98, %22
  br i1 %99, label %100, label %85

100:                                              ; preds = %92, %85, %77, %39, %81, %4
  %101 = phi i32 [ -1, %4 ], [ %33, %81 ], [ -1, %39 ], [ -1, %77 ], [ %86, %85 ], [ -1, %92 ]
  ret i32 %101
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { nounwind }
attributes #21 = { noreturn nounwind }
attributes #22 = { nounwind readonly }
attributes #23 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1073205, i32 2146410443}
!4 = !{!"branch_weights", i32 2146410443, i32 1073205}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !8}
!12 = distinct !{!12, !13, !10}
!13 = !{!"llvm.loop.unroll.runtime.disable"}
!14 = distinct !{!14, !10}
!15 = distinct !{!15, !8}
!16 = distinct !{!16, !13, !10}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !8}
!20 = distinct !{!20, !13, !10}
!21 = distinct !{!21, !10}
!22 = distinct !{!22, !8}
!23 = distinct !{!23, !13, !10}
