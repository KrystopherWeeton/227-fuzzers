; ModuleID = '../../third_party/dav1d/libdav1d/src/intra_edge.c'
source_filename = "../../third_party/dav1d/libdav1d/src/intra_edge.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.EdgeNode = type { i32, [2 x i32], [2 x i32] }
%struct.EdgeTip = type { %struct.EdgeNode, [4 x i32] }
%struct.ModeSelMem = type { [3 x %struct.EdgeBranch*], %struct.EdgeTip* }
%struct.EdgeBranch = type { %struct.EdgeNode, [3 x i32], [3 x i32], [3 x i32], [3 x i32], [4 x i32], [4 x i32], [4 x %struct.EdgeNode*] }

; Function Attrs: nounwind ssp uwtable
define hidden void @dav1d_init_mode_tree(%struct.EdgeNode*, %struct.EdgeTip*, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.ModeSelMem, align 8
  %5 = bitcast %struct.EdgeNode* %0 to %struct.EdgeBranch*
  %6 = bitcast %struct.ModeSelMem* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #3
  %7 = getelementptr inbounds %struct.ModeSelMem, %struct.ModeSelMem* %4, i64 0, i32 0, i64 0
  %8 = getelementptr inbounds %struct.ModeSelMem, %struct.ModeSelMem* %4, i64 0, i32 0, i64 1
  %9 = getelementptr inbounds %struct.ModeSelMem, %struct.ModeSelMem* %4, i64 0, i32 0, i64 2
  %10 = getelementptr inbounds %struct.ModeSelMem, %struct.ModeSelMem* %4, i64 0, i32 1
  %11 = bitcast %struct.ModeSelMem* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %struct.EdgeTip* %1, %struct.EdgeTip** %10, align 8
  %12 = icmp eq i32 %2, 0
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %0, i64 6, i32 2, i64 1
  %15 = bitcast %struct.ModeSelMem* %4 to i32**
  store i32* %14, i32** %15, align 8
  %16 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %0, i64 34
  %17 = bitcast %struct.EdgeNode* %16 to %struct.EdgeBranch*
  %18 = bitcast %struct.EdgeBranch** %8 to %struct.EdgeNode**
  store %struct.EdgeNode* %16, %struct.EdgeNode** %18, align 8
  %19 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %0, i64 142, i32 2, i64 1
  %20 = bitcast i32* %19 to %struct.EdgeBranch*
  %21 = bitcast %struct.EdgeBranch** %9 to i32**
  store i32* %19, i32** %21, align 8
  call fastcc void @init_mode_node(%struct.EdgeBranch* %5, i32 0, %struct.ModeSelMem* nonnull %4, i32 1, i32 0)
  %22 = load %struct.EdgeBranch*, %struct.EdgeBranch** %7, align 8
  %23 = icmp eq %struct.EdgeBranch* %22, %17
  tail call void @llvm.assume(i1 %23)
  %24 = load %struct.EdgeBranch*, %struct.EdgeBranch** %8, align 8
  %25 = icmp eq %struct.EdgeBranch* %24, %20
  tail call void @llvm.assume(i1 %25)
  %26 = load %struct.EdgeBranch*, %struct.EdgeBranch** %9, align 8
  %27 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %0, i64 578
  %28 = bitcast %struct.EdgeNode* %27 to %struct.EdgeBranch*
  %29 = icmp eq %struct.EdgeBranch* %26, %28
  br label %42

30:                                               ; preds = %3
  store %struct.EdgeBranch* null, %struct.EdgeBranch** %7, align 8
  %31 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %0, i64 6, i32 2, i64 1
  %32 = bitcast %struct.EdgeBranch** %8 to i32**
  store i32* %31, i32** %32, align 8
  %33 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %0, i64 34
  %34 = bitcast %struct.EdgeNode* %33 to %struct.EdgeBranch*
  %35 = bitcast %struct.EdgeBranch** %9 to %struct.EdgeNode**
  store %struct.EdgeNode* %33, %struct.EdgeNode** %35, align 8
  call fastcc void @init_mode_node(%struct.EdgeBranch* %5, i32 1, %struct.ModeSelMem* nonnull %4, i32 1, i32 0)
  %36 = load %struct.EdgeBranch*, %struct.EdgeBranch** %8, align 8
  %37 = icmp eq %struct.EdgeBranch* %36, %34
  tail call void @llvm.assume(i1 %37)
  %38 = load %struct.EdgeBranch*, %struct.EdgeBranch** %9, align 8
  %39 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %0, i64 142, i32 2, i64 1
  %40 = bitcast i32* %39 to %struct.EdgeBranch*
  %41 = icmp eq %struct.EdgeBranch* %38, %40
  br label %42

42:                                               ; preds = %30, %13
  %43 = phi i1 [ %41, %30 ], [ %29, %13 ]
  %44 = phi i64 [ 64, %30 ], [ 256, %13 ]
  tail call void @llvm.assume(i1 %43)
  %45 = load %struct.EdgeTip*, %struct.EdgeTip** %10, align 8
  %46 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %1, i64 %44
  %47 = icmp eq %struct.EdgeTip* %45, %46
  tail call void @llvm.assume(i1 %47)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @init_mode_node(%struct.EdgeBranch*, i32, %struct.ModeSelMem* nocapture, i32, i32) unnamed_addr #2 {
  %6 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 0
  %7 = icmp ne i32 %3, 0
  %8 = select i1 %7, i32 7, i32 0
  %9 = icmp ne i32 %4, 0
  %10 = select i1 %9, i32 56, i32 0
  %11 = or i32 %10, %8
  %12 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 0, i32 0
  store i32 %11, i32* %12, align 4
  %13 = icmp eq i32 %1, 4
  %14 = or i32 %8, 56
  %15 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 0, i32 1, i64 0
  store i32 %14, i32* %15, align 4
  br i1 %13, label %16, label %30

16:                                               ; preds = %5
  %17 = and i32 %11, 60
  %18 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 0, i32 1, i64 1
  store i32 %17, i32* %18, align 4
  %19 = or i32 %10, 7
  %20 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 0, i32 2, i64 0
  store i32 %19, i32* %20, align 4
  %21 = and i32 %11, 55
  %22 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 0, i32 2, i64 1
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 1, i32 0
  store i32 63, i32* %23, align 4
  %24 = or i32 %8, 16
  %25 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 1, i32 1, i64 0
  store i32 %24, i32* %25, align 4
  %26 = or i32 %11, 1
  %27 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 1, i32 1, i64 1
  store i32 %26, i32* %27, align 4
  %28 = and i32 %11, 52
  %29 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 1, i32 2, i64 0
  store i32 %28, i32* %29, align 4
  br label %121

30:                                               ; preds = %5
  %31 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 0, i32 1, i64 1
  store i32 %10, i32* %31, align 4
  %32 = or i32 %10, 7
  %33 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 0, i32 2, i64 0
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 0, i32 2, i64 1
  store i32 %8, i32* %34, align 4
  %35 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 3, i32 1, i64 1
  store i32 %14, i32* %35, align 4
  %36 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 3, i32 1, i64 3
  store i32 56, i32* %36, align 4
  %37 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 3, i32 1, i64 2
  store i32 56, i32* %37, align 4
  %38 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 3, i32 1, i64 4
  store i32 %10, i32* %38, align 4
  %39 = icmp eq i32 %1, 3
  br i1 %39, label %40, label %43

40:                                               ; preds = %30
  %41 = and i32 %8, 4
  %42 = or i32 %41, 56
  store i32 %42, i32* %37, align 4
  br label %43

43:                                               ; preds = %40, %30
  %44 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 4, i32 1, i64 0
  store i32 %32, i32* %44, align 4
  %45 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 4, i32 1, i64 2
  store i32 7, i32* %45, align 4
  %46 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 4, i32 1, i64 1
  store i32 7, i32* %46, align 4
  %47 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 4, i32 1, i64 3
  store i32 %8, i32* %47, align 4
  br i1 %39, label %48, label %51

48:                                               ; preds = %43
  %49 = and i32 %10, 48
  %50 = or i32 %49, 7
  store i32 %50, i32* %46, align 4
  br label %51

51:                                               ; preds = %43, %48
  %52 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 2, i32 1, i64 0
  store i32 63, i32* %52, align 4
  %53 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 2, i32 1, i64 1
  store i32 %10, i32* %53, align 4
  %54 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 2, i32 1, i64 2
  store i32 %8, i32* %54, align 4
  %55 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 2, i32 2, i64 1
  store i32 %32, i32* %55, align 8
  %56 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 2, i32 2, i64 2
  store i32 %14, i32* %56, align 4
  %57 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 2, i32 2, i64 3
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 1, i32 0
  store i32 63, i32* %58, align 4
  %59 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 1, i32 1, i64 0
  store i32 %8, i32* %59, align 4
  %60 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 1, i32 1, i64 1
  store i32 %10, i32* %60, align 4
  %61 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 1, i32 2, i64 0
  store i32 %14, i32* %61, align 8
  %62 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 1, i32 2, i64 1
  store i32 %32, i32* %62, align 4
  %63 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %6, i64 1, i32 2, i64 2
  store i32 0, i32* %63, align 8
  %64 = icmp eq i32 %1, 3
  br i1 %64, label %66, label %121

65:                                               ; preds = %121, %66
  ret void

66:                                               ; preds = %51
  %67 = getelementptr inbounds %struct.ModeSelMem, %struct.ModeSelMem* %2, i64 0, i32 1
  %68 = load %struct.EdgeTip*, %struct.EdgeTip** %67, align 8
  %69 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %68, i64 1
  store %struct.EdgeTip* %69, %struct.EdgeTip** %67, align 8
  %70 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %68, i64 0, i32 0
  %71 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 7, i64 0
  store %struct.EdgeNode* %70, %struct.EdgeNode** %71, align 8
  %72 = bitcast %struct.EdgeTip* %68 to <4 x i32>*
  store <4 x i32> <i32 63, i32 63, i32 60, i32 63>, <4 x i32>* %72, align 4
  %73 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %68, i64 0, i32 0, i32 2, i64 1
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 55, i32 63, i32 23, i32 63>, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %70, i64 1, i32 2, i64 0
  store i32 52, i32* %75, align 4
  %76 = load %struct.EdgeTip*, %struct.EdgeTip** %67, align 8
  %77 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %76, i64 1
  store %struct.EdgeTip* %77, %struct.EdgeTip** %67, align 8
  %78 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %76, i64 0, i32 0
  %79 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 7, i64 1
  store %struct.EdgeNode* %78, %struct.EdgeNode** %79, align 8
  %80 = select i1 %7, i32 7, i32 0
  %81 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %76, i64 0, i32 0, i32 0
  store i32 %80, i32* %81, align 4
  %82 = or i32 %80, 56
  %83 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %76, i64 0, i32 0, i32 1, i64 0
  store i32 %82, i32* %83, align 4
  %84 = and i32 %80, 4
  %85 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %76, i64 0, i32 0, i32 1, i64 1
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %76, i64 0, i32 0, i32 2, i64 0
  store i32 7, i32* %86, align 4
  %87 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %76, i64 0, i32 0, i32 2, i64 1
  store i32 %80, i32* %87, align 4
  %88 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %78, i64 1, i32 0
  store i32 63, i32* %88, align 4
  %89 = or i32 %80, 16
  %90 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %78, i64 1, i32 1, i64 0
  store i32 %89, i32* %90, align 4
  %91 = or i32 %80, 1
  %92 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %78, i64 1, i32 1, i64 1
  store i32 %91, i32* %92, align 4
  %93 = and i32 %80, 4
  %94 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %78, i64 1, i32 2, i64 0
  store i32 %93, i32* %94, align 4
  %95 = load %struct.EdgeTip*, %struct.EdgeTip** %67, align 8
  %96 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %95, i64 1
  store %struct.EdgeTip* %96, %struct.EdgeTip** %67, align 8
  %97 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %95, i64 0, i32 0
  %98 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 7, i64 2
  store %struct.EdgeNode* %97, %struct.EdgeNode** %98, align 8
  %99 = or i32 %10, 7
  %100 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %95, i64 0, i32 0, i32 0
  store i32 %99, i32* %100, align 4
  %101 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %95, i64 0, i32 0, i32 1, i64 0
  store i32 63, i32* %101, align 4
  %102 = or i32 %10, 4
  %103 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %95, i64 0, i32 0, i32 1, i64 1
  store i32 %102, i32* %103, align 4
  %104 = or i32 %10, 7
  %105 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %95, i64 0, i32 0, i32 2, i64 0
  store i32 %104, i32* %105, align 4
  %106 = and i32 %99, 55
  %107 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %95, i64 0, i32 0, i32 2, i64 1
  store i32 %106, i32* %107, align 4
  %108 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %97, i64 1, i32 0
  store i32 63, i32* %108, align 4
  %109 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %97, i64 1, i32 1, i64 0
  store i32 23, i32* %109, align 4
  %110 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %97, i64 1, i32 1, i64 1
  store i32 %99, i32* %110, align 4
  %111 = and i32 %99, 52
  %112 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %97, i64 1, i32 2, i64 0
  store i32 %111, i32* %112, align 4
  %113 = load %struct.EdgeTip*, %struct.EdgeTip** %67, align 8
  %114 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %113, i64 1
  store %struct.EdgeTip* %114, %struct.EdgeTip** %67, align 8
  %115 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %113, i64 0, i32 0
  %116 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 7, i64 3
  store %struct.EdgeNode* %115, %struct.EdgeNode** %116, align 8
  %117 = bitcast %struct.EdgeTip* %113 to <4 x i32>*
  store <4 x i32> <i32 0, i32 56, i32 0, i32 7>, <4 x i32>* %117, align 4
  %118 = getelementptr inbounds %struct.EdgeTip, %struct.EdgeTip* %113, i64 0, i32 0, i32 2, i64 1
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> <i32 0, i32 63, i32 16, i32 1>, <4 x i32>* %119, align 4
  %120 = getelementptr inbounds %struct.EdgeNode, %struct.EdgeNode* %115, i64 1, i32 2, i64 0
  store i32 0, i32* %120, align 4
  br label %65

121:                                              ; preds = %16, %51
  %122 = zext i32 %1 to i64
  %123 = getelementptr inbounds %struct.ModeSelMem, %struct.ModeSelMem* %2, i64 0, i32 0, i64 %122
  %124 = add i32 %1, 1
  %125 = load %struct.EdgeBranch*, %struct.EdgeBranch** %123, align 8
  %126 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %125, i64 1
  store %struct.EdgeBranch* %126, %struct.EdgeBranch** %123, align 8
  %127 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %125, i64 0, i32 0
  %128 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 7, i64 0
  store %struct.EdgeNode* %127, %struct.EdgeNode** %128, align 8
  tail call fastcc void @init_mode_node(%struct.EdgeBranch* %125, i32 %124, %struct.ModeSelMem* %2, i32 1, i32 1)
  %129 = load %struct.EdgeBranch*, %struct.EdgeBranch** %123, align 8
  %130 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %129, i64 1
  store %struct.EdgeBranch* %130, %struct.EdgeBranch** %123, align 8
  %131 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %129, i64 0, i32 0
  %132 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 7, i64 1
  store %struct.EdgeNode* %131, %struct.EdgeNode** %132, align 8
  %133 = zext i1 %7 to i32
  tail call fastcc void @init_mode_node(%struct.EdgeBranch* %129, i32 %124, %struct.ModeSelMem* %2, i32 %133, i32 0)
  %134 = load %struct.EdgeBranch*, %struct.EdgeBranch** %123, align 8
  %135 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %134, i64 1
  store %struct.EdgeBranch* %135, %struct.EdgeBranch** %123, align 8
  %136 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %134, i64 0, i32 0
  %137 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 7, i64 2
  store %struct.EdgeNode* %136, %struct.EdgeNode** %137, align 8
  %138 = zext i1 %9 to i32
  tail call fastcc void @init_mode_node(%struct.EdgeBranch* %134, i32 %124, %struct.ModeSelMem* %2, i32 1, i32 %138)
  %139 = load %struct.EdgeBranch*, %struct.EdgeBranch** %123, align 8
  %140 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %139, i64 1
  store %struct.EdgeBranch* %140, %struct.EdgeBranch** %123, align 8
  %141 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %139, i64 0, i32 0
  %142 = getelementptr inbounds %struct.EdgeBranch, %struct.EdgeBranch* %0, i64 0, i32 7, i64 3
  store %struct.EdgeNode* %141, %struct.EdgeNode** %142, align 8
  tail call fastcc void @init_mode_node(%struct.EdgeBranch* %139, i32 %124, %struct.ModeSelMem* %2, i32 0, i32 0)
  br label %65
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.assume(i1) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
