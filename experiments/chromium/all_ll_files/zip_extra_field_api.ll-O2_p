; ModuleID = '../../third_party/libzip/src/lib/zip_extra_field_api.c'
source_filename = "../../third_party/libzip/src/lib/zip_extra_field_api.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }
%struct.zip_error = type { i32, i32, i8* }
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque

@zip_file_extra_field_get.empty = internal constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zip_file_extra_field_delete(%struct.zip*, i64, i16 zeroext, i32) local_unnamed_addr #0 {
  %5 = and i32 %3, 768
  switch i32 %5, label %12 [
    i32 0, label %6
    i32 768, label %8
  ]

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %7, i32 18, i32 0) #2
  br label %33

8:                                                ; preds = %4
  %9 = icmp eq i16 %2, -1
  br i1 %9, label %12, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %11, i32 18, i32 0) #2
  br label %33

12:                                               ; preds = %4, %8
  %13 = tail call %struct.zip_dirent* @_zip_get_dirent(%struct.zip* %0, i64 %1, i32 0, %struct.zip_error* null) #2
  %14 = icmp eq %struct.zip_dirent* %13, null
  br i1 %14, label %33, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %21, i32 25, i32 0) #2
  br label %33

22:                                               ; preds = %15
  %23 = tail call i32 @_zip_file_extra_field_prepare_for_change(%struct.zip* %0, i64 %1)
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 11
  %27 = load %struct.zip_entry*, %struct.zip_entry** %26, align 8
  %28 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %27, i64 %1, i32 1
  %29 = load %struct.zip_dirent*, %struct.zip_dirent** %28, align 8
  %30 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %29, i64 0, i32 13
  %31 = load %struct.zip_extra_field*, %struct.zip_extra_field** %30, align 8
  %32 = tail call %struct.zip_extra_field* @_zip_ef_delete_by_id(%struct.zip_extra_field* %31, i16 zeroext -1, i16 zeroext %2, i32 %3) #2
  store %struct.zip_extra_field* %32, %struct.zip_extra_field** %30, align 8
  br label %33

33:                                               ; preds = %22, %12, %25, %20, %10, %6
  %34 = phi i32 [ -1, %6 ], [ -1, %10 ], [ -1, %20 ], [ 0, %25 ], [ -1, %12 ], [ -1, %22 ]
  ret i32 %34
}

declare void @zip_error_set(%struct.zip_error*, i32, i32) local_unnamed_addr #1

declare %struct.zip_dirent* @_zip_get_dirent(%struct.zip*, i64, i32, %struct.zip_error*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_zip_file_extra_field_prepare_for_change(%struct.zip*, i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 9
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %7, i32 18, i32 0) #2
  br label %58

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 11
  %10 = load %struct.zip_entry*, %struct.zip_entry** %9, align 8
  %11 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %10, i64 %1, i32 1
  %12 = load %struct.zip_dirent*, %struct.zip_dirent** %11, align 8
  %13 = icmp eq %struct.zip_dirent* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %12, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %58

19:                                               ; preds = %14, %8
  %20 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %10, i64 %1, i32 0
  %21 = load %struct.zip_dirent*, %struct.zip_dirent** %20, align 8
  %22 = icmp eq %struct.zip_dirent* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = tail call i32 @_zip_read_local_ef(%struct.zip* %0, i64 %1) #2
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %58, label %26

26:                                               ; preds = %23
  %27 = load %struct.zip_dirent*, %struct.zip_dirent** %11, align 8
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi %struct.zip_dirent* [ %27, %26 ], [ %12, %19 ]
  %30 = icmp eq %struct.zip_dirent* %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %28
  %32 = load %struct.zip_dirent*, %struct.zip_dirent** %20, align 8
  %33 = tail call %struct.zip_dirent* @_zip_dirent_clone(%struct.zip_dirent* %32) #2
  store %struct.zip_dirent* %33, %struct.zip_dirent** %11, align 8
  %34 = icmp eq %struct.zip_dirent* %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %36, i32 14, i32 0) #2
  br label %58

37:                                               ; preds = %31, %28
  %38 = phi %struct.zip_dirent* [ %33, %31 ], [ %29, %28 ]
  %39 = load %struct.zip_dirent*, %struct.zip_dirent** %20, align 8
  %40 = icmp eq %struct.zip_dirent* %39, null
  br i1 %40, label %53, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %39, i64 0, i32 13
  %43 = load %struct.zip_extra_field*, %struct.zip_extra_field** %42, align 8
  %44 = icmp eq %struct.zip_extra_field* %43, null
  br i1 %44, label %53, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  %47 = tail call %struct.zip_extra_field* @_zip_ef_clone(%struct.zip_extra_field* nonnull %43, %struct.zip_error* %46) #2
  %48 = load %struct.zip_dirent*, %struct.zip_dirent** %11, align 8
  %49 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %48, i64 0, i32 13
  store %struct.zip_extra_field* %47, %struct.zip_extra_field** %49, align 8
  %50 = icmp eq %struct.zip_extra_field* %47, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %45
  %52 = load %struct.zip_dirent*, %struct.zip_dirent** %11, align 8
  br label %53

53:                                               ; preds = %51, %41, %37
  %54 = phi %struct.zip_dirent* [ %52, %51 ], [ %38, %41 ], [ %38, %37 ]
  %55 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 8
  store i32 %57, i32* %55, align 8
  br label %58

58:                                               ; preds = %45, %23, %14, %53, %35, %6
  %59 = phi i32 [ -1, %6 ], [ -1, %35 ], [ 0, %53 ], [ 0, %14 ], [ -1, %23 ], [ -1, %45 ]
  ret i32 %59
}

declare %struct.zip_extra_field* @_zip_ef_delete_by_id(%struct.zip_extra_field*, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zip_file_extra_field_delete_by_id(%struct.zip*, i64, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #0 {
  %6 = and i32 %4, 768
  switch i32 %6, label %13 [
    i32 0, label %7
    i32 768, label %9
  ]

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %8, i32 18, i32 0) #2
  br label %34

9:                                                ; preds = %5
  %10 = icmp eq i16 %3, -1
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %12, i32 18, i32 0) #2
  br label %34

13:                                               ; preds = %5, %9
  %14 = tail call %struct.zip_dirent* @_zip_get_dirent(%struct.zip* %0, i64 %1, i32 0, %struct.zip_error* null) #2
  %15 = icmp eq %struct.zip_dirent* %14, null
  br i1 %15, label %34, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %22, i32 25, i32 0) #2
  br label %34

23:                                               ; preds = %16
  %24 = tail call i32 @_zip_file_extra_field_prepare_for_change(%struct.zip* %0, i64 %1)
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 11
  %28 = load %struct.zip_entry*, %struct.zip_entry** %27, align 8
  %29 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %28, i64 %1, i32 1
  %30 = load %struct.zip_dirent*, %struct.zip_dirent** %29, align 8
  %31 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %30, i64 0, i32 13
  %32 = load %struct.zip_extra_field*, %struct.zip_extra_field** %31, align 8
  %33 = tail call %struct.zip_extra_field* @_zip_ef_delete_by_id(%struct.zip_extra_field* %32, i16 zeroext %2, i16 zeroext %3, i32 %4) #2
  store %struct.zip_extra_field* %33, %struct.zip_extra_field** %31, align 8
  br label %34

34:                                               ; preds = %23, %13, %26, %21, %11, %7
  %35 = phi i32 [ -1, %7 ], [ -1, %11 ], [ -1, %21 ], [ 0, %26 ], [ -1, %13 ], [ -1, %23 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @zip_file_extra_field_get(%struct.zip*, i64, i16 zeroext, i16*, i16*, i32) local_unnamed_addr #0 {
  %7 = and i32 %5, 768
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  br i1 %8, label %10, label %11

10:                                               ; preds = %6
  tail call void @zip_error_set(%struct.zip_error* %9, i32 18, i32 0) #2
  br label %60

11:                                               ; preds = %6
  %12 = tail call %struct.zip_dirent* @_zip_get_dirent(%struct.zip* %0, i64 %1, i32 %5, %struct.zip_error* %9) #2
  %13 = icmp eq %struct.zip_dirent* %12, null
  br i1 %13, label %60, label %14

14:                                               ; preds = %11
  %15 = and i32 %5, 256
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = tail call i32 @_zip_read_local_ef(%struct.zip* %0, i64 %1) #2
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %60, label %20

20:                                               ; preds = %14, %17
  %21 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %12, i64 0, i32 13
  %22 = load %struct.zip_extra_field*, %struct.zip_extra_field** %21, align 8
  %23 = icmp eq %struct.zip_extra_field* %22, null
  br i1 %23, label %59, label %24

24:                                               ; preds = %20
  %25 = zext i16 %2 to i32
  br label %26

26:                                               ; preds = %24, %54
  %27 = phi %struct.zip_extra_field* [ %22, %24 ], [ %57, %54 ]
  %28 = phi i32 [ 0, %24 ], [ %55, %54 ]
  %29 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %27, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %7, %30
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %54, label %33

33:                                               ; preds = %26
  %34 = icmp slt i32 %28, %25
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = add nsw i32 %28, 1
  br label %54

37:                                               ; preds = %33
  %38 = icmp eq i16* %3, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %27, i64 0, i32 2
  %41 = load i16, i16* %40, align 4
  store i16 %41, i16* %3, align 2
  br label %42

42:                                               ; preds = %37, %39
  %43 = icmp eq i16* %4, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %27, i64 0, i32 3
  %46 = load i16, i16* %45, align 2
  store i16 %46, i16* %4, align 2
  br label %47

47:                                               ; preds = %42, %44
  %48 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %27, i64 0, i32 3
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %60, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %27, i64 0, i32 4
  %53 = load i8*, i8** %52, align 8
  br label %60

54:                                               ; preds = %26, %35
  %55 = phi i32 [ %36, %35 ], [ %28, %26 ]
  %56 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %27, i64 0, i32 0
  %57 = load %struct.zip_extra_field*, %struct.zip_extra_field** %56, align 8
  %58 = icmp eq %struct.zip_extra_field* %57, null
  br i1 %58, label %59, label %26

59:                                               ; preds = %54, %20
  tail call void @zip_error_set(%struct.zip_error* %9, i32 9, i32 0) #2
  br label %60

60:                                               ; preds = %47, %17, %11, %59, %51, %10
  %61 = phi i8* [ null, %10 ], [ %53, %51 ], [ null, %59 ], [ null, %11 ], [ null, %17 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @zip_file_extra_field_get.empty, i64 0, i64 0), %47 ]
  ret i8* %61
}

declare i32 @_zip_read_local_ef(%struct.zip*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @zip_file_extra_field_get_by_id(%struct.zip*, i64, i16 zeroext, i16 zeroext, i16*, i32) local_unnamed_addr #0 {
  %7 = and i32 %5, 768
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  br i1 %8, label %10, label %11

10:                                               ; preds = %6
  tail call void @zip_error_set(%struct.zip_error* %9, i32 18, i32 0) #2
  br label %24

11:                                               ; preds = %6
  %12 = tail call %struct.zip_dirent* @_zip_get_dirent(%struct.zip* %0, i64 %1, i32 %5, %struct.zip_error* %9) #2
  %13 = icmp eq %struct.zip_dirent* %12, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %11
  %15 = and i32 %5, 256
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = tail call i32 @_zip_read_local_ef(%struct.zip* %0, i64 %1) #2
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %14, %17
  %21 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %12, i64 0, i32 13
  %22 = load %struct.zip_extra_field*, %struct.zip_extra_field** %21, align 8
  %23 = tail call i8* @_zip_ef_get_by_id(%struct.zip_extra_field* %22, i16* %4, i16 zeroext %2, i16 zeroext %3, i32 %5, %struct.zip_error* %9) #2
  br label %24

24:                                               ; preds = %17, %11, %20, %10
  %25 = phi i8* [ null, %10 ], [ %23, %20 ], [ null, %11 ], [ null, %17 ]
  ret i8* %25
}

declare i8* @_zip_ef_get_by_id(%struct.zip_extra_field*, i16*, i16 zeroext, i16 zeroext, i32, %struct.zip_error*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @zip_file_extra_fields_count(%struct.zip*, i64, i32) local_unnamed_addr #0 {
  %4 = and i32 %2, 768
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  br i1 %5, label %7, label %8

7:                                                ; preds = %3
  tail call void @zip_error_set(%struct.zip_error* %6, i32 18, i32 0) #2
  br label %33

8:                                                ; preds = %3
  %9 = tail call %struct.zip_dirent* @_zip_get_dirent(%struct.zip* %0, i64 %1, i32 %2, %struct.zip_error* %6) #2
  %10 = icmp eq %struct.zip_dirent* %9, null
  br i1 %10, label %33, label %11

11:                                               ; preds = %8
  %12 = and i32 %2, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = tail call i32 @_zip_read_local_ef(%struct.zip* %0, i64 %1) #2
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %11, %14
  %18 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %9, i64 0, i32 13
  %19 = load %struct.zip_extra_field*, %struct.zip_extra_field** %18, align 8
  %20 = icmp eq %struct.zip_extra_field* %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %17, %21
  %22 = phi %struct.zip_extra_field* [ %31, %21 ], [ %19, %17 ]
  %23 = phi i16 [ %29, %21 ], [ 0, %17 ]
  %24 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %22, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %4, %25
  %27 = icmp ne i32 %26, 0
  %28 = zext i1 %27 to i16
  %29 = add i16 %23, %28
  %30 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %22, i64 0, i32 0
  %31 = load %struct.zip_extra_field*, %struct.zip_extra_field** %30, align 8
  %32 = icmp eq %struct.zip_extra_field* %31, null
  br i1 %32, label %33, label %21

33:                                               ; preds = %21, %17, %14, %8, %7
  %34 = phi i16 [ -1, %7 ], [ -1, %8 ], [ -1, %14 ], [ 0, %17 ], [ %29, %21 ]
  ret i16 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @zip_file_extra_fields_count_by_id(%struct.zip*, i64, i16 zeroext, i32) local_unnamed_addr #0 {
  %5 = and i32 %3, 768
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  br i1 %6, label %8, label %9

8:                                                ; preds = %4
  tail call void @zip_error_set(%struct.zip_error* %7, i32 18, i32 0) #2
  br label %40

9:                                                ; preds = %4
  %10 = tail call %struct.zip_dirent* @_zip_get_dirent(%struct.zip* %0, i64 %1, i32 %3, %struct.zip_error* %7) #2
  %11 = icmp eq %struct.zip_dirent* %10, null
  br i1 %11, label %40, label %12

12:                                               ; preds = %9
  %13 = and i32 %3, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = tail call i32 @_zip_read_local_ef(%struct.zip* %0, i64 %1) #2
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %40, label %18

18:                                               ; preds = %12, %15
  %19 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %10, i64 0, i32 13
  %20 = load %struct.zip_extra_field*, %struct.zip_extra_field** %19, align 8
  %21 = icmp eq %struct.zip_extra_field* %20, null
  br i1 %21, label %40, label %22

22:                                               ; preds = %18, %35
  %23 = phi %struct.zip_extra_field* [ %38, %35 ], [ %20, %18 ]
  %24 = phi i16 [ %36, %35 ], [ 0, %18 ]
  %25 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %23, i64 0, i32 2
  %26 = load i16, i16* %25, align 4
  %27 = icmp eq i16 %26, %2
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %23, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %5, %30
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i16
  %34 = add i16 %24, %33
  br label %35

35:                                               ; preds = %28, %22
  %36 = phi i16 [ %24, %22 ], [ %34, %28 ]
  %37 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %23, i64 0, i32 0
  %38 = load %struct.zip_extra_field*, %struct.zip_extra_field** %37, align 8
  %39 = icmp eq %struct.zip_extra_field* %38, null
  br i1 %39, label %40, label %22

40:                                               ; preds = %35, %18, %15, %9, %8
  %41 = phi i16 [ -1, %8 ], [ -1, %9 ], [ -1, %15 ], [ 0, %18 ], [ %36, %35 ]
  ret i16 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zip_file_extra_field_set(%struct.zip*, i64, i16 zeroext, i16 zeroext, i8*, i16 zeroext, i32) local_unnamed_addr #0 {
  %8 = and i32 %6, 768
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %11, i32 18, i32 0) #2
  br label %137

12:                                               ; preds = %7
  %13 = tail call %struct.zip_dirent* @_zip_get_dirent(%struct.zip* %0, i64 %1, i32 0, %struct.zip_error* null) #2
  %14 = icmp eq %struct.zip_dirent* %13, null
  br i1 %14, label %137, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %21, i32 25, i32 0) #2
  br label %137

22:                                               ; preds = %15
  switch i16 %2, label %25 [
    i16 25461, label %23
    i16 28789, label %23
    i16 -26367, label %23
    i16 1, label %23
  ]

23:                                               ; preds = %22, %22, %22, %22
  %24 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %24, i32 18, i32 0) #2
  br label %137

25:                                               ; preds = %22
  %26 = tail call i32 @_zip_file_extra_field_prepare_for_change(%struct.zip* %0, i64 %1)
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %137, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 11
  %30 = load %struct.zip_entry*, %struct.zip_entry** %29, align 8
  %31 = getelementptr inbounds %struct.zip_entry, %struct.zip_entry* %30, i64 %1, i32 1
  %32 = load %struct.zip_dirent*, %struct.zip_dirent** %31, align 8
  %33 = getelementptr inbounds %struct.zip_dirent, %struct.zip_dirent* %32, i64 0, i32 13
  %34 = zext i16 %3 to i32
  %35 = load %struct.zip_extra_field*, %struct.zip_extra_field** %33, align 8
  %36 = icmp eq %struct.zip_extra_field* %35, null
  br i1 %36, label %58, label %37

37:                                               ; preds = %28, %53
  %38 = phi %struct.zip_extra_field* [ %56, %53 ], [ %35, %28 ]
  %39 = phi i32 [ %54, %53 ], [ 0, %28 ]
  %40 = phi %struct.zip_extra_field* [ %38, %53 ], [ null, %28 ]
  %41 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %38, i64 0, i32 2
  %42 = load i16, i16* %41, align 4
  %43 = icmp eq i16 %42, %2
  br i1 %43, label %44, label %53

44:                                               ; preds = %37
  %45 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %38, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %8, %46
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %44
  %50 = icmp eq i32 %39, %34
  br i1 %50, label %66, label %51

51:                                               ; preds = %49
  %52 = add nsw i32 %39, 1
  br label %53

53:                                               ; preds = %44, %51, %37
  %54 = phi i32 [ %52, %51 ], [ %39, %44 ], [ %39, %37 ]
  %55 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %38, i64 0, i32 0
  %56 = load %struct.zip_extra_field*, %struct.zip_extra_field** %55, align 8
  %57 = icmp eq %struct.zip_extra_field* %56, null
  br i1 %57, label %58, label %37

58:                                               ; preds = %53, %28
  %59 = phi %struct.zip_extra_field* [ null, %28 ], [ %38, %53 ]
  %60 = phi i32 [ 0, %28 ], [ %54, %53 ]
  %61 = icmp sge i32 %60, %34
  %62 = icmp eq i16 %3, -1
  %63 = or i1 %62, %61
  br i1 %63, label %66, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %65, i32 18, i32 0) #2
  br label %137

66:                                               ; preds = %49, %58
  %67 = phi i32 [ 0, %58 ], [ 1, %49 ]
  %68 = phi %struct.zip_extra_field* [ null, %58 ], [ %38, %49 ]
  %69 = phi %struct.zip_extra_field* [ %59, %58 ], [ %40, %49 ]
  %70 = and i32 %6, 256
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %66
  %73 = tail call zeroext i16 @_zip_ef_size(%struct.zip_extra_field* %35, i32 256) #2
  %74 = zext i16 %73 to i32
  br label %75

75:                                               ; preds = %66, %72
  %76 = phi i32 [ %74, %72 ], [ 0, %66 ]
  %77 = and i32 %6, 512
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %75
  %80 = load %struct.zip_extra_field*, %struct.zip_extra_field** %33, align 8
  %81 = tail call zeroext i16 @_zip_ef_size(%struct.zip_extra_field* %80, i32 512) #2
  %82 = zext i16 %81 to i32
  br label %83

83:                                               ; preds = %75, %79
  %84 = phi i32 [ %82, %79 ], [ 0, %75 ]
  %85 = icmp ugt i32 %76, %84
  %86 = select i1 %85, i32 %76, i32 %84
  %87 = icmp ne i32 %67, 0
  br i1 %87, label %88, label %94

88:                                               ; preds = %83
  %89 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %68, i64 0, i32 3
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add nsw i32 %86, -4
  %93 = sub nsw i32 %92, %91
  br label %94

94:                                               ; preds = %88, %83
  %95 = phi i32 [ %93, %88 ], [ %86, %83 ]
  %96 = zext i16 %5 to i32
  %97 = add nuw nsw i32 %96, 4
  %98 = add nsw i32 %97, %95
  %99 = icmp sgt i32 %98, 65535
  br i1 %99, label %100, label %102

100:                                              ; preds = %94
  %101 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %101, i32 18, i32 0) #2
  br label %137

102:                                              ; preds = %94
  %103 = tail call %struct.zip_extra_field* @_zip_ef_new(i16 zeroext %2, i16 zeroext %5, i8* %4, i32 %6) #2
  %104 = icmp eq %struct.zip_extra_field* %103, null
  br i1 %104, label %105, label %107

105:                                              ; preds = %102
  %106 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %106, i32 14, i32 0) #2
  br label %137

107:                                              ; preds = %102
  br i1 %87, label %108, label %129

108:                                              ; preds = %107
  %109 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %68, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 768
  %112 = icmp eq i32 %111, %8
  br i1 %112, label %113, label %122

113:                                              ; preds = %108
  %114 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %68, i64 0, i32 0
  %115 = bitcast %struct.zip_extra_field* %68 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %struct.zip_extra_field* %103 to i64*
  store i64 %116, i64* %117, align 8
  store %struct.zip_extra_field* null, %struct.zip_extra_field** %114, align 8
  tail call void @_zip_ef_free(%struct.zip_extra_field* %68) #2
  %118 = icmp eq %struct.zip_extra_field* %69, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %69, i64 0, i32 0
  store %struct.zip_extra_field* %103, %struct.zip_extra_field** %120, align 8
  br label %137

121:                                              ; preds = %113
  store %struct.zip_extra_field* %103, %struct.zip_extra_field** %33, align 8
  br label %137

122:                                              ; preds = %108
  %123 = xor i32 %8, -1
  %124 = and i32 %110, %123
  store i32 %124, i32* %109, align 8
  %125 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %68, i64 0, i32 0
  %126 = bitcast %struct.zip_extra_field* %68 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %struct.zip_extra_field* %103 to i64*
  store i64 %127, i64* %128, align 8
  store %struct.zip_extra_field* %103, %struct.zip_extra_field** %125, align 8
  br label %137

129:                                              ; preds = %107
  %130 = icmp eq %struct.zip_extra_field* %69, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %129
  %132 = getelementptr inbounds %struct.zip_extra_field, %struct.zip_extra_field* %69, i64 0, i32 0
  %133 = bitcast %struct.zip_extra_field* %69 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %struct.zip_extra_field* %103 to i64*
  store i64 %134, i64* %135, align 8
  store %struct.zip_extra_field* %103, %struct.zip_extra_field** %132, align 8
  br label %137

136:                                              ; preds = %129
  store %struct.zip_extra_field* %103, %struct.zip_extra_field** %33, align 8
  br label %137

137:                                              ; preds = %119, %121, %122, %136, %131, %25, %12, %105, %100, %64, %23, %20, %10
  %138 = phi i32 [ -1, %10 ], [ -1, %20 ], [ -1, %23 ], [ -1, %64 ], [ -1, %100 ], [ -1, %105 ], [ -1, %12 ], [ -1, %25 ], [ 0, %131 ], [ 0, %136 ], [ 0, %122 ], [ 0, %121 ], [ 0, %119 ]
  ret i32 %138
}

declare zeroext i16 @_zip_ef_size(%struct.zip_extra_field*, i32) local_unnamed_addr #1

declare %struct.zip_extra_field* @_zip_ef_new(i16 zeroext, i16 zeroext, i8*, i32) local_unnamed_addr #1

declare void @_zip_ef_free(%struct.zip_extra_field*) local_unnamed_addr #1

declare %struct.zip_dirent* @_zip_dirent_clone(%struct.zip_dirent*) local_unnamed_addr #1

declare %struct.zip_extra_field* @_zip_ef_clone(%struct.zip_extra_field*, %struct.zip_error*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
