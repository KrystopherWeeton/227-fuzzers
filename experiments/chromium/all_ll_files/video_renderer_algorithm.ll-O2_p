; ModuleID = '../../media/filters/video_renderer_algorithm.cc'
source_filename = "../../media/filters/video_renderer_algorithm.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.media::VideoRendererAlgorithm::ReadyFrame" = type { %class.scoped_refptr, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i32, i32, i32 }
%class.scoped_refptr = type { %"class.media::VideoFrame"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.media::VideoFrame" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.media::VideoFrameLayout", %class.scoped_refptr, i32, %"class.gfx::Rect", %"class.gfx::Size", [4 x i8*], [4 x %"struct.gpu::MailboxHolder"], %"class.base::OnceCallback", %"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.std::__1::unique_ptr", %class.scoped_refptr.7, %"class.std::__1::vector.8", %"class.base::TimeDelta", %"class.base::Lock", %"struct.gpu::SyncToken", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::ColorSpace", %"class.absl::optional.51", [4 x i8], %"class.absl::optional.56", %"class.std::__1::unique_ptr.61" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.media::VideoFrameLayout" = type { i32, %"class.gfx::Size", %"class.std::__1::vector", i8, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"*, %"class.std::__1::__compressed_pair" }
%"struct.media::ColorPlaneLayout" = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.media::ColorPlaneLayout"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.3", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type opaque
%class.scoped_refptr.7 = type { %"class.media::VideoFrame::DmabufHolder"* }
%"class.media::VideoFrame::DmabufHolder" = type opaque
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.base::OnceCallback.10"*, %"class.base::OnceCallback.10"*, %"class.std::__1::__compressed_pair.11" }
%"class.base::OnceCallback.10" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::OnceCallback.10"* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.16", %"class.absl::optional.21", %"class.absl::optional.26", i8, %"class.absl::optional.31", %"class.absl::optional.36", i8, %"class.absl::optional", i8, [3 x i8], %"class.absl::optional.41", i8, i8, i8, i8, i32, %"class.absl::optional.46", i8, %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.31", %"class.absl::optional.36", %"class.absl::optional", %"class.absl::optional.31", %"class.absl::optional.16" }
%"class.absl::optional.21" = type { %"class.absl::optional_internal::optional_data.22" }
%"class.absl::optional_internal::optional_data.22" = type { %"class.absl::optional_internal::optional_data_base.23" }
%"class.absl::optional_internal::optional_data_base.23" = type { %"class.absl::optional_internal::optional_data_dtor_base.24" }
%"class.absl::optional_internal::optional_data_dtor_base.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.gfx::Rect" }
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { i32 }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, [3 x i8], %union.anon.45 }
%union.anon.45 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%union.anon.35 = type { %"class.base::TimeDelta" }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, %union.anon.55 }
%union.anon.55 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, [7 x i8], %union.anon.60 }
%union.anon.60 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { i8* }
%"class.media::VideoRendererAlgorithm" = type { %"class.media::MediaLog"*, i32, %"class.base::circular_deque", %"class.media::VideoCadenceEstimator", i8, %"class.base::RepeatingCallback", %"class.base::TimeTicks", %"class.media::MovingAverage", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i64, i8, i64, i8, i64 }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, i64 }
%"class.media::VideoCadenceEstimator" = type { %"class.std::__1::vector.67", %"class.std::__1::vector.67", i32, %"class.base::TimeDelta", i8, i32, %"class.base::TimeDelta", i8, %struct.anon }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { i32*, i32*, %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i32* }
%struct.anon = type { i8, i32, %"class.absl::optional.36" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.media::MovingAverage" = type { i64, %"class.std::__1::vector.74", i64, %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.base::TimeDelta"* }
%"class.media::MediaLog" = type { i32 (...)**, %class.scoped_refptr.65 }
%class.scoped_refptr.65 = type { %"struct.media::MediaLog::ParentLogRecord"* }
%"struct.media::MediaLog::ParentLogRecord" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.66", i32, %"class.base::Lock", %"class.media::MediaLog"* }
%"class.base::RefCountedThreadSafe.66" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.83 }
%union.anon.83 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"class.base::TimeTicks"*, %"class.base::TimeTicks"*, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.base::TimeTicks"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.media::LogHelper" = type { i32, %"class.media::MediaLog"*, %"class.std::__1::basic_stringstream" }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.84 }
%struct.anon.84 = type { i8 }
%"class.base::internal::circular_deque_iterator" = type { %"class.base::internal::circular_deque_const_iterator" }
%"class.base::internal::circular_deque_const_iterator" = type { %"class.base::circular_deque"*, i64 }

$_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE5eraseENS_8internal29circular_deque_const_iteratorIS3_EES7_ = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZNK4base9TimeDelta6IntDivES0_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEE13DestructRangeIS4_Li0EEEvPS4_S7_ = comdat any

$_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPN5media22VideoRendererAlgorithm10ReadyFrameEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_ = comdat any

$_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm = comdat any

$_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE7emplaceIJRKS3_EEENS_8internal23circular_deque_iteratorIS3_EENS8_29circular_deque_const_iteratorIS3_EEDpOT_ = comdat any

$_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIS3_EES8_ = comdat any

$_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_ = comdat any

@.str = private unnamed_addr constant [65 x i8] c"(Log limit reached. Further similar entries may be suppressed): \00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"Dropping frame with timestamp \00", align 1
@.str.3 = private unnamed_addr constant [50 x i8] c", which is earlier than the last rendered frame (\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"Decoded frame with timestamp \00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c" is out of order.\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.13 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.16 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1

@_ZN5media22VideoRendererAlgorithm10ReadyFrameC1E13scoped_refptrINS_10VideoFrameEE = hidden unnamed_addr alias void (%"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"class.media::VideoFrame"*), void (%"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"class.media::VideoFrame"*)* @_ZN5media22VideoRendererAlgorithm10ReadyFrameC2E13scoped_refptrINS_10VideoFrameEE
@_ZN5media22VideoRendererAlgorithm10ReadyFrameC1ERKS1_ = hidden unnamed_addr alias void (%"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"*), void (%"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"*)* @_ZN5media22VideoRendererAlgorithm10ReadyFrameC2ERKS1_
@_ZN5media22VideoRendererAlgorithm10ReadyFrameD1Ev = hidden unnamed_addr alias void (%"struct.media::VideoRendererAlgorithm::ReadyFrame"*), void (%"struct.media::VideoRendererAlgorithm::ReadyFrame"*)* @_ZN5media22VideoRendererAlgorithm10ReadyFrameD2Ev
@_ZN5media22VideoRendererAlgorithmC1ERKN4base17RepeatingCallbackIFbRKNSt3__16vectorINS1_9TimeDeltaENS3_9allocatorIS5_EEEEPNS4_INS1_9TimeTicksENS6_ISB_EEEEEEEPNS_8MediaLogE = hidden unnamed_addr alias void (%"class.media::VideoRendererAlgorithm"*, %"class.base::RepeatingCallback"*, %"class.media::MediaLog"*), void (%"class.media::VideoRendererAlgorithm"*, %"class.base::RepeatingCallback"*, %"class.media::MediaLog"*)* @_ZN5media22VideoRendererAlgorithmC2ERKN4base17RepeatingCallbackIFbRKNSt3__16vectorINS1_9TimeDeltaENS3_9allocatorIS5_EEEEPNS4_INS1_9TimeTicksENS6_ISB_EEEEEEEPNS_8MediaLogE
@_ZN5media22VideoRendererAlgorithmD1Ev = hidden unnamed_addr alias void (%"class.media::VideoRendererAlgorithm"*), void (%"class.media::VideoRendererAlgorithm"*)* @_ZN5media22VideoRendererAlgorithmD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22VideoRendererAlgorithm10ReadyFrameC2E13scoped_refptrINS_10VideoFrameEE(%"struct.media::VideoRendererAlgorithm::ReadyFrame"* nocapture, %"class.media::VideoFrame"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.media::VideoFrame"* %1 to i64
  %4 = bitcast %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %0, i64 0, i32 3
  %7 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store i8 1, i8* %6, align 8
  %8 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %0, i64 0, i32 4
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %0, i64 0, i32 5
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %0, i64 0, i32 6
  store i32 0, i32* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22VideoRendererAlgorithm10ReadyFrameC2ERKS1_(%"struct.media::VideoRendererAlgorithm::ReadyFrame"* nocapture, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %3, align 8
  %5 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %0, i64 0, i32 0, i32 0
  store %"class.media::VideoFrame"* %4, %"class.media::VideoFrame"** %5, align 8
  %6 = icmp eq %"class.media::VideoFrame"* %4, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %1, i64 0, i32 1
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  %14 = bitcast %"class.base::TimeTicks"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22VideoRendererAlgorithm10ReadyFrameD2Ev(%"struct.media::VideoRendererAlgorithm::ReadyFrame"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %2, align 8
  %4 = icmp eq %"class.media::VideoFrame"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.media::VideoFrame"*
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %11 to void (%"class.media::VideoFrame"*)***
  %14 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %14, i64 1
  %16 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %15, align 8
  tail call void %16(%"class.media::VideoFrame"* nonnull %12) #13
  br label %17

17:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5media22VideoRendererAlgorithm10ReadyFrameltERKS1_(%"struct.media::VideoRendererAlgorithm::ReadyFrame"* nocapture readonly, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* nocapture readonly dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %3, align 8
  %5 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %4, i64 0, i32 16, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %7, align 8
  %9 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %8, i64 0, i32 16, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp slt i64 %6, %10
  ret i1 %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22VideoRendererAlgorithmC2ERKN4base17RepeatingCallbackIFbRKNSt3__16vectorINS1_9TimeDeltaENS3_9allocatorIS5_EEEEPNS4_INS1_9TimeTicksENS6_ISB_EEEEEEEPNS_8MediaLogE(%"class.media::VideoRendererAlgorithm"*, %"class.base::RepeatingCallback"* dereferenceable(8), %"class.media::MediaLog"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 0
  store %"class.media::MediaLog"* %2, %"class.media::MediaLog"** %4, align 8
  %5 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2
  %7 = bitcast %"class.base::circular_deque"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #13
  %8 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3
  tail call void @_ZN5media21VideoCadenceEstimatorC1EN4base9TimeDeltaE(%"class.media::VideoCadenceEstimator"* %8, i64 8000000) #13
  %9 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 5, i32 0
  %10 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %9, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %10) #13
  %11 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 7
  tail call void @_ZN5media13MovingAverageC1Em(%"class.media::MovingAverage"* %12, i64 32) #13
  %13 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 8, i32 0
  %14 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 10, i32 0
  store i32 0, i32* %5, align 8
  %15 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 13
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 4
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %18 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 26, i1 false)
  %19 = load i64, i64* %17, align 8
  %20 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %21 = load i64, i64* %20, align 8
  tail call void @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE13DestructRangeEmm(%"class.base::circular_deque"* %6, i64 %19, i64 %21) #13
  %22 = bitcast i64* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #13
  %23 = bitcast %"class.base::circular_deque"* %6 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @free(i8* %24) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5media21VideoCadenceEstimator5ResetEv(%"class.media::VideoCadenceEstimator"* %8) #13
  store i64 0, i64* %13, align 8
  store i64 0, i64* %11, align 8
  tail call void @_ZN5media13MovingAverage5ResetEv(%"class.media::MovingAverage"* %12) #13
  %25 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 14
  store i8 1, i8* %25, align 8
  %26 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 15
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 17
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 16
  store i8 0, i8* %28, align 8
  store i64 15000, i64* %14, align 8
  ret void
}

declare void @_ZN5media21VideoCadenceEstimatorC1EN4base9TimeDeltaE(%"class.media::VideoCadenceEstimator"*, i64) unnamed_addr #3

declare void @_ZN5media13MovingAverageC1Em(%"class.media::MovingAverage"*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22VideoRendererAlgorithm5ResetENS0_9ResetFlagE(%"class.media::VideoRendererAlgorithm"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 13
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 11
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 4
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 9, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %12 = load i64, i64* %11, align 8
  tail call void @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE13DestructRangeEmm(%"class.base::circular_deque"* %8, i64 %10, i64 %12) #13
  %13 = bitcast i64* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #13
  %14 = bitcast %"class.base::circular_deque"* %8 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @free(i8* %15) #13
  %16 = bitcast %"class.base::circular_deque"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #13
  %17 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3
  tail call void @_ZN5media21VideoCadenceEstimator5ResetEv(%"class.media::VideoCadenceEstimator"* %17) #13
  %18 = icmp eq i32 %1, 1
  br i1 %18, label %23, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 8, i32 0
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 7
  tail call void @_ZN5media13MovingAverage5ResetEv(%"class.media::MovingAverage"* %22) #13
  br label %23

23:                                               ; preds = %2, %19
  %24 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 14
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 15
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 17
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 16
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 10, i32 0
  store i64 15000, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22VideoRendererAlgorithmD2Ev(%"class.media::VideoRendererAlgorithm"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 7
  tail call void @_ZN5media13MovingAverageD1Ev(%"class.media::MovingAverage"* %2) #13
  %3 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #13
  %4 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3
  tail call void @_ZN5media21VideoCadenceEstimatorD1Ev(%"class.media::VideoCadenceEstimator"* %4) #13
  %5 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %9 = load i64, i64* %8, align 8
  tail call void @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE13DestructRangeEmm(%"class.base::circular_deque"* %5, i64 %7, i64 %9) #13
  %10 = bitcast %"class.base::circular_deque"* %5 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @free(i8* %11) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media13MovingAverageD1Ev(%"class.media::MovingAverage"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5media21VideoCadenceEstimatorD1Ev(%"class.media::VideoCadenceEstimator"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VideoFrame"* @_ZN5media22VideoRendererAlgorithm6RenderEN4base9TimeTicksES2_Pm(%"class.media::VideoRendererAlgorithm"*, i64, i64, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %490, label %13

13:                                               ; preds = %4
  %14 = icmp ne i64* %3, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 13
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %3, align 8
  br label %18

18:                                               ; preds = %15, %13
  %19 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 13
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 4
  store i8 1, i8* %20, align 8
  %21 = sub nsw i64 %2, %1
  %22 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 9, i32 0
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 6, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp ne i64 %24, 0
  %26 = icmp slt i64 %24, %1
  %27 = and i1 %25, %26
  br i1 %27, label %28, label %55

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 16
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = icmp eq i64 %21, 0
  %33 = or i1 %32, %31
  br i1 %33, label %55, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = sub nsw i64 %1, %24
  %37 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %36, i64* %37, align 8
  %38 = call i64 @_ZNK4base9TimeDelta6IntDivES0_(%"class.base::TimeDelta"* nonnull %5, i64 %21) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %55, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %42 = load i64, i64* %8, align 8
  %43 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %41, i64 %42) #13
  %44 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %43, i64 0, i32 5
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %43, i64 0, i32 6
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %45, %49
  %51 = trunc i64 %38 to i32
  %52 = add i32 %45, %51
  br i1 %50, label %53, label %54

53:                                               ; preds = %47
  store i32 %52, i32* %48, align 4
  br label %54

54:                                               ; preds = %53, %47
  store i32 %52, i32* %44, align 8
  br label %55

55:                                               ; preds = %18, %28, %34, %40, %54
  call void @_ZN5media22VideoRendererAlgorithm21UpdateFrameStatisticsEv(%"class.media::VideoRendererAlgorithm"* %0)
  %56 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 8, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp slt i64 %57, 1
  %59 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 16
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  %62 = or i1 %58, %61
  br i1 %62, label %66, label %63

63:                                               ; preds = %55
  %64 = load i64, i64* %22, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %131

66:                                               ; preds = %55, %63
  %67 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %7, i64 0, i32 0
  %68 = load i64, i64* %8, align 8
  %69 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %67, i64 %68) #13
  %70 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %69, i64 0, i32 5
  %71 = load i32, i32* %70, align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %70, align 8
  %73 = load i64, i64* %8, align 8
  %74 = load i64, i64* %10, align 8
  %75 = icmp eq i64 %74, %73
  br i1 %75, label %82, label %76

76:                                               ; preds = %66
  %77 = load i64, i64* %56, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = load i64, i64* %23, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %91

82:                                               ; preds = %79, %76, %66
  %83 = icmp ult i64 %74, %73
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = sub i64 %74, %73
  br label %117

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %74, %73
  %90 = add i64 %89, %88
  br label %117

91:                                               ; preds = %79
  %92 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 12
  %93 = load i8, i8* %92, align 1, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %112, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %97 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  br label %98

98:                                               ; preds = %98, %95
  %99 = phi i64 [ 0, %95 ], [ %106, %98 ]
  %100 = phi i64 [ %73, %95 ], [ %110, %98 ]
  %101 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %96, i64 %100) #13
  %102 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %101, i64 0, i32 5
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 0
  %105 = zext i1 %104 to i64
  %106 = add nuw nsw i64 %99, %105
  %107 = add i64 %100, 1
  %108 = load i64, i64* %97, align 8
  %109 = icmp eq i64 %107, %108
  %110 = select i1 %109, i64 0, i64 %107
  %111 = icmp eq i64 %110, %74
  br i1 %111, label %112, label %98

112:                                              ; preds = %98, %91
  %113 = phi i64 [ 0, %91 ], [ %106, %98 ]
  %114 = call i64 @_ZNK5media22VideoRendererAlgorithm26CountEffectiveFramesQueuedEv(%"class.media::VideoRendererAlgorithm"* %0) #13
  %115 = icmp ult i64 %113, %114
  %116 = select i1 %115, i64 %114, i64 %113
  br label %117

117:                                              ; preds = %84, %86, %112
  %118 = phi i64 [ %116, %112 ], [ %85, %84 ], [ %90, %86 ]
  %119 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 17
  store i64 %118, i64* %119, align 8
  %120 = load i8, i8* %59, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 14
  store i8 1, i8* %123, align 8
  br label %124

124:                                              ; preds = %117, %122
  %125 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %69, i64 0, i32 0, i32 0
  %126 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %125, align 8
  %127 = icmp eq %"class.media::VideoFrame"* %126, null
  br i1 %127, label %490, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %126, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw add i32* %129, i32 1 monotonic
  br label %490

131:                                              ; preds = %63
  store i64 %2, i64* %23, align 8
  %132 = call i32 @_ZNK5media22VideoRendererAlgorithm22FindBestFrameByCadenceEv(%"class.media::VideoRendererAlgorithm"* %0)
  %133 = icmp sgt i32 %132, -1
  br i1 %133, label %134, label %165

134:                                              ; preds = %131
  %135 = sext i32 %132 to i64
  %136 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %137 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = load i64, i64* %8, align 8
  %140 = sub i64 %138, %139
  %141 = load i64, i64* %10, align 8
  %142 = icmp ule i64 %139, %141
  %143 = icmp ugt i64 %140, %135
  %144 = or i1 %142, %143
  %145 = sub i64 0, %140
  %146 = select i1 %144, i64 %139, i64 %145
  %147 = add i64 %146, %135
  %148 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %136, i64 %147) #13
  %149 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %148, i64 0, i32 2, i32 0, i32 0
  %150 = load i64, i64* %149, align 8
  %151 = icmp slt i64 %150, %1
  br i1 %151, label %152, label %154

152:                                              ; preds = %134
  %153 = sub nsw i64 %1, %150
  br label %160

154:                                              ; preds = %134
  %155 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %148, i64 0, i32 1, i32 0, i32 0
  %156 = load i64, i64* %155, align 8
  %157 = icmp sgt i64 %156, %1
  %158 = sub nsw i64 %156, %1
  %159 = select i1 %157, i64 %158, i64 0
  br label %160

160:                                              ; preds = %152, %154
  %161 = phi i64 [ %159, %154 ], [ %153, %152 ]
  %162 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 10, i32 0
  %163 = load i64, i64* %162, align 8
  %164 = icmp sgt i64 %161, %163
  br i1 %164, label %165, label %238

165:                                              ; preds = %131, %160
  %166 = phi i64 [ %161, %160 ], [ 0, %131 ]
  %167 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %167) #13
  store i32 -1, i32* %6, align 4
  %168 = call i32 @_ZNK5media22VideoRendererAlgorithm23FindBestFrameByCoverageEN4base9TimeTicksES2_Pi(%"class.media::VideoRendererAlgorithm"* %0, i64 %1, i64 %2, i32* nonnull %6)
  %169 = icmp eq i32 %132, %168
  %170 = load i32, i32* %6, align 4
  %171 = icmp sgt i32 %170, -1
  %172 = and i1 %169, %171
  br i1 %172, label %173, label %202

173:                                              ; preds = %165
  %174 = sext i32 %170 to i64
  %175 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %176 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %177 = load i64, i64* %176, align 8
  %178 = load i64, i64* %8, align 8
  %179 = sub i64 %177, %178
  %180 = load i64, i64* %10, align 8
  %181 = icmp ule i64 %178, %180
  %182 = icmp ugt i64 %179, %174
  %183 = or i1 %181, %182
  %184 = sub i64 0, %179
  %185 = select i1 %183, i64 %178, i64 %184
  %186 = add i64 %185, %174
  %187 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %175, i64 %186) #13
  %188 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %187, i64 0, i32 2, i32 0, i32 0
  %189 = load i64, i64* %188, align 8
  %190 = icmp slt i64 %189, %1
  br i1 %190, label %191, label %193

191:                                              ; preds = %173
  %192 = sub nsw i64 %1, %189
  br label %199

193:                                              ; preds = %173
  %194 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %187, i64 0, i32 1, i32 0, i32 0
  %195 = load i64, i64* %194, align 8
  %196 = icmp sgt i64 %195, %1
  %197 = sub nsw i64 %195, %1
  %198 = select i1 %196, i64 %197, i64 0
  br label %199

199:                                              ; preds = %193, %191
  %200 = phi i64 [ %192, %191 ], [ %198, %193 ]
  %201 = icmp sgt i64 %200, %166
  br i1 %201, label %202, label %206

202:                                              ; preds = %199, %165
  %203 = icmp sgt i32 %168, -1
  br i1 %203, label %204, label %237

204:                                              ; preds = %202
  %205 = sext i32 %168 to i64
  br label %206

206:                                              ; preds = %204, %199
  %207 = phi i64 [ %205, %204 ], [ %174, %199 ]
  %208 = phi i32 [ %168, %204 ], [ %170, %199 ]
  %209 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %210 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %211 = load i64, i64* %210, align 8
  %212 = load i64, i64* %8, align 8
  %213 = sub i64 %211, %212
  %214 = load i64, i64* %10, align 8
  %215 = icmp ule i64 %212, %214
  %216 = icmp ult i64 %207, %213
  %217 = or i1 %215, %216
  %218 = sub i64 0, %213
  %219 = select i1 %217, i64 %212, i64 %218
  %220 = add i64 %207, %219
  %221 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %209, i64 %220) #13
  %222 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %221, i64 0, i32 2, i32 0, i32 0
  %223 = load i64, i64* %222, align 8
  %224 = icmp slt i64 %223, %1
  br i1 %224, label %225, label %227

225:                                              ; preds = %206
  %226 = sub nsw i64 %1, %223
  br label %233

227:                                              ; preds = %206
  %228 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %221, i64 0, i32 1, i32 0, i32 0
  %229 = load i64, i64* %228, align 8
  %230 = icmp sgt i64 %229, %1
  %231 = sub nsw i64 %229, %1
  %232 = select i1 %230, i64 %231, i64 0
  br label %233

233:                                              ; preds = %227, %225
  %234 = phi i64 [ %232, %227 ], [ %226, %225 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167) #13
  %235 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 10, i32 0
  %236 = load i64, i64* %235, align 8
  br label %238

237:                                              ; preds = %202
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167) #13
  br label %243

238:                                              ; preds = %160, %233
  %239 = phi i64 [ %236, %233 ], [ %163, %160 ]
  %240 = phi i32 [ %208, %233 ], [ %132, %160 ]
  %241 = phi i64 [ %234, %233 ], [ %161, %160 ]
  %242 = icmp sgt i64 %241, %239
  br i1 %242, label %243, label %295

243:                                              ; preds = %237, %238
  %244 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %245 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  br label %246

246:                                              ; preds = %286, %243
  %247 = phi i64 [ 9223372036854775807, %243 ], [ %289, %286 ]
  %248 = phi i64 [ 0, %243 ], [ %291, %286 ]
  %249 = phi i32 [ -1, %243 ], [ %290, %286 ]
  %250 = load i64, i64* %8, align 8
  %251 = load i64, i64* %10, align 8
  %252 = icmp ult i64 %251, %250
  br i1 %252, label %255, label %253

253:                                              ; preds = %246
  %254 = sub i64 %251, %250
  br label %259

255:                                              ; preds = %246
  %256 = load i64, i64* %244, align 8
  %257 = sub i64 %251, %250
  %258 = add i64 %257, %256
  br label %259

259:                                              ; preds = %255, %253
  %260 = phi i64 [ %254, %253 ], [ %258, %255 ]
  %261 = icmp ult i64 %248, %260
  br i1 %261, label %262, label %292

262:                                              ; preds = %259
  %263 = trunc i64 %248 to i32
  %264 = shl i64 %248, 32
  %265 = ashr exact i64 %264, 32
  %266 = load i64, i64* %244, align 8
  %267 = sub i64 %266, %250
  %268 = icmp uge i64 %251, %250
  %269 = icmp ult i64 %265, %267
  %270 = or i1 %268, %269
  %271 = sub i64 0, %267
  %272 = select i1 %270, i64 %250, i64 %271
  %273 = add i64 %265, %272
  %274 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %245, i64 %273) #13
  %275 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %274, i64 0, i32 2, i32 0, i32 0
  %276 = load i64, i64* %275, align 8
  %277 = icmp slt i64 %276, %1
  br i1 %277, label %278, label %280

278:                                              ; preds = %262
  %279 = sub nsw i64 %1, %276
  br label %286

280:                                              ; preds = %262
  %281 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %274, i64 0, i32 1, i32 0, i32 0
  %282 = load i64, i64* %281, align 8
  %283 = icmp sgt i64 %282, %1
  %284 = sub nsw i64 %282, %1
  %285 = select i1 %283, i64 %284, i64 0
  br label %286

286:                                              ; preds = %280, %278
  %287 = phi i64 [ %279, %278 ], [ %285, %280 ]
  %288 = icmp sgt i64 %287, %247
  %289 = select i1 %288, i64 %247, i64 %287
  %290 = select i1 %288, i32 %249, i32 %263
  %291 = add nuw i64 %248, 1
  br label %246

292:                                              ; preds = %259
  %293 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 10, i32 0
  %294 = load i64, i64* %293, align 8
  br label %295

295:                                              ; preds = %292, %238
  %296 = phi i64 [ %239, %238 ], [ %294, %292 ]
  %297 = phi i64 [ %241, %238 ], [ %247, %292 ]
  %298 = phi i32 [ %240, %238 ], [ %249, %292 ]
  %299 = icmp ne i32 %298, %132
  %300 = and i1 %133, %299
  %301 = icmp sgt i64 %297, %296
  %302 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 11
  %303 = zext i1 %301 to i8
  store i8 %303, i8* %302, align 8
  %304 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3
  %305 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 0
  %306 = load i8, i8* %305, align 8, !range !2
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %312, label %308

308:                                              ; preds = %295
  %309 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  %310 = load i8, i8* %309, align 8, !range !2
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %332, label %318

312:                                              ; preds = %295
  %313 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %304, i64 0, i32 0, i32 0, i32 0
  %314 = load i32*, i32** %313, align 8
  %315 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %316 = load i32*, i32** %315, align 8
  %317 = icmp eq i32* %314, %316
  br i1 %317, label %332, label %318

318:                                              ; preds = %312, %308
  %319 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %7, i64 0, i32 0
  %320 = load i64, i64* %8, align 8
  %321 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %319, i64 %320) #13
  %322 = icmp eq i32 %298, 0
  %323 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %321, i64 0, i32 5
  %324 = load i32, i32* %323, align 8
  %325 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %321, i64 0, i32 4
  %326 = load i32, i32* %325, align 4
  %327 = icmp slt i32 %324, %326
  br i1 %322, label %330, label %328

328:                                              ; preds = %318
  br i1 %327, label %329, label %332

329:                                              ; preds = %328
  store i8 1, i8* %302, align 8
  br label %332

330:                                              ; preds = %318
  br i1 %327, label %422, label %331

331:                                              ; preds = %330
  store i8 1, i8* %302, align 8
  br label %422

332:                                              ; preds = %312, %308, %328, %329
  %333 = icmp sgt i32 %298, 0
  br i1 %333, label %334, label %422

334:                                              ; preds = %332
  br i1 %14, label %335, label %400

335:                                              ; preds = %334
  %336 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %7, i64 0, i32 0
  %337 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %338 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  %339 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %304, i64 0, i32 0, i32 0, i32 0
  %340 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %341 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 12
  %342 = zext i32 %298 to i64
  br label %343

343:                                              ; preds = %395, %335
  %344 = phi i64 [ 0, %335 ], [ %396, %395 ]
  %345 = load i64, i64* %337, align 8
  %346 = load i64, i64* %8, align 8
  %347 = sub i64 %345, %346
  %348 = load i64, i64* %10, align 8
  %349 = icmp ule i64 %346, %348
  %350 = icmp ult i64 %344, %347
  %351 = or i1 %349, %350
  %352 = sub i64 0, %347
  %353 = select i1 %351, i64 %346, i64 %352
  %354 = add i64 %344, %353
  %355 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %336, i64 %354) #13
  %356 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %355, i64 0, i32 5
  %357 = load i32, i32* %356, align 8
  %358 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %355, i64 0, i32 6
  %359 = load i32, i32* %358, align 4
  %360 = icmp eq i32 %357, %359
  br i1 %360, label %361, label %395

361:                                              ; preds = %343
  %362 = load i8, i8* %305, align 8, !range !2
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %367, label %364

364:                                              ; preds = %361
  %365 = load i8, i8* %338, align 8, !range !2
  %366 = icmp eq i8 %365, 0
  br i1 %366, label %375, label %371

367:                                              ; preds = %361
  %368 = load i32*, i32** %339, align 8
  %369 = load i32*, i32** %340, align 8
  %370 = icmp eq i32* %368, %369
  br i1 %370, label %375, label %371

371:                                              ; preds = %367, %364
  %372 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %355, i64 0, i32 4
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %395, label %375

375:                                              ; preds = %367, %364, %371
  %376 = load i8, i8* %341, align 1, !range !2
  %377 = icmp eq i8 %376, 0
  br i1 %377, label %378, label %398

378:                                              ; preds = %375
  %379 = load i64, i64* %3, align 8
  %380 = add i64 %379, 1
  store i64 %380, i64* %3, align 8
  %381 = load i8, i8* %305, align 8, !range !2
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %386, label %383

383:                                              ; preds = %378
  %384 = load i8, i8* %338, align 8, !range !2
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %394, label %390

386:                                              ; preds = %378
  %387 = load i32*, i32** %339, align 8
  %388 = load i32*, i32** %340, align 8
  %389 = icmp eq i32* %387, %388
  br i1 %389, label %394, label %390

390:                                              ; preds = %386, %383
  %391 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %355, i64 0, i32 4
  %392 = load i32, i32* %391, align 4
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %395, label %394

394:                                              ; preds = %386, %383, %390
  store i8 1, i8* %302, align 8
  br label %395

395:                                              ; preds = %343, %371, %390, %394
  %396 = add nuw nsw i64 %344, 1
  %397 = icmp eq i64 %396, %342
  br i1 %397, label %400, label %343

398:                                              ; preds = %375
  %399 = trunc i64 %344 to i32
  br label %400

400:                                              ; preds = %395, %398, %334
  %401 = phi i32 [ %298, %334 ], [ %399, %398 ], [ %298, %395 ]
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 15
  %404 = load i64, i64* %403, align 8
  %405 = add i64 %404, %402
  store i64 %405, i64* %403, align 8
  %406 = load i64, i64* %8, align 8
  %407 = icmp eq i32 %401, 0
  br i1 %407, label %413, label %408

408:                                              ; preds = %400
  %409 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %410 = load i64, i64* %409, align 8
  %411 = add i64 %406, %402
  %412 = urem i64 %411, %410
  br label %413

413:                                              ; preds = %408, %400
  %414 = phi i64 [ %406, %400 ], [ %412, %408 ]
  %415 = call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE5eraseENS_8internal29circular_deque_const_iteratorIS3_EES7_(%"class.base::circular_deque"* %7, %"class.base::circular_deque"* %7, i64 %406, %"class.base::circular_deque"* %7, i64 %414)
  %416 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 14
  %417 = load i8, i8* %416, align 8, !range !2
  %418 = icmp ne i8 %417, 0
  %419 = icmp sgt i32 %401, 0
  %420 = and i1 %419, %418
  br i1 %420, label %421, label %422

421:                                              ; preds = %413
  store i8 0, i8* %416, align 8
  br label %422

422:                                              ; preds = %330, %331, %332, %421, %413
  %423 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %7, i64 0, i32 0
  %424 = load i64, i64* %8, align 8
  %425 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %423, i64 %424) #13
  %426 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %425, i64 0, i32 5
  %427 = load i32, i32* %426, align 8
  %428 = add nsw i32 %427, 1
  store i32 %428, i32* %426, align 8
  br i1 %300, label %429, label %431

429:                                              ; preds = %422
  %430 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 15
  store i64 0, i64* %430, align 8
  call void @_ZN5media22VideoRendererAlgorithm22UpdateCadenceForFramesEv(%"class.media::VideoRendererAlgorithm"* %0)
  br label %431

431:                                              ; preds = %429, %422
  %432 = load i64, i64* %8, align 8
  %433 = load i64, i64* %10, align 8
  %434 = icmp eq i64 %433, %432
  br i1 %434, label %441, label %435

435:                                              ; preds = %431
  %436 = load i64, i64* %56, align 8
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %441, label %438

438:                                              ; preds = %435
  %439 = load i64, i64* %23, align 8
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %441, label %453

441:                                              ; preds = %438, %435, %431
  %442 = icmp ult i64 %433, %432
  br i1 %442, label %445, label %443

443:                                              ; preds = %441
  %444 = sub i64 %433, %432
  br label %450

445:                                              ; preds = %441
  %446 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %447 = load i64, i64* %446, align 8
  %448 = sub i64 %433, %432
  %449 = add i64 %448, %447
  br label %450

450:                                              ; preds = %445, %443
  %451 = phi i64 [ %444, %443 ], [ %449, %445 ]
  %452 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 17
  store i64 %451, i64* %452, align 8
  br label %481

453:                                              ; preds = %438
  %454 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 12
  %455 = load i8, i8* %454, align 1, !range !2
  %456 = icmp eq i8 %455, 0
  br i1 %456, label %474, label %457

457:                                              ; preds = %453
  %458 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %459 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  br label %460

460:                                              ; preds = %460, %457
  %461 = phi i64 [ 0, %457 ], [ %468, %460 ]
  %462 = phi i64 [ %432, %457 ], [ %472, %460 ]
  %463 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %458, i64 %462) #13
  %464 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %463, i64 0, i32 5
  %465 = load i32, i32* %464, align 8
  %466 = icmp eq i32 %465, 0
  %467 = zext i1 %466 to i64
  %468 = add nuw nsw i64 %461, %467
  %469 = add i64 %462, 1
  %470 = load i64, i64* %459, align 8
  %471 = icmp eq i64 %469, %470
  %472 = select i1 %471, i64 0, i64 %469
  %473 = icmp eq i64 %472, %433
  br i1 %473, label %474, label %460

474:                                              ; preds = %460, %453
  %475 = phi i64 [ 0, %453 ], [ %468, %460 ]
  %476 = call i64 @_ZNK5media22VideoRendererAlgorithm26CountEffectiveFramesQueuedEv(%"class.media::VideoRendererAlgorithm"* %0) #13
  %477 = icmp ult i64 %475, %476
  %478 = select i1 %477, i64 %476, i64 %475
  %479 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 17
  store i64 %478, i64* %479, align 8
  %480 = load i64, i64* %8, align 8
  br label %481

481:                                              ; preds = %450, %474
  %482 = phi i64 [ %432, %450 ], [ %480, %474 ]
  %483 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %423, i64 %482) #13
  %484 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %483, i64 0, i32 0, i32 0
  %485 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %484, align 8
  %486 = icmp eq %"class.media::VideoFrame"* %485, null
  br i1 %486, label %490, label %487

487:                                              ; preds = %481
  %488 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %485, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %489 = atomicrmw add i32* %488, i32 1 monotonic
  br label %490

490:                                              ; preds = %487, %481, %128, %124, %4
  %491 = phi %"class.media::VideoFrame"* [ null, %4 ], [ null, %124 ], [ %126, %128 ], [ null, %481 ], [ %485, %487 ]
  ret %"class.media::VideoFrame"* %491
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22VideoRendererAlgorithm25AccountForMissedIntervalsEN4base9TimeTicksES2_(%"class.media::VideoRendererAlgorithm"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 6, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ne i64 %6, 0
  %8 = icmp slt i64 %6, %1
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %44

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %44, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 16
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %44, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 9, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %44, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  %24 = sub nsw i64 %1, %6
  %25 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = call i64 @_ZNK4base9TimeDelta6IntDivES0_(%"class.base::TimeDelta"* nonnull %4, i64 %20)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %44, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %30 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %31) #13
  %33 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %32, i64 0, i32 5
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %32, i64 0, i32 6
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %34, %38
  %40 = trunc i64 %26 to i32
  %41 = add i32 %34, %40
  br i1 %39, label %42, label %43

42:                                               ; preds = %36
  store i32 %41, i32* %37, align 4
  br label %43

43:                                               ; preds = %36, %42
  store i32 %41, i32* %33, align 8
  br label %44

44:                                               ; preds = %3, %22, %28, %43, %14, %10, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22VideoRendererAlgorithm21UpdateFrameStatisticsEv(%"class.media::VideoRendererAlgorithm"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::vector.74", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__1::vector.88", align 8
  %7 = bitcast %"class.std::__1::vector.74"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %4, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #13
  %11 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, %13
  br i1 %16, label %19, label %17

17:                                               ; preds = %1
  %18 = sub i64 %15, %13
  br label %24

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %15, %13
  %23 = add i64 %22, %21
  br label %24

24:                                               ; preds = %17, %19
  %25 = phi i64 [ %18, %17 ], [ %23, %19 ]
  %26 = bitcast %"class.base::TimeDelta"** %10 to i64*
  %27 = bitcast %"class.std::__1::vector.74"* %4 to i64*
  %28 = icmp eq i64 %25, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %24
  %30 = icmp ugt i64 %25, 2305843009213693951
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  tail call void @abort() #14
  unreachable

32:                                               ; preds = %29
  %33 = bitcast %"class.base::TimeDelta"** %9 to i64*
  %34 = shl i64 %25, 3
  %35 = tail call i8* @_Znwm(i64 %34) #15
  %36 = bitcast i8* %35 to %"class.base::TimeDelta"*
  %37 = ptrtoint i8* %35 to i64
  %38 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %36, i64 %25
  %39 = ptrtoint %"class.base::TimeDelta"* %38 to i64
  %40 = ptrtoint i8* %35 to i64
  store i64 %40, i64* %27, align 8
  store i64 %37, i64* %33, align 8
  store i64 %39, i64* %26, align 8
  br label %41

41:                                               ; preds = %32, %24
  %42 = phi %"class.base::TimeDelta"* [ null, %24 ], [ %36, %32 ]
  %43 = phi i64 [ 0, %24 ], [ %37, %32 ]
  %44 = phi %"class.base::TimeDelta"* [ null, %24 ], [ %38, %32 ]
  %45 = icmp eq i64 %15, %13
  br i1 %45, label %52, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %11, i64 0, i32 0
  %48 = bitcast %"class.base::TimeDelta"** %9 to i64*
  %49 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  br label %77

50:                                               ; preds = %141
  %51 = load i64, i64* %14, align 8
  br label %52

52:                                               ; preds = %50, %41
  %53 = phi i64 [ %143, %50 ], [ %43, %41 ]
  %54 = phi %"class.base::TimeDelta"* [ %142, %50 ], [ %42, %41 ]
  %55 = phi i64 [ %51, %50 ], [ %13, %41 ]
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  br label %60

60:                                               ; preds = %52, %57
  %61 = phi i64 [ %59, %57 ], [ %55, %52 ]
  %62 = add i64 %61, -1
  %63 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %11, i64 0, i32 0
  %64 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %63, i64 %62) #13
  %65 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %65, align 8
  %67 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67)
  store i64 0, i64* %5, align 8
  %68 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %66, i64 0, i32 19, i32 7, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  %71 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %66, i64 0, i32 19, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %72 = bitcast i64* %5 to %"class.base::TimeDelta"*
  %73 = select i1 %70, %"class.base::TimeDelta"* %72, %"class.base::TimeDelta"* %71
  %74 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %73, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67)
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %151, label %232

77:                                               ; preds = %149, %46
  %78 = phi i64 [ %43, %46 ], [ %143, %149 ]
  %79 = phi %"class.base::TimeDelta"* [ %44, %46 ], [ %150, %149 ]
  %80 = phi %"class.base::TimeDelta"* [ %42, %46 ], [ %142, %149 ]
  %81 = phi i64 [ %13, %46 ], [ %147, %149 ]
  %82 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %47, i64 %81) #13
  %83 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %83, align 8
  %85 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %84, i64 0, i32 16, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = icmp ult %"class.base::TimeDelta"* %80, %79
  %88 = ptrtoint %"class.base::TimeDelta"* %79 to i64
  br i1 %87, label %89, label %93

89:                                               ; preds = %77
  %90 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %80, i64 0, i32 0
  store i64 %86, i64* %90, align 8
  %91 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %80, i64 1
  %92 = ptrtoint %"class.base::TimeDelta"* %91 to i64
  store i64 %92, i64* %48, align 8
  br label %141

93:                                               ; preds = %77
  %94 = ptrtoint %"class.base::TimeDelta"* %80 to i64
  %95 = load i64, i64* %27, align 8
  %96 = sub i64 %94, %95
  %97 = ashr exact i64 %96, 3
  %98 = add nsw i64 %97, 1
  %99 = icmp ugt i64 %98, 2305843009213693951
  br i1 %99, label %100, label %102

100:                                              ; preds = %93
  %101 = bitcast %"class.std::__1::vector.74"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %101) #14
  unreachable

102:                                              ; preds = %93
  %103 = sub i64 %88, %95
  %104 = ashr exact i64 %103, 3
  %105 = icmp ult i64 %104, 1152921504606846975
  br i1 %105, label %106, label %114

106:                                              ; preds = %102
  %107 = ashr exact i64 %103, 2
  %108 = icmp ult i64 %107, %98
  %109 = select i1 %108, i64 %98, i64 %107
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %106
  %112 = icmp ugt i64 %109, 2305843009213693951
  br i1 %112, label %113, label %114

113:                                              ; preds = %111
  tail call void @abort() #14
  unreachable

114:                                              ; preds = %111, %102
  %115 = phi i64 [ %109, %111 ], [ 2305843009213693951, %102 ]
  %116 = shl i64 %115, 3
  %117 = tail call i8* @_Znwm(i64 %116) #15
  %118 = bitcast i8* %117 to %"class.base::TimeDelta"*
  br label %119

119:                                              ; preds = %114, %106
  %120 = phi i64 [ %115, %114 ], [ 0, %106 ]
  %121 = phi %"class.base::TimeDelta"* [ %118, %114 ], [ null, %106 ]
  %122 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %121, i64 %97
  %123 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %121, i64 %120
  %124 = ptrtoint %"class.base::TimeDelta"* %123 to i64
  %125 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %122, i64 0, i32 0
  store i64 %86, i64* %125, align 8
  %126 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %122, i64 1
  %127 = ptrtoint %"class.base::TimeDelta"* %126 to i64
  %128 = sub i64 %78, %95
  %129 = ashr exact i64 %128, 3
  %130 = sub nsw i64 0, %129
  %131 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %122, i64 %130
  %132 = ptrtoint %"class.base::TimeDelta"* %131 to i64
  %133 = icmp sgt i64 %128, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %119
  %135 = bitcast %"class.base::TimeDelta"* %131 to i8*
  %136 = inttoptr i64 %95 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %136, i64 %128, i1 false) #13
  br label %137

137:                                              ; preds = %134, %119
  store i64 %132, i64* %27, align 8
  store i64 %127, i64* %48, align 8
  store i64 %124, i64* %26, align 8
  %138 = icmp eq i64 %95, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %137
  %140 = inttoptr i64 %95 to i8*
  tail call void @_ZdlPv(i8* %140) #15
  br label %141

141:                                              ; preds = %89, %137, %139
  %142 = phi %"class.base::TimeDelta"* [ %91, %89 ], [ %126, %137 ], [ %126, %139 ]
  %143 = phi i64 [ %92, %89 ], [ %127, %137 ], [ %127, %139 ]
  %144 = add i64 %81, 1
  %145 = load i64, i64* %49, align 8
  %146 = icmp eq i64 %144, %145
  %147 = select i1 %146, i64 0, i64 %144
  %148 = icmp eq i64 %147, %15
  br i1 %148, label %50, label %149

149:                                              ; preds = %141
  %150 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %10, align 8
  br label %77

151:                                              ; preds = %60
  %152 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %66, i64 0, i32 16, i32 0
  %153 = load i64, i64* %152, align 8
  %154 = add nsw i64 %75, -9223372036854775807
  %155 = icmp ult i64 %154, 2
  br i1 %155, label %161, label %156

156:                                              ; preds = %151
  %157 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %153, i64 %75) #13
  %158 = extractvalue { i64, i1 } %157, 1
  %159 = extractvalue { i64, i1 } %157, 0
  %160 = select i1 %158, i64 9223372036854775807, i64 %159, !prof !3
  br label %171

161:                                              ; preds = %151
  %162 = add i64 %153, -9223372036854775807
  %163 = icmp ugt i64 %162, 1
  %164 = icmp eq i64 %153, %75
  %165 = or i1 %164, %163
  br i1 %165, label %171, label %166

166:                                              ; preds = %161
  %167 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #13
  %168 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #13
  %169 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %9, align 8
  %170 = ptrtoint %"class.base::TimeDelta"* %169 to i64
  br label %171

171:                                              ; preds = %156, %161, %166
  %172 = phi i64 [ %53, %156 ], [ %53, %161 ], [ %170, %166 ]
  %173 = phi %"class.base::TimeDelta"* [ %54, %156 ], [ %54, %161 ], [ %169, %166 ]
  %174 = phi i64 [ %160, %156 ], [ 9223372036854775807, %161 ], [ 9223372036854775807, %166 ]
  %175 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %10, align 8
  %176 = icmp ult %"class.base::TimeDelta"* %173, %175
  %177 = ptrtoint %"class.base::TimeDelta"* %175 to i64
  br i1 %176, label %178, label %183

178:                                              ; preds = %171
  %179 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %173, i64 0, i32 0
  store i64 %174, i64* %179, align 8
  %180 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %173, i64 1
  %181 = ptrtoint %"class.base::TimeDelta"* %180 to i64
  %182 = bitcast %"class.base::TimeDelta"** %9 to i64*
  store i64 %181, i64* %182, align 8
  br label %232

183:                                              ; preds = %171
  %184 = ptrtoint %"class.base::TimeDelta"* %173 to i64
  %185 = bitcast %"class.base::TimeDelta"** %9 to i64*
  %186 = load i64, i64* %27, align 8
  %187 = sub i64 %184, %186
  %188 = ashr exact i64 %187, 3
  %189 = add nsw i64 %188, 1
  %190 = icmp ugt i64 %189, 2305843009213693951
  br i1 %190, label %191, label %193

191:                                              ; preds = %183
  %192 = bitcast %"class.std::__1::vector.74"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %192) #14
  unreachable

193:                                              ; preds = %183
  %194 = sub i64 %177, %186
  %195 = ashr exact i64 %194, 3
  %196 = icmp ult i64 %195, 1152921504606846975
  br i1 %196, label %197, label %205

197:                                              ; preds = %193
  %198 = ashr exact i64 %194, 2
  %199 = icmp ult i64 %198, %189
  %200 = select i1 %199, i64 %189, i64 %198
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %210, label %202

202:                                              ; preds = %197
  %203 = icmp ugt i64 %200, 2305843009213693951
  br i1 %203, label %204, label %205

204:                                              ; preds = %202
  call void @abort() #14
  unreachable

205:                                              ; preds = %202, %193
  %206 = phi i64 [ %200, %202 ], [ 2305843009213693951, %193 ]
  %207 = shl i64 %206, 3
  %208 = call i8* @_Znwm(i64 %207) #15
  %209 = bitcast i8* %208 to %"class.base::TimeDelta"*
  br label %210

210:                                              ; preds = %205, %197
  %211 = phi i64 [ %206, %205 ], [ 0, %197 ]
  %212 = phi %"class.base::TimeDelta"* [ %209, %205 ], [ null, %197 ]
  %213 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %212, i64 %188
  %214 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %212, i64 %211
  %215 = ptrtoint %"class.base::TimeDelta"* %214 to i64
  %216 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %213, i64 0, i32 0
  store i64 %174, i64* %216, align 8
  %217 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %213, i64 1
  %218 = ptrtoint %"class.base::TimeDelta"* %217 to i64
  %219 = sub i64 %172, %186
  %220 = ashr exact i64 %219, 3
  %221 = sub nsw i64 0, %220
  %222 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %213, i64 %221
  %223 = ptrtoint %"class.base::TimeDelta"* %222 to i64
  %224 = icmp sgt i64 %219, 0
  br i1 %224, label %225, label %228

225:                                              ; preds = %210
  %226 = bitcast %"class.base::TimeDelta"* %222 to i8*
  %227 = inttoptr i64 %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %226, i8* align 8 %227, i64 %219, i1 false) #13
  br label %228

228:                                              ; preds = %225, %210
  store i64 %223, i64* %27, align 8
  store i64 %218, i64* %185, align 8
  store i64 %215, i64* %26, align 8
  %229 = icmp eq i64 %186, 0
  br i1 %229, label %232, label %230

230:                                              ; preds = %228
  %231 = inttoptr i64 %186 to i8*
  call void @_ZdlPv(i8* %231) #15
  br label %232

232:                                              ; preds = %230, %228, %178, %60
  %233 = phi i1 [ false, %60 ], [ true, %178 ], [ true, %228 ], [ true, %230 ]
  %234 = bitcast %"class.std::__1::vector.88"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #13
  %235 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %6, i64 0, i32 0, i32 0
  %236 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 0, i64 24, i1 false) #13
  %237 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %238 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %237, align 8
  %239 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %238, i64 0, i32 1
  %240 = bitcast void ()** %239 to i1 (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.74"*, %"class.std::__1::vector.88"*)**
  %241 = load i1 (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.74"*, %"class.std::__1::vector.88"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.74"*, %"class.std::__1::vector.88"*)** %240, align 8
  %242 = call zeroext i1 %241(%"class.base::internal::BindStateBase"* %238, %"class.std::__1::vector.74"* nonnull dereferenceable(24) %4, %"class.std::__1::vector.88"* nonnull %6) #13
  %243 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 16
  %244 = zext i1 %242 to i8
  store i8 %244, i8* %243, align 8
  %245 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %246 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 7
  br label %247

247:                                              ; preds = %287, %232
  %248 = phi i64 [ 0, %232 ], [ %283, %287 ]
  %249 = load i64, i64* %12, align 8
  %250 = load i64, i64* %14, align 8
  %251 = icmp ult i64 %250, %249
  br i1 %251, label %254, label %252

252:                                              ; preds = %247
  %253 = sub i64 %250, %249
  br label %258

254:                                              ; preds = %247
  %255 = load i64, i64* %245, align 8
  %256 = sub i64 %250, %249
  %257 = add i64 %256, %255
  br label %258

258:                                              ; preds = %252, %254
  %259 = phi i64 [ %253, %252 ], [ %257, %254 ]
  %260 = add i64 %259, -1
  %261 = icmp ult i64 %248, %260
  br i1 %261, label %266, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 7, i32 2
  %264 = load i64, i64* %263, align 8
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %294, label %290

266:                                              ; preds = %258
  %267 = load i64, i64* %245, align 8
  %268 = sub i64 %267, %249
  %269 = icmp uge i64 %250, %249
  %270 = icmp ult i64 %248, %268
  %271 = or i1 %269, %270
  %272 = sub i64 0, %268
  %273 = select i1 %271, i64 %249, i64 %272
  %274 = add i64 %248, %273
  %275 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %63, i64 %274) #13
  %276 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %275, i64 0, i32 3
  %277 = load i8, i8* %276, align 8, !range !2
  %278 = icmp eq i8 %277, 0
  %279 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %235, align 8
  %280 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %279, i64 %248, i32 0, i32 0
  %281 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %275, i64 0, i32 1, i32 0, i32 0
  %282 = load i64, i64* %280, align 8
  store i64 %282, i64* %281, align 8
  %283 = add nuw i64 %248, 1
  %284 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %279, i64 %283, i32 0, i32 0
  %285 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %275, i64 0, i32 2, i32 0, i32 0
  %286 = load i64, i64* %284, align 8
  store i64 %286, i64* %285, align 8
  store i8 0, i8* %276, align 8
  br i1 %278, label %287, label %288

287:                                              ; preds = %266, %288
  br label %247

288:                                              ; preds = %266
  %289 = sub nsw i64 %286, %282
  call void @_ZN5media13MovingAverage9AddSampleEN4base9TimeDeltaE(%"class.media::MovingAverage"* %246, i64 %289) #13
  br label %287

290:                                              ; preds = %262
  %291 = call i64 @_ZNK5media13MovingAverage7AverageEv(%"class.media::MovingAverage"* %246) #13
  %292 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 8, i32 0
  store i64 %291, i64* %292, align 8
  %293 = call i64 @_ZNK5media13MovingAverage9DeviationEv(%"class.media::MovingAverage"* %246) #13
  br label %294

294:                                              ; preds = %262, %290
  %295 = phi i64 [ 0, %262 ], [ %293, %290 ]
  br i1 %233, label %296, label %319

296:                                              ; preds = %294
  %297 = load i64, i64* %14, align 8
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %301

299:                                              ; preds = %296
  %300 = load i64, i64* %245, align 8
  br label %301

301:                                              ; preds = %296, %299
  %302 = phi i64 [ %300, %299 ], [ %297, %296 ]
  %303 = add i64 %302, -1
  %304 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %63, i64 %303) #13
  %305 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %236, align 8
  %306 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %305, i64 -2, i32 0, i32 0
  %307 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %304, i64 0, i32 1, i32 0, i32 0
  %308 = load i64, i64* %306, align 8
  store i64 %308, i64* %307, align 8
  %309 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %236, align 8
  %310 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %309, i64 -1, i32 0, i32 0
  %311 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %304, i64 0, i32 2, i32 0, i32 0
  %312 = load i64, i64* %310, align 8
  store i64 %312, i64* %311, align 8
  %313 = load i64, i64* %263, align 8
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %375

315:                                              ; preds = %301
  %316 = sub nsw i64 %312, %308
  %317 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 8, i32 0
  store i64 %316, i64* %317, align 8
  %318 = icmp eq i64 %316, 0
  br i1 %318, label %390, label %375

319:                                              ; preds = %294
  %320 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %236, align 8
  %321 = load i64, i64* %14, align 8
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %323, label %325

323:                                              ; preds = %319
  %324 = load i64, i64* %245, align 8
  br label %325

325:                                              ; preds = %319, %323
  %326 = phi i64 [ %324, %323 ], [ %321, %319 ]
  %327 = add i64 %326, -1
  %328 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %63, i64 %327) #13
  %329 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %320, i64 -1, i32 0, i32 0
  %330 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %328, i64 0, i32 1, i32 0, i32 0
  %331 = load i64, i64* %329, align 8
  store i64 %331, i64* %330, align 8
  %332 = load i64, i64* %263, align 8
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %390, label %334

334:                                              ; preds = %325
  %335 = load i64, i64* %14, align 8
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %339

337:                                              ; preds = %334
  %338 = load i64, i64* %245, align 8
  br label %339

339:                                              ; preds = %334, %337
  %340 = phi i64 [ %338, %337 ], [ %335, %334 ]
  %341 = add i64 %340, -1
  %342 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %63, i64 %341) #13
  %343 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 8, i32 0
  %344 = load i64, i64* %343, align 8
  %345 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %342, i64 0, i32 1, i32 0, i32 0
  %346 = load i64, i64* %345, align 8
  %347 = add i64 %344, -9223372036854775807
  %348 = icmp ult i64 %347, 2
  br i1 %348, label %356, label %349

349:                                              ; preds = %339
  %350 = icmp slt i64 %344, 0
  %351 = select i1 %350, i64 -9223372036854775808, i64 9223372036854775807
  %352 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %346, i64 %344) #13
  %353 = extractvalue { i64, i1 } %352, 1
  %354 = extractvalue { i64, i1 } %352, 0
  %355 = select i1 %353, i64 %351, i64 %354, !prof !3
  br label %364

356:                                              ; preds = %339
  %357 = add i64 %346, -9223372036854775807
  %358 = icmp ugt i64 %357, 1
  %359 = icmp eq i64 %346, %344
  %360 = or i1 %359, %358
  br i1 %360, label %364, label %361

361:                                              ; preds = %356
  %362 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %362) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #13
  %363 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %362) #13
  br label %364

364:                                              ; preds = %349, %356, %361
  %365 = phi i64 [ %355, %349 ], [ %344, %356 ], [ %344, %361 ]
  %366 = load i64, i64* %14, align 8
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %368, label %370

368:                                              ; preds = %364
  %369 = load i64, i64* %245, align 8
  br label %370

370:                                              ; preds = %364, %368
  %371 = phi i64 [ %369, %368 ], [ %366, %364 ]
  %372 = add i64 %371, -1
  %373 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %63, i64 %372) #13
  %374 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %373, i64 0, i32 2, i32 0, i32 0
  store i64 %365, i64* %374, align 8
  br label %375

375:                                              ; preds = %315, %301, %370
  %376 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 8, i32 0
  %377 = load i64, i64* %376, align 8
  %378 = sdiv i64 %377, 2
  %379 = icmp slt i64 %377, 33332
  %380 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 10, i32 0
  %381 = select i1 %379, i64 16666, i64 %378
  store i64 %381, i64* %380, align 8
  %382 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 9, i32 0
  %383 = load i64, i64* %382, align 8
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %390, label %385

385:                                              ; preds = %375
  %386 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3
  %387 = call zeroext i1 @_ZN5media21VideoCadenceEstimator21UpdateCadenceEstimateEN4base9TimeDeltaES2_S2_S2_(%"class.media::VideoCadenceEstimator"* %386, i64 %383, i64 %377, i64 %295, i64 %381) #13
  br i1 %387, label %388, label %390

388:                                              ; preds = %385
  %389 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 15
  store i64 0, i64* %389, align 8
  call void @_ZN5media22VideoRendererAlgorithm22UpdateCadenceForFramesEv(%"class.media::VideoRendererAlgorithm"* %0)
  br label %390

390:                                              ; preds = %388, %385, %375, %325, %315
  %391 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %235, align 8
  %392 = icmp eq %"class.base::TimeTicks"* %391, null
  br i1 %392, label %397, label %393

393:                                              ; preds = %390
  %394 = ptrtoint %"class.base::TimeTicks"* %391 to i64
  %395 = bitcast %"class.base::TimeTicks"** %236 to i64*
  store i64 %394, i64* %395, align 8
  %396 = bitcast %"class.base::TimeTicks"* %391 to i8*
  call void @_ZdlPv(i8* %396) #15
  br label %397

397:                                              ; preds = %390, %393
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #13
  %398 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %8, align 8
  %399 = icmp eq %"class.base::TimeDelta"* %398, null
  br i1 %399, label %404, label %400

400:                                              ; preds = %397
  %401 = ptrtoint %"class.base::TimeDelta"* %398 to i64
  %402 = bitcast %"class.base::TimeDelta"** %9 to i64*
  store i64 %401, i64* %402, align 8
  %403 = bitcast %"class.base::TimeDelta"* %398 to i8*
  call void @_ZdlPv(i8* %403) #15
  br label %404

404:                                              ; preds = %397, %400
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22VideoRendererAlgorithm27UpdateEffectiveFramesQueuedEv(%"class.media::VideoRendererAlgorithm"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 8, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 6, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %24

15:                                               ; preds = %11, %7, %1
  %16 = icmp ult i64 %5, %3
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = sub i64 %5, %3
  br label %50

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %5, %3
  %23 = add i64 %22, %21
  br label %50

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 12
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %45, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %30 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  br label %31

31:                                               ; preds = %31, %28
  %32 = phi i64 [ 0, %28 ], [ %39, %31 ]
  %33 = phi i64 [ %3, %28 ], [ %43, %31 ]
  %34 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %33) #13
  %35 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %34, i64 0, i32 5
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  %38 = zext i1 %37 to i64
  %39 = add nuw nsw i64 %32, %38
  %40 = add i64 %33, 1
  %41 = load i64, i64* %30, align 8
  %42 = icmp eq i64 %40, %41
  %43 = select i1 %42, i64 0, i64 %40
  %44 = icmp eq i64 %43, %5
  br i1 %44, label %45, label %31

45:                                               ; preds = %31, %24
  %46 = phi i64 [ 0, %24 ], [ %39, %31 ]
  %47 = tail call i64 @_ZNK5media22VideoRendererAlgorithm26CountEffectiveFramesQueuedEv(%"class.media::VideoRendererAlgorithm"* %0)
  %48 = icmp ult i64 %46, %47
  %49 = select i1 %48, i64 %47, i64 %46
  br label %50

50:                                               ; preds = %19, %17, %45
  %51 = phi i64 [ %49, %45 ], [ %18, %17 ], [ %23, %19 ]
  %52 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 17
  store i64 %51, i64* %52, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5media22VideoRendererAlgorithm22FindBestFrameByCadenceEv(%"class.media::VideoRendererAlgorithm"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %59, label %15

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %11, %13
  br i1 %14, label %59, label %15

15:                                               ; preds = %9, %5
  %16 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %17 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %16, i64 %18) #13
  %20 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %19, i64 0, i32 5
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %19, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %21, %23
  br i1 %24, label %59, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %27 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  br label %28

28:                                               ; preds = %25, %55
  %29 = phi i64 [ %56, %55 ], [ 1, %25 ]
  %30 = load i64, i64* %17, align 8
  %31 = load i64, i64* %26, align 8
  %32 = icmp ult i64 %31, %30
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = sub i64 %31, %30
  br label %39

35:                                               ; preds = %28
  %36 = load i64, i64* %27, align 8
  %37 = sub i64 %31, %30
  %38 = add i64 %37, %36
  br label %39

39:                                               ; preds = %33, %35
  %40 = phi i64 [ %34, %33 ], [ %38, %35 ]
  %41 = icmp ult i64 %29, %40
  br i1 %41, label %42, label %59

42:                                               ; preds = %39
  %43 = load i64, i64* %27, align 8
  %44 = sub i64 %43, %30
  %45 = icmp uge i64 %31, %30
  %46 = icmp ult i64 %29, %44
  %47 = or i1 %45, %46
  %48 = sub i64 0, %44
  %49 = select i1 %47, i64 %30, i64 %48
  %50 = add i64 %29, %49
  %51 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %16, i64 %50) #13
  %52 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %51, i64 0, i32 4
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %42
  %56 = add nuw i64 %29, 1
  br label %28

57:                                               ; preds = %42
  %58 = trunc i64 %29 to i32
  br label %59

59:                                               ; preds = %39, %9, %5, %15, %57
  %60 = phi i32 [ %58, %57 ], [ -1, %9 ], [ 0, %15 ], [ -1, %5 ], [ -1, %39 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5media22VideoRendererAlgorithm30CalculateAbsoluteDriftForFrameEN4base9TimeTicksEi(%"class.media::VideoRendererAlgorithm"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %6 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp ule i64 %9, %12
  %14 = icmp ugt i64 %10, %4
  %15 = or i1 %13, %14
  %16 = sub i64 0, %10
  %17 = select i1 %15, i64 %9, i64 %16
  %18 = add i64 %17, %4
  %19 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %5, i64 %18) #13
  %20 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp slt i64 %21, %1
  br i1 %22, label %23, label %25

23:                                               ; preds = %3
  %24 = sub nsw i64 %1, %21
  ret i64 %24

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %19, i64 0, i32 1, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp sgt i64 %27, %1
  %29 = sub nsw i64 %27, %1
  %30 = select i1 %28, i64 %29, i64 0
  ret i64 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5media22VideoRendererAlgorithm23FindBestFrameByCoverageEN4base9TimeTicksES2_Pi(%"class.media::VideoRendererAlgorithm"*, i64, i64, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = alloca %"class.std::__1::vector.74", align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = bitcast %"class.base::TimeDelta"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = bitcast %"class.std::__1::vector.74"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %8, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %8, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %16 = bitcast %"class.std::__1::vector.74"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = load i64, i64* %15, align 8
  %18 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, %17
  br i1 %20, label %23, label %21

21:                                               ; preds = %4
  %22 = sub i64 %19, %17
  br label %28

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %19, %17
  %27 = add i64 %26, %25
  br label %28

28:                                               ; preds = %21, %23
  %29 = phi i64 [ %22, %21 ], [ %27, %23 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #13
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %28
  %32 = icmp ugt i64 %29, 2305843009213693951
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.74"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %34) #14
  unreachable

35:                                               ; preds = %31
  %36 = shl i64 %29, 3
  %37 = tail call i8* @_Znwm(i64 %36) #15
  %38 = bitcast i8* %37 to %"class.base::TimeDelta"*
  %39 = bitcast %"class.std::__1::vector.74"* %8 to i8**
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %38, i64 %29
  store %"class.base::TimeDelta"* %40, %"class.base::TimeDelta"** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 %36, i1 false)
  %41 = bitcast %"class.base::TimeDelta"** %13 to i64*
  %42 = ptrtoint %"class.base::TimeDelta"* %40 to i64
  store i64 %42, i64* %41, align 8
  br label %43

43:                                               ; preds = %28, %35
  %44 = phi %"class.base::TimeDelta"* [ null, %28 ], [ %38, %35 ]
  %45 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %46 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %47 = bitcast i64* %6 to %"class.base::TimeTicks"*
  %48 = bitcast i64* %5 to %"class.base::TimeTicks"*
  br label %49

49:                                               ; preds = %103, %43
  %50 = phi %"class.base::TimeDelta"* [ %44, %43 ], [ %104, %103 ]
  %51 = phi %"class.base::TimeDelta"* [ %44, %43 ], [ %105, %103 ]
  %52 = phi i64 [ %19, %43 ], [ %109, %103 ]
  %53 = phi i64 [ %17, %43 ], [ %108, %103 ]
  %54 = phi i32 [ -1, %43 ], [ %106, %103 ]
  %55 = phi i64 [ 0, %43 ], [ %107, %103 ]
  %56 = icmp ult i64 %52, %53
  br i1 %56, label %59, label %57

57:                                               ; preds = %49
  %58 = sub i64 %52, %53
  br label %63

59:                                               ; preds = %49
  %60 = load i64, i64* %45, align 8
  %61 = sub i64 %52, %53
  %62 = add i64 %61, %60
  br label %63

63:                                               ; preds = %57, %59
  %64 = phi i64 [ %58, %57 ], [ %62, %59 ]
  %65 = icmp ult i64 %55, %64
  br i1 %65, label %66, label %110

66:                                               ; preds = %63
  %67 = load i64, i64* %45, align 8
  %68 = sub i64 %67, %53
  %69 = icmp uge i64 %52, %53
  %70 = icmp ult i64 %55, %68
  %71 = or i1 %69, %70
  %72 = sub i64 0, %68
  %73 = select i1 %71, i64 %53, i64 %72
  %74 = add i64 %55, %73
  %75 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %46, i64 %74) #13
  %76 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %75, i64 0, i32 1
  %77 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %76, i64 0, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp sgt i64 %78, %2
  br i1 %79, label %110, label %80

80:                                               ; preds = %66
  %81 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %75, i64 0, i32 2
  %82 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %81, i64 0, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = icmp slt i64 %83, %2
  %85 = select i1 %84, %"class.base::TimeTicks"* %81, %"class.base::TimeTicks"* %47
  %86 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %85, i64 0, i32 0, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = icmp slt i64 %87, %1
  br i1 %88, label %103, label %89

89:                                               ; preds = %80
  %90 = icmp sgt i64 %78, %1
  %91 = select i1 %90, %"class.base::TimeTicks"* %76, %"class.base::TimeTicks"* %48
  %92 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %91, i64 0, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = sub nsw i64 %87, %93
  %95 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %51, i64 %55, i32 0
  store i64 %94, i64* %95, align 8
  %96 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %12, align 8
  %97 = load i64, i64* %10, align 8
  %98 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %96, i64 %55, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp sgt i64 %99, %97
  br i1 %100, label %101, label %103

101:                                              ; preds = %89
  %102 = trunc i64 %55 to i32
  store i64 %99, i64* %10, align 8
  br label %103

103:                                              ; preds = %80, %101, %89
  %104 = phi %"class.base::TimeDelta"* [ %96, %89 ], [ %96, %101 ], [ %50, %80 ]
  %105 = phi %"class.base::TimeDelta"* [ %96, %89 ], [ %96, %101 ], [ %51, %80 ]
  %106 = phi i32 [ %54, %89 ], [ %102, %101 ], [ %54, %80 ]
  %107 = add nuw i64 %55, 1
  %108 = load i64, i64* %15, align 8
  %109 = load i64, i64* %18, align 8
  br label %49

110:                                              ; preds = %66, %63
  store i32 -1, i32* %3, align 4
  %111 = icmp sgt i32 %54, -1
  br i1 %111, label %112, label %220

112:                                              ; preds = %110
  %113 = sext i32 %54 to i64
  %114 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %50, i64 %113, i32 0
  store i64 0, i64* %114, align 8
  %115 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %12, align 8
  %116 = ptrtoint %"class.base::TimeDelta"* %115 to i64
  %117 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %13, align 8
  %118 = icmp eq %"class.base::TimeDelta"* %115, %117
  br i1 %118, label %190, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %115, i64 1
  %121 = icmp eq %"class.base::TimeDelta"* %120, %117
  br i1 %121, label %190, label %122

122:                                              ; preds = %119
  %123 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %117, i64 -2, i32 0
  %124 = ptrtoint i64* %123 to i64
  %125 = sub i64 %124, %116
  %126 = lshr i64 %125, 3
  %127 = add nuw nsw i64 %126, 1
  %128 = and i64 %127, 3
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %145, label %130

130:                                              ; preds = %122, %130
  %131 = phi %"class.base::TimeDelta"* [ %142, %130 ], [ %120, %122 ]
  %132 = phi i64 [ %141, %130 ], [ %116, %122 ]
  %133 = phi i64 [ %143, %130 ], [ %128, %122 ]
  %134 = ptrtoint %"class.base::TimeDelta"* %131 to i64
  %135 = inttoptr i64 %132 to %"class.base::TimeDelta"*
  %136 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %131, i64 0, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %135, i64 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = icmp slt i64 %139, %137
  %141 = select i1 %140, i64 %134, i64 %132
  %142 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %131, i64 1
  %143 = add i64 %133, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %130, !llvm.loop !4

145:                                              ; preds = %130, %122
  %146 = phi i64 [ undef, %122 ], [ %141, %130 ]
  %147 = phi %"class.base::TimeDelta"* [ %120, %122 ], [ %142, %130 ]
  %148 = phi i64 [ %116, %122 ], [ %141, %130 ]
  %149 = icmp ult i64 %125, 24
  br i1 %149, label %190, label %150

150:                                              ; preds = %145, %150
  %151 = phi %"class.base::TimeDelta"* [ %188, %150 ], [ %147, %145 ]
  %152 = phi i64 [ %187, %150 ], [ %148, %145 ]
  %153 = ptrtoint %"class.base::TimeDelta"* %151 to i64
  %154 = inttoptr i64 %152 to %"class.base::TimeDelta"*
  %155 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %151, i64 0, i32 0
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %154, i64 0, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = icmp slt i64 %158, %156
  %160 = select i1 %159, i64 %153, i64 %152
  %161 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %151, i64 1
  %162 = ptrtoint %"class.base::TimeDelta"* %161 to i64
  %163 = inttoptr i64 %160 to %"class.base::TimeDelta"*
  %164 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %161, i64 0, i32 0
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %163, i64 0, i32 0
  %167 = load i64, i64* %166, align 8
  %168 = icmp slt i64 %167, %165
  %169 = select i1 %168, i64 %162, i64 %160
  %170 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %151, i64 2
  %171 = ptrtoint %"class.base::TimeDelta"* %170 to i64
  %172 = inttoptr i64 %169 to %"class.base::TimeDelta"*
  %173 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %170, i64 0, i32 0
  %174 = load i64, i64* %173, align 8
  %175 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %172, i64 0, i32 0
  %176 = load i64, i64* %175, align 8
  %177 = icmp slt i64 %176, %174
  %178 = select i1 %177, i64 %171, i64 %169
  %179 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %151, i64 3
  %180 = ptrtoint %"class.base::TimeDelta"* %179 to i64
  %181 = inttoptr i64 %178 to %"class.base::TimeDelta"*
  %182 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %179, i64 0, i32 0
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %181, i64 0, i32 0
  %185 = load i64, i64* %184, align 8
  %186 = icmp slt i64 %185, %183
  %187 = select i1 %186, i64 %180, i64 %178
  %188 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %151, i64 4
  %189 = icmp eq %"class.base::TimeDelta"* %188, %117
  br i1 %189, label %190, label %150

190:                                              ; preds = %145, %150, %112, %119
  %191 = phi i64 [ %116, %112 ], [ %116, %119 ], [ %146, %145 ], [ %187, %150 ]
  %192 = inttoptr i64 %191 to %"class.base::TimeDelta"*
  %193 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %192, i64 0, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = icmp sgt i64 %194, 0
  br i1 %195, label %196, label %200

196:                                              ; preds = %190
  %197 = sub i64 %191, %116
  %198 = lshr exact i64 %197, 3
  %199 = trunc i64 %198 to i32
  store i32 %199, i32* %3, align 4
  br label %202

200:                                              ; preds = %190
  %201 = load i32, i32* %3, align 4
  br label %202

202:                                              ; preds = %200, %196
  %203 = phi i32 [ %201, %200 ], [ %199, %196 ]
  %204 = icmp sgt i32 %203, -1
  %205 = icmp sgt i32 %54, %203
  %206 = and i1 %204, %205
  br i1 %206, label %207, label %220

207:                                              ; preds = %202
  %208 = sext i32 %203 to i64
  %209 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %115, i64 %208, i32 0
  %210 = load i64, i64* %209, align 8
  %211 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %7, i64 %210)
  %212 = icmp eq i64 %211, -9223372036854775808
  br i1 %212, label %220, label %213

213:                                              ; preds = %207
  %214 = icmp slt i64 %211, 0
  %215 = sub nsw i64 0, %211
  %216 = select i1 %214, i64 %215, i64 %211
  %217 = icmp slt i64 %216, 501
  br i1 %217, label %218, label %220

218:                                              ; preds = %213
  %219 = load i32, i32* %3, align 4
  store i32 %54, i32* %3, align 4
  br label %220

220:                                              ; preds = %207, %110, %202, %218, %213
  %221 = phi i32 [ %219, %218 ], [ %54, %213 ], [ %54, %202 ], [ %54, %110 ], [ %54, %207 ]
  %222 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %12, align 8
  %223 = icmp eq %"class.base::TimeDelta"* %222, null
  br i1 %223, label %228, label %224

224:                                              ; preds = %220
  %225 = ptrtoint %"class.base::TimeDelta"* %222 to i64
  %226 = bitcast %"class.base::TimeDelta"** %13 to i64*
  store i64 %225, i64* %226, align 8
  %227 = bitcast %"class.base::TimeDelta"* %222 to i8*
  call void @_ZdlPv(i8* %227) #15
  br label %228

228:                                              ; preds = %220, %224
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret i32 %221
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5media22VideoRendererAlgorithm20FindBestFrameByDriftEN4base9TimeTicksEPNS1_9TimeDeltaE(%"class.media::VideoRendererAlgorithm"*, i64, %"class.base::TimeDelta"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 9223372036854775807, i64* %4, align 8
  %5 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %6 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %7 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  br label %9

9:                                                ; preds = %54, %3
  %10 = phi i64 [ 0, %3 ], [ %56, %54 ]
  %11 = phi i32 [ -1, %3 ], [ %55, %54 ]
  %12 = load i64, i64* %5, align 8
  %13 = load i64, i64* %6, align 8
  %14 = icmp ult i64 %13, %12
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = sub i64 %13, %12
  br label %21

17:                                               ; preds = %9
  %18 = load i64, i64* %7, align 8
  %19 = sub i64 %13, %12
  %20 = add i64 %19, %18
  br label %21

21:                                               ; preds = %15, %17
  %22 = phi i64 [ %16, %15 ], [ %20, %17 ]
  %23 = icmp ult i64 %10, %22
  br i1 %23, label %25, label %24

24:                                               ; preds = %21
  ret i32 %11

25:                                               ; preds = %21
  %26 = trunc i64 %10 to i32
  %27 = shl i64 %10, 32
  %28 = ashr exact i64 %27, 32
  %29 = load i64, i64* %7, align 8
  %30 = sub i64 %29, %12
  %31 = icmp uge i64 %13, %12
  %32 = icmp ult i64 %28, %30
  %33 = or i1 %31, %32
  %34 = sub i64 0, %30
  %35 = select i1 %33, i64 %12, i64 %34
  %36 = add i64 %28, %35
  %37 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %8, i64 %36) #13
  %38 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp slt i64 %39, %1
  br i1 %40, label %41, label %43

41:                                               ; preds = %25
  %42 = sub nsw i64 %1, %39
  br label %49

43:                                               ; preds = %25
  %44 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %37, i64 0, i32 1, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp sgt i64 %45, %1
  %47 = sub nsw i64 %45, %1
  %48 = select i1 %46, i64 %47, i64 0
  br label %49

49:                                               ; preds = %43, %41
  %50 = phi i64 [ %42, %41 ], [ %48, %43 ]
  %51 = load i64, i64* %4, align 8
  %52 = icmp sgt i64 %50, %51
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  store i64 %50, i64* %4, align 8
  br label %54

54:                                               ; preds = %49, %53
  %55 = phi i32 [ %26, %53 ], [ %11, %49 ]
  %56 = add nuw i64 %10, 1
  br label %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE5eraseENS_8internal29circular_deque_const_iteratorIS3_EES7_(%"class.base::circular_deque"*, %"class.base::circular_deque"*, i64, %"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = icmp eq i64 %2, %4
  br i1 %6, label %63, label %7

7:                                                ; preds = %5
  %8 = icmp ult i64 %2, %4
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %2)
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13)
  tail call void @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %9, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %10, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %14)
  %15 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0)
  br label %16

16:                                               ; preds = %7, %11
  %17 = phi %"struct.media::VideoRendererAlgorithm::ReadyFrame"* [ %15, %11 ], [ %10, %7 ]
  %18 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %4)
  tail call void @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %9, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %17, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %18)
  %19 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, %2
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  store i64 %4, i64* %19, align 8
  br label %63

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  br label %27

27:                                               ; preds = %50, %23
  %28 = phi i64 [ %20, %23 ], [ %61, %50 ]
  %29 = phi i64 [ %4, %23 ], [ %57, %50 ]
  %30 = phi i64 [ %2, %23 ], [ %60, %50 ]
  %31 = icmp ult i64 %29, %28
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = sub i64 %29, %28
  br label %38

34:                                               ; preds = %27
  %35 = load i64, i64* %26, align 8
  %36 = sub i64 %29, %28
  %37 = add i64 %36, %35
  br label %38

38:                                               ; preds = %34, %32
  %39 = phi i64 [ %33, %32 ], [ %37, %34 ]
  %40 = icmp ult i64 %25, %28
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = sub i64 %25, %28
  br label %47

43:                                               ; preds = %38
  %44 = load i64, i64* %26, align 8
  %45 = sub i64 %25, %28
  %46 = add i64 %45, %44
  br label %47

47:                                               ; preds = %41, %43
  %48 = phi i64 [ %42, %41 ], [ %46, %43 ]
  %49 = icmp ult i64 %39, %48
  br i1 %49, label %50, label %62

50:                                               ; preds = %47
  %51 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %29)
  %52 = add i64 %29, 1
  %53 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %52)
  %54 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %30)
  tail call void @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::VideoRendererAlgorithm::ReadyFrame"* %51, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %53, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %54)
  %55 = load i64, i64* %26, align 8
  %56 = icmp eq i64 %52, %55
  %57 = select i1 %56, i64 0, i64 %52
  %58 = add i64 %30, 1
  %59 = icmp eq i64 %58, %55
  %60 = select i1 %59, i64 0, i64 %58
  %61 = load i64, i64* %19, align 8
  br label %27

62:                                               ; preds = %47
  store i64 %30, i64* %24, align 8
  br label %63

63:                                               ; preds = %5, %62, %22
  %64 = phi i64 [ %4, %22 ], [ %2, %62 ], [ %2, %5 ]
  %65 = insertvalue { %"class.base::circular_deque"*, i64 } undef, %"class.base::circular_deque"* %0, 0
  %66 = insertvalue { %"class.base::circular_deque"*, i64 } %65, i64 %64, 1
  ret { %"class.base::circular_deque"*, i64 } %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22VideoRendererAlgorithm22UpdateCadenceForFramesEv(%"class.media::VideoRendererAlgorithm"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %3 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %4 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 0
  %7 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 15
  %11 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  br label %12

12:                                               ; preds = %43, %1
  %13 = phi i64 [ 0, %1 ], [ %57, %43 ]
  %14 = load i64, i64* %2, align 8
  %15 = load i64, i64* %3, align 8
  %16 = icmp ult i64 %15, %14
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = sub i64 %15, %14
  br label %23

19:                                               ; preds = %12
  %20 = load i64, i64* %4, align 8
  %21 = sub i64 %15, %14
  %22 = add i64 %21, %20
  br label %23

23:                                               ; preds = %17, %19
  %24 = phi i64 [ %18, %17 ], [ %22, %19 ]
  %25 = icmp ult i64 %13, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  ret void

27:                                               ; preds = %23
  %28 = load i8, i8* %6, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = load i8, i8* %7, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %43, label %37

33:                                               ; preds = %27
  %34 = load i32*, i32** %8, align 8
  %35 = load i32*, i32** %9, align 8
  %36 = icmp eq i32* %34, %35
  br i1 %36, label %43, label %37

37:                                               ; preds = %33, %30
  %38 = load i64, i64* %10, align 8
  %39 = add i64 %38, %13
  %40 = tail call i32 @_ZNK5media21VideoCadenceEstimator18GetCadenceForFrameEm(%"class.media::VideoCadenceEstimator"* %5, i64 %39) #13
  %41 = load i64, i64* %2, align 8
  %42 = load i64, i64* %3, align 8
  br label %43

43:                                               ; preds = %33, %30, %37
  %44 = phi i64 [ %42, %37 ], [ %15, %33 ], [ %15, %30 ]
  %45 = phi i64 [ %41, %37 ], [ %14, %33 ], [ %14, %30 ]
  %46 = phi i32 [ %40, %37 ], [ 0, %33 ], [ 0, %30 ]
  %47 = load i64, i64* %4, align 8
  %48 = sub i64 %47, %45
  %49 = icmp ule i64 %45, %44
  %50 = icmp ult i64 %13, %48
  %51 = or i1 %49, %50
  %52 = sub i64 0, %48
  %53 = select i1 %51, i64 %45, i64 %52
  %54 = add i64 %13, %53
  %55 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %11, i64 %54) #13
  %56 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %55, i64 0, i32 4
  store i32 %46, i32* %56, align 4
  %57 = add nuw i64 %13, 1
  br label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5media22VideoRendererAlgorithm19RemoveExpiredFramesEN4base9TimeTicksE(%"class.media::VideoRendererAlgorithm"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp slt i64 %4, %1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 %1, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %158, label %14

14:                                               ; preds = %7
  tail call void @_ZN5media22VideoRendererAlgorithm21UpdateFrameStatisticsEv(%"class.media::VideoRendererAlgorithm"* %0)
  %15 = load i64, i64* %9, align 8
  %16 = load i64, i64* %11, align 8
  %17 = icmp eq i64 %16, %15
  br i1 %17, label %25, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 8, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = load i64, i64* %3, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %22, %18, %14
  %26 = icmp ult i64 %16, %15
  br i1 %26, label %29, label %27

27:                                               ; preds = %25
  %28 = sub i64 %16, %15
  br label %34

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %16, %15
  %33 = add i64 %32, %31
  br label %34

34:                                               ; preds = %29, %27
  %35 = phi i64 [ %28, %27 ], [ %33, %29 ]
  %36 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 17
  store i64 %35, i64* %36, align 8
  br label %66

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 12
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %58, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %43 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  br label %44

44:                                               ; preds = %44, %41
  %45 = phi i64 [ 0, %41 ], [ %52, %44 ]
  %46 = phi i64 [ %15, %41 ], [ %56, %44 ]
  %47 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %46) #13
  %48 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %47, i64 0, i32 5
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  %51 = zext i1 %50 to i64
  %52 = add nuw nsw i64 %45, %51
  %53 = add i64 %46, 1
  %54 = load i64, i64* %43, align 8
  %55 = icmp eq i64 %53, %54
  %56 = select i1 %55, i64 0, i64 %53
  %57 = icmp eq i64 %56, %16
  br i1 %57, label %58, label %44

58:                                               ; preds = %44, %37
  %59 = phi i64 [ 0, %37 ], [ %52, %44 ]
  %60 = tail call i64 @_ZNK5media22VideoRendererAlgorithm26CountEffectiveFramesQueuedEv(%"class.media::VideoRendererAlgorithm"* %0) #13
  %61 = icmp ult i64 %59, %60
  %62 = select i1 %61, i64 %60, i64 %59
  %63 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 17
  store i64 %62, i64* %63, align 8
  %64 = load i64, i64* %9, align 8
  %65 = load i64, i64* %11, align 8
  br label %66

66:                                               ; preds = %34, %58
  %67 = phi i64 [ %16, %34 ], [ %65, %58 ]
  %68 = phi i64 [ %15, %34 ], [ %64, %58 ]
  %69 = icmp ult i64 %67, %68
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = sub i64 %67, %68
  br label %77

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %67, %68
  %76 = add i64 %75, %74
  br label %77

77:                                               ; preds = %70, %72
  %78 = phi i64 [ %71, %70 ], [ %76, %72 ]
  %79 = icmp eq i64 %78, 1
  br i1 %79, label %158, label %80

80:                                               ; preds = %77
  %81 = tail call i32 @_ZNK5media22VideoRendererAlgorithm18FindFirstGoodFrameEv(%"class.media::VideoRendererAlgorithm"* %0)
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %83, label %97

83:                                               ; preds = %80
  %84 = load i64, i64* %9, align 8
  %85 = load i64, i64* %11, align 8
  %86 = icmp ult i64 %85, %84
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = sub i64 %85, %84
  br label %94

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %85, %84
  %93 = add i64 %92, %91
  br label %94

94:                                               ; preds = %87, %89
  %95 = phi i64 [ %88, %87 ], [ %93, %89 ]
  %96 = add i64 %95, -1
  br label %99

97:                                               ; preds = %80
  %98 = sext i32 %81 to i64
  br label %99

99:                                               ; preds = %97, %94
  %100 = phi i64 [ %96, %94 ], [ %98, %97 ]
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %158, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %8, i64 0, i32 0
  %104 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %105 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 0
  %106 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  br label %119

109:                                              ; preds = %154
  %110 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 15
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, %100
  store i64 %112, i64* %110, align 8
  %113 = load i64, i64* %9, align 8
  %114 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %113, %100
  %117 = urem i64 %116, %115
  %118 = tail call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE5eraseENS_8internal29circular_deque_const_iteratorIS3_EES7_(%"class.base::circular_deque"* %8, %"class.base::circular_deque"* %8, i64 %113, %"class.base::circular_deque"* %8, i64 %117)
  br label %158

119:                                              ; preds = %154, %102
  %120 = phi i64 [ 0, %102 ], [ %155, %154 ]
  %121 = phi i64 [ 0, %102 ], [ %156, %154 ]
  %122 = load i64, i64* %104, align 8
  %123 = load i64, i64* %9, align 8
  %124 = sub i64 %122, %123
  %125 = load i64, i64* %11, align 8
  %126 = icmp ule i64 %123, %125
  %127 = icmp ult i64 %121, %124
  %128 = or i1 %126, %127
  %129 = sub i64 0, %124
  %130 = select i1 %128, i64 %123, i64 %129
  %131 = add i64 %121, %130
  %132 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %103, i64 %131) #13
  %133 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %132, i64 0, i32 5
  %134 = load i32, i32* %133, align 8
  %135 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %132, i64 0, i32 6
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %134, %136
  br i1 %137, label %138, label %154

138:                                              ; preds = %119
  %139 = load i8, i8* %105, align 8, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %138
  %142 = load i8, i8* %106, align 8, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %152, label %148

144:                                              ; preds = %138
  %145 = load i32*, i32** %107, align 8
  %146 = load i32*, i32** %108, align 8
  %147 = icmp eq i32* %145, %146
  br i1 %147, label %152, label %148

148:                                              ; preds = %144, %141
  %149 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %132, i64 0, i32 4
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %144, %141, %148
  %153 = add i64 %120, 1
  br label %154

154:                                              ; preds = %148, %152, %119
  %155 = phi i64 [ %153, %152 ], [ %120, %148 ], [ %120, %119 ]
  %156 = add nuw i64 %121, 1
  %157 = icmp eq i64 %156, %100
  br i1 %157, label %109, label %119

158:                                              ; preds = %109, %99, %77, %7
  %159 = phi i64 [ 0, %7 ], [ 0, %77 ], [ %155, %109 ], [ 0, %99 ]
  ret i64 %159
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5media22VideoRendererAlgorithm18FindFirstGoodFrameEv(%"class.media::VideoRendererAlgorithm"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %17

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %15 = load i32*, i32** %14, align 8
  %16 = icmp eq i32* %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %11, %7
  %18 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 10, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 6, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %2, i64 %19) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %28

25:                                               ; preds = %11, %7
  %26 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 6, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  br label %28

28:                                               ; preds = %25, %17
  %29 = phi i64 [ %24, %17 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %31 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %32 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %33 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %34 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %3, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %85, %28
  %38 = phi i64 [ 0, %28 ], [ %86, %85 ]
  %39 = load i64, i64* %30, align 8
  %40 = load i64, i64* %31, align 8
  %41 = icmp ult i64 %40, %39
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  %43 = sub i64 %40, %39
  br label %48

44:                                               ; preds = %37
  %45 = load i64, i64* %32, align 8
  %46 = sub i64 %40, %39
  %47 = add i64 %46, %45
  br label %48

48:                                               ; preds = %42, %44
  %49 = phi i64 [ %43, %42 ], [ %47, %44 ]
  %50 = icmp ult i64 %38, %49
  br i1 %50, label %51, label %87

51:                                               ; preds = %48
  %52 = load i64, i64* %32, align 8
  %53 = sub i64 %52, %39
  %54 = icmp uge i64 %40, %39
  %55 = icmp ult i64 %38, %53
  %56 = or i1 %54, %55
  %57 = sub i64 0, %53
  %58 = select i1 %56, i64 %39, i64 %57
  %59 = add i64 %38, %58
  %60 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %33, i64 %59) #13
  %61 = load i8, i8* %4, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %51
  %64 = load i8, i8* %34, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %76, label %70

66:                                               ; preds = %51
  %67 = load i32*, i32** %35, align 8
  %68 = load i32*, i32** %36, align 8
  %69 = icmp eq i32* %67, %68
  br i1 %69, label %76, label %70

70:                                               ; preds = %66, %63
  %71 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %60, i64 0, i32 5
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %60, i64 0, i32 4
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %72, %74
  br i1 %75, label %76, label %85

76:                                               ; preds = %66, %63, %70
  %77 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %60, i64 0, i32 2, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, 0
  %80 = icmp sgt i64 %78, %29
  %81 = or i1 %79, %80
  br i1 %81, label %82, label %85

82:                                               ; preds = %76
  %83 = load i64, i64* %30, align 8
  %84 = load i64, i64* %31, align 8
  br label %87

85:                                               ; preds = %76, %70
  %86 = add nuw i64 %38, 1
  br label %37

87:                                               ; preds = %48, %82
  %88 = phi i64 [ %84, %82 ], [ %40, %48 ]
  %89 = phi i64 [ %83, %82 ], [ %39, %48 ]
  %90 = icmp ult i64 %88, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  %92 = sub i64 %88, %89
  br label %97

93:                                               ; preds = %87
  %94 = load i64, i64* %32, align 8
  %95 = sub i64 %88, %89
  %96 = add i64 %95, %94
  br label %97

97:                                               ; preds = %91, %93
  %98 = phi i64 [ %92, %91 ], [ %96, %93 ]
  %99 = icmp eq i64 %38, %98
  %100 = select i1 %99, i64 4294967295, i64 %38
  %101 = trunc i64 %100 to i32
  ret i32 %101
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22VideoRendererAlgorithm18OnLastFrameDroppedEv(%"class.media::VideoRendererAlgorithm"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %70, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %70, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %13 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %12, i64 %7) #13
  %14 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %13, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %70, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %13, i64 0, i32 6
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %18, align 4
  %21 = load i64, i64* %6, align 8
  %22 = load i64, i64* %8, align 8
  %23 = icmp eq i64 %22, %21
  br i1 %23, label %32, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 8, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 6, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %28, %24, %17
  %33 = icmp ult i64 %22, %21
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = sub i64 %22, %21
  br label %41

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %22, %21
  %40 = add i64 %39, %38
  br label %41

41:                                               ; preds = %36, %34
  %42 = phi i64 [ %35, %34 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 17
  store i64 %42, i64* %43, align 8
  br label %70

44:                                               ; preds = %28
  %45 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 12
  %46 = load i8, i8* %45, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %58, %50 ]
  %52 = phi i64 [ %21, %48 ], [ %62, %50 ]
  %53 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %12, i64 %52) #13
  %54 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %53, i64 0, i32 5
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  %57 = zext i1 %56 to i64
  %58 = add nuw nsw i64 %51, %57
  %59 = add i64 %52, 1
  %60 = load i64, i64* %49, align 8
  %61 = icmp eq i64 %59, %60
  %62 = select i1 %61, i64 0, i64 %59
  %63 = icmp eq i64 %62, %22
  br i1 %63, label %64, label %50

64:                                               ; preds = %50, %44
  %65 = phi i64 [ 0, %44 ], [ %58, %50 ]
  %66 = tail call i64 @_ZNK5media22VideoRendererAlgorithm26CountEffectiveFramesQueuedEv(%"class.media::VideoRendererAlgorithm"* %0) #13
  %67 = icmp ult i64 %65, %66
  %68 = select i1 %67, i64 %66, i64 %65
  %69 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 17
  store i64 %68, i64* %69, align 8
  br label %70

70:                                               ; preds = %64, %41, %11, %1, %5
  ret void
}

declare void @_ZN5media21VideoCadenceEstimator5ResetEv(%"class.media::VideoCadenceEstimator"*) local_unnamed_addr #3

declare void @_ZN5media13MovingAverage5ResetEv(%"class.media::MovingAverage"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5media22VideoRendererAlgorithm14GetMemoryUsageEv(%"class.media::VideoRendererAlgorithm"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, %5
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %9 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  br label %12

10:                                               ; preds = %12, %1
  %11 = phi i64 [ 0, %1 ], [ %22, %12 ]
  ret i64 %11

12:                                               ; preds = %7, %12
  %13 = phi i64 [ 0, %7 ], [ %22, %12 ]
  %14 = phi i64 [ %3, %7 ], [ %26, %12 ]
  %15 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %8, i64 %14) #13
  %16 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %16, align 8
  %18 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %17, i64 0, i32 2, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %17, i64 0, i32 2, i32 1
  %21 = tail call i64 @_ZN5media10VideoFrame14AllocationSizeENS_16VideoPixelFormatERKN3gfx4SizeE(i32 %19, %"class.gfx::Size"* dereferenceable(8) %20) #13
  %22 = add i64 %21, %13
  %23 = add i64 %14, 1
  %24 = load i64, i64* %9, align 8
  %25 = icmp eq i64 %23, %24
  %26 = select i1 %25, i64 0, i64 %23
  %27 = icmp eq i64 %26, %5
  br i1 %27, label %10, label %12
}

declare i64 @_ZN5media10VideoFrame14AllocationSizeENS_16VideoPixelFormatERKN3gfx4SizeE(i32, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22VideoRendererAlgorithm12EnqueueFrameE13scoped_refptrINS_10VideoFrameEE(%"class.media::VideoRendererAlgorithm"*, %"class.media::VideoFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = alloca %"struct.media::VideoRendererAlgorithm::ReadyFrame", align 8
  %8 = alloca %"class.media::LogHelper", align 8
  %9 = alloca %"class.base::TimeDelta", align 8
  %10 = alloca %"class.std::__1::vector.74", align 8
  %11 = alloca %"class.std::__1::vector.88", align 8
  %12 = alloca %"class.media::LogHelper", align 8
  %13 = ptrtoint %"class.media::VideoFrame"* %1 to i64
  %14 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  store i64 0, i64* %5, align 8
  %15 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 19, i32 7, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 19, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = bitcast i64* %5 to %"class.base::TimeDelta"*
  %20 = select i1 %17, %"class.base::TimeDelta"* %19, %"class.base::TimeDelta"* %18
  %21 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %20, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  %23 = bitcast %"class.base::TimeDelta"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  %25 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 16, i32 0
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %24, align 8
  %27 = bitcast %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 40, i1 false)
  %28 = bitcast %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %7 to i64*
  store i64 %13, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %7, i64 0, i32 1, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %7, i64 0, i32 3
  %31 = bitcast i64* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #13
  store i8 1, i8* %30, align 8
  %32 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %7, i64 0, i32 4
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %7, i64 0, i32 5
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %7, i64 0, i32 6
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2
  %36 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %37
  br i1 %40, label %100, label %41

41:                                               ; preds = %2
  %42 = icmp ult i64 %39, %37
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = sub i64 %39, %37
  br label %50

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %39, %37
  %49 = add i64 %48, %47
  br label %50

50:                                               ; preds = %45, %43
  %51 = phi i64 [ %44, %43 ], [ %49, %45 ]
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %100, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %55 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %35, i64 0, i32 0
  br label %56

56:                                               ; preds = %93, %53
  %57 = phi i64 [ %37, %53 ], [ %95, %93 ]
  %58 = phi i64 [ %51, %53 ], [ %94, %93 ]
  %59 = lshr i64 %58, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %77, label %61

61:                                               ; preds = %56
  %62 = load i64, i64* %36, align 8
  %63 = icmp ult i64 %57, %62
  br i1 %63, label %67, label %64

64:                                               ; preds = %61
  %65 = sub i64 %57, %62
  %66 = load i64, i64* %54, align 8
  br label %71

67:                                               ; preds = %61
  %68 = load i64, i64* %54, align 8
  %69 = sub i64 %57, %62
  %70 = add i64 %69, %68
  br label %71

71:                                               ; preds = %67, %64
  %72 = phi i64 [ %66, %64 ], [ %68, %67 ]
  %73 = phi i64 [ %65, %64 ], [ %70, %67 ]
  %74 = add i64 %62, %59
  %75 = add i64 %74, %73
  %76 = urem i64 %75, %72
  br label %77

77:                                               ; preds = %71, %56
  %78 = phi i64 [ %57, %56 ], [ %76, %71 ]
  %79 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %55, i64 %78) #13
  %80 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %79, i64 0, i32 0, i32 0
  %81 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %80, align 8
  %82 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %81, i64 0, i32 16, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = load i64, i64* %25, align 8
  %85 = icmp slt i64 %83, %84
  br i1 %85, label %86, label %93

86:                                               ; preds = %77
  %87 = add i64 %78, 1
  %88 = load i64, i64* %54, align 8
  %89 = icmp eq i64 %87, %88
  %90 = select i1 %89, i64 0, i64 %87
  %91 = xor i64 %59, -1
  %92 = add i64 %58, %91
  br label %93

93:                                               ; preds = %86, %77
  %94 = phi i64 [ %92, %86 ], [ %59, %77 ]
  %95 = phi i64 [ %90, %86 ], [ %57, %77 ]
  %96 = icmp eq i64 %94, 0
  br i1 %96, label %97, label %56

97:                                               ; preds = %93
  %98 = load i64, i64* %36, align 8
  %99 = icmp ult i64 %95, %98
  br i1 %99, label %104, label %100

100:                                              ; preds = %50, %2, %97
  %101 = phi i64 [ %95, %97 ], [ %37, %2 ], [ %37, %50 ]
  %102 = phi i64 [ %98, %97 ], [ %37, %2 ], [ %37, %50 ]
  %103 = sub i64 %101, %102
  br label %109

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %95, %98
  %108 = add i64 %107, %106
  br label %109

109:                                              ; preds = %104, %100
  %110 = phi i64 [ %101, %100 ], [ %95, %104 ]
  %111 = phi i64 [ %102, %100 ], [ %98, %104 ]
  %112 = phi i64 [ %103, %100 ], [ %108, %104 ]
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %151

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 4
  %116 = load i8, i8* %115, align 8, !range !2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %151, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = icmp slt i32 %120, 10
  br i1 %121, label %122, label %147

122:                                              ; preds = %118
  %123 = add nsw i32 %120, 1
  store i32 %123, i32* %119, align 8
  %124 = bitcast %"class.media::LogHelper"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %124) #13
  %125 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 0
  %126 = load %"class.media::MediaLog"*, %"class.media::MediaLog"** %125, align 8
  call void @_ZN5media9LogHelperC1ENS_20MediaLogMessageLevelEPNS_8MediaLogE(%"class.media::LogHelper"* nonnull %8, i32 2, %"class.media::MediaLog"* %126) #13
  %127 = getelementptr inbounds %"class.media::LogHelper", %"class.media::LogHelper"* %8, i64 0, i32 2, i32 0, i32 1
  %128 = bitcast %"class.std::__1::basic_ostream.base"* %127 to %"class.std::__1::basic_ostream"*
  %129 = load i32, i32* %119, align 8
  %130 = icmp eq i32 %129, 10
  %131 = select i1 %130, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)
  %132 = select i1 %130, i64 64, i64 0
  %133 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %128, i8* %131, i64 %132) #13
  %134 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %133, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i64 30) #13
  %135 = load i64, i64* %24, align 8
  %136 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_ostream"* dereferenceable(160) %134, i64 %135) #13
  %137 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %136, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i64 49) #13
  %138 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %35, i64 0, i32 0
  %139 = load i64, i64* %36, align 8
  %140 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %138, i64 %139) #13
  %141 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %140, i64 0, i32 0, i32 0
  %142 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %141, align 8
  %143 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %142, i64 0, i32 16, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_ostream"* dereferenceable(160) %137, i64 %144) #13
  %146 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %145, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2) #13
  call void @_ZN5media9LogHelperD1Ev(%"class.media::LogHelper"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %124) #13
  br label %147

147:                                              ; preds = %118, %122
  %148 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 13
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 1
  store i64 %150, i64* %148, align 8
  br label %479

151:                                              ; preds = %114, %109
  %152 = load i64, i64* %38, align 8
  %153 = icmp ult i64 %152, %111
  br i1 %153, label %156, label %154

154:                                              ; preds = %151
  %155 = sub i64 %152, %111
  br label %161

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %152, %111
  %160 = add i64 %159, %158
  br label %161

161:                                              ; preds = %154, %156
  %162 = phi i64 [ %155, %154 ], [ %160, %156 ]
  %163 = icmp ult i64 %112, %162
  %164 = bitcast %"class.base::TimeDelta"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #13
  br i1 %163, label %165, label %183

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %35, i64 0, i32 0
  %167 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %168, %111
  %170 = icmp uge i64 %152, %111
  %171 = icmp ult i64 %112, %169
  %172 = or i1 %170, %171
  %173 = sub i64 0, %169
  %174 = select i1 %172, i64 %111, i64 %173
  %175 = add i64 %112, %174
  %176 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %166, i64 %175) #13
  %177 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %176, i64 0, i32 0, i32 0
  %178 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %177, align 8
  %179 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %178, i64 0, i32 16, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %9, i64 0, i32 0
  store i64 %180, i64* %181, align 8
  %182 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %9, i64 %26)
  br label %183

183:                                              ; preds = %161, %165
  %184 = phi i64 [ %182, %165 ], [ 9223372036854775807, %161 ]
  br i1 %113, label %205, label %185

185:                                              ; preds = %183
  %186 = add i64 %112, -1
  %187 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %35, i64 0, i32 0
  %188 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = load i64, i64* %36, align 8
  %191 = sub i64 %189, %190
  %192 = load i64, i64* %38, align 8
  %193 = icmp ule i64 %190, %192
  %194 = icmp ult i64 %186, %191
  %195 = or i1 %193, %194
  %196 = sub i64 0, %191
  %197 = select i1 %195, i64 %190, i64 %196
  %198 = add i64 %186, %197
  %199 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %187, i64 %198) #13
  %200 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %199, i64 0, i32 0, i32 0
  %201 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %200, align 8
  %202 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %201, i64 0, i32 16, i32 0
  %203 = load i64, i64* %202, align 8
  %204 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %6, i64 %203)
  br label %205

205:                                              ; preds = %183, %185
  %206 = phi i64 [ %204, %185 ], [ 9223372036854775807, %183 ]
  %207 = icmp slt i64 %206, %184
  %208 = select i1 %207, i64 %206, i64 %184
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #13
  %209 = icmp slt i64 %208, 1000
  br i1 %209, label %210, label %214

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 13
  %212 = load i64, i64* %211, align 8
  %213 = add i64 %212, 1
  store i64 %213, i64* %211, align 8
  br label %479

214:                                              ; preds = %205
  %215 = bitcast %"class.std::__1::vector.74"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #13
  %216 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %10, i64 0, i32 0, i32 0
  %217 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %10, i64 0, i32 0, i32 1
  %218 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %219 = call i8* @_Znwm(i64 8) #15
  %220 = bitcast %"class.std::__1::vector.74"* %10 to i8**
  store i8* %219, i8** %220, align 8
  %221 = getelementptr inbounds i8, i8* %219, i64 8
  %222 = bitcast %"class.base::TimeDelta"** %218 to i8**
  store i8* %221, i8** %222, align 8
  %223 = load i64, i64* %24, align 8
  %224 = bitcast i8* %219 to i64*
  store i64 %223, i64* %224, align 8
  %225 = bitcast %"class.base::TimeDelta"** %217 to i64*
  %226 = ptrtoint i8* %221 to i64
  store i64 %226, i64* %225, align 8
  %227 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 7, i32 2
  %228 = load i64, i64* %227, align 8
  %229 = icmp eq i64 %228, 0
  %230 = icmp sgt i64 %22, 0
  %231 = and i1 %230, %229
  %232 = bitcast i8* %221 to %"class.base::TimeDelta"*
  br i1 %231, label %233, label %315

233:                                              ; preds = %214
  %234 = add nsw i64 %22, -9223372036854775807
  %235 = icmp ult i64 %234, 2
  br i1 %235, label %241, label %236

236:                                              ; preds = %233
  %237 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %223, i64 %22) #13
  %238 = extractvalue { i64, i1 } %237, 1
  %239 = extractvalue { i64, i1 } %237, 0
  %240 = select i1 %238, i64 9223372036854775807, i64 %239, !prof !3
  br label %246

241:                                              ; preds = %233
  %242 = add i64 %223, -9223372036854775807
  %243 = icmp ugt i64 %242, 1
  %244 = icmp eq i64 %223, %22
  %245 = or i1 %244, %243
  br i1 %245, label %246, label %249

246:                                              ; preds = %236, %241
  %247 = phi i64 [ 9223372036854775807, %241 ], [ %240, %236 ]
  %248 = ptrtoint i8* %221 to i64
  br label %261

249:                                              ; preds = %241
  %250 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #13
  %251 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #13
  %252 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %217, align 8
  %253 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %218, align 8
  %254 = ptrtoint %"class.base::TimeDelta"* %252 to i64
  %255 = icmp ult %"class.base::TimeDelta"* %252, %253
  %256 = ptrtoint %"class.base::TimeDelta"* %253 to i64
  br i1 %255, label %257, label %261

257:                                              ; preds = %249
  %258 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %252, i64 0, i32 0
  store i64 9223372036854775807, i64* %258, align 8
  %259 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %252, i64 1
  %260 = ptrtoint %"class.base::TimeDelta"* %259 to i64
  store i64 %260, i64* %225, align 8
  br label %315

261:                                              ; preds = %246, %249
  %262 = phi i64 [ %248, %246 ], [ %256, %249 ]
  %263 = phi i64 [ %247, %246 ], [ 9223372036854775807, %249 ]
  %264 = phi %"class.base::TimeDelta"* [ %232, %246 ], [ %252, %249 ]
  %265 = phi i64 [ %226, %246 ], [ %254, %249 ]
  %266 = ptrtoint %"class.base::TimeDelta"* %264 to i64
  %267 = bitcast %"class.std::__1::vector.74"* %10 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = sub i64 %266, %268
  %270 = ashr exact i64 %269, 3
  %271 = add nsw i64 %270, 1
  %272 = icmp ugt i64 %271, 2305843009213693951
  br i1 %272, label %273, label %275

273:                                              ; preds = %261
  %274 = bitcast %"class.std::__1::vector.74"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %274) #14
  unreachable

275:                                              ; preds = %261
  %276 = bitcast %"class.base::TimeDelta"** %218 to i64*
  %277 = sub i64 %262, %268
  %278 = ashr exact i64 %277, 3
  %279 = icmp ult i64 %278, 1152921504606846975
  br i1 %279, label %280, label %288

280:                                              ; preds = %275
  %281 = ashr exact i64 %277, 2
  %282 = icmp ult i64 %281, %271
  %283 = select i1 %282, i64 %271, i64 %281
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %293, label %285

285:                                              ; preds = %280
  %286 = icmp ugt i64 %283, 2305843009213693951
  br i1 %286, label %287, label %288

287:                                              ; preds = %285
  call void @abort() #14
  unreachable

288:                                              ; preds = %285, %275
  %289 = phi i64 [ %283, %285 ], [ 2305843009213693951, %275 ]
  %290 = shl i64 %289, 3
  %291 = call i8* @_Znwm(i64 %290) #15
  %292 = bitcast i8* %291 to %"class.base::TimeDelta"*
  br label %293

293:                                              ; preds = %288, %280
  %294 = phi i64 [ %289, %288 ], [ 0, %280 ]
  %295 = phi %"class.base::TimeDelta"* [ %292, %288 ], [ null, %280 ]
  %296 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %295, i64 %270
  %297 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %295, i64 %294
  %298 = ptrtoint %"class.base::TimeDelta"* %297 to i64
  %299 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %296, i64 0, i32 0
  store i64 %263, i64* %299, align 8
  %300 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %296, i64 1
  %301 = ptrtoint %"class.base::TimeDelta"* %300 to i64
  %302 = sub i64 %265, %268
  %303 = ashr exact i64 %302, 3
  %304 = sub nsw i64 0, %303
  %305 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %296, i64 %304
  %306 = ptrtoint %"class.base::TimeDelta"* %305 to i64
  %307 = icmp sgt i64 %302, 0
  br i1 %307, label %308, label %311

308:                                              ; preds = %293
  %309 = bitcast %"class.base::TimeDelta"* %305 to i8*
  %310 = inttoptr i64 %268 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %309, i8* align 8 %310, i64 %302, i1 false) #13
  br label %311

311:                                              ; preds = %308, %293
  store i64 %306, i64* %267, align 8
  store i64 %301, i64* %225, align 8
  store i64 %298, i64* %276, align 8
  %312 = icmp eq i64 %268, 0
  br i1 %312, label %315, label %313

313:                                              ; preds = %311
  %314 = inttoptr i64 %268 to i8*
  call void @_ZdlPv(i8* %314) #15
  br label %315

315:                                              ; preds = %313, %311, %257, %214
  %316 = bitcast %"class.std::__1::vector.88"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %316) #13
  %317 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %11, i64 0, i32 0, i32 0
  %318 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %11, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %316, i8 0, i64 24, i1 false) #13
  %319 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %320 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %319, align 8
  %321 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %320, i64 0, i32 1
  %322 = bitcast void ()** %321 to i1 (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.74"*, %"class.std::__1::vector.88"*)**
  %323 = load i1 (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.74"*, %"class.std::__1::vector.88"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.74"*, %"class.std::__1::vector.88"*)** %322, align 8
  %324 = call zeroext i1 %323(%"class.base::internal::BindStateBase"* %320, %"class.std::__1::vector.74"* nonnull dereferenceable(24) %10, %"class.std::__1::vector.88"* nonnull %11) #13
  %325 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %317, align 8
  %326 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %325, i64 0, i32 0, i32 0
  %327 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %7, i64 0, i32 1, i32 0, i32 0
  %328 = load i64, i64* %326, align 8
  store i64 %328, i64* %327, align 8
  %329 = load i64, i64* %227, align 8
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %356, label %331

331:                                              ; preds = %315
  %332 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 8, i32 0
  %333 = load i64, i64* %332, align 8
  %334 = add i64 %333, -9223372036854775807
  %335 = icmp ult i64 %334, 2
  br i1 %335, label %343, label %336

336:                                              ; preds = %331
  %337 = icmp slt i64 %333, 0
  %338 = select i1 %337, i64 -9223372036854775808, i64 9223372036854775807
  %339 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %328, i64 %333) #13
  %340 = extractvalue { i64, i1 } %339, 1
  %341 = extractvalue { i64, i1 } %339, 0
  %342 = select i1 %340, i64 %338, i64 %341, !prof !3
  br label %352

343:                                              ; preds = %331
  %344 = add i64 %328, -9223372036854775807
  %345 = icmp ugt i64 %344, 1
  %346 = icmp eq i64 %328, %333
  %347 = or i1 %346, %345
  br i1 %347, label %352, label %348

348:                                              ; preds = %343
  %349 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %349) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #13
  %350 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %349) #13
  %351 = load i64, i64* %332, align 8
  br label %352

352:                                              ; preds = %336, %343, %348
  %353 = phi i64 [ %333, %336 ], [ %333, %343 ], [ %351, %348 ]
  %354 = phi i64 [ %342, %336 ], [ %333, %343 ], [ %333, %348 ]
  %355 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %7, i64 0, i32 2, i32 0, i32 0
  store i64 %354, i64* %355, align 8
  br label %368

356:                                              ; preds = %315
  %357 = ptrtoint %"class.base::TimeTicks"* %325 to i64
  %358 = bitcast %"class.base::TimeTicks"** %318 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = sub i64 %359, %357
  %361 = ashr exact i64 %360, 3
  %362 = icmp ugt i64 %361, 1
  br i1 %362, label %363, label %368

363:                                              ; preds = %356
  %364 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %325, i64 1, i32 0, i32 0
  %365 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %7, i64 0, i32 2, i32 0, i32 0
  %366 = load i64, i64* %364, align 8
  store i64 %366, i64* %365, align 8
  %367 = sub nsw i64 %366, %328
  br label %368

368:                                              ; preds = %356, %363, %352
  %369 = phi i64 [ %367, %363 ], [ 0, %356 ], [ %353, %352 ]
  %370 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %7, i64 0, i32 0, i32 0
  %371 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %370, align 8
  %372 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %371, i64 0, i32 19, i32 31, i32 0, i32 0, i32 0, i32 0
  %373 = load i8, i8* %372, align 8, !range !2
  %374 = icmp eq i8 %373, 0
  %375 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %371, i64 0, i32 19, i32 31, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %369, i64* %375, align 8
  br i1 %374, label %376, label %377

376:                                              ; preds = %368
  store i8 1, i8* %372, align 8
  br label %377

377:                                              ; preds = %368, %376
  %378 = load i64, i64* %38, align 8
  %379 = icmp eq i64 %110, %378
  br i1 %379, label %400, label %380

380:                                              ; preds = %377
  %381 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 1
  %382 = load i32, i32* %381, align 8
  %383 = icmp slt i32 %382, 10
  br i1 %383, label %384, label %400

384:                                              ; preds = %380
  %385 = add nsw i32 %382, 1
  store i32 %385, i32* %381, align 8
  %386 = bitcast %"class.media::LogHelper"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %386) #13
  %387 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 0
  %388 = load %"class.media::MediaLog"*, %"class.media::MediaLog"** %387, align 8
  call void @_ZN5media9LogHelperC1ENS_20MediaLogMessageLevelEPNS_8MediaLogE(%"class.media::LogHelper"* nonnull %12, i32 2, %"class.media::MediaLog"* %388) #13
  %389 = getelementptr inbounds %"class.media::LogHelper", %"class.media::LogHelper"* %12, i64 0, i32 2, i32 0, i32 1
  %390 = bitcast %"class.std::__1::basic_ostream.base"* %389 to %"class.std::__1::basic_ostream"*
  %391 = load i32, i32* %381, align 8
  %392 = icmp eq i32 %391, 10
  %393 = select i1 %392, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)
  %394 = select i1 %392, i64 64, i64 0
  %395 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %390, i8* %393, i64 %394) #13
  %396 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %395, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), i64 29) #13
  %397 = load i64, i64* %24, align 8
  %398 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_ostream"* dereferenceable(160) %396, i64 %397) #13
  %399 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %398, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i64 17) #13
  call void @_ZN5media9LogHelperD1Ev(%"class.media::LogHelper"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %386) #13
  br label %400

400:                                              ; preds = %377, %384, %380
  %401 = call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE7emplaceIJRKS3_EEENS_8internal23circular_deque_iteratorIS3_EENS8_29circular_deque_const_iteratorIS3_EEDpOT_(%"class.base::circular_deque"* %35, %"class.base::circular_deque"* %35, i64 %110, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* nonnull dereferenceable(40) %7) #13
  %402 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 0
  %403 = load i8, i8* %402, align 8, !range !2
  %404 = icmp eq i8 %403, 0
  br i1 %404, label %409, label %405

405:                                              ; preds = %400
  %406 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  %407 = load i8, i8* %406, align 8, !range !2
  %408 = icmp eq i8 %407, 0
  br i1 %408, label %416, label %415

409:                                              ; preds = %400
  %410 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %411 = load i32*, i32** %410, align 8
  %412 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %413 = load i32*, i32** %412, align 8
  %414 = icmp eq i32* %411, %413
  br i1 %414, label %416, label %415

415:                                              ; preds = %409, %405
  call void @_ZN5media22VideoRendererAlgorithm22UpdateCadenceForFramesEv(%"class.media::VideoRendererAlgorithm"* %0)
  br label %416

416:                                              ; preds = %409, %405, %415
  %417 = load i64, i64* %36, align 8
  %418 = load i64, i64* %38, align 8
  %419 = icmp eq i64 %418, %417
  br i1 %419, label %428, label %420

420:                                              ; preds = %416
  %421 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 8, i32 0
  %422 = load i64, i64* %421, align 8
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %428, label %424

424:                                              ; preds = %420
  %425 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 6, i32 0, i32 0
  %426 = load i64, i64* %425, align 8
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %437

428:                                              ; preds = %424, %420, %416
  %429 = icmp ult i64 %418, %417
  br i1 %429, label %432, label %430

430:                                              ; preds = %428
  %431 = sub i64 %418, %417
  br label %463

432:                                              ; preds = %428
  %433 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %434 = load i64, i64* %433, align 8
  %435 = sub i64 %418, %417
  %436 = add i64 %435, %434
  br label %463

437:                                              ; preds = %424
  %438 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 12
  %439 = load i8, i8* %438, align 1, !range !2
  %440 = icmp eq i8 %439, 0
  br i1 %440, label %458, label %441

441:                                              ; preds = %437
  %442 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  %443 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  br label %444

444:                                              ; preds = %444, %441
  %445 = phi i64 [ 0, %441 ], [ %452, %444 ]
  %446 = phi i64 [ %417, %441 ], [ %456, %444 ]
  %447 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %442, i64 %446) #13
  %448 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %447, i64 0, i32 5
  %449 = load i32, i32* %448, align 8
  %450 = icmp eq i32 %449, 0
  %451 = zext i1 %450 to i64
  %452 = add nuw nsw i64 %445, %451
  %453 = add i64 %446, 1
  %454 = load i64, i64* %443, align 8
  %455 = icmp eq i64 %453, %454
  %456 = select i1 %455, i64 0, i64 %453
  %457 = icmp eq i64 %456, %418
  br i1 %457, label %458, label %444

458:                                              ; preds = %444, %437
  %459 = phi i64 [ 0, %437 ], [ %452, %444 ]
  %460 = call i64 @_ZNK5media22VideoRendererAlgorithm26CountEffectiveFramesQueuedEv(%"class.media::VideoRendererAlgorithm"* %0) #13
  %461 = icmp ult i64 %459, %460
  %462 = select i1 %461, i64 %460, i64 %459
  br label %463

463:                                              ; preds = %430, %432, %458
  %464 = phi i64 [ %462, %458 ], [ %431, %430 ], [ %436, %432 ]
  %465 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 17
  store i64 %464, i64* %465, align 8
  %466 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %317, align 8
  %467 = icmp eq %"class.base::TimeTicks"* %466, null
  br i1 %467, label %472, label %468

468:                                              ; preds = %463
  %469 = ptrtoint %"class.base::TimeTicks"* %466 to i64
  %470 = bitcast %"class.base::TimeTicks"** %318 to i64*
  store i64 %469, i64* %470, align 8
  %471 = bitcast %"class.base::TimeTicks"* %466 to i8*
  call void @_ZdlPv(i8* %471) #15
  br label %472

472:                                              ; preds = %463, %468
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %316) #13
  %473 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %216, align 8
  %474 = icmp eq %"class.base::TimeDelta"* %473, null
  br i1 %474, label %478, label %475

475:                                              ; preds = %472
  %476 = ptrtoint %"class.base::TimeDelta"* %473 to i64
  store i64 %476, i64* %225, align 8
  %477 = bitcast %"class.base::TimeDelta"* %473 to i8*
  call void @_ZdlPv(i8* %477) #15
  br label %478

478:                                              ; preds = %472, %475
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #13
  br label %479

479:                                              ; preds = %210, %478, %147
  %480 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %7, i64 0, i32 0, i32 0
  %481 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %480, align 8
  %482 = icmp eq %"class.media::VideoFrame"* %481, null
  br i1 %482, label %495, label %483

483:                                              ; preds = %479
  %484 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %481, i64 0, i32 1
  %485 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %484, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = atomicrmw sub i32* %485, i32 1 acq_rel
  %487 = icmp eq i32 %486, 1
  br i1 %487, label %488, label %495

488:                                              ; preds = %483
  %489 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %484, i64 -2
  %490 = bitcast %"class.base::RefCountedThreadSafe"* %489 to %"class.media::VideoFrame"*
  %491 = bitcast %"class.base::RefCountedThreadSafe"* %489 to void (%"class.media::VideoFrame"*)***
  %492 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %491, align 8
  %493 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %492, i64 1
  %494 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %493, align 8
  call void %494(%"class.media::VideoFrame"* nonnull %490) #13
  br label %495

495:                                              ; preds = %488, %483, %479
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_ostream"* dereferenceable(160), i64) local_unnamed_addr #3

declare void @_ZN5media9LogHelperC1ENS_20MediaLogMessageLevelEPNS_8MediaLogE(%"class.media::LogHelper"*, i32, %"class.media::MediaLog"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5media9LogHelperD1Ev(%"class.media::LogHelper"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #13
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !3
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #13
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %26, i8* %27) #13
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDelta6IntDivES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  br i1 %8, label %20, label %9

9:                                                ; preds = %2
  %10 = icmp eq i64 %1, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  %12 = sdiv i64 %6, %1
  br label %38

13:                                               ; preds = %9
  %14 = icmp eq i64 %6, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %13
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 313, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0)) #13
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %18 = load i64, i64* %5, align 8
  %19 = add i64 %18, -9223372036854775807
  br label %20

20:                                               ; preds = %2, %13, %15
  %21 = phi i64 [ %7, %2 ], [ %7, %13 ], [ %19, %15 ]
  %22 = phi i64 [ %6, %2 ], [ %6, %13 ], [ %18, %15 ]
  %23 = add i64 %1, -9223372036854775807
  %24 = or i64 %21, %23
  %25 = icmp ult i64 %24, 2
  br i1 %25, label %26, label %30

26:                                               ; preds = %20
  %27 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 314, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0)) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  %29 = load i64, i64* %5, align 8
  br label %30

30:                                               ; preds = %20, %26
  %31 = phi i64 [ %22, %20 ], [ %29, %26 ]
  %32 = lshr i64 %31, 63
  %33 = trunc i64 %32 to i32
  %34 = lshr i64 %1, 63
  %35 = trunc i64 %34 to i32
  %36 = icmp eq i32 %33, %35
  %37 = select i1 %36, i64 9223372036854775807, i64 -9223372036854775808
  br label %38

38:                                               ; preds = %30, %11
  %39 = phi i64 [ %37, %30 ], [ %12, %11 ]
  ret i64 %39
}

declare void @_ZN5media13MovingAverage9AddSampleEN4base9TimeDeltaE(%"class.media::MovingAverage"*, i64) local_unnamed_addr #3

declare i64 @_ZNK5media13MovingAverage7AverageEv(%"class.media::MovingAverage"*) local_unnamed_addr #3

declare i64 @_ZNK5media13MovingAverage9DeviationEv(%"class.media::MovingAverage"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5media21VideoCadenceEstimator21UpdateCadenceEstimateEN4base9TimeDeltaES2_S2_S2_(%"class.media::VideoCadenceEstimator"*, i64, i64, i64, i64) local_unnamed_addr #3

declare i32 @_ZNK5media21VideoCadenceEstimator18GetCadenceForFrameEm(%"class.media::VideoCadenceEstimator"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5media22VideoRendererAlgorithm26CountEffectiveFramesQueuedEv(%"class.media::VideoRendererAlgorithm"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK5media22VideoRendererAlgorithm18FindFirstGoodFrameEv(%"class.media::VideoRendererAlgorithm"* %0)
  %3 = icmp slt i32 %2, 0
  br i1 %3, label %72, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %35

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %14, %16
  br i1 %17, label %18, label %35

18:                                               ; preds = %12, %8
  %19 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, %20
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  %25 = sub i64 %22, %20
  br label %31

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %22, %20
  %30 = add i64 %29, %28
  br label %31

31:                                               ; preds = %24, %26
  %32 = phi i64 [ %25, %24 ], [ %30, %26 ]
  %33 = sext i32 %2 to i64
  %34 = sub i64 %32, %33
  br label %72

35:                                               ; preds = %12, %8
  %36 = sext i32 %2 to i64
  %37 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 1
  %38 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 2
  %39 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0, i32 1
  %40 = getelementptr inbounds %"class.media::VideoRendererAlgorithm", %"class.media::VideoRendererAlgorithm"* %0, i64 0, i32 2, i32 0
  br label %41

41:                                               ; preds = %56, %35
  %42 = phi i64 [ 0, %35 ], [ %70, %56 ]
  %43 = phi i64 [ %36, %35 ], [ %71, %56 ]
  %44 = load i64, i64* %37, align 8
  %45 = load i64, i64* %38, align 8
  %46 = icmp ult i64 %45, %44
  br i1 %46, label %49, label %47

47:                                               ; preds = %41
  %48 = sub i64 %45, %44
  br label %53

49:                                               ; preds = %41
  %50 = load i64, i64* %39, align 8
  %51 = sub i64 %45, %44
  %52 = add i64 %51, %50
  br label %53

53:                                               ; preds = %47, %49
  %54 = phi i64 [ %48, %47 ], [ %52, %49 ]
  %55 = icmp ult i64 %43, %54
  br i1 %55, label %56, label %72

56:                                               ; preds = %53
  %57 = load i64, i64* %39, align 8
  %58 = sub i64 %57, %44
  %59 = icmp uge i64 %45, %44
  %60 = icmp ult i64 %43, %58
  %61 = or i1 %59, %60
  %62 = sub i64 0, %58
  %63 = select i1 %61, i64 %44, i64 %62
  %64 = add i64 %43, %63
  %65 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %40, i64 %64) #13
  %66 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %65, i64 0, i32 4
  %67 = load i32, i32* %66, align 4
  %68 = icmp ne i32 %67, 0
  %69 = zext i1 %68 to i64
  %70 = add i64 %42, %69
  %71 = add nuw i64 %43, 1
  br label %41

72:                                               ; preds = %53, %1, %31
  %73 = phi i64 [ %34, %31 ], [ 0, %1 ], [ %42, %53 ]
  ret i64 %73
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #6

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %7, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %8, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %12)
  %13 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"struct.media::VideoRendererAlgorithm::ReadyFrame"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %7, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %15, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, align 8
  %6 = alloca %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %1, %"struct.media::VideoRendererAlgorithm::ReadyFrame"** %5, align 8
  store %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %2, %"struct.media::VideoRendererAlgorithm::ReadyFrame"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"struct.media::VideoRendererAlgorithm::ReadyFrame"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5media22VideoRendererAlgorithm10ReadyFrameEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %17 = bitcast %"struct.media::VideoRendererAlgorithm::ReadyFrame"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5media22VideoRendererAlgorithm10ReadyFrameEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %26 = load %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"** %5, align 8
  %27 = load %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"** %6, align 8
  %28 = icmp eq %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %26, %27
  br i1 %28, label %51, label %29

29:                                               ; preds = %25, %46
  %30 = phi %"struct.media::VideoRendererAlgorithm::ReadyFrame"* [ %48, %46 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %31, align 8
  %33 = icmp eq %"class.media::VideoFrame"* %32, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %32, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %35, i64 -2
  %41 = bitcast %"class.base::RefCountedThreadSafe"* %40 to %"class.media::VideoFrame"*
  %42 = bitcast %"class.base::RefCountedThreadSafe"* %40 to void (%"class.media::VideoFrame"*)***
  %43 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %43, i64 1
  %45 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %44, align 8
  call void %45(%"class.media::VideoFrame"* nonnull %41) #13
  br label %46

46:                                               ; preds = %29, %34, %39
  %47 = load %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"** %5, align 8
  %48 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %47, i64 1
  store %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %48, %"struct.media::VideoRendererAlgorithm::ReadyFrame"** %5, align 8
  %49 = load %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"** %6, align 8
  %50 = icmp eq %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %48, %49
  br i1 %50, label %51, label %29

51:                                               ; preds = %46, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"** %23, align 8
  %25 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %24, i64 %1
  ret %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %25
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN5media22VideoRendererAlgorithm10ReadyFrameEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #10 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %0 to i64
  %6 = icmp ult %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %2, %1
  br i1 %6, label %7, label %23

7:                                                ; preds = %3
  %8 = ptrtoint %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %2 to i64
  %9 = ptrtoint %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #13
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #13
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !3

16:                                               ; preds = %7
  tail call void @llvm.trap() #13
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %3, %17, %20
  %24 = icmp eq %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %0, %1
  br i1 %24, label %58, label %25

25:                                               ; preds = %23, %54
  %26 = phi %"struct.media::VideoRendererAlgorithm::ReadyFrame"* [ %56, %54 ], [ %2, %23 ]
  %27 = phi %"struct.media::VideoRendererAlgorithm::ReadyFrame"* [ %55, %54 ], [ %0, %23 ]
  %28 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %28, align 8
  %30 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %26, i64 0, i32 0, i32 0
  store %"class.media::VideoFrame"* %29, %"class.media::VideoFrame"** %30, align 8
  %31 = icmp eq %"class.media::VideoFrame"* %29, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  br label %35

35:                                               ; preds = %25, %32
  %36 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %26, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %27, i64 0, i32 1
  %38 = bitcast %"class.base::TimeTicks"* %36 to i8*
  %39 = bitcast %"class.base::TimeTicks"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 32, i1 false) #13
  %40 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %28, align 8
  %41 = icmp eq %"class.media::VideoFrame"* %40, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %40, i64 0, i32 1
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %54

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %43, i64 -2
  %49 = bitcast %"class.base::RefCountedThreadSafe"* %48 to %"class.media::VideoFrame"*
  %50 = bitcast %"class.base::RefCountedThreadSafe"* %48 to void (%"class.media::VideoFrame"*)***
  %51 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %51, i64 1
  %53 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %52, align 8
  call void %53(%"class.media::VideoFrame"* nonnull %49) #13
  br label %54

54:                                               ; preds = %35, %42, %47
  %55 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %27, i64 1
  %56 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %26, i64 1
  %57 = icmp eq %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %55, %1
  br i1 %57, label %58, label %25

58:                                               ; preds = %54, %23
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZNK4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"** %23, align 8
  %25 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %24, i64 %1
  ret %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %25
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE7emplaceIJRKS3_EEENS_8internal23circular_deque_iteratorIS3_EENS8_29circular_deque_const_iteratorIS3_EEDpOT_(%"class.base::circular_deque"*, %"class.base::circular_deque"*, i64, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.base::internal::circular_deque_iterator", align 8
  %6 = alloca %"class.base::internal::circular_deque_iterator", align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, %2
  br i1 %9, label %10, label %36

10:                                               ; preds = %4
  tail call void @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 1) #13
  %11 = load i64, i64* %7, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %13, %10
  %17 = phi i64 [ %15, %13 ], [ %11, %10 ]
  %18 = add i64 %17, -1
  store i64 %18, i64* %7, align 8
  %19 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %20 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %19, i64 %18) #13
  %21 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %3, i64 0, i32 0, i32 0
  %22 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %21, align 8
  %23 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %20, i64 0, i32 0, i32 0
  store %"class.media::VideoFrame"* %22, %"class.media::VideoFrame"** %23, align 8
  %24 = icmp eq %"class.media::VideoFrame"* %22, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %16, %25
  %29 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %20, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %3, i64 0, i32 1
  %31 = bitcast %"class.base::TimeTicks"* %29 to i8*
  %32 = bitcast %"class.base::TimeTicks"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 32, i1 false) #13
  %33 = load i64, i64* %7, align 8
  %34 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %19, i64 %33) #13
  %35 = load i64, i64* %7, align 8
  br label %58

36:                                               ; preds = %4
  %37 = bitcast %"class.base::internal::circular_deque_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  %38 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %5, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %5, i64 0, i32 0, i32 1
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %38, align 8
  store i64 %2, i64* %39, align 8
  %40 = bitcast %"class.base::internal::circular_deque_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false) #13
  call void @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIS3_EES8_(%"class.base::circular_deque"* %0, i64 1, %"class.base::internal::circular_deque_iterator"* nonnull %5, %"class.base::internal::circular_deque_iterator"* nonnull %6)
  %41 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %42 = load i64, i64* %39, align 8
  %43 = call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %41, i64 %42)
  %44 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %3, i64 0, i32 0, i32 0
  %45 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %44, align 8
  %46 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %43, i64 0, i32 0, i32 0
  store %"class.media::VideoFrame"* %45, %"class.media::VideoFrame"** %46, align 8
  %47 = icmp eq %"class.media::VideoFrame"* %45, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic
  br label %51

51:                                               ; preds = %36, %48
  %52 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %43, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.media::VideoRendererAlgorithm::ReadyFrame", %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %3, i64 0, i32 1
  %54 = bitcast %"class.base::TimeTicks"* %52 to i8*
  %55 = bitcast %"class.base::TimeTicks"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 32, i1 false) #13
  %56 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %38, align 8
  %57 = load i64, i64* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  br label %58

58:                                               ; preds = %51, %28
  %59 = phi %"class.base::circular_deque"* [ %0, %28 ], [ %56, %51 ]
  %60 = phi i64 [ %35, %28 ], [ %57, %51 ]
  %61 = insertvalue { %"class.base::circular_deque"*, i64 } undef, %"class.base::circular_deque"* %59, 0
  %62 = insertvalue { %"class.base::circular_deque"*, i64 } %61, i64 %60, 1
  ret { %"class.base::circular_deque"*, i64 } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIS3_EES8_(%"class.base::circular_deque"*, i64, %"class.base::internal::circular_deque_iterator"*, %"class.base::internal::circular_deque_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = bitcast %"class.base::internal::circular_deque_iterator"* %3 to i8*
  %8 = bitcast %"class.base::internal::circular_deque_iterator"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  br label %65

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %2, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %12, align 8
  %14 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %13, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %11, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %9
  %18 = sub i64 %11, %15
  br label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %13, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %11, %15
  %23 = add i64 %22, %21
  br label %24

24:                                               ; preds = %17, %19
  %25 = phi i64 [ %18, %17 ], [ %23, %19 ]
  tail call void @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 %1)
  %26 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, %25
  %29 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %30 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = urem i64 %28, %31
  store i64 %32, i64* %10, align 8
  %33 = add i64 %32, %1
  %34 = load i64, i64* %30, align 8
  %35 = urem i64 %33, %34
  %36 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %3, i64 0, i32 0, i32 0
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %36, align 8
  %37 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %3, i64 0, i32 0, i32 1
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %1
  %41 = load i64, i64* %30, align 8
  %42 = urem i64 %40, %41
  store i64 %42, i64* %38, align 8
  %43 = load i64, i64* %10, align 8
  %44 = icmp eq i64 %39, %43
  br i1 %44, label %65, label %45

45:                                               ; preds = %24, %57
  %46 = phi i64 [ %59, %57 ], [ %42, %24 ]
  %47 = phi i64 [ %53, %57 ], [ %39, %24 ]
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = load i64, i64* %30, align 8
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i64 [ %50, %49 ], [ %47, %45 ]
  %53 = add i64 %52, -1
  %54 = icmp eq i64 %46, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = load i64, i64* %30, align 8
  br label %57

57:                                               ; preds = %51, %55
  %58 = phi i64 [ %56, %55 ], [ %46, %51 ]
  %59 = add i64 %58, -1
  %60 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %53)
  %61 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %52)
  %62 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %29, i64 %59)
  tail call void @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::VideoRendererAlgorithm::ReadyFrame"* %60, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %61, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %62)
  %63 = load i64, i64* %10, align 8
  %64 = icmp eq i64 %53, %63
  br i1 %64, label %65, label %45

65:                                               ; preds = %57, %24, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 40) #13
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #13
  br i1 %37, label %38, label %39, !prof !3

38:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #13
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #13
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #13
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media22VideoRendererAlgorithm10ReadyFrameEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::VideoRendererAlgorithm::ReadyFrame"* %11, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %12, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, %"struct.media::VideoRendererAlgorithm::ReadyFrame"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::VideoRendererAlgorithm::ReadyFrame"* %19, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %20, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(40) %"struct.media::VideoRendererAlgorithm::ReadyFrame"* @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIN5media22VideoRendererAlgorithm10ReadyFrameEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::VideoRendererAlgorithm::ReadyFrame"* %24, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %25, %"struct.media::VideoRendererAlgorithm::ReadyFrame"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
