; ModuleID = '../../content/browser/webauth/webauth_request_security_checker.cc'
source_filename = "../../content/browser/webauth/webauth_request_security_checker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.content::WebAuthRequestSecurityChecker" = type { i32 (...)**, %"class.base::RefCounted", %"class.content::RenderFrameHost"* }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.GURL* }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN7content29WebAuthRequestSecurityCheckerE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::WebAuthRequestSecurityChecker"*)* @_ZN7content29WebAuthRequestSecurityCheckerD2Ev to i8*), i8* bitcast (void (%"class.content::WebAuthRequestSecurityChecker"*)* @_ZN7content29WebAuthRequestSecurityCheckerD0Ev to i8*)] }, align 8
@_ZN7content12_GLOBAL__N_118kCryptotokenOriginE = internal constant [52 x i8] c"chrome-extension://kmendfapggjehodndflmmgagdbamhnfd\00", align 16
@_ZN8features26kSecurePaymentConfirmationE = external global %"struct.base::Feature", align 8
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1

@_ZN7content29WebAuthRequestSecurityCheckerC1EPNS_15RenderFrameHostE = hidden unnamed_addr alias void (%"class.content::WebAuthRequestSecurityChecker"*, %"class.content::RenderFrameHost"*), void (%"class.content::WebAuthRequestSecurityChecker"*, %"class.content::RenderFrameHost"*)* @_ZN7content29WebAuthRequestSecurityCheckerC2EPNS_15RenderFrameHostE
@_ZN7content29WebAuthRequestSecurityCheckerD1Ev = hidden unnamed_addr alias void (%"class.content::WebAuthRequestSecurityChecker"*), void (%"class.content::WebAuthRequestSecurityChecker"*)* @_ZN7content29WebAuthRequestSecurityCheckerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content29WebAuthRequestSecurityCheckerC2EPNS_15RenderFrameHostE(%"class.content::WebAuthRequestSecurityChecker"* nocapture, %"class.content::RenderFrameHost"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::WebAuthRequestSecurityChecker", %"class.content::WebAuthRequestSecurityChecker"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.content::WebAuthRequestSecurityChecker", %"class.content::WebAuthRequestSecurityChecker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7content29WebAuthRequestSecurityCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.content::WebAuthRequestSecurityChecker", %"class.content::WebAuthRequestSecurityChecker"* %0, i64 0, i32 2
  store %"class.content::RenderFrameHost"* %1, %"class.content::RenderFrameHost"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content29WebAuthRequestSecurityCheckerD2Ev(%"class.content::WebAuthRequestSecurityChecker"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content29WebAuthRequestSecurityCheckerD0Ev(%"class.content::WebAuthRequestSecurityChecker"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.content::WebAuthRequestSecurityChecker"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content29WebAuthRequestSecurityChecker28OriginIsCryptoTokenExtensionERKN3url6OriginE(%"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.url::Origin", align 8
  %3 = alloca %class.GURL, align 8
  %4 = bitcast %"class.url::Origin"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 80, i1 false)
  %5 = bitcast %class.GURL* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %5) #10
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @_ZN7content12_GLOBAL__N_118kCryptotokenOriginE, i64 0, i64 0), i64 51) #10
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %2, %class.GURL* nonnull dereferenceable(120) %3) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %5) #10
  %6 = call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* nonnull %2, %"class.url::Origin"* dereferenceable(80) %0) #10
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %4) #10
  ret i1 %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #5

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content29WebAuthRequestSecurityChecker25IsSameOriginWithAncestorsERKN3url6OriginE(%"class.content::WebAuthRequestSecurityChecker"* nocapture readonly, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.content::WebAuthRequestSecurityChecker", %"class.content::WebAuthRequestSecurityChecker"* %0, i64 0, i32 2
  %4 = load %"class.content::RenderFrameHost"*, %"class.content::RenderFrameHost"** %3, align 8
  %5 = bitcast %"class.content::RenderFrameHost"* %4 to %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)***
  %6 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %6, i64 20
  %8 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %7, align 8
  %9 = tail call %"class.content::RenderFrameHost"* %8(%"class.content::RenderFrameHost"* %4) #10
  %10 = icmp eq %"class.content::RenderFrameHost"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %2, %19
  %12 = phi %"class.content::RenderFrameHost"* [ %24, %19 ], [ %9, %2 ]
  %13 = bitcast %"class.content::RenderFrameHost"* %12 to %"class.url::Origin"* (%"class.content::RenderFrameHost"*)***
  %14 = load %"class.url::Origin"* (%"class.content::RenderFrameHost"*)**, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)** %14, i64 36
  %16 = load %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)** %15, align 8
  %17 = tail call dereferenceable(80) %"class.url::Origin"* %16(%"class.content::RenderFrameHost"* nonnull %12) #10
  %18 = tail call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* %17, %"class.url::Origin"* dereferenceable(80) %1) #10
  br i1 %18, label %19, label %26

19:                                               ; preds = %11
  %20 = bitcast %"class.content::RenderFrameHost"* %12 to %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)***
  %21 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %21, i64 20
  %23 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %22, align 8
  %24 = tail call %"class.content::RenderFrameHost"* %23(%"class.content::RenderFrameHost"* nonnull %12) #10
  %25 = icmp eq %"class.content::RenderFrameHost"* %24, null
  br i1 %25, label %26, label %11

26:                                               ; preds = %11, %19, %2
  %27 = phi i1 [ true, %2 ], [ true, %19 ], [ false, %11 ]
  ret i1 %27
}

declare zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content29WebAuthRequestSecurityChecker23ValidateAncestorOriginsERKN3url6OriginENS0_11RequestTypeEPb(%"class.content::WebAuthRequestSecurityChecker"* nocapture readonly, %"class.url::Origin"* dereferenceable(80), i32, i8* nocapture) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.content::WebAuthRequestSecurityChecker", %"class.content::WebAuthRequestSecurityChecker"* %0, i64 0, i32 2
  %6 = load %"class.content::RenderFrameHost"*, %"class.content::RenderFrameHost"** %5, align 8
  %7 = bitcast %"class.content::RenderFrameHost"* %6 to %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)***
  %8 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %8, i64 20
  %10 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %9, align 8
  %11 = tail call %"class.content::RenderFrameHost"* %10(%"class.content::RenderFrameHost"* %6) #10
  %12 = icmp eq %"class.content::RenderFrameHost"* %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %4, %21
  %14 = phi %"class.content::RenderFrameHost"* [ %26, %21 ], [ %11, %4 ]
  %15 = bitcast %"class.content::RenderFrameHost"* %14 to %"class.url::Origin"* (%"class.content::RenderFrameHost"*)***
  %16 = load %"class.url::Origin"* (%"class.content::RenderFrameHost"*)**, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)** %16, i64 36
  %18 = load %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)** %17, align 8
  %19 = tail call dereferenceable(80) %"class.url::Origin"* %18(%"class.content::RenderFrameHost"* nonnull %14) #10
  %20 = tail call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* %19, %"class.url::Origin"* dereferenceable(80) %1) #10
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = bitcast %"class.content::RenderFrameHost"* %14 to %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)***
  %23 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %23, i64 20
  %25 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %24, align 8
  %26 = tail call %"class.content::RenderFrameHost"* %25(%"class.content::RenderFrameHost"* nonnull %14) #10
  %27 = icmp eq %"class.content::RenderFrameHost"* %26, null
  br i1 %27, label %28, label %13

28:                                               ; preds = %13, %21, %4
  %29 = phi i8 [ 0, %4 ], [ 1, %13 ], [ 0, %21 ]
  store i8 %29, i8* %3, align 1
  switch i32 %2, label %48 [
    i32 2, label %30
    i32 1, label %37
  ]

30:                                               ; preds = %28
  %31 = load %"class.content::RenderFrameHost"*, %"class.content::RenderFrameHost"** %5, align 8
  %32 = bitcast %"class.content::RenderFrameHost"* %31 to i1 (%"class.content::RenderFrameHost"*, i32)***
  %33 = load i1 (%"class.content::RenderFrameHost"*, i32)**, i1 (%"class.content::RenderFrameHost"*, i32)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.content::RenderFrameHost"*, i32)*, i1 (%"class.content::RenderFrameHost"*, i32)** %33, i64 72
  %35 = load i1 (%"class.content::RenderFrameHost"*, i32)*, i1 (%"class.content::RenderFrameHost"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.content::RenderFrameHost"* %31, i32 67) #10
  br i1 %36, label %51, label %46

37:                                               ; preds = %28
  %38 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features26kSecurePaymentConfirmationE) #10
  br i1 %38, label %39, label %46

39:                                               ; preds = %37
  %40 = load %"class.content::RenderFrameHost"*, %"class.content::RenderFrameHost"** %5, align 8
  %41 = bitcast %"class.content::RenderFrameHost"* %40 to i1 (%"class.content::RenderFrameHost"*, i32)***
  %42 = load i1 (%"class.content::RenderFrameHost"*, i32)**, i1 (%"class.content::RenderFrameHost"*, i32)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.content::RenderFrameHost"*, i32)*, i1 (%"class.content::RenderFrameHost"*, i32)** %42, i64 72
  %44 = load i1 (%"class.content::RenderFrameHost"*, i32)*, i1 (%"class.content::RenderFrameHost"*, i32)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.content::RenderFrameHost"* %40, i32 8) #10
  br i1 %45, label %51, label %46

46:                                               ; preds = %37, %39, %30
  %47 = load i8, i8* %3, align 1
  br label %48

48:                                               ; preds = %46, %28
  %49 = phi i8 [ %47, %46 ], [ %29, %28 ]
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48, %39, %30
  br label %52

52:                                               ; preds = %48, %51
  %53 = phi i32 [ 0, %51 ], [ 2, %48 ]
  ret i32 %53
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content29WebAuthRequestSecurityChecker31ValidateDomainAndRelyingPartyIDERKN3url6OriginERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.content::WebAuthRequestSecurityChecker"* nocapture readnone, %"class.url::Origin"* dereferenceable(80), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.url::Origin", align 8
  %5 = alloca %class.GURL, align 8
  %6 = alloca %"class.url::Origin", align 8
  %7 = alloca %class.GURL, align 8
  %8 = alloca %class.GURL, align 8
  %9 = alloca %"class.url::Origin", align 8
  %10 = alloca %"class.absl::optional.5", align 8
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* nonnull %9, %"class.url::Origin"* dereferenceable(80) %1) #10
  %11 = bitcast %"class.url::Origin"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 80, i1 false) #10
  %12 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %12) #10
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %7, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @_ZN7content12_GLOBAL__N_118kCryptotokenOriginE, i64 0, i64 0), i64 51) #10
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %6, %class.GURL* nonnull dereferenceable(120) %7) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %12) #10
  %13 = call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* nonnull %6, %"class.url::Origin"* nonnull dereferenceable(80) %9) #10
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11) #10
  br i1 %13, label %82, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %80

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %9, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %22 to i64
  %31 = select i1 %23, i64 %29, i64 %30
  %32 = call zeroext i1 @_ZN3url15HostIsIPAddressEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %27, i64 %31) #10
  br i1 %32, label %80, label %33

33:                                               ; preds = %18
  %34 = bitcast %class.GURL* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %34) #10
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %8, %"class.url::Origin"* nonnull %9) #10
  %35 = call zeroext i1 @_ZN7network27IsUrlPotentiallyTrustworthyERK4GURL(%class.GURL* nonnull dereferenceable(120) %8) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %34) #10
  br i1 %35, label %36, label %80

36:                                               ; preds = %33
  %37 = load i8, i8* %15, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %9, i64 0, i32 0, i32 0
  br label %43

41:                                               ; preds = %36
  %42 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #10
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi %"class.std::__1::basic_string"* [ %40, %39 ], [ %42, %41 ]
  %45 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #10
  %46 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %48 to i64
  %53 = select i1 %49, i64 %51, i64 %52
  %54 = icmp eq i64 %45, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %43
  %56 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %44, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i64 %45) #10
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %82, label %58

58:                                               ; preds = %55, %43
  %59 = load i8, i8* %15, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %9, i64 0, i32 0, i32 0
  br label %65

63:                                               ; preds = %58
  %64 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #10
  br label %65

65:                                               ; preds = %63, %61
  %66 = phi %"class.std::__1::basic_string"* [ %62, %61 ], [ %64, %63 ]
  %67 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #10
  %68 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = zext i8 %70 to i64
  %75 = select i1 %71, i64 %73, i64 %74
  %76 = icmp eq i64 %67, %75
  br i1 %76, label %77, label %80

77:                                               ; preds = %65
  %78 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %66, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %67) #10
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %14, %33, %77, %18, %65
  %81 = phi i32 [ 17, %65 ], [ 3, %18 ], [ 17, %77 ], [ 3, %33 ], [ 16, %14 ]
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %9) #10
  br label %249

82:                                               ; preds = %55, %77, %3
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %9) #10
  %83 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 32, i1 false)
  %84 = bitcast %"class.url::Origin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %84) #10, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 80, i1 false) #10, !noalias !3
  %85 = bitcast %class.GURL* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %85) #10, !noalias !3
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %5, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @_ZN7content12_GLOBAL__N_118kCryptotokenOriginE, i64 0, i64 0), i64 51) #10, !noalias !3
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %4, %class.GURL* nonnull dereferenceable(120) %5) #10, !noalias !3
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %85) #10, !noalias !3
  %86 = call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* nonnull %4, %"class.url::Origin"* dereferenceable(80) %1) #10, !noalias !3
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %4) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %84) #10, !noalias !3
  br i1 %86, label %87, label %101

87:                                               ; preds = %82
  store i8 1, i8* %83, align 8, !alias.scope !3
  %88 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1, !noalias !3
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %87
  %94 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  %95 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 24, i1 false) #10
  br label %234

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8, !noalias !3
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8, !noalias !3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %88, i8* %98, i64 %100) #10
  br label %234

101:                                              ; preds = %82
  %102 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1, !noalias !3
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8, !noalias !3
  %108 = zext i8 %104 to i64
  %109 = select i1 %105, i64 %107, i64 %108
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %101
  store i8 0, i8* %83, align 8, !alias.scope !3
  %112 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %113 = bitcast %union.anon.9* %112 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 24, i1 false) #10, !alias.scope !3
  br label %247

114:                                              ; preds = %101
  %115 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %116 = load i8, i8* %115, align 8, !range !2, !noalias !3
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1
  br label %125

120:                                              ; preds = %114
  %121 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #10
  %122 = load i8, i8* %103, align 1, !noalias !3
  %123 = load i64, i64* %106, align 8, !noalias !3
  %124 = zext i8 %122 to i64
  br label %125

125:                                              ; preds = %120, %118
  %126 = phi i64 [ %108, %118 ], [ %124, %120 ]
  %127 = phi i64 [ %107, %118 ], [ %123, %120 ]
  %128 = phi i8 [ %104, %118 ], [ %122, %120 ]
  %129 = phi %"class.std::__1::basic_string"* [ %119, %118 ], [ %121, %120 ]
  %130 = bitcast %"class.std::__1::basic_string"* %129 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %135 = load i64, i64* %134, align 8
  %136 = zext i8 %132 to i64
  %137 = select i1 %133, i64 %135, i64 %136
  %138 = icmp slt i8 %128, 0
  %139 = select i1 %138, i64 %127, i64 %126
  %140 = icmp eq i64 %137, %139
  br i1 %140, label %146, label %141

141:                                              ; preds = %125
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8, !noalias !3
  %144 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %145 = select i1 %138, i8* %143, i8* %144
  br label %183

146:                                              ; preds = %125
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  %149 = bitcast %"class.std::__1::basic_string"* %129 to i8*
  %150 = select i1 %133, i8* %148, i8* %149
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8, !noalias !3
  %153 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %154 = select i1 %138, i8* %152, i8* %153
  %155 = icmp eq i64 %137, 0
  br i1 %133, label %162, label %156

156:                                              ; preds = %146
  br i1 %155, label %178, label %157

157:                                              ; preds = %156
  %158 = ptrtoint i8* %148 to i64
  %159 = trunc i64 %158 to i8
  %160 = load i8, i8* %154, align 1
  %161 = icmp eq i8 %160, %159
  br i1 %161, label %163, label %183

162:                                              ; preds = %146
  br i1 %155, label %178, label %175

163:                                              ; preds = %157, %170
  %164 = phi i64 [ %167, %170 ], [ %136, %157 ]
  %165 = phi i8* [ %168, %170 ], [ %149, %157 ]
  %166 = phi i8* [ %171, %170 ], [ %154, %157 ]
  %167 = add i64 %164, -1
  %168 = getelementptr inbounds i8, i8* %165, i64 1
  %169 = icmp eq i64 %167, 0
  br i1 %169, label %178, label %170

170:                                              ; preds = %163
  %171 = getelementptr inbounds i8, i8* %166, i64 1
  %172 = load i8, i8* %168, align 1
  %173 = load i8, i8* %171, align 1
  %174 = icmp eq i8 %172, %173
  br i1 %174, label %163, label %183

175:                                              ; preds = %162
  %176 = call i32 @bcmp(i8* %150, i8* %154, i64 %137) #10
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %183

178:                                              ; preds = %163, %175, %162, %156
  store i8 1, i8* %83, align 8, !alias.scope !3
  %179 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %138, label %182, label %180

180:                                              ; preds = %178
  %181 = bitcast %"class.std::__1::basic_string"* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %153, i64 24, i1 false) #10
  br label %237

182:                                              ; preds = %178
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %179, i8* %152, i64 %127) #10
  br label %234

183:                                              ; preds = %170, %157, %175, %141
  %184 = phi i8* [ %145, %141 ], [ %154, %175 ], [ %154, %157 ], [ %154, %170 ]
  %185 = phi i8* [ %144, %141 ], [ %153, %175 ], [ %153, %157 ], [ %153, %170 ]
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = call zeroext i1 @_ZNK3url6Origin8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url::Origin"* %1, i8* %184, i64 %139) #10
  br i1 %187, label %191, label %188

188:                                              ; preds = %183
  store i8 0, i8* %83, align 8, !alias.scope !3
  %189 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %190 = bitcast %union.anon.9* %189 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 24, i1 false) #10, !alias.scope !3
  br label %247

191:                                              ; preds = %183
  %192 = load i8, i8* %115, align 8, !range !2, !noalias !3
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1
  br label %198

196:                                              ; preds = %191
  %197 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #10
  br label %198

198:                                              ; preds = %196, %194
  %199 = phi %"class.std::__1::basic_string"* [ %195, %194 ], [ %197, %196 ]
  %200 = bitcast %"class.std::__1::basic_string"* %199 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  %204 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load i8*, i8** %204, align 8
  %206 = bitcast %"class.std::__1::basic_string"* %199 to i8*
  %207 = select i1 %203, i8* %205, i8* %206
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %209 = load i64, i64* %208, align 8
  %210 = zext i8 %202 to i64
  %211 = select i1 %203, i64 %209, i64 %210
  %212 = call zeroext i1 @_ZN3net27registry_controlled_domains31HostHasRegistryControlledDomainEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21UnknownRegistryFilterENS0_21PrivateRegistryFilterE(i8* %207, i64 %211, i32 1, i32 1) #10
  br i1 %212, label %213, label %222

213:                                              ; preds = %198
  %214 = load i8, i8* %103, align 1, !noalias !3
  %215 = icmp slt i8 %214, 0
  %216 = load i8*, i8** %186, align 8, !noalias !3
  %217 = select i1 %215, i8* %216, i8* %185
  %218 = load i64, i64* %106, align 8, !noalias !3
  %219 = zext i8 %214 to i64
  %220 = select i1 %215, i64 %218, i64 %219
  %221 = call zeroext i1 @_ZN3net27registry_controlled_domains31HostHasRegistryControlledDomainEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21UnknownRegistryFilterENS0_21PrivateRegistryFilterE(i8* %217, i64 %220, i32 1, i32 1) #10
  br i1 %221, label %225, label %222

222:                                              ; preds = %213, %198
  store i8 0, i8* %83, align 8, !alias.scope !3
  %223 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %224 = bitcast %union.anon.9* %223 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %224, i8 0, i64 24, i1 false) #10, !alias.scope !3
  br label %247

225:                                              ; preds = %213
  store i8 1, i8* %83, align 8, !alias.scope !3
  %226 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %227 = load i8, i8* %103, align 1, !noalias !3
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %225
  %230 = bitcast %"class.std::__1::basic_string"* %226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* align 8 %185, i64 24, i1 false) #10
  br label %234

231:                                              ; preds = %225
  %232 = load i8*, i8** %186, align 8, !noalias !3
  %233 = load i64, i64* %106, align 8, !noalias !3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %226, i8* %232, i64 %233) #10
  br label %234

234:                                              ; preds = %93, %96, %182, %229, %231
  %235 = load i8, i8* %83, align 8
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %247, label %237

237:                                              ; preds = %180, %234
  %238 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %239 = bitcast %"class.std::__1::basic_string"* %238 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %246

243:                                              ; preds = %237
  %244 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %238, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  call void @_ZdlPv(i8* %245) #9
  br label %246

246:                                              ; preds = %243, %237
  store i8 0, i8* %83, align 8
  br label %247

247:                                              ; preds = %222, %188, %111, %234, %246
  %248 = phi i32 [ 18, %234 ], [ 0, %246 ], [ 18, %111 ], [ 18, %188 ], [ 18, %222 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #10
  br label %249

249:                                              ; preds = %80, %247
  %250 = phi i32 [ %248, %247 ], [ %81, %80 ]
  ret i32 %250
}

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content29WebAuthRequestSecurityChecker31ValidateAPrioriAuthenticatedUrlERK4GURL(%"class.content::WebAuthRequestSecurityChecker"* nocapture readnone, %class.GURL* dereferenceable(120)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %class.GURL* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = tail call zeroext i1 @_ZN7network27IsUrlPotentiallyTrustworthyERK4GURL(%class.GURL* dereferenceable(120) %1) #10
  %18 = select i1 %17, i32 0, i32 4
  br label %19

19:                                               ; preds = %12, %16, %2
  %20 = phi i32 [ 0, %2 ], [ 4, %12 ], [ %18, %16 ]
  ret i32 %20
}

declare zeroext i1 @_ZN7network27IsUrlPotentiallyTrustworthyERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare zeroext i1 @_ZN3url15HostIsIPAddressEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #5

declare void @_ZNK3url6Origin6GetURLEv(%class.GURL* sret, %"class.url::Origin"*) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() local_unnamed_addr #5

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #5

declare zeroext i1 @_ZNK3url6Origin8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url::Origin"*, i8*, i64) local_unnamed_addr #5

declare zeroext i1 @_ZN3net27registry_controlled_domains31HostHasRegistryControlledDomainEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21UnknownRegistryFilterENS0_21PrivateRegistryFilterE(i8*, i64, i32, i32) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN7content12_GLOBAL__N_117GetRelyingPartyIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN3url6OriginE: argument 0"}
!5 = distinct !{!5, !"_ZN7content12_GLOBAL__N_117GetRelyingPartyIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN3url6OriginE"}
