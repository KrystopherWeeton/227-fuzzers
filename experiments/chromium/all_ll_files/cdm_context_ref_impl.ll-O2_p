; ModuleID = '../../media/cdm/cdm_context_ref_impl.cc'
source_filename = "../../media/cdm/cdm_context_ref_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::CdmContextRefImpl" = type { %"class.media::CdmContextRef", %class.scoped_refptr }
%"class.media::CdmContextRef" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.media::ContentDecryptionModule"* }
%"class.media::ContentDecryptionModule" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.media::CdmContext" = type { i32 (...)** }

@_ZTVN5media17CdmContextRefImplE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::CdmContextRefImpl"*)* @_ZN5media17CdmContextRefImplD2Ev to i8*), i8* bitcast (void (%"class.media::CdmContextRefImpl"*)* @_ZN5media17CdmContextRefImplD0Ev to i8*), i8* bitcast (%"class.media::CdmContext"* (%"class.media::CdmContextRefImpl"*)* @_ZN5media17CdmContextRefImpl13GetCdmContextEv to i8*)] }, align 8

@_ZN5media17CdmContextRefImplC1E13scoped_refptrINS_23ContentDecryptionModuleEE = hidden unnamed_addr alias void (%"class.media::CdmContextRefImpl"*, %"class.media::ContentDecryptionModule"*), void (%"class.media::CdmContextRefImpl"*, %"class.media::ContentDecryptionModule"*)* @_ZN5media17CdmContextRefImplC2E13scoped_refptrINS_23ContentDecryptionModuleEE
@_ZN5media17CdmContextRefImplD1Ev = hidden unnamed_addr alias void (%"class.media::CdmContextRefImpl"*), void (%"class.media::CdmContextRefImpl"*)* @_ZN5media17CdmContextRefImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media17CdmContextRefImplC2E13scoped_refptrINS_23ContentDecryptionModuleEE(%"class.media::CdmContextRefImpl"* nocapture, %"class.media::ContentDecryptionModule"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.media::ContentDecryptionModule"* %1 to i64
  %4 = getelementptr inbounds %"class.media::CdmContextRefImpl", %"class.media::CdmContextRefImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media17CdmContextRefImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.media::CdmContextRefImpl", %"class.media::CdmContextRefImpl"* %0, i64 0, i32 1
  %6 = bitcast %class.scoped_refptr* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media17CdmContextRefImplD2Ev(%"class.media::CdmContextRefImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::CdmContextRefImpl", %"class.media::CdmContextRefImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media17CdmContextRefImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::CdmContextRefImpl", %"class.media::CdmContextRefImpl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.media::ContentDecryptionModule"*, %"class.media::ContentDecryptionModule"** %3, align 8
  %5 = icmp eq %"class.media::ContentDecryptionModule"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::ContentDecryptionModule", %"class.media::ContentDecryptionModule"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.media::ContentDecryptionModule"*
  tail call void @_ZN5media29ContentDecryptionModuleTraits8DestructEPKNS_23ContentDecryptionModuleE(%"class.media::ContentDecryptionModule"* %13) #3
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media17CdmContextRefImplD0Ev(%"class.media::CdmContextRefImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::CdmContextRefImpl", %"class.media::CdmContextRefImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media17CdmContextRefImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::CdmContextRefImpl", %"class.media::CdmContextRefImpl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.media::ContentDecryptionModule"*, %"class.media::ContentDecryptionModule"** %3, align 8
  %5 = icmp eq %"class.media::ContentDecryptionModule"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::ContentDecryptionModule", %"class.media::ContentDecryptionModule"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.media::ContentDecryptionModule"*
  tail call void @_ZN5media29ContentDecryptionModuleTraits8DestructEPKNS_23ContentDecryptionModuleE(%"class.media::ContentDecryptionModule"* %13) #3
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = bitcast %"class.media::CdmContextRefImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::CdmContext"* @_ZN5media17CdmContextRefImpl13GetCdmContextEv(%"class.media::CdmContextRefImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::CdmContextRefImpl", %"class.media::CdmContextRefImpl"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.media::ContentDecryptionModule"*, %"class.media::ContentDecryptionModule"** %2, align 8
  %4 = bitcast %"class.media::ContentDecryptionModule"* %3 to %"class.media::CdmContext"* (%"class.media::ContentDecryptionModule"*)***
  %5 = load %"class.media::CdmContext"* (%"class.media::ContentDecryptionModule"*)**, %"class.media::CdmContext"* (%"class.media::ContentDecryptionModule"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.media::CdmContext"* (%"class.media::ContentDecryptionModule"*)*, %"class.media::CdmContext"* (%"class.media::ContentDecryptionModule"*)** %5, i64 7
  %7 = load %"class.media::CdmContext"* (%"class.media::ContentDecryptionModule"*)*, %"class.media::CdmContext"* (%"class.media::ContentDecryptionModule"*)** %6, align 8
  %8 = tail call %"class.media::CdmContext"* %7(%"class.media::ContentDecryptionModule"* %3) #3
  ret %"class.media::CdmContext"* %8
}

declare void @_ZN5media29ContentDecryptionModuleTraits8DestructEPKNS_23ContentDecryptionModuleE(%"class.media::ContentDecryptionModule"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
