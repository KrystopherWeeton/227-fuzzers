; ModuleID = '../../extensions/browser/api/declarative_net_request/flat_ruleset_indexer.cc'
source_filename = "../../extensions/browser/api/declarative_net_request/flat_ruleset_indexer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::declarative_net_request::FlatRulesetIndexer" = type <{ %"class.flatbuffers::FlatBufferBuilder", %"class.std::__1::vector", %"class.std::__1::vector.33", %"class.std::__1::vector.41", i64, i8, [7 x i8] }>
%"class.flatbuffers::FlatBufferBuilder" = type { %"class.flatbuffers::vector_downward", i32, i16, i8, i8, i64, i8, i8, %"class.std::__1::set"* }
%"class.flatbuffers::vector_downward" = type { %"class.flatbuffers::Allocator"*, i8, i64, i64, i64, i8*, i8*, i8* }
%"class.flatbuffers::Allocator" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.flatbuffers::FlatBufferBuilder::StringOffsetCompare" }
%"struct.flatbuffers::FlatBufferBuilder::StringOffsetCompare" = type { %"class.flatbuffers::vector_downward"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.url_pattern_index::UrlPatternIndexBuilder"* }
%"class.url_pattern_index::UrlPatternIndexBuilder" = type { %"class.url_pattern_index::ClosedHashMap", %"class.std::__1::vector.20", %"class.flatbuffers::FlatBufferBuilder"* }
%"class.url_pattern_index::ClosedHashMap" = type <{ %"class.std::__1::vector.6", %"class.std::__1::vector.13", %"class.url_pattern_index::SimpleQuadraticProber", [7 x i8] }>
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.15" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::pair"* }
%"class.url_pattern_index::SimpleQuadraticProber" = type { %"class.url_pattern_index::Uint64ToUint32Hasher" }
%"class.url_pattern_index::Uint64ToUint32Hasher" = type { i8 }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"*, %"class.std::__1::__compressed_pair.22" }
%"struct.flatbuffers::Offset" = type { i32 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.flatbuffers::Offset"* }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"*, %"class.std::__1::__compressed_pair.36" }
%"struct.flatbuffers::Offset.35" = type { i32 }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.flatbuffers::Offset.35"* }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.flatbuffers::Offset.43"*, %"struct.flatbuffers::Offset.43"*, %"class.std::__1::__compressed_pair.44" }
%"struct.flatbuffers::Offset.43" = type { i32 }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.flatbuffers::Offset.43"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.flatbuffers::Offset.113" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.flatbuffers::Offset.113" = type { i32 }
%"struct.extensions::declarative_net_request::IndexedRule" = type { i32, i32, i32, i8, i16, i16, i8, i32, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.54", %"class.std::__1::vector.54", %"class.absl::optional", %"class.absl::optional", %"class.std::__1::unique_ptr.62", %"class.std::__1::vector.98", %"class.std::__1::vector.98", %"class.base::internal::flat_tree", %"class.base::internal::flat_tree" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.61 }
%union.anon.61 = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.extensions::api::declarative_net_request::URLTransform"* }
%"struct.extensions::api::declarative_net_request::URLTransform" = type { %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.extensions::api::declarative_net_request::QueryTransform"* }
%"struct.extensions::api::declarative_net_request::QueryTransform" = type { %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::vector.54"* }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::vector.82"* }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.extensions::api::declarative_net_request::QueryKeyValue"*, %"struct.extensions::api::declarative_net_request::QueryKeyValue"*, %"class.std::__1::__compressed_pair.84" }
%"struct.extensions::api::declarative_net_request::QueryKeyValue" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.extensions::api::declarative_net_request::QueryKeyValue"* }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*, %"class.std::__1::__compressed_pair.100" }
%"struct.extensions::api::declarative_net_request::ModifyHeaderInfo" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::unique_ptr.65" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.105" }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { i32*, i32*, %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.flatbuffers::Offset.113"*, %"struct.flatbuffers::Offset.113"*, %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.flatbuffers::Offset.113"* }
%"class.std::__1::set.155" = type { %"class.std::__1::__tree.156" }
%"class.std::__1::__tree.156" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.flatbuffers::Offset.170"*, %"struct.flatbuffers::Offset.170"*, %"class.std::__1::__compressed_pair.171" }
%"struct.flatbuffers::Offset.170" = type { i32 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.flatbuffers::Offset.170"* }
%"struct.extensions::declarative_net_request::flat::RegexRuleBuilder" = type <{ %"class.flatbuffers::FlatBufferBuilder"*, i32, [4 x i8] }>
%"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder" = type <{ %"class.flatbuffers::FlatBufferBuilder"*, i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node.180" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"struct.url_pattern_index::flat::UrlRuleBuilder" = type <{ %"class.flatbuffers::FlatBufferBuilder"*, i32, [4 x i8] }>
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { %"class.url_pattern_index::UrlPatternIndexBuilder"**, %"class.url_pattern_index::UrlPatternIndexBuilder"**, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.url_pattern_index::UrlPatternIndexBuilder"** }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.flatbuffers::Offset.201"*, %"struct.flatbuffers::Offset.201"*, %"class.std::__1::__compressed_pair.202" }
%"struct.flatbuffers::Offset.201" = type { i32 }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.flatbuffers::Offset.201"* }
%"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder" = type <{ %"class.flatbuffers::FlatBufferBuilder"*, i32, [4 x i8] }>
%"class.flatbuffers::DetachedBuffer" = type { %"class.flatbuffers::Allocator"*, i8, i8*, i64, i8*, i64 }
%"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder" = type <{ %"class.flatbuffers::FlatBufferBuilder"*, i32, [4 x i8] }>
%"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator" = type { %"class.flatbuffers::vector_downward"* }
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"struct.flatbuffers::Offset.126"*, %"struct.flatbuffers::Offset.126"*, %"class.std::__1::__compressed_pair.127" }
%"struct.flatbuffers::Offset.126" = type { i32 }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.flatbuffers::Offset.126"* }
%"struct.extensions::declarative_net_request::flat::UrlTransformBuilder" = type <{ %"class.flatbuffers::FlatBufferBuilder"*, i32, [4 x i8] }>
%"struct.extensions::declarative_net_request::flat::UrlRuleMetadata" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Table" = type { [1 x i8] }

$_ZN11flatbuffers17FlatBufferBuilderD2Ev = comdat any

$_ZN17url_pattern_index4flat13CreateUrlRuleERN11flatbuffers17FlatBufferBuilderEhtthNS0_14UrlPatternTypeENS0_10AnchorTypeES5_NS1_6OffsetINS1_6VectorINS6_INS1_6StringEEEEEEESB_S9_jmNS6_INS7_IhEEEE = comdat any

$_ZN10extensions23declarative_net_request4flat21CreateUrlRuleMetadataERN11flatbuffers17FlatBufferBuilderEjNS1_10ActionTypeENS2_6OffsetINS2_6StringEEENS6_INS1_12UrlTransformEEENS6_INS2_6VectorINS6_INS1_16ModifyHeaderInfoEEEEEEESF_ = comdat any

$_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm = comdat any

$_ZN11flatbuffers17FlatBufferBuilder12CreateStringEPKcm = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_ = comdat any

$_ZN11flatbuffers15vector_downward10reallocateEm = comdat any

$_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm = comdat any

$_ZN10extensions23declarative_net_request4flat25EmbedderConditionsBuilder20add_tab_ids_excludedEN11flatbuffers6OffsetINS3_6VectorIiEEEE = comdat any

$_ZN10extensions23declarative_net_request4flat25EmbedderConditionsBuilder20add_tab_ids_includedEN11flatbuffers6OffsetINS3_6VectorIiEEEE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder8EndTableEj = comdat any

$_ZN11flatbuffers17FlatBufferBuilder6FinishEjPKcb = comdat any

$_ZN17url_pattern_index4flat14UrlRuleBuilder23add_embedder_conditionsEN11flatbuffers6OffsetINS2_6VectorIhEEEE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder10AddElementImEEvtT_S2_ = comdat any

$_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6VectorINS_6OffsetINS_6StringEEEEEEEvtNS3_IT_EE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder10AddElementItEEvtT_S2_ = comdat any

$_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_ = comdat any

$_ZN10extensions23declarative_net_request4flat16RegexRuleBuilder12add_url_ruleEN11flatbuffers6OffsetIN17url_pattern_index4flat7UrlRuleEEE = comdat any

$_ZN10extensions23declarative_net_request4flat18CreateUrlTransformERN11flatbuffers17FlatBufferBuilderENS2_6OffsetINS2_6StringEEES7_bS7_bS7_bS7_NS5_INS2_6VectorIS7_EEEENS5_INS8_INS5_INS1_13QueryKeyValueEEEEEEEbS7_S7_S7_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_ = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11PushElementINS_6StringEEEjNS_6OffsetIT_EE = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11PushElementIN10extensions23declarative_net_request4flat13QueryKeyValueEEEjNS_6OffsetIT_EE = comdat any

$_ZN10extensions23declarative_net_request4flat19UrlTransformBuilder31add_add_or_replace_query_paramsEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_13QueryKeyValueEEEEEEE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11PushElementIN10extensions23declarative_net_request4flat16ModifyHeaderInfoEEEjNS_6OffsetIT_EE = comdat any

$_ZN10extensions23declarative_net_request4flat22UrlRuleMetadataBuilder20add_response_headersEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_16ModifyHeaderInfoEEEEEEE = comdat any

$_ZN10extensions23declarative_net_request4flat22UrlRuleMetadataBuilder19add_request_headersEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_16ModifyHeaderInfoEEEEEEE = comdat any

$_ZN10extensions23declarative_net_request4flat22UrlRuleMetadataBuilder13add_transformEN11flatbuffers6OffsetINS1_12UrlTransformEEE = comdat any

$_ZN10extensions23declarative_net_request4flat30ExtensionIndexedRulesetBuilder22add_extension_metadataEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_15UrlRuleMetadataEEEEEEE = comdat any

$_ZN10extensions23declarative_net_request4flat30ExtensionIndexedRulesetBuilder15add_regex_rulesEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_9RegexRuleEEEEEEE = comdat any

$_ZN10extensions23declarative_net_request4flat30ExtensionIndexedRulesetBuilder14add_index_listEN11flatbuffers6OffsetINS3_6VectorINS4_IN17url_pattern_index4flat15UrlPatternIndexEEEEEEE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11PushElementIN17url_pattern_index4flat15UrlPatternIndexEEEjNS_6OffsetIT_EE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11PushElementIN10extensions23declarative_net_request4flat9RegexRuleEEEjNS_6OffsetIT_EE = comdat any

$_ZNSt3__16__sortIRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEvT0_SD_T_ = comdat any

$_ZNSt3__17__sort3IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_T_ = comdat any

$_ZNSt3__17__sort4IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_SD_T_ = comdat any

$_ZNSt3__17__sort5IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_SD_SD_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEvT0_SD_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEbT0_SD_T_ = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11PushElementIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEjNS_6OffsetIT_EE = comdat any

$_ZZN11flatbuffers4dataIiNSt3__19allocatorIiEEEEPKT_RKNS1_6vectorIS4_T0_EEE1t = comdat any

$_ZZN11flatbuffers4dataINS_6OffsetINS_6StringEEENSt3__19allocatorIS3_EEEEPKT_RKNS4_6vectorIS7_T0_EEE1t = comdat any

$_ZZN11flatbuffers4dataINS_6OffsetIN10extensions23declarative_net_request4flat13QueryKeyValueEEENSt3__19allocatorIS6_EEEEPKT_RKNS7_6vectorISA_T0_EEE1t = comdat any

$_ZZN11flatbuffers4dataINS_6OffsetIN10extensions23declarative_net_request4flat16ModifyHeaderInfoEEENSt3__19allocatorIS6_EEEEPKT_RKNS7_6vectorISA_T0_EEE1t = comdat any

$_ZZN11flatbuffers4dataINS_6OffsetIN17url_pattern_index4flat15UrlPatternIndexEEENSt3__19allocatorIS5_EEEEPKT_RKNS6_6vectorIS9_T0_EEE1t = comdat any

$_ZZN11flatbuffers4dataINS_6OffsetIN10extensions23declarative_net_request4flat9RegexRuleEEENSt3__19allocatorIS6_EEEEPKT_RKNS7_6vectorISA_T0_EEE1t = comdat any

$_ZZN11flatbuffers4dataINS_6OffsetIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEENSt3__19allocatorIS6_EEEEPT_RNS7_6vectorISA_T0_EEE1t = comdat any

@.str = private unnamed_addr constant [19 x i8] c"FlatBuffers 1.12.0\00", align 1
@_ZN11flatbuffers25flatbuffer_version_stringE = weak hidden local_unnamed_addr global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), align 8
@_ZN10extensions23declarative_net_request35kEmbedderConditionsBufferIdentifierE = external constant [0 x i8], align 1
@_ZZN11flatbuffers4dataIiNSt3__19allocatorIiEEEEPKT_RKNS1_6vectorIS4_T0_EEE1t = linkonce_odr hidden local_unnamed_addr global i8 0, comdat, align 1
@_ZZN11flatbuffers4dataINS_6OffsetINS_6StringEEENSt3__19allocatorIS3_EEEEPKT_RKNS4_6vectorIS7_T0_EEE1t = linkonce_odr hidden local_unnamed_addr global i8 0, comdat, align 1
@_ZZN11flatbuffers4dataINS_6OffsetIN10extensions23declarative_net_request4flat13QueryKeyValueEEENSt3__19allocatorIS6_EEEEPKT_RKNS7_6vectorISA_T0_EEE1t = linkonce_odr hidden local_unnamed_addr global i8 0, comdat, align 1
@_ZZN11flatbuffers4dataINS_6OffsetIN10extensions23declarative_net_request4flat16ModifyHeaderInfoEEENSt3__19allocatorIS6_EEEEPKT_RKNS7_6vectorISA_T0_EEE1t = linkonce_odr hidden local_unnamed_addr global i8 0, comdat, align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"EXTR\00", align 1
@_ZZN11flatbuffers4dataINS_6OffsetIN17url_pattern_index4flat15UrlPatternIndexEEENSt3__19allocatorIS5_EEEEPKT_RKNS6_6vectorIS9_T0_EEE1t = linkonce_odr hidden local_unnamed_addr global i8 0, comdat, align 1
@_ZZN11flatbuffers4dataINS_6OffsetIN10extensions23declarative_net_request4flat9RegexRuleEEENSt3__19allocatorIS6_EEEEPKT_RKNS7_6vectorISA_T0_EEE1t = linkonce_odr hidden local_unnamed_addr global i8 0, comdat, align 1
@_ZZN11flatbuffers4dataINS_6OffsetIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEENSt3__19allocatorIS6_EEEEPT_RNS7_6vectorISA_T0_EEE1t = linkonce_odr hidden global i8 0, comdat, align 1

@_ZN10extensions23declarative_net_request18FlatRulesetIndexerC1Ev = hidden unnamed_addr alias void (%"class.extensions::declarative_net_request::FlatRulesetIndexer"*), void (%"class.extensions::declarative_net_request::FlatRulesetIndexer"*)* @_ZN10extensions23declarative_net_request18FlatRulesetIndexerC2Ev
@_ZN10extensions23declarative_net_request18FlatRulesetIndexerD1Ev = hidden unnamed_addr alias void (%"class.extensions::declarative_net_request::FlatRulesetIndexer"*), void (%"class.extensions::declarative_net_request::FlatRulesetIndexer"*)* @_ZN10extensions23declarative_net_request18FlatRulesetIndexerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request18FlatRulesetIndexerC2Ev(%"class.extensions::declarative_net_request::FlatRulesetIndexer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.flatbuffers::Allocator"* null, %"class.flatbuffers::Allocator"** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> <i64 1024, i64 8>, <2 x i64>* %6, align 8
  %7 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 4
  %8 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 5
  %9 = bitcast i64* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 40, i1 false) #11
  store i64 1, i64* %8, align 8
  %10 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 6
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 7
  store i8 1, i8* %11, align 1
  %12 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 8
  store %"class.std::__1::set"* null, %"class.std::__1::set"** %12, align 8
  %13 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %16 = tail call i8* @_Znwm(i64 24) #12, !noalias !2
  %17 = bitcast %"class.std::__1::vector"* %13 to i8**
  store i8* %16, i8** %17, align 8, !alias.scope !2
  %18 = getelementptr inbounds i8, i8* %16, i64 24
  %19 = bitcast %"class.std::__1::unique_ptr"** %15 to i8**
  store i8* %18, i8** %19, align 8, !alias.scope !2
  %20 = bitcast %"class.std::__1::unique_ptr"** %14 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #11, !noalias !2
  %21 = ptrtoint i8* %18 to i64
  store i64 %21, i64* %20, align 8, !alias.scope !2
  %22 = tail call i8* @_Znwm(i64 88) #12, !noalias !2
  %23 = bitcast i8* %22 to %"class.url_pattern_index::UrlPatternIndexBuilder"*
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilderC1EPN11flatbuffers17FlatBufferBuilderE(%"class.url_pattern_index::UrlPatternIndexBuilder"* nonnull %23, %"class.flatbuffers::FlatBufferBuilder"* %2) #11, !noalias !2
  %24 = ptrtoint i8* %22 to i64
  %25 = bitcast i8* %16 to %"class.url_pattern_index::UrlPatternIndexBuilder"**
  %26 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %25, align 8, !noalias !2
  %27 = bitcast i8* %16 to i64*
  store i64 %24, i64* %27, align 8, !noalias !2
  %28 = icmp eq %"class.url_pattern_index::UrlPatternIndexBuilder"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %1
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilderD1Ev(%"class.url_pattern_index::UrlPatternIndexBuilder"* nonnull %26) #11, !noalias !2
  %30 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"* %26 to i8*
  tail call void @_ZdlPv(i8* %30) #12, !noalias !2
  br label %31

31:                                               ; preds = %29, %1
  %32 = tail call i8* @_Znwm(i64 88) #12, !noalias !2
  %33 = bitcast i8* %32 to %"class.url_pattern_index::UrlPatternIndexBuilder"*
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilderC1EPN11flatbuffers17FlatBufferBuilderE(%"class.url_pattern_index::UrlPatternIndexBuilder"* nonnull %33, %"class.flatbuffers::FlatBufferBuilder"* %2) #11, !noalias !2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds i8, i8* %16, i64 8
  %36 = bitcast i8* %35 to %"class.url_pattern_index::UrlPatternIndexBuilder"**
  %37 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %36, align 8, !noalias !2
  %38 = bitcast i8* %35 to i64*
  store i64 %34, i64* %38, align 8, !noalias !2
  %39 = icmp eq %"class.url_pattern_index::UrlPatternIndexBuilder"* %37, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %31
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilderD1Ev(%"class.url_pattern_index::UrlPatternIndexBuilder"* nonnull %37) #11, !noalias !2
  %41 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"* %37 to i8*
  tail call void @_ZdlPv(i8* %41) #12, !noalias !2
  br label %42

42:                                               ; preds = %40, %31
  %43 = tail call i8* @_Znwm(i64 88) #12, !noalias !2
  %44 = bitcast i8* %43 to %"class.url_pattern_index::UrlPatternIndexBuilder"*
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilderC1EPN11flatbuffers17FlatBufferBuilderE(%"class.url_pattern_index::UrlPatternIndexBuilder"* nonnull %44, %"class.flatbuffers::FlatBufferBuilder"* %2) #11, !noalias !2
  %45 = ptrtoint i8* %43 to i64
  %46 = getelementptr inbounds i8, i8* %16, i64 16
  %47 = bitcast i8* %46 to %"class.url_pattern_index::UrlPatternIndexBuilder"**
  %48 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %47, align 8, !noalias !2
  %49 = bitcast i8* %46 to i64*
  store i64 %45, i64* %49, align 8, !noalias !2
  %50 = icmp eq %"class.url_pattern_index::UrlPatternIndexBuilder"* %48, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %42
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilderD1Ev(%"class.url_pattern_index::UrlPatternIndexBuilder"* nonnull %48) #11, !noalias !2
  %52 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"* %48 to i8*
  tail call void @_ZdlPv(i8* %52) #12, !noalias !2
  br label %53

53:                                               ; preds = %42, %51
  %54 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 2
  %55 = bitcast %"class.std::__1::vector.33"* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 57, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request18FlatRulesetIndexerD2Ev(%"class.extensions::declarative_net_request::FlatRulesetIndexer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"struct.flatbuffers::Offset.43"*, %"struct.flatbuffers::Offset.43"** %2, align 8
  %4 = icmp eq %"struct.flatbuffers::Offset.43"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.flatbuffers::Offset.43"* %3 to i64
  %7 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast %"struct.flatbuffers::Offset.43"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.flatbuffers::Offset.43"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"** %11, align 8
  %13 = icmp eq %"struct.flatbuffers::Offset.35"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.flatbuffers::Offset.35"* %12 to i64
  %16 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = bitcast %"struct.flatbuffers::Offset.35"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.flatbuffers::Offset.35"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %23 = icmp eq %"class.std::__1::unique_ptr"* %22, null
  br i1 %23, label %44, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::unique_ptr"* %22 to i8*
  %26 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 1, i32 0, i32 1
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr"* %27, %22
  br i1 %28, label %42, label %29

29:                                               ; preds = %24, %37
  %30 = phi %"class.std::__1::unique_ptr"* [ %31, %37 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 -1
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %32, align 8
  store %"class.url_pattern_index::UrlPatternIndexBuilder"* null, %"class.url_pattern_index::UrlPatternIndexBuilder"** %32, align 8
  %34 = icmp eq %"class.url_pattern_index::UrlPatternIndexBuilder"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilderD1Ev(%"class.url_pattern_index::UrlPatternIndexBuilder"* nonnull %33) #11
  %36 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"* %33 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %35, %29
  %38 = icmp eq %"class.std::__1::unique_ptr"* %31, %22
  br i1 %38, label %39, label %29

39:                                               ; preds = %37
  %40 = bitcast %"class.std::__1::vector"* %20 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %24
  %43 = phi i8* [ %41, %39 ], [ %25, %24 ]
  store %"class.std::__1::unique_ptr"* %22, %"class.std::__1::unique_ptr"** %26, align 8
  tail call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %19, %42
  %45 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers17FlatBufferBuilderD2Ev(%"class.flatbuffers::FlatBufferBuilder"* %45) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilderD2Ev(%"class.flatbuffers::FlatBufferBuilder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 8
  %3 = load %"class.std::__1::set"*, %"class.std::__1::set"** %2, align 8
  %4 = icmp eq %"class.std::__1::set"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %6, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::set"* %3 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %5
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 0
  %17 = load %"class.flatbuffers::Allocator"*, %"class.flatbuffers::Allocator"** %16, align 8
  %18 = icmp eq %"class.flatbuffers::Allocator"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.flatbuffers::Allocator"* %17 to void (%"class.flatbuffers::Allocator"*, i8*, i64)***
  %23 = load void (%"class.flatbuffers::Allocator"*, i8*, i64)**, void (%"class.flatbuffers::Allocator"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.flatbuffers::Allocator"*, i8*, i64)*, void (%"class.flatbuffers::Allocator"*, i8*, i64)** %23, i64 3
  %25 = load void (%"class.flatbuffers::Allocator"*, i8*, i64)*, void (%"class.flatbuffers::Allocator"*, i8*, i64)** %24, align 8
  tail call void %25(%"class.flatbuffers::Allocator"* nonnull %17, i8* nonnull %13, i64 %21) #11
  br label %27

26:                                               ; preds = %15
  tail call void @_ZdaPv(i8* nonnull %13) #12
  br label %27

27:                                               ; preds = %26, %19, %11
  store i8* null, i8** %12, align 8
  %28 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 1
  %29 = load i8, i8* %28, align 8, !range !5
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 0
  %33 = load %"class.flatbuffers::Allocator"*, %"class.flatbuffers::Allocator"** %32, align 8
  %34 = icmp eq %"class.flatbuffers::Allocator"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.flatbuffers::Allocator"* %33 to void (%"class.flatbuffers::Allocator"*)***
  %37 = load void (%"class.flatbuffers::Allocator"*)**, void (%"class.flatbuffers::Allocator"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.flatbuffers::Allocator"*)*, void (%"class.flatbuffers::Allocator"*)** %37, i64 1
  %39 = load void (%"class.flatbuffers::Allocator"*)*, void (%"class.flatbuffers::Allocator"*)** %38, align 8
  tail call void %39(%"class.flatbuffers::Allocator"* nonnull %33) #11
  br label %40

40:                                               ; preds = %27, %31, %35
  %41 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 0
  store %"class.flatbuffers::Allocator"* null, %"class.flatbuffers::Allocator"** %41, align 8
  store i8 0, i8* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request18FlatRulesetIndexer10AddUrlRuleERKNS0_11IndexedRuleE(%"class.extensions::declarative_net_request::FlatRulesetIndexer"*, %"struct.extensions::declarative_net_request::IndexedRule"* dereferenceable(272)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::vector.187", align 8
  %5 = alloca %"class.std::__1::set.155", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::vector.168", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"struct.extensions::declarative_net_request::flat::RegexRuleBuilder", align 8
  %11 = alloca %"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder", align 8
  %12 = alloca %"class.std::__1::vector.105", align 8
  %13 = alloca %"class.std::__1::vector.105", align 8
  %14 = alloca %"class.flatbuffers::FlatBufferBuilder", align 8
  %15 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 11
  %20 = tail call fastcc i32 @_ZN10extensions23declarative_net_request12_GLOBAL__N_126BuildVectorOfSharedStringsINSt3__16vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEEEEN11flatbuffers6OffsetINSD_6VectorINSE_INSD_6StringEEEEEEEPNSD_17FlatBufferBuilderERKT_(%"class.flatbuffers::FlatBufferBuilder"* %18, %"class.std::__1::vector.54"* dereferenceable(24) %19)
  %21 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 12
  %22 = tail call fastcc i32 @_ZN10extensions23declarative_net_request12_GLOBAL__N_126BuildVectorOfSharedStringsINSt3__16vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEEEEN11flatbuffers6OffsetINSD_6VectorINSE_INSD_6StringEEEEEEEPNSD_17FlatBufferBuilderERKT_(%"class.flatbuffers::FlatBufferBuilder"* %18, %"class.std::__1::vector.54"* dereferenceable(24) %21)
  %23 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 10
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %33 = zext i8 %26 to i64
  %34 = select i1 %27, i8* %29, i8* %32
  %35 = select i1 %27, i64 %31, i64 %33
  %36 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %34, i64 %35) #11
  %37 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 18, i32 0, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = bitcast i32* %38 to i8*
  %40 = ptrtoint i32* %38 to i64
  %41 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 18, i32 0, i32 0, i32 1
  %42 = load i32*, i32** %41, align 8
  %43 = icmp eq i32* %38, %42
  br i1 %43, label %44, label %50

44:                                               ; preds = %2
  %45 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 19, i32 0, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 19, i32 0, i32 0, i32 1
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %46, %48
  br i1 %49, label %667, label %50

50:                                               ; preds = %44, %2
  %51 = bitcast %"class.flatbuffers::FlatBufferBuilder"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %51) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 88, i1 false) #11
  %52 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0, i32 0
  store %"class.flatbuffers::Allocator"* null, %"class.flatbuffers::Allocator"** %52, align 8
  %53 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0, i32 1
  store i8 0, i8* %53, align 8
  %54 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0, i32 2
  %55 = bitcast i64* %54 to <2 x i64>*
  store <2 x i64> <i64 1024, i64 8>, <2 x i64>* %55, align 8
  %56 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0, i32 4
  %57 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 5
  %58 = bitcast i64* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 40, i1 false) #11
  store i64 1, i64* %57, align 8
  %59 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 6
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 7
  store i8 1, i8* %60, align 1
  %61 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 8
  store %"class.std::__1::set"* null, %"class.std::__1::set"** %61, align 8
  br i1 %43, label %281, label %62

62:                                               ; preds = %50
  %63 = bitcast %"class.std::__1::vector.105"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 24, i1 false) #11
  %64 = ptrtoint i32* %42 to i64
  %65 = sub i64 %64, %40
  %66 = ashr exact i64 %65, 2
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %240, label %68

68:                                               ; preds = %62
  %69 = icmp ugt i64 %66, 4611686018427387903
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = bitcast %"class.std::__1::vector.105"* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %71) #13
  unreachable

72:                                               ; preds = %68
  %73 = tail call i8* @_Znwm(i64 %65) #12
  %74 = bitcast i8* %73 to i32*
  %75 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %13, i64 0, i32 0, i32 1
  %76 = bitcast i32** %75 to i8**
  store i8* %73, i8** %76, align 8
  %77 = bitcast %"class.std::__1::vector.105"* %13 to i8**
  store i8* %73, i8** %77, align 8
  %78 = getelementptr inbounds i32, i32* %74, i64 %66
  %79 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %78, i32** %79, align 8
  %80 = getelementptr i32, i32* %42, i64 -1
  %81 = ptrtoint i32* %80 to i64
  %82 = sub i64 %81, %40
  %83 = lshr i64 %82, 2
  %84 = add nuw nsw i64 %83, 1
  %85 = icmp ult i64 %84, 8
  br i1 %85, label %181, label %86

86:                                               ; preds = %72
  %87 = getelementptr i32, i32* %42, i64 -1
  %88 = ptrtoint i32* %87 to i64
  %89 = sub i64 %88, %40
  %90 = lshr i64 %89, 2
  %91 = add i64 %89, 4
  %92 = and i64 %91, -4
  %93 = getelementptr i8, i8* %73, i64 %92
  %94 = add nuw nsw i64 %90, 1
  %95 = getelementptr i32, i32* %38, i64 %94
  %96 = bitcast i32* %95 to i8*
  %97 = icmp ult i8* %73, %96
  %98 = icmp ugt i8* %93, %39
  %99 = and i1 %97, %98
  br i1 %99, label %181, label %100

100:                                              ; preds = %86
  %101 = and i64 %84, 9223372036854775800
  %102 = getelementptr i32, i32* %74, i64 %101
  %103 = getelementptr i32, i32* %38, i64 %101
  %104 = add nsw i64 %101, -8
  %105 = lshr exact i64 %104, 3
  %106 = add nuw nsw i64 %105, 1
  %107 = and i64 %106, 3
  %108 = icmp ult i64 %104, 24
  br i1 %108, label %160, label %109

109:                                              ; preds = %100
  %110 = sub nsw i64 %106, %107
  br label %111

111:                                              ; preds = %111, %109
  %112 = phi i64 [ 0, %109 ], [ %157, %111 ]
  %113 = phi i64 [ %110, %109 ], [ %158, %111 ]
  %114 = getelementptr i32, i32* %74, i64 %112
  %115 = getelementptr i32, i32* %38, i64 %112
  %116 = bitcast i32* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4, !alias.scope !6
  %118 = getelementptr i32, i32* %115, i64 4
  %119 = bitcast i32* %118 to <4 x i32>*
  %120 = load <4 x i32>, <4 x i32>* %119, align 4, !alias.scope !6
  %121 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %117, <4 x i32>* %121, align 4, !alias.scope !9, !noalias !6
  %122 = getelementptr i32, i32* %114, i64 4
  %123 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %120, <4 x i32>* %123, align 4, !alias.scope !9, !noalias !6
  %124 = or i64 %112, 8
  %125 = getelementptr i32, i32* %74, i64 %124
  %126 = getelementptr i32, i32* %38, i64 %124
  %127 = bitcast i32* %126 to <4 x i32>*
  %128 = load <4 x i32>, <4 x i32>* %127, align 4, !alias.scope !6
  %129 = getelementptr i32, i32* %126, i64 4
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !6
  %132 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %128, <4 x i32>* %132, align 4, !alias.scope !9, !noalias !6
  %133 = getelementptr i32, i32* %125, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %134, align 4, !alias.scope !9, !noalias !6
  %135 = or i64 %112, 16
  %136 = getelementptr i32, i32* %74, i64 %135
  %137 = getelementptr i32, i32* %38, i64 %135
  %138 = bitcast i32* %137 to <4 x i32>*
  %139 = load <4 x i32>, <4 x i32>* %138, align 4, !alias.scope !6
  %140 = getelementptr i32, i32* %137, i64 4
  %141 = bitcast i32* %140 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !alias.scope !6
  %143 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %139, <4 x i32>* %143, align 4, !alias.scope !9, !noalias !6
  %144 = getelementptr i32, i32* %136, i64 4
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %145, align 4, !alias.scope !9, !noalias !6
  %146 = or i64 %112, 24
  %147 = getelementptr i32, i32* %74, i64 %146
  %148 = getelementptr i32, i32* %38, i64 %146
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4, !alias.scope !6
  %151 = getelementptr i32, i32* %148, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !6
  %154 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %150, <4 x i32>* %154, align 4, !alias.scope !9, !noalias !6
  %155 = getelementptr i32, i32* %147, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %156, align 4, !alias.scope !9, !noalias !6
  %157 = add i64 %112, 32
  %158 = add i64 %113, -4
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %111, !llvm.loop !11

160:                                              ; preds = %111, %100
  %161 = phi i64 [ 0, %100 ], [ %157, %111 ]
  %162 = icmp eq i64 %107, 0
  br i1 %162, label %179, label %163

163:                                              ; preds = %160, %163
  %164 = phi i64 [ %176, %163 ], [ %161, %160 ]
  %165 = phi i64 [ %177, %163 ], [ %107, %160 ]
  %166 = getelementptr i32, i32* %74, i64 %164
  %167 = getelementptr i32, i32* %38, i64 %164
  %168 = bitcast i32* %167 to <4 x i32>*
  %169 = load <4 x i32>, <4 x i32>* %168, align 4, !alias.scope !6
  %170 = getelementptr i32, i32* %167, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  %172 = load <4 x i32>, <4 x i32>* %171, align 4, !alias.scope !6
  %173 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> %169, <4 x i32>* %173, align 4, !alias.scope !9, !noalias !6
  %174 = getelementptr i32, i32* %166, i64 4
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> %172, <4 x i32>* %175, align 4, !alias.scope !9, !noalias !6
  %176 = add i64 %164, 8
  %177 = add i64 %165, -1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %163, !llvm.loop !13

179:                                              ; preds = %163, %160
  %180 = icmp eq i64 %84, %101
  br i1 %180, label %234, label %181

181:                                              ; preds = %179, %86, %72
  %182 = phi i32* [ %74, %86 ], [ %74, %72 ], [ %102, %179 ]
  %183 = phi i32* [ %38, %86 ], [ %38, %72 ], [ %103, %179 ]
  %184 = ptrtoint i32* %183 to i64
  %185 = getelementptr i32, i32* %42, i64 -1
  %186 = ptrtoint i32* %185 to i64
  %187 = sub i64 %186, %184
  %188 = lshr i64 %187, 2
  %189 = add nuw nsw i64 %188, 1
  %190 = and i64 %189, 7
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %201, label %192

192:                                              ; preds = %181, %192
  %193 = phi i32* [ %198, %192 ], [ %182, %181 ]
  %194 = phi i32* [ %197, %192 ], [ %183, %181 ]
  %195 = phi i64 [ %199, %192 ], [ %190, %181 ]
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %193, align 4
  %197 = getelementptr inbounds i32, i32* %194, i64 1
  %198 = getelementptr inbounds i32, i32* %193, i64 1
  %199 = add i64 %195, -1
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %192, !llvm.loop !15

201:                                              ; preds = %192, %181
  %202 = phi i32* [ undef, %181 ], [ %198, %192 ]
  %203 = phi i32* [ %182, %181 ], [ %198, %192 ]
  %204 = phi i32* [ %183, %181 ], [ %197, %192 ]
  %205 = icmp ult i64 %187, 28
  br i1 %205, label %234, label %206

206:                                              ; preds = %201, %206
  %207 = phi i32* [ %232, %206 ], [ %203, %201 ]
  %208 = phi i32* [ %231, %206 ], [ %204, %201 ]
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %208, i64 1
  %211 = getelementptr inbounds i32, i32* %207, i64 1
  %212 = load i32, i32* %210, align 4
  store i32 %212, i32* %211, align 4
  %213 = getelementptr inbounds i32, i32* %208, i64 2
  %214 = getelementptr inbounds i32, i32* %207, i64 2
  %215 = load i32, i32* %213, align 4
  store i32 %215, i32* %214, align 4
  %216 = getelementptr inbounds i32, i32* %208, i64 3
  %217 = getelementptr inbounds i32, i32* %207, i64 3
  %218 = load i32, i32* %216, align 4
  store i32 %218, i32* %217, align 4
  %219 = getelementptr inbounds i32, i32* %208, i64 4
  %220 = getelementptr inbounds i32, i32* %207, i64 4
  %221 = load i32, i32* %219, align 4
  store i32 %221, i32* %220, align 4
  %222 = getelementptr inbounds i32, i32* %208, i64 5
  %223 = getelementptr inbounds i32, i32* %207, i64 5
  %224 = load i32, i32* %222, align 4
  store i32 %224, i32* %223, align 4
  %225 = getelementptr inbounds i32, i32* %208, i64 6
  %226 = getelementptr inbounds i32, i32* %207, i64 6
  %227 = load i32, i32* %225, align 4
  store i32 %227, i32* %226, align 4
  %228 = getelementptr inbounds i32, i32* %208, i64 7
  %229 = getelementptr inbounds i32, i32* %207, i64 7
  %230 = load i32, i32* %228, align 4
  store i32 %230, i32* %229, align 4
  %231 = getelementptr inbounds i32, i32* %208, i64 8
  %232 = getelementptr inbounds i32, i32* %207, i64 8
  %233 = icmp eq i32* %231, %42
  br i1 %233, label %234, label %206, !llvm.loop !16

234:                                              ; preds = %201, %206, %179
  %235 = phi i32* [ %102, %179 ], [ %202, %201 ], [ %232, %206 ]
  %236 = bitcast i32** %75 to i64*
  %237 = ptrtoint i32* %235 to i64
  store i64 %237, i64* %236, align 8
  %238 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %13, i64 0, i32 0, i32 0
  %239 = load i32*, i32** %238, align 8
  br label %240

240:                                              ; preds = %62, %234
  %241 = phi i32* [ %235, %234 ], [ null, %62 ]
  %242 = phi i32* [ %239, %234 ], [ null, %62 ]
  %243 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %13, i64 0, i32 0, i32 0
  %244 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %13, i64 0, i32 0, i32 1
  %245 = icmp eq i32* %242, %241
  %246 = select i1 %245, i32* bitcast (i8* @_ZZN11flatbuffers4dataIiNSt3__19allocatorIiEEEEPKT_RKNS1_6vectorIS4_T0_EEE1t to i32*), i32* %242
  %247 = ptrtoint i32* %241 to i64
  %248 = ptrtoint i32* %242 to i64
  %249 = sub i64 %247, %248
  %250 = ashr exact i64 %249, 2
  call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* nonnull %14, i64 %250, i64 4) #11
  %251 = bitcast i32* %246 to i8*
  %252 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0
  %253 = icmp eq i64 %249, 0
  br i1 %253, label %270, label %254

254:                                              ; preds = %240
  %255 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0, i32 6
  %256 = bitcast i8** %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0, i32 7
  %259 = bitcast i8** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = sub i64 %257, %260
  %262 = icmp ult i64 %261, %249
  %263 = inttoptr i64 %257 to i8*
  br i1 %262, label %264, label %266

264:                                              ; preds = %254
  call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* nonnull %252, i64 %249) #11
  %265 = load i8*, i8** %255, align 8
  br label %266

266:                                              ; preds = %264, %254
  %267 = phi i8* [ %263, %254 ], [ %265, %264 ]
  %268 = sub i64 0, %249
  %269 = getelementptr inbounds i8, i8* %267, i64 %268
  store i8* %269, i8** %255, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %269, i8* align 1 %251, i64 %249, i1 false) #11
  br label %270

270:                                              ; preds = %266, %240
  %271 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 3
  store i8 0, i8* %271, align 2
  %272 = trunc i64 %250 to i32
  %273 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* nonnull %14, i32 %272) #11
  %274 = load i32*, i32** %243, align 8
  %275 = icmp eq i32* %274, null
  br i1 %275, label %280, label %276

276:                                              ; preds = %270
  %277 = ptrtoint i32* %274 to i64
  %278 = bitcast i32** %244 to i64*
  store i64 %277, i64* %278, align 8
  %279 = bitcast i32* %274 to i8*
  call void @_ZdlPv(i8* %279) #12
  br label %280

280:                                              ; preds = %276, %270
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #11
  br label %281

281:                                              ; preds = %280, %50
  %282 = phi i32 [ %273, %280 ], [ 0, %50 ]
  %283 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 19, i32 0, i32 0, i32 0
  %284 = load i32*, i32** %283, align 8
  %285 = bitcast i32* %284 to i8*
  %286 = ptrtoint i32* %284 to i64
  %287 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 19, i32 0, i32 0, i32 1
  %288 = load i32*, i32** %287, align 8
  %289 = icmp eq i32* %284, %288
  br i1 %289, label %509, label %290

290:                                              ; preds = %281
  %291 = bitcast %"class.std::__1::vector.105"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %291) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %291, i8 0, i64 24, i1 false) #11
  %292 = ptrtoint i32* %288 to i64
  %293 = sub i64 %292, %286
  %294 = ashr exact i64 %293, 2
  %295 = icmp eq i64 %293, 0
  br i1 %295, label %468, label %296

296:                                              ; preds = %290
  %297 = icmp ugt i64 %294, 4611686018427387903
  br i1 %297, label %298, label %300

298:                                              ; preds = %296
  %299 = bitcast %"class.std::__1::vector.105"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %299) #13
  unreachable

300:                                              ; preds = %296
  %301 = call i8* @_Znwm(i64 %293) #12
  %302 = bitcast i8* %301 to i32*
  %303 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %12, i64 0, i32 0, i32 1
  %304 = bitcast i32** %303 to i8**
  store i8* %301, i8** %304, align 8
  %305 = bitcast %"class.std::__1::vector.105"* %12 to i8**
  store i8* %301, i8** %305, align 8
  %306 = getelementptr inbounds i32, i32* %302, i64 %294
  %307 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %306, i32** %307, align 8
  %308 = getelementptr i32, i32* %288, i64 -1
  %309 = ptrtoint i32* %308 to i64
  %310 = sub i64 %309, %286
  %311 = lshr i64 %310, 2
  %312 = add nuw nsw i64 %311, 1
  %313 = icmp ult i64 %312, 8
  br i1 %313, label %409, label %314

314:                                              ; preds = %300
  %315 = getelementptr i32, i32* %288, i64 -1
  %316 = ptrtoint i32* %315 to i64
  %317 = sub i64 %316, %286
  %318 = lshr i64 %317, 2
  %319 = add i64 %317, 4
  %320 = and i64 %319, -4
  %321 = getelementptr i8, i8* %301, i64 %320
  %322 = add nuw nsw i64 %318, 1
  %323 = getelementptr i32, i32* %284, i64 %322
  %324 = bitcast i32* %323 to i8*
  %325 = icmp ult i8* %301, %324
  %326 = icmp ugt i8* %321, %285
  %327 = and i1 %325, %326
  br i1 %327, label %409, label %328

328:                                              ; preds = %314
  %329 = and i64 %312, 9223372036854775800
  %330 = getelementptr i32, i32* %302, i64 %329
  %331 = getelementptr i32, i32* %284, i64 %329
  %332 = add nsw i64 %329, -8
  %333 = lshr exact i64 %332, 3
  %334 = add nuw nsw i64 %333, 1
  %335 = and i64 %334, 3
  %336 = icmp ult i64 %332, 24
  br i1 %336, label %388, label %337

337:                                              ; preds = %328
  %338 = sub nsw i64 %334, %335
  br label %339

339:                                              ; preds = %339, %337
  %340 = phi i64 [ 0, %337 ], [ %385, %339 ]
  %341 = phi i64 [ %338, %337 ], [ %386, %339 ]
  %342 = getelementptr i32, i32* %302, i64 %340
  %343 = getelementptr i32, i32* %284, i64 %340
  %344 = bitcast i32* %343 to <4 x i32>*
  %345 = load <4 x i32>, <4 x i32>* %344, align 4, !alias.scope !17
  %346 = getelementptr i32, i32* %343, i64 4
  %347 = bitcast i32* %346 to <4 x i32>*
  %348 = load <4 x i32>, <4 x i32>* %347, align 4, !alias.scope !17
  %349 = bitcast i32* %342 to <4 x i32>*
  store <4 x i32> %345, <4 x i32>* %349, align 4, !alias.scope !20, !noalias !17
  %350 = getelementptr i32, i32* %342, i64 4
  %351 = bitcast i32* %350 to <4 x i32>*
  store <4 x i32> %348, <4 x i32>* %351, align 4, !alias.scope !20, !noalias !17
  %352 = or i64 %340, 8
  %353 = getelementptr i32, i32* %302, i64 %352
  %354 = getelementptr i32, i32* %284, i64 %352
  %355 = bitcast i32* %354 to <4 x i32>*
  %356 = load <4 x i32>, <4 x i32>* %355, align 4, !alias.scope !17
  %357 = getelementptr i32, i32* %354, i64 4
  %358 = bitcast i32* %357 to <4 x i32>*
  %359 = load <4 x i32>, <4 x i32>* %358, align 4, !alias.scope !17
  %360 = bitcast i32* %353 to <4 x i32>*
  store <4 x i32> %356, <4 x i32>* %360, align 4, !alias.scope !20, !noalias !17
  %361 = getelementptr i32, i32* %353, i64 4
  %362 = bitcast i32* %361 to <4 x i32>*
  store <4 x i32> %359, <4 x i32>* %362, align 4, !alias.scope !20, !noalias !17
  %363 = or i64 %340, 16
  %364 = getelementptr i32, i32* %302, i64 %363
  %365 = getelementptr i32, i32* %284, i64 %363
  %366 = bitcast i32* %365 to <4 x i32>*
  %367 = load <4 x i32>, <4 x i32>* %366, align 4, !alias.scope !17
  %368 = getelementptr i32, i32* %365, i64 4
  %369 = bitcast i32* %368 to <4 x i32>*
  %370 = load <4 x i32>, <4 x i32>* %369, align 4, !alias.scope !17
  %371 = bitcast i32* %364 to <4 x i32>*
  store <4 x i32> %367, <4 x i32>* %371, align 4, !alias.scope !20, !noalias !17
  %372 = getelementptr i32, i32* %364, i64 4
  %373 = bitcast i32* %372 to <4 x i32>*
  store <4 x i32> %370, <4 x i32>* %373, align 4, !alias.scope !20, !noalias !17
  %374 = or i64 %340, 24
  %375 = getelementptr i32, i32* %302, i64 %374
  %376 = getelementptr i32, i32* %284, i64 %374
  %377 = bitcast i32* %376 to <4 x i32>*
  %378 = load <4 x i32>, <4 x i32>* %377, align 4, !alias.scope !17
  %379 = getelementptr i32, i32* %376, i64 4
  %380 = bitcast i32* %379 to <4 x i32>*
  %381 = load <4 x i32>, <4 x i32>* %380, align 4, !alias.scope !17
  %382 = bitcast i32* %375 to <4 x i32>*
  store <4 x i32> %378, <4 x i32>* %382, align 4, !alias.scope !20, !noalias !17
  %383 = getelementptr i32, i32* %375, i64 4
  %384 = bitcast i32* %383 to <4 x i32>*
  store <4 x i32> %381, <4 x i32>* %384, align 4, !alias.scope !20, !noalias !17
  %385 = add i64 %340, 32
  %386 = add i64 %341, -4
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %388, label %339, !llvm.loop !22

388:                                              ; preds = %339, %328
  %389 = phi i64 [ 0, %328 ], [ %385, %339 ]
  %390 = icmp eq i64 %335, 0
  br i1 %390, label %407, label %391

391:                                              ; preds = %388, %391
  %392 = phi i64 [ %404, %391 ], [ %389, %388 ]
  %393 = phi i64 [ %405, %391 ], [ %335, %388 ]
  %394 = getelementptr i32, i32* %302, i64 %392
  %395 = getelementptr i32, i32* %284, i64 %392
  %396 = bitcast i32* %395 to <4 x i32>*
  %397 = load <4 x i32>, <4 x i32>* %396, align 4, !alias.scope !17
  %398 = getelementptr i32, i32* %395, i64 4
  %399 = bitcast i32* %398 to <4 x i32>*
  %400 = load <4 x i32>, <4 x i32>* %399, align 4, !alias.scope !17
  %401 = bitcast i32* %394 to <4 x i32>*
  store <4 x i32> %397, <4 x i32>* %401, align 4, !alias.scope !20, !noalias !17
  %402 = getelementptr i32, i32* %394, i64 4
  %403 = bitcast i32* %402 to <4 x i32>*
  store <4 x i32> %400, <4 x i32>* %403, align 4, !alias.scope !20, !noalias !17
  %404 = add i64 %392, 8
  %405 = add i64 %393, -1
  %406 = icmp eq i64 %405, 0
  br i1 %406, label %407, label %391, !llvm.loop !23

407:                                              ; preds = %391, %388
  %408 = icmp eq i64 %312, %329
  br i1 %408, label %462, label %409

409:                                              ; preds = %407, %314, %300
  %410 = phi i32* [ %302, %314 ], [ %302, %300 ], [ %330, %407 ]
  %411 = phi i32* [ %284, %314 ], [ %284, %300 ], [ %331, %407 ]
  %412 = ptrtoint i32* %411 to i64
  %413 = getelementptr i32, i32* %288, i64 -1
  %414 = ptrtoint i32* %413 to i64
  %415 = sub i64 %414, %412
  %416 = lshr i64 %415, 2
  %417 = add nuw nsw i64 %416, 1
  %418 = and i64 %417, 7
  %419 = icmp eq i64 %418, 0
  br i1 %419, label %429, label %420

420:                                              ; preds = %409, %420
  %421 = phi i32* [ %426, %420 ], [ %410, %409 ]
  %422 = phi i32* [ %425, %420 ], [ %411, %409 ]
  %423 = phi i64 [ %427, %420 ], [ %418, %409 ]
  %424 = load i32, i32* %422, align 4
  store i32 %424, i32* %421, align 4
  %425 = getelementptr inbounds i32, i32* %422, i64 1
  %426 = getelementptr inbounds i32, i32* %421, i64 1
  %427 = add i64 %423, -1
  %428 = icmp eq i64 %427, 0
  br i1 %428, label %429, label %420, !llvm.loop !24

429:                                              ; preds = %420, %409
  %430 = phi i32* [ undef, %409 ], [ %426, %420 ]
  %431 = phi i32* [ %410, %409 ], [ %426, %420 ]
  %432 = phi i32* [ %411, %409 ], [ %425, %420 ]
  %433 = icmp ult i64 %415, 28
  br i1 %433, label %462, label %434

434:                                              ; preds = %429, %434
  %435 = phi i32* [ %460, %434 ], [ %431, %429 ]
  %436 = phi i32* [ %459, %434 ], [ %432, %429 ]
  %437 = load i32, i32* %436, align 4
  store i32 %437, i32* %435, align 4
  %438 = getelementptr inbounds i32, i32* %436, i64 1
  %439 = getelementptr inbounds i32, i32* %435, i64 1
  %440 = load i32, i32* %438, align 4
  store i32 %440, i32* %439, align 4
  %441 = getelementptr inbounds i32, i32* %436, i64 2
  %442 = getelementptr inbounds i32, i32* %435, i64 2
  %443 = load i32, i32* %441, align 4
  store i32 %443, i32* %442, align 4
  %444 = getelementptr inbounds i32, i32* %436, i64 3
  %445 = getelementptr inbounds i32, i32* %435, i64 3
  %446 = load i32, i32* %444, align 4
  store i32 %446, i32* %445, align 4
  %447 = getelementptr inbounds i32, i32* %436, i64 4
  %448 = getelementptr inbounds i32, i32* %435, i64 4
  %449 = load i32, i32* %447, align 4
  store i32 %449, i32* %448, align 4
  %450 = getelementptr inbounds i32, i32* %436, i64 5
  %451 = getelementptr inbounds i32, i32* %435, i64 5
  %452 = load i32, i32* %450, align 4
  store i32 %452, i32* %451, align 4
  %453 = getelementptr inbounds i32, i32* %436, i64 6
  %454 = getelementptr inbounds i32, i32* %435, i64 6
  %455 = load i32, i32* %453, align 4
  store i32 %455, i32* %454, align 4
  %456 = getelementptr inbounds i32, i32* %436, i64 7
  %457 = getelementptr inbounds i32, i32* %435, i64 7
  %458 = load i32, i32* %456, align 4
  store i32 %458, i32* %457, align 4
  %459 = getelementptr inbounds i32, i32* %436, i64 8
  %460 = getelementptr inbounds i32, i32* %435, i64 8
  %461 = icmp eq i32* %459, %288
  br i1 %461, label %462, label %434, !llvm.loop !25

462:                                              ; preds = %429, %434, %407
  %463 = phi i32* [ %330, %407 ], [ %430, %429 ], [ %460, %434 ]
  %464 = bitcast i32** %303 to i64*
  %465 = ptrtoint i32* %463 to i64
  store i64 %465, i64* %464, align 8
  %466 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %12, i64 0, i32 0, i32 0
  %467 = load i32*, i32** %466, align 8
  br label %468

468:                                              ; preds = %290, %462
  %469 = phi i32* [ %463, %462 ], [ null, %290 ]
  %470 = phi i32* [ %467, %462 ], [ null, %290 ]
  %471 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %12, i64 0, i32 0, i32 0
  %472 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %12, i64 0, i32 0, i32 1
  %473 = icmp eq i32* %470, %469
  %474 = select i1 %473, i32* bitcast (i8* @_ZZN11flatbuffers4dataIiNSt3__19allocatorIiEEEEPKT_RKNS1_6vectorIS4_T0_EEE1t to i32*), i32* %470
  %475 = ptrtoint i32* %469 to i64
  %476 = ptrtoint i32* %470 to i64
  %477 = sub i64 %475, %476
  %478 = ashr exact i64 %477, 2
  call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* nonnull %14, i64 %478, i64 4) #11
  %479 = bitcast i32* %474 to i8*
  %480 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0
  %481 = icmp eq i64 %477, 0
  br i1 %481, label %498, label %482

482:                                              ; preds = %468
  %483 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0, i32 6
  %484 = bitcast i8** %483 to i64*
  %485 = load i64, i64* %484, align 8
  %486 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0, i32 7
  %487 = bitcast i8** %486 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = sub i64 %485, %488
  %490 = icmp ult i64 %489, %477
  %491 = inttoptr i64 %485 to i8*
  br i1 %490, label %492, label %494

492:                                              ; preds = %482
  call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* nonnull %480, i64 %477) #11
  %493 = load i8*, i8** %483, align 8
  br label %494

494:                                              ; preds = %492, %482
  %495 = phi i8* [ %491, %482 ], [ %493, %492 ]
  %496 = sub i64 0, %477
  %497 = getelementptr inbounds i8, i8* %495, i64 %496
  store i8* %497, i8** %483, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %497, i8* align 1 %479, i64 %477, i1 false) #11
  br label %498

498:                                              ; preds = %494, %468
  %499 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 3
  store i8 0, i8* %499, align 2
  %500 = trunc i64 %478 to i32
  %501 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* nonnull %14, i32 %500) #11
  %502 = load i32*, i32** %471, align 8
  %503 = icmp eq i32* %502, null
  br i1 %503, label %508, label %504

504:                                              ; preds = %498
  %505 = ptrtoint i32* %502 to i64
  %506 = bitcast i32** %472 to i64*
  store i64 %505, i64* %506, align 8
  %507 = bitcast i32* %502 to i8*
  call void @_ZdlPv(i8* %507) #12
  br label %508

508:                                              ; preds = %504, %498
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %291) #11
  br label %509

509:                                              ; preds = %508, %281
  %510 = phi i32 [ %501, %508 ], [ 0, %281 ]
  %511 = bitcast %"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %511) #11
  %512 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder", %"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder"* %11, i64 0, i32 0
  %513 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder", %"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder"* %11, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %511, i8 -86, i64 16, i1 false) #11
  store %"class.flatbuffers::FlatBufferBuilder"* %14, %"class.flatbuffers::FlatBufferBuilder"** %512, align 8
  %514 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 3
  store i8 1, i8* %514, align 2
  %515 = load i64, i64* %56, align 8
  %516 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0, i32 6
  %517 = bitcast i8** %516 to i64*
  %518 = load i64, i64* %517, align 8
  %519 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %14, i64 0, i32 0, i32 5
  %520 = bitcast i8** %519 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = sub i64 %515, %518
  %523 = add i64 %522, %521
  %524 = trunc i64 %523 to i32
  store i32 %524, i32* %513, align 8
  call void @_ZN10extensions23declarative_net_request4flat25EmbedderConditionsBuilder20add_tab_ids_excludedEN11flatbuffers6OffsetINS3_6VectorIiEEEE(%"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder"* nonnull %11, i32 %510) #11
  call void @_ZN10extensions23declarative_net_request4flat25EmbedderConditionsBuilder20add_tab_ids_includedEN11flatbuffers6OffsetINS3_6VectorIiEEEE(%"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder"* nonnull %11, i32 %282) #11
  %525 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %512, align 8
  %526 = load i32, i32* %513, align 8
  %527 = call i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"* %525, i32 %526) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %511) #11
  call void @_ZN11flatbuffers17FlatBufferBuilder6FinishEjPKcb(%"class.flatbuffers::FlatBufferBuilder"* nonnull %14, i32 %527, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions23declarative_net_request35kEmbedderConditionsBufferIdentifierE, i64 0, i64 0), i1 zeroext false) #11
  %528 = load i64, i64* %56, align 8
  %529 = load i64, i64* %517, align 8
  %530 = load i64, i64* %520, align 8
  %531 = sub i64 %528, %529
  %532 = add i64 %531, %530
  %533 = and i64 %532, 4294967295
  %534 = load i64, i64* %57, align 8
  %535 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 5
  %536 = load i64, i64* %535, align 8
  %537 = icmp ult i64 %536, %534
  br i1 %537, label %538, label %539

538:                                              ; preds = %509
  store i64 %534, i64* %535, align 8
  br label %539

539:                                              ; preds = %538, %509
  %540 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 4
  %541 = load i64, i64* %540, align 8
  %542 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 6
  %543 = bitcast i8** %542 to i64*
  %544 = load i64, i64* %543, align 8
  %545 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 5
  %546 = bitcast i8** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = sub i64 %541, %544
  %549 = add i64 %548, %547
  %550 = and i64 %549, 4294967295
  %551 = add nuw nsw i64 %533, %550
  %552 = sub nsw i64 0, %551
  %553 = add i64 %534, -1
  %554 = and i64 %553, %552
  %555 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 7
  %556 = bitcast i8** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = sub i64 %544, %557
  %559 = icmp ult i64 %558, %554
  br i1 %559, label %560, label %565

560:                                              ; preds = %539
  %561 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0
  call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %561, i64 %554) #11
  %562 = load i8*, i8** %542, align 8
  %563 = sub i64 0, %554
  %564 = getelementptr inbounds i8, i8* %562, i64 %563
  store i8* %564, i8** %542, align 8
  br label %570

565:                                              ; preds = %539
  %566 = inttoptr i64 %544 to i8*
  %567 = sub i64 0, %554
  %568 = getelementptr inbounds i8, i8* %566, i64 %567
  store i8* %568, i8** %542, align 8
  %569 = icmp eq i64 %554, 0
  br i1 %569, label %608, label %570

570:                                              ; preds = %565, %560
  %571 = phi i8* [ %564, %560 ], [ %568, %565 ]
  store i8 0, i8* %571, align 1
  %572 = icmp eq i64 %554, 1
  br i1 %572, label %608, label %573

573:                                              ; preds = %570
  %574 = add i64 %554, -1
  %575 = add i64 %554, -2
  %576 = and i64 %574, 3
  %577 = icmp ult i64 %575, 3
  br i1 %577, label %597, label %578

578:                                              ; preds = %573
  %579 = sub i64 %574, %576
  br label %580

580:                                              ; preds = %580, %578
  %581 = phi i64 [ 1, %578 ], [ %594, %580 ]
  %582 = phi i64 [ %579, %578 ], [ %595, %580 ]
  %583 = load i8*, i8** %542, align 8
  %584 = getelementptr inbounds i8, i8* %583, i64 %581
  store i8 0, i8* %584, align 1
  %585 = add nuw nsw i64 %581, 1
  %586 = load i8*, i8** %542, align 8
  %587 = getelementptr inbounds i8, i8* %586, i64 %585
  store i8 0, i8* %587, align 1
  %588 = add nuw nsw i64 %581, 2
  %589 = load i8*, i8** %542, align 8
  %590 = getelementptr inbounds i8, i8* %589, i64 %588
  store i8 0, i8* %590, align 1
  %591 = add nuw i64 %581, 3
  %592 = load i8*, i8** %542, align 8
  %593 = getelementptr inbounds i8, i8* %592, i64 %591
  store i8 0, i8* %593, align 1
  %594 = add nuw i64 %581, 4
  %595 = add i64 %582, -4
  %596 = icmp eq i64 %595, 0
  br i1 %596, label %597, label %580

597:                                              ; preds = %580, %573
  %598 = phi i64 [ 1, %573 ], [ %594, %580 ]
  %599 = icmp eq i64 %576, 0
  br i1 %599, label %608, label %600

600:                                              ; preds = %597, %600
  %601 = phi i64 [ %605, %600 ], [ %598, %597 ]
  %602 = phi i64 [ %606, %600 ], [ %576, %597 ]
  %603 = load i8*, i8** %542, align 8
  %604 = getelementptr inbounds i8, i8* %603, i64 %601
  store i8 0, i8* %604, align 1
  %605 = add nuw i64 %601, 1
  %606 = add i64 %602, -1
  %607 = icmp eq i64 %606, 0
  br i1 %607, label %608, label %600, !llvm.loop !26

608:                                              ; preds = %597, %600, %570, %565
  %609 = load i8*, i8** %516, align 8
  %610 = load i64, i64* %56, align 8
  %611 = ptrtoint i8* %609 to i64
  %612 = load i64, i64* %520, align 8
  %613 = sub i64 %610, %611
  %614 = add i64 %613, %612
  %615 = trunc i64 %614 to i32
  %616 = and i64 %614, 4294967295
  call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* %18, i64 %616, i64 1) #11
  %617 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0
  %618 = icmp eq i64 %616, 0
  br i1 %618, label %631, label %619

619:                                              ; preds = %608
  %620 = load i64, i64* %543, align 8
  %621 = load i64, i64* %556, align 8
  %622 = sub i64 %620, %621
  %623 = icmp ult i64 %622, %616
  %624 = inttoptr i64 %620 to i8*
  br i1 %623, label %625, label %627

625:                                              ; preds = %619
  call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %617, i64 %616) #11
  %626 = load i8*, i8** %542, align 8
  br label %627

627:                                              ; preds = %625, %619
  %628 = phi i8* [ %624, %619 ], [ %626, %625 ]
  %629 = sub nsw i64 0, %616
  %630 = getelementptr inbounds i8, i8* %628, i64 %629
  store i8* %630, i8** %542, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %630, i8* align 1 %609, i64 %616, i1 false) #11
  br label %631

631:                                              ; preds = %627, %608
  %632 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %632, align 2
  %633 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %18, i32 %615) #11
  %634 = load %"class.std::__1::set"*, %"class.std::__1::set"** %61, align 8
  %635 = icmp eq %"class.std::__1::set"* %634, null
  br i1 %635, label %642, label %636

636:                                              ; preds = %631
  %637 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %634, i64 0, i32 0
  %638 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %634, i64 0, i32 0, i32 1, i32 0, i32 0
  %639 = bitcast %"class.std::__1::__tree_end_node"* %638 to %"class.std::__1::__tree_node"**
  %640 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %639, align 8
  call void @_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %637, %"class.std::__1::__tree_node"* %640) #11
  %641 = bitcast %"class.std::__1::set"* %634 to i8*
  call void @_ZdlPv(i8* %641) #12
  br label %642

642:                                              ; preds = %636, %631
  %643 = load i8*, i8** %519, align 8
  %644 = icmp eq i8* %643, null
  br i1 %644, label %655, label %645

645:                                              ; preds = %642
  %646 = load %"class.flatbuffers::Allocator"*, %"class.flatbuffers::Allocator"** %52, align 8
  %647 = icmp eq %"class.flatbuffers::Allocator"* %646, null
  br i1 %647, label %654, label %648

648:                                              ; preds = %645
  %649 = load i64, i64* %56, align 8
  %650 = bitcast %"class.flatbuffers::Allocator"* %646 to void (%"class.flatbuffers::Allocator"*, i8*, i64)***
  %651 = load void (%"class.flatbuffers::Allocator"*, i8*, i64)**, void (%"class.flatbuffers::Allocator"*, i8*, i64)*** %650, align 8
  %652 = getelementptr inbounds void (%"class.flatbuffers::Allocator"*, i8*, i64)*, void (%"class.flatbuffers::Allocator"*, i8*, i64)** %651, i64 3
  %653 = load void (%"class.flatbuffers::Allocator"*, i8*, i64)*, void (%"class.flatbuffers::Allocator"*, i8*, i64)** %652, align 8
  call void %653(%"class.flatbuffers::Allocator"* nonnull %646, i8* nonnull %643, i64 %649) #11
  br label %655

654:                                              ; preds = %645
  call void @_ZdaPv(i8* nonnull %643) #12
  br label %655

655:                                              ; preds = %654, %648, %642
  store i8* null, i8** %519, align 8
  %656 = load i8, i8* %53, align 8, !range !5
  %657 = icmp eq i8 %656, 0
  br i1 %657, label %666, label %658

658:                                              ; preds = %655
  %659 = load %"class.flatbuffers::Allocator"*, %"class.flatbuffers::Allocator"** %52, align 8
  %660 = icmp eq %"class.flatbuffers::Allocator"* %659, null
  br i1 %660, label %666, label %661

661:                                              ; preds = %658
  %662 = bitcast %"class.flatbuffers::Allocator"* %659 to void (%"class.flatbuffers::Allocator"*)***
  %663 = load void (%"class.flatbuffers::Allocator"*)**, void (%"class.flatbuffers::Allocator"*)*** %662, align 8
  %664 = getelementptr inbounds void (%"class.flatbuffers::Allocator"*)*, void (%"class.flatbuffers::Allocator"*)** %663, i64 1
  %665 = load void (%"class.flatbuffers::Allocator"*)*, void (%"class.flatbuffers::Allocator"*)** %664, align 8
  call void %665(%"class.flatbuffers::Allocator"* nonnull %659) #11
  br label %666

666:                                              ; preds = %661, %658, %655
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %51) #11
  br label %667

667:                                              ; preds = %44, %666
  %668 = phi i32 [ %633, %666 ], [ 0, %44 ]
  %669 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 3
  %670 = load i8, i8* %669, align 4
  %671 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 4
  %672 = load i16, i16* %671, align 2
  %673 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 5
  %674 = load i16, i16* %673, align 8
  %675 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 6
  %676 = load i8, i8* %675, align 2
  %677 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 7
  %678 = load i32, i32* %677, align 4
  %679 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 8
  %680 = load i32, i32* %679, align 8
  %681 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 9
  %682 = load i32, i32* %681, align 4
  %683 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 1
  %684 = load i32, i32* %683, align 4
  %685 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 2
  %686 = load i32, i32* %685, align 8
  %687 = zext i32 %686 to i64
  %688 = call i32 @_ZN17url_pattern_index4flat13CreateUrlRuleERN11flatbuffers17FlatBufferBuilderEhtthNS0_14UrlPatternTypeENS0_10AnchorTypeES5_NS1_6OffsetINS1_6VectorINS6_INS1_6StringEEEEEEESB_S9_jmNS6_INS7_IhEEEE(%"class.flatbuffers::FlatBufferBuilder"* dereferenceable(96) %18, i8 zeroext %670, i16 zeroext %672, i16 zeroext %674, i8 zeroext %676, i32 %678, i32 %680, i32 %682, i32 %20, i32 %22, i32 %36, i32 %684, i64 %687, i32 %668)
  %689 = load i32, i32* %677, align 4
  %690 = icmp eq i32 %689, 2
  br i1 %690, label %730, label %691

691:                                              ; preds = %667
  %692 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 0
  %693 = load i32, i32* %692, align 8, !noalias !27
  switch i32 %693, label %716 [
    i32 1, label %694
    i32 3, label %694
    i32 2, label %694
    i32 4, label %694
    i32 6, label %698
    i32 5, label %703
  ]

694:                                              ; preds = %691, %691, %691, %691
  %695 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 1, i32 0, i32 0
  %696 = bitcast %"class.std::__1::unique_ptr"** %695 to i64**
  %697 = load i64*, i64** %696, align 8, !noalias !27
  br label %708

698:                                              ; preds = %691
  %699 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 1, i32 0, i32 0
  %700 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %699, align 8, !noalias !27
  %701 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %700, i64 1, i32 0, i32 0, i32 0
  %702 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"** %701 to i64*
  br label %708

703:                                              ; preds = %691
  %704 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 1, i32 0, i32 0
  %705 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %704, align 8, !noalias !27
  %706 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %705, i64 2, i32 0, i32 0, i32 0
  %707 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"** %706 to i64*
  br label %708

708:                                              ; preds = %703, %698, %694
  %709 = phi i64* [ %707, %703 ], [ %702, %698 ], [ %697, %694 ]
  %710 = load i64, i64* %709, align 8, !noalias !27
  %711 = call i8* @_Znwm(i64 8) #12, !noalias !27
  %712 = bitcast i8* %711 to %"class.url_pattern_index::UrlPatternIndexBuilder"**
  %713 = getelementptr inbounds i8, i8* %711, i64 8
  %714 = bitcast i8* %711 to i64*
  store i64 %710, i64* %714, align 8, !noalias !27
  %715 = ptrtoint i8* %713 to i64
  br label %716

716:                                              ; preds = %708, %691
  %717 = phi i64 [ 0, %691 ], [ %715, %708 ]
  %718 = phi i8* [ null, %691 ], [ %711, %708 ]
  %719 = phi %"class.url_pattern_index::UrlPatternIndexBuilder"** [ null, %691 ], [ %712, %708 ]
  %720 = inttoptr i64 %717 to %"class.url_pattern_index::UrlPatternIndexBuilder"**
  %721 = icmp eq %"class.url_pattern_index::UrlPatternIndexBuilder"** %719, %720
  br i1 %721, label %722, label %725

722:                                              ; preds = %725, %716
  %723 = icmp eq %"class.url_pattern_index::UrlPatternIndexBuilder"** %719, null
  br i1 %723, label %843, label %724

724:                                              ; preds = %722
  call void @_ZdlPv(i8* %718) #12
  br label %843

725:                                              ; preds = %716, %725
  %726 = phi %"class.url_pattern_index::UrlPatternIndexBuilder"** [ %728, %725 ], [ %719, %716 ]
  %727 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %726, align 8
  call void @_ZN17url_pattern_index22UrlPatternIndexBuilder12IndexUrlRuleEN11flatbuffers6OffsetINS_4flat7UrlRuleEEE(%"class.url_pattern_index::UrlPatternIndexBuilder"* %727, i32 %688) #11
  %728 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %726, i64 1
  %729 = icmp eq %"class.url_pattern_index::UrlPatternIndexBuilder"** %728, %720
  br i1 %729, label %722, label %725

730:                                              ; preds = %667
  %731 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %732 = load i8, i8* %731, align 8, !range !5
  %733 = icmp eq i8 %732, 0
  br i1 %733, label %749, label %734

734:                                              ; preds = %730
  %735 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %736 = bitcast %"class.std::__1::basic_string"* %735 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %737 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %736, i64 0, i32 1, i32 0
  %738 = load i8, i8* %737, align 1
  %739 = icmp slt i8 %738, 0
  %740 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %735, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %741 = load i8*, i8** %740, align 8
  %742 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %743 = load i64, i64* %742, align 8
  %744 = bitcast %"class.std::__1::basic_string"* %735 to i8*
  %745 = zext i8 %738 to i64
  %746 = select i1 %739, i8* %741, i8* %744
  %747 = select i1 %739, i64 %743, i64 %745
  %748 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %746, i64 %747) #11
  br label %749

749:                                              ; preds = %730, %734
  %750 = phi i32 [ %748, %734 ], [ 0, %730 ]
  %751 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 3
  %752 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 0
  %753 = load i32, i32* %752, align 8
  %754 = call i32 @_ZN10extensions23declarative_net_request23ConvertToFlatActionTypeENS_3api23declarative_net_request14RuleActionTypeE(i32 %753) #11
  %755 = bitcast %"struct.extensions::declarative_net_request::flat::RegexRuleBuilder"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %755) #11
  %756 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::RegexRuleBuilder", %"struct.extensions::declarative_net_request::flat::RegexRuleBuilder"* %10, i64 0, i32 0
  %757 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::RegexRuleBuilder", %"struct.extensions::declarative_net_request::flat::RegexRuleBuilder"* %10, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %755, i8 -86, i64 16, i1 false) #11
  store %"class.flatbuffers::FlatBufferBuilder"* %18, %"class.flatbuffers::FlatBufferBuilder"** %756, align 8
  %758 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %758, align 2
  %759 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 4
  %760 = load i64, i64* %759, align 8
  %761 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 6
  %762 = bitcast i8** %761 to i64*
  %763 = load i64, i64* %762, align 8
  %764 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 5
  %765 = bitcast i8** %764 to i64*
  %766 = load i64, i64* %765, align 8
  %767 = sub i64 %760, %763
  %768 = add i64 %767, %766
  %769 = trunc i64 %768 to i32
  store i32 %769, i32* %757, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %18, i16 zeroext 8, i32 %750) #11
  call void @_ZN10extensions23declarative_net_request4flat16RegexRuleBuilder12add_url_ruleEN11flatbuffers6OffsetIN17url_pattern_index4flat7UrlRuleEEE(%"struct.extensions::declarative_net_request::flat::RegexRuleBuilder"* nonnull %10, i32 %688) #11
  %770 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %756, align 8
  %771 = trunc i32 %754 to i8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %770, i16 zeroext 6, i8 zeroext %771, i8 zeroext 0) #11
  %772 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %756, align 8
  %773 = load i32, i32* %757, align 8
  %774 = call i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"* %772, i32 %773) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %755) #11
  %775 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 3, i32 0, i32 1
  %776 = load %"struct.flatbuffers::Offset.43"*, %"struct.flatbuffers::Offset.43"** %775, align 8
  %777 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %778 = load %"struct.flatbuffers::Offset.43"*, %"struct.flatbuffers::Offset.43"** %777, align 8
  %779 = icmp ult %"struct.flatbuffers::Offset.43"* %776, %778
  %780 = ptrtoint %"struct.flatbuffers::Offset.43"* %778 to i64
  br i1 %779, label %781, label %786

781:                                              ; preds = %749
  %782 = getelementptr inbounds %"struct.flatbuffers::Offset.43", %"struct.flatbuffers::Offset.43"* %776, i64 0, i32 0
  store i32 %774, i32* %782, align 4
  %783 = getelementptr inbounds %"struct.flatbuffers::Offset.43", %"struct.flatbuffers::Offset.43"* %776, i64 1
  %784 = ptrtoint %"struct.flatbuffers::Offset.43"* %783 to i64
  %785 = bitcast %"struct.flatbuffers::Offset.43"** %775 to i64*
  store i64 %784, i64* %785, align 8
  br label %843

786:                                              ; preds = %749
  %787 = ptrtoint %"struct.flatbuffers::Offset.43"* %776 to i64
  %788 = bitcast %"struct.flatbuffers::Offset.43"** %775 to i64*
  %789 = bitcast %"class.std::__1::vector.41"* %751 to i64*
  %790 = load i64, i64* %789, align 8
  %791 = sub i64 %787, %790
  %792 = ashr exact i64 %791, 2
  %793 = add nsw i64 %792, 1
  %794 = icmp ugt i64 %793, 4611686018427387903
  br i1 %794, label %795, label %797

795:                                              ; preds = %786
  %796 = bitcast %"class.std::__1::vector.41"* %751 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %796) #13
  unreachable

797:                                              ; preds = %786
  %798 = bitcast %"struct.flatbuffers::Offset.43"** %777 to i64*
  %799 = sub i64 %780, %790
  %800 = ashr exact i64 %799, 2
  %801 = icmp ult i64 %800, 2305843009213693951
  br i1 %801, label %802, label %810

802:                                              ; preds = %797
  %803 = ashr exact i64 %799, 1
  %804 = icmp ult i64 %803, %793
  %805 = select i1 %804, i64 %793, i64 %803
  %806 = icmp eq i64 %805, 0
  br i1 %806, label %815, label %807

807:                                              ; preds = %802
  %808 = icmp ugt i64 %805, 4611686018427387903
  br i1 %808, label %809, label %810

809:                                              ; preds = %807
  call void @abort() #13
  unreachable

810:                                              ; preds = %807, %797
  %811 = phi i64 [ %805, %807 ], [ 4611686018427387903, %797 ]
  %812 = shl i64 %811, 2
  %813 = call i8* @_Znwm(i64 %812) #12
  %814 = bitcast i8* %813 to %"struct.flatbuffers::Offset.43"*
  br label %815

815:                                              ; preds = %810, %802
  %816 = phi i64 [ %811, %810 ], [ 0, %802 ]
  %817 = phi %"struct.flatbuffers::Offset.43"* [ %814, %810 ], [ null, %802 ]
  %818 = getelementptr inbounds %"struct.flatbuffers::Offset.43", %"struct.flatbuffers::Offset.43"* %817, i64 %792
  %819 = getelementptr inbounds %"struct.flatbuffers::Offset.43", %"struct.flatbuffers::Offset.43"* %817, i64 %816
  %820 = ptrtoint %"struct.flatbuffers::Offset.43"* %819 to i64
  %821 = getelementptr inbounds %"struct.flatbuffers::Offset.43", %"struct.flatbuffers::Offset.43"* %818, i64 0, i32 0
  store i32 %774, i32* %821, align 4
  %822 = getelementptr inbounds %"struct.flatbuffers::Offset.43", %"struct.flatbuffers::Offset.43"* %818, i64 1
  %823 = ptrtoint %"struct.flatbuffers::Offset.43"* %822 to i64
  %824 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %751, i64 0, i32 0, i32 0
  %825 = load %"struct.flatbuffers::Offset.43"*, %"struct.flatbuffers::Offset.43"** %824, align 8
  %826 = load i64, i64* %788, align 8
  %827 = ptrtoint %"struct.flatbuffers::Offset.43"* %825 to i64
  %828 = sub i64 %826, %827
  %829 = ashr exact i64 %828, 2
  %830 = sub nsw i64 0, %829
  %831 = getelementptr inbounds %"struct.flatbuffers::Offset.43", %"struct.flatbuffers::Offset.43"* %818, i64 %830
  %832 = ptrtoint %"struct.flatbuffers::Offset.43"* %831 to i64
  %833 = icmp sgt i64 %828, 0
  br i1 %833, label %834, label %838

834:                                              ; preds = %815
  %835 = bitcast %"struct.flatbuffers::Offset.43"* %831 to i8*
  %836 = bitcast %"struct.flatbuffers::Offset.43"* %825 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %835, i8* align 4 %836, i64 %828, i1 false) #11
  %837 = load %"struct.flatbuffers::Offset.43"*, %"struct.flatbuffers::Offset.43"** %824, align 8
  br label %838

838:                                              ; preds = %834, %815
  %839 = phi %"struct.flatbuffers::Offset.43"* [ %825, %815 ], [ %837, %834 ]
  store i64 %832, i64* %789, align 8
  store i64 %823, i64* %788, align 8
  store i64 %820, i64* %798, align 8
  %840 = icmp eq %"struct.flatbuffers::Offset.43"* %839, null
  br i1 %840, label %843, label %841

841:                                              ; preds = %838
  %842 = bitcast %"struct.flatbuffers::Offset.43"* %839 to i8*
  call void @_ZdlPv(i8* %842) #12
  br label %843

843:                                              ; preds = %841, %838, %781, %724, %722
  %844 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %845 = load i8, i8* %844, align 8, !range !5
  %846 = icmp eq i8 %845, 0
  br i1 %846, label %862, label %847

847:                                              ; preds = %843
  %848 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %849 = bitcast %"class.std::__1::basic_string"* %848 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %850 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %849, i64 0, i32 1, i32 0
  %851 = load i8, i8* %850, align 1
  %852 = icmp slt i8 %851, 0
  %853 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %848, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %854 = load i8*, i8** %853, align 8
  %855 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %856 = load i64, i64* %855, align 8
  %857 = bitcast %"class.std::__1::basic_string"* %848 to i8*
  %858 = zext i8 %851 to i64
  %859 = select i1 %852, i8* %854, i8* %857
  %860 = select i1 %852, i64 %856, i64 %858
  %861 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %859, i64 %860) #11
  br label %1528

862:                                              ; preds = %843
  %863 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 15, i32 0, i32 0, i32 0
  %864 = load %"struct.extensions::api::declarative_net_request::URLTransform"*, %"struct.extensions::api::declarative_net_request::URLTransform"** %863, align 8
  %865 = icmp eq %"struct.extensions::api::declarative_net_request::URLTransform"* %864, null
  br i1 %865, label %1528, label %866

866:                                              ; preds = %862
  %867 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %864, i64 0, i32 0, i32 0, i32 0, i32 0
  %868 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %867, align 8
  %869 = icmp eq %"class.std::__1::basic_string"* %868, null
  br i1 %869, label %884, label %870

870:                                              ; preds = %866
  %871 = bitcast %"class.std::__1::basic_string"* %868 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %872 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %871, i64 0, i32 1, i32 0
  %873 = load i8, i8* %872, align 1
  %874 = icmp slt i8 %873, 0
  %875 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %868, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %876 = load i8*, i8** %875, align 8
  %877 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %868, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %878 = load i64, i64* %877, align 8
  %879 = bitcast %"class.std::__1::basic_string"* %868 to i8*
  %880 = zext i8 %873 to i64
  %881 = select i1 %874, i8* %876, i8* %879
  %882 = select i1 %874, i64 %878, i64 %880
  %883 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %881, i64 %882) #11
  br label %884

884:                                              ; preds = %870, %866
  %885 = phi i32 [ %883, %870 ], [ 0, %866 ]
  %886 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %864, i64 0, i32 1, i32 0, i32 0, i32 0
  %887 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %886, align 8
  %888 = icmp eq %"class.std::__1::basic_string"* %887, null
  br i1 %888, label %903, label %889

889:                                              ; preds = %884
  %890 = bitcast %"class.std::__1::basic_string"* %887 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %891 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %890, i64 0, i32 1, i32 0
  %892 = load i8, i8* %891, align 1
  %893 = icmp slt i8 %892, 0
  %894 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %887, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %895 = load i8*, i8** %894, align 8
  %896 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %887, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %897 = load i64, i64* %896, align 8
  %898 = bitcast %"class.std::__1::basic_string"* %887 to i8*
  %899 = zext i8 %892 to i64
  %900 = select i1 %893, i8* %895, i8* %898
  %901 = select i1 %893, i64 %897, i64 %899
  %902 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %900, i64 %901) #11
  br label %903

903:                                              ; preds = %889, %884
  %904 = phi i32 [ %902, %889 ], [ 0, %884 ]
  %905 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %864, i64 0, i32 2, i32 0, i32 0, i32 0
  %906 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %905, align 8
  %907 = icmp eq %"class.std::__1::basic_string"* %906, null
  br i1 %907, label %931, label %908

908:                                              ; preds = %903
  %909 = bitcast %"class.std::__1::basic_string"* %906 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %910 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %909, i64 0, i32 1, i32 0
  %911 = load i8, i8* %910, align 1
  %912 = icmp slt i8 %911, 0
  br i1 %912, label %913, label %916

913:                                              ; preds = %908
  %914 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %906, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %915 = load i64, i64* %914, align 8
  br label %918

916:                                              ; preds = %908
  %917 = zext i8 %911 to i64
  br label %918

918:                                              ; preds = %916, %913
  %919 = phi i64 [ %915, %913 ], [ %917, %916 ]
  %920 = icmp eq i64 %919, 0
  br i1 %920, label %931, label %921

921:                                              ; preds = %918
  %922 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %906, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %923 = load i8*, i8** %922, align 8
  %924 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %906, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %925 = load i64, i64* %924, align 8
  %926 = bitcast %"class.std::__1::basic_string"* %906 to i8*
  %927 = zext i8 %911 to i64
  %928 = select i1 %912, i8* %923, i8* %926
  %929 = select i1 %912, i64 %925, i64 %927
  %930 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %928, i64 %929) #11
  br label %931

931:                                              ; preds = %921, %918, %903
  %932 = phi i1 [ true, %918 ], [ false, %921 ], [ false, %903 ]
  %933 = phi i32 [ 0, %918 ], [ %930, %921 ], [ 0, %903 ]
  %934 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %864, i64 0, i32 3, i32 0, i32 0, i32 0
  %935 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %934, align 8
  %936 = icmp eq %"class.std::__1::basic_string"* %935, null
  br i1 %936, label %960, label %937

937:                                              ; preds = %931
  %938 = bitcast %"class.std::__1::basic_string"* %935 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %939 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %938, i64 0, i32 1, i32 0
  %940 = load i8, i8* %939, align 1
  %941 = icmp slt i8 %940, 0
  br i1 %941, label %942, label %945

942:                                              ; preds = %937
  %943 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %935, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %944 = load i64, i64* %943, align 8
  br label %947

945:                                              ; preds = %937
  %946 = zext i8 %940 to i64
  br label %947

947:                                              ; preds = %945, %942
  %948 = phi i64 [ %944, %942 ], [ %946, %945 ]
  %949 = icmp eq i64 %948, 0
  br i1 %949, label %960, label %950

950:                                              ; preds = %947
  %951 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %935, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %952 = load i8*, i8** %951, align 8
  %953 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %935, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %954 = load i64, i64* %953, align 8
  %955 = bitcast %"class.std::__1::basic_string"* %935 to i8*
  %956 = zext i8 %940 to i64
  %957 = select i1 %941, i8* %952, i8* %955
  %958 = select i1 %941, i64 %954, i64 %956
  %959 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %957, i64 %958) #11
  br label %960

960:                                              ; preds = %950, %947, %931
  %961 = phi i1 [ true, %947 ], [ false, %950 ], [ false, %931 ]
  %962 = phi i32 [ 0, %947 ], [ %959, %950 ], [ 0, %931 ]
  %963 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %864, i64 0, i32 4, i32 0, i32 0, i32 0
  %964 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %963, align 8
  %965 = icmp eq %"class.std::__1::basic_string"* %964, null
  br i1 %965, label %994, label %966

966:                                              ; preds = %960
  %967 = bitcast %"class.std::__1::basic_string"* %964 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %968 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %967, i64 0, i32 1, i32 0
  %969 = load i8, i8* %968, align 1
  %970 = icmp slt i8 %969, 0
  br i1 %970, label %971, label %974

971:                                              ; preds = %966
  %972 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %964, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %973 = load i64, i64* %972, align 8
  br label %976

974:                                              ; preds = %966
  %975 = zext i8 %969 to i64
  br label %976

976:                                              ; preds = %974, %971
  %977 = phi i64 [ %973, %971 ], [ %975, %974 ]
  %978 = icmp eq i64 %977, 0
  br i1 %978, label %994, label %979

979:                                              ; preds = %976
  br i1 %970, label %980, label %985

980:                                              ; preds = %979
  %981 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %964, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %982 = load i8*, i8** %981, align 8
  %983 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %964, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %984 = load i64, i64* %983, align 8
  br label %988

985:                                              ; preds = %979
  %986 = bitcast %"class.std::__1::basic_string"* %964 to i8*
  %987 = zext i8 %969 to i64
  br label %988

988:                                              ; preds = %985, %980
  %989 = phi i8* [ %982, %980 ], [ %986, %985 ]
  %990 = phi i64 [ %984, %980 ], [ %987, %985 ]
  %991 = getelementptr inbounds i8, i8* %989, i64 1
  %992 = add i64 %990, -1
  %993 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %991, i64 %992) #11
  br label %994

994:                                              ; preds = %988, %976, %960
  %995 = phi i1 [ true, %976 ], [ false, %988 ], [ false, %960 ]
  %996 = phi i32 [ 0, %976 ], [ %993, %988 ], [ 0, %960 ]
  %997 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %864, i64 0, i32 6, i32 0, i32 0, i32 0
  %998 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %997, align 8
  %999 = icmp eq %"class.std::__1::basic_string"* %998, null
  br i1 %999, label %1028, label %1000

1000:                                             ; preds = %994
  %1001 = bitcast %"class.std::__1::basic_string"* %998 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1002 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1001, i64 0, i32 1, i32 0
  %1003 = load i8, i8* %1002, align 1
  %1004 = icmp slt i8 %1003, 0
  br i1 %1004, label %1005, label %1008

1005:                                             ; preds = %1000
  %1006 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %998, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1007 = load i64, i64* %1006, align 8
  br label %1010

1008:                                             ; preds = %1000
  %1009 = zext i8 %1003 to i64
  br label %1010

1010:                                             ; preds = %1008, %1005
  %1011 = phi i64 [ %1007, %1005 ], [ %1009, %1008 ]
  %1012 = icmp eq i64 %1011, 0
  br i1 %1012, label %1028, label %1013

1013:                                             ; preds = %1010
  br i1 %1004, label %1014, label %1019

1014:                                             ; preds = %1013
  %1015 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %998, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1016 = load i8*, i8** %1015, align 8
  %1017 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %998, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1018 = load i64, i64* %1017, align 8
  br label %1022

1019:                                             ; preds = %1013
  %1020 = bitcast %"class.std::__1::basic_string"* %998 to i8*
  %1021 = zext i8 %1003 to i64
  br label %1022

1022:                                             ; preds = %1019, %1014
  %1023 = phi i8* [ %1016, %1014 ], [ %1020, %1019 ]
  %1024 = phi i64 [ %1018, %1014 ], [ %1021, %1019 ]
  %1025 = getelementptr inbounds i8, i8* %1023, i64 1
  %1026 = add i64 %1024, -1
  %1027 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %1025, i64 %1026) #11
  br label %1028

1028:                                             ; preds = %1022, %1010, %994
  %1029 = phi i1 [ true, %1010 ], [ false, %1022 ], [ false, %994 ]
  %1030 = phi i32 [ 0, %1010 ], [ %1027, %1022 ], [ 0, %994 ]
  %1031 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %864, i64 0, i32 7, i32 0, i32 0, i32 0
  %1032 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1031, align 8
  %1033 = icmp eq %"class.std::__1::basic_string"* %1032, null
  br i1 %1033, label %1048, label %1034

1034:                                             ; preds = %1028
  %1035 = bitcast %"class.std::__1::basic_string"* %1032 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1036 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1035, i64 0, i32 1, i32 0
  %1037 = load i8, i8* %1036, align 1
  %1038 = icmp slt i8 %1037, 0
  %1039 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1032, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1040 = load i8*, i8** %1039, align 8
  %1041 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1032, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1042 = load i64, i64* %1041, align 8
  %1043 = bitcast %"class.std::__1::basic_string"* %1032 to i8*
  %1044 = zext i8 %1037 to i64
  %1045 = select i1 %1038, i8* %1040, i8* %1043
  %1046 = select i1 %1038, i64 %1042, i64 %1044
  %1047 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %1045, i64 %1046) #11
  br label %1048

1048:                                             ; preds = %1034, %1028
  %1049 = phi i32 [ %1047, %1034 ], [ 0, %1028 ]
  %1050 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %864, i64 0, i32 8, i32 0, i32 0, i32 0
  %1051 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1050, align 8
  %1052 = icmp eq %"class.std::__1::basic_string"* %1051, null
  br i1 %1052, label %1067, label %1053

1053:                                             ; preds = %1048
  %1054 = bitcast %"class.std::__1::basic_string"* %1051 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1055 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1054, i64 0, i32 1, i32 0
  %1056 = load i8, i8* %1055, align 1
  %1057 = icmp slt i8 %1056, 0
  %1058 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1051, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1059 = load i8*, i8** %1058, align 8
  %1060 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1051, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1061 = load i64, i64* %1060, align 8
  %1062 = bitcast %"class.std::__1::basic_string"* %1051 to i8*
  %1063 = zext i8 %1056 to i64
  %1064 = select i1 %1057, i8* %1059, i8* %1062
  %1065 = select i1 %1057, i64 %1061, i64 %1063
  %1066 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %1064, i64 %1065) #11
  br label %1067

1067:                                             ; preds = %1053, %1048
  %1068 = phi i32 [ %1066, %1053 ], [ 0, %1048 ]
  %1069 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::URLTransform", %"struct.extensions::api::declarative_net_request::URLTransform"* %864, i64 0, i32 5, i32 0, i32 0, i32 0
  %1070 = load %"struct.extensions::api::declarative_net_request::QueryTransform"*, %"struct.extensions::api::declarative_net_request::QueryTransform"** %1069, align 8
  %1071 = icmp eq %"struct.extensions::api::declarative_net_request::QueryTransform"* %1070, null
  br i1 %1071, label %1524, label %1072

1072:                                             ; preds = %1067
  %1073 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::QueryTransform", %"struct.extensions::api::declarative_net_request::QueryTransform"* %1070, i64 0, i32 0, i32 0, i32 0, i32 0
  %1074 = load %"class.std::__1::vector.54"*, %"class.std::__1::vector.54"** %1073, align 8
  %1075 = icmp eq %"class.std::__1::vector.54"* %1074, null
  br i1 %1075, label %1310, label %1076

1076:                                             ; preds = %1072
  %1077 = bitcast %"class.std::__1::set.155"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1077) #11
  %1078 = getelementptr inbounds %"class.std::__1::set.155", %"class.std::__1::set.155"* %5, i64 0, i32 0, i32 0
  %1079 = getelementptr inbounds %"class.std::__1::set.155", %"class.std::__1::set.155"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1080 = getelementptr inbounds %"class.std::__1::set.155", %"class.std::__1::set.155"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %1081 = getelementptr inbounds %"class.std::__1::set.155", %"class.std::__1::set.155"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %1082 = bitcast %"class.std::__1::__tree_node_base"** %1079 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1082, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %1081, %"class.std::__1::__tree_end_node"** %1078, align 8
  %1083 = load %"class.std::__1::vector.54"*, %"class.std::__1::vector.54"** %1073, align 8
  %1084 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %1083, i64 0, i32 0, i32 0
  %1085 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1084, align 8
  %1086 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %1083, i64 0, i32 0, i32 1
  %1087 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1086, align 8
  %1088 = icmp eq %"class.std::__1::basic_string"* %1085, %1087
  br i1 %1088, label %1303, label %1089

1089:                                             ; preds = %1076
  %1090 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %1091 = getelementptr inbounds %"class.std::__1::set.155", %"class.std::__1::set.155"* %5, i64 0, i32 0
  %1092 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  %1093 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %1094 = bitcast %"class.std::__1::set.155"* %5 to i64*
  %1095 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1096 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1095, i64 0, i32 1, i32 0
  %1097 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %1257

1098:                                             ; preds = %1300
  %1099 = load i64, i64* %1080, align 8
  %1100 = icmp eq i64 %1099, 0
  br i1 %1100, label %1303, label %1101

1101:                                             ; preds = %1098
  %1102 = bitcast %"class.std::__1::vector.187"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1102) #11
  %1103 = getelementptr inbounds %"class.std::__1::vector.187", %"class.std::__1::vector.187"* %4, i64 0, i32 0, i32 0
  %1104 = getelementptr inbounds %"class.std::__1::vector.187", %"class.std::__1::vector.187"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1102, i8 0, i64 24, i1 false) #11
  %1105 = bitcast %"struct.flatbuffers::Offset.113"** %1104 to i64*
  %1106 = bitcast %"class.std::__1::vector.187"* %4 to i64*
  %1107 = icmp ugt i64 %1099, 4611686018427387903
  br i1 %1107, label %1108, label %1109

1108:                                             ; preds = %1101
  call void @abort() #13
  unreachable

1109:                                             ; preds = %1101
  %1110 = getelementptr inbounds %"class.std::__1::vector.187", %"class.std::__1::vector.187"* %4, i64 0, i32 0, i32 1
  %1111 = bitcast %"struct.flatbuffers::Offset.113"** %1110 to i64*
  %1112 = shl i64 %1099, 2
  %1113 = call i8* @_Znwm(i64 %1112) #12
  %1114 = bitcast i8* %1113 to %"struct.flatbuffers::Offset.113"*
  %1115 = ptrtoint i8* %1113 to i64
  %1116 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %1114, i64 %1099
  %1117 = ptrtoint %"struct.flatbuffers::Offset.113"* %1116 to i64
  store i64 %1115, i64* %1106, align 8
  store i64 %1115, i64* %1111, align 8
  store i64 %1117, i64* %1105, align 8
  %1118 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1078, align 8
  %1119 = icmp eq %"class.std::__1::__tree_end_node"* %1118, %1081
  br i1 %1119, label %1123, label %1148

1120:                                             ; preds = %1252
  %1121 = load %"struct.flatbuffers::Offset.113"*, %"struct.flatbuffers::Offset.113"** %1103, align 8
  %1122 = bitcast %"struct.flatbuffers::Offset.113"* %1121 to i8*
  br label %1123

1123:                                             ; preds = %1120, %1109
  %1124 = phi i8* [ %1122, %1120 ], [ %1113, %1109 ]
  %1125 = phi %"struct.flatbuffers::Offset.113"* [ %1121, %1120 ], [ %1114, %1109 ]
  %1126 = phi %"struct.flatbuffers::Offset.113"* [ %1223, %1120 ], [ %1114, %1109 ]
  %1127 = icmp eq %"struct.flatbuffers::Offset.113"* %1125, %1126
  %1128 = select i1 %1127, %"struct.flatbuffers::Offset.113"* bitcast (i8* @_ZZN11flatbuffers4dataINS_6OffsetINS_6StringEEENSt3__19allocatorIS3_EEEEPKT_RKNS4_6vectorIS7_T0_EEE1t to %"struct.flatbuffers::Offset.113"*), %"struct.flatbuffers::Offset.113"* %1125
  %1129 = ptrtoint %"struct.flatbuffers::Offset.113"* %1126 to i64
  %1130 = ptrtoint %"struct.flatbuffers::Offset.113"* %1125 to i64
  %1131 = sub i64 %1129, %1130
  %1132 = ashr exact i64 %1131, 2
  call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* %18, i64 %1132, i64 4) #11
  %1133 = icmp eq i64 %1131, 0
  br i1 %1133, label %1141, label %1134

1134:                                             ; preds = %1123, %1134
  %1135 = phi i64 [ %1136, %1134 ], [ %1132, %1123 ]
  %1136 = add i64 %1135, -1
  %1137 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %1128, i64 %1136, i32 0
  %1138 = load i32, i32* %1137, align 4
  %1139 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementINS_6StringEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %18, i32 %1138) #11
  %1140 = icmp eq i64 %1136, 0
  br i1 %1140, label %1141, label %1134

1141:                                             ; preds = %1134, %1123
  %1142 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %1142, align 2
  %1143 = trunc i64 %1132 to i32
  %1144 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %18, i32 %1143) #11
  %1145 = icmp eq %"struct.flatbuffers::Offset.113"* %1125, null
  br i1 %1145, label %1147, label %1146

1146:                                             ; preds = %1141
  store i64 %1130, i64* %1111, align 8
  call void @_ZdlPv(i8* %1124) #12
  br label %1147

1147:                                             ; preds = %1146, %1141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1102) #11
  br label %1303

1148:                                             ; preds = %1109, %1255
  %1149 = phi i64 [ %1224, %1255 ], [ %1115, %1109 ]
  %1150 = phi %"struct.flatbuffers::Offset.113"* [ %1256, %1255 ], [ %1116, %1109 ]
  %1151 = phi %"struct.flatbuffers::Offset.113"* [ %1223, %1255 ], [ %1114, %1109 ]
  %1152 = phi %"class.std::__1::__tree_end_node"* [ %1253, %1255 ], [ %1118, %1109 ]
  %1153 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1152, i64 4
  %1154 = bitcast %"class.std::__1::__tree_end_node"* %1153 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1155 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1154, i64 0, i32 1, i32 0
  %1156 = load i8, i8* %1155, align 1
  %1157 = icmp slt i8 %1156, 0
  %1158 = bitcast %"class.std::__1::__tree_end_node"* %1153 to i8**
  %1159 = load i8*, i8** %1158, align 8
  %1160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1152, i64 5
  %1161 = bitcast %"class.std::__1::__tree_end_node"* %1160 to i64*
  %1162 = load i64, i64* %1161, align 8
  %1163 = bitcast %"class.std::__1::__tree_end_node"* %1153 to i8*
  %1164 = zext i8 %1156 to i64
  %1165 = select i1 %1157, i8* %1159, i8* %1163
  %1166 = select i1 %1157, i64 %1162, i64 %1164
  %1167 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %1165, i64 %1166) #11
  %1168 = icmp ult %"struct.flatbuffers::Offset.113"* %1151, %1150
  %1169 = ptrtoint %"struct.flatbuffers::Offset.113"* %1150 to i64
  br i1 %1168, label %1170, label %1174

1170:                                             ; preds = %1148
  %1171 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %1151, i64 0, i32 0
  store i32 %1167, i32* %1171, align 4
  %1172 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %1151, i64 1
  %1173 = ptrtoint %"struct.flatbuffers::Offset.113"* %1172 to i64
  store i64 %1173, i64* %1111, align 8
  br label %1222

1174:                                             ; preds = %1148
  %1175 = ptrtoint %"struct.flatbuffers::Offset.113"* %1151 to i64
  %1176 = load i64, i64* %1106, align 8
  %1177 = sub i64 %1175, %1176
  %1178 = ashr exact i64 %1177, 2
  %1179 = add nsw i64 %1178, 1
  %1180 = icmp ugt i64 %1179, 4611686018427387903
  br i1 %1180, label %1181, label %1183

1181:                                             ; preds = %1174
  %1182 = bitcast %"class.std::__1::vector.187"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1182) #13
  unreachable

1183:                                             ; preds = %1174
  %1184 = sub i64 %1169, %1176
  %1185 = ashr exact i64 %1184, 2
  %1186 = icmp ult i64 %1185, 2305843009213693951
  br i1 %1186, label %1187, label %1195

1187:                                             ; preds = %1183
  %1188 = ashr exact i64 %1184, 1
  %1189 = icmp ult i64 %1188, %1179
  %1190 = select i1 %1189, i64 %1179, i64 %1188
  %1191 = icmp eq i64 %1190, 0
  br i1 %1191, label %1200, label %1192

1192:                                             ; preds = %1187
  %1193 = icmp ugt i64 %1190, 4611686018427387903
  br i1 %1193, label %1194, label %1195

1194:                                             ; preds = %1192
  call void @abort() #13
  unreachable

1195:                                             ; preds = %1192, %1183
  %1196 = phi i64 [ %1190, %1192 ], [ 4611686018427387903, %1183 ]
  %1197 = shl i64 %1196, 2
  %1198 = call i8* @_Znwm(i64 %1197) #12
  %1199 = bitcast i8* %1198 to %"struct.flatbuffers::Offset.113"*
  br label %1200

1200:                                             ; preds = %1195, %1187
  %1201 = phi i64 [ %1196, %1195 ], [ 0, %1187 ]
  %1202 = phi %"struct.flatbuffers::Offset.113"* [ %1199, %1195 ], [ null, %1187 ]
  %1203 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %1202, i64 %1178
  %1204 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %1202, i64 %1201
  %1205 = ptrtoint %"struct.flatbuffers::Offset.113"* %1204 to i64
  %1206 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %1203, i64 0, i32 0
  store i32 %1167, i32* %1206, align 4
  %1207 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %1203, i64 1
  %1208 = ptrtoint %"struct.flatbuffers::Offset.113"* %1207 to i64
  %1209 = sub i64 %1149, %1176
  %1210 = ashr exact i64 %1209, 2
  %1211 = sub nsw i64 0, %1210
  %1212 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %1203, i64 %1211
  %1213 = ptrtoint %"struct.flatbuffers::Offset.113"* %1212 to i64
  %1214 = icmp sgt i64 %1209, 0
  br i1 %1214, label %1215, label %1218

1215:                                             ; preds = %1200
  %1216 = bitcast %"struct.flatbuffers::Offset.113"* %1212 to i8*
  %1217 = inttoptr i64 %1176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1216, i8* align 4 %1217, i64 %1209, i1 false) #11
  br label %1218

1218:                                             ; preds = %1215, %1200
  store i64 %1213, i64* %1106, align 8
  store i64 %1208, i64* %1111, align 8
  store i64 %1205, i64* %1105, align 8
  %1219 = icmp eq i64 %1176, 0
  br i1 %1219, label %1222, label %1220

1220:                                             ; preds = %1218
  %1221 = inttoptr i64 %1176 to i8*
  call void @_ZdlPv(i8* %1221) #12
  br label %1222

1222:                                             ; preds = %1220, %1218, %1170
  %1223 = phi %"struct.flatbuffers::Offset.113"* [ %1172, %1170 ], [ %1207, %1218 ], [ %1207, %1220 ]
  %1224 = phi i64 [ %1173, %1170 ], [ %1208, %1218 ], [ %1208, %1220 ]
  %1225 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1152, i64 1, i32 0
  %1226 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1225, align 8
  %1227 = icmp eq %"class.std::__1::__tree_node_base"* %1226, null
  br i1 %1227, label %1228, label %1236

1228:                                             ; preds = %1222
  %1229 = bitcast %"class.std::__1::__tree_end_node"* %1152 to %"class.std::__1::__tree_node_base"*
  %1230 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1152, i64 2
  %1231 = bitcast %"class.std::__1::__tree_end_node"* %1230 to %"class.std::__1::__tree_end_node"**
  %1232 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1231, align 8
  %1233 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1232, i64 0, i32 0
  %1234 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1233, align 8
  %1235 = icmp eq %"class.std::__1::__tree_node_base"* %1234, %1229
  br i1 %1235, label %1252, label %1243

1236:                                             ; preds = %1222, %1236
  %1237 = phi %"class.std::__1::__tree_node_base"* [ %1239, %1236 ], [ %1226, %1222 ]
  %1238 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1237, i64 0, i32 0, i32 0
  %1239 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1238, align 8
  %1240 = icmp eq %"class.std::__1::__tree_node_base"* %1239, null
  br i1 %1240, label %1241, label %1236

1241:                                             ; preds = %1236
  %1242 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1237, i64 0, i32 0
  br label %1252

1243:                                             ; preds = %1228, %1243
  %1244 = phi %"class.std::__1::__tree_end_node"** [ %1247, %1243 ], [ %1231, %1228 ]
  %1245 = bitcast %"class.std::__1::__tree_end_node"** %1244 to %"class.std::__1::__tree_node_base"**
  %1246 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1245, align 8
  %1247 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1246, i64 0, i32 2
  %1248 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1247, align 8
  %1249 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1248, i64 0, i32 0
  %1250 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1249, align 8
  %1251 = icmp eq %"class.std::__1::__tree_node_base"* %1250, %1246
  br i1 %1251, label %1252, label %1243

1252:                                             ; preds = %1243, %1241, %1228
  %1253 = phi %"class.std::__1::__tree_end_node"* [ %1242, %1241 ], [ %1232, %1228 ], [ %1248, %1243 ]
  %1254 = icmp eq %"class.std::__1::__tree_end_node"* %1253, %1081
  br i1 %1254, label %1120, label %1255

1255:                                             ; preds = %1252
  %1256 = load %"struct.flatbuffers::Offset.113"*, %"struct.flatbuffers::Offset.113"** %1104, align 8
  br label %1148

1257:                                             ; preds = %1300, %1089
  %1258 = phi %"class.std::__1::basic_string"* [ %1085, %1089 ], [ %1301, %1300 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1090) #11
  %1259 = bitcast %"class.std::__1::basic_string"* %1258 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1260 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1259, i64 0, i32 1, i32 0
  %1261 = load i8, i8* %1260, align 1
  %1262 = icmp slt i8 %1261, 0
  %1263 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1258, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1264 = load i8*, i8** %1263, align 8
  %1265 = bitcast %"class.std::__1::basic_string"* %1258 to i8*
  %1266 = select i1 %1262, i8* %1264, i8* %1265
  %1267 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1258, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1268 = load i64, i64* %1267, align 8
  %1269 = zext i8 %1261 to i64
  %1270 = select i1 %1262, i64 %1268, i64 %1269
  call void @_ZN3net21EscapeQueryParamValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.std::__1::basic_string"* nonnull sret %6, i8* %1266, i64 %1270, i1 zeroext true) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1092) #11
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  %1271 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.156"* nonnull %1091, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #11
  %1272 = bitcast %"class.std::__1::__tree_node_base"** %1271 to %"class.std::__1::__tree_node.180"**
  %1273 = load %"class.std::__1::__tree_node.180"*, %"class.std::__1::__tree_node.180"** %1272, align 8
  %1274 = icmp eq %"class.std::__1::__tree_node.180"* %1273, null
  br i1 %1274, label %1275, label %1295

1275:                                             ; preds = %1257
  %1276 = call i8* @_Znwm(i64 56) #12, !noalias !30
  %1277 = getelementptr inbounds i8, i8* %1276, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1277, i8* nonnull align 8 %1090, i64 24, i1 false) #11, !noalias !30
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1090, i8 0, i64 24, i1 false) #11, !noalias !30
  %1278 = load i64, i64* %1093, align 8
  %1279 = bitcast i8* %1276 to %"class.std::__1::__tree_node_base"*
  %1280 = getelementptr inbounds i8, i8* %1276, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1276, i8 0, i64 16, i1 false) #11
  %1281 = bitcast i8* %1280 to i64*
  store i64 %1278, i64* %1281, align 8
  %1282 = bitcast %"class.std::__1::__tree_node_base"** %1271 to i8**
  store i8* %1276, i8** %1282, align 8
  %1283 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1078, align 8
  %1284 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1283, i64 0, i32 0
  %1285 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1284, align 8
  %1286 = icmp eq %"class.std::__1::__tree_node_base"* %1285, null
  br i1 %1286, label %1290, label %1287

1287:                                             ; preds = %1275
  %1288 = ptrtoint %"class.std::__1::__tree_node_base"* %1285 to i64
  store i64 %1288, i64* %1094, align 8
  %1289 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1271, align 8
  br label %1290

1290:                                             ; preds = %1287, %1275
  %1291 = phi %"class.std::__1::__tree_node_base"* [ %1279, %1275 ], [ %1289, %1287 ]
  %1292 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1079, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %1292, %"class.std::__1::__tree_node_base"* %1291) #11
  %1293 = load i64, i64* %1080, align 8
  %1294 = add i64 %1293, 1
  store i64 %1294, i64* %1080, align 8
  br label %1295

1295:                                             ; preds = %1290, %1257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1092) #11
  %1296 = load i8, i8* %1096, align 1
  %1297 = icmp slt i8 %1296, 0
  br i1 %1297, label %1298, label %1300

1298:                                             ; preds = %1295
  %1299 = load i8*, i8** %1097, align 8
  call void @_ZdlPv(i8* %1299) #12
  br label %1300

1300:                                             ; preds = %1298, %1295
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1090) #11
  %1301 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1258, i64 1
  %1302 = icmp eq %"class.std::__1::basic_string"* %1301, %1087
  br i1 %1302, label %1098, label %1257

1303:                                             ; preds = %1147, %1098, %1076
  %1304 = phi i32 [ %1144, %1147 ], [ 0, %1098 ], [ 0, %1076 ]
  %1305 = getelementptr inbounds %"class.std::__1::set.155", %"class.std::__1::set.155"* %5, i64 0, i32 0
  %1306 = bitcast %"class.std::__1::__tree_end_node"* %1081 to %"class.std::__1::__tree_node.180"**
  %1307 = load %"class.std::__1::__tree_node.180"*, %"class.std::__1::__tree_node.180"** %1306, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.156"* nonnull %1305, %"class.std::__1::__tree_node.180"* %1307) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1077) #11
  %1308 = load %"struct.extensions::api::declarative_net_request::QueryTransform"*, %"struct.extensions::api::declarative_net_request::QueryTransform"** %1069, align 8
  %1309 = icmp eq %"struct.extensions::api::declarative_net_request::QueryTransform"* %1308, null
  br i1 %1309, label %1524, label %1310

1310:                                             ; preds = %1303, %1072
  %1311 = phi i32 [ %1304, %1303 ], [ 0, %1072 ]
  %1312 = phi %"struct.extensions::api::declarative_net_request::QueryTransform"* [ %1308, %1303 ], [ %1070, %1072 ]
  %1313 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::QueryTransform", %"struct.extensions::api::declarative_net_request::QueryTransform"* %1312, i64 0, i32 1, i32 0, i32 0, i32 0
  %1314 = load %"class.std::__1::vector.82"*, %"class.std::__1::vector.82"** %1313, align 8
  %1315 = icmp eq %"class.std::__1::vector.82"* %1314, null
  br i1 %1315, label %1524, label %1316

1316:                                             ; preds = %1310
  %1317 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %1314, i64 0, i32 0, i32 0
  %1318 = load %"struct.extensions::api::declarative_net_request::QueryKeyValue"*, %"struct.extensions::api::declarative_net_request::QueryKeyValue"** %1317, align 8
  %1319 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %1314, i64 0, i32 0, i32 1
  %1320 = load %"struct.extensions::api::declarative_net_request::QueryKeyValue"*, %"struct.extensions::api::declarative_net_request::QueryKeyValue"** %1319, align 8
  %1321 = icmp eq %"struct.extensions::api::declarative_net_request::QueryKeyValue"* %1318, %1320
  br i1 %1321, label %1524, label %1322

1322:                                             ; preds = %1316
  %1323 = bitcast %"class.std::__1::vector.168"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1323) #11
  %1324 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %7, i64 0, i32 0, i32 0
  %1325 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %7, i64 0, i32 0, i32 1
  %1326 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1323, i8 0, i64 24, i1 false) #11
  %1327 = load %"class.std::__1::vector.82"*, %"class.std::__1::vector.82"** %1313, align 8
  %1328 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %1327, i64 0, i32 0, i32 1
  %1329 = bitcast %"struct.extensions::api::declarative_net_request::QueryKeyValue"** %1328 to i64*
  %1330 = load i64, i64* %1329, align 8
  %1331 = bitcast %"class.std::__1::vector.82"* %1327 to i64*
  %1332 = load i64, i64* %1331, align 8
  %1333 = sub i64 %1330, %1332
  %1334 = sdiv exact i64 %1333, 48
  %1335 = bitcast %"struct.flatbuffers::Offset.170"** %1326 to i64*
  %1336 = bitcast %"class.std::__1::vector.168"* %7 to i64*
  %1337 = icmp eq i64 %1333, 0
  %1338 = inttoptr i64 %1330 to %"struct.extensions::api::declarative_net_request::QueryKeyValue"*
  br i1 %1337, label %1353, label %1339

1339:                                             ; preds = %1322
  %1340 = icmp ugt i64 %1334, 4611686018427387903
  br i1 %1340, label %1341, label %1342

1341:                                             ; preds = %1339
  call void @abort() #13
  unreachable

1342:                                             ; preds = %1339
  %1343 = bitcast %"struct.flatbuffers::Offset.170"** %1325 to i64*
  %1344 = shl nsw i64 %1334, 2
  %1345 = call i8* @_Znwm(i64 %1344) #12
  %1346 = bitcast i8* %1345 to %"struct.flatbuffers::Offset.170"*
  %1347 = ptrtoint i8* %1345 to i64
  %1348 = getelementptr inbounds %"struct.flatbuffers::Offset.170", %"struct.flatbuffers::Offset.170"* %1346, i64 %1334
  %1349 = ptrtoint %"struct.flatbuffers::Offset.170"* %1348 to i64
  store i64 %1347, i64* %1336, align 8
  store i64 %1347, i64* %1343, align 8
  store i64 %1349, i64* %1335, align 8
  %1350 = load %"class.std::__1::vector.82"*, %"class.std::__1::vector.82"** %1313, align 8
  %1351 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %1350, i64 0, i32 0, i32 1
  %1352 = load %"struct.extensions::api::declarative_net_request::QueryKeyValue"*, %"struct.extensions::api::declarative_net_request::QueryKeyValue"** %1351, align 8
  br label %1353

1353:                                             ; preds = %1342, %1322
  %1354 = phi %"struct.flatbuffers::Offset.170"* [ null, %1322 ], [ %1346, %1342 ]
  %1355 = phi %"struct.extensions::api::declarative_net_request::QueryKeyValue"* [ %1338, %1322 ], [ %1352, %1342 ]
  %1356 = phi %"class.std::__1::vector.82"* [ %1327, %1322 ], [ %1350, %1342 ]
  %1357 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %1356, i64 0, i32 0, i32 0
  %1358 = load %"struct.extensions::api::declarative_net_request::QueryKeyValue"*, %"struct.extensions::api::declarative_net_request::QueryKeyValue"** %1357, align 8
  %1359 = icmp eq %"struct.extensions::api::declarative_net_request::QueryKeyValue"* %1358, %1355
  br i1 %1359, label %1381, label %1360

1360:                                             ; preds = %1353
  %1361 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %1362 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1363 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1362, i64 0, i32 1, i32 0
  %1364 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1365 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1366 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %1367 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1368 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1367, i64 0, i32 1, i32 0
  %1369 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1370 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1371 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 3
  %1372 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 4
  %1373 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 6
  %1374 = bitcast i8** %1373 to i64*
  %1375 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 5
  %1376 = bitcast i8** %1375 to i64*
  %1377 = bitcast %"struct.flatbuffers::Offset.170"** %1325 to i64*
  br label %1409

1378:                                             ; preds = %1521
  %1379 = load %"struct.flatbuffers::Offset.170"*, %"struct.flatbuffers::Offset.170"** %1324, align 8
  %1380 = load %"struct.flatbuffers::Offset.170"*, %"struct.flatbuffers::Offset.170"** %1325, align 8
  br label %1381

1381:                                             ; preds = %1378, %1353
  %1382 = phi %"struct.flatbuffers::Offset.170"* [ %1380, %1378 ], [ %1354, %1353 ]
  %1383 = phi %"struct.flatbuffers::Offset.170"* [ %1379, %1378 ], [ %1354, %1353 ]
  %1384 = icmp eq %"struct.flatbuffers::Offset.170"* %1383, %1382
  %1385 = select i1 %1384, %"struct.flatbuffers::Offset.170"* bitcast (i8* @_ZZN11flatbuffers4dataINS_6OffsetIN10extensions23declarative_net_request4flat13QueryKeyValueEEENSt3__19allocatorIS6_EEEEPKT_RKNS7_6vectorISA_T0_EEE1t to %"struct.flatbuffers::Offset.170"*), %"struct.flatbuffers::Offset.170"* %1383
  %1386 = ptrtoint %"struct.flatbuffers::Offset.170"* %1382 to i64
  %1387 = ptrtoint %"struct.flatbuffers::Offset.170"* %1383 to i64
  %1388 = sub i64 %1386, %1387
  %1389 = ashr exact i64 %1388, 2
  call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* %18, i64 %1389, i64 4) #11
  %1390 = icmp eq i64 %1388, 0
  br i1 %1390, label %1398, label %1391

1391:                                             ; preds = %1381, %1391
  %1392 = phi i64 [ %1393, %1391 ], [ %1389, %1381 ]
  %1393 = add i64 %1392, -1
  %1394 = getelementptr inbounds %"struct.flatbuffers::Offset.170", %"struct.flatbuffers::Offset.170"* %1385, i64 %1393, i32 0
  %1395 = load i32, i32* %1394, align 4
  %1396 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN10extensions23declarative_net_request4flat13QueryKeyValueEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %18, i32 %1395) #11
  %1397 = icmp eq i64 %1393, 0
  br i1 %1397, label %1398, label %1391

1398:                                             ; preds = %1391, %1381
  %1399 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %1399, align 2
  %1400 = trunc i64 %1389 to i32
  %1401 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %18, i32 %1400) #11
  %1402 = load %"struct.flatbuffers::Offset.170"*, %"struct.flatbuffers::Offset.170"** %1324, align 8
  %1403 = icmp eq %"struct.flatbuffers::Offset.170"* %1402, null
  br i1 %1403, label %1408, label %1404

1404:                                             ; preds = %1398
  %1405 = ptrtoint %"struct.flatbuffers::Offset.170"* %1402 to i64
  %1406 = bitcast %"struct.flatbuffers::Offset.170"** %1325 to i64*
  store i64 %1405, i64* %1406, align 8
  %1407 = bitcast %"struct.flatbuffers::Offset.170"* %1402 to i8*
  call void @_ZdlPv(i8* %1407) #12
  br label %1408

1408:                                             ; preds = %1404, %1398
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1323) #11
  br label %1524

1409:                                             ; preds = %1521, %1360
  %1410 = phi %"struct.extensions::api::declarative_net_request::QueryKeyValue"* [ %1358, %1360 ], [ %1522, %1521 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1361) #11
  %1411 = bitcast %"struct.extensions::api::declarative_net_request::QueryKeyValue"* %1410 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1412 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1411, i64 0, i32 1, i32 0
  %1413 = load i8, i8* %1412, align 1
  %1414 = icmp slt i8 %1413, 0
  %1415 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::QueryKeyValue", %"struct.extensions::api::declarative_net_request::QueryKeyValue"* %1410, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1416 = load i8*, i8** %1415, align 8
  %1417 = bitcast %"struct.extensions::api::declarative_net_request::QueryKeyValue"* %1410 to i8*
  %1418 = select i1 %1414, i8* %1416, i8* %1417
  %1419 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::QueryKeyValue", %"struct.extensions::api::declarative_net_request::QueryKeyValue"* %1410, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1420 = load i64, i64* %1419, align 8
  %1421 = zext i8 %1413 to i64
  %1422 = select i1 %1414, i64 %1420, i64 %1421
  call void @_ZN3net21EscapeQueryParamValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.std::__1::basic_string"* nonnull sret %8, i8* %1418, i64 %1422, i1 zeroext true) #11
  %1423 = load i8, i8* %1363, align 1
  %1424 = icmp slt i8 %1423, 0
  %1425 = load i8*, i8** %1364, align 8
  %1426 = load i64, i64* %1365, align 8
  %1427 = zext i8 %1423 to i64
  %1428 = select i1 %1424, i8* %1425, i8* %1361
  %1429 = select i1 %1424, i64 %1426, i64 %1427
  %1430 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %1428, i64 %1429) #11
  %1431 = load i8, i8* %1363, align 1
  %1432 = icmp slt i8 %1431, 0
  br i1 %1432, label %1433, label %1435

1433:                                             ; preds = %1409
  %1434 = load i8*, i8** %1364, align 8
  call void @_ZdlPv(i8* %1434) #12
  br label %1435

1435:                                             ; preds = %1433, %1409
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1361) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1366) #11
  %1436 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::QueryKeyValue", %"struct.extensions::api::declarative_net_request::QueryKeyValue"* %1410, i64 0, i32 1
  %1437 = bitcast %"class.std::__1::basic_string"* %1436 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1438 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1437, i64 0, i32 1, i32 0
  %1439 = load i8, i8* %1438, align 1
  %1440 = icmp slt i8 %1439, 0
  %1441 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1436, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1442 = load i8*, i8** %1441, align 8
  %1443 = bitcast %"class.std::__1::basic_string"* %1436 to i8*
  %1444 = select i1 %1440, i8* %1442, i8* %1443
  %1445 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::QueryKeyValue", %"struct.extensions::api::declarative_net_request::QueryKeyValue"* %1410, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1446 = load i64, i64* %1445, align 8
  %1447 = zext i8 %1439 to i64
  %1448 = select i1 %1440, i64 %1446, i64 %1447
  call void @_ZN3net21EscapeQueryParamValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.std::__1::basic_string"* nonnull sret %9, i8* %1444, i64 %1448, i1 zeroext true) #11
  %1449 = load i8, i8* %1368, align 1
  %1450 = icmp slt i8 %1449, 0
  %1451 = load i8*, i8** %1369, align 8
  %1452 = load i64, i64* %1370, align 8
  %1453 = zext i8 %1449 to i64
  %1454 = select i1 %1450, i8* %1451, i8* %1366
  %1455 = select i1 %1450, i64 %1452, i64 %1453
  %1456 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %18, i8* %1454, i64 %1455) #11
  %1457 = load i8, i8* %1368, align 1
  %1458 = icmp slt i8 %1457, 0
  br i1 %1458, label %1459, label %1461

1459:                                             ; preds = %1435
  %1460 = load i8*, i8** %1369, align 8
  call void @_ZdlPv(i8* %1460) #12
  br label %1461

1461:                                             ; preds = %1459, %1435
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1366) #11
  store i8 1, i8* %1371, align 2
  %1462 = load i64, i64* %1372, align 8
  %1463 = load i64, i64* %1374, align 8
  %1464 = load i64, i64* %1376, align 8
  %1465 = sub i64 %1462, %1463
  %1466 = add i64 %1465, %1464
  %1467 = trunc i64 %1466 to i32
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %18, i16 zeroext 6, i32 %1456) #11
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %18, i16 zeroext 4, i32 %1430) #11
  %1468 = call i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"* %18, i32 %1467) #11
  %1469 = load %"struct.flatbuffers::Offset.170"*, %"struct.flatbuffers::Offset.170"** %1325, align 8
  %1470 = load %"struct.flatbuffers::Offset.170"*, %"struct.flatbuffers::Offset.170"** %1326, align 8
  %1471 = icmp ult %"struct.flatbuffers::Offset.170"* %1469, %1470
  %1472 = ptrtoint %"struct.flatbuffers::Offset.170"* %1470 to i64
  br i1 %1471, label %1473, label %1477

1473:                                             ; preds = %1461
  %1474 = getelementptr inbounds %"struct.flatbuffers::Offset.170", %"struct.flatbuffers::Offset.170"* %1469, i64 0, i32 0
  store i32 %1468, i32* %1474, align 4
  %1475 = getelementptr inbounds %"struct.flatbuffers::Offset.170", %"struct.flatbuffers::Offset.170"* %1469, i64 1
  %1476 = ptrtoint %"struct.flatbuffers::Offset.170"* %1475 to i64
  store i64 %1476, i64* %1377, align 8
  br label %1521

1477:                                             ; preds = %1461
  %1478 = ptrtoint %"struct.flatbuffers::Offset.170"* %1469 to i64
  %1479 = load i64, i64* %1336, align 8
  %1480 = sub i64 %1478, %1479
  %1481 = ashr exact i64 %1480, 2
  %1482 = add nsw i64 %1481, 1
  %1483 = icmp ugt i64 %1482, 4611686018427387903
  br i1 %1483, label %1484, label %1486

1484:                                             ; preds = %1477
  %1485 = bitcast %"class.std::__1::vector.168"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1485) #13
  unreachable

1486:                                             ; preds = %1477
  %1487 = sub i64 %1472, %1479
  %1488 = ashr exact i64 %1487, 2
  %1489 = icmp ult i64 %1488, 2305843009213693951
  br i1 %1489, label %1490, label %1498

1490:                                             ; preds = %1486
  %1491 = ashr exact i64 %1487, 1
  %1492 = icmp ult i64 %1491, %1482
  %1493 = select i1 %1492, i64 %1482, i64 %1491
  %1494 = icmp eq i64 %1493, 0
  br i1 %1494, label %1503, label %1495

1495:                                             ; preds = %1490
  %1496 = icmp ugt i64 %1493, 4611686018427387903
  br i1 %1496, label %1497, label %1498

1497:                                             ; preds = %1495
  call void @abort() #13
  unreachable

1498:                                             ; preds = %1495, %1486
  %1499 = phi i64 [ %1493, %1495 ], [ 4611686018427387903, %1486 ]
  %1500 = shl i64 %1499, 2
  %1501 = call i8* @_Znwm(i64 %1500) #12
  %1502 = bitcast i8* %1501 to %"struct.flatbuffers::Offset.170"*
  br label %1503

1503:                                             ; preds = %1498, %1490
  %1504 = phi i64 [ %1499, %1498 ], [ 0, %1490 ]
  %1505 = phi i8* [ %1501, %1498 ], [ null, %1490 ]
  %1506 = phi %"struct.flatbuffers::Offset.170"* [ %1502, %1498 ], [ null, %1490 ]
  %1507 = getelementptr inbounds %"struct.flatbuffers::Offset.170", %"struct.flatbuffers::Offset.170"* %1506, i64 %1481
  %1508 = getelementptr inbounds %"struct.flatbuffers::Offset.170", %"struct.flatbuffers::Offset.170"* %1506, i64 %1504
  %1509 = ptrtoint %"struct.flatbuffers::Offset.170"* %1508 to i64
  %1510 = getelementptr inbounds %"struct.flatbuffers::Offset.170", %"struct.flatbuffers::Offset.170"* %1507, i64 0, i32 0
  store i32 %1468, i32* %1510, align 4
  %1511 = getelementptr inbounds %"struct.flatbuffers::Offset.170", %"struct.flatbuffers::Offset.170"* %1507, i64 1
  %1512 = ptrtoint %"struct.flatbuffers::Offset.170"* %1511 to i64
  %1513 = ptrtoint %"struct.flatbuffers::Offset.170"* %1506 to i64
  %1514 = icmp sgt i64 %1480, 0
  br i1 %1514, label %1515, label %1517

1515:                                             ; preds = %1503
  %1516 = inttoptr i64 %1479 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1505, i8* align 4 %1516, i64 %1480, i1 false) #11
  br label %1517

1517:                                             ; preds = %1515, %1503
  store i64 %1513, i64* %1336, align 8
  store i64 %1512, i64* %1377, align 8
  store i64 %1509, i64* %1335, align 8
  %1518 = icmp eq i64 %1479, 0
  br i1 %1518, label %1521, label %1519

1519:                                             ; preds = %1517
  %1520 = inttoptr i64 %1479 to i8*
  call void @_ZdlPv(i8* %1520) #12
  br label %1521

1521:                                             ; preds = %1519, %1517, %1473
  %1522 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::QueryKeyValue", %"struct.extensions::api::declarative_net_request::QueryKeyValue"* %1410, i64 1
  %1523 = icmp eq %"struct.extensions::api::declarative_net_request::QueryKeyValue"* %1522, %1355
  br i1 %1523, label %1378, label %1409

1524:                                             ; preds = %1067, %1303, %1310, %1316, %1408
  %1525 = phi i32 [ %1311, %1316 ], [ %1311, %1408 ], [ %1311, %1310 ], [ %1304, %1303 ], [ 0, %1067 ]
  %1526 = phi i32 [ 0, %1316 ], [ %1401, %1408 ], [ 0, %1310 ], [ 0, %1303 ], [ 0, %1067 ]
  %1527 = call i32 @_ZN10extensions23declarative_net_request4flat18CreateUrlTransformERN11flatbuffers17FlatBufferBuilderENS2_6OffsetINS2_6StringEEES7_bS7_bS7_bS7_NS5_INS2_6VectorIS7_EEEENS5_INS8_INS5_INS1_13QueryKeyValueEEEEEEEbS7_S7_S7_(%"class.flatbuffers::FlatBufferBuilder"* dereferenceable(96) %18, i32 %885, i32 %904, i1 zeroext %932, i32 %933, i1 zeroext %961, i32 %962, i1 zeroext %995, i32 %996, i32 %1525, i32 %1526, i1 zeroext %1029, i32 %1030, i32 %1049, i32 %1068) #11
  br label %1528

1528:                                             ; preds = %862, %1524, %847
  %1529 = phi i32 [ %861, %847 ], [ 0, %1524 ], [ 0, %862 ]
  %1530 = phi i32 [ 0, %847 ], [ %1527, %1524 ], [ 0, %862 ]
  %1531 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 16
  %1532 = call fastcc i32 @_ZN10extensions23declarative_net_request12_GLOBAL__N_127BuildModifyHeaderInfoOffsetEPN11flatbuffers17FlatBufferBuilderERKNSt3__16vectorINS_3api23declarative_net_request16ModifyHeaderInfoENS5_9allocatorIS9_EEEE(%"class.flatbuffers::FlatBufferBuilder"* %18, %"class.std::__1::vector.98"* dereferenceable(24) %1531)
  %1533 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 17
  %1534 = call fastcc i32 @_ZN10extensions23declarative_net_request12_GLOBAL__N_127BuildModifyHeaderInfoOffsetEPN11flatbuffers17FlatBufferBuilderERKNSt3__16vectorINS_3api23declarative_net_request16ModifyHeaderInfoENS5_9allocatorIS9_EEEE(%"class.flatbuffers::FlatBufferBuilder"* %18, %"class.std::__1::vector.98"* dereferenceable(24) %1533)
  %1535 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 2
  %1536 = load i32, i32* %683, align 4
  %1537 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %1, i64 0, i32 0
  %1538 = load i32, i32* %1537, align 8
  %1539 = call i32 @_ZN10extensions23declarative_net_request23ConvertToFlatActionTypeENS_3api23declarative_net_request14RuleActionTypeE(i32 %1538) #11
  %1540 = call i32 @_ZN10extensions23declarative_net_request4flat21CreateUrlRuleMetadataERN11flatbuffers17FlatBufferBuilderEjNS1_10ActionTypeENS2_6OffsetINS2_6StringEEENS6_INS1_12UrlTransformEEENS6_INS2_6VectorINS6_INS1_16ModifyHeaderInfoEEEEEEESF_(%"class.flatbuffers::FlatBufferBuilder"* dereferenceable(96) %18, i32 %1536, i32 %1539, i32 %1529, i32 %1530, i32 %1532, i32 %1534)
  %1541 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 2, i32 0, i32 1
  %1542 = load %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"** %1541, align 8
  %1543 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %1544 = load %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"** %1543, align 8
  %1545 = icmp ult %"struct.flatbuffers::Offset.35"* %1542, %1544
  %1546 = ptrtoint %"struct.flatbuffers::Offset.35"* %1544 to i64
  br i1 %1545, label %1547, label %1552

1547:                                             ; preds = %1528
  %1548 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1542, i64 0, i32 0
  store i32 %1540, i32* %1548, align 4
  %1549 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1542, i64 1
  %1550 = ptrtoint %"struct.flatbuffers::Offset.35"* %1549 to i64
  %1551 = bitcast %"struct.flatbuffers::Offset.35"** %1541 to i64*
  store i64 %1550, i64* %1551, align 8
  br label %1609

1552:                                             ; preds = %1528
  %1553 = ptrtoint %"struct.flatbuffers::Offset.35"* %1542 to i64
  %1554 = bitcast %"struct.flatbuffers::Offset.35"** %1541 to i64*
  %1555 = bitcast %"class.std::__1::vector.33"* %1535 to i64*
  %1556 = load i64, i64* %1555, align 8
  %1557 = sub i64 %1553, %1556
  %1558 = ashr exact i64 %1557, 2
  %1559 = add nsw i64 %1558, 1
  %1560 = icmp ugt i64 %1559, 4611686018427387903
  br i1 %1560, label %1561, label %1563

1561:                                             ; preds = %1552
  %1562 = bitcast %"class.std::__1::vector.33"* %1535 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1562) #13
  unreachable

1563:                                             ; preds = %1552
  %1564 = bitcast %"struct.flatbuffers::Offset.35"** %1543 to i64*
  %1565 = sub i64 %1546, %1556
  %1566 = ashr exact i64 %1565, 2
  %1567 = icmp ult i64 %1566, 2305843009213693951
  br i1 %1567, label %1568, label %1576

1568:                                             ; preds = %1563
  %1569 = ashr exact i64 %1565, 1
  %1570 = icmp ult i64 %1569, %1559
  %1571 = select i1 %1570, i64 %1559, i64 %1569
  %1572 = icmp eq i64 %1571, 0
  br i1 %1572, label %1581, label %1573

1573:                                             ; preds = %1568
  %1574 = icmp ugt i64 %1571, 4611686018427387903
  br i1 %1574, label %1575, label %1576

1575:                                             ; preds = %1573
  call void @abort() #13
  unreachable

1576:                                             ; preds = %1573, %1563
  %1577 = phi i64 [ %1571, %1573 ], [ 4611686018427387903, %1563 ]
  %1578 = shl i64 %1577, 2
  %1579 = call i8* @_Znwm(i64 %1578) #12
  %1580 = bitcast i8* %1579 to %"struct.flatbuffers::Offset.35"*
  br label %1581

1581:                                             ; preds = %1576, %1568
  %1582 = phi i64 [ %1577, %1576 ], [ 0, %1568 ]
  %1583 = phi %"struct.flatbuffers::Offset.35"* [ %1580, %1576 ], [ null, %1568 ]
  %1584 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1583, i64 %1558
  %1585 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1583, i64 %1582
  %1586 = ptrtoint %"struct.flatbuffers::Offset.35"* %1585 to i64
  %1587 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1584, i64 0, i32 0
  store i32 %1540, i32* %1587, align 4
  %1588 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1584, i64 1
  %1589 = ptrtoint %"struct.flatbuffers::Offset.35"* %1588 to i64
  %1590 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %1535, i64 0, i32 0, i32 0
  %1591 = load %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"** %1590, align 8
  %1592 = load i64, i64* %1554, align 8
  %1593 = ptrtoint %"struct.flatbuffers::Offset.35"* %1591 to i64
  %1594 = sub i64 %1592, %1593
  %1595 = ashr exact i64 %1594, 2
  %1596 = sub nsw i64 0, %1595
  %1597 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1584, i64 %1596
  %1598 = ptrtoint %"struct.flatbuffers::Offset.35"* %1597 to i64
  %1599 = icmp sgt i64 %1594, 0
  br i1 %1599, label %1600, label %1604

1600:                                             ; preds = %1581
  %1601 = bitcast %"struct.flatbuffers::Offset.35"* %1597 to i8*
  %1602 = bitcast %"struct.flatbuffers::Offset.35"* %1591 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1601, i8* align 4 %1602, i64 %1594, i1 false) #11
  %1603 = load %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"** %1590, align 8
  br label %1604

1604:                                             ; preds = %1600, %1581
  %1605 = phi %"struct.flatbuffers::Offset.35"* [ %1591, %1581 ], [ %1603, %1600 ]
  store i64 %1598, i64* %1555, align 8
  store i64 %1589, i64* %1554, align 8
  store i64 %1586, i64* %1564, align 8
  %1606 = icmp eq %"struct.flatbuffers::Offset.35"* %1605, null
  br i1 %1606, label %1609, label %1607

1607:                                             ; preds = %1604
  %1608 = bitcast %"struct.flatbuffers::Offset.35"* %1605 to i8*
  call void @_ZdlPv(i8* %1608) #12
  br label %1609

1609:                                             ; preds = %1547, %1604, %1607
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN10extensions23declarative_net_request12_GLOBAL__N_126BuildVectorOfSharedStringsINSt3__16vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEEEEN11flatbuffers6OffsetINSD_6VectorINSE_INSD_6StringEEEEEEEPNSD_17FlatBufferBuilderERKT_(%"class.flatbuffers::FlatBufferBuilder"*, %"class.std::__1::vector.54"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector.187", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %1, i64 0, i32 0, i32 1
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = icmp eq %"class.std::__1::basic_string"* %5, %7
  br i1 %8, label %143, label %9

9:                                                ; preds = %2
  %10 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  %11 = ptrtoint %"class.std::__1::basic_string"* %7 to i64
  %12 = bitcast %"class.std::__1::vector.187"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.std::__1::vector.187", %"class.std::__1::vector.187"* %3, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.187", %"class.std::__1::vector.187"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.187", %"class.std::__1::vector.187"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #11
  %16 = sub i64 %11, %10
  %17 = sdiv exact i64 %16, 24
  %18 = bitcast %"struct.flatbuffers::Offset.113"** %15 to i64*
  %19 = bitcast %"class.std::__1::vector.187"* %3 to i64*
  %20 = icmp eq i64 %16, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %9
  %22 = icmp ugt i64 %17, 4611686018427387903
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  tail call void @abort() #13
  unreachable

24:                                               ; preds = %21
  %25 = bitcast %"struct.flatbuffers::Offset.113"** %14 to i64*
  %26 = shl nsw i64 %17, 2
  %27 = tail call i8* @_Znwm(i64 %26) #12
  %28 = bitcast i8* %27 to %"struct.flatbuffers::Offset.113"*
  %29 = ptrtoint i8* %27 to i64
  %30 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %28, i64 %17
  %31 = ptrtoint %"struct.flatbuffers::Offset.113"* %30 to i64
  %32 = ptrtoint i8* %27 to i64
  store i64 %32, i64* %19, align 8
  store i64 %29, i64* %25, align 8
  store i64 %31, i64* %18, align 8
  br label %33

33:                                               ; preds = %9, %24
  %34 = phi i64 [ 0, %9 ], [ %29, %24 ]
  %35 = phi %"struct.flatbuffers::Offset.113"* [ null, %9 ], [ %30, %24 ]
  %36 = phi %"struct.flatbuffers::Offset.113"* [ null, %9 ], [ %28, %24 ]
  %37 = bitcast %"struct.flatbuffers::Offset.113"** %14 to i64*
  br label %64

38:                                               ; preds = %136
  %39 = load %"struct.flatbuffers::Offset.113"*, %"struct.flatbuffers::Offset.113"** %13, align 8
  %40 = icmp eq %"struct.flatbuffers::Offset.113"* %39, %137
  %41 = select i1 %40, %"struct.flatbuffers::Offset.113"* bitcast (i8* @_ZZN11flatbuffers4dataINS_6OffsetINS_6StringEEENSt3__19allocatorIS3_EEEEPKT_RKNS4_6vectorIS7_T0_EEE1t to %"struct.flatbuffers::Offset.113"*), %"struct.flatbuffers::Offset.113"* %39
  %42 = ptrtoint %"struct.flatbuffers::Offset.113"* %137 to i64
  %43 = ptrtoint %"struct.flatbuffers::Offset.113"* %39 to i64
  %44 = sub i64 %42, %43
  %45 = ashr exact i64 %44, 2
  tail call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* %0, i64 %45, i64 4) #11
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %38, %47
  %48 = phi i64 [ %49, %47 ], [ %45, %38 ]
  %49 = add i64 %48, -1
  %50 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %41, i64 %49, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementINS_6StringEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %51) #11
  %53 = icmp eq i64 %49, 0
  br i1 %53, label %54, label %47

54:                                               ; preds = %47, %38
  %55 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 3
  store i8 0, i8* %55, align 2
  %56 = trunc i64 %45 to i32
  %57 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %56) #11
  %58 = icmp eq %"struct.flatbuffers::Offset.113"* %39, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %54
  %60 = ptrtoint %"struct.flatbuffers::Offset.113"* %39 to i64
  %61 = bitcast %"struct.flatbuffers::Offset.113"** %14 to i64*
  store i64 %60, i64* %61, align 8
  %62 = bitcast %"struct.flatbuffers::Offset.113"* %39 to i8*
  tail call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %54, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  br label %143

64:                                               ; preds = %141, %33
  %65 = phi i64 [ %34, %33 ], [ %138, %141 ]
  %66 = phi %"struct.flatbuffers::Offset.113"* [ %35, %33 ], [ %142, %141 ]
  %67 = phi %"struct.flatbuffers::Offset.113"* [ %36, %33 ], [ %137, %141 ]
  %68 = phi %"class.std::__1::basic_string"* [ %5, %33 ], [ %139, %141 ]
  %69 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::basic_string"* %68 to i8*
  %78 = zext i8 %71 to i64
  %79 = select i1 %72, i8* %74, i8* %77
  %80 = select i1 %72, i64 %76, i64 %78
  %81 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %0, i8* %79, i64 %80) #11
  %82 = icmp ult %"struct.flatbuffers::Offset.113"* %67, %66
  %83 = ptrtoint %"struct.flatbuffers::Offset.113"* %66 to i64
  br i1 %82, label %84, label %88

84:                                               ; preds = %64
  %85 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %67, i64 0, i32 0
  store i32 %81, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %67, i64 1
  %87 = ptrtoint %"struct.flatbuffers::Offset.113"* %86 to i64
  store i64 %87, i64* %37, align 8
  br label %136

88:                                               ; preds = %64
  %89 = ptrtoint %"struct.flatbuffers::Offset.113"* %67 to i64
  %90 = load i64, i64* %19, align 8
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 2
  %93 = add nsw i64 %92, 1
  %94 = icmp ugt i64 %93, 4611686018427387903
  br i1 %94, label %95, label %97

95:                                               ; preds = %88
  %96 = bitcast %"class.std::__1::vector.187"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %96) #13
  unreachable

97:                                               ; preds = %88
  %98 = sub i64 %83, %90
  %99 = ashr exact i64 %98, 2
  %100 = icmp ult i64 %99, 2305843009213693951
  br i1 %100, label %101, label %109

101:                                              ; preds = %97
  %102 = ashr exact i64 %98, 1
  %103 = icmp ult i64 %102, %93
  %104 = select i1 %103, i64 %93, i64 %102
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %101
  %107 = icmp ugt i64 %104, 4611686018427387903
  br i1 %107, label %108, label %109

108:                                              ; preds = %106
  tail call void @abort() #13
  unreachable

109:                                              ; preds = %106, %97
  %110 = phi i64 [ %104, %106 ], [ 4611686018427387903, %97 ]
  %111 = shl i64 %110, 2
  %112 = tail call i8* @_Znwm(i64 %111) #12
  %113 = bitcast i8* %112 to %"struct.flatbuffers::Offset.113"*
  br label %114

114:                                              ; preds = %109, %101
  %115 = phi i64 [ %110, %109 ], [ 0, %101 ]
  %116 = phi %"struct.flatbuffers::Offset.113"* [ %113, %109 ], [ null, %101 ]
  %117 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %116, i64 %92
  %118 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %116, i64 %115
  %119 = ptrtoint %"struct.flatbuffers::Offset.113"* %118 to i64
  %120 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %117, i64 0, i32 0
  store i32 %81, i32* %120, align 4
  %121 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %117, i64 1
  %122 = ptrtoint %"struct.flatbuffers::Offset.113"* %121 to i64
  %123 = sub i64 %65, %90
  %124 = ashr exact i64 %123, 2
  %125 = sub nsw i64 0, %124
  %126 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %117, i64 %125
  %127 = ptrtoint %"struct.flatbuffers::Offset.113"* %126 to i64
  %128 = icmp sgt i64 %123, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %114
  %130 = bitcast %"struct.flatbuffers::Offset.113"* %126 to i8*
  %131 = inttoptr i64 %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %130, i8* align 4 %131, i64 %123, i1 false) #11
  br label %132

132:                                              ; preds = %129, %114
  store i64 %127, i64* %19, align 8
  store i64 %122, i64* %37, align 8
  store i64 %119, i64* %18, align 8
  %133 = icmp eq i64 %90, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = inttoptr i64 %90 to i8*
  tail call void @_ZdlPv(i8* %135) #12
  br label %136

136:                                              ; preds = %84, %132, %134
  %137 = phi %"struct.flatbuffers::Offset.113"* [ %86, %84 ], [ %121, %132 ], [ %121, %134 ]
  %138 = phi i64 [ %87, %84 ], [ %122, %132 ], [ %122, %134 ]
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 1
  %140 = icmp eq %"class.std::__1::basic_string"* %139, %7
  br i1 %140, label %38, label %141

141:                                              ; preds = %136
  %142 = load %"struct.flatbuffers::Offset.113"*, %"struct.flatbuffers::Offset.113"** %15, align 8
  br label %64

143:                                              ; preds = %2, %63
  %144 = phi i32 [ %57, %63 ], [ 0, %2 ]
  ret i32 %144
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN17url_pattern_index4flat13CreateUrlRuleERN11flatbuffers17FlatBufferBuilderEhtthNS0_14UrlPatternTypeENS0_10AnchorTypeES5_NS1_6OffsetINS1_6VectorINS6_INS1_6StringEEEEEEESB_S9_jmNS6_INS7_IhEEEE(%"class.flatbuffers::FlatBufferBuilder"* dereferenceable(96), i8 zeroext, i16 zeroext, i16 zeroext, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i64, i32) local_unnamed_addr #2 comdat {
  %15 = alloca %"struct.url_pattern_index::flat::UrlRuleBuilder", align 8
  %16 = bitcast %"struct.url_pattern_index::flat::UrlRuleBuilder"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRuleBuilder", %"struct.url_pattern_index::flat::UrlRuleBuilder"* %15, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRuleBuilder", %"struct.url_pattern_index::flat::UrlRuleBuilder"* %15, i64 0, i32 1
  %19 = bitcast %"struct.url_pattern_index::flat::UrlRuleBuilder"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  store %"class.flatbuffers::FlatBufferBuilder"* %0, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 3
  store i8 1, i8* %20, align 2
  %21 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %22, %25
  %30 = add i64 %29, %28
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %18, align 8
  tail call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementImEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %0, i16 zeroext 26, i64 %12, i64 0) #11
  call void @_ZN17url_pattern_index4flat14UrlRuleBuilder23add_embedder_conditionsEN11flatbuffers6OffsetINS2_6VectorIhEEEE(%"struct.url_pattern_index::flat::UrlRuleBuilder"* nonnull %15, i32 %13)
  %32 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  %33 = icmp eq i32 %11, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %14
  %35 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %32, i64 0, i32 6
  %36 = load i8, i8* %35, align 8, !range !5
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %68, label %38

38:                                               ; preds = %34, %14
  %39 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %32, i32 %11) #11
  %40 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %32, i64 0, i32 0, i32 6
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %32, i64 0, i32 0, i32 7
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %42, %45
  %47 = icmp ult i64 %46, 8
  br i1 %47, label %50, label %48

48:                                               ; preds = %38
  %49 = inttoptr i64 %45 to i64*
  br label %54

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %32, i64 0, i32 0
  call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %51, i64 8) #11
  %52 = bitcast i8** %43 to i64**
  %53 = load i64*, i64** %52, align 8
  br label %54

54:                                               ; preds = %50, %48
  %55 = phi i64* [ %49, %48 ], [ %53, %50 ]
  %56 = zext i32 %39 to i64
  %57 = or i64 %56, -6149102238141775872
  store i64 %57, i64* %55, align 4
  %58 = load i8*, i8** %43, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 8
  store i8* %59, i8** %43, align 8
  %60 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %32, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %61, 1
  store i32 %62, i32* %60, align 8
  %63 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %32, i64 0, i32 2
  %64 = load i16, i16* %63, align 2
  %65 = icmp ugt i16 %64, 24
  %66 = select i1 %65, i16 %64, i16 24
  store i16 %66, i16* %63, align 4
  %67 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  br label %68

68:                                               ; preds = %34, %54
  %69 = phi %"class.flatbuffers::FlatBufferBuilder"* [ %32, %34 ], [ %67, %54 ]
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %69, i16 zeroext 22, i32 %10) #11
  %70 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6VectorINS_6OffsetINS_6StringEEEEEEEvtNS3_IT_EE(%"class.flatbuffers::FlatBufferBuilder"* %70, i16 zeroext 20, i32 %9) #11
  %71 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6VectorINS_6OffsetINS_6StringEEEEEEEvtNS3_IT_EE(%"class.flatbuffers::FlatBufferBuilder"* %71, i16 zeroext 18, i32 %8) #11
  %72 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementItEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %72, i16 zeroext 8, i16 zeroext %3, i16 zeroext 127) #11
  %73 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementItEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %73, i16 zeroext 6, i16 zeroext %2, i16 zeroext 8191) #11
  %74 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  %75 = trunc i32 %7 to i8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %74, i16 zeroext 16, i8 zeroext %75, i8 zeroext 0) #11
  %76 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  %77 = trunc i32 %6 to i8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %76, i16 zeroext 14, i8 zeroext %77, i8 zeroext 0) #11
  %78 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  %79 = trunc i32 %5 to i8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %78, i16 zeroext 12, i8 zeroext %79, i8 zeroext 0) #11
  %80 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %80, i16 zeroext 10, i8 zeroext %4, i8 zeroext 0) #11
  %81 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %81, i16 zeroext 4, i8 zeroext %1, i8 zeroext 0) #11
  %82 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %17, align 8
  %83 = load i32, i32* %18, align 8
  %84 = call i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"* %82, i32 %83) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  ret i32 %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request18FlatRulesetIndexer11GetBuildersERKNS0_11IndexedRuleE(%"class.std::__1::vector.115"* noalias nocapture sret, %"class.extensions::declarative_net_request::FlatRulesetIndexer"* nocapture readonly, %"struct.extensions::declarative_net_request::IndexedRule"* nocapture readonly dereferenceable(272)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.extensions::declarative_net_request::IndexedRule", %"struct.extensions::declarative_net_request::IndexedRule"* %2, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %50 [
    i32 1, label %6
    i32 3, label %6
    i32 2, label %6
    i32 4, label %6
    i32 6, label %20
    i32 5, label %35
  ]

6:                                                ; preds = %3, %3, %3, %3
  %7 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"** %7 to i64**
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %9, align 8
  %11 = tail call i8* @_Znwm(i64 8) #12
  %12 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::vector.115"* %0 to i8**
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  %15 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"*** %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"*** %12 to i64*
  %18 = bitcast i8* %11 to i64*
  store i64 %10, i64* %18, align 8
  %19 = ptrtoint i8* %14 to i64
  store i64 %19, i64* %17, align 8
  br label %52

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 1, i32 0, i32 0, i32 0
  %24 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = tail call i8* @_Znwm(i64 8) #12
  %27 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %0, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::vector.115"* %0 to i8**
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %26, i64 8
  %30 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"*** %30 to i8**
  store i8* %29, i8** %31, align 8
  %32 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"*** %27 to i64*
  %33 = bitcast i8* %26 to i64*
  store i64 %25, i64* %33, align 8
  %34 = ptrtoint i8* %29 to i64
  store i64 %34, i64* %32, align 8
  br label %52

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 2, i32 0, i32 0, i32 0
  %39 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = tail call i8* @_Znwm(i64 8) #12
  %42 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %0, i64 0, i32 0, i32 1
  %43 = bitcast %"class.std::__1::vector.115"* %0 to i8**
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %41, i64 8
  %45 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"*** %45 to i8**
  store i8* %44, i8** %46, align 8
  %47 = bitcast %"class.url_pattern_index::UrlPatternIndexBuilder"*** %42 to i64*
  %48 = bitcast i8* %41 to i64*
  store i64 %40, i64* %48, align 8
  %49 = ptrtoint i8* %44 to i64
  store i64 %49, i64* %47, align 8
  br label %52

50:                                               ; preds = %3
  %51 = bitcast %"class.std::__1::vector.115"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #11
  br label %52

52:                                               ; preds = %50, %35, %20, %6
  ret void
}

declare void @_ZN17url_pattern_index22UrlPatternIndexBuilder12IndexUrlRuleEN11flatbuffers6OffsetINS_4flat7UrlRuleEEE(%"class.url_pattern_index::UrlPatternIndexBuilder"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN10extensions23declarative_net_request23ConvertToFlatActionTypeENS_3api23declarative_net_request14RuleActionTypeE(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN10extensions23declarative_net_request12_GLOBAL__N_127BuildModifyHeaderInfoOffsetEPN11flatbuffers17FlatBufferBuilderERKNSt3__16vectorINS_3api23declarative_net_request16ModifyHeaderInfoENS5_9allocatorIS9_EEEE(%"class.flatbuffers::FlatBufferBuilder"*, %"class.std::__1::vector.98"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector.199", align 16
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::vector.199"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::vector.199", %"class.std::__1::vector.199"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.199", %"class.std::__1::vector.199"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.199", %"class.std::__1::vector.199"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 24, i1 false) #11
  %9 = getelementptr inbounds %"class.std::__1::vector.98", %"class.std::__1::vector.98"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.98"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 40
  %16 = bitcast %"struct.flatbuffers::Offset.201"** %8 to i64*
  %17 = bitcast %"class.std::__1::vector.199"* %3 to i64*
  %18 = icmp eq i64 %14, 0
  %19 = inttoptr i64 %13 to %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*
  %20 = inttoptr i64 %11 to %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"*
  br i1 %18, label %35, label %21

21:                                               ; preds = %2
  %22 = icmp ugt i64 %15, 4611686018427387903
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  tail call void @abort() #13
  unreachable

24:                                               ; preds = %21
  %25 = shl nsw i64 %15, 2
  %26 = tail call i8* @_Znwm(i64 %25) #12
  %27 = bitcast i8* %26 to %"struct.flatbuffers::Offset.201"*
  %28 = getelementptr inbounds %"struct.flatbuffers::Offset.201", %"struct.flatbuffers::Offset.201"* %27, i64 %15
  %29 = ptrtoint %"struct.flatbuffers::Offset.201"* %28 to i64
  %30 = insertelement <2 x i8*> undef, i8* %26, i32 0
  %31 = shufflevector <2 x i8*> %30, <2 x i8*> undef, <2 x i32> zeroinitializer
  %32 = ptrtoint <2 x i8*> %31 to <2 x i64>
  %33 = bitcast %"class.std::__1::vector.199"* %3 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %33, align 16
  store i64 %29, i64* %16, align 16
  %34 = bitcast i8* %26 to %"struct.flatbuffers::Offset.201"*
  br label %35

35:                                               ; preds = %24, %2
  %36 = phi %"struct.flatbuffers::Offset.201"* [ null, %2 ], [ %27, %24 ]
  %37 = phi %"struct.flatbuffers::Offset.201"* [ null, %2 ], [ %34, %24 ]
  %38 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %19, %20
  br i1 %38, label %55, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 3
  %46 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %47 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %48 = bitcast i8** %47 to i64*
  %49 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %50 = bitcast i8** %49 to i64*
  %51 = bitcast %"struct.flatbuffers::Offset.201"** %7 to i64*
  br label %83

52:                                               ; preds = %200
  %53 = load %"struct.flatbuffers::Offset.201"*, %"struct.flatbuffers::Offset.201"** %6, align 16
  %54 = load %"struct.flatbuffers::Offset.201"*, %"struct.flatbuffers::Offset.201"** %7, align 8
  br label %55

55:                                               ; preds = %52, %35
  %56 = phi %"struct.flatbuffers::Offset.201"* [ %54, %52 ], [ %36, %35 ]
  %57 = phi %"struct.flatbuffers::Offset.201"* [ %53, %52 ], [ %37, %35 ]
  %58 = icmp eq %"struct.flatbuffers::Offset.201"* %57, %56
  %59 = select i1 %58, %"struct.flatbuffers::Offset.201"* bitcast (i8* @_ZZN11flatbuffers4dataINS_6OffsetIN10extensions23declarative_net_request4flat16ModifyHeaderInfoEEENSt3__19allocatorIS6_EEEEPKT_RKNS7_6vectorISA_T0_EEE1t to %"struct.flatbuffers::Offset.201"*), %"struct.flatbuffers::Offset.201"* %57
  %60 = ptrtoint %"struct.flatbuffers::Offset.201"* %56 to i64
  %61 = ptrtoint %"struct.flatbuffers::Offset.201"* %57 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 2
  call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* %0, i64 %63, i64 4) #11
  %64 = icmp eq i64 %62, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %55, %65
  %66 = phi i64 [ %67, %65 ], [ %63, %55 ]
  %67 = add i64 %66, -1
  %68 = getelementptr inbounds %"struct.flatbuffers::Offset.201", %"struct.flatbuffers::Offset.201"* %59, i64 %67, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN10extensions23declarative_net_request4flat16ModifyHeaderInfoEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %69) #11
  %71 = icmp eq i64 %67, 0
  br i1 %71, label %72, label %65

72:                                               ; preds = %65, %55
  %73 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 3
  store i8 0, i8* %73, align 2
  %74 = trunc i64 %63 to i32
  %75 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %74) #11
  %76 = load %"struct.flatbuffers::Offset.201"*, %"struct.flatbuffers::Offset.201"** %6, align 16
  %77 = icmp eq %"struct.flatbuffers::Offset.201"* %76, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %72
  %79 = ptrtoint %"struct.flatbuffers::Offset.201"* %76 to i64
  %80 = bitcast %"struct.flatbuffers::Offset.201"** %7 to i64*
  store i64 %79, i64* %80, align 8
  %81 = bitcast %"struct.flatbuffers::Offset.201"* %76 to i8*
  call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %72, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret i32 %75

83:                                               ; preds = %39, %200
  %84 = phi %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* [ %19, %39 ], [ %201, %200 ]
  %85 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %84, i64 0, i32 1
  %86 = load i32, i32* %85, align 8
  switch i32 %86, label %113 [
    i32 0, label %87
    i32 1, label %87
    i32 2, label %93
  ]

87:                                               ; preds = %83, %83
  %88 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %84, i64 0, i32 2, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %88, align 8
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  br label %99

93:                                               ; preds = %83
  %94 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %84, i64 0, i32 2, i32 0, i32 0, i32 0
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %94, align 8
  %96 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  br label %99

99:                                               ; preds = %87, %93
  %100 = phi i8 [ %92, %87 ], [ %98, %93 ]
  %101 = phi %"class.std::__1::basic_string"* [ %89, %87 ], [ %95, %93 ]
  %102 = phi i8 [ 0, %87 ], [ 1, %93 ]
  %103 = icmp slt i8 %100, 0
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  %109 = zext i8 %100 to i64
  %110 = select i1 %103, i8* %105, i8* %108
  %111 = select i1 %103, i64 %107, i64 %109
  %112 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %0, i8* %110, i64 %111) #11
  br label %113

113:                                              ; preds = %99, %83
  %114 = phi i32 [ 0, %83 ], [ %112, %99 ]
  %115 = phi i8 [ 2, %83 ], [ %102, %99 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #11
  %116 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  %120 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = bitcast %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %84 to i8*
  %123 = select i1 %119, i8* %121, i8* %122
  %124 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = zext i8 %118 to i64
  %127 = select i1 %119, i64 %125, i64 %126
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i8* %123, i64 %127) #11
  %128 = load i8, i8* %42, align 1
  %129 = icmp slt i8 %128, 0
  %130 = load i8*, i8** %43, align 8
  %131 = load i64, i64* %44, align 8
  %132 = zext i8 %128 to i64
  %133 = select i1 %129, i8* %130, i8* %40
  %134 = select i1 %129, i64 %131, i64 %132
  %135 = call i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %0, i8* %133, i64 %134) #11
  %136 = load i8, i8* %42, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %113
  %139 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %113, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #11
  store i8 1, i8* %45, align 2
  %141 = load i64, i64* %46, align 8
  %142 = load i64, i64* %48, align 8
  %143 = load i64, i64* %50, align 8
  %144 = sub i64 %141, %142
  %145 = add i64 %144, %143
  %146 = trunc i64 %145 to i32
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %0, i16 zeroext 8, i32 %114) #11
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %0, i16 zeroext 6, i32 %135) #11
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %0, i16 zeroext 4, i8 zeroext %115, i8 zeroext 0) #11
  %147 = call i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %146) #11
  %148 = load %"struct.flatbuffers::Offset.201"*, %"struct.flatbuffers::Offset.201"** %7, align 8
  %149 = load %"struct.flatbuffers::Offset.201"*, %"struct.flatbuffers::Offset.201"** %8, align 16
  %150 = icmp ult %"struct.flatbuffers::Offset.201"* %148, %149
  %151 = ptrtoint %"struct.flatbuffers::Offset.201"* %149 to i64
  br i1 %150, label %152, label %156

152:                                              ; preds = %140
  %153 = getelementptr inbounds %"struct.flatbuffers::Offset.201", %"struct.flatbuffers::Offset.201"* %148, i64 0, i32 0
  store i32 %147, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.flatbuffers::Offset.201", %"struct.flatbuffers::Offset.201"* %148, i64 1
  %155 = ptrtoint %"struct.flatbuffers::Offset.201"* %154 to i64
  store i64 %155, i64* %51, align 8
  br label %200

156:                                              ; preds = %140
  %157 = ptrtoint %"struct.flatbuffers::Offset.201"* %148 to i64
  %158 = load i64, i64* %17, align 16
  %159 = sub i64 %157, %158
  %160 = ashr exact i64 %159, 2
  %161 = add nsw i64 %160, 1
  %162 = icmp ugt i64 %161, 4611686018427387903
  br i1 %162, label %163, label %165

163:                                              ; preds = %156
  %164 = bitcast %"class.std::__1::vector.199"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %164) #13
  unreachable

165:                                              ; preds = %156
  %166 = sub i64 %151, %158
  %167 = ashr exact i64 %166, 2
  %168 = icmp ult i64 %167, 2305843009213693951
  br i1 %168, label %169, label %177

169:                                              ; preds = %165
  %170 = ashr exact i64 %166, 1
  %171 = icmp ult i64 %170, %161
  %172 = select i1 %171, i64 %161, i64 %170
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %182, label %174

174:                                              ; preds = %169
  %175 = icmp ugt i64 %172, 4611686018427387903
  br i1 %175, label %176, label %177

176:                                              ; preds = %174
  call void @abort() #13
  unreachable

177:                                              ; preds = %174, %165
  %178 = phi i64 [ %172, %174 ], [ 4611686018427387903, %165 ]
  %179 = shl i64 %178, 2
  %180 = call i8* @_Znwm(i64 %179) #12
  %181 = bitcast i8* %180 to %"struct.flatbuffers::Offset.201"*
  br label %182

182:                                              ; preds = %177, %169
  %183 = phi i64 [ %178, %177 ], [ 0, %169 ]
  %184 = phi i8* [ %180, %177 ], [ null, %169 ]
  %185 = phi %"struct.flatbuffers::Offset.201"* [ %181, %177 ], [ null, %169 ]
  %186 = getelementptr inbounds %"struct.flatbuffers::Offset.201", %"struct.flatbuffers::Offset.201"* %185, i64 %160
  %187 = getelementptr inbounds %"struct.flatbuffers::Offset.201", %"struct.flatbuffers::Offset.201"* %185, i64 %183
  %188 = ptrtoint %"struct.flatbuffers::Offset.201"* %187 to i64
  %189 = getelementptr inbounds %"struct.flatbuffers::Offset.201", %"struct.flatbuffers::Offset.201"* %186, i64 0, i32 0
  store i32 %147, i32* %189, align 4
  %190 = getelementptr inbounds %"struct.flatbuffers::Offset.201", %"struct.flatbuffers::Offset.201"* %186, i64 1
  %191 = ptrtoint %"struct.flatbuffers::Offset.201"* %190 to i64
  %192 = ptrtoint %"struct.flatbuffers::Offset.201"* %185 to i64
  %193 = icmp sgt i64 %159, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %182
  %195 = inttoptr i64 %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %184, i8* align 4 %195, i64 %159, i1 false) #11
  br label %196

196:                                              ; preds = %194, %182
  store i64 %192, i64* %17, align 16
  store i64 %191, i64* %51, align 8
  store i64 %188, i64* %16, align 16
  %197 = icmp eq i64 %158, 0
  br i1 %197, label %200, label %198

198:                                              ; preds = %196
  %199 = inttoptr i64 %158 to i8*
  call void @_ZdlPv(i8* %199) #12
  br label %200

200:                                              ; preds = %152, %196, %198
  %201 = getelementptr inbounds %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo", %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %84, i64 1
  %202 = icmp eq %"struct.extensions::api::declarative_net_request::ModifyHeaderInfo"* %201, %20
  br i1 %202, label %52, label %83
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN10extensions23declarative_net_request4flat21CreateUrlRuleMetadataERN11flatbuffers17FlatBufferBuilderEjNS1_10ActionTypeENS2_6OffsetINS2_6StringEEENS6_INS1_12UrlTransformEEENS6_INS2_6VectorINS6_INS1_16ModifyHeaderInfoEEEEEEESF_(%"class.flatbuffers::FlatBufferBuilder"* dereferenceable(96), i32, i32, i32, i32, i32, i32) local_unnamed_addr #2 comdat {
  %8 = alloca %"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder", align 8
  %9 = bitcast %"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder"* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder"* %8, i64 0, i32 1
  %12 = bitcast %"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  store %"class.flatbuffers::FlatBufferBuilder"* %0, %"class.flatbuffers::FlatBufferBuilder"** %10, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 3
  store i8 1, i8* %13, align 2
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %15, %18
  %23 = add i64 %22, %21
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %11, align 8
  call void @_ZN10extensions23declarative_net_request4flat22UrlRuleMetadataBuilder20add_response_headersEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_16ModifyHeaderInfoEEEEEEE(%"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder"* nonnull %8, i32 %6)
  call void @_ZN10extensions23declarative_net_request4flat22UrlRuleMetadataBuilder19add_request_headersEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_16ModifyHeaderInfoEEEEEEE(%"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder"* nonnull %8, i32 %5)
  call void @_ZN10extensions23declarative_net_request4flat22UrlRuleMetadataBuilder13add_transformEN11flatbuffers6OffsetINS1_12UrlTransformEEE(%"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder"* nonnull %8, i32 %4)
  %25 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %10, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %25, i16 zeroext 8, i32 %3) #11
  %26 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %10, align 8
  %27 = icmp eq i32 %1, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %7
  %29 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %26, i64 0, i32 6
  %30 = load i8, i8* %29, align 8, !range !5
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %62, label %32

32:                                               ; preds = %28, %7
  %33 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %26, i32 %1) #11
  %34 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %26, i64 0, i32 0, i32 6
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %26, i64 0, i32 0, i32 7
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %36, %39
  %41 = icmp ult i64 %40, 8
  br i1 %41, label %44, label %42

42:                                               ; preds = %32
  %43 = inttoptr i64 %39 to i64*
  br label %48

44:                                               ; preds = %32
  %45 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %26, i64 0, i32 0
  call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %45, i64 8) #11
  %46 = bitcast i8** %37 to i64**
  %47 = load i64*, i64** %46, align 8
  br label %48

48:                                               ; preds = %44, %42
  %49 = phi i64* [ %43, %42 ], [ %47, %44 ]
  %50 = zext i32 %33 to i64
  %51 = or i64 %50, -6149102324041121792
  store i64 %51, i64* %49, align 4
  %52 = load i8*, i8** %37, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 8
  store i8* %53, i8** %37, align 8
  %54 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %26, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = add i32 %55, 1
  store i32 %56, i32* %54, align 8
  %57 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %26, i64 0, i32 2
  %58 = load i16, i16* %57, align 2
  %59 = icmp ugt i16 %58, 4
  %60 = select i1 %59, i16 %58, i16 4
  store i16 %60, i16* %57, align 4
  %61 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %10, align 8
  br label %62

62:                                               ; preds = %28, %48
  %63 = phi %"class.flatbuffers::FlatBufferBuilder"* [ %26, %28 ], [ %61, %48 ]
  %64 = trunc i32 %2 to i8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %63, i16 zeroext 6, i8 zeroext %64, i8 zeroext 0) #11
  %65 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %10, align 8
  %66 = load i32, i32* %11, align 8
  %67 = call i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"* %65, i32 %66) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i32 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request18FlatRulesetIndexer22FinishAndReleaseBufferEv(%"class.flatbuffers::DetachedBuffer"* noalias nocapture sret, %"class.extensions::declarative_net_request::FlatRulesetIndexer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder", align 8
  %4 = alloca %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator", align 8
  %5 = alloca %"class.std::__1::vector.124", align 8
  %6 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 5
  store i8 1, i8* %6, align 8
  %7 = bitcast %"class.std::__1::vector.124"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %5, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #11
  %11 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = bitcast %"struct.flatbuffers::Offset.126"** %10 to i64*
  %20 = bitcast %"class.std::__1::vector.124"* %5 to i64*
  %21 = icmp eq i64 %17, 0
  %22 = inttoptr i64 %16 to %"class.std::__1::unique_ptr"*
  %23 = inttoptr i64 %14 to %"class.std::__1::unique_ptr"*
  br i1 %21, label %37, label %24

24:                                               ; preds = %2
  %25 = icmp ugt i64 %18, 4611686018427387903
  br i1 %25, label %26, label %27

26:                                               ; preds = %24
  tail call void @abort() #13
  unreachable

27:                                               ; preds = %24
  %28 = bitcast %"struct.flatbuffers::Offset.126"** %9 to i64*
  %29 = ashr exact i64 %17, 1
  %30 = tail call i8* @_Znwm(i64 %29) #12
  %31 = bitcast i8* %30 to %"struct.flatbuffers::Offset.126"*
  %32 = ptrtoint i8* %30 to i64
  %33 = getelementptr inbounds %"struct.flatbuffers::Offset.126", %"struct.flatbuffers::Offset.126"* %31, i64 %18
  %34 = ptrtoint %"struct.flatbuffers::Offset.126"* %33 to i64
  %35 = ptrtoint i8* %30 to i64
  store i64 %35, i64* %20, align 8
  store i64 %32, i64* %28, align 8
  store i64 %34, i64* %19, align 8
  %36 = bitcast i8* %30 to %"struct.flatbuffers::Offset.126"*
  br label %37

37:                                               ; preds = %27, %2
  %38 = phi %"struct.flatbuffers::Offset.126"* [ null, %2 ], [ %31, %27 ]
  %39 = phi %"struct.flatbuffers::Offset.126"* [ null, %2 ], [ %36, %27 ]
  %40 = phi i64 [ 0, %2 ], [ %32, %27 ]
  %41 = phi %"struct.flatbuffers::Offset.126"* [ null, %2 ], [ %33, %27 ]
  %42 = icmp eq %"class.std::__1::unique_ptr"* %22, %23
  br i1 %42, label %47, label %43

43:                                               ; preds = %37
  %44 = bitcast %"struct.flatbuffers::Offset.126"** %9 to i64*
  br label %163

45:                                               ; preds = %225
  %46 = load %"struct.flatbuffers::Offset.126"*, %"struct.flatbuffers::Offset.126"** %8, align 8
  br label %47

47:                                               ; preds = %45, %37
  %48 = phi %"struct.flatbuffers::Offset.126"* [ %226, %45 ], [ %38, %37 ]
  %49 = phi %"struct.flatbuffers::Offset.126"* [ %46, %45 ], [ %39, %37 ]
  %50 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 0
  %51 = icmp eq %"struct.flatbuffers::Offset.126"* %49, %48
  %52 = select i1 %51, %"struct.flatbuffers::Offset.126"* bitcast (i8* @_ZZN11flatbuffers4dataINS_6OffsetIN17url_pattern_index4flat15UrlPatternIndexEEENSt3__19allocatorIS5_EEEEPKT_RKNS6_6vectorIS9_T0_EEE1t to %"struct.flatbuffers::Offset.126"*), %"struct.flatbuffers::Offset.126"* %49
  %53 = ptrtoint %"struct.flatbuffers::Offset.126"* %48 to i64
  %54 = ptrtoint %"struct.flatbuffers::Offset.126"* %49 to i64
  %55 = sub i64 %53, %54
  %56 = ashr exact i64 %55, 2
  tail call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* %50, i64 %56, i64 4) #11
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %47, %58
  %59 = phi i64 [ %60, %58 ], [ %56, %47 ]
  %60 = add i64 %59, -1
  %61 = getelementptr inbounds %"struct.flatbuffers::Offset.126", %"struct.flatbuffers::Offset.126"* %52, i64 %60, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN17url_pattern_index4flat15UrlPatternIndexEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %50, i32 %62) #11
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %65, label %58

65:                                               ; preds = %58, %47
  %66 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 0, i32 3
  store i8 0, i8* %66, align 2
  %67 = trunc i64 %56 to i32
  %68 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %50, i32 %67) #11
  %69 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 2, i32 0, i32 0
  %70 = load %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"** %69, align 8
  %71 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 2, i32 0, i32 1
  %72 = load %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"** %71, align 8
  %73 = icmp eq %"struct.flatbuffers::Offset.35"* %70, %72
  %74 = select i1 %73, %"struct.flatbuffers::Offset.35"* bitcast (i8* @_ZZN11flatbuffers4dataINS_6OffsetIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEENSt3__19allocatorIS6_EEEEPT_RNS7_6vectorISA_T0_EEE1t to %"struct.flatbuffers::Offset.35"*), %"struct.flatbuffers::Offset.35"* %70
  %75 = ptrtoint %"struct.flatbuffers::Offset.35"* %72 to i64
  %76 = ptrtoint %"struct.flatbuffers::Offset.35"* %70 to i64
  %77 = sub i64 %75, %76
  %78 = ashr exact i64 %77, 2
  %79 = bitcast %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #11
  %80 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %74, i64 %78
  %81 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator", %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* %4, i64 0, i32 0
  store %"class.flatbuffers::vector_downward"* %81, %"class.flatbuffers::vector_downward"** %82, align 8
  call void @_ZNSt3__16__sortIRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEvT0_SD_T_(%"struct.flatbuffers::Offset.35"* %74, %"struct.flatbuffers::Offset.35"* %80, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* nonnull dereferenceable(8) %4) #11
  call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* %50, i64 %78, i64 4) #11
  %83 = icmp eq i64 %77, 0
  br i1 %83, label %91, label %84

84:                                               ; preds = %65, %84
  %85 = phi i64 [ %86, %84 ], [ %78, %65 ]
  %86 = add i64 %85, -1
  %87 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %74, i64 %86, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %50, i32 %88) #11
  %90 = icmp eq i64 %86, 0
  br i1 %90, label %91, label %84

91:                                               ; preds = %84, %65
  store i8 0, i8* %66, align 2
  %92 = trunc i64 %78 to i32
  %93 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %50, i32 %92) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #11
  %94 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 3, i32 0, i32 0
  %95 = load %"struct.flatbuffers::Offset.43"*, %"struct.flatbuffers::Offset.43"** %94, align 8
  %96 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 3, i32 0, i32 1
  %97 = load %"struct.flatbuffers::Offset.43"*, %"struct.flatbuffers::Offset.43"** %96, align 8
  %98 = icmp eq %"struct.flatbuffers::Offset.43"* %95, %97
  %99 = select i1 %98, %"struct.flatbuffers::Offset.43"* bitcast (i8* @_ZZN11flatbuffers4dataINS_6OffsetIN10extensions23declarative_net_request4flat9RegexRuleEEENSt3__19allocatorIS6_EEEEPKT_RKNS7_6vectorISA_T0_EEE1t to %"struct.flatbuffers::Offset.43"*), %"struct.flatbuffers::Offset.43"* %95
  %100 = ptrtoint %"struct.flatbuffers::Offset.43"* %97 to i64
  %101 = ptrtoint %"struct.flatbuffers::Offset.43"* %95 to i64
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 2
  call void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"* %50, i64 %103, i64 4) #11
  %104 = icmp eq i64 %102, 0
  br i1 %104, label %112, label %105

105:                                              ; preds = %91, %105
  %106 = phi i64 [ %107, %105 ], [ %103, %91 ]
  %107 = add i64 %106, -1
  %108 = getelementptr inbounds %"struct.flatbuffers::Offset.43", %"struct.flatbuffers::Offset.43"* %99, i64 %107, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN10extensions23declarative_net_request4flat9RegexRuleEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %50, i32 %109) #11
  %111 = icmp eq i64 %107, 0
  br i1 %111, label %112, label %105

112:                                              ; preds = %105, %91
  store i8 0, i8* %66, align 2
  %113 = trunc i64 %103 to i32
  %114 = call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %50, i32 %113) #11
  %115 = bitcast %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #11
  %116 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder", %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder"* %3, i64 0, i32 0
  %117 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder", %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 16, i1 false) #11
  store %"class.flatbuffers::FlatBufferBuilder"* %50, %"class.flatbuffers::FlatBufferBuilder"** %116, align 8
  store i8 1, i8* %66, align 2
  %118 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 0, i32 0, i32 4
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 0, i32 0, i32 6
  %121 = bitcast i8** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 0, i32 0, i32 5
  %124 = bitcast i8** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = sub i64 %119, %122
  %127 = add i64 %126, %125
  %128 = trunc i64 %127 to i32
  store i32 %128, i32* %117, align 8
  call void @_ZN10extensions23declarative_net_request4flat30ExtensionIndexedRulesetBuilder22add_extension_metadataEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_15UrlRuleMetadataEEEEEEE(%"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder"* nonnull %3, i32 %93) #11
  call void @_ZN10extensions23declarative_net_request4flat30ExtensionIndexedRulesetBuilder15add_regex_rulesEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_9RegexRuleEEEEEEE(%"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder"* nonnull %3, i32 %114) #11
  call void @_ZN10extensions23declarative_net_request4flat30ExtensionIndexedRulesetBuilder14add_index_listEN11flatbuffers6OffsetINS3_6VectorINS4_IN17url_pattern_index4flat15UrlPatternIndexEEEEEEE(%"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder"* nonnull %3, i32 %68) #11
  %129 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %116, align 8
  %130 = load i32, i32* %117, align 8
  %131 = call i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"* %129, i32 %130) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #11
  call void @_ZN11flatbuffers17FlatBufferBuilder6FinishEjPKcb(%"class.flatbuffers::FlatBufferBuilder"* %50, i32 %131, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i1 zeroext false) #11
  %132 = bitcast %"class.flatbuffers::DetachedBuffer"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 -86, i64 16, i1 false) #11, !alias.scope !33
  %133 = bitcast %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1 to i64*
  %134 = load i64, i64* %133, align 8, !noalias !33
  %135 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 0, i32 0, i32 1
  %136 = load i8, i8* %135, align 8, !range !5, !noalias !33
  %137 = load i64, i64* %124, align 8, !noalias !33
  %138 = load i64, i64* %118, align 8, !noalias !33
  %139 = load i64, i64* %121, align 8, !noalias !33
  %140 = add i64 %138, %137
  %141 = sub i64 %140, %139
  %142 = and i64 %141, 4294967295
  %143 = bitcast %"class.flatbuffers::DetachedBuffer"* %0 to i64*
  store i64 %134, i64* %143, align 8, !alias.scope !33
  %144 = getelementptr inbounds %"class.flatbuffers::DetachedBuffer", %"class.flatbuffers::DetachedBuffer"* %0, i64 0, i32 1
  store i8 %136, i8* %144, align 8, !alias.scope !33
  %145 = getelementptr inbounds %"class.flatbuffers::DetachedBuffer", %"class.flatbuffers::DetachedBuffer"* %0, i64 0, i32 2
  %146 = bitcast i8** %145 to i64*
  store i64 %137, i64* %146, align 8, !alias.scope !33
  %147 = getelementptr inbounds %"class.flatbuffers::DetachedBuffer", %"class.flatbuffers::DetachedBuffer"* %0, i64 0, i32 3
  store i64 %138, i64* %147, align 8, !alias.scope !33
  %148 = getelementptr inbounds %"class.flatbuffers::DetachedBuffer", %"class.flatbuffers::DetachedBuffer"* %0, i64 0, i32 4
  %149 = bitcast i8** %148 to i64*
  store i64 %139, i64* %149, align 8, !alias.scope !33
  %150 = getelementptr inbounds %"class.flatbuffers::DetachedBuffer", %"class.flatbuffers::DetachedBuffer"* %0, i64 0, i32 5
  store i64 %142, i64* %150, align 8, !alias.scope !33
  %151 = icmp eq i8 %136, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %112
  %153 = getelementptr inbounds %"class.extensions::declarative_net_request::FlatRulesetIndexer", %"class.extensions::declarative_net_request::FlatRulesetIndexer"* %1, i64 0, i32 0, i32 0, i32 0
  store %"class.flatbuffers::Allocator"* null, %"class.flatbuffers::Allocator"** %153, align 8, !noalias !33
  store i8 0, i8* %135, align 8, !noalias !33
  br label %154

154:                                              ; preds = %112, %152
  %155 = bitcast i64* %118 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 32, i1 false) #11, !noalias !33
  %156 = load %"struct.flatbuffers::Offset.126"*, %"struct.flatbuffers::Offset.126"** %8, align 8
  %157 = icmp eq %"struct.flatbuffers::Offset.126"* %156, null
  br i1 %157, label %162, label %158

158:                                              ; preds = %154
  %159 = ptrtoint %"struct.flatbuffers::Offset.126"* %156 to i64
  %160 = bitcast %"struct.flatbuffers::Offset.126"** %9 to i64*
  store i64 %159, i64* %160, align 8
  %161 = bitcast %"struct.flatbuffers::Offset.126"* %156 to i8*
  call void @_ZdlPv(i8* %161) #12
  br label %162

162:                                              ; preds = %154, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret void

163:                                              ; preds = %230, %43
  %164 = phi i64 [ %40, %43 ], [ %227, %230 ]
  %165 = phi %"struct.flatbuffers::Offset.126"* [ %41, %43 ], [ %231, %230 ]
  %166 = phi %"struct.flatbuffers::Offset.126"* [ %38, %43 ], [ %226, %230 ]
  %167 = phi %"class.std::__1::unique_ptr"* [ %22, %43 ], [ %228, %230 ]
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.url_pattern_index::UrlPatternIndexBuilder"** %168, align 8
  %170 = tail call i32 @_ZN17url_pattern_index22UrlPatternIndexBuilder6FinishEv(%"class.url_pattern_index::UrlPatternIndexBuilder"* %169) #11
  %171 = icmp ult %"struct.flatbuffers::Offset.126"* %166, %165
  %172 = ptrtoint %"struct.flatbuffers::Offset.126"* %165 to i64
  br i1 %171, label %173, label %177

173:                                              ; preds = %163
  %174 = getelementptr inbounds %"struct.flatbuffers::Offset.126", %"struct.flatbuffers::Offset.126"* %166, i64 0, i32 0
  store i32 %170, i32* %174, align 4
  %175 = getelementptr inbounds %"struct.flatbuffers::Offset.126", %"struct.flatbuffers::Offset.126"* %166, i64 1
  %176 = ptrtoint %"struct.flatbuffers::Offset.126"* %175 to i64
  store i64 %176, i64* %44, align 8
  br label %225

177:                                              ; preds = %163
  %178 = ptrtoint %"struct.flatbuffers::Offset.126"* %166 to i64
  %179 = load i64, i64* %20, align 8
  %180 = sub i64 %178, %179
  %181 = ashr exact i64 %180, 2
  %182 = add nsw i64 %181, 1
  %183 = icmp ugt i64 %182, 4611686018427387903
  br i1 %183, label %184, label %186

184:                                              ; preds = %177
  %185 = bitcast %"class.std::__1::vector.124"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %185) #13
  unreachable

186:                                              ; preds = %177
  %187 = sub i64 %172, %179
  %188 = ashr exact i64 %187, 2
  %189 = icmp ult i64 %188, 2305843009213693951
  br i1 %189, label %190, label %198

190:                                              ; preds = %186
  %191 = ashr exact i64 %187, 1
  %192 = icmp ult i64 %191, %182
  %193 = select i1 %192, i64 %182, i64 %191
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %203, label %195

195:                                              ; preds = %190
  %196 = icmp ugt i64 %193, 4611686018427387903
  br i1 %196, label %197, label %198

197:                                              ; preds = %195
  tail call void @abort() #13
  unreachable

198:                                              ; preds = %195, %186
  %199 = phi i64 [ %193, %195 ], [ 4611686018427387903, %186 ]
  %200 = shl i64 %199, 2
  %201 = tail call i8* @_Znwm(i64 %200) #12
  %202 = bitcast i8* %201 to %"struct.flatbuffers::Offset.126"*
  br label %203

203:                                              ; preds = %198, %190
  %204 = phi i64 [ %199, %198 ], [ 0, %190 ]
  %205 = phi %"struct.flatbuffers::Offset.126"* [ %202, %198 ], [ null, %190 ]
  %206 = getelementptr inbounds %"struct.flatbuffers::Offset.126", %"struct.flatbuffers::Offset.126"* %205, i64 %181
  %207 = getelementptr inbounds %"struct.flatbuffers::Offset.126", %"struct.flatbuffers::Offset.126"* %205, i64 %204
  %208 = ptrtoint %"struct.flatbuffers::Offset.126"* %207 to i64
  %209 = getelementptr inbounds %"struct.flatbuffers::Offset.126", %"struct.flatbuffers::Offset.126"* %206, i64 0, i32 0
  store i32 %170, i32* %209, align 4
  %210 = getelementptr inbounds %"struct.flatbuffers::Offset.126", %"struct.flatbuffers::Offset.126"* %206, i64 1
  %211 = ptrtoint %"struct.flatbuffers::Offset.126"* %210 to i64
  %212 = sub i64 %164, %179
  %213 = ashr exact i64 %212, 2
  %214 = sub nsw i64 0, %213
  %215 = getelementptr inbounds %"struct.flatbuffers::Offset.126", %"struct.flatbuffers::Offset.126"* %206, i64 %214
  %216 = ptrtoint %"struct.flatbuffers::Offset.126"* %215 to i64
  %217 = icmp sgt i64 %212, 0
  br i1 %217, label %218, label %221

218:                                              ; preds = %203
  %219 = bitcast %"struct.flatbuffers::Offset.126"* %215 to i8*
  %220 = inttoptr i64 %179 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %219, i8* align 4 %220, i64 %212, i1 false) #11
  br label %221

221:                                              ; preds = %218, %203
  store i64 %216, i64* %20, align 8
  store i64 %211, i64* %44, align 8
  store i64 %208, i64* %19, align 8
  %222 = icmp eq i64 %179, 0
  br i1 %222, label %225, label %223

223:                                              ; preds = %221
  %224 = inttoptr i64 %179 to i8*
  tail call void @_ZdlPv(i8* %224) #12
  br label %225

225:                                              ; preds = %173, %221, %223
  %226 = phi %"struct.flatbuffers::Offset.126"* [ %175, %173 ], [ %210, %221 ], [ %210, %223 ]
  %227 = phi i64 [ %176, %173 ], [ %211, %221 ], [ %211, %223 ]
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %167, i64 1
  %229 = icmp eq %"class.std::__1::unique_ptr"* %228, %23
  br i1 %229, label %45, label %230

230:                                              ; preds = %225
  %231 = load %"struct.flatbuffers::Offset.126"*, %"struct.flatbuffers::Offset.126"** %10, align 8
  br label %163
}

declare i32 @_ZN17url_pattern_index22UrlPatternIndexBuilder6FinishEv(%"class.url_pattern_index::UrlPatternIndexBuilder"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN17url_pattern_index22UrlPatternIndexBuilderC1EPN11flatbuffers17FlatBufferBuilderE(%"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.flatbuffers::FlatBufferBuilder"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN17url_pattern_index22UrlPatternIndexBuilderD1Ev(%"class.url_pattern_index::UrlPatternIndexBuilder"*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder18CreateSharedStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.flatbuffers::Offset.113", align 4
  %5 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 8
  %6 = load %"class.std::__1::set"*, %"class.std::__1::set"** %5, align 8
  %7 = icmp eq %"class.std::__1::set"* %6, null
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = tail call i8* @_Znwm(i64 32) #12
  %10 = ptrtoint %"class.flatbuffers::FlatBufferBuilder"* %0 to i64
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = getelementptr inbounds i8, i8* %9, i64 24
  %13 = bitcast i8* %12 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  store i64 %10, i64* %13, align 8
  %14 = bitcast i8* %9 to i8**
  store i8* %11, i8** %14, align 8
  %15 = bitcast %"class.std::__1::set"** %5 to i8**
  store i8* %9, i8** %15, align 8
  br label %16

16:                                               ; preds = %3, %8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.flatbuffers::Offset.113"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %4, i64 0, i32 0
  %27 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder12CreateStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"* %0, i8* %1, i64 %2)
  store i32 %27, i32* %26, align 4
  %28 = load %"class.std::__1::set"*, %"class.std::__1::set"** %5, align 8
  %29 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %28, i64 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %28, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node"**
  %32 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node"* %32, null
  br i1 %33, label %107, label %34

34:                                               ; preds = %16
  %35 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %28, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %36 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %35, align 8
  %37 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %36, i64 0, i32 5
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %36, i64 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  %42 = zext i32 %27 to i64
  %43 = sub nsw i64 0, %42
  %44 = getelementptr inbounds i8, i8* %41, i64 %43
  %45 = getelementptr inbounds i8, i8* %44, i64 4
  %46 = bitcast i8* %44 to i32*
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %48, %34
  %49 = phi %"class.std::__1::__tree_end_node"* [ %30, %34 ], [ %72, %48 ]
  %50 = phi %"class.std::__1::__tree_node"* [ %32, %34 ], [ %73, %48 ]
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = sub nsw i64 0, %53
  %55 = getelementptr inbounds i8, i8* %41, i64 %54
  %56 = getelementptr inbounds i8, i8* %55, i64 4
  %57 = bitcast i8* %55 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = icmp ult i32 %47, %58
  %60 = select i1 %59, i32 %47, i32 %58
  %61 = zext i32 %60 to i64
  %62 = tail call i32 @memcmp(i8* %56, i8* %45, i64 %61) #14
  %63 = icmp eq i32 %62, 0
  %64 = icmp ult i32 %58, %47
  %65 = icmp slt i32 %62, 0
  %66 = select i1 %63, i1 %64, i1 %65
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 0, i32 1
  %68 = bitcast %"class.std::__1::__tree_node_base"** %67 to %"class.std::__1::__tree_node"**
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::__tree_node"* %50 to %"class.std::__1::__tree_node"**
  %71 = select i1 %66, %"class.std::__1::__tree_node"** %68, %"class.std::__1::__tree_node"** %70
  %72 = select i1 %66, %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"* %69
  %73 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %71, align 8
  %74 = icmp eq %"class.std::__1::__tree_node"* %73, null
  br i1 %74, label %75, label %48

75:                                               ; preds = %48
  %76 = icmp eq %"class.std::__1::__tree_end_node"* %72, %30
  br i1 %76, label %107, label %77

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node"*
  %79 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %78, i64 0, i32 1, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = sub nsw i64 0, %81
  %83 = getelementptr inbounds i8, i8* %41, i64 %82
  %84 = getelementptr inbounds i8, i8* %83, i64 4
  %85 = bitcast i8* %83 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = icmp ult i32 %86, %47
  %88 = select i1 %87, i32 %86, i32 %47
  %89 = zext i32 %88 to i64
  %90 = tail call i32 @memcmp(i8* %45, i8* %84, i64 %89) #14
  %91 = icmp eq i32 %90, 0
  %92 = icmp ult i32 %47, %86
  %93 = icmp slt i32 %90, 0
  %94 = select i1 %91, i1 %92, i1 %93
  br i1 %94, label %107, label %95

95:                                               ; preds = %77
  %96 = load i64, i64* %17, align 8
  %97 = load i64, i64* %20, align 8
  %98 = load i64, i64* %23, align 8
  %99 = sub i64 %21, %18
  %100 = sub i64 %99, %24
  %101 = add i64 %100, %96
  %102 = sub i64 %101, %97
  %103 = add i64 %102, %98
  %104 = and i64 %103, 4294967295
  %105 = inttoptr i64 %97 to i8*
  %106 = getelementptr inbounds i8, i8* %105, i64 %104
  store i8* %106, i8** %19, align 8
  br label %109

107:                                              ; preds = %77, %75, %16
  %108 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %29, %"struct.flatbuffers::Offset.113"* nonnull dereferenceable(4) %4, %"struct.flatbuffers::Offset.113"* nonnull dereferenceable(4) %4) #11
  br label %109

109:                                              ; preds = %107, %95
  %110 = phi i32* [ %26, %107 ], [ %79, %95 ]
  %111 = load i32, i32* %110, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #11
  ret i32 %111
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder12CreateStringEPKcm(%"class.flatbuffers::FlatBufferBuilder"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = add i64 %2, 1
  %5 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, 4
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  store i64 4, i64* %5, align 8
  br label %9

9:                                                ; preds = %8, %3
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %11, %14
  %19 = add i64 %18, %17
  %20 = add i64 %4, %19
  %21 = sub i64 0, %20
  %22 = and i64 %21, 3
  %23 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %14, %25
  %27 = icmp ult i64 %26, %22
  br i1 %27, label %28, label %33

28:                                               ; preds = %9
  %29 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %29, i64 %22) #11
  %30 = load i8*, i8** %12, align 8
  %31 = sub nsw i64 0, %22
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  store i8* %32, i8** %12, align 8
  br label %38

33:                                               ; preds = %9
  %34 = inttoptr i64 %14 to i8*
  %35 = sub nsw i64 0, %22
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  store i8* %36, i8** %12, align 8
  %37 = icmp eq i64 %22, 0
  br i1 %37, label %76, label %38

38:                                               ; preds = %33, %28
  %39 = phi i8* [ %32, %28 ], [ %36, %33 ]
  store i8 0, i8* %39, align 1
  %40 = icmp eq i64 %22, 1
  br i1 %40, label %76, label %41

41:                                               ; preds = %38
  %42 = add nsw i64 %22, -1
  %43 = add nsw i64 %22, -2
  %44 = and i64 %42, 3
  %45 = icmp ult i64 %43, 3
  br i1 %45, label %65, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 1, %46 ], [ %62, %48 ]
  %50 = phi i64 [ %47, %46 ], [ %63, %48 ]
  %51 = load i8*, i8** %12, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %49
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %49, 1
  %54 = load i8*, i8** %12, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw nsw i64 %49, 2
  %57 = load i8*, i8** %12, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %49, 3
  %60 = load i8*, i8** %12, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8 0, i8* %61, align 1
  %62 = add nuw i64 %49, 4
  %63 = add i64 %50, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %48

65:                                               ; preds = %48, %41
  %66 = phi i64 [ 1, %41 ], [ %62, %48 ]
  %67 = icmp eq i64 %44, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %73, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %74, %68 ], [ %44, %65 ]
  %71 = load i8*, i8** %12, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 %69
  store i8 0, i8* %72, align 1
  %73 = add nuw i64 %69, 1
  %74 = add i64 %70, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %68, !llvm.loop !38

76:                                               ; preds = %65, %68, %33, %38
  %77 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  %78 = load i64, i64* %13, align 8
  %79 = load i64, i64* %24, align 8
  %80 = icmp eq i64 %78, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %77, i64 1) #11
  %82 = load i8*, i8** %12, align 8
  br label %85

83:                                               ; preds = %76
  %84 = inttoptr i64 %78 to i8*
  br label %85

85:                                               ; preds = %83, %81
  %86 = phi i8* [ %84, %83 ], [ %82, %81 ]
  %87 = getelementptr inbounds i8, i8* %86, i64 -1
  store i8* %87, i8** %12, align 8
  store i8 0, i8* %87, align 1
  %88 = icmp eq i64 %2, 0
  br i1 %88, label %101, label %89

89:                                               ; preds = %85
  %90 = load i64, i64* %13, align 8
  %91 = load i64, i64* %24, align 8
  %92 = sub i64 %90, %91
  %93 = icmp ult i64 %92, %2
  %94 = inttoptr i64 %90 to i8*
  br i1 %93, label %95, label %97

95:                                               ; preds = %89
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %77, i64 %2) #11
  %96 = load i8*, i8** %12, align 8
  br label %97

97:                                               ; preds = %95, %89
  %98 = phi i8* [ %94, %89 ], [ %96, %95 ]
  %99 = sub i64 0, %2
  %100 = getelementptr inbounds i8, i8* %98, i64 %99
  store i8* %100, i8** %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %1, i64 %2, i1 false) #11
  br label %101

101:                                              ; preds = %85, %97
  %102 = trunc i64 %2 to i32
  %103 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %102)
  %104 = load i64, i64* %10, align 8
  %105 = load i64, i64* %13, align 8
  %106 = load i64, i64* %16, align 8
  %107 = sub i64 %104, %105
  %108 = add i64 %107, %106
  %109 = trunc i64 %108 to i32
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #11
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !39

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %11, align 8
  %75 = load i64, i64* %21, align 8
  %76 = sub i64 %74, %75
  %77 = icmp ult i64 %76, 4
  %78 = inttoptr i64 %74 to i8*
  br i1 %77, label %79, label %82

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %80, i64 4) #11
  %81 = load i8*, i8** %10, align 8
  br label %82

82:                                               ; preds = %73, %79
  %83 = phi i8* [ %78, %73 ], [ %81, %79 ]
  %84 = getelementptr inbounds i8, i8* %83, i64 -4
  store i8* %84, i8** %10, align 8
  %85 = bitcast i8* %84 to i32*
  store i32 %1, i32* %85, align 4
  %86 = load i64, i64* %8, align 8
  %87 = load i64, i64* %11, align 8
  %88 = load i64, i64* %14, align 8
  %89 = sub i64 %86, %87
  %90 = add i64 %89, %88
  %91 = trunc i64 %90 to i32
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 6
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 5
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %4, %7
  %12 = add i64 %11, %10
  %13 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 7
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %10
  %17 = icmp eq i64 %4, 0
  %18 = inttoptr i64 %10 to i8*
  br i1 %17, label %21, label %19

19:                                               ; preds = %2
  %20 = lshr i64 %4, 1
  br label %24

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %21, %19
  %25 = phi i64 [ %20, %19 ], [ %23, %21 ]
  %26 = icmp ugt i64 %25, %1
  %27 = select i1 %26, i64 %25, i64 %1
  %28 = add i64 %27, %4
  %29 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = add i64 %31, %28
  %33 = sub i64 0, %30
  %34 = and i64 %32, %33
  store i64 %34, i64* %3, align 8
  %35 = icmp eq i64 %10, 0
  %36 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 0
  %37 = load %"class.flatbuffers::Allocator"*, %"class.flatbuffers::Allocator"** %36, align 8
  br i1 %35, label %55, label %38

38:                                               ; preds = %24
  %39 = and i64 %12, 4294967295
  %40 = and i64 %16, 4294967295
  %41 = icmp eq %"class.flatbuffers::Allocator"* %37, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.flatbuffers::Allocator"* %37 to i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)***
  %44 = load i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)**, i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)*** %43, align 8
  %45 = getelementptr inbounds i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)*, i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)** %44, i64 4
  %46 = load i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)*, i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)** %45, align 8
  %47 = tail call i8* %46(%"class.flatbuffers::Allocator"* nonnull %37, i8* nonnull %18, i64 %4, i64 %34, i64 %39, i64 %40) #11
  br label %65

48:                                               ; preds = %38
  %49 = tail call i8* @_Znam(i64 %34) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %34
  %51 = sub nsw i64 0, %39
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = getelementptr inbounds i8, i8* %18, i64 %4
  %54 = getelementptr inbounds i8, i8* %53, i64 %51
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %54, i64 %39, i1 false) #11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* nonnull align 1 %18, i64 %40, i1 false) #11
  tail call void @_ZdaPv(i8* nonnull %18) #12
  br label %65

55:                                               ; preds = %24
  %56 = icmp eq %"class.flatbuffers::Allocator"* %37, null
  br i1 %56, label %63, label %57

57:                                               ; preds = %55
  %58 = bitcast %"class.flatbuffers::Allocator"* %37 to i8* (%"class.flatbuffers::Allocator"*, i64)***
  %59 = load i8* (%"class.flatbuffers::Allocator"*, i64)**, i8* (%"class.flatbuffers::Allocator"*, i64)*** %58, align 8
  %60 = getelementptr inbounds i8* (%"class.flatbuffers::Allocator"*, i64)*, i8* (%"class.flatbuffers::Allocator"*, i64)** %59, i64 2
  %61 = load i8* (%"class.flatbuffers::Allocator"*, i64)*, i8* (%"class.flatbuffers::Allocator"*, i64)** %60, align 8
  %62 = tail call i8* %61(%"class.flatbuffers::Allocator"* nonnull %37, i64 %34) #11
  br label %65

63:                                               ; preds = %55
  %64 = tail call i8* @_Znam(i64 %34) #12
  br label %65

65:                                               ; preds = %63, %57, %48, %42
  %66 = phi i8* [ %47, %42 ], [ %49, %48 ], [ %62, %57 ], [ %64, %63 ]
  store i8* %66, i8** %8, align 8
  %67 = load i64, i64* %3, align 8
  %68 = getelementptr inbounds i8, i8* %66, i64 %67
  %69 = and i64 %12, 4294967295
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  store i8* %71, i8** %5, align 8
  %72 = and i64 %16, 4294967295
  %73 = getelementptr inbounds i8, i8* %66, i64 %72
  store i8* %73, i8** %13, align 8
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"struct.flatbuffers::Offset.113"* dereferenceable(4), %"struct.flatbuffers::Offset.113"* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %67, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %11 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %10, align 8
  %12 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %11, i64 0, i32 5
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %11, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = sub nsw i64 0, %14
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = getelementptr inbounds i8, i8* %21, i64 4
  %23 = bitcast i8* %21 to i32*
  %24 = load i32, i32* %23, align 4
  br label %25

25:                                               ; preds = %63, %8
  %26 = phi %"class.std::__1::__tree_node"* [ %66, %63 ], [ %6, %8 ]
  %27 = phi %"class.std::__1::__tree_node_base"** [ %65, %63 ], [ %9, %8 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = sub nsw i64 0, %30
  %32 = getelementptr inbounds i8, i8* %19, i64 %31
  %33 = getelementptr inbounds i8, i8* %32, i64 4
  %34 = bitcast i8* %32 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = icmp ult i32 %35, %24
  %37 = select i1 %36, i32 %35, i32 %24
  %38 = zext i32 %37 to i64
  %39 = tail call i32 @memcmp(i8* %22, i8* %33, i64 %38) #14
  %40 = icmp eq i32 %39, 0
  %41 = icmp ult i32 %24, %35
  %42 = icmp slt i32 %39, 0
  %43 = select i1 %40, i1 %41, i1 %42
  br i1 %43, label %44, label %50

44:                                               ; preds = %25
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %63

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %69

50:                                               ; preds = %25
  %51 = tail call i32 @memcmp(i8* %33, i8* %22, i64 %38) #14
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %51, 0
  %54 = select i1 %52, i1 %36, i1 %53
  br i1 %54, label %55, label %61

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 1
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %69

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %69

63:                                               ; preds = %55, %44
  %64 = phi %"class.std::__1::__tree_node_base"* [ %46, %44 ], [ %57, %55 ]
  %65 = phi %"class.std::__1::__tree_node_base"** [ %45, %44 ], [ %56, %55 ]
  %66 = bitcast %"class.std::__1::__tree_node_base"* %64 to %"class.std::__1::__tree_node"*
  br label %25

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %69

69:                                               ; preds = %48, %59, %61, %67
  %70 = phi %"class.std::__1::__tree_end_node"* [ %4, %67 ], [ %49, %48 ], [ %60, %59 ], [ %62, %61 ]
  %71 = phi %"class.std::__1::__tree_node_base"** [ %68, %67 ], [ %45, %48 ], [ %56, %59 ], [ %27, %61 ]
  %72 = bitcast %"class.std::__1::__tree_node_base"** %71 to %"class.std::__1::__tree_node"**
  %73 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node"* %73, null
  br i1 %74, label %75, label %102

75:                                               ; preds = %69
  %76 = tail call i8* @_Znwm(i64 32) #12, !noalias !40
  %77 = getelementptr inbounds i8, i8* %76, i64 28
  %78 = getelementptr inbounds %"struct.flatbuffers::Offset.113", %"struct.flatbuffers::Offset.113"* %2, i64 0, i32 0
  %79 = bitcast i8* %77 to i32*
  %80 = load i32, i32* %78, align 4, !noalias !40
  store i32 %80, i32* %79, align 4, !noalias !40
  %81 = bitcast i8* %76 to %"class.std::__1::__tree_node"*
  %82 = bitcast i8* %76 to %"class.std::__1::__tree_node_base"*
  %83 = getelementptr inbounds i8, i8* %76, i64 16
  %84 = bitcast i8* %83 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %70, %"class.std::__1::__tree_end_node"** %84, align 8
  %85 = bitcast %"class.std::__1::__tree_node_base"** %71 to i8**
  store i8* %76, i8** %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %87 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %75
  %92 = ptrtoint %"class.std::__1::__tree_node_base"* %89 to i64
  %93 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %92, i64* %93, align 8
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  br label %95

95:                                               ; preds = %91, %75
  %96 = phi %"class.std::__1::__tree_node_base"* [ %82, %75 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %96) #11
  %99 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 1
  store i64 %101, i64* %99, align 8
  br label %102

102:                                              ; preds = %95, %69
  %103 = phi i8 [ 1, %95 ], [ 0, %69 ]
  %104 = phi %"class.std::__1::__tree_node"* [ %81, %95 ], [ %73, %69 ]
  %105 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %104, i64 0, i32 0, i32 0
  %106 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %105, 0
  %107 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %106, i8 %103, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilder11StartVectorEmm(%"class.flatbuffers::FlatBufferBuilder"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 3
  store i8 1, i8* %4, align 2
  %5 = mul i64 %2, %1
  %6 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, 4
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  store i64 4, i64* %6, align 8
  br label %10

10:                                               ; preds = %9, %3
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %12, %15
  %20 = add i64 %19, %18
  %21 = add i64 %5, %20
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %15, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %10
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #11
  %31 = load i8*, i8** %13, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %13, align 8
  br label %39

34:                                               ; preds = %10
  %35 = inttoptr i64 %15 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %13, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %13, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %13, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %13, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %13, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %13, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !43

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %6, align 8
  %79 = icmp ult i64 %78, %2
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  store i64 %2, i64* %6, align 8
  br label %81

81:                                               ; preds = %80, %77
  %82 = load i64, i64* %11, align 8
  %83 = load i64, i64* %14, align 8
  %84 = load i64, i64* %17, align 8
  %85 = sub i64 %82, %83
  %86 = add i64 %85, %84
  %87 = and i64 %86, 4294967295
  %88 = add i64 %5, %87
  %89 = sub i64 0, %88
  %90 = add i64 %2, -1
  %91 = and i64 %90, %89
  %92 = load i64, i64* %25, align 8
  %93 = sub i64 %83, %92
  %94 = icmp ult i64 %93, %91
  br i1 %94, label %95, label %100

95:                                               ; preds = %81
  %96 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %96, i64 %91) #11
  %97 = load i8*, i8** %13, align 8
  %98 = sub i64 0, %91
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  store i8* %99, i8** %13, align 8
  br label %105

100:                                              ; preds = %81
  %101 = inttoptr i64 %83 to i8*
  %102 = sub i64 0, %91
  %103 = getelementptr inbounds i8, i8* %101, i64 %102
  store i8* %103, i8** %13, align 8
  %104 = icmp eq i64 %91, 0
  br i1 %104, label %143, label %105

105:                                              ; preds = %100, %95
  %106 = phi i8* [ %99, %95 ], [ %103, %100 ]
  store i8 0, i8* %106, align 1
  %107 = icmp eq i64 %91, 1
  br i1 %107, label %143, label %108

108:                                              ; preds = %105
  %109 = add i64 %91, -1
  %110 = add i64 %91, -2
  %111 = and i64 %109, 3
  %112 = icmp ult i64 %110, 3
  br i1 %112, label %132, label %113

113:                                              ; preds = %108
  %114 = sub i64 %109, %111
  br label %115

115:                                              ; preds = %115, %113
  %116 = phi i64 [ 1, %113 ], [ %129, %115 ]
  %117 = phi i64 [ %114, %113 ], [ %130, %115 ]
  %118 = load i8*, i8** %13, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 %116
  store i8 0, i8* %119, align 1
  %120 = add nuw nsw i64 %116, 1
  %121 = load i8*, i8** %13, align 8
  %122 = getelementptr inbounds i8, i8* %121, i64 %120
  store i8 0, i8* %122, align 1
  %123 = add nuw nsw i64 %116, 2
  %124 = load i8*, i8** %13, align 8
  %125 = getelementptr inbounds i8, i8* %124, i64 %123
  store i8 0, i8* %125, align 1
  %126 = add nuw i64 %116, 3
  %127 = load i8*, i8** %13, align 8
  %128 = getelementptr inbounds i8, i8* %127, i64 %126
  store i8 0, i8* %128, align 1
  %129 = add nuw i64 %116, 4
  %130 = add i64 %117, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %115

132:                                              ; preds = %115, %108
  %133 = phi i64 [ 1, %108 ], [ %129, %115 ]
  %134 = icmp eq i64 %111, 0
  br i1 %134, label %143, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %140, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %141, %135 ], [ %111, %132 ]
  %138 = load i8*, i8** %13, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 %136
  store i8 0, i8* %139, align 1
  %140 = add nuw i64 %136, 1
  %141 = add i64 %137, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %135, !llvm.loop !44

143:                                              ; preds = %132, %135, %100, %105
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions23declarative_net_request4flat25EmbedderConditionsBuilder20add_tab_ids_excludedEN11flatbuffers6OffsetINS3_6VectorIiEEEE(%"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder", %"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #11
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !45

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #11
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #11
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102315451187200
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 6
  %115 = select i1 %114, i16 %113, i16 6
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions23declarative_net_request4flat25EmbedderConditionsBuilder20add_tab_ids_includedEN11flatbuffers6OffsetINS3_6VectorIiEEEE(%"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder", %"struct.extensions::declarative_net_request::flat::EmbedderConditionsBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #11
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !46

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #11
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #11
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102324041121792
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 4
  %115 = select i1 %114, i16 %113, i16 4
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #11
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !47

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %11, align 8
  %75 = load i64, i64* %21, align 8
  %76 = sub i64 %74, %75
  %77 = icmp ult i64 %76, 4
  %78 = inttoptr i64 %74 to i8*
  br i1 %77, label %79, label %82

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %80, i64 4) #11
  %81 = load i8*, i8** %10, align 8
  br label %82

82:                                               ; preds = %73, %79
  %83 = phi i8* [ %78, %73 ], [ %81, %79 ]
  %84 = getelementptr inbounds i8, i8* %83, i64 -4
  store i8* %84, i8** %10, align 8
  %85 = bitcast i8* %84 to i32*
  store i32 0, i32* %85, align 4
  %86 = load i64, i64* %8, align 8
  %87 = load i64, i64* %11, align 8
  %88 = load i64, i64* %14, align 8
  %89 = sub i64 %86, %87
  %90 = add i64 %89, %88
  %91 = trunc i64 %90 to i32
  %92 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 2
  %93 = load i16, i16* %92, align 4
  %94 = add i16 %93, 2
  %95 = icmp ugt i16 %94, 4
  %96 = select i1 %95, i16 %94, i16 4
  store i16 %96, i16* %92, align 4
  %97 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  %98 = zext i16 %96 to i64
  %99 = load i64, i64* %21, align 8
  %100 = sub i64 %87, %99
  %101 = icmp ult i64 %100, %98
  %102 = inttoptr i64 %87 to i8*
  br i1 %101, label %103, label %105

103:                                              ; preds = %82
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %97, i64 %98) #11
  %104 = load i8*, i8** %10, align 8
  br label %105

105:                                              ; preds = %82, %103
  %106 = phi i8* [ %102, %82 ], [ %104, %103 ]
  %107 = sub nsw i64 0, %98
  %108 = getelementptr inbounds i8, i8* %106, i64 %107
  store i8* %108, i8** %10, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %108, i8 0, i64 %98, i1 false) #11
  %109 = sub i32 %91, %1
  %110 = load i8*, i8** %10, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 2
  %112 = trunc i32 %109 to i16
  %113 = bitcast i8* %111 to i16*
  store i16 %112, i16* %113, align 2
  %114 = bitcast i8** %10 to i16**
  %115 = load i16*, i16** %114, align 8
  %116 = load i16, i16* %92, align 4
  store i16 %116, i16* %115, align 2
  %117 = load i8*, i8** %20, align 8
  %118 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = zext i32 %119 to i64
  %121 = shl nuw nsw i64 %120, 3
  %122 = sub nsw i64 0, %121
  %123 = icmp eq i32 %119, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %105
  %125 = getelementptr inbounds i8, i8* %117, i64 %122
  br label %151

126:                                              ; preds = %151
  %127 = load i32, i32* %118, align 8
  %128 = zext i32 %127 to i64
  %129 = shl nuw nsw i64 %128, 3
  %130 = sub nsw i64 0, %129
  br label %131

131:                                              ; preds = %105, %126
  %132 = phi i64 [ %130, %126 ], [ %122, %105 ]
  %133 = phi i8* [ %165, %126 ], [ %117, %105 ]
  %134 = getelementptr inbounds i8, i8* %133, i64 %132
  store i8* %134, i8** %20, align 8
  store i32 0, i32* %118, align 8
  store i16 0, i16* %92, align 4
  %135 = load i8*, i8** %10, align 8
  %136 = bitcast i8* %135 to i16*
  %137 = load i16, i16* %136, align 2
  %138 = load i64, i64* %8, align 8
  %139 = ptrtoint i8* %135 to i64
  %140 = load i64, i64* %14, align 8
  %141 = sub i64 %138, %139
  %142 = add i64 %141, %140
  %143 = trunc i64 %142 to i32
  %144 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 7
  %145 = load i8, i8* %144, align 1, !range !5
  %146 = icmp ne i8 %145, 0
  %147 = inttoptr i64 %140 to i8*
  %148 = ptrtoint i8* %134 to i64
  %149 = icmp ugt i8* %134, %147
  %150 = and i1 %146, %149
  br i1 %150, label %167, label %191

151:                                              ; preds = %124, %151
  %152 = phi i8* [ %164, %151 ], [ %125, %124 ]
  %153 = bitcast i8* %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 %91, %154
  %156 = trunc i32 %155 to i16
  %157 = load i8*, i8** %10, align 8
  %158 = getelementptr inbounds i8, i8* %152, i64 4
  %159 = bitcast i8* %158 to i16*
  %160 = load i16, i16* %159, align 4
  %161 = zext i16 %160 to i64
  %162 = getelementptr inbounds i8, i8* %157, i64 %161
  %163 = bitcast i8* %162 to i16*
  store i16 %156, i16* %163, align 2
  %164 = getelementptr inbounds i8, i8* %152, i64 8
  %165 = load i8*, i8** %20, align 8
  %166 = icmp ult i8* %164, %165
  br i1 %166, label %151, label %126

167:                                              ; preds = %131
  %168 = getelementptr inbounds i8, i8* %147, i64 %138
  %169 = zext i16 %137 to i64
  br label %170

170:                                              ; preds = %167, %188
  %171 = phi i8* [ %147, %167 ], [ %189, %188 ]
  %172 = bitcast i8* %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i64
  %175 = sub nsw i64 0, %174
  %176 = getelementptr inbounds i8, i8* %168, i64 %175
  %177 = bitcast i8* %176 to i16*
  %178 = load i16, i16* %177, align 2
  %179 = icmp eq i16 %137, %178
  br i1 %179, label %180, label %188

180:                                              ; preds = %170
  %181 = tail call i32 @bcmp(i8* %176, i8* %135, i64 %169)
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %188

183:                                              ; preds = %180
  %184 = sub i64 %142, %90
  %185 = and i64 %184, 4294967295
  %186 = getelementptr inbounds i8, i8* %135, i64 %185
  store i8* %186, i8** %10, align 8
  %187 = ptrtoint i8* %186 to i64
  br label %191

188:                                              ; preds = %180, %170
  %189 = getelementptr inbounds i8, i8* %171, i64 4
  %190 = icmp ult i8* %189, %134
  br i1 %190, label %170, label %191

191:                                              ; preds = %188, %131, %183
  %192 = phi i64 [ %139, %131 ], [ %187, %183 ], [ %139, %188 ]
  %193 = phi i32 [ %143, %131 ], [ %173, %183 ], [ %143, %188 ]
  %194 = add i64 %140, %138
  %195 = sub i64 %194, %192
  %196 = trunc i64 %195 to i32
  %197 = icmp eq i32 %193, %196
  br i1 %197, label %198, label %212

198:                                              ; preds = %191
  %199 = sub i64 %192, %148
  %200 = icmp ult i64 %199, 4
  br i1 %200, label %203, label %201

201:                                              ; preds = %198
  %202 = bitcast i8* %134 to i32*
  br label %206

203:                                              ; preds = %198
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %97, i64 4) #11
  %204 = bitcast i8** %20 to i32**
  %205 = load i32*, i32** %204, align 8
  br label %206

206:                                              ; preds = %201, %203
  %207 = phi i32* [ %202, %201 ], [ %205, %203 ]
  store i32 %193, i32* %207, align 4
  %208 = load i8*, i8** %20, align 8
  %209 = getelementptr inbounds i8, i8* %208, i64 4
  store i8* %209, i8** %20, align 8
  %210 = load i8*, i8** %13, align 8
  %211 = load i64, i64* %8, align 8
  br label %212

212:                                              ; preds = %206, %191
  %213 = phi i64 [ %211, %206 ], [ %138, %191 ]
  %214 = phi i8* [ %210, %206 ], [ %147, %191 ]
  %215 = and i64 %90, 4294967295
  %216 = getelementptr inbounds i8, i8* %214, i64 %213
  %217 = sub nsw i64 0, %215
  %218 = getelementptr inbounds i8, i8* %216, i64 %217
  %219 = sub nsw i32 %193, %91
  %220 = bitcast i8* %218 to i32*
  store i32 %219, i32* %220, align 4
  %221 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 3
  store i8 0, i8* %221, align 2
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilder6FinishEjPKcb(%"class.flatbuffers::FlatBufferBuilder"*, i32, i8*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %10 = bitcast i8** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = select i1 %3, i64 8, i64 4
  %12 = icmp ne i8* %2, null
  %13 = select i1 %12, i64 4, i64 0
  %14 = add nuw nsw i64 %11, %13
  %15 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = add i64 %22, %8
  %24 = and i64 %23, 4294967295
  %25 = add nuw nsw i64 %14, %24
  %26 = sub nsw i64 0, %25
  %27 = add i64 %16, -1
  %28 = and i64 %27, %26
  %29 = sub i64 %21, %8
  %30 = icmp ult i64 %29, %28
  br i1 %30, label %31, label %35

31:                                               ; preds = %4
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %5, i64 %28) #11
  %32 = load i8*, i8** %19, align 8
  %33 = sub i64 0, %28
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  store i8* %34, i8** %19, align 8
  br label %40

35:                                               ; preds = %4
  %36 = inttoptr i64 %21 to i8*
  %37 = sub i64 0, %28
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  store i8* %38, i8** %19, align 8
  %39 = icmp eq i64 %28, 0
  br i1 %39, label %78, label %40

40:                                               ; preds = %35, %31
  %41 = phi i8* [ %34, %31 ], [ %38, %35 ]
  store i8 0, i8* %41, align 1
  %42 = icmp eq i64 %28, 1
  br i1 %42, label %78, label %43

43:                                               ; preds = %40
  %44 = add i64 %28, -1
  %45 = add i64 %28, -2
  %46 = and i64 %44, 3
  %47 = icmp ult i64 %45, 3
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = sub i64 %44, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 1, %48 ], [ %64, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %65, %50 ]
  %53 = load i8*, i8** %19, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %51
  store i8 0, i8* %54, align 1
  %55 = add nuw nsw i64 %51, 1
  %56 = load i8*, i8** %19, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %55
  store i8 0, i8* %57, align 1
  %58 = add nuw nsw i64 %51, 2
  %59 = load i8*, i8** %19, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  store i8 0, i8* %60, align 1
  %61 = add nuw i64 %51, 3
  %62 = load i8*, i8** %19, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 %61
  store i8 0, i8* %63, align 1
  %64 = add nuw i64 %51, 4
  %65 = add i64 %52, -4
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %50

67:                                               ; preds = %50, %43
  %68 = phi i64 [ 1, %43 ], [ %64, %50 ]
  %69 = icmp eq i64 %46, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %67, %70
  %71 = phi i64 [ %75, %70 ], [ %68, %67 ]
  %72 = phi i64 [ %76, %70 ], [ %46, %67 ]
  %73 = load i8*, i8** %19, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %71
  store i8 0, i8* %74, align 1
  %75 = add nuw i64 %71, 1
  %76 = add i64 %72, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %70, !llvm.loop !48

78:                                               ; preds = %67, %70, %35, %40
  br i1 %12, label %79, label %93

79:                                               ; preds = %78
  %80 = load i64, i64* %20, align 8
  %81 = load i64, i64* %10, align 8
  %82 = sub i64 %80, %81
  %83 = icmp ult i64 %82, 4
  %84 = inttoptr i64 %80 to i8*
  br i1 %83, label %85, label %87

85:                                               ; preds = %79
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %5, i64 4) #11
  %86 = load i8*, i8** %19, align 8
  br label %87

87:                                               ; preds = %79, %85
  %88 = phi i8* [ %84, %79 ], [ %86, %85 ]
  %89 = getelementptr inbounds i8, i8* %88, i64 -4
  store i8* %89, i8** %19, align 8
  %90 = bitcast i8* %2 to i32*
  %91 = bitcast i8* %89 to i32*
  %92 = load i32, i32* %90, align 1
  store i32 %92, i32* %91, align 1
  br label %93

93:                                               ; preds = %87, %78
  %94 = load i64, i64* %15, align 8
  %95 = icmp ult i64 %94, 4
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  store i64 4, i64* %15, align 8
  br label %97

97:                                               ; preds = %96, %93
  %98 = load i64, i64* %17, align 8
  %99 = load i64, i64* %20, align 8
  %100 = load i64, i64* %7, align 8
  %101 = sub i64 %98, %99
  %102 = add i64 %101, %100
  %103 = sub i64 0, %102
  %104 = and i64 %103, 3
  %105 = load i64, i64* %10, align 8
  %106 = sub i64 %99, %105
  %107 = icmp ult i64 %106, %104
  br i1 %107, label %108, label %112

108:                                              ; preds = %97
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %5, i64 %104) #11
  %109 = load i8*, i8** %19, align 8
  %110 = sub nsw i64 0, %104
  %111 = getelementptr inbounds i8, i8* %109, i64 %110
  store i8* %111, i8** %19, align 8
  br label %117

112:                                              ; preds = %97
  %113 = inttoptr i64 %99 to i8*
  %114 = sub nsw i64 0, %104
  %115 = getelementptr inbounds i8, i8* %113, i64 %114
  store i8* %115, i8** %19, align 8
  %116 = icmp eq i64 %104, 0
  br i1 %116, label %155, label %117

117:                                              ; preds = %112, %108
  %118 = phi i8* [ %111, %108 ], [ %115, %112 ]
  store i8 0, i8* %118, align 1
  %119 = icmp eq i64 %104, 1
  br i1 %119, label %155, label %120

120:                                              ; preds = %117
  %121 = add nsw i64 %104, -1
  %122 = add nsw i64 %104, -2
  %123 = and i64 %121, 3
  %124 = icmp ult i64 %122, 3
  br i1 %124, label %144, label %125

125:                                              ; preds = %120
  %126 = sub nsw i64 %121, %123
  br label %127

127:                                              ; preds = %127, %125
  %128 = phi i64 [ 1, %125 ], [ %141, %127 ]
  %129 = phi i64 [ %126, %125 ], [ %142, %127 ]
  %130 = load i8*, i8** %19, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 %128
  store i8 0, i8* %131, align 1
  %132 = add nuw nsw i64 %128, 1
  %133 = load i8*, i8** %19, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 %132
  store i8 0, i8* %134, align 1
  %135 = add nuw nsw i64 %128, 2
  %136 = load i8*, i8** %19, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 %135
  store i8 0, i8* %137, align 1
  %138 = add nuw i64 %128, 3
  %139 = load i8*, i8** %19, align 8
  %140 = getelementptr inbounds i8, i8* %139, i64 %138
  store i8 0, i8* %140, align 1
  %141 = add nuw i64 %128, 4
  %142 = add i64 %129, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %127

144:                                              ; preds = %127, %120
  %145 = phi i64 [ 1, %120 ], [ %141, %127 ]
  %146 = icmp eq i64 %123, 0
  br i1 %146, label %155, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %152, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %153, %147 ], [ %123, %144 ]
  %150 = load i8*, i8** %19, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 %148
  store i8 0, i8* %151, align 1
  %152 = add nuw i64 %148, 1
  %153 = add i64 %149, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %147, !llvm.loop !49

155:                                              ; preds = %144, %147, %112, %117
  %156 = load i64, i64* %17, align 8
  %157 = load i64, i64* %20, align 8
  %158 = load i64, i64* %7, align 8
  %159 = sub i64 %156, %157
  %160 = add i64 %159, %158
  %161 = trunc i64 %160 to i32
  %162 = sub i32 4, %1
  %163 = add i32 %162, %161
  %164 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %163)
  br i1 %3, label %165, label %173

165:                                              ; preds = %155
  %166 = load i64, i64* %17, align 8
  %167 = load i64, i64* %20, align 8
  %168 = load i64, i64* %7, align 8
  %169 = sub i64 %166, %167
  %170 = add i64 %169, %168
  %171 = trunc i64 %170 to i32
  %172 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %171)
  br label %173

173:                                              ; preds = %165, %155
  %174 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 4
  store i8 1, i8* %174, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17url_pattern_index4flat14UrlRuleBuilder23add_embedder_conditionsEN11flatbuffers6OffsetINS2_6VectorIhEEEE(%"struct.url_pattern_index::flat::UrlRuleBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRuleBuilder", %"struct.url_pattern_index::flat::UrlRuleBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #11
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !50

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #11
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #11
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102220961906688
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 28
  %115 = select i1 %114, i16 %113, i16 28
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilder10AddElementImEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"*, i16 zeroext, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i64 %2, %3
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 6
  %8 = load i8, i8* %7, align 8, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %124, label %10

10:                                               ; preds = %6, %4
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, 8
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i64 8, i64* %11, align 8
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %17, %20
  %25 = add i64 %24, %23
  %26 = sub i64 0, %25
  %27 = and i64 %26, 7
  %28 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %20, %30
  %32 = icmp ult i64 %31, %27
  br i1 %32, label %33, label %38

33:                                               ; preds = %15
  %34 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %34, i64 %27) #11
  %35 = load i8*, i8** %18, align 8
  %36 = sub nsw i64 0, %27
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %18, align 8
  br label %43

38:                                               ; preds = %15
  %39 = inttoptr i64 %20 to i8*
  %40 = sub nsw i64 0, %27
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  store i8* %41, i8** %18, align 8
  %42 = icmp eq i64 %27, 0
  br i1 %42, label %81, label %43

43:                                               ; preds = %38, %33
  %44 = phi i8* [ %37, %33 ], [ %41, %38 ]
  store i8 0, i8* %44, align 1
  %45 = icmp eq i64 %27, 1
  br i1 %45, label %81, label %46

46:                                               ; preds = %43
  %47 = add nsw i64 %27, -1
  %48 = add nsw i64 %27, -2
  %49 = and i64 %47, 3
  %50 = icmp ult i64 %48, 3
  br i1 %50, label %70, label %51

51:                                               ; preds = %46
  %52 = sub nsw i64 %47, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 1, %51 ], [ %67, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %68, %53 ]
  %56 = load i8*, i8** %18, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %54
  store i8 0, i8* %57, align 1
  %58 = add nuw nsw i64 %54, 1
  %59 = load i8*, i8** %18, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  store i8 0, i8* %60, align 1
  %61 = add nuw nsw i64 %54, 2
  %62 = load i8*, i8** %18, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 %61
  store i8 0, i8* %63, align 1
  %64 = add nuw i64 %54, 3
  %65 = load i8*, i8** %18, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  store i8 0, i8* %66, align 1
  %67 = add nuw i64 %54, 4
  %68 = add i64 %55, -4
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %53

70:                                               ; preds = %53, %46
  %71 = phi i64 [ 1, %46 ], [ %67, %53 ]
  %72 = icmp eq i64 %49, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %70, %73
  %74 = phi i64 [ %78, %73 ], [ %71, %70 ]
  %75 = phi i64 [ %79, %73 ], [ %49, %70 ]
  %76 = load i8*, i8** %18, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 %74
  store i8 0, i8* %77, align 1
  %78 = add nuw i64 %74, 1
  %79 = add i64 %75, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %73, !llvm.loop !51

81:                                               ; preds = %70, %73, %38, %43
  %82 = load i64, i64* %19, align 8
  %83 = load i64, i64* %29, align 8
  %84 = sub i64 %82, %83
  %85 = icmp ult i64 %84, 8
  %86 = inttoptr i64 %82 to i8*
  br i1 %85, label %87, label %90

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %88, i64 8) #11
  %89 = load i8*, i8** %18, align 8
  br label %90

90:                                               ; preds = %81, %87
  %91 = phi i8* [ %86, %81 ], [ %89, %87 ]
  %92 = getelementptr inbounds i8, i8* %91, i64 -8
  store i8* %92, i8** %18, align 8
  %93 = bitcast i8* %92 to i64*
  store i64 %2, i64* %93, align 8
  %94 = load i64, i64* %16, align 8
  %95 = load i64, i64* %19, align 8
  %96 = load i64, i64* %22, align 8
  %97 = sub i64 %94, %95
  %98 = add i64 %97, %96
  %99 = load i64, i64* %29, align 8
  %100 = sub i64 %95, %99
  %101 = icmp ult i64 %100, 8
  br i1 %101, label %104, label %102

102:                                              ; preds = %90
  %103 = inttoptr i64 %99 to i64*
  br label %108

104:                                              ; preds = %90
  %105 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %105, i64 8) #11
  %106 = bitcast i8** %28 to i64**
  %107 = load i64*, i64** %106, align 8
  br label %108

108:                                              ; preds = %102, %104
  %109 = phi i64* [ %103, %102 ], [ %107, %104 ]
  %110 = zext i16 %1 to i64
  %111 = shl nuw nsw i64 %110, 32
  %112 = and i64 %98, 4294967295
  %113 = or i64 %111, %112
  %114 = or i64 %113, -6149102341220990976
  store i64 %114, i64* %109, align 4
  %115 = load i8*, i8** %28, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 8
  store i8* %116, i8** %28, align 8
  %117 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, 1
  store i32 %119, i32* %117, align 8
  %120 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 2
  %121 = load i16, i16* %120, align 2
  %122 = icmp ult i16 %121, %1
  %123 = select i1 %122, i16 %1, i16 %121
  store i16 %123, i16* %120, align 4
  br label %124

124:                                              ; preds = %6, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"*, i16 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %118, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, 4
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store i64 4, i64* %6, align 8
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %12, %15
  %20 = add i64 %19, %18
  %21 = sub i64 0, %20
  %22 = and i64 %21, 3
  %23 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %15, %25
  %27 = icmp ult i64 %26, %22
  br i1 %27, label %28, label %33

28:                                               ; preds = %10
  %29 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %29, i64 %22) #11
  %30 = load i8*, i8** %13, align 8
  %31 = sub nsw i64 0, %22
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  store i8* %32, i8** %13, align 8
  br label %38

33:                                               ; preds = %10
  %34 = inttoptr i64 %15 to i8*
  %35 = sub nsw i64 0, %22
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  store i8* %36, i8** %13, align 8
  %37 = icmp eq i64 %22, 0
  br i1 %37, label %76, label %38

38:                                               ; preds = %33, %28
  %39 = phi i8* [ %32, %28 ], [ %36, %33 ]
  store i8 0, i8* %39, align 1
  %40 = icmp eq i64 %22, 1
  br i1 %40, label %76, label %41

41:                                               ; preds = %38
  %42 = add nsw i64 %22, -1
  %43 = add nsw i64 %22, -2
  %44 = and i64 %42, 3
  %45 = icmp ult i64 %43, 3
  br i1 %45, label %65, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 1, %46 ], [ %62, %48 ]
  %50 = phi i64 [ %47, %46 ], [ %63, %48 ]
  %51 = load i8*, i8** %13, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %49
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %49, 1
  %54 = load i8*, i8** %13, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw nsw i64 %49, 2
  %57 = load i8*, i8** %13, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %49, 3
  %60 = load i8*, i8** %13, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8 0, i8* %61, align 1
  %62 = add nuw i64 %49, 4
  %63 = add i64 %50, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %48

65:                                               ; preds = %48, %41
  %66 = phi i64 [ 1, %41 ], [ %62, %48 ]
  %67 = icmp eq i64 %44, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %73, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %74, %68 ], [ %44, %65 ]
  %71 = load i8*, i8** %13, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 %69
  store i8 0, i8* %72, align 1
  %73 = add nuw i64 %69, 1
  %74 = add i64 %70, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %68, !llvm.loop !52

76:                                               ; preds = %65, %68, %33, %38
  %77 = load i64, i64* %11, align 8
  %78 = load i64, i64* %14, align 8
  %79 = load i64, i64* %17, align 8
  %80 = sub i64 %77, %78
  %81 = add i64 %80, %79
  %82 = trunc i64 %81 to i32
  %83 = sub i32 4, %2
  %84 = add i32 %83, %82
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 6
  %88 = load i8, i8* %87, align 8, !range !5
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %118, label %90

90:                                               ; preds = %86, %76
  %91 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %84) #11
  %92 = load i64, i64* %14, align 8
  %93 = load i64, i64* %24, align 8
  %94 = sub i64 %92, %93
  %95 = icmp ult i64 %94, 8
  br i1 %95, label %98, label %96

96:                                               ; preds = %90
  %97 = inttoptr i64 %93 to i64*
  br label %102

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %99, i64 8) #11
  %100 = bitcast i8** %23 to i64**
  %101 = load i64*, i64** %100, align 8
  br label %102

102:                                              ; preds = %98, %96
  %103 = phi i64* [ %97, %96 ], [ %101, %98 ]
  %104 = zext i16 %1 to i64
  %105 = shl nuw nsw i64 %104, 32
  %106 = zext i32 %91 to i64
  %107 = or i64 %105, %106
  %108 = or i64 %107, -6149102341220990976
  store i64 %108, i64* %103, align 4
  %109 = load i8*, i8** %23, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 8
  store i8* %110, i8** %23, align 8
  %111 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, 1
  store i32 %113, i32* %111, align 8
  %114 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 2
  %115 = load i16, i16* %114, align 2
  %116 = icmp ult i16 %115, %1
  %117 = select i1 %116, i16 %1, i16 %115
  store i16 %117, i16* %114, align 4
  br label %118

118:                                              ; preds = %102, %86, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6VectorINS_6OffsetINS_6StringEEEEEEEvtNS3_IT_EE(%"class.flatbuffers::FlatBufferBuilder"*, i16 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %118, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, 4
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store i64 4, i64* %6, align 8
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %12, %15
  %20 = add i64 %19, %18
  %21 = sub i64 0, %20
  %22 = and i64 %21, 3
  %23 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %15, %25
  %27 = icmp ult i64 %26, %22
  br i1 %27, label %28, label %33

28:                                               ; preds = %10
  %29 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %29, i64 %22) #11
  %30 = load i8*, i8** %13, align 8
  %31 = sub nsw i64 0, %22
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  store i8* %32, i8** %13, align 8
  br label %38

33:                                               ; preds = %10
  %34 = inttoptr i64 %15 to i8*
  %35 = sub nsw i64 0, %22
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  store i8* %36, i8** %13, align 8
  %37 = icmp eq i64 %22, 0
  br i1 %37, label %76, label %38

38:                                               ; preds = %33, %28
  %39 = phi i8* [ %32, %28 ], [ %36, %33 ]
  store i8 0, i8* %39, align 1
  %40 = icmp eq i64 %22, 1
  br i1 %40, label %76, label %41

41:                                               ; preds = %38
  %42 = add nsw i64 %22, -1
  %43 = add nsw i64 %22, -2
  %44 = and i64 %42, 3
  %45 = icmp ult i64 %43, 3
  br i1 %45, label %65, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 1, %46 ], [ %62, %48 ]
  %50 = phi i64 [ %47, %46 ], [ %63, %48 ]
  %51 = load i8*, i8** %13, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %49
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %49, 1
  %54 = load i8*, i8** %13, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw nsw i64 %49, 2
  %57 = load i8*, i8** %13, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %49, 3
  %60 = load i8*, i8** %13, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8 0, i8* %61, align 1
  %62 = add nuw i64 %49, 4
  %63 = add i64 %50, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %48

65:                                               ; preds = %48, %41
  %66 = phi i64 [ 1, %41 ], [ %62, %48 ]
  %67 = icmp eq i64 %44, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %73, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %74, %68 ], [ %44, %65 ]
  %71 = load i8*, i8** %13, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 %69
  store i8 0, i8* %72, align 1
  %73 = add nuw i64 %69, 1
  %74 = add i64 %70, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %68, !llvm.loop !53

76:                                               ; preds = %65, %68, %33, %38
  %77 = load i64, i64* %11, align 8
  %78 = load i64, i64* %14, align 8
  %79 = load i64, i64* %17, align 8
  %80 = sub i64 %77, %78
  %81 = add i64 %80, %79
  %82 = trunc i64 %81 to i32
  %83 = sub i32 4, %2
  %84 = add i32 %83, %82
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 6
  %88 = load i8, i8* %87, align 8, !range !5
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %118, label %90

90:                                               ; preds = %86, %76
  %91 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %84) #11
  %92 = load i64, i64* %14, align 8
  %93 = load i64, i64* %24, align 8
  %94 = sub i64 %92, %93
  %95 = icmp ult i64 %94, 8
  br i1 %95, label %98, label %96

96:                                               ; preds = %90
  %97 = inttoptr i64 %93 to i64*
  br label %102

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %99, i64 8) #11
  %100 = bitcast i8** %23 to i64**
  %101 = load i64*, i64** %100, align 8
  br label %102

102:                                              ; preds = %98, %96
  %103 = phi i64* [ %97, %96 ], [ %101, %98 ]
  %104 = zext i16 %1 to i64
  %105 = shl nuw nsw i64 %104, 32
  %106 = zext i32 %91 to i64
  %107 = or i64 %105, %106
  %108 = or i64 %107, -6149102341220990976
  store i64 %108, i64* %103, align 4
  %109 = load i8*, i8** %23, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 8
  store i8* %110, i8** %23, align 8
  %111 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, 1
  store i32 %113, i32* %111, align 8
  %114 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 2
  %115 = load i16, i16* %114, align 2
  %116 = icmp ult i16 %115, %1
  %117 = select i1 %116, i16 %1, i16 %115
  store i16 %117, i16* %114, align 4
  br label %118

118:                                              ; preds = %102, %86, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilder10AddElementItEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"*, i16 zeroext, i16 zeroext, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i16 %2, %3
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 6
  %8 = load i8, i8* %7, align 8, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %90, label %10

10:                                               ; preds = %6, %4
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, 2
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i64 2, i64* %11, align 8
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %17, %20
  %25 = add i64 %24, %23
  %26 = and i64 %25, 1
  %27 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %20, %29
  %31 = icmp ult i64 %30, %26
  br i1 %31, label %32, label %37

32:                                               ; preds = %15
  %33 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %33, i64 %26) #11
  %34 = load i8*, i8** %18, align 8
  %35 = sub nsw i64 0, %26
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  store i8* %36, i8** %18, align 8
  br label %43

37:                                               ; preds = %15
  %38 = inttoptr i64 %20 to i8*
  %39 = sub nsw i64 0, %26
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  store i8* %40, i8** %18, align 8
  %41 = icmp eq i64 %26, 0
  %42 = ptrtoint i8* %40 to i64
  br i1 %41, label %47, label %43

43:                                               ; preds = %37, %32
  %44 = phi i8* [ %36, %32 ], [ %40, %37 ]
  store i8 0, i8* %44, align 1
  %45 = load i64, i64* %19, align 8
  %46 = load i64, i64* %28, align 8
  br label %47

47:                                               ; preds = %43, %37
  %48 = phi i64 [ %46, %43 ], [ %29, %37 ]
  %49 = phi i64 [ %45, %43 ], [ %42, %37 ]
  %50 = sub i64 %49, %48
  %51 = icmp ult i64 %50, 2
  %52 = inttoptr i64 %49 to i8*
  br i1 %51, label %53, label %56

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %54, i64 2) #11
  %55 = load i8*, i8** %18, align 8
  br label %56

56:                                               ; preds = %47, %53
  %57 = phi i8* [ %52, %47 ], [ %55, %53 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 -2
  store i8* %58, i8** %18, align 8
  %59 = bitcast i8* %58 to i16*
  store i16 %2, i16* %59, align 2
  %60 = load i64, i64* %16, align 8
  %61 = load i64, i64* %19, align 8
  %62 = load i64, i64* %22, align 8
  %63 = sub i64 %60, %61
  %64 = add i64 %63, %62
  %65 = load i64, i64* %28, align 8
  %66 = sub i64 %61, %65
  %67 = icmp ult i64 %66, 8
  br i1 %67, label %70, label %68

68:                                               ; preds = %56
  %69 = inttoptr i64 %65 to i64*
  br label %74

70:                                               ; preds = %56
  %71 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %71, i64 8) #11
  %72 = bitcast i8** %27 to i64**
  %73 = load i64*, i64** %72, align 8
  br label %74

74:                                               ; preds = %68, %70
  %75 = phi i64* [ %69, %68 ], [ %73, %70 ]
  %76 = zext i16 %1 to i64
  %77 = shl nuw nsw i64 %76, 32
  %78 = and i64 %64, 4294967295
  %79 = or i64 %77, %78
  %80 = or i64 %79, -6149102341220990976
  store i64 %80, i64* %75, align 4
  %81 = load i8*, i8** %27, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  store i8* %82, i8** %27, align 8
  %83 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, 1
  store i32 %85, i32* %83, align 8
  %86 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 2
  %87 = load i16, i16* %86, align 2
  %88 = icmp ult i16 %87, %1
  %89 = select i1 %88, i16 %1, i16 %87
  store i16 %89, i16* %86, align 4
  br label %90

90:                                               ; preds = %6, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"*, i16 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i8 %2, %3
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 6
  %8 = load i8, i8* %7, align 8, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %63, label %10

10:                                               ; preds = %6, %4
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i64 1, i64* %11, align 8
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %18 = bitcast i8** %17 to i64*
  %19 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %18, align 8
  %22 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %21, %24
  %26 = inttoptr i64 %21 to i8*
  br i1 %25, label %27, label %30

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %28, i64 1) #11
  %29 = load i8*, i8** %17, align 8
  br label %30

30:                                               ; preds = %15, %27
  %31 = phi i8* [ %26, %15 ], [ %29, %27 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 -1
  store i8* %32, i8** %17, align 8
  store i8 %2, i8* %32, align 1
  %33 = load i64, i64* %16, align 8
  %34 = load i64, i64* %18, align 8
  %35 = load i64, i64* %20, align 8
  %36 = sub i64 %33, %34
  %37 = add i64 %36, %35
  %38 = load i64, i64* %23, align 8
  %39 = sub i64 %34, %38
  %40 = icmp ult i64 %39, 8
  br i1 %40, label %43, label %41

41:                                               ; preds = %30
  %42 = inttoptr i64 %38 to i64*
  br label %47

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %44, i64 8) #11
  %45 = bitcast i8** %22 to i64**
  %46 = load i64*, i64** %45, align 8
  br label %47

47:                                               ; preds = %41, %43
  %48 = phi i64* [ %42, %41 ], [ %46, %43 ]
  %49 = zext i16 %1 to i64
  %50 = shl nuw nsw i64 %49, 32
  %51 = and i64 %37, 4294967295
  %52 = or i64 %50, %51
  %53 = or i64 %52, -6149102341220990976
  store i64 %53, i64* %48, align 4
  %54 = load i8*, i8** %22, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 8
  store i8* %55, i8** %22, align 8
  %56 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  %59 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 2
  %60 = load i16, i16* %59, align 2
  %61 = icmp ult i16 %60, %1
  %62 = select i1 %61, i16 %1, i16 %60
  store i16 %62, i16* %59, align 4
  br label %63

63:                                               ; preds = %6, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions23declarative_net_request4flat16RegexRuleBuilder12add_url_ruleEN11flatbuffers6OffsetIN17url_pattern_index4flat7UrlRuleEEE(%"struct.extensions::declarative_net_request::flat::RegexRuleBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::RegexRuleBuilder", %"struct.extensions::declarative_net_request::flat::RegexRuleBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #11
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !54

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #11
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #11
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102324041121792
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 4
  %115 = select i1 %114, i16 %113, i16 4
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

declare void @_ZN3net21EscapeQueryParamValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.std::__1::basic_string"* sret, i8*, i64, i1 zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN10extensions23declarative_net_request4flat18CreateUrlTransformERN11flatbuffers17FlatBufferBuilderENS2_6OffsetINS2_6StringEEES7_bS7_bS7_bS7_NS5_INS2_6VectorIS7_EEEENS5_INS8_INS5_INS1_13QueryKeyValueEEEEEEEbS7_S7_S7_(%"class.flatbuffers::FlatBufferBuilder"* dereferenceable(96), i32, i32, i1 zeroext, i32, i1 zeroext, i32, i1 zeroext, i32, i32, i32, i1 zeroext, i32, i32, i32) local_unnamed_addr #2 comdat {
  %16 = alloca %"struct.extensions::declarative_net_request::flat::UrlTransformBuilder", align 8
  %17 = bitcast %"struct.extensions::declarative_net_request::flat::UrlTransformBuilder"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransformBuilder", %"struct.extensions::declarative_net_request::flat::UrlTransformBuilder"* %16, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransformBuilder", %"struct.extensions::declarative_net_request::flat::UrlTransformBuilder"* %16, i64 0, i32 1
  %20 = bitcast %"struct.extensions::declarative_net_request::flat::UrlTransformBuilder"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  store %"class.flatbuffers::FlatBufferBuilder"* %0, %"class.flatbuffers::FlatBufferBuilder"** %18, align 8
  %21 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 3
  store i8 1, i8* %21, align 2
  %22 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %23, %26
  %31 = add i64 %30, %29
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %19, align 8
  tail call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %0, i16 zeroext 30, i32 %14) #11
  tail call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %0, i16 zeroext 28, i32 %13) #11
  tail call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %0, i16 zeroext 26, i32 %12) #11
  call void @_ZN10extensions23declarative_net_request4flat19UrlTransformBuilder31add_add_or_replace_query_paramsEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_13QueryKeyValueEEEEEEE(%"struct.extensions::declarative_net_request::flat::UrlTransformBuilder"* nonnull %16, i32 %10)
  %33 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %18, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6VectorINS_6OffsetINS_6StringEEEEEEEvtNS3_IT_EE(%"class.flatbuffers::FlatBufferBuilder"* %33, i16 zeroext 20, i32 %9) #11
  %34 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %18, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %34, i16 zeroext 18, i32 %8) #11
  %35 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %18, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %35, i16 zeroext 14, i32 %6) #11
  %36 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %18, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %36, i16 zeroext 10, i32 %4) #11
  %37 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %18, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %37, i16 zeroext 6, i32 %2) #11
  %38 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %18, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetINS_6StringEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %38, i16 zeroext 4, i32 %1) #11
  %39 = zext i1 %11 to i8
  %40 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %18, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %40, i16 zeroext 24, i8 zeroext %39, i8 zeroext 0) #11
  %41 = zext i1 %7 to i8
  %42 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %18, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %42, i16 zeroext 16, i8 zeroext %41, i8 zeroext 0) #11
  %43 = zext i1 %5 to i8
  %44 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %18, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %44, i16 zeroext 12, i8 zeroext %43, i8 zeroext 0) #11
  %45 = zext i1 %3 to i8
  %46 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %18, align 8
  call void @_ZN11flatbuffers17FlatBufferBuilder10AddElementIhEEvtT_S2_(%"class.flatbuffers::FlatBufferBuilder"* %46, i16 zeroext 8, i8 zeroext %45, i8 zeroext 0) #11
  %47 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %18, align 8
  %48 = load i32, i32* %19, align 8
  %49 = call i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"* %47, i32 %48) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.156"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.156", %"class.std::__1::__tree.156"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.180"**
  %6 = load %"class.std::__1::__tree_node.180"*, %"class.std::__1::__tree_node.180"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.180"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.156", %"class.std::__1::__tree.156"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node.180"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.180", %"class.std::__1::__tree_node.180"* %23, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.180", %"class.std::__1::__tree_node.180"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.180", %"class.std::__1::__tree_node.180"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.180", %"class.std::__1::__tree_node.180"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #11
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.180", %"class.std::__1::__tree_node.180"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.180", %"class.std::__1::__tree_node.180"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.180", %"class.std::__1::__tree_node.180"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node.180"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementINS_6StringEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #11
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !55

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %8, align 8
  %75 = load i64, i64* %11, align 8
  %76 = load i64, i64* %14, align 8
  %77 = sub i64 %74, %75
  %78 = add i64 %77, %76
  %79 = trunc i64 %78 to i32
  %80 = sub i32 4, %1
  %81 = add i32 %80, %79
  %82 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %81)
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.156"*, %"class.std::__1::__tree_node.180"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.180"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.180"* %1 to %"class.std::__1::__tree_node.180"**
  %6 = load %"class.std::__1::__tree_node.180"*, %"class.std::__1::__tree_node.180"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.156"* %0, %"class.std::__1::__tree_node.180"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.180", %"class.std::__1::__tree_node.180"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.180"**
  %9 = load %"class.std::__1::__tree_node.180"*, %"class.std::__1::__tree_node.180"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.156"* %0, %"class.std::__1::__tree_node.180"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.180", %"class.std::__1::__tree_node.180"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.180"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN10extensions23declarative_net_request4flat13QueryKeyValueEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #11
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !56

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %8, align 8
  %75 = load i64, i64* %11, align 8
  %76 = load i64, i64* %14, align 8
  %77 = sub i64 %74, %75
  %78 = add i64 %77, %76
  %79 = trunc i64 %78 to i32
  %80 = sub i32 4, %1
  %81 = add i32 %80, %79
  %82 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %81)
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions23declarative_net_request4flat19UrlTransformBuilder31add_add_or_replace_query_paramsEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_13QueryKeyValueEEEEEEE(%"struct.extensions::declarative_net_request::flat::UrlTransformBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlTransformBuilder", %"struct.extensions::declarative_net_request::flat::UrlTransformBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #11
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !57

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #11
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #11
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102246731710464
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 22
  %115 = select i1 %114, i16 %113, i16 22
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN10extensions23declarative_net_request4flat16ModifyHeaderInfoEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #11
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !58

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %8, align 8
  %75 = load i64, i64* %11, align 8
  %76 = load i64, i64* %14, align 8
  %77 = sub i64 %74, %75
  %78 = add i64 %77, %76
  %79 = trunc i64 %78 to i32
  %80 = sub i32 4, %1
  %81 = add i32 %80, %79
  %82 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %81)
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions23declarative_net_request4flat22UrlRuleMetadataBuilder20add_response_headersEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_16ModifyHeaderInfoEEEEEEE(%"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #11
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !59

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #11
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #11
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102281091448832
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 14
  %115 = select i1 %114, i16 %113, i16 14
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions23declarative_net_request4flat22UrlRuleMetadataBuilder19add_request_headersEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_16ModifyHeaderInfoEEEEEEE(%"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #11
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !60

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #11
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #11
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102289681383424
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 12
  %115 = select i1 %114, i16 %113, i16 12
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions23declarative_net_request4flat22UrlRuleMetadataBuilder13add_transformEN11flatbuffers6OffsetINS1_12UrlTransformEEE(%"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadataBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #11
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !61

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #11
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #11
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102298271318016
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 10
  %115 = select i1 %114, i16 %113, i16 10
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions23declarative_net_request4flat30ExtensionIndexedRulesetBuilder22add_extension_metadataEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_15UrlRuleMetadataEEEEEEE(%"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder", %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #11
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !62

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #11
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #11
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102306861252608
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 8
  %115 = select i1 %114, i16 %113, i16 8
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions23declarative_net_request4flat30ExtensionIndexedRulesetBuilder15add_regex_rulesEN11flatbuffers6OffsetINS3_6VectorINS4_INS1_9RegexRuleEEEEEEE(%"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder", %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #11
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !63

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #11
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #11
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102315451187200
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 6
  %115 = select i1 %114, i16 %113, i16 6
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions23declarative_net_request4flat30ExtensionIndexedRulesetBuilder14add_index_listEN11flatbuffers6OffsetINS3_6VectorINS4_IN17url_pattern_index4flat15UrlPatternIndexEEEEEEE(%"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder", %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRulesetBuilder"* %0, i64 0, i32 0
  %4 = load %"class.flatbuffers::FlatBufferBuilder"*, %"class.flatbuffers::FlatBufferBuilder"** %3, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %116, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i64 4, i64* %7, align 8
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 6
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %13, %16
  %21 = add i64 %20, %19
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0, i32 7
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %16, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %29, label %34

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %30, i64 %23) #11
  %31 = load i8*, i8** %14, align 8
  %32 = sub nsw i64 0, %23
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %14, align 8
  br label %39

34:                                               ; preds = %11
  %35 = inttoptr i64 %16 to i8*
  %36 = sub nsw i64 0, %23
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %14, align 8
  %38 = icmp eq i64 %23, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %34, %29
  %40 = phi i8* [ %33, %29 ], [ %37, %34 ]
  store i8 0, i8* %40, align 1
  %41 = icmp eq i64 %23, 1
  br i1 %41, label %77, label %42

42:                                               ; preds = %39
  %43 = add nsw i64 %23, -1
  %44 = add nsw i64 %23, -2
  %45 = and i64 %43, 3
  %46 = icmp ult i64 %44, 3
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = sub nsw i64 %43, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 1, %47 ], [ %63, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %64, %49 ]
  %52 = load i8*, i8** %14, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  store i8 0, i8* %53, align 1
  %54 = add nuw nsw i64 %50, 1
  %55 = load i8*, i8** %14, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  store i8 0, i8* %56, align 1
  %57 = add nuw nsw i64 %50, 2
  %58 = load i8*, i8** %14, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  store i8 0, i8* %59, align 1
  %60 = add nuw i64 %50, 3
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  %63 = add nuw i64 %50, 4
  %64 = add i64 %51, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %49, %42
  %67 = phi i64 [ 1, %42 ], [ %63, %49 ]
  %68 = icmp eq i64 %45, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66, %69
  %70 = phi i64 [ %74, %69 ], [ %67, %66 ]
  %71 = phi i64 [ %75, %69 ], [ %45, %66 ]
  %72 = load i8*, i8** %14, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 %70
  store i8 0, i8* %73, align 1
  %74 = add nuw i64 %70, 1
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69, !llvm.loop !64

77:                                               ; preds = %66, %69, %34, %39
  %78 = load i64, i64* %12, align 8
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %18, align 8
  %81 = sub i64 %78, %79
  %82 = add i64 %81, %80
  %83 = trunc i64 %82 to i32
  %84 = sub i32 4, %1
  %85 = add i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 6
  %89 = load i8, i8* %88, align 8, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87, %77
  %92 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %4, i32 %85) #11
  %93 = load i64, i64* %15, align 8
  %94 = load i64, i64* %25, align 8
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %95, 8
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = inttoptr i64 %94 to i64*
  br label %103

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %100, i64 8) #11
  %101 = bitcast i8** %24 to i64**
  %102 = load i64*, i64** %101, align 8
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i64* [ %98, %97 ], [ %102, %99 ]
  %105 = zext i32 %92 to i64
  %106 = or i64 %105, -6149102324041121792
  store i64 %106, i64* %104, align 4
  %107 = load i8*, i8** %24, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  store i8* %108, i8** %24, align 8
  %109 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  %112 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %4, i64 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 4
  %115 = select i1 %114, i16 %113, i16 4
  store i16 %115, i16* %112, align 4
  br label %116

116:                                              ; preds = %103, %87, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN17url_pattern_index4flat15UrlPatternIndexEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #11
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !65

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %8, align 8
  %75 = load i64, i64* %11, align 8
  %76 = load i64, i64* %14, align 8
  %77 = sub i64 %74, %75
  %78 = add i64 %77, %76
  %79 = trunc i64 %78 to i32
  %80 = sub i32 4, %1
  %81 = add i32 %80, %79
  %82 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %81)
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN10extensions23declarative_net_request4flat9RegexRuleEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #11
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !66

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %8, align 8
  %75 = load i64, i64* %11, align 8
  %76 = load i64, i64* %14, align 8
  %77 = sub i64 %74, %75
  %78 = add i64 %77, %76
  %79 = trunc i64 %78 to i32
  %80 = sub i32 4, %1
  %81 = add i32 %80, %79
  %82 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %81)
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEvT0_SD_T_(%"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator", %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* %2, i64 0, i32 0
  br label %5

5:                                                ; preds = %618, %3
  %6 = phi %"struct.flatbuffers::Offset.35"* [ %1, %3 ], [ %546, %618 ]
  %7 = phi %"struct.flatbuffers::Offset.35"* [ %0, %3 ], [ %15, %618 ]
  %8 = ptrtoint %"struct.flatbuffers::Offset.35"* %6 to i64
  %9 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %6, i64 -1
  %10 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %9, i64 0, i32 0
  %11 = ptrtoint %"struct.flatbuffers::Offset.35"* %6 to i64
  br label %12

12:                                               ; preds = %627, %5
  %13 = phi %"struct.flatbuffers::Offset.35"* [ %7, %5 ], [ %628, %627 ]
  br label %14

14:                                               ; preds = %376, %12
  %15 = phi %"struct.flatbuffers::Offset.35"* [ %13, %12 ], [ %295, %376 ]
  %16 = ptrtoint %"struct.flatbuffers::Offset.35"* %15 to i64
  %17 = sub i64 %8, %16
  %18 = ashr exact i64 %17, 2
  switch i64 %18, label %95 [
    i64 0, label %631
    i64 1, label %631
    i64 2, label %19
    i64 3, label %80
    i64 4, label %84
    i64 5, label %89
  ]

19:                                               ; preds = %14
  %20 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %4, align 8
  %21 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %6, i64 -1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %20, i64 0, i32 5
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %20, i64 0, i32 4
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = sub nsw i64 0, %23
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = bitcast i8* %30 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %32 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %15, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = sub nsw i64 0, %34
  %36 = getelementptr inbounds i8, i8* %28, i64 %35
  %37 = bitcast i8* %36 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %38 = bitcast i8* %30 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = sub nsw i64 0, %40
  %42 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %31, i64 0, i32 0, i32 0, i64 %41
  %43 = bitcast i8* %42 to i16*
  %44 = load i16, i16* %43, align 2
  %45 = icmp ugt i16 %44, 4
  br i1 %45, label %46, label %56

46:                                               ; preds = %19
  %47 = getelementptr inbounds i8, i8* %42, i64 4
  %48 = bitcast i8* %47 to i16*
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = zext i16 %49 to i64
  %53 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %31, i64 0, i32 0, i32 0, i64 %52
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 4
  br label %56

56:                                               ; preds = %51, %46, %19
  %57 = phi i32 [ %55, %51 ], [ 0, %46 ], [ 0, %19 ]
  %58 = bitcast i8* %36 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = sub nsw i64 0, %60
  %62 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %37, i64 0, i32 0, i32 0, i64 %61
  %63 = bitcast i8* %62 to i16*
  %64 = load i16, i16* %63, align 2
  %65 = icmp ugt i16 %64, 4
  br i1 %65, label %66, label %76

66:                                               ; preds = %56
  %67 = getelementptr inbounds i8, i8* %62, i64 4
  %68 = bitcast i8* %67 to i16*
  %69 = load i16, i16* %68, align 2
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %66
  %72 = zext i16 %69 to i64
  %73 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %37, i64 0, i32 0, i32 0, i64 %72
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %74, align 4
  br label %76

76:                                               ; preds = %56, %66, %71
  %77 = phi i32 [ %75, %71 ], [ 0, %66 ], [ 0, %56 ]
  %78 = icmp ult i32 %57, %77
  br i1 %78, label %79, label %631

79:                                               ; preds = %76
  store i32 %22, i32* %32, align 4
  store i32 %33, i32* %21, align 4
  br label %631

80:                                               ; preds = %14
  %81 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %15, i64 1
  %82 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %6, i64 -1
  %83 = tail call i32 @_ZNSt3__17__sort3IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_T_(%"struct.flatbuffers::Offset.35"* %15, %"struct.flatbuffers::Offset.35"* %81, %"struct.flatbuffers::Offset.35"* %82, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  br label %631

84:                                               ; preds = %14
  %85 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %15, i64 1
  %86 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %15, i64 2
  %87 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %6, i64 -1
  %88 = tail call i32 @_ZNSt3__17__sort4IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_SD_T_(%"struct.flatbuffers::Offset.35"* %15, %"struct.flatbuffers::Offset.35"* %85, %"struct.flatbuffers::Offset.35"* %86, %"struct.flatbuffers::Offset.35"* %87, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  br label %631

89:                                               ; preds = %14
  %90 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %15, i64 1
  %91 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %15, i64 2
  %92 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %15, i64 3
  %93 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %6, i64 -1
  %94 = tail call i32 @_ZNSt3__17__sort5IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_SD_SD_T_(%"struct.flatbuffers::Offset.35"* %15, %"struct.flatbuffers::Offset.35"* %90, %"struct.flatbuffers::Offset.35"* %91, %"struct.flatbuffers::Offset.35"* %92, %"struct.flatbuffers::Offset.35"* %93, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  br label %631

95:                                               ; preds = %14
  %96 = icmp slt i64 %17, 124
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  tail call void @_ZNSt3__118__insertion_sort_3IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEvT0_SD_T_(%"struct.flatbuffers::Offset.35"* %15, %"struct.flatbuffers::Offset.35"* %6, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  br label %631

98:                                               ; preds = %95
  %99 = icmp sgt i64 %17, 3996
  %100 = sdiv i64 %18, 2
  %101 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %15, i64 %100
  br i1 %99, label %102, label %107

102:                                              ; preds = %98
  %103 = sdiv i64 %18, 4
  %104 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %15, i64 %103
  %105 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %101, i64 %103
  %106 = tail call i32 @_ZNSt3__17__sort5IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_SD_SD_T_(%"struct.flatbuffers::Offset.35"* %15, %"struct.flatbuffers::Offset.35"* %104, %"struct.flatbuffers::Offset.35"* %101, %"struct.flatbuffers::Offset.35"* %105, %"struct.flatbuffers::Offset.35"* %9, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  br label %109

107:                                              ; preds = %98
  %108 = tail call i32 @_ZNSt3__17__sort3IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_T_(%"struct.flatbuffers::Offset.35"* %15, %"struct.flatbuffers::Offset.35"* %101, %"struct.flatbuffers::Offset.35"* %9, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i32 [ %106, %102 ], [ %108, %107 ]
  %111 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %4, align 8
  %112 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %15, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %111, i64 0, i32 5
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %111, i64 0, i32 4
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds i8, i8* %116, i64 %118
  %120 = sub nsw i64 0, %114
  %121 = getelementptr inbounds i8, i8* %119, i64 %120
  %122 = bitcast i8* %121 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %123 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %101, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  %126 = sub nsw i64 0, %125
  %127 = getelementptr inbounds i8, i8* %119, i64 %126
  %128 = bitcast i8* %127 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %129 = bitcast i8* %121 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = sext i32 %130 to i64
  %132 = sub nsw i64 0, %131
  %133 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %122, i64 0, i32 0, i32 0, i64 %132
  %134 = bitcast i8* %133 to i16*
  %135 = load i16, i16* %134, align 2
  %136 = icmp ugt i16 %135, 4
  br i1 %136, label %137, label %147

137:                                              ; preds = %109
  %138 = getelementptr inbounds i8, i8* %133, i64 4
  %139 = bitcast i8* %138 to i16*
  %140 = load i16, i16* %139, align 2
  %141 = icmp eq i16 %140, 0
  br i1 %141, label %147, label %142

142:                                              ; preds = %137
  %143 = zext i16 %140 to i64
  %144 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %122, i64 0, i32 0, i32 0, i64 %143
  %145 = bitcast i8* %144 to i32*
  %146 = load i32, i32* %145, align 4
  br label %147

147:                                              ; preds = %142, %137, %109
  %148 = phi i32 [ %146, %142 ], [ 0, %137 ], [ 0, %109 ]
  %149 = bitcast i8* %127 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = sext i32 %150 to i64
  %152 = sub nsw i64 0, %151
  %153 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %128, i64 0, i32 0, i32 0, i64 %152
  %154 = bitcast i8* %153 to i16*
  %155 = load i16, i16* %154, align 2
  %156 = icmp ugt i16 %155, 4
  br i1 %156, label %157, label %167

157:                                              ; preds = %147
  %158 = getelementptr inbounds i8, i8* %153, i64 4
  %159 = bitcast i8* %158 to i16*
  %160 = load i16, i16* %159, align 2
  %161 = icmp eq i16 %160, 0
  br i1 %161, label %167, label %162

162:                                              ; preds = %157
  %163 = zext i16 %160 to i64
  %164 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %128, i64 0, i32 0, i32 0, i64 %163
  %165 = bitcast i8* %164 to i32*
  %166 = load i32, i32* %165, align 4
  br label %167

167:                                              ; preds = %147, %157, %162
  %168 = phi i32 [ %166, %162 ], [ 0, %157 ], [ 0, %147 ]
  %169 = icmp ult i32 %148, %168
  br i1 %169, label %421, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds i8, i8* %153, i64 4
  %172 = bitcast i8* %171 to i16*
  br label %173

173:                                              ; preds = %170, %415
  %174 = phi %"struct.flatbuffers::Offset.35"* [ %175, %415 ], [ %9, %170 ]
  %175 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %174, i64 -1
  %176 = icmp eq %"struct.flatbuffers::Offset.35"* %15, %175
  br i1 %176, label %177, label %380

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %15, i64 1
  %179 = load i32, i32* %10, align 4
  %180 = zext i32 %179 to i64
  %181 = sub nsw i64 0, %180
  %182 = getelementptr inbounds i8, i8* %119, i64 %181
  %183 = bitcast i8* %182 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  br i1 %136, label %184, label %194

184:                                              ; preds = %177
  %185 = getelementptr inbounds i8, i8* %133, i64 4
  %186 = bitcast i8* %185 to i16*
  %187 = load i16, i16* %186, align 2
  %188 = icmp eq i16 %187, 0
  br i1 %188, label %194, label %189

189:                                              ; preds = %184
  %190 = zext i16 %187 to i64
  %191 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %122, i64 0, i32 0, i32 0, i64 %190
  %192 = bitcast i8* %191 to i32*
  %193 = load i32, i32* %192, align 4
  br label %194

194:                                              ; preds = %189, %184, %177
  %195 = phi i32 [ %193, %189 ], [ 0, %184 ], [ 0, %177 ]
  %196 = bitcast i8* %182 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = sext i32 %197 to i64
  %199 = sub nsw i64 0, %198
  %200 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %183, i64 0, i32 0, i32 0, i64 %199
  %201 = bitcast i8* %200 to i16*
  %202 = load i16, i16* %201, align 2
  %203 = icmp ugt i16 %202, 4
  br i1 %203, label %204, label %214

204:                                              ; preds = %194
  %205 = getelementptr inbounds i8, i8* %200, i64 4
  %206 = bitcast i8* %205 to i16*
  %207 = load i16, i16* %206, align 2
  %208 = icmp eq i16 %207, 0
  br i1 %208, label %214, label %209

209:                                              ; preds = %204
  %210 = zext i16 %207 to i64
  %211 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %183, i64 0, i32 0, i32 0, i64 %210
  %212 = bitcast i8* %211 to i32*
  %213 = load i32, i32* %212, align 4
  br label %214

214:                                              ; preds = %194, %204, %209
  %215 = phi i32 [ %213, %209 ], [ 0, %204 ], [ 0, %194 ]
  %216 = icmp ult i32 %195, %215
  br i1 %216, label %267, label %217

217:                                              ; preds = %214
  %218 = icmp eq %"struct.flatbuffers::Offset.35"* %178, %9
  br i1 %218, label %631, label %219

219:                                              ; preds = %217
  %220 = getelementptr inbounds i8, i8* %133, i64 4
  %221 = bitcast i8* %220 to i16*
  br label %222

222:                                              ; preds = %219, %264
  %223 = phi %"struct.flatbuffers::Offset.35"* [ %178, %219 ], [ %265, %264 ]
  %224 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %223, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i64
  %227 = sub nsw i64 0, %226
  %228 = getelementptr inbounds i8, i8* %119, i64 %227
  %229 = bitcast i8* %228 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  br i1 %136, label %230, label %238

230:                                              ; preds = %222
  %231 = load i16, i16* %221, align 2
  %232 = icmp eq i16 %231, 0
  br i1 %232, label %238, label %233

233:                                              ; preds = %230
  %234 = zext i16 %231 to i64
  %235 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %122, i64 0, i32 0, i32 0, i64 %234
  %236 = bitcast i8* %235 to i32*
  %237 = load i32, i32* %236, align 4
  br label %238

238:                                              ; preds = %233, %230, %222
  %239 = phi i32 [ %237, %233 ], [ 0, %230 ], [ 0, %222 ]
  %240 = bitcast i8* %228 to i32*
  %241 = load i32, i32* %240, align 4
  %242 = sext i32 %241 to i64
  %243 = sub nsw i64 0, %242
  %244 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %229, i64 0, i32 0, i32 0, i64 %243
  %245 = bitcast i8* %244 to i16*
  %246 = load i16, i16* %245, align 2
  %247 = icmp ugt i16 %246, 4
  br i1 %247, label %248, label %258

248:                                              ; preds = %238
  %249 = getelementptr inbounds i8, i8* %244, i64 4
  %250 = bitcast i8* %249 to i16*
  %251 = load i16, i16* %250, align 2
  %252 = icmp eq i16 %251, 0
  br i1 %252, label %258, label %253

253:                                              ; preds = %248
  %254 = zext i16 %251 to i64
  %255 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %229, i64 0, i32 0, i32 0, i64 %254
  %256 = bitcast i8* %255 to i32*
  %257 = load i32, i32* %256, align 4
  br label %258

258:                                              ; preds = %238, %248, %253
  %259 = phi i32 [ %257, %253 ], [ 0, %248 ], [ 0, %238 ]
  %260 = icmp ult i32 %239, %259
  br i1 %260, label %261, label %264

261:                                              ; preds = %258
  %262 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %223, i64 0, i32 0
  store i32 %179, i32* %262, align 4
  store i32 %225, i32* %10, align 4
  %263 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %223, i64 1
  br label %267

264:                                              ; preds = %258
  %265 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %223, i64 1
  %266 = icmp eq %"struct.flatbuffers::Offset.35"* %265, %9
  br i1 %266, label %631, label %222

267:                                              ; preds = %261, %214
  %268 = phi %"struct.flatbuffers::Offset.35"* [ %178, %214 ], [ %263, %261 ]
  %269 = icmp eq %"struct.flatbuffers::Offset.35"* %268, %9
  br i1 %269, label %631, label %270

270:                                              ; preds = %267, %378
  %271 = phi %"struct.flatbuffers::Offset.35"* [ %333, %378 ], [ %268, %267 ]
  %272 = phi %"struct.flatbuffers::Offset.35"* [ %338, %378 ], [ %9, %267 ]
  %273 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %4, align 8
  %274 = load i32, i32* %112, align 4
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %273, i64 0, i32 5
  %277 = load i8*, i8** %276, align 8
  %278 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %273, i64 0, i32 4
  %279 = load i64, i64* %278, align 8
  %280 = getelementptr inbounds i8, i8* %277, i64 %279
  %281 = sub nsw i64 0, %275
  %282 = getelementptr inbounds i8, i8* %280, i64 %281
  %283 = bitcast i8* %282 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %284 = bitcast i8* %282 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = sext i32 %285 to i64
  %287 = sub nsw i64 0, %286
  %288 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %283, i64 0, i32 0, i32 0, i64 %287
  %289 = bitcast i8* %288 to i16*
  %290 = load i16, i16* %289, align 2
  %291 = icmp ugt i16 %290, 4
  %292 = getelementptr inbounds i8, i8* %288, i64 4
  %293 = bitcast i8* %292 to i16*
  br label %294

294:                                              ; preds = %330, %270
  %295 = phi %"struct.flatbuffers::Offset.35"* [ %271, %270 ], [ %333, %330 ]
  %296 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %295, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = zext i32 %297 to i64
  %299 = sub nsw i64 0, %298
  %300 = getelementptr inbounds i8, i8* %280, i64 %299
  %301 = bitcast i8* %300 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  br i1 %291, label %302, label %310

302:                                              ; preds = %294
  %303 = load i16, i16* %293, align 2
  %304 = icmp eq i16 %303, 0
  br i1 %304, label %310, label %305

305:                                              ; preds = %302
  %306 = zext i16 %303 to i64
  %307 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %283, i64 0, i32 0, i32 0, i64 %306
  %308 = bitcast i8* %307 to i32*
  %309 = load i32, i32* %308, align 4
  br label %310

310:                                              ; preds = %305, %302, %294
  %311 = phi i32 [ %309, %305 ], [ 0, %302 ], [ 0, %294 ]
  %312 = bitcast i8* %300 to i32*
  %313 = load i32, i32* %312, align 4
  %314 = sext i32 %313 to i64
  %315 = sub nsw i64 0, %314
  %316 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %301, i64 0, i32 0, i32 0, i64 %315
  %317 = bitcast i8* %316 to i16*
  %318 = load i16, i16* %317, align 2
  %319 = icmp ugt i16 %318, 4
  br i1 %319, label %320, label %330

320:                                              ; preds = %310
  %321 = getelementptr inbounds i8, i8* %316, i64 4
  %322 = bitcast i8* %321 to i16*
  %323 = load i16, i16* %322, align 2
  %324 = icmp eq i16 %323, 0
  br i1 %324, label %330, label %325

325:                                              ; preds = %320
  %326 = zext i16 %323 to i64
  %327 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %301, i64 0, i32 0, i32 0, i64 %326
  %328 = bitcast i8* %327 to i32*
  %329 = load i32, i32* %328, align 4
  br label %330

330:                                              ; preds = %310, %320, %325
  %331 = phi i32 [ %329, %325 ], [ 0, %320 ], [ 0, %310 ]
  %332 = icmp ult i32 %311, %331
  %333 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %295, i64 1
  br i1 %332, label %334, label %294

334:                                              ; preds = %330
  %335 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %295, i64 0, i32 0
  br label %336

336:                                              ; preds = %334, %373
  %337 = phi %"struct.flatbuffers::Offset.35"* [ %338, %373 ], [ %272, %334 ]
  %338 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %337, i64 -1
  %339 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %338, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = zext i32 %340 to i64
  %342 = sub nsw i64 0, %341
  %343 = getelementptr inbounds i8, i8* %280, i64 %342
  %344 = bitcast i8* %343 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  br i1 %291, label %345, label %353

345:                                              ; preds = %336
  %346 = load i16, i16* %293, align 2
  %347 = icmp eq i16 %346, 0
  br i1 %347, label %353, label %348

348:                                              ; preds = %345
  %349 = zext i16 %346 to i64
  %350 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %283, i64 0, i32 0, i32 0, i64 %349
  %351 = bitcast i8* %350 to i32*
  %352 = load i32, i32* %351, align 4
  br label %353

353:                                              ; preds = %348, %345, %336
  %354 = phi i32 [ %352, %348 ], [ 0, %345 ], [ 0, %336 ]
  %355 = bitcast i8* %343 to i32*
  %356 = load i32, i32* %355, align 4
  %357 = sext i32 %356 to i64
  %358 = sub nsw i64 0, %357
  %359 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %344, i64 0, i32 0, i32 0, i64 %358
  %360 = bitcast i8* %359 to i16*
  %361 = load i16, i16* %360, align 2
  %362 = icmp ugt i16 %361, 4
  br i1 %362, label %363, label %373

363:                                              ; preds = %353
  %364 = getelementptr inbounds i8, i8* %359, i64 4
  %365 = bitcast i8* %364 to i16*
  %366 = load i16, i16* %365, align 2
  %367 = icmp eq i16 %366, 0
  br i1 %367, label %373, label %368

368:                                              ; preds = %363
  %369 = zext i16 %366 to i64
  %370 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %344, i64 0, i32 0, i32 0, i64 %369
  %371 = bitcast i8* %370 to i32*
  %372 = load i32, i32* %371, align 4
  br label %373

373:                                              ; preds = %353, %363, %368
  %374 = phi i32 [ %372, %368 ], [ 0, %363 ], [ 0, %353 ]
  %375 = icmp ult i32 %354, %374
  br i1 %375, label %336, label %376

376:                                              ; preds = %373
  %377 = icmp ult %"struct.flatbuffers::Offset.35"* %295, %338
  br i1 %377, label %378, label %14

378:                                              ; preds = %376
  %379 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %338, i64 0, i32 0
  store i32 %340, i32* %335, align 4
  store i32 %297, i32* %379, align 4
  br label %270

380:                                              ; preds = %173
  %381 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %175, i64 0, i32 0
  %382 = load i32, i32* %381, align 4
  %383 = zext i32 %382 to i64
  %384 = sub nsw i64 0, %383
  %385 = getelementptr inbounds i8, i8* %119, i64 %384
  %386 = bitcast i8* %385 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %387 = bitcast i8* %385 to i32*
  %388 = load i32, i32* %387, align 4
  %389 = sext i32 %388 to i64
  %390 = sub nsw i64 0, %389
  %391 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %386, i64 0, i32 0, i32 0, i64 %390
  %392 = bitcast i8* %391 to i16*
  %393 = load i16, i16* %392, align 2
  %394 = icmp ugt i16 %393, 4
  br i1 %394, label %395, label %405

395:                                              ; preds = %380
  %396 = getelementptr inbounds i8, i8* %391, i64 4
  %397 = bitcast i8* %396 to i16*
  %398 = load i16, i16* %397, align 2
  %399 = icmp eq i16 %398, 0
  br i1 %399, label %405, label %400

400:                                              ; preds = %395
  %401 = zext i16 %398 to i64
  %402 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %386, i64 0, i32 0, i32 0, i64 %401
  %403 = bitcast i8* %402 to i32*
  %404 = load i32, i32* %403, align 4
  br label %405

405:                                              ; preds = %400, %395, %380
  %406 = phi i32 [ %404, %400 ], [ 0, %395 ], [ 0, %380 ]
  br i1 %156, label %407, label %415

407:                                              ; preds = %405
  %408 = load i16, i16* %172, align 2
  %409 = icmp eq i16 %408, 0
  br i1 %409, label %415, label %410

410:                                              ; preds = %407
  %411 = zext i16 %408 to i64
  %412 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %128, i64 0, i32 0, i32 0, i64 %411
  %413 = bitcast i8* %412 to i32*
  %414 = load i32, i32* %413, align 4
  br label %415

415:                                              ; preds = %405, %407, %410
  %416 = phi i32 [ %414, %410 ], [ 0, %407 ], [ 0, %405 ]
  %417 = icmp ult i32 %406, %416
  br i1 %417, label %418, label %173

418:                                              ; preds = %415
  %419 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %175, i64 0, i32 0
  store i32 %382, i32* %112, align 4
  store i32 %113, i32* %419, align 4
  %420 = add i32 %110, 1
  br label %421

421:                                              ; preds = %167, %418
  %422 = phi i32 [ %420, %418 ], [ %110, %167 ]
  %423 = phi %"struct.flatbuffers::Offset.35"* [ %175, %418 ], [ %9, %167 ]
  %424 = ptrtoint %"struct.flatbuffers::Offset.35"* %15 to i64
  %425 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %15, i64 1
  %426 = icmp ult %"struct.flatbuffers::Offset.35"* %425, %423
  br i1 %426, label %427, label %543

427:                                              ; preds = %421, %538
  %428 = phi %"struct.flatbuffers::Offset.35"* [ %542, %538 ], [ %101, %421 ]
  %429 = phi i32 [ %540, %538 ], [ %422, %421 ]
  %430 = phi %"struct.flatbuffers::Offset.35"* [ %493, %538 ], [ %425, %421 ]
  %431 = phi %"struct.flatbuffers::Offset.35"* [ %498, %538 ], [ %423, %421 ]
  %432 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %4, align 8
  %433 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %432, i64 0, i32 5
  %434 = load i8*, i8** %433, align 8
  %435 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %432, i64 0, i32 4
  %436 = load i64, i64* %435, align 8
  %437 = getelementptr inbounds i8, i8* %434, i64 %436
  %438 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %428, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  %440 = zext i32 %439 to i64
  %441 = sub nsw i64 0, %440
  %442 = getelementptr inbounds i8, i8* %437, i64 %441
  %443 = bitcast i8* %442 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %444 = bitcast i8* %442 to i32*
  %445 = load i32, i32* %444, align 4
  %446 = sext i32 %445 to i64
  %447 = sub nsw i64 0, %446
  %448 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %443, i64 0, i32 0, i32 0, i64 %447
  %449 = bitcast i8* %448 to i16*
  %450 = load i16, i16* %449, align 2
  %451 = icmp ugt i16 %450, 4
  %452 = getelementptr inbounds i8, i8* %448, i64 4
  %453 = bitcast i8* %452 to i16*
  br label %454

454:                                              ; preds = %490, %427
  %455 = phi %"struct.flatbuffers::Offset.35"* [ %430, %427 ], [ %493, %490 ]
  %456 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %455, i64 0, i32 0
  %457 = load i32, i32* %456, align 4
  %458 = zext i32 %457 to i64
  %459 = sub nsw i64 0, %458
  %460 = getelementptr inbounds i8, i8* %437, i64 %459
  %461 = bitcast i8* %460 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %462 = bitcast i8* %460 to i32*
  %463 = load i32, i32* %462, align 4
  %464 = sext i32 %463 to i64
  %465 = sub nsw i64 0, %464
  %466 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %461, i64 0, i32 0, i32 0, i64 %465
  %467 = bitcast i8* %466 to i16*
  %468 = load i16, i16* %467, align 2
  %469 = icmp ugt i16 %468, 4
  br i1 %469, label %470, label %480

470:                                              ; preds = %454
  %471 = getelementptr inbounds i8, i8* %466, i64 4
  %472 = bitcast i8* %471 to i16*
  %473 = load i16, i16* %472, align 2
  %474 = icmp eq i16 %473, 0
  br i1 %474, label %480, label %475

475:                                              ; preds = %470
  %476 = zext i16 %473 to i64
  %477 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %461, i64 0, i32 0, i32 0, i64 %476
  %478 = bitcast i8* %477 to i32*
  %479 = load i32, i32* %478, align 4
  br label %480

480:                                              ; preds = %475, %470, %454
  %481 = phi i32 [ %479, %475 ], [ 0, %470 ], [ 0, %454 ]
  br i1 %451, label %482, label %490

482:                                              ; preds = %480
  %483 = load i16, i16* %453, align 2
  %484 = icmp eq i16 %483, 0
  br i1 %484, label %490, label %485

485:                                              ; preds = %482
  %486 = zext i16 %483 to i64
  %487 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %443, i64 0, i32 0, i32 0, i64 %486
  %488 = bitcast i8* %487 to i32*
  %489 = load i32, i32* %488, align 4
  br label %490

490:                                              ; preds = %480, %482, %485
  %491 = phi i32 [ %489, %485 ], [ 0, %482 ], [ 0, %480 ]
  %492 = icmp ult i32 %481, %491
  %493 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %455, i64 1
  br i1 %492, label %454, label %494

494:                                              ; preds = %490
  %495 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %455, i64 0, i32 0
  br label %496

496:                                              ; preds = %494, %533
  %497 = phi %"struct.flatbuffers::Offset.35"* [ %498, %533 ], [ %431, %494 ]
  %498 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %497, i64 -1
  %499 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %498, i64 0, i32 0
  %500 = load i32, i32* %499, align 4
  %501 = zext i32 %500 to i64
  %502 = sub nsw i64 0, %501
  %503 = getelementptr inbounds i8, i8* %437, i64 %502
  %504 = bitcast i8* %503 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %505 = bitcast i8* %503 to i32*
  %506 = load i32, i32* %505, align 4
  %507 = sext i32 %506 to i64
  %508 = sub nsw i64 0, %507
  %509 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %504, i64 0, i32 0, i32 0, i64 %508
  %510 = bitcast i8* %509 to i16*
  %511 = load i16, i16* %510, align 2
  %512 = icmp ugt i16 %511, 4
  br i1 %512, label %513, label %523

513:                                              ; preds = %496
  %514 = getelementptr inbounds i8, i8* %509, i64 4
  %515 = bitcast i8* %514 to i16*
  %516 = load i16, i16* %515, align 2
  %517 = icmp eq i16 %516, 0
  br i1 %517, label %523, label %518

518:                                              ; preds = %513
  %519 = zext i16 %516 to i64
  %520 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %504, i64 0, i32 0, i32 0, i64 %519
  %521 = bitcast i8* %520 to i32*
  %522 = load i32, i32* %521, align 4
  br label %523

523:                                              ; preds = %518, %513, %496
  %524 = phi i32 [ %522, %518 ], [ 0, %513 ], [ 0, %496 ]
  br i1 %451, label %525, label %533

525:                                              ; preds = %523
  %526 = load i16, i16* %453, align 2
  %527 = icmp eq i16 %526, 0
  br i1 %527, label %533, label %528

528:                                              ; preds = %525
  %529 = zext i16 %526 to i64
  %530 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %443, i64 0, i32 0, i32 0, i64 %529
  %531 = bitcast i8* %530 to i32*
  %532 = load i32, i32* %531, align 4
  br label %533

533:                                              ; preds = %523, %525, %528
  %534 = phi i32 [ %532, %528 ], [ 0, %525 ], [ 0, %523 ]
  %535 = icmp ult i32 %524, %534
  br i1 %535, label %536, label %496

536:                                              ; preds = %533
  %537 = icmp ugt %"struct.flatbuffers::Offset.35"* %455, %498
  br i1 %537, label %543, label %538

538:                                              ; preds = %536
  %539 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %498, i64 0, i32 0
  store i32 %500, i32* %495, align 4
  store i32 %457, i32* %539, align 4
  %540 = add i32 %429, 1
  %541 = icmp eq %"struct.flatbuffers::Offset.35"* %428, %455
  %542 = select i1 %541, %"struct.flatbuffers::Offset.35"* %498, %"struct.flatbuffers::Offset.35"* %428
  br label %427

543:                                              ; preds = %536, %421
  %544 = phi %"struct.flatbuffers::Offset.35"* [ %101, %421 ], [ %428, %536 ]
  %545 = phi i32 [ %422, %421 ], [ %429, %536 ]
  %546 = phi %"struct.flatbuffers::Offset.35"* [ %425, %421 ], [ %455, %536 ]
  %547 = icmp eq %"struct.flatbuffers::Offset.35"* %546, %544
  br i1 %547, label %610, label %548

548:                                              ; preds = %543
  %549 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %4, align 8
  %550 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %544, i64 0, i32 0
  %551 = load i32, i32* %550, align 4
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %549, i64 0, i32 5
  %554 = load i8*, i8** %553, align 8
  %555 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %549, i64 0, i32 4
  %556 = load i64, i64* %555, align 8
  %557 = getelementptr inbounds i8, i8* %554, i64 %556
  %558 = sub nsw i64 0, %552
  %559 = getelementptr inbounds i8, i8* %557, i64 %558
  %560 = bitcast i8* %559 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %561 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %546, i64 0, i32 0
  %562 = load i32, i32* %561, align 4
  %563 = zext i32 %562 to i64
  %564 = sub nsw i64 0, %563
  %565 = getelementptr inbounds i8, i8* %557, i64 %564
  %566 = bitcast i8* %565 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %567 = bitcast i8* %559 to i32*
  %568 = load i32, i32* %567, align 4
  %569 = sext i32 %568 to i64
  %570 = sub nsw i64 0, %569
  %571 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %560, i64 0, i32 0, i32 0, i64 %570
  %572 = bitcast i8* %571 to i16*
  %573 = load i16, i16* %572, align 2
  %574 = icmp ugt i16 %573, 4
  br i1 %574, label %575, label %585

575:                                              ; preds = %548
  %576 = getelementptr inbounds i8, i8* %571, i64 4
  %577 = bitcast i8* %576 to i16*
  %578 = load i16, i16* %577, align 2
  %579 = icmp eq i16 %578, 0
  br i1 %579, label %585, label %580

580:                                              ; preds = %575
  %581 = zext i16 %578 to i64
  %582 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %560, i64 0, i32 0, i32 0, i64 %581
  %583 = bitcast i8* %582 to i32*
  %584 = load i32, i32* %583, align 4
  br label %585

585:                                              ; preds = %580, %575, %548
  %586 = phi i32 [ %584, %580 ], [ 0, %575 ], [ 0, %548 ]
  %587 = bitcast i8* %565 to i32*
  %588 = load i32, i32* %587, align 4
  %589 = sext i32 %588 to i64
  %590 = sub nsw i64 0, %589
  %591 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %566, i64 0, i32 0, i32 0, i64 %590
  %592 = bitcast i8* %591 to i16*
  %593 = load i16, i16* %592, align 2
  %594 = icmp ugt i16 %593, 4
  br i1 %594, label %595, label %605

595:                                              ; preds = %585
  %596 = getelementptr inbounds i8, i8* %591, i64 4
  %597 = bitcast i8* %596 to i16*
  %598 = load i16, i16* %597, align 2
  %599 = icmp eq i16 %598, 0
  br i1 %599, label %605, label %600

600:                                              ; preds = %595
  %601 = zext i16 %598 to i64
  %602 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %566, i64 0, i32 0, i32 0, i64 %601
  %603 = bitcast i8* %602 to i32*
  %604 = load i32, i32* %603, align 4
  br label %605

605:                                              ; preds = %585, %595, %600
  %606 = phi i32 [ %604, %600 ], [ 0, %595 ], [ 0, %585 ]
  %607 = icmp ult i32 %586, %606
  br i1 %607, label %608, label %610

608:                                              ; preds = %605
  store i32 %551, i32* %561, align 4
  store i32 %562, i32* %550, align 4
  %609 = add i32 %545, 1
  br label %610

610:                                              ; preds = %543, %608, %605
  %611 = phi i32 [ %609, %608 ], [ %545, %605 ], [ %545, %543 ]
  %612 = icmp eq i32 %611, 0
  br i1 %612, label %613, label %620

613:                                              ; preds = %610
  %614 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEbT0_SD_T_(%"struct.flatbuffers::Offset.35"* %15, %"struct.flatbuffers::Offset.35"* %546, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  %615 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %546, i64 1
  %616 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEbT0_SD_T_(%"struct.flatbuffers::Offset.35"* %615, %"struct.flatbuffers::Offset.35"* %6, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  br i1 %616, label %617, label %619

617:                                              ; preds = %613
  br i1 %614, label %631, label %618

618:                                              ; preds = %617, %629
  br label %5

619:                                              ; preds = %613
  br i1 %614, label %627, label %620

620:                                              ; preds = %619, %610
  %621 = ptrtoint %"struct.flatbuffers::Offset.35"* %546 to i64
  %622 = sub i64 %621, %424
  %623 = sub i64 %11, %621
  %624 = icmp slt i64 %622, %623
  br i1 %624, label %625, label %629

625:                                              ; preds = %620
  tail call void @_ZNSt3__16__sortIRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEvT0_SD_T_(%"struct.flatbuffers::Offset.35"* %15, %"struct.flatbuffers::Offset.35"* %546, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  %626 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %546, i64 1
  br label %627

627:                                              ; preds = %625, %619
  %628 = phi %"struct.flatbuffers::Offset.35"* [ %615, %619 ], [ %626, %625 ]
  br label %12

629:                                              ; preds = %620
  %630 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %546, i64 1
  tail call void @_ZNSt3__16__sortIRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEvT0_SD_T_(%"struct.flatbuffers::Offset.35"* %630, %"struct.flatbuffers::Offset.35"* %6, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  br label %618

631:                                              ; preds = %617, %267, %14, %14, %217, %264, %76, %79, %80, %84, %89, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_T_(%"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator", %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* %3, i64 0, i32 0
  %6 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %5, align 8
  %7 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %6, i64 0, i32 5
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %6, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = sub nsw i64 0, %9
  %16 = getelementptr inbounds i8, i8* %14, i64 %15
  %17 = bitcast i8* %16 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %18 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = sub nsw i64 0, %20
  %22 = getelementptr inbounds i8, i8* %14, i64 %21
  %23 = bitcast i8* %22 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %24 = bitcast i8* %16 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = sub nsw i64 0, %26
  %28 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %17, i64 0, i32 0, i32 0, i64 %27
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 2
  %31 = icmp ugt i16 %30, 4
  br i1 %31, label %32, label %42

32:                                               ; preds = %4
  %33 = getelementptr inbounds i8, i8* %28, i64 4
  %34 = bitcast i8* %33 to i16*
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %32
  %38 = zext i16 %35 to i64
  %39 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %17, i64 0, i32 0, i32 0, i64 %38
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 4
  br label %42

42:                                               ; preds = %37, %32, %4
  %43 = phi i32 [ %41, %37 ], [ 0, %32 ], [ 0, %4 ]
  %44 = bitcast i8* %22 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = sub nsw i64 0, %46
  %48 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %23, i64 0, i32 0, i32 0, i64 %47
  %49 = bitcast i8* %48 to i16*
  %50 = load i16, i16* %49, align 2
  %51 = icmp ugt i16 %50, 4
  br i1 %51, label %52, label %62

52:                                               ; preds = %42
  %53 = getelementptr inbounds i8, i8* %48, i64 4
  %54 = bitcast i8* %53 to i16*
  %55 = load i16, i16* %54, align 2
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %52
  %58 = zext i16 %55 to i64
  %59 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %23, i64 0, i32 0, i32 0, i64 %58
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %60, align 4
  br label %62

62:                                               ; preds = %42, %52, %57
  %63 = phi i32 [ %61, %57 ], [ 0, %52 ], [ 0, %42 ]
  %64 = icmp ult i32 %43, %63
  %65 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %2, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds i8, i8* %14, i64 %68
  %70 = bitcast i8* %69 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %71 = bitcast i8* %69 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = sext i32 %72 to i64
  %74 = sub nsw i64 0, %73
  %75 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %70, i64 0, i32 0, i32 0, i64 %74
  %76 = bitcast i8* %75 to i16*
  %77 = load i16, i16* %76, align 2
  %78 = icmp ugt i16 %77, 4
  br i1 %78, label %79, label %89

79:                                               ; preds = %62
  %80 = getelementptr inbounds i8, i8* %75, i64 4
  %81 = bitcast i8* %80 to i16*
  %82 = load i16, i16* %81, align 2
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %89, label %84

84:                                               ; preds = %79
  %85 = zext i16 %82 to i64
  %86 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %70, i64 0, i32 0, i32 0, i64 %85
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 4
  br label %89

89:                                               ; preds = %84, %79, %62
  %90 = phi i32 [ %88, %84 ], [ 0, %79 ], [ 0, %62 ]
  br i1 %31, label %91, label %101

91:                                               ; preds = %89
  %92 = getelementptr inbounds i8, i8* %28, i64 4
  %93 = bitcast i8* %92 to i16*
  %94 = load i16, i16* %93, align 2
  %95 = icmp eq i16 %94, 0
  br i1 %95, label %101, label %96

96:                                               ; preds = %91
  %97 = zext i16 %94 to i64
  %98 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %17, i64 0, i32 0, i32 0, i64 %97
  %99 = bitcast i8* %98 to i32*
  %100 = load i32, i32* %99, align 4
  br label %101

101:                                              ; preds = %89, %91, %96
  %102 = phi i32 [ %100, %96 ], [ 0, %91 ], [ 0, %89 ]
  %103 = icmp ult i32 %90, %102
  br i1 %64, label %164, label %104

104:                                              ; preds = %101
  br i1 %103, label %105, label %222

105:                                              ; preds = %104
  store i32 %66, i32* %7, align 4
  store i32 %8, i32* %65, align 4
  %106 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %5, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %106, i64 0, i32 5
  %110 = load i8*, i8** %109, align 8
  %111 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %106, i64 0, i32 4
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds i8, i8* %110, i64 %112
  %114 = sub nsw i64 0, %108
  %115 = getelementptr inbounds i8, i8* %113, i64 %114
  %116 = bitcast i8* %115 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %117 = load i32, i32* %18, align 4
  %118 = zext i32 %117 to i64
  %119 = sub nsw i64 0, %118
  %120 = getelementptr inbounds i8, i8* %113, i64 %119
  %121 = bitcast i8* %120 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %122 = bitcast i8* %115 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = sext i32 %123 to i64
  %125 = sub nsw i64 0, %124
  %126 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %116, i64 0, i32 0, i32 0, i64 %125
  %127 = bitcast i8* %126 to i16*
  %128 = load i16, i16* %127, align 2
  %129 = icmp ugt i16 %128, 4
  br i1 %129, label %130, label %140

130:                                              ; preds = %105
  %131 = getelementptr inbounds i8, i8* %126, i64 4
  %132 = bitcast i8* %131 to i16*
  %133 = load i16, i16* %132, align 2
  %134 = icmp eq i16 %133, 0
  br i1 %134, label %140, label %135

135:                                              ; preds = %130
  %136 = zext i16 %133 to i64
  %137 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %116, i64 0, i32 0, i32 0, i64 %136
  %138 = bitcast i8* %137 to i32*
  %139 = load i32, i32* %138, align 4
  br label %140

140:                                              ; preds = %135, %130, %105
  %141 = phi i32 [ %139, %135 ], [ 0, %130 ], [ 0, %105 ]
  %142 = bitcast i8* %120 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = sext i32 %143 to i64
  %145 = sub nsw i64 0, %144
  %146 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %121, i64 0, i32 0, i32 0, i64 %145
  %147 = bitcast i8* %146 to i16*
  %148 = load i16, i16* %147, align 2
  %149 = icmp ugt i16 %148, 4
  br i1 %149, label %150, label %160

150:                                              ; preds = %140
  %151 = getelementptr inbounds i8, i8* %146, i64 4
  %152 = bitcast i8* %151 to i16*
  %153 = load i16, i16* %152, align 2
  %154 = icmp eq i16 %153, 0
  br i1 %154, label %160, label %155

155:                                              ; preds = %150
  %156 = zext i16 %153 to i64
  %157 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %121, i64 0, i32 0, i32 0, i64 %156
  %158 = bitcast i8* %157 to i32*
  %159 = load i32, i32* %158, align 4
  br label %160

160:                                              ; preds = %140, %150, %155
  %161 = phi i32 [ %159, %155 ], [ 0, %150 ], [ 0, %140 ]
  %162 = icmp ult i32 %141, %161
  br i1 %162, label %163, label %222

163:                                              ; preds = %160
  store i32 %107, i32* %18, align 4
  store i32 %117, i32* %7, align 4
  br label %222

164:                                              ; preds = %101
  br i1 %103, label %165, label %166

165:                                              ; preds = %164
  store i32 %66, i32* %18, align 4
  store i32 %19, i32* %65, align 4
  br label %222

166:                                              ; preds = %164
  store i32 %8, i32* %18, align 4
  store i32 %19, i32* %7, align 4
  %167 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %5, align 8
  %168 = load i32, i32* %65, align 4
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %167, i64 0, i32 5
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %167, i64 0, i32 4
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds i8, i8* %171, i64 %173
  %175 = sub nsw i64 0, %169
  %176 = getelementptr inbounds i8, i8* %174, i64 %175
  %177 = bitcast i8* %176 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %178 = getelementptr inbounds i8, i8* %174, i64 %21
  %179 = bitcast i8* %178 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %180 = bitcast i8* %176 to i32*
  %181 = load i32, i32* %180, align 4
  %182 = sext i32 %181 to i64
  %183 = sub nsw i64 0, %182
  %184 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %177, i64 0, i32 0, i32 0, i64 %183
  %185 = bitcast i8* %184 to i16*
  %186 = load i16, i16* %185, align 2
  %187 = icmp ugt i16 %186, 4
  br i1 %187, label %188, label %198

188:                                              ; preds = %166
  %189 = getelementptr inbounds i8, i8* %184, i64 4
  %190 = bitcast i8* %189 to i16*
  %191 = load i16, i16* %190, align 2
  %192 = icmp eq i16 %191, 0
  br i1 %192, label %198, label %193

193:                                              ; preds = %188
  %194 = zext i16 %191 to i64
  %195 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %177, i64 0, i32 0, i32 0, i64 %194
  %196 = bitcast i8* %195 to i32*
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %193, %188, %166
  %199 = phi i32 [ %197, %193 ], [ 0, %188 ], [ 0, %166 ]
  %200 = bitcast i8* %178 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = sub nsw i64 0, %202
  %204 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %179, i64 0, i32 0, i32 0, i64 %203
  %205 = bitcast i8* %204 to i16*
  %206 = load i16, i16* %205, align 2
  %207 = icmp ugt i16 %206, 4
  br i1 %207, label %208, label %218

208:                                              ; preds = %198
  %209 = getelementptr inbounds i8, i8* %204, i64 4
  %210 = bitcast i8* %209 to i16*
  %211 = load i16, i16* %210, align 2
  %212 = icmp eq i16 %211, 0
  br i1 %212, label %218, label %213

213:                                              ; preds = %208
  %214 = zext i16 %211 to i64
  %215 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %179, i64 0, i32 0, i32 0, i64 %214
  %216 = bitcast i8* %215 to i32*
  %217 = load i32, i32* %216, align 4
  br label %218

218:                                              ; preds = %198, %208, %213
  %219 = phi i32 [ %217, %213 ], [ 0, %208 ], [ 0, %198 ]
  %220 = icmp ult i32 %199, %219
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  store i32 %168, i32* %7, align 4
  store i32 %19, i32* %65, align 4
  br label %222

222:                                              ; preds = %218, %221, %160, %163, %104, %165
  %223 = phi i32 [ 1, %165 ], [ 0, %104 ], [ 2, %163 ], [ 1, %160 ], [ 2, %221 ], [ 1, %218 ]
  ret i32 %223
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_SD_T_(%"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_T_(%"struct.flatbuffers::Offset.35"* %0, %"struct.flatbuffers::Offset.35"* %1, %"struct.flatbuffers::Offset.35"* %2, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %4)
  %7 = getelementptr inbounds %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator", %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* %4, i64 0, i32 0
  %8 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %7, align 8
  %9 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %3, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %8, i64 0, i32 5
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %8, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 %15
  %17 = sub nsw i64 0, %11
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  %19 = bitcast i8* %18 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %20 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %2, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = sub nsw i64 0, %22
  %24 = getelementptr inbounds i8, i8* %16, i64 %23
  %25 = bitcast i8* %24 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %26 = bitcast i8* %18 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %19, i64 0, i32 0, i32 0, i64 %29
  %31 = bitcast i8* %30 to i16*
  %32 = load i16, i16* %31, align 2
  %33 = icmp ugt i16 %32, 4
  br i1 %33, label %34, label %44

34:                                               ; preds = %5
  %35 = getelementptr inbounds i8, i8* %30, i64 4
  %36 = bitcast i8* %35 to i16*
  %37 = load i16, i16* %36, align 2
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %34
  %40 = zext i16 %37 to i64
  %41 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %19, i64 0, i32 0, i32 0, i64 %40
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 4
  br label %44

44:                                               ; preds = %39, %34, %5
  %45 = phi i32 [ %43, %39 ], [ 0, %34 ], [ 0, %5 ]
  %46 = bitcast i8* %24 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = sub nsw i64 0, %48
  %50 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %25, i64 0, i32 0, i32 0, i64 %49
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = icmp ugt i16 %52, 4
  br i1 %53, label %54, label %64

54:                                               ; preds = %44
  %55 = getelementptr inbounds i8, i8* %50, i64 4
  %56 = bitcast i8* %55 to i16*
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = zext i16 %57 to i64
  %61 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %25, i64 0, i32 0, i32 0, i64 %60
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 4
  br label %64

64:                                               ; preds = %44, %54, %59
  %65 = phi i32 [ %63, %59 ], [ 0, %54 ], [ 0, %44 ]
  %66 = icmp ult i32 %45, %65
  br i1 %66, label %67, label %189

67:                                               ; preds = %64
  store i32 %10, i32* %20, align 4
  store i32 %21, i32* %9, align 4
  %68 = add i32 %6, 1
  %69 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %7, align 8
  %70 = load i32, i32* %20, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %69, i64 0, i32 5
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %69, i64 0, i32 4
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds i8, i8* %73, i64 %75
  %77 = sub nsw i64 0, %71
  %78 = getelementptr inbounds i8, i8* %76, i64 %77
  %79 = bitcast i8* %78 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %80 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = sub nsw i64 0, %82
  %84 = getelementptr inbounds i8, i8* %76, i64 %83
  %85 = bitcast i8* %84 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %86 = bitcast i8* %78 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = sub nsw i64 0, %88
  %90 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %79, i64 0, i32 0, i32 0, i64 %89
  %91 = bitcast i8* %90 to i16*
  %92 = load i16, i16* %91, align 2
  %93 = icmp ugt i16 %92, 4
  br i1 %93, label %94, label %104

94:                                               ; preds = %67
  %95 = getelementptr inbounds i8, i8* %90, i64 4
  %96 = bitcast i8* %95 to i16*
  %97 = load i16, i16* %96, align 2
  %98 = icmp eq i16 %97, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %94
  %100 = zext i16 %97 to i64
  %101 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %79, i64 0, i32 0, i32 0, i64 %100
  %102 = bitcast i8* %101 to i32*
  %103 = load i32, i32* %102, align 4
  br label %104

104:                                              ; preds = %99, %94, %67
  %105 = phi i32 [ %103, %99 ], [ 0, %94 ], [ 0, %67 ]
  %106 = bitcast i8* %84 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = sext i32 %107 to i64
  %109 = sub nsw i64 0, %108
  %110 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %85, i64 0, i32 0, i32 0, i64 %109
  %111 = bitcast i8* %110 to i16*
  %112 = load i16, i16* %111, align 2
  %113 = icmp ugt i16 %112, 4
  br i1 %113, label %114, label %124

114:                                              ; preds = %104
  %115 = getelementptr inbounds i8, i8* %110, i64 4
  %116 = bitcast i8* %115 to i16*
  %117 = load i16, i16* %116, align 2
  %118 = icmp eq i16 %117, 0
  br i1 %118, label %124, label %119

119:                                              ; preds = %114
  %120 = zext i16 %117 to i64
  %121 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %85, i64 0, i32 0, i32 0, i64 %120
  %122 = bitcast i8* %121 to i32*
  %123 = load i32, i32* %122, align 4
  br label %124

124:                                              ; preds = %104, %114, %119
  %125 = phi i32 [ %123, %119 ], [ 0, %114 ], [ 0, %104 ]
  %126 = icmp ult i32 %105, %125
  br i1 %126, label %127, label %189

127:                                              ; preds = %124
  store i32 %70, i32* %80, align 4
  store i32 %81, i32* %20, align 4
  %128 = add i32 %6, 2
  %129 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %7, align 8
  %130 = load i32, i32* %80, align 4
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %129, i64 0, i32 5
  %133 = load i8*, i8** %132, align 8
  %134 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %129, i64 0, i32 4
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds i8, i8* %133, i64 %135
  %137 = sub nsw i64 0, %131
  %138 = getelementptr inbounds i8, i8* %136, i64 %137
  %139 = bitcast i8* %138 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %140 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = sub nsw i64 0, %142
  %144 = getelementptr inbounds i8, i8* %136, i64 %143
  %145 = bitcast i8* %144 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %146 = bitcast i8* %138 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = sext i32 %147 to i64
  %149 = sub nsw i64 0, %148
  %150 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %139, i64 0, i32 0, i32 0, i64 %149
  %151 = bitcast i8* %150 to i16*
  %152 = load i16, i16* %151, align 2
  %153 = icmp ugt i16 %152, 4
  br i1 %153, label %154, label %164

154:                                              ; preds = %127
  %155 = getelementptr inbounds i8, i8* %150, i64 4
  %156 = bitcast i8* %155 to i16*
  %157 = load i16, i16* %156, align 2
  %158 = icmp eq i16 %157, 0
  br i1 %158, label %164, label %159

159:                                              ; preds = %154
  %160 = zext i16 %157 to i64
  %161 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %139, i64 0, i32 0, i32 0, i64 %160
  %162 = bitcast i8* %161 to i32*
  %163 = load i32, i32* %162, align 4
  br label %164

164:                                              ; preds = %159, %154, %127
  %165 = phi i32 [ %163, %159 ], [ 0, %154 ], [ 0, %127 ]
  %166 = bitcast i8* %144 to i32*
  %167 = load i32, i32* %166, align 4
  %168 = sext i32 %167 to i64
  %169 = sub nsw i64 0, %168
  %170 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %145, i64 0, i32 0, i32 0, i64 %169
  %171 = bitcast i8* %170 to i16*
  %172 = load i16, i16* %171, align 2
  %173 = icmp ugt i16 %172, 4
  br i1 %173, label %174, label %184

174:                                              ; preds = %164
  %175 = getelementptr inbounds i8, i8* %170, i64 4
  %176 = bitcast i8* %175 to i16*
  %177 = load i16, i16* %176, align 2
  %178 = icmp eq i16 %177, 0
  br i1 %178, label %184, label %179

179:                                              ; preds = %174
  %180 = zext i16 %177 to i64
  %181 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %145, i64 0, i32 0, i32 0, i64 %180
  %182 = bitcast i8* %181 to i32*
  %183 = load i32, i32* %182, align 4
  br label %184

184:                                              ; preds = %164, %174, %179
  %185 = phi i32 [ %183, %179 ], [ 0, %174 ], [ 0, %164 ]
  %186 = icmp ult i32 %165, %185
  br i1 %186, label %187, label %189

187:                                              ; preds = %184
  store i32 %130, i32* %140, align 4
  store i32 %141, i32* %80, align 4
  %188 = add i32 %6, 3
  br label %189

189:                                              ; preds = %124, %187, %184, %64
  %190 = phi i32 [ %188, %187 ], [ %128, %184 ], [ %68, %124 ], [ %6, %64 ]
  ret i32 %190
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_SD_SD_T_(%"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_SD_T_(%"struct.flatbuffers::Offset.35"* %0, %"struct.flatbuffers::Offset.35"* %1, %"struct.flatbuffers::Offset.35"* %2, %"struct.flatbuffers::Offset.35"* %3, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %5)
  %8 = getelementptr inbounds %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator", %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* %5, i64 0, i32 0
  %9 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %8, align 8
  %10 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %4, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %9, i64 0, i32 5
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %9, i64 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = sub nsw i64 0, %12
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %21 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %3, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = sub nsw i64 0, %23
  %25 = getelementptr inbounds i8, i8* %17, i64 %24
  %26 = bitcast i8* %25 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %27 = bitcast i8* %19 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = sub nsw i64 0, %29
  %31 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %20, i64 0, i32 0, i32 0, i64 %30
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = icmp ugt i16 %33, 4
  br i1 %34, label %35, label %45

35:                                               ; preds = %6
  %36 = getelementptr inbounds i8, i8* %31, i64 4
  %37 = bitcast i8* %36 to i16*
  %38 = load i16, i16* %37, align 2
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = zext i16 %38 to i64
  %42 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %20, i64 0, i32 0, i32 0, i64 %41
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 4
  br label %45

45:                                               ; preds = %40, %35, %6
  %46 = phi i32 [ %44, %40 ], [ 0, %35 ], [ 0, %6 ]
  %47 = bitcast i8* %25 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = sub nsw i64 0, %49
  %51 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %26, i64 0, i32 0, i32 0, i64 %50
  %52 = bitcast i8* %51 to i16*
  %53 = load i16, i16* %52, align 2
  %54 = icmp ugt i16 %53, 4
  br i1 %54, label %55, label %65

55:                                               ; preds = %45
  %56 = getelementptr inbounds i8, i8* %51, i64 4
  %57 = bitcast i8* %56 to i16*
  %58 = load i16, i16* %57, align 2
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = zext i16 %58 to i64
  %62 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %26, i64 0, i32 0, i32 0, i64 %61
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 4
  br label %65

65:                                               ; preds = %45, %55, %60
  %66 = phi i32 [ %64, %60 ], [ 0, %55 ], [ 0, %45 ]
  %67 = icmp ult i32 %46, %66
  br i1 %67, label %68, label %250

68:                                               ; preds = %65
  store i32 %11, i32* %21, align 4
  store i32 %22, i32* %10, align 4
  %69 = add i32 %7, 1
  %70 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %8, align 8
  %71 = load i32, i32* %21, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %70, i64 0, i32 5
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %70, i64 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  %78 = sub nsw i64 0, %72
  %79 = getelementptr inbounds i8, i8* %77, i64 %78
  %80 = bitcast i8* %79 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %81 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %2, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = sub nsw i64 0, %83
  %85 = getelementptr inbounds i8, i8* %77, i64 %84
  %86 = bitcast i8* %85 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %87 = bitcast i8* %79 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = sub nsw i64 0, %89
  %91 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %80, i64 0, i32 0, i32 0, i64 %90
  %92 = bitcast i8* %91 to i16*
  %93 = load i16, i16* %92, align 2
  %94 = icmp ugt i16 %93, 4
  br i1 %94, label %95, label %105

95:                                               ; preds = %68
  %96 = getelementptr inbounds i8, i8* %91, i64 4
  %97 = bitcast i8* %96 to i16*
  %98 = load i16, i16* %97, align 2
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %95
  %101 = zext i16 %98 to i64
  %102 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %80, i64 0, i32 0, i32 0, i64 %101
  %103 = bitcast i8* %102 to i32*
  %104 = load i32, i32* %103, align 4
  br label %105

105:                                              ; preds = %100, %95, %68
  %106 = phi i32 [ %104, %100 ], [ 0, %95 ], [ 0, %68 ]
  %107 = bitcast i8* %85 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = sext i32 %108 to i64
  %110 = sub nsw i64 0, %109
  %111 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %86, i64 0, i32 0, i32 0, i64 %110
  %112 = bitcast i8* %111 to i16*
  %113 = load i16, i16* %112, align 2
  %114 = icmp ugt i16 %113, 4
  br i1 %114, label %115, label %125

115:                                              ; preds = %105
  %116 = getelementptr inbounds i8, i8* %111, i64 4
  %117 = bitcast i8* %116 to i16*
  %118 = load i16, i16* %117, align 2
  %119 = icmp eq i16 %118, 0
  br i1 %119, label %125, label %120

120:                                              ; preds = %115
  %121 = zext i16 %118 to i64
  %122 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %86, i64 0, i32 0, i32 0, i64 %121
  %123 = bitcast i8* %122 to i32*
  %124 = load i32, i32* %123, align 4
  br label %125

125:                                              ; preds = %105, %115, %120
  %126 = phi i32 [ %124, %120 ], [ 0, %115 ], [ 0, %105 ]
  %127 = icmp ult i32 %106, %126
  br i1 %127, label %128, label %250

128:                                              ; preds = %125
  store i32 %71, i32* %81, align 4
  store i32 %82, i32* %21, align 4
  %129 = add i32 %7, 2
  %130 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %8, align 8
  %131 = load i32, i32* %81, align 4
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %130, i64 0, i32 5
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %130, i64 0, i32 4
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds i8, i8* %134, i64 %136
  %138 = sub nsw i64 0, %132
  %139 = getelementptr inbounds i8, i8* %137, i64 %138
  %140 = bitcast i8* %139 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %141 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i64
  %144 = sub nsw i64 0, %143
  %145 = getelementptr inbounds i8, i8* %137, i64 %144
  %146 = bitcast i8* %145 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %147 = bitcast i8* %139 to i32*
  %148 = load i32, i32* %147, align 4
  %149 = sext i32 %148 to i64
  %150 = sub nsw i64 0, %149
  %151 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %140, i64 0, i32 0, i32 0, i64 %150
  %152 = bitcast i8* %151 to i16*
  %153 = load i16, i16* %152, align 2
  %154 = icmp ugt i16 %153, 4
  br i1 %154, label %155, label %165

155:                                              ; preds = %128
  %156 = getelementptr inbounds i8, i8* %151, i64 4
  %157 = bitcast i8* %156 to i16*
  %158 = load i16, i16* %157, align 2
  %159 = icmp eq i16 %158, 0
  br i1 %159, label %165, label %160

160:                                              ; preds = %155
  %161 = zext i16 %158 to i64
  %162 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %140, i64 0, i32 0, i32 0, i64 %161
  %163 = bitcast i8* %162 to i32*
  %164 = load i32, i32* %163, align 4
  br label %165

165:                                              ; preds = %160, %155, %128
  %166 = phi i32 [ %164, %160 ], [ 0, %155 ], [ 0, %128 ]
  %167 = bitcast i8* %145 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = sext i32 %168 to i64
  %170 = sub nsw i64 0, %169
  %171 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %146, i64 0, i32 0, i32 0, i64 %170
  %172 = bitcast i8* %171 to i16*
  %173 = load i16, i16* %172, align 2
  %174 = icmp ugt i16 %173, 4
  br i1 %174, label %175, label %185

175:                                              ; preds = %165
  %176 = getelementptr inbounds i8, i8* %171, i64 4
  %177 = bitcast i8* %176 to i16*
  %178 = load i16, i16* %177, align 2
  %179 = icmp eq i16 %178, 0
  br i1 %179, label %185, label %180

180:                                              ; preds = %175
  %181 = zext i16 %178 to i64
  %182 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %146, i64 0, i32 0, i32 0, i64 %181
  %183 = bitcast i8* %182 to i32*
  %184 = load i32, i32* %183, align 4
  br label %185

185:                                              ; preds = %165, %175, %180
  %186 = phi i32 [ %184, %180 ], [ 0, %175 ], [ 0, %165 ]
  %187 = icmp ult i32 %166, %186
  br i1 %187, label %188, label %250

188:                                              ; preds = %185
  store i32 %131, i32* %141, align 4
  store i32 %142, i32* %81, align 4
  %189 = add i32 %7, 3
  %190 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %8, align 8
  %191 = load i32, i32* %141, align 4
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %190, i64 0, i32 5
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %190, i64 0, i32 4
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds i8, i8* %194, i64 %196
  %198 = sub nsw i64 0, %192
  %199 = getelementptr inbounds i8, i8* %197, i64 %198
  %200 = bitcast i8* %199 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %201 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = zext i32 %202 to i64
  %204 = sub nsw i64 0, %203
  %205 = getelementptr inbounds i8, i8* %197, i64 %204
  %206 = bitcast i8* %205 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %207 = bitcast i8* %199 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = sext i32 %208 to i64
  %210 = sub nsw i64 0, %209
  %211 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %200, i64 0, i32 0, i32 0, i64 %210
  %212 = bitcast i8* %211 to i16*
  %213 = load i16, i16* %212, align 2
  %214 = icmp ugt i16 %213, 4
  br i1 %214, label %215, label %225

215:                                              ; preds = %188
  %216 = getelementptr inbounds i8, i8* %211, i64 4
  %217 = bitcast i8* %216 to i16*
  %218 = load i16, i16* %217, align 2
  %219 = icmp eq i16 %218, 0
  br i1 %219, label %225, label %220

220:                                              ; preds = %215
  %221 = zext i16 %218 to i64
  %222 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %200, i64 0, i32 0, i32 0, i64 %221
  %223 = bitcast i8* %222 to i32*
  %224 = load i32, i32* %223, align 4
  br label %225

225:                                              ; preds = %220, %215, %188
  %226 = phi i32 [ %224, %220 ], [ 0, %215 ], [ 0, %188 ]
  %227 = bitcast i8* %205 to i32*
  %228 = load i32, i32* %227, align 4
  %229 = sext i32 %228 to i64
  %230 = sub nsw i64 0, %229
  %231 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %206, i64 0, i32 0, i32 0, i64 %230
  %232 = bitcast i8* %231 to i16*
  %233 = load i16, i16* %232, align 2
  %234 = icmp ugt i16 %233, 4
  br i1 %234, label %235, label %245

235:                                              ; preds = %225
  %236 = getelementptr inbounds i8, i8* %231, i64 4
  %237 = bitcast i8* %236 to i16*
  %238 = load i16, i16* %237, align 2
  %239 = icmp eq i16 %238, 0
  br i1 %239, label %245, label %240

240:                                              ; preds = %235
  %241 = zext i16 %238 to i64
  %242 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %206, i64 0, i32 0, i32 0, i64 %241
  %243 = bitcast i8* %242 to i32*
  %244 = load i32, i32* %243, align 4
  br label %245

245:                                              ; preds = %225, %235, %240
  %246 = phi i32 [ %244, %240 ], [ 0, %235 ], [ 0, %225 ]
  %247 = icmp ult i32 %226, %246
  br i1 %247, label %248, label %250

248:                                              ; preds = %245
  store i32 %191, i32* %201, align 4
  store i32 %202, i32* %141, align 4
  %249 = add i32 %7, 4
  br label %250

250:                                              ; preds = %125, %245, %248, %185, %65
  %251 = phi i32 [ %249, %248 ], [ %189, %245 ], [ %129, %185 ], [ %69, %125 ], [ %7, %65 ]
  ret i32 %251
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEvT0_SD_T_(%"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 2
  %5 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 1
  %6 = tail call i32 @_ZNSt3__17__sort3IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_T_(%"struct.flatbuffers::Offset.35"* %0, %"struct.flatbuffers::Offset.35"* %5, %"struct.flatbuffers::Offset.35"* %4, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  %7 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 3
  %8 = icmp eq %"struct.flatbuffers::Offset.35"* %7, %1
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator", %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* %2, i64 0, i32 0
  br label %12

11:                                               ; preds = %140, %3
  ret void

12:                                               ; preds = %9, %140
  %13 = phi %"struct.flatbuffers::Offset.35"* [ %7, %9 ], [ %141, %140 ]
  %14 = phi %"struct.flatbuffers::Offset.35"* [ %4, %9 ], [ %13, %140 ]
  %15 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %10, align 8
  %16 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %13, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %15, i64 0, i32 5
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %15, i64 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %20, i64 %22
  %24 = sub nsw i64 0, %18
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = bitcast i8* %25 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %27 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %14, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = sub nsw i64 0, %29
  %31 = getelementptr inbounds i8, i8* %23, i64 %30
  %32 = bitcast i8* %31 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %33 = bitcast i8* %25 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = sub nsw i64 0, %35
  %37 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %26, i64 0, i32 0, i32 0, i64 %36
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 2
  %40 = icmp ugt i16 %39, 4
  br i1 %40, label %41, label %51

41:                                               ; preds = %12
  %42 = getelementptr inbounds i8, i8* %37, i64 4
  %43 = bitcast i8* %42 to i16*
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %41
  %47 = zext i16 %44 to i64
  %48 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %26, i64 0, i32 0, i32 0, i64 %47
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 4
  br label %51

51:                                               ; preds = %46, %41, %12
  %52 = phi i32 [ %50, %46 ], [ 0, %41 ], [ 0, %12 ]
  %53 = bitcast i8* %31 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = sub nsw i64 0, %55
  %57 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %32, i64 0, i32 0, i32 0, i64 %56
  %58 = bitcast i8* %57 to i16*
  %59 = load i16, i16* %58, align 2
  %60 = icmp ugt i16 %59, 4
  br i1 %60, label %61, label %71

61:                                               ; preds = %51
  %62 = getelementptr inbounds i8, i8* %57, i64 4
  %63 = bitcast i8* %62 to i16*
  %64 = load i16, i16* %63, align 2
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %61
  %67 = zext i16 %64 to i64
  %68 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %32, i64 0, i32 0, i32 0, i64 %67
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %69, align 4
  br label %71

71:                                               ; preds = %51, %61, %66
  %72 = phi i32 [ %70, %66 ], [ 0, %61 ], [ 0, %51 ]
  %73 = icmp ult i32 %52, %72
  br i1 %73, label %74, label %140

74:                                               ; preds = %71, %134
  %75 = phi i32 [ %91, %134 ], [ %28, %71 ]
  %76 = phi %"struct.flatbuffers::Offset.35"* [ %77, %134 ], [ %13, %71 ]
  %77 = phi %"struct.flatbuffers::Offset.35"* [ %81, %134 ], [ %14, %71 ]
  %78 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %76, i64 0, i32 0
  store i32 %75, i32* %78, align 4
  %79 = icmp eq %"struct.flatbuffers::Offset.35"* %77, %0
  br i1 %79, label %137, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %77, i64 -1
  %82 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %10, align 8
  %83 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %82, i64 0, i32 5
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %82, i64 0, i32 4
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds i8, i8* %84, i64 %86
  %88 = getelementptr inbounds i8, i8* %87, i64 %24
  %89 = bitcast i8* %88 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %90 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %81, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i64
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds i8, i8* %87, i64 %93
  %95 = bitcast i8* %94 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %96 = bitcast i8* %88 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = sext i32 %97 to i64
  %99 = sub nsw i64 0, %98
  %100 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %89, i64 0, i32 0, i32 0, i64 %99
  %101 = bitcast i8* %100 to i16*
  %102 = load i16, i16* %101, align 2
  %103 = icmp ugt i16 %102, 4
  br i1 %103, label %104, label %114

104:                                              ; preds = %80
  %105 = getelementptr inbounds i8, i8* %100, i64 4
  %106 = bitcast i8* %105 to i16*
  %107 = load i16, i16* %106, align 2
  %108 = icmp eq i16 %107, 0
  br i1 %108, label %114, label %109

109:                                              ; preds = %104
  %110 = zext i16 %107 to i64
  %111 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %89, i64 0, i32 0, i32 0, i64 %110
  %112 = bitcast i8* %111 to i32*
  %113 = load i32, i32* %112, align 4
  br label %114

114:                                              ; preds = %109, %104, %80
  %115 = phi i32 [ %113, %109 ], [ 0, %104 ], [ 0, %80 ]
  %116 = bitcast i8* %94 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = sext i32 %117 to i64
  %119 = sub nsw i64 0, %118
  %120 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %95, i64 0, i32 0, i32 0, i64 %119
  %121 = bitcast i8* %120 to i16*
  %122 = load i16, i16* %121, align 2
  %123 = icmp ugt i16 %122, 4
  br i1 %123, label %124, label %134

124:                                              ; preds = %114
  %125 = getelementptr inbounds i8, i8* %120, i64 4
  %126 = bitcast i8* %125 to i16*
  %127 = load i16, i16* %126, align 2
  %128 = icmp eq i16 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %124
  %130 = zext i16 %127 to i64
  %131 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %95, i64 0, i32 0, i32 0, i64 %130
  %132 = bitcast i8* %131 to i32*
  %133 = load i32, i32* %132, align 4
  br label %134

134:                                              ; preds = %114, %124, %129
  %135 = phi i32 [ %133, %129 ], [ 0, %124 ], [ 0, %114 ]
  %136 = icmp ult i32 %115, %135
  br i1 %136, label %74, label %137

137:                                              ; preds = %74, %134
  %138 = phi %"struct.flatbuffers::Offset.35"* [ %0, %74 ], [ %77, %134 ]
  %139 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %138, i64 0, i32 0
  store i32 %17, i32* %139, align 4
  br label %140

140:                                              ; preds = %137, %71
  %141 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %13, i64 1
  %142 = icmp eq %"struct.flatbuffers::Offset.35"* %141, %1
  br i1 %142, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEbT0_SD_T_(%"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::Offset.35"*, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"struct.flatbuffers::Offset.35"* %1 to i64
  %5 = ptrtoint %"struct.flatbuffers::Offset.35"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  switch i64 %7, label %85 [
    i64 0, label %231
    i64 1, label %231
    i64 2, label %8
    i64 3, label %70
    i64 4, label %74
    i64 5, label %79
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator", %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* %2, i64 0, i32 0
  %10 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %9, align 8
  %11 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1, i64 -1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %10, i64 0, i32 5
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %10, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 %17
  %19 = sub nsw i64 0, %13
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %22 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = sub nsw i64 0, %24
  %26 = getelementptr inbounds i8, i8* %18, i64 %25
  %27 = bitcast i8* %26 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %28 = bitcast i8* %20 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = sub nsw i64 0, %30
  %32 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %21, i64 0, i32 0, i32 0, i64 %31
  %33 = bitcast i8* %32 to i16*
  %34 = load i16, i16* %33, align 2
  %35 = icmp ugt i16 %34, 4
  br i1 %35, label %36, label %46

36:                                               ; preds = %8
  %37 = getelementptr inbounds i8, i8* %32, i64 4
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 2
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = zext i16 %39 to i64
  %43 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %21, i64 0, i32 0, i32 0, i64 %42
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 4
  br label %46

46:                                               ; preds = %41, %36, %8
  %47 = phi i32 [ %45, %41 ], [ 0, %36 ], [ 0, %8 ]
  %48 = bitcast i8* %26 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = sub nsw i64 0, %50
  %52 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %27, i64 0, i32 0, i32 0, i64 %51
  %53 = bitcast i8* %52 to i16*
  %54 = load i16, i16* %53, align 2
  %55 = icmp ugt i16 %54, 4
  br i1 %55, label %56, label %66

56:                                               ; preds = %46
  %57 = getelementptr inbounds i8, i8* %52, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load i16, i16* %58, align 2
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %56
  %62 = zext i16 %59 to i64
  %63 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %27, i64 0, i32 0, i32 0, i64 %62
  %64 = bitcast i8* %63 to i32*
  %65 = load i32, i32* %64, align 4
  br label %66

66:                                               ; preds = %46, %56, %61
  %67 = phi i32 [ %65, %61 ], [ 0, %56 ], [ 0, %46 ]
  %68 = icmp ult i32 %47, %67
  br i1 %68, label %69, label %231

69:                                               ; preds = %66
  store i32 %12, i32* %22, align 4
  store i32 %23, i32* %11, align 4
  br label %231

70:                                               ; preds = %3
  %71 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 1
  %72 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1, i64 -1
  %73 = tail call i32 @_ZNSt3__17__sort3IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_T_(%"struct.flatbuffers::Offset.35"* %0, %"struct.flatbuffers::Offset.35"* %71, %"struct.flatbuffers::Offset.35"* %72, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  br label %231

74:                                               ; preds = %3
  %75 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 1
  %76 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 2
  %77 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1, i64 -1
  %78 = tail call i32 @_ZNSt3__17__sort4IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_SD_T_(%"struct.flatbuffers::Offset.35"* %0, %"struct.flatbuffers::Offset.35"* %75, %"struct.flatbuffers::Offset.35"* %76, %"struct.flatbuffers::Offset.35"* %77, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  br label %231

79:                                               ; preds = %3
  %80 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 1
  %81 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 2
  %82 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 3
  %83 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %1, i64 -1
  %84 = tail call i32 @_ZNSt3__17__sort5IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_SD_SD_T_(%"struct.flatbuffers::Offset.35"* %0, %"struct.flatbuffers::Offset.35"* %80, %"struct.flatbuffers::Offset.35"* %81, %"struct.flatbuffers::Offset.35"* %82, %"struct.flatbuffers::Offset.35"* %83, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  br label %231

85:                                               ; preds = %3
  %86 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 2
  %87 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 1
  %88 = tail call i32 @_ZNSt3__17__sort3IRN11flatbuffers17FlatBufferBuilder18TableKeyComparatorIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEPNS1_6OffsetIS7_EEEEjT0_SD_SD_T_(%"struct.flatbuffers::Offset.35"* %0, %"struct.flatbuffers::Offset.35"* %87, %"struct.flatbuffers::Offset.35"* %86, %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* dereferenceable(8) %2)
  %89 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %0, i64 3
  %90 = icmp eq %"struct.flatbuffers::Offset.35"* %89, %1
  br i1 %90, label %231, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator", %"struct.flatbuffers::FlatBufferBuilder::TableKeyComparator"* %2, i64 0, i32 0
  br label %93

93:                                               ; preds = %91, %224
  %94 = phi %"struct.flatbuffers::Offset.35"* [ %89, %91 ], [ %226, %224 ]
  %95 = phi i32 [ 0, %91 ], [ %225, %224 ]
  %96 = phi %"struct.flatbuffers::Offset.35"* [ %86, %91 ], [ %94, %224 ]
  %97 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %92, align 8
  %98 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %94, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %97, i64 0, i32 5
  %102 = load i8*, i8** %101, align 8
  %103 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %97, i64 0, i32 4
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds i8, i8* %102, i64 %104
  %106 = sub nsw i64 0, %100
  %107 = getelementptr inbounds i8, i8* %105, i64 %106
  %108 = bitcast i8* %107 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %109 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %96, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = sub nsw i64 0, %111
  %113 = getelementptr inbounds i8, i8* %105, i64 %112
  %114 = bitcast i8* %113 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %115 = bitcast i8* %107 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %116 to i64
  %118 = sub nsw i64 0, %117
  %119 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %108, i64 0, i32 0, i32 0, i64 %118
  %120 = bitcast i8* %119 to i16*
  %121 = load i16, i16* %120, align 2
  %122 = icmp ugt i16 %121, 4
  br i1 %122, label %123, label %133

123:                                              ; preds = %93
  %124 = getelementptr inbounds i8, i8* %119, i64 4
  %125 = bitcast i8* %124 to i16*
  %126 = load i16, i16* %125, align 2
  %127 = icmp eq i16 %126, 0
  br i1 %127, label %133, label %128

128:                                              ; preds = %123
  %129 = zext i16 %126 to i64
  %130 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %108, i64 0, i32 0, i32 0, i64 %129
  %131 = bitcast i8* %130 to i32*
  %132 = load i32, i32* %131, align 4
  br label %133

133:                                              ; preds = %128, %123, %93
  %134 = phi i32 [ %132, %128 ], [ 0, %123 ], [ 0, %93 ]
  %135 = bitcast i8* %113 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = sub nsw i64 0, %137
  %139 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %114, i64 0, i32 0, i32 0, i64 %138
  %140 = bitcast i8* %139 to i16*
  %141 = load i16, i16* %140, align 2
  %142 = icmp ugt i16 %141, 4
  br i1 %142, label %143, label %153

143:                                              ; preds = %133
  %144 = getelementptr inbounds i8, i8* %139, i64 4
  %145 = bitcast i8* %144 to i16*
  %146 = load i16, i16* %145, align 2
  %147 = icmp eq i16 %146, 0
  br i1 %147, label %153, label %148

148:                                              ; preds = %143
  %149 = zext i16 %146 to i64
  %150 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %114, i64 0, i32 0, i32 0, i64 %149
  %151 = bitcast i8* %150 to i32*
  %152 = load i32, i32* %151, align 4
  br label %153

153:                                              ; preds = %133, %143, %148
  %154 = phi i32 [ %152, %148 ], [ 0, %143 ], [ 0, %133 ]
  %155 = icmp ult i32 %134, %154
  br i1 %155, label %156, label %224

156:                                              ; preds = %153, %216
  %157 = phi i32 [ %173, %216 ], [ %110, %153 ]
  %158 = phi %"struct.flatbuffers::Offset.35"* [ %159, %216 ], [ %94, %153 ]
  %159 = phi %"struct.flatbuffers::Offset.35"* [ %163, %216 ], [ %96, %153 ]
  %160 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %158, i64 0, i32 0
  store i32 %157, i32* %160, align 4
  %161 = icmp eq %"struct.flatbuffers::Offset.35"* %159, %0
  br i1 %161, label %219, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %159, i64 -1
  %164 = load %"class.flatbuffers::vector_downward"*, %"class.flatbuffers::vector_downward"** %92, align 8
  %165 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %164, i64 0, i32 5
  %166 = load i8*, i8** %165, align 8
  %167 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %164, i64 0, i32 4
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds i8, i8* %166, i64 %168
  %170 = getelementptr inbounds i8, i8* %169, i64 %106
  %171 = bitcast i8* %170 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %172 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %163, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i64
  %175 = sub nsw i64 0, %174
  %176 = getelementptr inbounds i8, i8* %169, i64 %175
  %177 = bitcast i8* %176 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %178 = bitcast i8* %170 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = sext i32 %179 to i64
  %181 = sub nsw i64 0, %180
  %182 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %171, i64 0, i32 0, i32 0, i64 %181
  %183 = bitcast i8* %182 to i16*
  %184 = load i16, i16* %183, align 2
  %185 = icmp ugt i16 %184, 4
  br i1 %185, label %186, label %196

186:                                              ; preds = %162
  %187 = getelementptr inbounds i8, i8* %182, i64 4
  %188 = bitcast i8* %187 to i16*
  %189 = load i16, i16* %188, align 2
  %190 = icmp eq i16 %189, 0
  br i1 %190, label %196, label %191

191:                                              ; preds = %186
  %192 = zext i16 %189 to i64
  %193 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %171, i64 0, i32 0, i32 0, i64 %192
  %194 = bitcast i8* %193 to i32*
  %195 = load i32, i32* %194, align 4
  br label %196

196:                                              ; preds = %191, %186, %162
  %197 = phi i32 [ %195, %191 ], [ 0, %186 ], [ 0, %162 ]
  %198 = bitcast i8* %176 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = sext i32 %199 to i64
  %201 = sub nsw i64 0, %200
  %202 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %177, i64 0, i32 0, i32 0, i64 %201
  %203 = bitcast i8* %202 to i16*
  %204 = load i16, i16* %203, align 2
  %205 = icmp ugt i16 %204, 4
  br i1 %205, label %206, label %216

206:                                              ; preds = %196
  %207 = getelementptr inbounds i8, i8* %202, i64 4
  %208 = bitcast i8* %207 to i16*
  %209 = load i16, i16* %208, align 2
  %210 = icmp eq i16 %209, 0
  br i1 %210, label %216, label %211

211:                                              ; preds = %206
  %212 = zext i16 %209 to i64
  %213 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %177, i64 0, i32 0, i32 0, i64 %212
  %214 = bitcast i8* %213 to i32*
  %215 = load i32, i32* %214, align 4
  br label %216

216:                                              ; preds = %196, %206, %211
  %217 = phi i32 [ %215, %211 ], [ 0, %206 ], [ 0, %196 ]
  %218 = icmp ult i32 %197, %217
  br i1 %218, label %156, label %219

219:                                              ; preds = %156, %216
  %220 = phi %"struct.flatbuffers::Offset.35"* [ %0, %156 ], [ %159, %216 ]
  %221 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %220, i64 0, i32 0
  store i32 %99, i32* %221, align 4
  %222 = add i32 %95, 1
  %223 = icmp eq i32 %222, 8
  br i1 %223, label %228, label %224

224:                                              ; preds = %219, %153
  %225 = phi i32 [ %222, %219 ], [ %95, %153 ]
  %226 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %94, i64 1
  %227 = icmp eq %"struct.flatbuffers::Offset.35"* %226, %1
  br i1 %227, label %231, label %93

228:                                              ; preds = %219
  %229 = getelementptr inbounds %"struct.flatbuffers::Offset.35", %"struct.flatbuffers::Offset.35"* %94, i64 1
  %230 = icmp eq %"struct.flatbuffers::Offset.35"* %229, %1
  br label %231

231:                                              ; preds = %224, %228, %85, %66, %69, %3, %3, %79, %74, %70
  %232 = phi i1 [ true, %79 ], [ true, %74 ], [ true, %70 ], [ true, %3 ], [ true, %3 ], [ true, %69 ], [ true, %66 ], [ true, %85 ], [ %230, %228 ], [ true, %224 ]
  ret i1 %232
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIN10extensions23declarative_net_request4flat15UrlRuleMetadataEEEjNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #11
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !67

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %8, align 8
  %75 = load i64, i64* %11, align 8
  %76 = load i64, i64* %14, align 8
  %77 = sub i64 %74, %75
  %78 = add i64 %77, %76
  %79 = trunc i64 %78 to i32
  %80 = sub i32 4, %1
  %81 = add i32 %80, %79
  %82 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %81)
  ret i32 %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN10extensions23declarative_net_request12_GLOBAL__N_119CreateIndexBuildersEPN11flatbuffers17FlatBufferBuilderE: argument 0"}
!4 = distinct !{!4, !"_ZN10extensions23declarative_net_request12_GLOBAL__N_119CreateIndexBuildersEPN11flatbuffers17FlatBufferBuilderE"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !12}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !12}
!23 = distinct !{!23, !14}
!24 = distinct !{!24, !14}
!25 = distinct !{!25, !12}
!26 = distinct !{!26, !14}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN10extensions23declarative_net_request18FlatRulesetIndexer11GetBuildersERKNS0_11IndexedRuleE: argument 0"}
!29 = distinct !{!29, !"_ZN10extensions23declarative_net_request18FlatRulesetIndexer11GetBuildersERKNS0_11IndexedRuleE"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!33 = !{!34, !36}
!34 = distinct !{!34, !35, !"_ZN11flatbuffers15vector_downward7releaseEv: argument 0"}
!35 = distinct !{!35, !"_ZN11flatbuffers15vector_downward7releaseEv"}
!36 = distinct !{!36, !37, !"_ZN11flatbuffers17FlatBufferBuilder7ReleaseEv: argument 0"}
!37 = distinct !{!37, !"_ZN11flatbuffers17FlatBufferBuilder7ReleaseEv"}
!38 = distinct !{!38, !14}
!39 = distinct !{!39, !14}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!43 = distinct !{!43, !14}
!44 = distinct !{!44, !14}
!45 = distinct !{!45, !14}
!46 = distinct !{!46, !14}
!47 = distinct !{!47, !14}
!48 = distinct !{!48, !14}
!49 = distinct !{!49, !14}
!50 = distinct !{!50, !14}
!51 = distinct !{!51, !14}
!52 = distinct !{!52, !14}
!53 = distinct !{!53, !14}
!54 = distinct !{!54, !14}
!55 = distinct !{!55, !14}
!56 = distinct !{!56, !14}
!57 = distinct !{!57, !14}
!58 = distinct !{!58, !14}
!59 = distinct !{!59, !14}
!60 = distinct !{!60, !14}
!61 = distinct !{!61, !14}
!62 = distinct !{!62, !14}
!63 = distinct !{!63, !14}
!64 = distinct !{!64, !14}
!65 = distinct !{!65, !14}
!66 = distinct !{!66, !14}
!67 = distinct !{!67, !14}
