; ModuleID = '../../media/cdm/cenc_utils.cc'
source_filename = "../../media/cdm/cenc_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"class.std::__1::__compressed_pair.10" }
%"struct.media::mp4::FullProtectionSystemSpecificHeader" = type { %"struct.media::mp4::Box", %"class.std::__1::vector", %"class.std::__1::vector.3", %"class.std::__1::vector" }
%"struct.media::mp4::Box" = type { i32 (...)** }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::vector"* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.media::mp4::FullProtectionSystemSpecificHeader"* }
%"class.media::NullMediaLog" = type { %"class.media::MediaLog" }
%"class.media::MediaLog" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"struct.media::MediaLog::ParentLogRecord"* }
%"struct.media::MediaLog::ParentLogRecord" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.base::Lock", %"class.media::MediaLog"* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"class.std::__1::__compressed_pair.31" }
%"struct.media::mp4::ProtectionSystemSpecificHeader" = type { %"struct.media::mp4::Box", %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.media::mp4::ProtectionSystemSpecificHeader"* }
%"class.media::mp4::BoxReader" = type <{ %"class.media::mp4::BufferReader", %"class.media::MediaLog"*, i64, i8, [3 x i8], i32, i8, [3 x i8], i32, %"class.std::__1::multimap", i8, i8, [6 x i8] }>
%"class.media::mp4::BufferReader" = type { i8*, i64, i64 }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.media::MediaLogRecord" = type { i32, i32, %"class.base::DictionaryValue", %"class.base::TimeTicks" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.40" }
%"union.absl::variant_internal::DestructibleUnionImpl.40" = type { %"union.absl::variant_internal::DestructibleUnionImpl.41" }
%"union.absl::variant_internal::DestructibleUnionImpl.41" = type { %"union.absl::variant_internal::DestructibleUnionImpl.42" }
%"union.absl::variant_internal::DestructibleUnionImpl.42" = type { %"union.absl::variant_internal::DestructibleUnionImpl.43" }
%"union.absl::variant_internal::DestructibleUnionImpl.43" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

$_ZNSt3__16vectorINS0_IhNS_9allocatorIhEEEENS1_IS3_EEE6assignINS_11__wrap_iterIPKS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignINS_11__wrap_iterIPKhEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZN5media12NullMediaLogD0Ev = comdat any

$_ZN5media12NullMediaLog18AddLogRecordLockedENSt3__110unique_ptrINS_14MediaLogRecordENS1_14default_deleteIS3_EEEE = comdat any

$_ZN5media3mp49BoxReader23ReadAllChildrenInternalINS0_30ProtectionSystemSpecificHeaderEEEbPNSt3__16vectorIT_NS4_9allocatorIS6_EEEEb = comdat any

$_ZNSt3__16vectorIN5media3mp430ProtectionSystemSpecificHeaderENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZN5media3mp49BoxReader23ReadAllChildrenInternalINS0_34FullProtectionSystemSpecificHeaderEEEbPNSt3__16vectorIT_NS4_9allocatorIS6_EEEEb = comdat any

$_ZNSt3__16vectorIN5media3mp434FullProtectionSystemSpecificHeaderENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZTVN5media12NullMediaLogE = comdat any

@_ZN5mediaL19kCencCommonSystemIdE = internal unnamed_addr constant [16 x i8] c"\10w\EF\EC\C0\B2M\02\AC\E3<\1ER\E2\FBK", align 16
@_ZTVN5media12NullMediaLogE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::MediaLog"*)* @_ZN5media8MediaLogD2Ev to i8*), i8* bitcast (void (%"class.media::NullMediaLog"*)* @_ZN5media12NullMediaLogD0Ev to i8*), i8* bitcast (void ()* @_ZN5media8MediaLog5CloneEv to i8*), i8* bitcast (void (%"class.media::NullMediaLog"*, %"struct.media::MediaLogRecord"*)* @_ZN5media12NullMediaLog18AddLogRecordLockedENSt3__110unique_ptrINS_14MediaLogRecordENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (void (%"class.media::MediaLog"*)* @_ZN5media8MediaLog31OnWebMediaPlayerDestroyedLockedEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)* @_ZN5media8MediaLog21GetErrorMessageLockedEv to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media17ValidatePsshInputERKNSt3__16vectorIhNS0_9allocatorIhEEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::vector.1", align 8
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %32, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::vector.1"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #9
  %12 = call fastcc zeroext i1 @_ZN5mediaL16ReadAllPsshBoxesERKNSt3__16vectorIhNS0_9allocatorIhEEEEPNS1_INS_3mp434FullProtectionSystemSpecificHeaderENS2_IS8_EEEE(%"class.std::__1::vector"* dereferenceable(24) %0, %"class.std::__1::vector.1"* nonnull %2)
  %13 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %10, align 8
  %14 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %13, null
  br i1 %14, label %31, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %13 to i8*
  %17 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %11, align 8
  %18 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %17, %13
  br i1 %18, label %29, label %19

19:                                               ; preds = %15, %19
  %20 = phi %"struct.media::mp4::FullProtectionSystemSpecificHeader"* [ %21, %19 ], [ %17, %15 ]
  %21 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %20, i64 -1
  %22 = bitcast %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %21 to void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)***
  %23 = load void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)**, void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)*** %22, align 8
  %24 = load void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)*, void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)** %23, align 8
  call void %24(%"struct.media::mp4::FullProtectionSystemSpecificHeader"* %21) #9
  %25 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %21, %13
  br i1 %25, label %26, label %19

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::vector.1"* %2 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %15
  %30 = phi i8* [ %28, %26 ], [ %16, %15 ]
  store %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %13, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %11, align 8
  call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %8, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  br label %32

32:                                               ; preds = %1, %31
  %33 = phi i1 [ %12, %31 ], [ true, %1 ]
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5mediaL16ReadAllPsshBoxesERKNSt3__16vectorIhNS0_9allocatorIhEEEEPNS1_INS_3mp434FullProtectionSystemSpecificHeaderENS2_IS8_EEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.1"*) unnamed_addr #0 {
  %3 = alloca %"class.media::NullMediaLog", align 8
  %4 = alloca %"class.std::__1::vector.29", align 8
  %5 = bitcast %"class.media::NullMediaLog"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.media::NullMediaLog", %"class.media::NullMediaLog"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.media::NullMediaLog", %"class.media::NullMediaLog"* %3, i64 0, i32 0
  %8 = bitcast %"class.media::NullMediaLog"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZN5media8MediaLogC2Ev(%"class.media::MediaLog"* nonnull %7) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5media12NullMediaLogE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = ptrtoint i8* %10 to i64
  %15 = sub i64 %13, %14
  %16 = call %"class.media::mp4::BoxReader"* @_ZN5media3mp49BoxReader22ReadConcatentatedBoxesEPKhmPNS_8MediaLogE(i8* %10, i64 %15, %"class.media::MediaLog"* nonnull %7) #9
  %17 = bitcast %"class.std::__1::vector.29"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #9
  %20 = call zeroext i1 @_ZN5media3mp49BoxReader23ReadAllChildrenInternalINS0_30ProtectionSystemSpecificHeaderEEEbPNSt3__16vectorIT_NS4_9allocatorIS6_EEEEb(%"class.media::mp4::BoxReader"* %16, %"class.std::__1::vector.29"* nonnull %4, i1 zeroext true) #9
  br i1 %20, label %21, label %49

21:                                               ; preds = %2
  %22 = load %"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"struct.media::mp4::ProtectionSystemSpecificHeader"** %18, align 8
  %23 = load %"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"struct.media::mp4::ProtectionSystemSpecificHeader"** %19, align 8
  %24 = icmp eq %"struct.media::mp4::ProtectionSystemSpecificHeader"* %22, %23
  br i1 %24, label %25, label %32

25:                                               ; preds = %46, %21
  %26 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %27 = bitcast %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.1"* %1 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = icmp ne i64 %28, %30
  br label %49

32:                                               ; preds = %21, %46
  %33 = phi %"struct.media::mp4::ProtectionSystemSpecificHeader"* [ %47, %46 ], [ %22, %21 ]
  %34 = getelementptr inbounds %"struct.media::mp4::ProtectionSystemSpecificHeader", %"struct.media::mp4::ProtectionSystemSpecificHeader"* %33, i64 0, i32 1, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"struct.media::mp4::ProtectionSystemSpecificHeader", %"struct.media::mp4::ProtectionSystemSpecificHeader"* %33, i64 0, i32 1, i32 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = ptrtoint i8* %35 to i64
  %40 = sub i64 %38, %39
  %41 = call %"class.media::mp4::BoxReader"* @_ZN5media3mp49BoxReader22ReadConcatentatedBoxesEPKhmPNS_8MediaLogE(i8* %35, i64 %40, %"class.media::MediaLog"* nonnull %7) #9
  %42 = call zeroext i1 @_ZN5media3mp49BoxReader23ReadAllChildrenInternalINS0_34FullProtectionSystemSpecificHeaderEEEbPNSt3__16vectorIT_NS4_9allocatorIS6_EEEEb(%"class.media::mp4::BoxReader"* %41, %"class.std::__1::vector.1"* %1, i1 zeroext true) #9
  %43 = icmp eq %"class.media::mp4::BoxReader"* %41, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %32
  call void @_ZN5media3mp49BoxReaderD1Ev(%"class.media::mp4::BoxReader"* nonnull %41) #9
  %45 = bitcast %"class.media::mp4::BoxReader"* %41 to i8*
  call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %32, %44
  %47 = getelementptr inbounds %"struct.media::mp4::ProtectionSystemSpecificHeader", %"struct.media::mp4::ProtectionSystemSpecificHeader"* %33, i64 1
  %48 = icmp eq %"struct.media::mp4::ProtectionSystemSpecificHeader"* %47, %23
  br i1 %48, label %25, label %32

49:                                               ; preds = %2, %25
  %50 = phi i1 [ %31, %25 ], [ false, %2 ]
  %51 = load %"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"struct.media::mp4::ProtectionSystemSpecificHeader"** %18, align 8
  %52 = icmp eq %"struct.media::mp4::ProtectionSystemSpecificHeader"* %51, null
  br i1 %52, label %69, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.media::mp4::ProtectionSystemSpecificHeader"* %51 to i8*
  %55 = load %"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"struct.media::mp4::ProtectionSystemSpecificHeader"** %19, align 8
  %56 = icmp eq %"struct.media::mp4::ProtectionSystemSpecificHeader"* %55, %51
  br i1 %56, label %67, label %57

57:                                               ; preds = %53, %57
  %58 = phi %"struct.media::mp4::ProtectionSystemSpecificHeader"* [ %59, %57 ], [ %55, %53 ]
  %59 = getelementptr inbounds %"struct.media::mp4::ProtectionSystemSpecificHeader", %"struct.media::mp4::ProtectionSystemSpecificHeader"* %58, i64 -1
  %60 = bitcast %"struct.media::mp4::ProtectionSystemSpecificHeader"* %59 to void (%"struct.media::mp4::ProtectionSystemSpecificHeader"*)***
  %61 = load void (%"struct.media::mp4::ProtectionSystemSpecificHeader"*)**, void (%"struct.media::mp4::ProtectionSystemSpecificHeader"*)*** %60, align 8
  %62 = load void (%"struct.media::mp4::ProtectionSystemSpecificHeader"*)*, void (%"struct.media::mp4::ProtectionSystemSpecificHeader"*)** %61, align 8
  call void %62(%"struct.media::mp4::ProtectionSystemSpecificHeader"* %59) #9
  %63 = icmp eq %"struct.media::mp4::ProtectionSystemSpecificHeader"* %59, %51
  br i1 %63, label %64, label %57

64:                                               ; preds = %57
  %65 = bitcast %"class.std::__1::vector.29"* %4 to i8**
  %66 = load i8*, i8** %65, align 8
  br label %67

67:                                               ; preds = %64, %53
  %68 = phi i8* [ %66, %64 ], [ %54, %53 ]
  store %"struct.media::mp4::ProtectionSystemSpecificHeader"* %51, %"struct.media::mp4::ProtectionSystemSpecificHeader"** %19, align 8
  call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %49, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  %70 = icmp eq %"class.media::mp4::BoxReader"* %16, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  call void @_ZN5media3mp49BoxReaderD1Ev(%"class.media::mp4::BoxReader"* nonnull %16) #9
  %72 = bitcast %"class.media::mp4::BoxReader"* %16 to i8*
  call void @_ZdlPv(i8* %72) #10
  br label %73

73:                                               ; preds = %69, %71
  call void @_ZN5media8MediaLogD2Ev(%"class.media::MediaLog"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret i1 %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media26GetKeyIdsForCommonSystemIdERKNSt3__16vectorIhNS0_9allocatorIhEEEEPNS1_IS4_NS2_IS4_EEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.3"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector.1", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %5, %7
  br i1 %8, label %80, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::vector.1"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #9
  %13 = call fastcc zeroext i1 @_ZN5mediaL16ReadAllPsshBoxesERKNSt3__16vectorIhNS0_9allocatorIhEEEEPNS1_INS_3mp434FullProtectionSystemSpecificHeaderENS2_IS8_EEEE(%"class.std::__1::vector"* dereferenceable(24) %0, %"class.std::__1::vector.1"* nonnull %3)
  br i1 %13, label %14, label %59

14:                                               ; preds = %9
  %15 = call i8* @_Znwm(i64 16) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 16 getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN5mediaL19kCencCommonSystemIdE, i64 0, i64 0), i64 16, i1 false) #9
  %16 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %11, align 8
  %17 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %12, align 8
  %18 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %16, %17
  br i1 %18, label %57, label %19

19:                                               ; preds = %14, %43
  %20 = phi %"struct.media::mp4::FullProtectionSystemSpecificHeader"* [ %44, %43 ], [ %16, %14 ]
  %21 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %20, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %20, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = icmp eq i64 %27, 16
  %29 = inttoptr i64 %26 to i8*
  %30 = inttoptr i64 %24 to i8*
  br i1 %28, label %31, label %43

31:                                               ; preds = %19
  %32 = icmp eq i8* %29, %30
  br i1 %32, label %46, label %33

33:                                               ; preds = %31, %39
  %34 = phi i8* [ %41, %39 ], [ %15, %31 ]
  %35 = phi i8* [ %40, %39 ], [ %29, %31 ]
  %36 = load i8, i8* %35, align 1
  %37 = load i8, i8* %34, align 1
  %38 = icmp eq i8 %36, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %33
  %40 = getelementptr inbounds i8, i8* %35, i64 1
  %41 = getelementptr inbounds i8, i8* %34, i64 1
  %42 = icmp eq i8* %40, %30
  br i1 %42, label %46, label %33

43:                                               ; preds = %33, %19
  %44 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %20, i64 1
  %45 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %44, %17
  br i1 %45, label %57, label %19

46:                                               ; preds = %31, %39
  %47 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %20, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %47, align 8
  %49 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %20, i64 0, i32 2, i32 0, i32 1
  %50 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %49, align 8
  call void @_ZNSt3__16vectorINS0_IhNS_9allocatorIhEEEENS1_IS3_EEE6assignINS_11__wrap_iterIPKS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.3"* %1, %"class.std::__1::vector"* %48, %"class.std::__1::vector"* %50)
  %51 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1, i64 0, i32 0, i32 1
  %52 = bitcast %"class.std::__1::vector"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::vector.3"* %1 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp ne i64 %53, %55
  br label %57

57:                                               ; preds = %43, %14, %46
  %58 = phi i1 [ %56, %46 ], [ false, %14 ], [ false, %43 ]
  call void @_ZdlPv(i8* nonnull %15) #10
  br label %59

59:                                               ; preds = %57, %9
  %60 = phi i1 [ false, %9 ], [ %58, %57 ]
  %61 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %11, align 8
  %62 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %61, null
  br i1 %62, label %79, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %61 to i8*
  %65 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %12, align 8
  %66 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %65, %61
  br i1 %66, label %77, label %67

67:                                               ; preds = %63, %67
  %68 = phi %"struct.media::mp4::FullProtectionSystemSpecificHeader"* [ %69, %67 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %68, i64 -1
  %70 = bitcast %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %69 to void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)***
  %71 = load void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)**, void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)*** %70, align 8
  %72 = load void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)*, void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)** %71, align 8
  call void %72(%"struct.media::mp4::FullProtectionSystemSpecificHeader"* %69) #9
  %73 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %69, %61
  br i1 %73, label %74, label %67

74:                                               ; preds = %67
  %75 = bitcast %"class.std::__1::vector.1"* %3 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %74, %63
  %78 = phi i8* [ %76, %74 ], [ %64, %63 ]
  store %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %61, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %12, align 8
  call void @_ZdlPv(i8* %78) #10
  br label %79

79:                                               ; preds = %59, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  br label %80

80:                                               ; preds = %2, %79
  %81 = phi i1 [ %60, %79 ], [ false, %2 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IhNS_9allocatorIhEEEENS1_IS3_EEE6assignINS_11__wrap_iterIPKS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.3"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::vector"* %1 to i64
  %5 = ptrtoint %"class.std::__1::vector"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::vector"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::vector"*
  br i1 %15, label %104, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::vector"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::vector"* %24, %"class.std::__1::vector"* %2
  %26 = icmp eq %"class.std::__1::vector"* %25, %1
  br i1 %26, label %40, label %27

27:                                               ; preds = %17, %36
  %28 = phi %"class.std::__1::vector"* [ %38, %36 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::vector"* [ %37, %36 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::vector"* %28, %29
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %29, i64 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %29, i64 0, i32 0, i32 1
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %28, i8* %33, i8* %35) #9
  br label %36

36:                                               ; preds = %31, %27
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %29, i64 1
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 1
  %39 = icmp eq %"class.std::__1::vector"* %37, %25
  br i1 %39, label %40, label %27

40:                                               ; preds = %36, %17
  %41 = phi %"class.std::__1::vector"* [ %16, %17 ], [ %38, %36 ]
  br i1 %23, label %42, label %88

42:                                               ; preds = %40
  %43 = load i64, i64* %19, align 8
  %44 = icmp eq %"class.std::__1::vector"* %25, %2
  br i1 %44, label %86, label %45

45:                                               ; preds = %42
  %46 = inttoptr i64 %43 to %"class.std::__1::vector"*
  br label %47

47:                                               ; preds = %80, %45
  %48 = phi %"class.std::__1::vector"* [ %82, %80 ], [ %46, %45 ]
  %49 = phi %"class.std::__1::vector"* [ %81, %80 ], [ %24, %45 ]
  %50 = bitcast %"class.std::__1::vector"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #9
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %49, i64 0, i32 0, i32 1
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::vector"* %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %80, label %58

58:                                               ; preds = %47
  %59 = icmp slt i64 %56, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::vector"* %48 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %61) #11
  unreachable

62:                                               ; preds = %58
  %63 = tail call i8* @_Znwm(i64 %56) #10
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %48, i64 0, i32 0, i32 1
  store i8* %63, i8** %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %48, i64 0, i32 0, i32 0
  store i8* %63, i8** %65, align 8
  %66 = getelementptr inbounds i8, i8* %63, i64 %56
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %48, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %66, i8** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %49, i64 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = load i64, i64* %52, align 8
  %71 = bitcast i8** %64 to i64*
  %72 = ptrtoint i8* %69 to i64
  %73 = sub i64 %70, %72
  %74 = icmp sgt i64 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %62
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %63, i8* align 1 %69, i64 %73, i1 false) #9
  %76 = getelementptr inbounds i8, i8* %63, i64 %73
  br label %77

77:                                               ; preds = %75, %62
  %78 = phi i8* [ %76, %75 ], [ %63, %62 ]
  %79 = ptrtoint i8* %78 to i64
  store i64 %79, i64* %71, align 8
  br label %80

80:                                               ; preds = %77, %47
  %81 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %49, i64 1
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %48, i64 1
  %83 = icmp eq %"class.std::__1::vector"* %81, %2
  br i1 %83, label %84, label %47

84:                                               ; preds = %80
  %85 = ptrtoint %"class.std::__1::vector"* %82 to i64
  br label %86

86:                                               ; preds = %42, %84
  %87 = phi i64 [ %43, %42 ], [ %85, %84 ]
  store i64 %87, i64* %19, align 8
  br label %194

88:                                               ; preds = %40
  %89 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %18, align 8
  %90 = icmp eq %"class.std::__1::vector"* %89, %41
  br i1 %90, label %103, label %91

91:                                               ; preds = %88, %101
  %92 = phi %"class.std::__1::vector"* [ %93, %101 ], [ %89, %88 ]
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %92, i64 -1
  %94 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %93, i64 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %91
  %98 = ptrtoint i8* %95 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %92, i64 -1, i32 0, i32 1
  %100 = bitcast i8** %99 to i64*
  store i64 %98, i64* %100, align 8
  tail call void @_ZdlPv(i8* nonnull %95) #10
  br label %101

101:                                              ; preds = %97, %91
  %102 = icmp eq %"class.std::__1::vector"* %93, %41
  br i1 %102, label %103, label %91

103:                                              ; preds = %101, %88
  store %"class.std::__1::vector"* %41, %"class.std::__1::vector"** %18, align 8
  br label %194

104:                                              ; preds = %3
  %105 = icmp eq i64 %12, 0
  br i1 %105, label %129, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %12 to i8*
  %108 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %109 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector"* %109, %16
  br i1 %110, label %126, label %111

111:                                              ; preds = %106, %121
  %112 = phi %"class.std::__1::vector"* [ %113, %121 ], [ %109, %106 ]
  %113 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %112, i64 -1
  %114 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %113, i64 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = icmp eq i8* %115, null
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  %118 = ptrtoint i8* %115 to i64
  %119 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %112, i64 -1, i32 0, i32 1
  %120 = bitcast i8** %119 to i64*
  store i64 %118, i64* %120, align 8
  tail call void @_ZdlPv(i8* nonnull %115) #10
  br label %121

121:                                              ; preds = %117, %111
  %122 = icmp eq %"class.std::__1::vector"* %113, %16
  br i1 %122, label %123, label %111

123:                                              ; preds = %121
  %124 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  %125 = load i8*, i8** %124, align 8
  br label %126

126:                                              ; preds = %123, %106
  %127 = phi i8* [ %125, %123 ], [ %107, %106 ]
  store %"class.std::__1::vector"* %16, %"class.std::__1::vector"** %108, align 8
  tail call void @_ZdlPv(i8* %127) #10
  %128 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 24, i1 false) #9
  br label %129

129:                                              ; preds = %104, %126
  %130 = phi i64 [ %10, %104 ], [ 0, %126 ]
  %131 = icmp ugt i64 %7, 768614336404564650
  br i1 %131, label %132, label %134

132:                                              ; preds = %129
  %133 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %133) #11
  unreachable

134:                                              ; preds = %129
  %135 = sdiv exact i64 %130, 24
  %136 = icmp ult i64 %135, 384307168202282325
  br i1 %136, label %137, label %141

137:                                              ; preds = %134
  %138 = shl nsw i64 %135, 1
  %139 = icmp ult i64 %138, %7
  %140 = select i1 %139, i64 %7, i64 %138
  br label %141

141:                                              ; preds = %137, %134
  %142 = phi i64 [ %140, %137 ], [ 768614336404564650, %134 ]
  %143 = mul i64 %142, 24
  %144 = tail call i8* @_Znwm(i64 %143) #10
  %145 = bitcast i8* %144 to %"class.std::__1::vector"*
  %146 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %147 = bitcast %"class.std::__1::vector"** %146 to i8**
  store i8* %144, i8** %147, align 8
  %148 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %144, i8** %148, align 8
  %149 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %145, i64 %142
  store %"class.std::__1::vector"* %149, %"class.std::__1::vector"** %8, align 8
  %150 = bitcast %"class.std::__1::vector"** %146 to i64*
  %151 = ptrtoint i8* %144 to i64
  %152 = icmp eq %"class.std::__1::vector"* %1, %2
  br i1 %152, label %192, label %153

153:                                              ; preds = %141, %186
  %154 = phi %"class.std::__1::vector"* [ %188, %186 ], [ %145, %141 ]
  %155 = phi %"class.std::__1::vector"* [ %187, %186 ], [ %1, %141 ]
  %156 = bitcast %"class.std::__1::vector"* %154 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 24, i1 false) #9
  %157 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %155, i64 0, i32 0, i32 1
  %158 = bitcast i8** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.std::__1::vector"* %155 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = sub i64 %159, %161
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %186, label %164

164:                                              ; preds = %153
  %165 = icmp slt i64 %162, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %164
  %167 = bitcast %"class.std::__1::vector"* %154 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %167) #11
  unreachable

168:                                              ; preds = %164
  %169 = tail call i8* @_Znwm(i64 %162) #10
  %170 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %154, i64 0, i32 0, i32 1
  store i8* %169, i8** %170, align 8
  %171 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %154, i64 0, i32 0, i32 0
  store i8* %169, i8** %171, align 8
  %172 = getelementptr inbounds i8, i8* %169, i64 %162
  %173 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %154, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %172, i8** %173, align 8
  %174 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %155, i64 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = load i64, i64* %158, align 8
  %177 = bitcast i8** %170 to i64*
  %178 = ptrtoint i8* %175 to i64
  %179 = sub i64 %176, %178
  %180 = icmp sgt i64 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %168
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %169, i8* align 1 %175, i64 %179, i1 false) #9
  %182 = getelementptr inbounds i8, i8* %169, i64 %179
  br label %183

183:                                              ; preds = %181, %168
  %184 = phi i8* [ %182, %181 ], [ %169, %168 ]
  %185 = ptrtoint i8* %184 to i64
  store i64 %185, i64* %177, align 8
  br label %186

186:                                              ; preds = %183, %153
  %187 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %155, i64 1
  %188 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %154, i64 1
  %189 = icmp eq %"class.std::__1::vector"* %187, %2
  br i1 %189, label %190, label %153

190:                                              ; preds = %186
  %191 = ptrtoint %"class.std::__1::vector"* %188 to i64
  br label %192

192:                                              ; preds = %141, %190
  %193 = phi i64 [ %151, %141 ], [ %191, %190 ]
  store i64 %193, i64* %150, align 8
  br label %194

194:                                              ; preds = %86, %103, %192
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media11GetPsshDataERKNSt3__16vectorIhNS0_9allocatorIhEEEES6_PS4_(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector.1", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %6, %8
  br i1 %9, label %83, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::vector.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #9
  %14 = call fastcc zeroext i1 @_ZN5mediaL16ReadAllPsshBoxesERKNSt3__16vectorIhNS0_9allocatorIhEEEEPNS1_INS_3mp434FullProtectionSystemSpecificHeaderENS2_IS8_EEEE(%"class.std::__1::vector"* dereferenceable(24) %0, %"class.std::__1::vector.1"* nonnull %4)
  br i1 %14, label %15, label %59

15:                                               ; preds = %10
  %16 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %12, align 8
  %17 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %13, align 8
  %18 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %16, %17
  br i1 %18, label %62, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = inttoptr i64 %24 to i8*
  br label %27

27:                                               ; preds = %19, %51
  %28 = phi %"struct.media::mp4::FullProtectionSystemSpecificHeader"* [ %16, %19 ], [ %52, %51 ]
  %29 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %28, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %28, i64 0, i32 1, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = icmp eq i64 %35, %25
  %37 = inttoptr i64 %34 to i8*
  %38 = inttoptr i64 %32 to i8*
  br i1 %36, label %39, label %51

39:                                               ; preds = %27
  %40 = icmp eq i8* %37, %38
  br i1 %40, label %54, label %41

41:                                               ; preds = %39, %47
  %42 = phi i8* [ %49, %47 ], [ %26, %39 ]
  %43 = phi i8* [ %48, %47 ], [ %37, %39 ]
  %44 = load i8, i8* %43, align 1
  %45 = load i8, i8* %42, align 1
  %46 = icmp eq i8 %44, %45
  br i1 %46, label %47, label %51

47:                                               ; preds = %41
  %48 = getelementptr inbounds i8, i8* %43, i64 1
  %49 = getelementptr inbounds i8, i8* %42, i64 1
  %50 = icmp eq i8* %48, %38
  br i1 %50, label %54, label %41

51:                                               ; preds = %41, %27
  %52 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %28, i64 1
  %53 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %52, %17
  br i1 %53, label %59, label %27

54:                                               ; preds = %39, %47
  %55 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %28, i64 0, i32 3, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %28, i64 0, i32 3, i32 0, i32 1
  %58 = load i8*, i8** %57, align 8
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignINS_11__wrap_iterIPKhEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"* %2, i8* %56, i8* %58)
  br label %59

59:                                               ; preds = %51, %10, %54
  %60 = phi i1 [ true, %54 ], [ false, %10 ], [ false, %51 ]
  %61 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %12, align 8
  br label %62

62:                                               ; preds = %59, %15
  %63 = phi %"struct.media::mp4::FullProtectionSystemSpecificHeader"* [ %61, %59 ], [ %16, %15 ]
  %64 = phi i1 [ %60, %59 ], [ false, %15 ]
  %65 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %63, null
  br i1 %65, label %82, label %66

66:                                               ; preds = %62
  %67 = bitcast %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %63 to i8*
  %68 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %13, align 8
  %69 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %68, %63
  br i1 %69, label %80, label %70

70:                                               ; preds = %66, %70
  %71 = phi %"struct.media::mp4::FullProtectionSystemSpecificHeader"* [ %72, %70 ], [ %68, %66 ]
  %72 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %71, i64 -1
  %73 = bitcast %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %72 to void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)***
  %74 = load void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)**, void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)*** %73, align 8
  %75 = load void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)*, void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)** %74, align 8
  call void %75(%"struct.media::mp4::FullProtectionSystemSpecificHeader"* %72) #9
  %76 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %72, %63
  br i1 %76, label %77, label %70

77:                                               ; preds = %70
  %78 = bitcast %"class.std::__1::vector.1"* %4 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %77, %66
  %81 = phi i8* [ %79, %77 ], [ %67, %66 ]
  store %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %63, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %13, align 8
  call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %62, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  br label %83

83:                                               ; preds = %3, %82
  %84 = phi i1 [ %64, %82 ], [ false, %3 ]
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignINS_11__wrap_iterIPKhEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = ptrtoint i8* %2 to i64
  %6 = sub i64 %5, %4
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %145, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %4
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #9
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %143

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = icmp eq i8* %22, %2
  br i1 %30, label %141, label %31

31:                                               ; preds = %28
  %32 = inttoptr i64 %29 to i8*
  %33 = sub i64 %11, %4
  %34 = sub i64 %33, %18
  %35 = getelementptr i8, i8* %2, i64 %34
  %36 = ptrtoint i8* %35 to i64
  %37 = icmp ult i8* %35, inttoptr (i64 32 to i8*)
  br i1 %37, label %128, label %38

38:                                               ; preds = %31
  %39 = sub i64 %11, %4
  %40 = sub i64 %39, %18
  %41 = getelementptr i8, i8* %2, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = getelementptr i8, i8* %32, i64 %42
  %44 = icmp ult i8* %32, %2
  %45 = icmp ult i8* %21, %43
  %46 = and i1 %44, %45
  br i1 %46, label %128, label %47

47:                                               ; preds = %38
  %48 = and i64 %36, -32
  %49 = getelementptr i8, i8* %32, i64 %48
  %50 = getelementptr i8, i8* %21, i64 %48
  %51 = add i64 %48, -32
  %52 = lshr exact i64 %51, 5
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 3
  %55 = icmp ult i64 %51, 96
  br i1 %55, label %107, label %56

56:                                               ; preds = %47
  %57 = sub nsw i64 %53, %54
  br label %58

58:                                               ; preds = %58, %56
  %59 = phi i64 [ 0, %56 ], [ %104, %58 ]
  %60 = phi i64 [ %57, %56 ], [ %105, %58 ]
  %61 = getelementptr i8, i8* %32, i64 %59
  %62 = getelementptr i8, i8* %21, i64 %59
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1, !alias.scope !2
  %65 = getelementptr i8, i8* %62, i64 16
  %66 = bitcast i8* %65 to <16 x i8>*
  %67 = load <16 x i8>, <16 x i8>* %66, align 1, !alias.scope !2
  %68 = bitcast i8* %61 to <16 x i8>*
  store <16 x i8> %64, <16 x i8>* %68, align 1, !alias.scope !5, !noalias !2
  %69 = getelementptr i8, i8* %61, i64 16
  %70 = bitcast i8* %69 to <16 x i8>*
  store <16 x i8> %67, <16 x i8>* %70, align 1, !alias.scope !5, !noalias !2
  %71 = or i64 %59, 32
  %72 = getelementptr i8, i8* %32, i64 %71
  %73 = getelementptr i8, i8* %21, i64 %71
  %74 = bitcast i8* %73 to <16 x i8>*
  %75 = load <16 x i8>, <16 x i8>* %74, align 1, !alias.scope !2
  %76 = getelementptr i8, i8* %73, i64 16
  %77 = bitcast i8* %76 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 1, !alias.scope !2
  %79 = bitcast i8* %72 to <16 x i8>*
  store <16 x i8> %75, <16 x i8>* %79, align 1, !alias.scope !5, !noalias !2
  %80 = getelementptr i8, i8* %72, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  store <16 x i8> %78, <16 x i8>* %81, align 1, !alias.scope !5, !noalias !2
  %82 = or i64 %59, 64
  %83 = getelementptr i8, i8* %32, i64 %82
  %84 = getelementptr i8, i8* %21, i64 %82
  %85 = bitcast i8* %84 to <16 x i8>*
  %86 = load <16 x i8>, <16 x i8>* %85, align 1, !alias.scope !2
  %87 = getelementptr i8, i8* %84, i64 16
  %88 = bitcast i8* %87 to <16 x i8>*
  %89 = load <16 x i8>, <16 x i8>* %88, align 1, !alias.scope !2
  %90 = bitcast i8* %83 to <16 x i8>*
  store <16 x i8> %86, <16 x i8>* %90, align 1, !alias.scope !5, !noalias !2
  %91 = getelementptr i8, i8* %83, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  store <16 x i8> %89, <16 x i8>* %92, align 1, !alias.scope !5, !noalias !2
  %93 = or i64 %59, 96
  %94 = getelementptr i8, i8* %32, i64 %93
  %95 = getelementptr i8, i8* %21, i64 %93
  %96 = bitcast i8* %95 to <16 x i8>*
  %97 = load <16 x i8>, <16 x i8>* %96, align 1, !alias.scope !2
  %98 = getelementptr i8, i8* %95, i64 16
  %99 = bitcast i8* %98 to <16 x i8>*
  %100 = load <16 x i8>, <16 x i8>* %99, align 1, !alias.scope !2
  %101 = bitcast i8* %94 to <16 x i8>*
  store <16 x i8> %97, <16 x i8>* %101, align 1, !alias.scope !5, !noalias !2
  %102 = getelementptr i8, i8* %94, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  store <16 x i8> %100, <16 x i8>* %103, align 1, !alias.scope !5, !noalias !2
  %104 = add i64 %59, 128
  %105 = add i64 %60, -4
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %58, !llvm.loop !7

107:                                              ; preds = %58, %47
  %108 = phi i64 [ 0, %47 ], [ %104, %58 ]
  %109 = icmp eq i64 %54, 0
  br i1 %109, label %126, label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %123, %110 ], [ %108, %107 ]
  %112 = phi i64 [ %124, %110 ], [ %54, %107 ]
  %113 = getelementptr i8, i8* %32, i64 %111
  %114 = getelementptr i8, i8* %21, i64 %111
  %115 = bitcast i8* %114 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 1, !alias.scope !2
  %117 = getelementptr i8, i8* %114, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1, !alias.scope !2
  %120 = bitcast i8* %113 to <16 x i8>*
  store <16 x i8> %116, <16 x i8>* %120, align 1, !alias.scope !5, !noalias !2
  %121 = getelementptr i8, i8* %113, i64 16
  %122 = bitcast i8* %121 to <16 x i8>*
  store <16 x i8> %119, <16 x i8>* %122, align 1, !alias.scope !5, !noalias !2
  %123 = add i64 %111, 32
  %124 = add i64 %112, -1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %110, !llvm.loop !9

126:                                              ; preds = %110, %107
  %127 = icmp eq i64 %48, %36
  br i1 %127, label %138, label %128

128:                                              ; preds = %126, %38, %31
  %129 = phi i8* [ %32, %38 ], [ %32, %31 ], [ %49, %126 ]
  %130 = phi i8* [ %21, %38 ], [ %21, %31 ], [ %50, %126 ]
  br label %131

131:                                              ; preds = %128, %131
  %132 = phi i8* [ %136, %131 ], [ %129, %128 ]
  %133 = phi i8* [ %135, %131 ], [ %130, %128 ]
  %134 = load i8, i8* %133, align 1
  store i8 %134, i8* %132, align 1
  %135 = getelementptr inbounds i8, i8* %133, i64 1
  %136 = getelementptr inbounds i8, i8* %132, i64 1
  %137 = icmp eq i8* %135, %2
  br i1 %137, label %138, label %131, !llvm.loop !11

138:                                              ; preds = %131, %126
  %139 = phi i8* [ %49, %126 ], [ %136, %131 ]
  %140 = ptrtoint i8* %139 to i64
  br label %141

141:                                              ; preds = %28, %138
  %142 = phi i64 [ %29, %28 ], [ %140, %138 ]
  store i64 %142, i64* %17, align 8
  br label %268

143:                                              ; preds = %27
  %144 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %144, i8** %16, align 8
  br label %268

145:                                              ; preds = %3
  %146 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %147 = icmp eq i64 %11, 0
  br i1 %147, label %152, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %150 = bitcast i8** %149 to i64*
  store i64 %11, i64* %150, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #10
  %151 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 24, i1 false) #9
  br label %152

152:                                              ; preds = %145, %148
  %153 = phi i64 [ %9, %145 ], [ 0, %148 ]
  %154 = icmp slt i64 %6, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %152
  %156 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %156) #11
  unreachable

157:                                              ; preds = %152
  %158 = icmp ult i64 %153, 4611686018427387903
  br i1 %158, label %159, label %163

159:                                              ; preds = %157
  %160 = shl i64 %153, 1
  %161 = icmp ult i64 %160, %6
  %162 = select i1 %161, i64 %6, i64 %160
  br label %163

163:                                              ; preds = %159, %157
  %164 = phi i64 [ %162, %159 ], [ 9223372036854775807, %157 ]
  %165 = tail call i8* @_Znwm(i64 %164) #10
  %166 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store i8* %165, i8** %166, align 8
  store i8* %165, i8** %146, align 8
  %167 = getelementptr inbounds i8, i8* %165, i64 %164
  store i8* %167, i8** %7, align 8
  %168 = bitcast i8** %166 to i64*
  %169 = icmp eq i8* %1, %2
  br i1 %169, label %265, label %170

170:                                              ; preds = %163
  %171 = ptrtoint i8* %2 to i64
  %172 = sub i64 %171, %4
  %173 = icmp ult i64 %172, 32
  br i1 %173, label %255, label %174

174:                                              ; preds = %170
  %175 = and i64 %172, -32
  %176 = getelementptr i8, i8* %165, i64 %175
  %177 = getelementptr i8, i8* %1, i64 %175
  %178 = add i64 %175, -32
  %179 = lshr exact i64 %178, 5
  %180 = add nuw nsw i64 %179, 1
  %181 = and i64 %180, 3
  %182 = icmp ult i64 %178, 96
  br i1 %182, label %234, label %183

183:                                              ; preds = %174
  %184 = sub nsw i64 %180, %181
  br label %185

185:                                              ; preds = %185, %183
  %186 = phi i64 [ 0, %183 ], [ %231, %185 ]
  %187 = phi i64 [ %184, %183 ], [ %232, %185 ]
  %188 = getelementptr i8, i8* %165, i64 %186
  %189 = getelementptr i8, i8* %1, i64 %186
  %190 = bitcast i8* %189 to <16 x i8>*
  %191 = load <16 x i8>, <16 x i8>* %190, align 1
  %192 = getelementptr i8, i8* %189, i64 16
  %193 = bitcast i8* %192 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1
  %195 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %191, <16 x i8>* %195, align 1
  %196 = getelementptr i8, i8* %188, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %197, align 1
  %198 = or i64 %186, 32
  %199 = getelementptr i8, i8* %165, i64 %198
  %200 = getelementptr i8, i8* %1, i64 %198
  %201 = bitcast i8* %200 to <16 x i8>*
  %202 = load <16 x i8>, <16 x i8>* %201, align 1
  %203 = getelementptr i8, i8* %200, i64 16
  %204 = bitcast i8* %203 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1
  %206 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %202, <16 x i8>* %206, align 1
  %207 = getelementptr i8, i8* %199, i64 16
  %208 = bitcast i8* %207 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %208, align 1
  %209 = or i64 %186, 64
  %210 = getelementptr i8, i8* %165, i64 %209
  %211 = getelementptr i8, i8* %1, i64 %209
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1
  %214 = getelementptr i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1
  %217 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %217, align 1
  %218 = getelementptr i8, i8* %210, i64 16
  %219 = bitcast i8* %218 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %219, align 1
  %220 = or i64 %186, 96
  %221 = getelementptr i8, i8* %165, i64 %220
  %222 = getelementptr i8, i8* %1, i64 %220
  %223 = bitcast i8* %222 to <16 x i8>*
  %224 = load <16 x i8>, <16 x i8>* %223, align 1
  %225 = getelementptr i8, i8* %222, i64 16
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1
  %228 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %224, <16 x i8>* %228, align 1
  %229 = getelementptr i8, i8* %221, i64 16
  %230 = bitcast i8* %229 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %230, align 1
  %231 = add i64 %186, 128
  %232 = add i64 %187, -4
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %185, !llvm.loop !12

234:                                              ; preds = %185, %174
  %235 = phi i64 [ 0, %174 ], [ %231, %185 ]
  %236 = icmp eq i64 %181, 0
  br i1 %236, label %253, label %237

237:                                              ; preds = %234, %237
  %238 = phi i64 [ %250, %237 ], [ %235, %234 ]
  %239 = phi i64 [ %251, %237 ], [ %181, %234 ]
  %240 = getelementptr i8, i8* %165, i64 %238
  %241 = getelementptr i8, i8* %1, i64 %238
  %242 = bitcast i8* %241 to <16 x i8>*
  %243 = load <16 x i8>, <16 x i8>* %242, align 1
  %244 = getelementptr i8, i8* %241, i64 16
  %245 = bitcast i8* %244 to <16 x i8>*
  %246 = load <16 x i8>, <16 x i8>* %245, align 1
  %247 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %243, <16 x i8>* %247, align 1
  %248 = getelementptr i8, i8* %240, i64 16
  %249 = bitcast i8* %248 to <16 x i8>*
  store <16 x i8> %246, <16 x i8>* %249, align 1
  %250 = add i64 %238, 32
  %251 = add i64 %239, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %237, !llvm.loop !13

253:                                              ; preds = %237, %234
  %254 = icmp eq i64 %172, %175
  br i1 %254, label %265, label %255

255:                                              ; preds = %253, %170
  %256 = phi i8* [ %165, %170 ], [ %176, %253 ]
  %257 = phi i8* [ %1, %170 ], [ %177, %253 ]
  br label %258

258:                                              ; preds = %255, %258
  %259 = phi i8* [ %263, %258 ], [ %256, %255 ]
  %260 = phi i8* [ %262, %258 ], [ %257, %255 ]
  %261 = load i8, i8* %260, align 1
  store i8 %261, i8* %259, align 1
  %262 = getelementptr inbounds i8, i8* %260, i64 1
  %263 = getelementptr inbounds i8, i8* %259, i64 1
  %264 = icmp eq i8* %262, %2
  br i1 %264, label %265, label %258, !llvm.loop !14

265:                                              ; preds = %258, %253, %163
  %266 = phi i8* [ %165, %163 ], [ %176, %253 ], [ %263, %258 ]
  %267 = ptrtoint i8* %266 to i64
  store i64 %267, i64* %168, align 8
  br label %268

268:                                              ; preds = %141, %143, %265
  ret void
}

declare %"class.media::mp4::BoxReader"* @_ZN5media3mp49BoxReader22ReadConcatentatedBoxesEPKhmPNS_8MediaLogE(i8*, i64, %"class.media::MediaLog"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5media8MediaLogD2Ev(%"class.media::MediaLog"*) unnamed_addr #3

declare void @_ZN5media8MediaLogC2Ev(%"class.media::MediaLog"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media12NullMediaLogD0Ev(%"class.media::NullMediaLog"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.media::NullMediaLog", %"class.media::NullMediaLog"* %0, i64 0, i32 0
  tail call void @_ZN5media8MediaLogD2Ev(%"class.media::MediaLog"* %2) #9
  %3 = bitcast %"class.media::NullMediaLog"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

declare void @_ZN5media8MediaLog5CloneEv() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media12NullMediaLog18AddLogRecordLockedENSt3__110unique_ptrINS_14MediaLogRecordENS1_14default_deleteIS3_EEEE(%"class.media::NullMediaLog"*, %"struct.media::MediaLogRecord"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.media::MediaLogRecord"* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.media::MediaLogRecord", %"struct.media::MediaLogRecord"* %1, i64 0, i32 2, i32 0
  tail call void @_ZN4base5ValueD2Ev(%"class.base::Value"* %5) #9
  %6 = bitcast %"struct.media::MediaLogRecord"* %1 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %2, %4
  ret void
}

declare void @_ZN5media8MediaLog31OnWebMediaPlayerDestroyedLockedEv(%"class.media::MediaLog"*) unnamed_addr #2

declare void @_ZN5media8MediaLog21GetErrorMessageLockedEv(%"class.std::__1::basic_string"* sret, %"class.media::MediaLog"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5media3mp49BoxReader23ReadAllChildrenInternalINS0_30ProtectionSystemSpecificHeaderEEEbPNSt3__16vectorIT_NS4_9allocatorIS6_EEEEb(%"class.media::mp4::BoxReader"*, %"class.std::__1::vector.29"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.media::mp4::BoxReader", align 8
  %5 = alloca %"struct.media::mp4::ProtectionSystemSpecificHeader", align 8
  %6 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 10
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 8, !range !16
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %61, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 2
  %13 = bitcast %"class.media::mp4::BoxReader"* %4 to i8*
  %14 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 11
  %17 = bitcast %"struct.media::mp4::ProtectionSystemSpecificHeader"* %5 to i8*
  %18 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %4, i64 0, i32 5
  %19 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %1, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"struct.media::mp4::ProtectionSystemSpecificHeader"** %19 to i64*
  %22 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %4, i64 0, i32 2
  %23 = bitcast %"struct.media::mp4::ProtectionSystemSpecificHeader"* %5 to i8*
  br label %24

24:                                               ; preds = %10, %58
  %25 = load i64, i64* %11, align 8
  %26 = load i64, i64* %12, align 8
  %27 = icmp ugt i64 %26, %25
  br i1 %27, label %28, label %61

28:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 88, i1 false)
  %29 = load i8*, i8** %14, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %25
  %31 = sub i64 %26, %25
  %32 = load %"class.media::MediaLog"*, %"class.media::MediaLog"** %15, align 8
  %33 = load i8, i8* %16, align 1, !range !16
  %34 = icmp ne i8 %33, 0
  call void @_ZN5media3mp49BoxReaderC1EPKhmPNS_8MediaLogEb(%"class.media::mp4::BoxReader"* nonnull %4, i8* %30, i64 %31, %"class.media::MediaLog"* %32, i1 zeroext %34) #9
  %35 = call i32 @_ZN5media3mp49BoxReader10ReadHeaderEv(%"class.media::mp4::BoxReader"* nonnull %4) #9
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  call void @_ZN5media3mp430ProtectionSystemSpecificHeaderC1Ev(%"struct.media::mp4::ProtectionSystemSpecificHeader"* nonnull %5) #9
  br i1 %2, label %38, label %42

38:                                               ; preds = %37
  %39 = load i32, i32* %18, align 4
  %40 = call i32 @_ZNK5media3mp430ProtectionSystemSpecificHeader7BoxTypeEv(%"struct.media::mp4::ProtectionSystemSpecificHeader"* nonnull %5) #9
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %42, label %56

42:                                               ; preds = %37, %38
  %43 = call zeroext i1 @_ZN5media3mp430ProtectionSystemSpecificHeader5ParseEPNS0_9BoxReaderE(%"struct.media::mp4::ProtectionSystemSpecificHeader"* nonnull %5, %"class.media::mp4::BoxReader"* nonnull %4) #9
  br i1 %43, label %44, label %56

44:                                               ; preds = %42
  %45 = load %"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"struct.media::mp4::ProtectionSystemSpecificHeader"** %19, align 8
  %46 = load %"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"struct.media::mp4::ProtectionSystemSpecificHeader"** %20, align 8
  %47 = icmp eq %"struct.media::mp4::ProtectionSystemSpecificHeader"* %45, %46
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  call void @_ZN5media3mp430ProtectionSystemSpecificHeaderC1ERKS1_(%"struct.media::mp4::ProtectionSystemSpecificHeader"* %45, %"struct.media::mp4::ProtectionSystemSpecificHeader"* nonnull dereferenceable(32) %5) #9
  %49 = getelementptr inbounds %"struct.media::mp4::ProtectionSystemSpecificHeader", %"struct.media::mp4::ProtectionSystemSpecificHeader"* %45, i64 1
  %50 = ptrtoint %"struct.media::mp4::ProtectionSystemSpecificHeader"* %49 to i64
  store i64 %50, i64* %21, align 8
  br label %52

51:                                               ; preds = %44
  call void @_ZNSt3__16vectorIN5media3mp430ProtectionSystemSpecificHeaderENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.29"* %1, %"struct.media::mp4::ProtectionSystemSpecificHeader"* nonnull dereferenceable(32) %5) #9
  br label %52

52:                                               ; preds = %48, %51
  %53 = load i64, i64* %22, align 8
  %54 = load i64, i64* %11, align 8
  %55 = add i64 %54, %53
  store i64 %55, i64* %11, align 8
  br label %56

56:                                               ; preds = %42, %38, %52
  %57 = phi i32 [ 0, %52 ], [ 1, %38 ], [ 1, %42 ]
  call void @_ZN5media3mp430ProtectionSystemSpecificHeaderD1Ev(%"struct.media::mp4::ProtectionSystemSpecificHeader"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #9
  br label %58

58:                                               ; preds = %28, %56
  %59 = phi i32 [ %57, %56 ], [ 1, %28 ]
  call void @_ZN5media3mp49BoxReaderD1Ev(%"class.media::mp4::BoxReader"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %13) #9
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %24, label %61

61:                                               ; preds = %24, %58, %3
  %62 = phi i1 [ false, %3 ], [ true, %24 ], [ false, %58 ]
  ret i1 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5media3mp49BoxReaderC1EPKhmPNS_8MediaLogEb(%"class.media::mp4::BoxReader"*, i8*, i64, %"class.media::MediaLog"*, i1 zeroext) unnamed_addr #2

declare i32 @_ZN5media3mp49BoxReader10ReadHeaderEv(%"class.media::mp4::BoxReader"*) local_unnamed_addr #2

declare void @_ZN5media3mp430ProtectionSystemSpecificHeaderC1Ev(%"struct.media::mp4::ProtectionSystemSpecificHeader"*) unnamed_addr #2

declare i32 @_ZNK5media3mp430ProtectionSystemSpecificHeader7BoxTypeEv(%"struct.media::mp4::ProtectionSystemSpecificHeader"*) unnamed_addr #2

declare zeroext i1 @_ZN5media3mp430ProtectionSystemSpecificHeader5ParseEPNS0_9BoxReaderE(%"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"class.media::mp4::BoxReader"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5media3mp430ProtectionSystemSpecificHeaderD1Ev(%"struct.media::mp4::ProtectionSystemSpecificHeader"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5media3mp49BoxReaderD1Ev(%"class.media::mp4::BoxReader"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5media3mp430ProtectionSystemSpecificHeaderENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.29"*, %"struct.media::mp4::ProtectionSystemSpecificHeader"* dereferenceable(32)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.media::mp4::ProtectionSystemSpecificHeader"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.media::mp4::ProtectionSystemSpecificHeader"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"struct.media::mp4::ProtectionSystemSpecificHeader"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.media::mp4::ProtectionSystemSpecificHeader"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.media::mp4::ProtectionSystemSpecificHeader", %"struct.media::mp4::ProtectionSystemSpecificHeader"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.media::mp4::ProtectionSystemSpecificHeader", %"struct.media::mp4::ProtectionSystemSpecificHeader"* %36, i64 %35
  %39 = ptrtoint %"struct.media::mp4::ProtectionSystemSpecificHeader"* %38 to i64
  tail call void @_ZN5media3mp430ProtectionSystemSpecificHeaderC1ERKS1_(%"struct.media::mp4::ProtectionSystemSpecificHeader"* %37, %"struct.media::mp4::ProtectionSystemSpecificHeader"* dereferenceable(32) %1) #9
  %40 = getelementptr inbounds %"struct.media::mp4::ProtectionSystemSpecificHeader", %"struct.media::mp4::ProtectionSystemSpecificHeader"* %37, i64 1
  %41 = ptrtoint %"struct.media::mp4::ProtectionSystemSpecificHeader"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"struct.media::mp4::ProtectionSystemSpecificHeader"** %42, align 8
  %44 = load %"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"struct.media::mp4::ProtectionSystemSpecificHeader"** %3, align 8
  %45 = icmp eq %"struct.media::mp4::ProtectionSystemSpecificHeader"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.media::mp4::ProtectionSystemSpecificHeader"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"struct.media::mp4::ProtectionSystemSpecificHeader"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"struct.media::mp4::ProtectionSystemSpecificHeader"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.media::mp4::ProtectionSystemSpecificHeader", %"struct.media::mp4::ProtectionSystemSpecificHeader"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.media::mp4::ProtectionSystemSpecificHeader", %"struct.media::mp4::ProtectionSystemSpecificHeader"* %50, i64 -1
  tail call void @_ZN5media3mp430ProtectionSystemSpecificHeaderC1ERKS1_(%"struct.media::mp4::ProtectionSystemSpecificHeader"* %51, %"struct.media::mp4::ProtectionSystemSpecificHeader"* dereferenceable(32) %52) #9
  %53 = icmp eq %"struct.media::mp4::ProtectionSystemSpecificHeader"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"struct.media::mp4::ProtectionSystemSpecificHeader"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"struct.media::mp4::ProtectionSystemSpecificHeader"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"struct.media::mp4::ProtectionSystemSpecificHeader"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"struct.media::mp4::ProtectionSystemSpecificHeader"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"struct.media::mp4::ProtectionSystemSpecificHeader"*
  %63 = icmp eq %"struct.media::mp4::ProtectionSystemSpecificHeader"* %58, %62
  br i1 %63, label %71, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"struct.media::mp4::ProtectionSystemSpecificHeader"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"struct.media::mp4::ProtectionSystemSpecificHeader", %"struct.media::mp4::ProtectionSystemSpecificHeader"* %65, i64 -1
  %67 = bitcast %"struct.media::mp4::ProtectionSystemSpecificHeader"* %66 to void (%"struct.media::mp4::ProtectionSystemSpecificHeader"*)***
  %68 = load void (%"struct.media::mp4::ProtectionSystemSpecificHeader"*)**, void (%"struct.media::mp4::ProtectionSystemSpecificHeader"*)*** %67, align 8
  %69 = load void (%"struct.media::mp4::ProtectionSystemSpecificHeader"*)*, void (%"struct.media::mp4::ProtectionSystemSpecificHeader"*)** %68, align 8
  tail call void %69(%"struct.media::mp4::ProtectionSystemSpecificHeader"* %66) #9
  %70 = icmp eq %"struct.media::mp4::ProtectionSystemSpecificHeader"* %66, %62
  br i1 %70, label %71, label %64

71:                                               ; preds = %64, %57
  %72 = icmp eq i64 %60, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %74) #10
  br label %75

75:                                               ; preds = %71, %73
  ret void
}

declare void @_ZN5media3mp430ProtectionSystemSpecificHeaderC1ERKS1_(%"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"struct.media::mp4::ProtectionSystemSpecificHeader"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5media3mp49BoxReader23ReadAllChildrenInternalINS0_34FullProtectionSystemSpecificHeaderEEEbPNSt3__16vectorIT_NS4_9allocatorIS6_EEEEb(%"class.media::mp4::BoxReader"*, %"class.std::__1::vector.1"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.media::mp4::BoxReader", align 8
  %5 = alloca %"struct.media::mp4::FullProtectionSystemSpecificHeader", align 8
  %6 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 10
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 8, !range !16
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 2
  %13 = bitcast %"class.media::mp4::BoxReader"* %4 to i8*
  %14 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %0, i64 0, i32 11
  %17 = bitcast %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %5 to i8*
  %18 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %4, i64 0, i32 5
  %19 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %19 to i64*
  %22 = getelementptr inbounds %"class.media::mp4::BoxReader", %"class.media::mp4::BoxReader"* %4, i64 0, i32 2
  br label %23

23:                                               ; preds = %10, %57
  %24 = load i64, i64* %11, align 8
  %25 = load i64, i64* %12, align 8
  %26 = icmp ugt i64 %25, %24
  br i1 %26, label %27, label %60

27:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 88, i1 false)
  %28 = load i8*, i8** %14, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %24
  %30 = sub i64 %25, %24
  %31 = load %"class.media::MediaLog"*, %"class.media::MediaLog"** %15, align 8
  %32 = load i8, i8* %16, align 1, !range !16
  %33 = icmp ne i8 %32, 0
  call void @_ZN5media3mp49BoxReaderC1EPKhmPNS_8MediaLogEb(%"class.media::mp4::BoxReader"* nonnull %4, i8* %29, i64 %30, %"class.media::MediaLog"* %31, i1 zeroext %33) #9
  %34 = call i32 @_ZN5media3mp49BoxReader10ReadHeaderEv(%"class.media::mp4::BoxReader"* nonnull %4) #9
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %57

36:                                               ; preds = %27
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 80, i1 false)
  call void @_ZN5media3mp434FullProtectionSystemSpecificHeaderC1Ev(%"struct.media::mp4::FullProtectionSystemSpecificHeader"* nonnull %5) #9
  br i1 %2, label %37, label %41

37:                                               ; preds = %36
  %38 = load i32, i32* %18, align 4
  %39 = call i32 @_ZNK5media3mp434FullProtectionSystemSpecificHeader7BoxTypeEv(%"struct.media::mp4::FullProtectionSystemSpecificHeader"* nonnull %5) #9
  %40 = icmp eq i32 %38, %39
  br i1 %40, label %41, label %55

41:                                               ; preds = %36, %37
  %42 = call zeroext i1 @_ZN5media3mp434FullProtectionSystemSpecificHeader5ParseEPNS0_9BoxReaderE(%"struct.media::mp4::FullProtectionSystemSpecificHeader"* nonnull %5, %"class.media::mp4::BoxReader"* nonnull %4) #9
  br i1 %42, label %43, label %55

43:                                               ; preds = %41
  %44 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %19, align 8
  %45 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %20, align 8
  %46 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %44, %45
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  call void @_ZN5media3mp434FullProtectionSystemSpecificHeaderC1ERKS1_(%"struct.media::mp4::FullProtectionSystemSpecificHeader"* %44, %"struct.media::mp4::FullProtectionSystemSpecificHeader"* nonnull dereferenceable(80) %5) #9
  %48 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %44, i64 1
  %49 = ptrtoint %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %48 to i64
  store i64 %49, i64* %21, align 8
  br label %51

50:                                               ; preds = %43
  call void @_ZNSt3__16vectorIN5media3mp434FullProtectionSystemSpecificHeaderENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.1"* %1, %"struct.media::mp4::FullProtectionSystemSpecificHeader"* nonnull dereferenceable(80) %5) #9
  br label %51

51:                                               ; preds = %47, %50
  %52 = load i64, i64* %22, align 8
  %53 = load i64, i64* %11, align 8
  %54 = add i64 %53, %52
  store i64 %54, i64* %11, align 8
  br label %55

55:                                               ; preds = %41, %37, %51
  %56 = phi i32 [ 0, %51 ], [ 1, %37 ], [ 1, %41 ]
  call void @_ZN5media3mp434FullProtectionSystemSpecificHeaderD1Ev(%"struct.media::mp4::FullProtectionSystemSpecificHeader"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %17) #9
  br label %57

57:                                               ; preds = %27, %55
  %58 = phi i32 [ %56, %55 ], [ 1, %27 ]
  call void @_ZN5media3mp49BoxReaderD1Ev(%"class.media::mp4::BoxReader"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %13) #9
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %23, label %60

60:                                               ; preds = %23, %57, %3
  %61 = phi i1 [ false, %3 ], [ true, %23 ], [ false, %57 ]
  ret i1 %61
}

declare void @_ZN5media3mp434FullProtectionSystemSpecificHeaderC1Ev(%"struct.media::mp4::FullProtectionSystemSpecificHeader"*) unnamed_addr #2

declare i32 @_ZNK5media3mp434FullProtectionSystemSpecificHeader7BoxTypeEv(%"struct.media::mp4::FullProtectionSystemSpecificHeader"*) unnamed_addr #2

declare zeroext i1 @_ZN5media3mp434FullProtectionSystemSpecificHeader5ParseEPNS0_9BoxReaderE(%"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"class.media::mp4::BoxReader"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5media3mp434FullProtectionSystemSpecificHeaderD1Ev(%"struct.media::mp4::FullProtectionSystemSpecificHeader"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5media3mp434FullProtectionSystemSpecificHeaderENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.1"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"* dereferenceable(80)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 80
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 230584300921369395
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 80
  %20 = icmp ult i64 %19, 115292150460684697
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 230584300921369395, %14 ]
  %28 = mul i64 %27, 80
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.media::mp4::FullProtectionSystemSpecificHeader"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.media::mp4::FullProtectionSystemSpecificHeader"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %33, i64 %32
  %36 = ptrtoint %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %35 to i64
  tail call void @_ZN5media3mp434FullProtectionSystemSpecificHeaderC1ERKS1_(%"struct.media::mp4::FullProtectionSystemSpecificHeader"* %34, %"struct.media::mp4::FullProtectionSystemSpecificHeader"* dereferenceable(80) %1) #9
  %37 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %34, i64 1
  %38 = ptrtoint %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %39, align 8
  %41 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %3, align 8
  %42 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.media::mp4::FullProtectionSystemSpecificHeader"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.media::mp4::FullProtectionSystemSpecificHeader"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %47, i64 -1
  tail call void @_ZN5media3mp434FullProtectionSystemSpecificHeaderC1ERKS1_(%"struct.media::mp4::FullProtectionSystemSpecificHeader"* %48, %"struct.media::mp4::FullProtectionSystemSpecificHeader"* dereferenceable(80) %49) #9
  %50 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.media::mp4::FullProtectionSystemSpecificHeader"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.media::mp4::FullProtectionSystemSpecificHeader"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.media::mp4::FullProtectionSystemSpecificHeader"*
  %60 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %55, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.media::mp4::FullProtectionSystemSpecificHeader"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.media::mp4::FullProtectionSystemSpecificHeader", %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %62, i64 -1
  %64 = bitcast %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %63 to void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)***
  %65 = load void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)**, void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)*** %64, align 8
  %66 = load void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)*, void (%"struct.media::mp4::FullProtectionSystemSpecificHeader"*)** %65, align 8
  tail call void %66(%"struct.media::mp4::FullProtectionSystemSpecificHeader"* %63) #9
  %67 = icmp eq %"struct.media::mp4::FullProtectionSystemSpecificHeader"* %63, %59
  br i1 %67, label %68, label %61

68:                                               ; preds = %61, %54
  %69 = icmp eq i64 %57, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN5media3mp434FullProtectionSystemSpecificHeaderC1ERKS1_(%"struct.media::mp4::FullProtectionSystemSpecificHeader"*, %"struct.media::mp4::FullProtectionSystemSpecificHeader"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #9
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #9
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #10
  %46 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #9
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #11
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #10
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #9
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = distinct !{!12, !8}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !15, !8}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
!16 = !{i8 0, i8 2}
