; ModuleID = '../../third_party/skia/src/core/SkSpecialSurface.cpp'
source_filename = "../../third_party/skia/src/core/SkSpecialSurface.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.1, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.3" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.31, i32, i32 }
%class.sk_sp.31 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkM44 = type { [16 x float] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.47" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.43" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.40, %class.SkSpan.41, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.39" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.39" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.40 = type { i32*, i64 }
%class.SkSpan.41 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.42, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.42 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.46, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.46 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.54, %struct.SkRect, i32, %"struct.std::__1::atomic.17" }
%class.SkNVRefCnt.54 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i32 }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { i16*, i16*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { i16* }
%class.sk_sp.15 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSpecialSurface_Base = type { %class.SkSpecialSurface.base, %"class.std::__1::unique_ptr.9" }
%class.SkSpecialSurface.base = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.SkCanvas* }
%class.sk_sp.33 = type { %class.SkSpecialSurface* }
%class.SkBitmap = type { %class.sk_sp.16, %class.SkPixmap, %class.sk_sp.32 }
%class.sk_sp.16 = type { %class.SkPixelRef* }
%class.SkPixelRef = type <{ %class.SkRefCnt.base, i32, i32, [4 x i8], i8*, i64, %"struct.std::__1::atomic.17", [4 x i8], %"class.SkIDChangeListener::List", %"struct.std::__1::atomic.27", i8, [6 x i8] }>
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.27", [3 x i8] }
%"struct.std::__1::atomic.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i8 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.32 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkSpecialSurface_Raster = type { %class.SkSpecialSurface_Base, %class.SkBitmap }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.56", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.224" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.55 }
%class.sk_sp.55 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.66, %class.SkTArray.75, %class.SkTArray.77, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.59"*, i64 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.77, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.78 }
%class.sk_sp.78 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.60" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.66 = type { %class.SkTHashTable.67 }
%class.SkTHashTable.67 = type { i32, i32, %class.SkAutoTArray.68 }
%class.SkAutoTArray.68 = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.274" }
%"struct.std::__1::pair.274" = type { i32, %class.SkTArray.275* }
%class.SkTArray.275 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.75 = type { %"class.std::__1::unique_ptr.76"*, i64 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.275, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.77 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.91 }
%class.SkFibBlockSizes.91 = type { i32 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.98, %class.SkTArray.107, %class.GrOpsTask*, %class.SkSTArray.189, %class.SkSTArray.192, %"class.std::__1::unique_ptr.194", %class.sk_sp.210, %class.GrTokenTracker, i8, i8, %class.SkTArray.211, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.98 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.99", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.102, i8, [7 x i8] }>
%class.sk_sp.102 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.103, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.103 = type { i32 }
%class.SkTArray.107 = type { %class.sk_sp.108*, i64 }
%class.sk_sp.108 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.156, i32, i32, %class.SkSTArray.163, %class.SkSTArray.163, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.109 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.109 = type { %class.sk_sp.110*, i64 }
%class.sk_sp.110 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.111, %class.sk_sp.112, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.151" }
%class.SkNVRefCnt.111 = type { %"struct.std::__1::atomic" }
%class.sk_sp.112 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.115 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.113, i8* }
%class.sk_sp.113 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.114, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.114 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.115 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.116, void (i8*)*, i8* }
%class.SkNVRefCnt.116 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.117, i32, [4 x i8] }
%union.anon.117 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.112, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.148, %class.sk_sp.150, %class.sk_sp.150 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray.119, %class.SkTMultiMap, %class.SkTDynamicHash.128, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.139, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray.119 }
%class.SkTDArray.119 = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.120 }
%class.SkTHashTable.120 = type { i32, i32, %class.SkAutoTArray.121 }
%class.SkAutoTArray.121 = type { %"class.std::__1::unique_ptr.122" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.128 = type { %class.SkTHashTable.129 }
%class.SkTHashTable.129 = type { i32, i32, %class.SkAutoTArray.130 }
%class.SkAutoTArray.130 = type { %"class.std::__1::unique_ptr.131" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.137, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.137 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.138, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.138 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.139 = type { %class.SkTHashTable.140 }
%class.SkTHashTable.140 = type { i32, i32, %class.SkAutoTArray.141 }
%class.SkAutoTArray.141 = type { %"class.std::__1::unique_ptr.142" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.148 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.149, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.149 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.150 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.151" = type { %"struct.std::__1::__atomic_base.152" }
%"struct.std::__1::__atomic_base.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i64 }
%class.SkTArray.156 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.157", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.163 = type { %class.SkAlignedSTStorage.164, %class.SkTArray.165 }
%class.SkAlignedSTStorage.164 = type { [8 x i8] }
%class.SkTArray.165 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.166, %class.sk_sp.186, %class.SkTArray.188, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.166 = type { %class.SkAlignedSTStorage.167, %class.SkTArray.168 }
%class.SkAlignedSTStorage.167 = type { [2000 x i8] }
%class.SkTArray.168 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.169", %class.GrOp* }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.169", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.110, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.177" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.175 }
%union.anon.175 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.176, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.176 = type { i32 }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.180, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.180 = type { %class.SkAlignedSTStorage.181, %class.SkTArray.182 }
%class.SkAlignedSTStorage.181 = type { [8 x i8] }
%class.SkTArray.182 = type { %"class.std::__1::unique_ptr.177"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.186 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.187, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.187 = type { %"struct.std::__1::atomic" }
%class.SkTArray.188 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.189 = type { %class.SkAlignedSTStorage.190, %class.SkTArray.191 }
%class.SkAlignedSTStorage.190 = type { [32 x i8] }
%class.SkTArray.191 = type { i32*, i64 }
%class.SkSTArray.192 = type { %class.SkAlignedSTStorage.193, %class.SkTArray.107 }
%class.SkAlignedSTStorage.193 = type { [32 x i8] }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.197, %"class.std::__1::unique_ptr.201", %class.GrPathRenderer* }
%class.SkSTArray.197 = type { %class.SkAlignedSTStorage.198, %class.SkTArray.199 }
%class.SkAlignedSTStorage.198 = type { [64 x i8] }
%class.SkTArray.199 = type { %class.sk_sp.200*, i64 }
%class.sk_sp.200 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.210 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.211 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.212, i32, %class.GrRenderTask** }
%class.SkTHashMap.212 = type { %class.SkTHashTable.213 }
%class.SkTHashTable.213 = type { i32, i32, %class.SkAutoTArray.214 }
%class.SkAutoTArray.214 = type { %"class.std::__1::unique_ptr.215" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %class.GrProxyProvider* }
%class.sk_sp.230 = type { %class.SkGpuDevice* }
%class.SkGpuDevice = type { %class.SkBaseGpuDevice, %class.sk_sp.231, %"class.std::__1::unique_ptr.232", [8 x i8], %class.GrClipStack }
%class.SkBaseGpuDevice = type { %class.SkBaseDevice }
%class.sk_sp.231 = type { %class.GrRecordingContext* }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %class.GrSurfaceDrawContext* }
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.236, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrColorInfo = type { %class.sk_sp.31, %class.sk_sp.235, i32, i32 }
%class.sk_sp.235 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.sk_sp.236 = type { %class.GrOpsTask* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.237, %class.SkAutoTMalloc }
%class.SkAutoTArray.237 = type { %"class.std::__1::unique_ptr.238" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.241 }
%union.anon.241 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.242, i32, %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", i8, i8 }>
%class.sk_sp.242 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.243, %struct.SkRect, [4 x i8], %class.SkTDArray.244, %class.SkTDArray.245, %class.SkTDArray.246, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.243 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.244 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.245 = type { i8*, i32, i32 }
%class.SkTDArray.246 = type { float*, i32, i32 }
%struct.SkPackedGlyphID = type { i32 }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.250, %class.SkSTArray.255, %class.SkSTArray.258 }
%class.SkZip.250 = type { %"class.std::__1::tuple.251", i64 }
%"class.std::__1::tuple.251" = type { %"struct.std::__1::__tuple_impl.252" }
%"struct.std::__1::__tuple_impl.252" = type { %"class.std::__1::__tuple_leaf.253", %"class.std::__1::__tuple_leaf.254" }
%"class.std::__1::__tuple_leaf.253" = type { i16* }
%"class.std::__1::__tuple_leaf.254" = type { %struct.SkPoint* }
%class.SkSTArray.255 = type { %class.SkAlignedSTStorage.256, %class.SkTArray.257 }
%class.SkAlignedSTStorage.256 = type { [8 x i8] }
%class.SkTArray.257 = type { i16*, i64 }
%class.SkSTArray.258 = type { %class.SkAlignedSTStorage.259, %class.SkTArray.260 }
%class.SkAlignedSTStorage.259 = type { [32 x i8] }
%class.SkTArray.260 = type { %struct.SkPoint*, i64 }
%class.GrClipStack = type <{ %class.GrClip, [8 x i8], %class.GrTBlockList, %class.GrTBlockList.264, %class.GrTBlockList.266, %class.GrProxyProvider*, %struct.SkIRect, %class.SkMatrixProvider*, i8, [15 x i8] }>
%class.GrClip = type { i32 (...)** }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [256 x i8] }
%class.GrTBlockList.264 = type { %class.GrSBlockAllocator.265 }
%class.GrSBlockAllocator.265 = type { [192 x i8] }
%class.GrTBlockList.266 = type { %class.GrSBlockAllocator.267 }
%class.GrSBlockAllocator.267 = type { [128 x i8] }
%class.SkSpecialSurface_Gpu = type { %class.SkSpecialSurface_Base, %class.GrSurfaceProxyView }

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN16SkSpecialSurfaceD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN23SkSpecialSurface_RasterC2ERK11SkImageInfo5sk_spI10SkPixelRefERK7SkIRectRK14SkSurfaceProps = comdat any

$_ZN23SkSpecialSurface_RasterD2Ev = comdat any

$_ZN23SkSpecialSurface_RasterD0Ev = comdat any

$_ZN23SkSpecialSurface_Raster19onMakeImageSnapshotEv = comdat any

$_ZN21SkSpecialSurface_BaseD2Ev = comdat any

$_ZN21SkSpecialSurface_BaseD0Ev = comdat any

$_ZN20SkSpecialSurface_GpuC2E5sk_spI11SkGpuDeviceE7SkIRect = comdat any

$_ZN20SkSpecialSurface_GpuD2Ev = comdat any

$_ZN20SkSpecialSurface_GpuD0Ev = comdat any

$_ZN20SkSpecialSurface_Gpu19onMakeImageSnapshotEv = comdat any

$_ZTV16SkSpecialSurface = comdat any

$_ZTV23SkSpecialSurface_Raster = comdat any

$_ZTV21SkSpecialSurface_Base = comdat any

$_ZTV20SkSpecialSurface_Gpu = comdat any

@_ZTV16SkSpecialSurface = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkSpecialSurface*)* @_ZN16SkSpecialSurfaceD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, comdat, align 8
@_ZTV23SkSpecialSurface_Raster = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkSpecialSurface_Raster*)* @_ZN23SkSpecialSurface_RasterD2Ev to i8*), i8* bitcast (void (%class.SkSpecialSurface_Raster*)* @_ZN23SkSpecialSurface_RasterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkSpecialSurface_Raster*)* @_ZN23SkSpecialSurface_Raster19onMakeImageSnapshotEv to i8*)] }, comdat, align 8
@_ZTV21SkSpecialSurface_Base = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkSpecialSurface_Base*)* @_ZN21SkSpecialSurface_BaseD2Ev to i8*), i8* bitcast (void (%class.SkSpecialSurface_Base*)* @_ZN21SkSpecialSurface_BaseD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTV20SkSpecialSurface_Gpu = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkSpecialSurface_Gpu*)* @_ZN20SkSpecialSurface_GpuD2Ev to i8*), i8* bitcast (void (%class.SkSpecialSurface_Gpu*)* @_ZN20SkSpecialSurface_GpuD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkSpecialSurface_Gpu*)* @_ZN20SkSpecialSurface_Gpu19onMakeImageSnapshotEv to i8*)] }, comdat, align 8
@switch.table._ZN20SkSpecialSurface_Gpu19onMakeImageSnapshotEv = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4

@_ZN16SkSpecialSurfaceC1ERK7SkIRectRK14SkSurfaceProps = hidden unnamed_addr alias void (%class.SkSpecialSurface*, %struct.SkIRect*, %class.SkSurfaceProps*), void (%class.SkSpecialSurface*, %struct.SkIRect*, %class.SkSurfaceProps*)* @_ZN16SkSpecialSurfaceC2ERK7SkIRectRK14SkSurfaceProps

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkSpecialSurfaceC2ERK7SkIRectRK14SkSurfaceProps(%class.SkSpecialSurface*, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkSurfaceProps* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV16SkSpecialSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %6, i32 %8, i32 0) #9
  %9 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %0, i64 0, i32 2
  %10 = bitcast %struct.SkIRect* %9 to i8*
  %11 = bitcast %struct.SkIRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 16, i1 false)
  ret void
}

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %0, i64 1
  %3 = bitcast %class.SkSpecialSurface* %2 to %class.SkCanvas**
  %4 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  ret %class.SkCanvas* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.15* noalias sret, %class.SkSpecialSurface*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*), %class.SkSpecialImage** %3, align 8
  %4 = bitcast %class.SkSpecialSurface* %1 to %class.SkSpecialSurface_Base*
  %5 = bitcast %class.SkSpecialSurface* %1 to void (%class.sk_sp.15*, %class.SkSpecialSurface_Base*)***
  %6 = load void (%class.sk_sp.15*, %class.SkSpecialSurface_Base*)**, void (%class.sk_sp.15*, %class.SkSpecialSurface_Base*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.sk_sp.15*, %class.SkSpecialSurface_Base*)*, void (%class.sk_sp.15*, %class.SkSpecialSurface_Base*)** %6, i64 3
  %8 = load void (%class.sk_sp.15*, %class.SkSpecialSurface_Base*)*, void (%class.sk_sp.15*, %class.SkSpecialSurface_Base*)** %7, align 8
  tail call void %8(%class.sk_sp.15* sret %0, %class.SkSpecialSurface_Base* %4) #9
  %9 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %1, i64 1
  %10 = bitcast %class.SkSpecialSurface* %9 to %class.SkCanvas**
  %11 = load %class.SkCanvas*, %class.SkCanvas** %10, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %10, align 8
  %12 = icmp eq %class.SkCanvas* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = bitcast %class.SkCanvas* %11 to void (%class.SkCanvas*)***
  %15 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %15, i64 1
  %17 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %16, align 8
  tail call void %17(%class.SkCanvas* nonnull %11) #9
  br label %18

18:                                               ; preds = %2, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkSpecialSurface14MakeFromBitmapERK7SkIRectR8SkBitmapRK14SkSurfaceProps(%class.sk_sp.33* noalias nocapture sret, %struct.SkIRect* dereferenceable(16), %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.16, align 8
  %6 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = sub nsw i64 %8, %11
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = sub nsw i64 %15, %18
  %20 = icmp slt i64 %12, 1
  %21 = icmp slt i64 %19, 1
  %22 = or i1 %20, %21
  br i1 %22, label %32, label %23

23:                                               ; preds = %4
  %24 = or i64 %19, %12
  %25 = add nsw i64 %24, 2147483648
  %26 = icmp ugt i64 %25, 4294967295
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2
  %29 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = tail call zeroext i1 @_Z27SkSurfaceValidateRasterInfoRK11SkImageInfom(%struct.SkImageInfo* dereferenceable(24) %28, i64 %30) #9
  br i1 %31, label %34, label %32

32:                                               ; preds = %4, %27, %23
  %33 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %0, i64 0, i32 0
  store %class.SkSpecialSurface* null, %class.SkSpecialSurface** %33, align 8
  br label %63

34:                                               ; preds = %27
  %35 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 0, i32 0
  %36 = load %class.SkPixelRef*, %class.SkPixelRef** %35, align 8
  %37 = icmp eq %class.SkPixelRef* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 1 monotonic, !noalias !2
  br label %41

41:                                               ; preds = %34, %38
  %42 = ptrtoint %class.SkPixelRef* %36 to i64
  %43 = bitcast %class.sk_sp.16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = tail call i8* @_Znwm(i64 104) #10, !noalias !5
  %45 = bitcast i8* %44 to %class.SkSpecialSurface_Raster*
  %46 = bitcast %class.sk_sp.16* %5 to i64*
  store i64 %42, i64* %46, align 8, !noalias !5
  call void @_ZN23SkSpecialSurface_RasterC2ERK11SkImageInfo5sk_spI10SkPixelRefERK7SkIRectRK14SkSurfaceProps(%class.SkSpecialSurface_Raster* nonnull %45, %struct.SkImageInfo* dereferenceable(24) %28, %class.sk_sp.16* nonnull %5, %struct.SkIRect* dereferenceable(16) %1, %class.SkSurfaceProps* dereferenceable(8) %3) #9, !noalias !5
  %47 = ptrtoint i8* %44 to i64
  %48 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %5, i64 0, i32 0
  %49 = load %class.SkPixelRef*, %class.SkPixelRef** %48, align 8, !noalias !5
  %50 = icmp eq %class.SkPixelRef* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %41
  %52 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %49, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel, !noalias !5
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = bitcast %class.SkPixelRef* %49 to %class.SkRefCntBase*
  %57 = bitcast %class.SkPixelRef* %49 to void (%class.SkRefCntBase*)***
  %58 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %57, align 8, !noalias !5
  %59 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, i64 2
  %60 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, align 8, !noalias !5
  call void %60(%class.SkRefCntBase* nonnull %56) #9, !noalias !5
  br label %61

61:                                               ; preds = %41, %51, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  %62 = bitcast %class.sk_sp.33* %0 to i64*
  store i64 %47, i64* %62, align 8
  br label %63

63:                                               ; preds = %61, %32
  ret void
}

declare zeroext i1 @_Z27SkSurfaceValidateRasterInfoRK11SkImageInfom(%struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkSpecialSurface10MakeRasterERK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.33* noalias nocapture sret, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.16, align 8
  %5 = alloca %class.sk_sp.16, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = tail call zeroext i1 @_Z27SkSurfaceValidateRasterInfoRK11SkImageInfom(%struct.SkImageInfo* dereferenceable(24) %1, i64 -1) #9
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %0, i64 0, i32 0
  store %class.SkSpecialSurface* null, %class.SkSpecialSurface** %10, align 8
  br label %64

11:                                               ; preds = %3
  %12 = bitcast %class.sk_sp.16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %5, i64 0, i32 0
  store %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*), %class.SkPixelRef** %13, align 8
  call void @_ZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfom(%class.sk_sp.16* nonnull sret %5, %struct.SkImageInfo* dereferenceable(24) %1, i64 0) #9
  %14 = load %class.SkPixelRef*, %class.SkPixelRef** %13, align 8
  %15 = icmp eq %class.SkPixelRef* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %0, i64 0, i32 0
  store %class.SkSpecialSurface* null, %class.SkSpecialSurface** %17, align 8
  br label %63

18:                                               ; preds = %11
  %19 = ptrtoint %class.SkPixelRef* %14 to i64
  %20 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %22 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = shl nuw i64 %26, 32
  %28 = zext i32 %23 to i64
  %29 = or i64 %27, %28
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %30, align 8
  store i64 %29, i64* %21, align 8
  %31 = bitcast %class.sk_sp.16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31)
  %32 = call i8* @_Znwm(i64 104) #10, !noalias !8
  %33 = bitcast i8* %32 to %class.SkSpecialSurface_Raster*
  store %class.SkPixelRef* null, %class.SkPixelRef** %13, align 8, !noalias !8
  %34 = bitcast %class.sk_sp.16* %4 to i64*
  store i64 %19, i64* %34, align 8, !noalias !8
  call void @_ZN23SkSpecialSurface_RasterC2ERK11SkImageInfo5sk_spI10SkPixelRefERK7SkIRectRK14SkSurfaceProps(%class.SkSpecialSurface_Raster* nonnull %33, %struct.SkImageInfo* dereferenceable(24) %1, %class.sk_sp.16* nonnull %4, %struct.SkIRect* nonnull dereferenceable(16) %7, %class.SkSurfaceProps* dereferenceable(8) %2) #9, !noalias !8
  %35 = ptrtoint i8* %32 to i64
  %36 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %4, i64 0, i32 0
  %37 = load %class.SkPixelRef*, %class.SkPixelRef** %36, align 8, !noalias !8
  %38 = icmp eq %class.SkPixelRef* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %18
  %40 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %37, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel, !noalias !8
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = bitcast %class.SkPixelRef* %37 to %class.SkRefCntBase*
  %45 = bitcast %class.SkPixelRef* %37 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8, !noalias !8
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8, !noalias !8
  call void %48(%class.SkRefCntBase* nonnull %44) #9, !noalias !8
  br label %49

49:                                               ; preds = %18, %39, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31)
  %50 = bitcast %class.sk_sp.33* %0 to i64*
  store i64 %35, i64* %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  %51 = load %class.SkPixelRef*, %class.SkPixelRef** %13, align 8
  %52 = icmp eq %class.SkPixelRef* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkPixelRef* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkPixelRef* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  call void %62(%class.SkRefCntBase* nonnull %58) #9
  br label %63

63:                                               ; preds = %16, %49, %53, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  br label %64

64:                                               ; preds = %63, %9
  ret void
}

declare void @_ZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfom(%class.sk_sp.16* sret, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkSpecialSurface16MakeRenderTargetEP18GrRecordingContextRK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.33* noalias nocapture sret, %class.GrRecordingContext*, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.230, align 8
  %6 = alloca %class.sk_sp.230, align 8
  %7 = icmp eq %class.GrRecordingContext* %1, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %0, i64 0, i32 0
  store %class.SkSpecialSurface* null, %class.SkSpecialSurface** %9, align 8
  br label %55

10:                                               ; preds = %4
  %11 = bitcast %class.sk_sp.230* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %6, i64 0, i32 0
  store %class.SkGpuDevice* inttoptr (i64 -6148914691236517206 to %class.SkGpuDevice*), %class.SkGpuDevice** %12, align 8
  call void @_ZN11SkGpuDevice4MakeEP18GrRecordingContext10SkBudgetedRK11SkImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOriginRK14SkSurfacePropsN15SkBaseGpuDevice12InitContentsE(%class.sk_sp.230* nonnull sret %6, %class.GrRecordingContext* nonnull %1, i1 zeroext true, %struct.SkImageInfo* dereferenceable(24) %2, i32 0, i32 1, i1 zeroext false, i1 zeroext false, i32 1, %class.SkSurfaceProps* dereferenceable(8) %3, i32 1) #9
  %13 = load %class.SkGpuDevice*, %class.SkGpuDevice** %12, align 8
  %14 = icmp eq %class.SkGpuDevice* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %0, i64 0, i32 0
  store %class.SkSpecialSurface* null, %class.SkSpecialSurface** %16, align 8
  br label %54

17:                                               ; preds = %10
  %18 = ptrtoint %class.SkGpuDevice* %13 to i64
  %19 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1
  %20 = bitcast %struct.SkISize* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %class.sk_sp.230* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = call i8* @_Znwm(i64 64) #10, !noalias !11
  %24 = bitcast i8* %23 to %class.SkSpecialSurface_Gpu*
  store %class.SkGpuDevice* null, %class.SkGpuDevice** %12, align 8, !noalias !11
  %25 = bitcast %class.sk_sp.230* %5 to i64*
  store i64 %18, i64* %25, align 8, !noalias !11
  call void @_ZN20SkSpecialSurface_GpuC2E5sk_spI11SkGpuDeviceE7SkIRect(%class.SkSpecialSurface_Gpu* nonnull %24, %class.sk_sp.230* nonnull %5, i64 0, i64 %21) #9, !noalias !11
  %26 = ptrtoint i8* %23 to i64
  %27 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %5, i64 0, i32 0
  %28 = load %class.SkGpuDevice*, %class.SkGpuDevice** %27, align 8, !noalias !11
  %29 = icmp eq %class.SkGpuDevice* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %17
  %31 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel, !noalias !11
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %class.SkGpuDevice* %28 to %class.SkRefCntBase*
  %36 = bitcast %class.SkGpuDevice* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8, !noalias !11
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8, !noalias !11
  call void %39(%class.SkRefCntBase* nonnull %35) #9, !noalias !11
  br label %40

40:                                               ; preds = %17, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  %41 = bitcast %class.sk_sp.33* %0 to i64*
  store i64 %26, i64* %41, align 8
  %42 = load %class.SkGpuDevice*, %class.SkGpuDevice** %12, align 8
  %43 = icmp eq %class.SkGpuDevice* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %class.SkGpuDevice* %42 to %class.SkRefCntBase*
  %50 = bitcast %class.SkGpuDevice* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  call void %53(%class.SkRefCntBase* nonnull %49) #9
  br label %54

54:                                               ; preds = %15, %40, %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %55

55:                                               ; preds = %54, %8
  ret void
}

declare void @_ZN11SkGpuDevice4MakeEP18GrRecordingContext10SkBudgetedRK11SkImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOriginRK14SkSurfacePropsN15SkBaseGpuDevice12InitContentsE(%class.sk_sp.230* sret, %class.GrRecordingContext*, i1 zeroext, %struct.SkImageInfo* dereferenceable(24), i32, i32, i1 zeroext, i1 zeroext, i32, %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkSpecialSurfaceD0Ev(%class.SkSpecialSurface*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.SkSpecialSurface* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23SkSpecialSurface_RasterC2ERK11SkImageInfo5sk_spI10SkPixelRefERK7SkIRectRK14SkSurfaceProps(%class.SkSpecialSurface_Raster*, %struct.SkImageInfo* dereferenceable(24), %class.sk_sp.16*, %struct.SkIRect* dereferenceable(16), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.sk_sp.16, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV16SkSpecialSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %0, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %11, i32 %13, i32 0) #9
  %14 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %0, i64 0, i32 0, i32 0, i32 2
  %15 = bitcast %struct.SkIRect* %14 to i8*
  %16 = bitcast %struct.SkIRect* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 16, i1 false) #9
  %17 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %0, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::unique_ptr.9"* %17 to i64*
  store i64 0, i64* %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23SkSpecialSurface_Raster, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %19 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %19) #9
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %24 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %23) #9
  %25 = sext i32 %24 to i64
  %26 = mul nsw i64 %25, %22
  %27 = icmp ult i64 %26, 2147483648
  %28 = select i1 %27, i64 %26, i64 0
  %29 = tail call zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap* %19, %struct.SkImageInfo* dereferenceable(24) %1, i64 %28) #9
  %30 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %2, i64 0, i32 0
  %31 = bitcast %class.sk_sp.16* %2 to i64*
  %32 = load i64, i64* %31, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %30, align 8
  %33 = bitcast %class.sk_sp.16* %6 to i64*
  store i64 %32, i64* %33, align 8
  call void @_ZN8SkBitmap11setPixelRefE5sk_spI10SkPixelRefEii(%class.SkBitmap* %19, %class.sk_sp.16* nonnull %6, i32 0, i32 0) #9
  %34 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %6, i64 0, i32 0
  %35 = load %class.SkPixelRef*, %class.SkPixelRef** %34, align 8
  %36 = icmp eq %class.SkPixelRef* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %5
  %38 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.SkPixelRef* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.SkPixelRef* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  call void %46(%class.SkRefCntBase* nonnull %42) #9
  br label %47

47:                                               ; preds = %5, %37, %41
  %48 = call i8* @_Znwm(i64 3232) #10
  %49 = bitcast i8* %48 to %class.SkCanvas*
  call void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas* nonnull %49, %class.SkBitmap* dereferenceable(56) %19, %class.SkSurfaceProps* dereferenceable(8) %11) #9
  %50 = ptrtoint i8* %48 to i64
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %17, i64 0, i32 0, i32 0, i32 0
  %52 = load %class.SkCanvas*, %class.SkCanvas** %51, align 8
  store i64 %50, i64* %18, align 8
  %53 = icmp eq %class.SkCanvas* %52, null
  %54 = bitcast i8* %48 to %class.SkCanvas*
  br i1 %53, label %61, label %55

55:                                               ; preds = %47
  %56 = bitcast %class.SkCanvas* %52 to void (%class.SkCanvas*)***
  %57 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %57, i64 1
  %59 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %58, align 8
  call void %59(%class.SkCanvas* nonnull %52) #9
  %60 = load %class.SkCanvas*, %class.SkCanvas** %51, align 8
  br label %61

61:                                               ; preds = %55, %47
  %62 = phi %class.SkCanvas* [ %60, %55 ], [ %54, %47 ]
  %63 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #9
  %64 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = sitofp i32 %65 to float
  %67 = insertelement <2 x float> undef, float %66, i32 0
  %68 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = sitofp i32 %69 to float
  %71 = insertelement <2 x float> %67, float %70, i32 1
  %72 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = sitofp i32 %73 to float
  %75 = insertelement <2 x float> undef, float %74, i32 0
  %76 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %77 = load i32, i32* %76, align 4
  %78 = sitofp i32 %77 to float
  %79 = insertelement <2 x float> %75, float %78, i32 1
  %80 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %71, <2 x float>* %80, align 8
  %81 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %79, <2 x float>* %81, align 8
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %62, %struct.SkRect* nonnull dereferenceable(16) %8, i32 1, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #9
  ret void
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #1

declare void @_ZN8SkBitmap11setPixelRefE5sk_spI10SkPixelRefEii(%class.SkBitmap*, %class.sk_sp.16*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23SkSpecialSurface_RasterD2Ev(%class.SkSpecialSurface_Raster*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23SkSpecialSurface_Raster, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %3) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21SkSpecialSurface_Base, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.SkCanvas*, %class.SkCanvas** %4, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %4, align 8
  %6 = icmp eq %class.SkCanvas* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.SkCanvas* %5 to void (%class.SkCanvas*)***
  %9 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %9, i64 1
  %11 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %10, align 8
  tail call void %11(%class.SkCanvas* nonnull %5) #9
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23SkSpecialSurface_RasterD0Ev(%class.SkSpecialSurface_Raster*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23SkSpecialSurface_Raster, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %3) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21SkSpecialSurface_Base, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.SkCanvas*, %class.SkCanvas** %4, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %4, align 8
  %6 = icmp eq %class.SkCanvas* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.SkCanvas* %5 to void (%class.SkCanvas*)***
  %9 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %9, i64 1
  %11 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %10, align 8
  tail call void %11(%class.SkCanvas* nonnull %5) #9
  br label %12

12:                                               ; preds = %1, %7
  %13 = bitcast %class.SkSpecialSurface_Raster* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23SkSpecialSurface_Raster19onMakeImageSnapshotEv(%class.sk_sp.15* noalias sret, %class.SkSpecialSurface_Raster*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %1, i64 0, i32 0, i32 0, i32 2
  %4 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %1, i64 0, i32 1
  %5 = getelementptr inbounds %class.SkSpecialSurface_Raster, %class.SkSpecialSurface_Raster* %1, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.15* sret %0, %struct.SkIRect* dereferenceable(16) %3, %class.SkBitmap* dereferenceable(56) %4, %class.SkSurfaceProps* dereferenceable(8) %5) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21SkSpecialSurface_BaseD2Ev(%class.SkSpecialSurface_Base*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialSurface_Base, %class.SkSpecialSurface_Base* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21SkSpecialSurface_Base, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSpecialSurface_Base, %class.SkSpecialSurface_Base* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %3, align 8
  %5 = icmp eq %class.SkCanvas* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkCanvas* %4 to void (%class.SkCanvas*)***
  %8 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %8, i64 1
  %10 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %9, align 8
  tail call void %10(%class.SkCanvas* nonnull %4) #9
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21SkSpecialSurface_BaseD0Ev(%class.SkSpecialSurface_Base*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

declare void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #8

declare void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.15* sret, %struct.SkIRect* dereferenceable(16), %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20SkSpecialSurface_GpuC2E5sk_spI11SkGpuDeviceE7SkIRect(%class.SkSpecialSurface_Gpu*, %class.sk_sp.230*, i64, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.sk_sp.1, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %8 = trunc i64 %2 to i32
  %9 = lshr i64 %2, 32
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %1, i64 0, i32 0
  %12 = load %class.SkGpuDevice*, %class.SkGpuDevice** %11, align 8
  %13 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %13, align 4
  %14 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV16SkSpecialSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %12, i64 0, i32 0, i32 0, i32 4, i32 0
  %17 = load i32, i32* %16, align 4
  tail call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* %15, i32 %17, i32 0) #9
  %18 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast %struct.SkIRect* %18 to i64*
  store i64 %2, i64* %19, align 4
  %20 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 2, i32 2
  %21 = bitcast i32* %20 to i64*
  store i64 %3, i64* %21, align 4
  %22 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %0, i64 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::unique_ptr.9"* %22 to i64*
  store i64 0, i64* %23, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV20SkSpecialSurface_Gpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %24 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %0, i64 0, i32 1
  %25 = load %class.SkGpuDevice*, %class.SkGpuDevice** %11, align 8
  %26 = bitcast %class.SkGpuDevice* %25 to void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)***
  %27 = load void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)**, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*** %26, align 16
  %28 = getelementptr inbounds void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)** %27, i64 61
  %29 = load void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)** %28, align 8
  tail call void %29(%class.GrSurfaceProxyView* sret %24, %class.SkGpuDevice* %25) #9
  %30 = bitcast %class.sk_sp.1* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = tail call i8* @_Znwm(i64 3232) #10
  %32 = bitcast i8* %31 to %class.SkCanvas*
  %33 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %5, i64 0, i32 0
  %34 = load %class.SkGpuDevice*, %class.SkGpuDevice** %11, align 8
  store %class.SkGpuDevice* null, %class.SkGpuDevice** %11, align 8
  %35 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %34, i64 0, i32 0, i32 0
  store %class.SkBaseDevice* %35, %class.SkBaseDevice** %33, align 8
  call void @_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE(%class.SkCanvas* nonnull %32, %class.sk_sp.1* nonnull %5) #9
  %36 = load %class.SkBaseDevice*, %class.SkBaseDevice** %33, align 8
  %37 = icmp eq %class.SkBaseDevice* %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %4
  %39 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = bitcast %class.SkBaseDevice* %36 to %class.SkRefCntBase*
  %44 = bitcast %class.SkBaseDevice* %36 to void (%class.SkRefCntBase*)***
  %45 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, i64 2
  %47 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, align 8
  call void %47(%class.SkRefCntBase* nonnull %43) #9
  br label %48

48:                                               ; preds = %4, %38, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  %49 = ptrtoint i8* %31 to i64
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %22, i64 0, i32 0, i32 0, i32 0
  %51 = load %class.SkCanvas*, %class.SkCanvas** %50, align 8
  store i64 %49, i64* %23, align 8
  %52 = icmp eq %class.SkCanvas* %51, null
  %53 = bitcast i8* %31 to %class.SkCanvas*
  br i1 %52, label %60, label %54

54:                                               ; preds = %48
  %55 = bitcast %class.SkCanvas* %51 to void (%class.SkCanvas*)***
  %56 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %56, i64 1
  %58 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %57, align 8
  call void %58(%class.SkCanvas* nonnull %51) #9
  %59 = load %class.SkCanvas*, %class.SkCanvas** %50, align 8
  br label %60

60:                                               ; preds = %54, %48
  %61 = phi %class.SkCanvas* [ %59, %54 ], [ %53, %48 ]
  %62 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #9
  %63 = sitofp i32 %8 to float
  %64 = insertelement <2 x float> undef, float %63, i32 0
  %65 = sitofp i32 %10 to float
  %66 = insertelement <2 x float> %64, float %65, i32 1
  %67 = trunc i64 %3 to i32
  %68 = sitofp i32 %67 to float
  %69 = insertelement <2 x float> undef, float %68, i32 0
  %70 = lshr i64 %3, 32
  %71 = trunc i64 %70 to i32
  %72 = sitofp i32 %71 to float
  %73 = insertelement <2 x float> %69, float %72, i32 1
  %74 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %66, <2 x float>* %74, align 8
  %75 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %73, <2 x float>* %75, align 8
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %61, %struct.SkRect* nonnull dereferenceable(16) %7, i32 1, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20SkSpecialSurface_GpuD2Ev(%class.SkSpecialSurface_Gpu*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV20SkSpecialSurface_Gpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %3, align 8
  %5 = icmp eq %class.GrSurfaceProxy* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %4, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkNVRefCnt.111, %class.SkNVRefCnt.111* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.SkNVRefCnt.111, %class.SkNVRefCnt.111* %7, i64 -2
  %13 = bitcast %class.SkNVRefCnt.111* %12 to %class.GrSurfaceProxy*
  %14 = bitcast %class.SkNVRefCnt.111* %12 to void (%class.GrSurfaceProxy*)***
  %15 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %15, i64 1
  %17 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %16, align 8
  tail call void %17(%class.GrSurfaceProxy* nonnull %13) #9
  br label %18

18:                                               ; preds = %1, %6, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21SkSpecialSurface_Base, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %19 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %class.SkCanvas*, %class.SkCanvas** %19, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %19, align 8
  %21 = icmp eq %class.SkCanvas* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = bitcast %class.SkCanvas* %20 to void (%class.SkCanvas*)***
  %24 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %24, i64 1
  %26 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %25, align 8
  tail call void %26(%class.SkCanvas* nonnull %20) #9
  br label %27

27:                                               ; preds = %18, %22
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20SkSpecialSurface_GpuD0Ev(%class.SkSpecialSurface_Gpu*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV20SkSpecialSurface_Gpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %3, align 8
  %5 = icmp eq %class.GrSurfaceProxy* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %4, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkNVRefCnt.111, %class.SkNVRefCnt.111* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.SkNVRefCnt.111, %class.SkNVRefCnt.111* %7, i64 -2
  %13 = bitcast %class.SkNVRefCnt.111* %12 to %class.GrSurfaceProxy*
  %14 = bitcast %class.SkNVRefCnt.111* %12 to void (%class.GrSurfaceProxy*)***
  %15 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %15, i64 1
  %17 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %16, align 8
  tail call void %17(%class.GrSurfaceProxy* nonnull %13) #9
  br label %18

18:                                               ; preds = %11, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21SkSpecialSurface_Base, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %19 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %class.SkCanvas*, %class.SkCanvas** %19, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %19, align 8
  %21 = icmp eq %class.SkCanvas* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = bitcast %class.SkCanvas* %20 to void (%class.SkCanvas*)***
  %24 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %24, i64 1
  %26 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %25, align 8
  tail call void %26(%class.SkCanvas* nonnull %20) #9
  br label %27

27:                                               ; preds = %18, %22
  %28 = bitcast %class.SkSpecialSurface_Gpu* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20SkSpecialSurface_Gpu19onMakeImageSnapshotEv(%class.sk_sp.15* noalias sret, %class.SkSpecialSurface_Gpu*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.SkImageInfo, align 8
  %4 = alloca %class.GrSurfaceProxyView, align 8
  %5 = alloca %class.sk_sp.31, align 8
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %1, i64 0, i32 1
  %8 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 0, i32 0
  %9 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %8, align 8
  %10 = icmp eq %class.GrSurfaceProxy* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = bitcast %class.GrSurfaceProxy* %9 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %13 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %12, align 8
  %14 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %13, i64 3
  %15 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %14, align 8
  %16 = tail call %class.GrTextureProxy* %15(%class.GrSurfaceProxy* nonnull %9) #9
  %17 = icmp eq %class.GrTextureProxy* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %2, %11
  %19 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %19, align 8
  br label %102

20:                                               ; preds = %11
  %21 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #9
  %22 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %class.SkCanvas*, %class.SkCanvas** %22, align 8
  call void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* nonnull sret %3, %class.SkCanvas* %23) #9
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp ult i32 %25, 21
  br i1 %26, label %28, label %27

27:                                               ; preds = %20
  call void @llvm.trap() #9
  unreachable

28:                                               ; preds = %20
  %29 = sext i32 %25 to i64
  %30 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZN20SkSpecialSurface_Gpu19onMakeImageSnapshotEv, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %33 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8
  %34 = icmp eq %class.SkColorSpace* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %class.SkColorSpace* %33 to i8*
  call void @_ZdlPv(i8* %40) #10
  br label %41

41:                                               ; preds = %28, %35, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #9
  %42 = load %class.SkCanvas*, %class.SkCanvas** %22, align 8
  %43 = bitcast %class.SkCanvas* %42 to %class.GrRecordingContext* (%class.SkCanvas*)***
  %44 = load %class.GrRecordingContext* (%class.SkCanvas*)**, %class.GrRecordingContext* (%class.SkCanvas*)*** %43, align 8
  %45 = getelementptr inbounds %class.GrRecordingContext* (%class.SkCanvas*)*, %class.GrRecordingContext* (%class.SkCanvas*)** %44, i64 3
  %46 = load %class.GrRecordingContext* (%class.SkCanvas*)*, %class.GrRecordingContext* (%class.SkCanvas*)** %45, align 8
  %47 = call %class.GrRecordingContext* %46(%class.SkCanvas* %42) #9
  %48 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %1, i64 0, i32 0, i32 0, i32 2
  %49 = bitcast %class.GrSurfaceProxyView* %7 to i64*
  %50 = load i64, i64* %49, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %8, align 8
  %51 = bitcast %class.GrSurfaceProxyView* %4 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 1
  %53 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %1, i64 0, i32 1, i32 1
  %54 = load i32, i32* %53, align 8
  store i32 %54, i32* %52, align 8
  %55 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 2, i32 0
  %56 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %1, i64 0, i32 1, i32 2, i32 0
  %57 = load i16, i16* %56, align 2
  store i16 %57, i16* %55, align 4
  %58 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #9
  %59 = load %class.SkCanvas*, %class.SkCanvas** %22, align 8
  call void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* nonnull sret %6, %class.SkCanvas* %59) #9
  %60 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %5, i64 0, i32 0
  %61 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %62 = load %class.SkColorSpace*, %class.SkColorSpace** %61, align 8, !noalias !14
  %63 = icmp eq %class.SkColorSpace* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %41
  %65 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 1 monotonic, !noalias !14
  br label %67

67:                                               ; preds = %41, %64
  store %class.SkColorSpace* %62, %class.SkColorSpace** %60, align 8, !alias.scope !14
  %68 = getelementptr inbounds %class.SkSpecialSurface_Gpu, %class.SkSpecialSurface_Gpu* %1, i64 0, i32 0, i32 0, i32 1
  call void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.15* sret %0, %class.GrRecordingContext* %47, %struct.SkIRect* dereferenceable(16) %48, i32 0, %class.GrSurfaceProxyView* nonnull %4, i32 %31, %class.sk_sp.31* nonnull %5, %class.SkSurfaceProps* dereferenceable(8) %68, i32 2) #9
  %69 = load %class.SkColorSpace*, %class.SkColorSpace** %60, align 8
  %70 = icmp eq %class.SkColorSpace* %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = bitcast %class.SkColorSpace* %69 to i8*
  call void @_ZdlPv(i8* %76) #10
  br label %77

77:                                               ; preds = %67, %71, %75
  %78 = load %class.SkColorSpace*, %class.SkColorSpace** %61, align 8
  %79 = icmp eq %class.SkColorSpace* %78, null
  br i1 %79, label %86, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = bitcast %class.SkColorSpace* %78 to i8*
  call void @_ZdlPv(i8* %85) #10
  br label %86

86:                                               ; preds = %77, %80, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #9
  %87 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 0, i32 0
  %88 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %87, align 8
  %89 = icmp eq %class.GrSurfaceProxy* %88, null
  br i1 %89, label %102, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %88, i64 0, i32 1
  %92 = getelementptr inbounds %class.SkNVRefCnt.111, %class.SkNVRefCnt.111* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %102

95:                                               ; preds = %90
  %96 = getelementptr inbounds %class.SkNVRefCnt.111, %class.SkNVRefCnt.111* %91, i64 -2
  %97 = bitcast %class.SkNVRefCnt.111* %96 to %class.GrSurfaceProxy*
  %98 = bitcast %class.SkNVRefCnt.111* %96 to void (%class.GrSurfaceProxy*)***
  %99 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %99, i64 1
  %101 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %100, align 8
  call void %101(%class.GrSurfaceProxy* nonnull %97) #9
  br label %102

102:                                              ; preds = %95, %90, %86, %18
  ret void
}

declare void @_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE(%class.SkCanvas*, %class.sk_sp.1*) unnamed_addr #1

declare void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* sret, %class.SkCanvas*) local_unnamed_addr #1

declare void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.15* sret, %class.GrRecordingContext*, %struct.SkIRect* dereferenceable(16), i32, %class.GrSurfaceProxyView*, i32, %class.sk_sp.31*, %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI10SkPixelRefE5sk_spIT_EPS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI10SkPixelRefE5sk_spIT_EPS2_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_Z10sk_make_spI23SkSpecialSurface_RasterJRK11SkImageInfo5sk_spI10SkPixelRefERK7SkIRectRK14SkSurfacePropsEES4_IT_EDpOT0_: argument 0"}
!7 = distinct !{!7, !"_Z10sk_make_spI23SkSpecialSurface_RasterJRK11SkImageInfo5sk_spI10SkPixelRefERK7SkIRectRK14SkSurfacePropsEES4_IT_EDpOT0_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_Z10sk_make_spI23SkSpecialSurface_RasterJRK11SkImageInfo5sk_spI10SkPixelRefERK7SkIRectRK14SkSurfacePropsEES4_IT_EDpOT0_: argument 0"}
!10 = distinct !{!10, !"_Z10sk_make_spI23SkSpecialSurface_RasterJRK11SkImageInfo5sk_spI10SkPixelRefERK7SkIRectRK14SkSurfacePropsEES4_IT_EDpOT0_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_Z10sk_make_spI20SkSpecialSurface_GpuJ5sk_spI11SkGpuDeviceERK7SkIRectEES1_IT_EDpOT0_: argument 0"}
!13 = distinct !{!13, !"_Z10sk_make_spI20SkSpecialSurface_GpuJ5sk_spI11SkGpuDeviceERK7SkIRectEES1_IT_EDpOT0_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!16 = distinct !{!16, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!17 = distinct !{!17, !18, !"_ZNK11SkImageInfo13refColorSpaceEv: argument 0"}
!18 = distinct !{!18, !"_ZNK11SkImageInfo13refColorSpaceEv"}
